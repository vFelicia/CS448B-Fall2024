00:00 - hello everyone welcome back to show code
00:02 - today I'm going to be teaching you how
00:04 - to create hues and manipulate lists in
00:07 - Python I have lots of experience in
00:09 - Python and by the end of this video you
00:11 - will have a great understanding about
00:13 - less sympathy and how to use them okay
00:16 - now let's learn about lists lists are
00:19 - one of four different collection data
00:20 - types
00:21 - they are lists tuples sets and
00:24 - dictionaries they're just collections of
00:26 - data types basically so for example they
00:30 - can hold strings integers and even other
00:32 - collections all of these are useful in
00:34 - different situations and it is key that
00:36 - you learn about all of their properties
00:38 - so you know which one to use for your
00:40 - program to make as effective as possible
00:43 - so a list is a collection which is
00:45 - ordered and changeable this means that
00:47 - the items in the list will stay and
00:49 - beyond of it you put them in and you are
00:51 - able to change the list items partway
00:54 - through your program let's get on to
00:56 - some examples of lists now okay so as
00:59 - you know the first thing we want to do
01:01 - is open up idle just create a new file
01:07 - ok so let's create our first list so
01:11 - I'll just call mine fruit equals square
01:16 - bracket and then you can fill this with
01:19 - whatever you want as long it's like a
01:21 - valid data type so I'm just going to
01:23 - have some strings in here so apples
01:25 - comma bananas comma what else is our
01:33 - oranges and one more Kiwis and then
01:39 - close off with the square bracket and
01:42 - then we can print fruit fruit and save
01:48 - that and now if we run it we can see we
01:52 - get apples bananas oranges and Kiwis so
01:55 - you can just print them out as usual as
01:57 - you would with any other variable and
02:00 - notice how they're in the exact same
02:02 - order as when you wrote out so apples is
02:05 - first then bananas is second oranges are
02:09 - third and Kiwis are four this is a key
02:11 - property to lists
02:13 - they are ordered so as you can see to
02:18 - make a list he surrounds your data in
02:20 - square brackets and you separate your
02:22 - data with these commas here to show that
02:25 - there different items and we can just
02:26 - print a list like any other variable
02:28 - okay now let's talk about accessing the
02:31 - items in a list we can access them by
02:33 - referring to their index number what I
02:36 - mean by this is each item is numbered
02:39 - and the first item has an index of zero
02:41 - and the second one has an index of one
02:44 - and so on and indexes start at zero so
02:47 - if I just make a comment up here for you
02:49 - guys
02:49 - Oh didn't mean to do that up here so if
02:53 - we do by just top over so this is index
02:58 - 0 1 2 3 we can access them by writing
03:07 - the list name so let's just print route
03:11 - and then in square brackets right next
03:14 - to it will print one run it as you can
03:18 - see we get bananas because we're
03:20 - accessing the first index which is
03:23 - bananas because one is right here so if
03:25 - we change this to 0 save it and run it
03:28 - we get apples because index 0 0 2 apples
03:34 - we also have negative indexing so you
03:37 - just do it exactly the same as you would
03:39 - leave just normal indexing apart from
03:41 - it's like almost reversed so this last
03:45 - item over here is index minus 1 this
03:50 - one's minus 2 it's vital so it's
03:55 - basically just reversed and we can do
03:57 - exactly the same thing we can print
04:00 - fruit minus 1 there we go we got the
04:06 - last item in the list in negative
04:08 - indexing minus 1 is the last item by the
04:12 - way if you are enjoying the video at the
04:14 - moment or are finding it useful make
04:16 - sure to give a video I like it really
04:18 - does help me out we can specify a range
04:21 - of indexes with a start number and an
04:23 - end number we use for start index
04:26 - followed by a colon and
04:27 - the end index so if we just do it like
04:29 - this print route 1 : 4 even though we
04:37 - don't actually have the 4th index it's
04:39 - still going to print out and I'll
04:41 - explain why we get bananas oranges and
04:44 - Kiwis it started at 1 printed out the
04:48 - first index second index and third index
04:51 - and you might think but what about the
04:53 - fourth index what never actually goes to
04:55 - the fourth index the fourth index is not
04:58 - included if we change this to free it
05:01 - just prints out bananas and oranges and
05:04 - it never goes to number 3 so number 3
05:06 - isn't included I'm going to show you a
05:09 - common error you find with list indexing
05:12 - so if you print fruit sex we're going to
05:17 - get an error because 6 doesn't exist so
05:20 - if we were in it we get list index out
05:22 - of range but index 6 it's not part of
05:26 - this list it doesn't exist back to you
05:29 - index ranges if we leave out the first
05:32 - value when we're doing index ranges so
05:35 - if we just print fruit and then go on
05:40 - free it will just stop oh forgot to
05:46 - close the brackets so we need to get rid
05:50 - of this there we go
05:52 - it'll just start at 0 and then go up to
05:56 - free but it doesn't print out free so
05:59 - missing up a start value is literally
06:02 - just a short way of saying 0 2 3 and we
06:04 - can also miss out the last value so we
06:06 - can print fruit to go on and that'll
06:13 - print out everything from 2 to the end
06:15 - which is only Kiwis and oranges let's
06:18 - now move on to modifying lists which is
06:22 - another key property they're not static
06:24 - and are not set in stone you can modify
06:27 - them partway through the program so to
06:29 - change the value of an item we could
06:32 - just go like this fruit and then get the
06:36 - index so let's change oranges so fruit 2
06:40 - because 2 here
06:41 - two equals satsumas so fruit 2 equals
06:47 - Satsuma and now we print fruit
06:51 - run it and you can see we now get apples
06:55 - bananas and oranges has been replaced
06:57 - with Satsuma and we still get Kiwis to
07:02 - modify something get the West index and
07:05 - Venu just assign a different value to
07:08 - ballast index the original item is now
07:11 - overwritten by the new value we can also
07:14 - check if an item is part of a list by
07:17 - using the in operator so we can do if
07:21 - Satsuma in fruit print Satsuma is in
07:30 - fruit fruit there we go and then we get
07:36 - Satsuma is in fruit because Satsuma has
07:39 - been modified into this fruit list its
07:42 - replaced oranges it's checking if
07:44 - Satsuma is in fruit which is so let's
07:46 - print Satsuma is in fruit let's also do
07:49 - another one if oranges in root print
07:57 - oranges is in fruit run it and as you
08:03 - can see we don't get anything because
08:05 - oranges is no longer and through it was
08:07 - changed up here and then if oranges is
08:10 - in fruit which isn't so let's just miss
08:13 - out this and ignore it
08:14 - let's now talk about list functions for
08:19 - a choir for you we're not going to cover
08:20 - them all in this video but we are going
08:22 - to go through some of the important ones
08:24 - so we have the append function which
08:28 - just adds one item onto the end of a
08:31 - list so we could do fruit dots append
08:36 - another value print route and as you can
08:44 - see it's printed up a list and then it's
08:46 - added on another value now to keep this
08:50 - clean I'm just going to comment all this
08:52 - out if you're wondering how to do that
08:55 - like something press alt and then press
08:57 - free and to get rid of it press alt sand
09:00 - for I accidently commented this out
09:03 - which we don't want to add an item in
09:06 - place or a certain index you use the
09:09 - insert function so root dot insert so we
09:14 - need to be indexed so I want to insert a
09:16 - let's say 1 and let's put in there the
09:20 - object which is going to be new value
09:24 - and then let's print fruit I'm going to
09:31 - actually get rid of this print statement
09:32 - right here just to keep it clean as you
09:36 - can see a new value has been inserted at
09:39 - index 1 but bananas is still there it's
09:42 - just been shifted up to the next index
09:45 - for a move function removes an item so
09:49 - if we do a fruit dot remove which is we
09:56 - need for value so let's remove Kiwis
10:01 - print route as you can see we no longer
10:07 - have Kiwis because it's searched for the
10:10 - value Kiwis it's found it and it's
10:13 - removed it we've got the pop function
10:15 - which is very similar to remove but
10:18 - instead of searching for an item itself
10:21 - it searches for the index so I'm going
10:27 - to remove the last item no in fact I'm
10:30 - going to remove the first item so fruit
10:32 - pops 0 and then we print release and run
10:39 - it and as you can see we no longer have
10:41 - apples because index 0 has been popped
10:44 - which was apples so it's basically just
10:47 - removed the first value and that's how
10:49 - you remove a value through indexes
10:52 - rather than the actual name it's useful
10:55 - for when you don't know the actual
10:56 - contents of the list but you just want
10:58 - to get rid of the first item we can also
11:01 - completely get rid of all the contents
11:03 - of the list using the clear function so
11:06 - we can do fruit dot clear
11:10 - print fruit and as you can see we've now
11:16 - got an empty list because every single
11:18 - item in the list has been completely
11:20 - removed we have the copy function for
11:25 - the copy function you would usually
11:26 - assign it to a variable so my so that's
11:30 - just call it copy fruit equals fruit
11:35 - fruits dots copy and then if we print
11:39 - out fruit and print out coffee fruit run
11:49 - it and as you can see we've now got two
11:51 - different lists that have the exact same
11:54 - values because one has been copied we
11:57 - can also reverse the order of a list so
12:01 - we can do fruit dr reverse we're going
12:08 - to also get rid of east print statements
12:12 - and then as you can see the entire
12:16 - contents of the list have been
12:17 - completely just flipped around and
12:20 - finally we have the sort function so we
12:25 - do fruit dot sort and it actually takes
12:29 - two parameters which is reverse and key
12:34 - we're not going to talk about key today
12:37 - but we are going to talk about reverse
12:39 - so if you just leave key blank what salt
12:42 - will do is they'll sort it
12:44 - alphabetically so if we run it as you
12:47 - can see a B N oh it's alphabetical but
12:53 - what I can do is write reverse equals
12:56 - true and that'll reverse it all so it
13:00 - starts with the last letter O and B a
13:04 - there are a few more list methods that
13:07 - we could talk about now but they aren't
13:09 - really necessary and some of them are
13:10 - quite advanced so I recommend you play
13:12 - around with these functions that we have
13:14 - learned yourself to get a bit more
13:16 - practice once you have done that come
13:18 - back to the video and leave a comment
13:20 - saying what you think is the most useful
13:21 - list function
13:23 - okay that's everything to do with lists
13:25 - next video we will go over a different
13:28 - collection type which is called a tuple
13:30 - make sure you subscribe in here for bail
13:32 - so you don't miss out on that do you
13:33 - have any questions or comments make sure
13:35 - to leave them down below also give this
13:37 - video a big fat thumbs up if you found
13:39 - it useful or enjoyed also subscribe for
13:41 - more python tutorials that's it from me
13:44 - Cheers goodbye