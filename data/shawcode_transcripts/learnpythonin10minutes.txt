00:00 - hello everyone welcome back to short
00:01 - code uh in this video i'm going to be
00:04 - teaching you python in 10 minutes so
00:06 - i'll try and teach you everything there
00:07 - is to know in python within 10 minutes
00:09 - it might be a bit under 10 minutes might
00:11 - be a bit over let's just see how it goes
00:13 - but anyway the first thing you want to
00:15 - do is just open up a web browser and go
00:17 - to python.org
00:19 - and then if you come into downloads and
00:21 - just hit downloads
00:23 - uh then you can download the latest
00:25 - version of python once you've got that
00:27 - installed you should be able to just
00:28 - type in idle down here now idle is the
00:31 - way you can write python code basically
00:33 - so basically to make a new python file
00:35 - just like a new word document or
00:37 - whatever just hit new file and this is
00:40 - where we'll write all our code now this
00:42 - is the shell which is where the code
00:44 - actually runs
00:45 - and this is where we write our code
00:47 - so first things first let's just get
00:50 - some output
00:52 - so to do output in python what you want
00:54 - to do is you want to type in print and
00:56 - then a bracket and then um
00:59 - and then speech marks and then type in
01:02 - anything you want so i'll just type in
01:03 - hello and then another set of speech
01:05 - marks and close the bracket and then if
01:08 - you save it then we can go to run run
01:10 - module
01:11 - and then we can see we get the output of
01:13 - hello so you could change this to
01:15 - whatever you want it might be like if i
01:17 - just type in some random stuff there you
01:19 - can hit run and then run module then you
01:21 - see we get the output that we put in
01:23 - here okay now moving on to what are
01:25 - called variables now variables are like
01:28 - a container or a box that you can store
01:30 - things in basically so we might have a
01:33 - variable called my variable
01:35 - and we set it equal to what we want it
01:38 - to store so i wanted to store
01:41 - hello
01:42 - like a box it's storing the word hello
01:45 - so if you print out my variable
01:49 - and if we run it hitting f5
01:52 - we can see we get hello outputted now
01:54 - this is different if we use speech marks
01:56 - here if we put in speech marks there we
01:58 - would get my variable which we don't
02:00 - want so if you remove the speech marks
02:03 - you'll end up printing out a variable um
02:05 - now let's learn about input so input
02:08 - is obviously a way of getting input from
02:10 - the user so i might say i don't know
02:13 - name equals input and then here we say
02:16 - how
02:17 - what
02:18 - is your name
02:20 - and then here we can just print out name
02:22 - so we're printing out a variable so
02:24 - we've got a variable here which is equal
02:26 - to the input that the user will type in
02:28 - and then we'll just print out the name
02:31 - so it what is your name my name is caleb
02:35 - and if we run that we get our name
02:36 - printed out which is caleb so next let's
02:39 - learn about changing variables say we've
02:41 - just got a name here then let's set name
02:44 - equal to i don't know jeff and then if
02:46 - we print name again
02:50 - and we run it we can see we get it's a
02:53 - just let me expand it here what's your
02:54 - name uh caleb so we get caleb printed
02:57 - out but we also get jeff printed out
02:59 - even though we're just printing name
03:00 - again um
03:02 - so basically we can change variables
03:04 - that's why they're called variables
03:05 - because they can be changed some of the
03:08 - ways you can change variables is if
03:09 - they're a number you can add and
03:10 - subtract from them or multiply or
03:12 - whatever so if we just have a num here
03:15 - and set it to 5 then we can do num plus
03:18 - equals five so basically what this plus
03:21 - equals we'll do is it'll add five onto
03:23 - it
03:23 - so if we print out num here
03:26 - so printing out num before we add five
03:28 - and print num after we've added five
03:31 - we'll get five and then we'll get ten
03:35 - so this plus equals we'll add a number
03:37 - in the same way minus equals will take
03:39 - away a number so we get zero there we
03:41 - can also do multiplication so if we had
03:43 - a star in there that time does it so
03:45 - we'll get 25
03:48 - and uh we can also divide with a slash
03:52 - and we'll get one
03:54 - num equals input so we're getting some
03:56 - input and we type in
03:58 - enter a number
04:01 - and then we have um
04:05 - num plus equals five or four whatever
04:08 - and then we print out num
04:11 - so if we run it now
04:13 - and we'll enter a number i don't know
04:15 - let's enter seven we'll get an error can
04:17 - only concatenate str not int to str
04:21 - so what that means is
04:23 - um it's to do with data types so that so
04:26 - the data type of this variable num here
04:28 - is a string now a string is basically
04:30 - just a word or a phrase now an integer
04:34 - is a number it's a whole number
04:36 - basically we also have um floating point
04:38 - numbers which is basically just a number
04:40 - with a decimal uh and the thing is in
04:43 - python you can't add together a string
04:44 - or an integer even though we inputted a
04:47 - a number here
04:49 - the reason it's a string is because all
04:51 - input in python is a string to convert
04:53 - something from a data type to another
04:55 - data type we can use casting so to cast
04:58 - this input to an integer you can just
05:00 - surround it with brackets
05:02 - and type in int before it so this will
05:04 - convert a string to an integer now if we
05:07 - run it
05:08 - enter a number if we type in two we'll
05:10 - get six
05:12 - now the thing to remember is you can't
05:14 - convert a string to an integer if the
05:15 - string itself contains anything but
05:17 - numbers so if we typed in like some
05:20 - letters here then we'll get an error
05:22 - because we can't convert this right here
05:24 - into an integer it just doesn't make
05:26 - sense now let's talk about booleans
05:28 - there's another data type in python it's
05:30 - called a boolean and it's basically just
05:32 - a true or false value so we might have
05:34 - um
05:36 - boolean
05:37 - equals true
05:38 - so and let's just print out boolean
05:41 - and we get
05:42 - a true then we can change it to false
05:47 - and then we'll get out false um now it's
05:50 - basically just a true or false true or
05:52 - false value and the main reason why we
05:54 - use booleans is in if statements so to
05:57 - compare things now let's learn about if
05:59 - statements so we might have um
06:02 - let's have uh
06:04 - i don't know uh boolean equals true
06:08 - if boolean
06:10 - equals true
06:13 - print
06:14 - boolean
06:16 - print
06:17 - boolean is
06:18 - true
06:20 - else
06:21 - print
06:22 - not true
06:25 - so if we run it we'll get boolean is
06:27 - true and then we'll change it to false
06:32 - will get not true
06:35 - now this is what we call an if statement
06:37 - it takes some data and it compares it
06:39 - against something so here we're
06:40 - comparing it to check if it's true or
06:42 - not now the double equals we have to use
06:44 - double equals here because that's
06:46 - comparing it rather than setting it
06:48 - equal to something so when we use a
06:49 - single equals we're setting it to a
06:51 - value but when we use double equals
06:53 - we're comparing it so if we change this
06:55 - up here to say like a string so just to
06:58 - hello and then we'll change this to
07:00 - string
07:01 - if string equals
07:04 - hello
07:05 - print
07:07 - let's just print yes and
07:09 - no
07:10 - so if it's equal to hello then we'll
07:12 - output yes and if it's not we'll output
07:15 - no
07:16 - so we get yes and then and then if we
07:19 - change it to uh something else and we
07:22 - run it we'll get no
07:24 - so we can also use um the different
07:26 - kinds of comparison operators here so
07:29 - you might have a greater than or equals
07:31 - less than or equals um there's loads of
07:33 - different ones you can use those are
07:34 - just some examples now moving on to
07:37 - lists and tuples now a list uh is
07:40 - basically just a very it's a data type
07:42 - and it's basically just a list of items
07:44 - so we might have um i don't know my
07:47 - variable
07:48 - and this is how you create a list with
07:50 - two square brackets and then the list
07:52 - might be filled with strings so we could
07:54 - have hello
07:56 - this
07:57 - is
08:00 - a
08:01 - list
08:02 - now we separate items in a list with
08:05 - commas if we just print out uh
08:07 - myvariable
08:11 - uh we just get the list printed out
08:12 - right here
08:13 - and then to get a particular item out of
08:15 - the list we can just uh index we can use
08:18 - these square brackets here and then to
08:20 - get the first item of the list we have
08:22 - to type in zero
08:23 - so if we run it
08:25 - we get uh hello outputted down here so
08:27 - that's the first item now to get the
08:29 - second item we have to use one
08:31 - third item we have to use two to get an
08:33 - item of a list you always have to start
08:34 - at zero basically
08:36 - so if we have two here and we run it
08:38 - we'll get is outputted because this is
08:42 - item zero this is item one and this is
08:44 - item two and to add an item to the list
08:47 - you can just do my variable
08:50 - dot append
08:51 - uh another item
08:54 - and then if we print out my variable
08:58 - and run it we'll get a list and you can
09:00 - see at the end we've got another item
09:02 - added so let's talk about while loops
09:04 - now so i'll just make a quick example so
09:07 - so we've just got this example here so
09:09 - we've got num equals 0 while num is less
09:11 - than 10 print num is less than 10 and
09:13 - then we add one to num
09:15 - so this should loop over 10 times we're
09:18 - starting at zero every loop we're going
09:20 - to add one so we get it printed out 10
09:22 - times right here a while loop basically
09:24 - continues forever unless the condition
09:26 - here
09:27 - is not true
09:29 - and this is true because num is less
09:31 - than 10 so when num gets to 10 then this
09:34 - loop will stop
09:35 - so that's while loops now let's talk
09:37 - about four loops they're a bit more
09:38 - complicated but they're pretty easy i
09:40 - guess we just have a list with some
09:42 - items in it now we can do four item in
09:45 - my list
09:46 - and then we print
09:48 - item and we run it
09:51 - we'll run through each item in the list
09:53 - and we'll print it out
09:55 - so a for loop basically just runs
09:57 - through a variable and then it'll do
10:00 - something based on that variable
10:02 - so for every item in the list we're
10:04 - going to print out the item now this
10:06 - here it doesn't have to be called item
10:08 - we could call it whatever we wanted so
10:10 - we might have just 4e in my list
10:12 - let's print out e
10:14 - then we get the exact same output now
10:17 - let's quickly talk about functions it's
10:19 - a section of code that can be used over
10:20 - and over again right here this is a
10:22 - function it's called myfunk and to
10:25 - create a function you need to write
10:27 - define and then followed by the name of
10:29 - a function then two
10:31 - circular brackets followed by a colon
10:34 - and then everything in the function
10:35 - needs to be tabbed over so if we run
10:38 - this now uh you can see that nothing
10:40 - actually happens and this is because the
10:42 - function has been defined but it's not
10:43 - actually run so to run a function or to
10:46 - call a function we just need to type in
10:48 - the name of it with some brackets on the
10:50 - end so if we save it and we run it we
10:52 - can see we get the function run
10:55 - and we can run a function as many times
10:57 - as we want so if i just copy this right
10:59 - here
11:00 - do it three times
11:02 - and we get hello this is a function
11:04 - three times over so that was a very
11:06 - brief introduction to python um i didn't
11:08 - really go into much explanation or
11:10 - detail because there's quite a lot of
11:12 - stuff to cover in 10 minutes um but
11:14 - hopefully that just gave you a little
11:15 - idea of what python's about and some of
11:17 - the things in python if you want to go
11:19 - into more detail you can check out my
11:20 - beginners playlist for python up here
11:23 - somewhere around here i don't know
11:25 - or if you want to go a little bit more
11:26 - advanced you can check out my
11:28 - intermediate playlist somewhere around
11:30 - here as well if you found this video
11:32 - useful then a like would be appreciated
11:34 - it really does help me out if you have
11:35 - any questions about python then just
11:36 - leave them in the comments below i will
11:38 - get back to you um otherwise that's it
11:40 - from me cheers and goodbye