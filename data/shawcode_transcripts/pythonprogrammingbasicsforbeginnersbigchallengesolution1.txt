00:00 - hello everyone welcome back to show code
00:02 - today we will be doing the solution to
00:05 - the big challenge I sent you two videos
00:08 - ago which was to create a grams 2 ounces
00:12 - converter if you miss that video check
00:15 - the playlist link in the description all
00:17 - the videos from this Python basics
00:19 - series will be there ok so that's just
00:23 - open up Idol that's new file ok so first
00:31 - thing we're going to one is grams equals
00:34 - input so we're going to want to get an
00:37 - input from the user so let's just type
00:40 - grab grams so now we've got the grams
00:45 - variable now what we want to do here is
00:48 - convert this to an to a vote so when
00:53 - they type in it's a number and then
00:55 - we'll be able to modify that number
00:56 - convert it into 4 ounces and stuff but
01:00 - the only problem with this is if they do
01:02 - type in a string ill give an error we
01:05 - could try something but we haven't
01:07 - covered it yeah and I don't want to
01:08 - confuse you guys alright so the next
01:10 - thing was to check if it was a positive
01:13 - number if it's anything else just give
01:16 - an arrow
01:16 - so if grams is less than 0 print error
01:24 - okay else ounces equals so what this
01:31 - does is it just tests to see if the gram
01:34 - the input Ingram's was positive if it
01:37 - wasn't if it was less than zero so it's
01:40 - a negative it's going to just print
01:42 - error and the program there if it
01:44 - doesn't do that it's going to move on to
01:45 - else and it's going to calculate the
01:47 - ounces so ances equals grams the formula
01:52 - was grams divided by twenty eight point
01:55 - three five then what we can do from here
01:59 - is print ounces on the wick , ounces
02:08 - this just concatenates it it puts the
02:11 - other string so if
02:13 - save this and run it grams let's just
02:18 - type in 50 grams ounces is one point
02:22 - seven six three big long number I'm not
02:26 - gonna read now to recap let's go through
02:29 - the program again just explain again so
02:31 - first thing we need to do is get input
02:33 - which we're doing here we're setting
02:36 - that input to a variable so when they
02:38 - type in a number it'll save it to grams
02:41 - variable and we're casting for input
02:45 - from a string into a float which allows
02:47 - them to write in like six point six or
02:51 - something rather than just an integer
02:52 - with no decimals the only from all of
02:55 - this is L spit out an error because you
02:59 - can't really convert letters to numbers
03:02 - we could have done a more advanced thing
03:05 - but we're not going to cover that in
03:06 - today's video just because I don't want
03:08 - to confuse you guys so then if grams is
03:11 - less than zero print error so it makes
03:14 - it so that they can't type in minus one
03:16 - because you can't really get minus grams
03:18 - and needs to be positive so if it is
03:22 - positive if this proves false let's move
03:25 - on to the else statement
03:26 - so ances equals grams which is what
03:29 - we've typed in up here it's a user input
03:32 - divided by twenty eight point three five
03:34 - which is just the formula to convert
03:36 - grams to ounces and then what we do here
03:39 - is print ounces and then ounces number
03:43 - which has been calculated here you could
03:45 - also use a plus what we actually want to
03:47 - do when we're using a comma is get rid
03:49 - of that and run it so we only get one
03:54 - space because a comma separates it with
03:56 - a space so if we if we decided to use a
04:00 - plus we would have to convert this to a
04:02 - string again because with the plus you
04:06 - have to have the same data type so you
04:09 - can't concatenate a float and a string
04:12 - but with the comi you can but also if we
04:15 - run it as you can see it doesn't provide
04:18 - a space oh it's right next to each other
04:20 - whereas with a comma
04:24 - it provides a space or if you wanted to
04:27 - use a boss you're put a space where I've
04:30 - highlighted so if we run it again as you
04:33 - can see we've got space so it's nice and
04:35 - formatted okay so that will see
04:38 - challenge I set you if you have any
04:40 - questions about this code right here any
04:43 - questions about Python any errors you've
04:45 - got be sure to leave them in the comment
04:47 - section below I will help you out please
04:49 - also consider subscribing it doesn't
04:52 - cost anything it's free feel free to
04:54 - drop a like as well it helps me out a
04:55 - lot that's all from me thanks for
04:58 - watching