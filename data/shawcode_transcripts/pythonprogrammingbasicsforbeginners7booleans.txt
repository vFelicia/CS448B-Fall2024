00:00 - hello everyone and welcome to show code
00:02 - this is the seventh video and my Python
00:04 - basics tutorial series if you haven't
00:07 - seen a previous episodes then go and
00:09 - check them out the playlist link is in
00:11 - the description today we'll be learning
00:13 - about boolean x' a boolean is a data
00:17 - type that can only hold two values true
00:20 - or false or also it can be written as 0
00:23 - or 1 this links in with if statements
00:27 - and checking if something is true or
00:29 - false
00:30 - when you run a condition in an if
00:32 - statement
00:33 - - returns true or false we can create a
00:36 - boolean and then in an if statement
00:38 - check if it is true or false so we write
00:42 - bullion in Python like this declare the
00:44 - variable name so I'll just call it my
00:46 - bull and then have its contents as true
00:52 - or false so it could be true or false
00:57 - and make sure that the T or bf is a
01:00 - capital otherwise it won't work so if we
01:04 - do false it doesn't work as you can see
01:06 - it doesn't go orange whereas this it
01:09 - goes orange true and false values are
01:11 - important in Python and when we cover
01:13 - other topics in later episodes you will
01:15 - see how BA use quite a lot and we can
01:19 - evaluate values and variables in Python
01:21 - and see if they are true or false by
01:24 - using the bull function most values are
01:28 - true for example a strain my string
01:31 - equals hello a string will return true
01:38 - for an integer so let's just print wool
01:44 - mice my string save it run it we can see
01:52 - we get true because it's true
01:54 - now if we change this so it's empty save
01:58 - it and run it we can see we get false if
02:01 - we can create an integer my in equals 1
02:06 - we print my int
02:11 - and run it you can see we get true
02:15 - change it to zero you can see we get
02:18 - false the family can also evaluate
02:23 - bullying themselves so if we evaluate my
02:26 - bull save it run it it's obviously going
02:29 - to return false because the bullying
02:33 - itself is false so then we can also use
02:36 - s statements like I said earlier with
02:39 - boolean what we can do is we can write
02:44 - if my bull is equal to true print my
02:52 - bull e'en that value is true I can just
03:02 - do l else print my boolean value it is
03:08 - pumps so if we run it my boolean value
03:14 - is false because my bull is false if we
03:18 - change this to true save it and run it
03:21 - my boolean value is true so as you can
03:25 - see we're using a comparison operator
03:28 - here which checks if my bull is equal to
03:30 - true and if we get rid of the equals to
03:33 - true and just save it like that what do
03:35 - you think is going to happen
03:36 - let's run it we can see my boolean value
03:40 - is true because when it says if my bull
03:43 - that's just a short way of saying if my
03:47 - bull is true so now for some challenges
03:50 - for you to do by itself firstly create
03:52 - an if statement and check to see if a
03:54 - boolean value is true or false
03:56 - secondly create an F if an else
03:59 - statement uncheck to see if a boolean
04:01 - value is true or false if not run BL
04:03 - statement and finally create an integer
04:06 - and use the bull function to check if it
04:08 - is true on up so that's all for today
04:11 - guys make sure to stay tuned for the
04:13 - next tutorial by subscribing and hitting
04:15 - feybelle so you won't miss the next
04:16 - episodes also drop a like if this helped
04:19 - you out it helps me out a lot if you
04:21 - have any questions about Python or need
04:23 - some help
04:23 - any errors you got be sure to leave it
04:26 - in this comment section below I'll be
04:28 - sure to help you out any suggestions or
04:30 - feedback would also be greatly
04:31 - appreciated
04:33 - thanks for watching