in this video we're going to talk about hybrid cloud and multicloud we will go through the development from onpremises infrastructure to cloud platforms generally and then we will see what trends and use cases led to companies adopting hybrid cloud and multicloud at the end we'll see some of the challenges of moving to multicloud and hybrid cloud so what is hybrid cloud hybrid cloud is when you use a private cloud and one public cloud together to understand that let's look at both types of cloud and why is there a need for combining them before cloud companies would buy their own physical servers routers switches and set them up with cables etc right so they'll have their own physical infrastructure also called an onpremise infrastructure that somebody in the company had to manage do maintenance updates fix and replace components if they broke etc and this physical infrastructure and its maintenance as you can imagine costs a lot of money and time but then came the cloud which essentially means somebody else bought all these servers routers switches and set up this physical infrastructure and they are allowing you to access it and use it to run your applications and you probably already know the big cloud providers like aws gcp and azure but there are tons of smaller ones as well all around the world and that's a great concept right because if you are a startup that just wants to run their application and doesn't have resources to buy and set up their own infrastructure you can just rent a couple of servers on cloud and you're good to go and if the router breaks or the hard drive in the server dies you don't need to worry the cloud provider will take care of it you probably won't even notice and that is super efficient because if you have an ecommerce website you are not in the business of managing infrastructure so you just let someone else manage that as their business and you just rent it another cool thing about cloud is that you can add and remove servers as you need with just a couple of clicks so it's very flexible and scalable now why is that a good thing let's say you have an online gift shop and you always get lots of visitors right before holidays so whenever you have such spikes you don't have to go and buy server racks and connect them to your network to handle all the additional users you just spin up a couple of servers on the cloud with one click and done after the holidays if you don't want to pay for the servers you don't need anymore you don't have any physical servers to get rid of you just scale down with a click and that's it that's the famous pay as you go model of cloud platforms in addition to the virtual infrastructure many cloud providers offer services on top to make deploying and running your applications way easier like aws for example has hundreds of services for different use cases like mobile apps web applications machine learning artificial intelligence domain configuration and so on so it seems like there are only benefits to using cloud no upfront investment all these services to make your work easier so you may be thinking every company should want to completely move to cloud well not exactly in fact most companies still use their own onpremises infrastructure now why is that there are actually several reasons for that first of all control over your own infrastructure meaning control over the costs of the infrastructure how well they are managed and secured etc this obviously is a case for large enterprises if they don't want to depend on another company what if the cloud provider goes bankrupt or they can't manage their infrastructure properly and also sure it is cheap to spin up a couple of servers but with a complex application setup the cloud bill can quickly go up another very important reason for that is compliance and security in many countries or industries there are some compliance rules that you have to conform to as a company like if you're a company that does some projects for government or data protection if you have sensitive personal data like medical or payment data so in this case you have much stricter regulations on how and where you store your data and how your applications will be running so what do you do in this case you can't use cloud because you still need some amount of control or you have some compliances you need to fulfill so as you see there are use cases for running workloads on premise but also good use cases for running them on public cloud so which one should you choose you can actually choose both and that is as i mentioned at the beginning a hybrid cloud private cloud and one public cloud that you use together so how does that work let's say you already have an onpremise infrastructure where your online gift shop is running and when you get user spikes on holidays you're going to spin up a couple of servers on a public cloud to service that temporary extra demand this is called cloud bursting or for a data protection use case you will have your database running on premise and your web application on public cloud so these are some of the example use cases of how you can use this combination of private and public cloud so that's a hybrid cloud now let's see what a multicloud is and how it differs from hybrid cloud multicloud is essentially when you use two or more public clouds for your workloads and there are two main reasons why companies would want to use multicloud or basically multiple public clouds one use case is if you want to replicate the same workload on multiple clouds and the second one is if you want to split workload across multiple clouds so let's see what are the use cases for each of these options what if your users are geographically dispersed cloud providers usually have multiple data centers throughout the world but if one provider does not cover all the regions where your users are by running it on another cloud provider you can increase your distribution and service the users from the data center which is closest to them also many companies don't want to be dependent on only one cloud provider like what if that provider goes bankrupt or they have an outage in their data centers and your application is not accessible by users but if you have the same application running on another cloud it will still be accessible so you increase the availability by using multiple cloud platforms so redundancy is great for high availability but of course on each cloud you're running you will pay for it so how do you avoid having huge bills from cloud providers a great way to optimize your costs is using a platform called cast ai which is the sponsor of this video cast ai is an artificial intelligence driven platform to optimize your cloud cost its optimization algorithm is always looking for opportunities to replace vm nodes with less expensive alternatives cast ai uses kubernetes to create a single cluster spinning multiple clouds they are breaking the walls that cloud providers build that lock you in so you can connect your favorite features from every cloud and with cast ai auto scaling you only pay for what you need you can check out cast.ai and you can actually try it out for free now let's see the use cases of when you would want to split your workload across cloud providers if we look at the major cloud platforms like aws google and azure it may seem like they all offer similar services so no big difference between them but in reality there are big differences when it comes to specific tasks or specific services they offer let's see examples let's say you're running your application on aws because it is the best cloud platform for running web applications and now let's say your ecommerce application also gathers tons of data and processes it to make some predictions and intelligent suggestions to users well google cloud happens to have better services for big data processing and analytics so your data engineering team may want to use google cloud for those services instead of aws and also let's say for your internal processes in the company you use some microsoft products and azure cloud has managed services for microsoft products so you want to use azure for that instead of hosting these microsoft products on aws or google cloud or even on premise and managing them yourself so you want to pick and choose the best features from each cloud provider instead of limiting yourself to just one another case where companies end up using multicloud is when two companies are merged or one company acquires another and if these two companies use different cloud providers the new merged company automatically ends up with a multicloud setup which then the central iet operations team will have to integrate and for multicloud note that you can have an onpremise in addition to multiple public clouds and that will actually be the case very often where companies expand from hybrid cloud to multicloud now this may all sound great and beneficial in theory but multicloud as well as hybrid cloud comes with a lot of challenges first of all with each additional environment you have one more completely different environment your it and devops team has to manage and to manage the different cloud environments in addition to onpremise infrastructure they need to actually learn how to do that each cloud provider has a different set of apis and services that you have to know how to work with there are even certifications for each cloud provider so some companies may end up having an onpremise team and aws team and google cloud team etc which again means a lot of resources and also you can't move to a cloud in one step because each environment is so different you can't just take your application and deploy it the exact same way on another platform without some kind of rearchitecting for example if you're using aws lambdas for your application you will have to rewrite some parts of your application if you want to run it on google cloud servers for example so basically on any cloud where you use their special services because they make your work way easier you will have some kind of vendor locking which makes multicloud much more challenging now how to address some of these challenges well there are many tools out there and many patterns to make multicloud easier to give you some examples kubernetes is one such tool which makes running your applications somewhat generic because it's not dependent on the underlying platform you deploy your applications on kubernetes the same way no matter where your kubernetes cluster is running of course you may still need to use cloud services in your kubernetes cluster but it still makes the multicloud easier compared to running your applications directly on the servers packer is another example which allows you to build artifacts for different target environments from the same source code so your code stays the same just the packaging will be different depending on where it must run or there are also continuous delivery platforms for multicloud deployments like spinnaker for example and many other tools and examples like this that make it easier to work with multicloud setups but again that would mean even more stuff to learn and more complexity so if you want to learn these technologies in an easy way and stay up to date then subscribe to my channel because i will cover more topics and technologies related to multicloud and hybrid cloud and with that thank you for watching and see you in the next video