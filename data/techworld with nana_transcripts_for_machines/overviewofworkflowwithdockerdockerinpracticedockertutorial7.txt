so once you've learned the docker basic concepts and understood how it works it's important to see how docker is actually used in practice so in software development workflow you will know you have this classical steps of development and continuous delivery or continuous integration and then eventually it gets deployed on some environment right it could be a test environment develop environment so it's important to see how docker actually integrates in all those steps so in the next couple of videos I'm gonna concentrate exactly on that so we're gonna see some overview of the flow and then we're going to zoom in on different parts and see how docker is actually used in those individual steps so let's consider a simplified scenario where you are developing a JavaScript application on your laptop right on your local development environment your JavaScript application uses a MongoDB database and instead of installing it on your laptop you download a docker container from the docker hub so you connect your JavaScript application with the MongoDB and you start developing so now let's say you develop the application first version of the application locally and now you want to test it or you want to deploy it on the development environment where a tester in your team is gonna test it so you commit your JavaScript application in git or in some other version control system that will trigger a continuous integration a Jenkins build or whatever you have configured and Jenkins build will produce artifacts from your application so first you will build your JavaScript application and then create a docker image out of that javascript artifact right so what happens to this docker image once it gets created by a Jenkins build it gets pushed to a private docker repository so usually in a company you would have a private repository because you don't want other people to have access to your images so you push it there and now as the next step could be comes configured on Jenkins or some other scripts or tools that docker image has to be deployed on a development server so you have a development server that pulls the image from the private repository your JavaScript application image and impulse the MongoDB that your JavaScript application depends on from a docker hub and now you have two containers one your custom container and a publicly available MongoDB container running on them on dev server and they talk to each other you have to configure it of course they talk and communicate to each other and run as an app so now if a tester for example or another developer logs in to a dev server maybe they will be able to test the application so this is a simplified workflow how docker will work in a real life development process in the next videos I'm gonna show you handson demo of how to actually do all this in practice thanks for watching the video I hope it was helpful and if it was don't forget to like it this is a video series so I will create a new one every week so if you want to be notified whenever a new video comes out then subscribe to my channel if you have any questions if something wasn't clear in the video please post them in a comment section below and I will try to answer them so thank you and see you in the next video