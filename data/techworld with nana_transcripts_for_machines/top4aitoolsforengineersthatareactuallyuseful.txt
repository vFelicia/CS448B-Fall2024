AI is the hottest topic right now and AI tools are being developed for all areas including different it Fields And since you are on the tech world with Nana Channel we will be talking about the AI tools specifically for devops and Cloud use cases to make it more interesting and valuable for you I decided to focus on categories of AI tools like monitoring security Improvement and so on instead of just comparing random or most popular AI Tools Plus I'm going to give you my honest experience of using these tools in my actual devops projects and explain why I'm not the biggest fan of AI tools right now and just a heads up none of the tools I cover in these categories are sponsored plus you know my motto which is Concepts before tools so all examples are from my practical experience in my engineering projects and my additional extensive research that I do for each video and if there is a sponsored mention of a tool I will explicitly highlight that in the video for example later in this video I'm going to announce a sponsor because I'm very proud of few awesome tech companies that we work with and by the way recently we saw that 70% of you who watch our videos are still unsubscribed if you received value from any of our videos be sure to subscribe so you don't miss any new content we put out out here and by the way in the comments you can also make suggestions about which tools or which tutorials you want us to create and post here with that out of the way let's get to it devops is all about Automation and efficiency right whether we want to release a new feature fast or secure our infrastructure or monitor our platform and prevent any issues in time as part of devop principles all these should be and can be automated so imagine a scenario where AI is helping take over the tedious repetitive tasks help automate things and help engineers make databased decisions this means super fast code validations proactive support in case some issues happen on your Cloud infrastructure or commence cluster automatically detecting security threats and super quick response to incidents all driven by the power of AI now if this sounds too good to be true well because it is most AI tools right now aren't mature enough to use them on autopilot right now you need to use them like any other tool they can't do everything automatically for you in fact many of them still need a lot of human review and validation but that doesn't mean that they are useless there are still some really good use cases for AI tools right now now the obvious one we all know is cat gbt which I'm not going to talk about here because it's much more general purpose it's not specific for devops plus I actually have two videos on chbt with extensive use cases so you can check them out here but even though you may be getting by with C GPT for now these kind of tools have many limitations when it comes to devops and Cloud specifically when we think about devops and all these automations and Cloud platforms with so many services it's always about integrating various tools together to build these automated processes right like you need to automate monitoring in your cluster and automatically notify teams of any abnormal behavior you want to automate detecting security issues or you want to help automate the provisioning of infrastructure and generally the integration of various tools together and by the way if you haven't already you can download our complete devops road map which I created to give a good structured overview of all the elements of devil in exactly the right sequence to understand the complete flow you can grab the tech Devils road map directly on our website for completely free because I believe everybody should have access to this important knowledge I will leave the link to it in the video description so go grab it from there so what are the use cases of AI in devops and Cloud the first category we have is the AI code assistants and the main use case for such tools is in writing infrastructure as code or configuration as code and so on a popular example here is GitHub copilot and there are lots of very similar tools that basically do the same they are your code assistant within the code editor or IDE so they help you with code suggestions code completions basically they predict what you want to code based on the current context and suggest that code for you or you can ask specifically to give you code piece or entire code block by simply typing the logic in English and it will give you a respective code for that functionality you can even ask it to refactor a code block or clean up the code find any code duplications any dirty code so to say and also interesting use case is you can ask it any explanation on the application code or Improvement suggestions so for example if you're a junior engineer trying to figure out what the terraform code in your new project does you can use an AI assistant to understand the code so you can use it to actually learn and become better at the infrastructure as code tool that your new team is working with now the limitation of such tools based on my experience of using various such AI code assistants for my devop projects is that the code they generate is usually not entirely usable so you still need to validate the output before you can use it or in most cases you have to fix the output because output of the tool simply doesn't work so sometimes you have to double check with the official documentation and so on I actually did a separate video on GitHub copilot and the entire overview here and as I said there are many other AI code assistants out there like Amazon Q which I also covered so you can learn more on those tools and some interesting use cases about them of how to use them as a devops engineer in those videos now code assistants are useful when you can use it directly in your code editor while actually writing the code so you don't have to switch between your code editor and internet browser to use those tools so all these tools have this feature to be integrated in any popular editor or IDE like Visual Studio code or intellig Etc and interesting to point out that there is even an AI powered code editor like cursor where the editor itself has the AI integration so it gives you a lot of the additional features to AI code assistance as part of the editor itself now most of the functionality is very comparable to the AI code assistants but the main advantage here is that the editor the cursor editor is actually able to understand the project context better to give you more precise code suggestions or answers to your code related questions the next one is actually a use case which I think is much more useful than AI code assistance for devops and cloudspace which is AI powered monitoring tools monitoring in devops and cloud is a really complex thing that absolutely needs to be automated when you have very complex systems with thousands of servers and tens of thousands of components on those servers you can't do observability manually you have to automated and alert proactively when the services and applications in your system system behave abnormally because you can be sitting in front of the dashboard or manually checking that all your services are running properly but configuring automated monitoring and alerting is actually a pretty challenging task so this is where monitoring AI tools may be useful one popular such tool is data Do's Watchdog so Watchdog is part of the data dog platform so it's basically like a builtin intelligence layer that continuously analyzes billions of data points from your infrastructure to applications to the underlying platform to find the issues proactively and help you resolve them quickly and the good thing is that data doc also has a feature that basically kind of digs into the issue to identify what actually caused that issue because once the issue is identified the troubleshooting part alone can take a lot of time to exactly pinpoint which one of your thousands of components in your systems actually caused that abnormal behavior or that error so again by analyzing the data about how the services are connected to each other how they correlate how they behave it can pinpoint exactly where the issue is coming from so again you can save yourself manual effort on troubleshooting and fighting root cause of the issue and one more thing which is also very important is is what's called Predictive Analytics it basically means that by analyzing previous data on all the abnormal behavior that has happened and identifying any Trends it can actually tell you if there are any potential issues that may happen in the future and as I said this is much more interesting use case because this is exactly the strength of an AI that it can analyze large sets of historical data as well as analyze the data for correlations between the systems between the services and applications and find the exact issues as well as predict any potential issues before they happen now at the heart of devops are cic City pipelines right that's where a lot of devops Automation and optimization work is done and one of the cicd tools that really focuses on saving time of the developers and optimizing the release workflow is team City pipelines from jet brains who is a sponsor of this entire video so big shout out to Jet brains for supporting our channel so we can create valuable devops tutorials like this one I've used the team City pipelines already and what stood out for me is the main focus on developer productivity by providing selftuning pipelines which have basically builtin pipeline optimization options so while you're building and configuring the PIP line in the team City pipelines tool the platform itself guides you with builin intelligent suggestions of how to optimize your pipeline and because of that the biggest convenience for me was that I don't have to switch back and forth to some documentation and back to the tool to configure various details of the pipeline like adding caching or running jobs in parallel to speed up pipeline execution and so on now if you know me you know I I don't like configuring things in UI everything needs to be scripted as per devops best practices everything is code right so the way I used team City pipelines myself is I configure the pipeline via the tool in the UI using its selftuning features and once I'm done I can save the pipeline configuration and it will automatically save the yl configuration of my pipeline in my git repository simple as that as always I will leave all the relevant links in the video description and you can actually try out team City pipelines for free now on to the next AI tool for devops another interesting use case is security Centric tools specifically tools that can prevent any security issues before they happen by doing Security checks and discovering any security vulnerabilities based on statistical data or abnormal behavior detected in the systems there are some security AI tools that even allow operations team to configure autof fixes when security issues or misconfigurations are detected so the tool itself will find and fix the security issue before it can get exploited one popular tool in this category is Cystic which similar to data dog uses machine learning and advanced analytics to give you proactive monitoring of large complex systems especially in containerized environments and we know in today's devops world containers are a standard you may have thousands of containers running different services and your applications on multiple environments and imagine if you have thousands of containers on different systems how hard it is to make sure that each container and each service within that container is actually running with security best practices is not misconfigured does not have any security vulnerabilities that can be exploited and so on so because of the sheer number of of containers and applications it's just hard to keep track and have an overview of security status in all of them and again that's where AI tools that have the capability of analyzing large sets of data really fast can be useful and that's what CTIC does basically it will automatically go through the entire environment it will detect analyze and it will highlight any potential security threats that it detected in your systems and cytic actually has this visualization tool that will show you a path and a tech would take from its entry point all the way to the sensitive data and again we have the same issue here because once an issue is detected now the engineers will have to identify the root cause of that issue so that they can fix it so troubleshooting and digging through tons of data or logs is definitely going to be challenging so tools like cytic do this kind of troubleshooting and Analysis in addition to identifying issues and it tells you exactly where the issue originates from and how it can be fixed and again this can be super helpful and save Engineers a ton of time in troubleshooting the issues and one last interesting thing about cytic is that they actually introduced an AI workload security feature which basically means that the AI workload itself that is deployed in kubernetes cluster for example can have lots of security vulnerabil ilities in fact they detected that over 30% of deployed generative AI workloads that were running in comm's cluster were publicly exposed which means people could actually interact with that AI tool from outside and get a lot of sensitive data in the output so they designed this feature specifically to monitor security for AI workloads running in containerized environments another category of AI tools that are also an interesting use case especially in the cloud space are tools that help you manage your resources on cloud efficiently and save Cloud costs and again this could be a really challenging thing to do when you're applications and your deployment environment scale when you have lots of services running in your environment when you're using a lot of Services of the cloud provider in your applications for convenience or when you're using multicloud and so on and there are AI tools like Cloud health or usage AI or cast Ai and they give you an overview of how efficiently you are using the infrastructure resources as well as recommendations of how you can optimize the usage and save cost for example what type or size of instances you can be running which instances that you running are underutilized or not used at all plus they use the predictive analysis to provide you with information about how much infrastructure or how many instances for example you would need but this of course Works only for workloads that are more predictable based on that it can also give you recommendations on scaling your environment based on usage patterns and to basically help you avoid unnecessary costs of using resources that you don't actually need or you won't need as much in the future and again it's really important for these tools to actually support multicloud because lot of applications a lot of complex applications today are running on multicloud environments so having an overview of your workloads across the cloud platforms is also an important use case so I believe currently these are some of the most important use cases of AI Tools in devops and Cloud specifically and as I mentioned at the beginning I generally think that AI tools right now are not mature enough to really fulfill these ambitious prom of us Engineers just focusing on this big picture and high level logic and the AI tool just does all the technical heavy lifting in the background for us because that's actually not the case yet even though they have tremendous capabilities and they are able to process and analyze massive sets of data and do Predictive Analytics and so on right now there are still just another set of tools that you as an engineer need to have under your tool belt that means the technical expertise and the technical knowhow behind devops and Cloud all the concepts and Technologies is still very much needed because AI tools cannot replace them yet however as I mentioned in use cases such as automated monitoring or security enhancement because of just the sheer volume of components and workloads that we are running in modern systems these kind of AI tools can massively increase our productivity and save us a lot of time so we can actually focus on more exciting engineering but still technical tasks I hope I was able to give you a valuable overview of AI tools for devops and Cloud use cases I would really love to hear from you what other AI tools are using in your devops or Cloud projects and what are your experiences with them and I'm sure it's going to be really interesting for all the other viewers so please share them Below in the comments and with that thank you for watching and see you in the next video