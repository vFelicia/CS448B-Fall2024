Welcome to the DevSecOps bootcamp. Why did I create another bootcamp specifically to teach about DevSecOps? According to several data trend analyses, DevSecOps is the most demanded upcoming skill set needed in the job market. Why? Security breaches are expected to cost companies trillions annually. So while DevOps solved the automated release of applications, it kind of left out the security, which still remained an afterthought. And to bring security into the DevOps processes and integrate it into every step, DevSecOps concept emerged and is becoming more and more popular. So as you see, security has a huge impact and importance for companies. And DevSecOps is a key role in implementing security in DevOps processes. That means an engineer equipped with this knowledge is highly valuable for any company that cares about security at all. Now as you already know, DevOps is becoming standard in companies across the world and demand for DevOps engineers or engineers with DevOps skills has grown drastically over the years. That's why so many engineers learn DevOps or completely change their careers to DevOps. And why we created the DevOps bootcamp as well. So there's a strong trend of engineers learning DevOps, which is already a hugely valuable skill set. And knowing DevOps will give you an absolute competitive advantage on the job market for many years to come, whatever your engineering background is. But DevSecOps is taking this even step further. They're just a handful of DevSecOps engineers worldwide who have the complete skill set to take over DevSecOps related tasks that companies are so desperately looking for. So if you want to be in the absolute top place and stand out even among the DevOps and cloud professionals, this program will help you achieve exactly that. It will make you extremely demanded and absolutely irreplaceable. And when you embark on a journey of learning such highly complex skill set as DevSecOps, you need a comprehensive guide and learning materials that will teach you the real life aspects and use cases of DevSecOps and actually prepare you with the practical knowledge to take over the role or level up your current engineering role, whether you are a developer or systems administrator, cloud engineer, SRE, whatever it is. And that's exactly why we created this bootcamp. This is hands down the most value packed and extensive course that currently exists out there on this specific topic, which provides tons of use cases, practice references, hands on demos and real life examples. In fact, more than 90 % of the contents are hands on projects because you learn the best by actually doing things. Also very important note is that we compressed tons of knowledge in this bootcamp to make sure to give you the most amount of training and experience in the shortest amount of time possible. Because no matter how valuable a skill set is that you're learning, you don't want to be spending years before you can actually use it and apply it in your career. And that's why we have this intensive boot camps, which has tons of technologies and concepts but is taught in such an efficient way. No fluff, no unnecessary time wasters, clear structured path with a perfectly laid out curriculum so you can complete it within several months, which is very short time for getting a complete education on some of the world's most highly demanded engineering roles. However, I'm not big on theory and certificates. I don't think that theory and learning for certificates are actually applicable to do the actual work. I'm a practitioner and I like to teach the practical stuff, which means in all of our courses and boot camps, practical real life projects is the core and the theory and explanations are just there to support these real life projects. And that's the only way I believe you will be ready not only to get hired so that you can learn a job, but actually be able to implement things from day one at work because you just learn how things should be done in real world and not in classroom. And we have hundreds of students that join the teams and we're able to build full CI City pipelines, full fledged DevOps processes, automate stuff from day one without actually needing to learn this stuff at work because they learned them in the boot camp. Now, one of the main strategies we used here, especially in DevSecOps boot camp to achieve this is simply collaborating with multiple DevSecOps professionals to make sure to capture all our different real life experiences. Because guess what? Different companies have different use cases and practices. But even more than that, I worked closely with and got inputs from engineers of those tools themselves that are part of the DevSecOps processes and part of the DevSecOps boot camp because obviously they know what they built and what are all the practical use cases that different companies use those tools for. And this is, of course, where the reach of our YouTube channel and status of Docker Captain and AWS Container Hero helps me a lot because I can actually reach out to engineers of different technologies and talk to them. And I actually make sure to always use this extensive network to the advantage of our students. So all this knowledge of the security experts of different fields, technologies packed into this one boot camp, which naturally means lots of time and effort went into putting together this boot camp. It actually took us almost two years to create the perfect balance of comprehensive, practical, but compact training in each lecture. And I hope you will be able to see all that when you join the boot camp. Now, before you rush to enroll in the boot camp full of excitement, first, let's actually find out, do you fulfill the criteria needed to enroll in this boot camp? Because you need lots of prerequisite knowledge for this. If you're an engineer who has held any technical role already. So if you are a software developer, cloud or DevOps engineer, maybe SRE or systems administrator, et cetera, and very important in addition to those, you already know and have worked with tools for containers, container orchestration, and most importantly, CI CD release pipeline. Then this boot camp is definitely for you. So you have all the skills that are needed to start learning the things in this boot camp. So adding DevSecOps to your existing experience and knowledge will tremendously benefit your career and just help you in your job to add even more value at your work. Because just like DevOps, DevSecOps encompasses and affects every single step of the software development lifecycle. So you'll be affecting lots of different roles within your organization or within your project teams. And again, because it's practical, we actually cover implementing DevSecOps in the entire software development lifecycle, where you also learn which other engineering roles you will be affecting and how. That means to list all the prerequisites, you need to know essentials of CI CD tools like Jenkins or GitLab CI, GitHub Actions or something similar. So this is an absolute must prerequisite. You also need to know Docker, Terraform, Kubernetes, Linux, automation with Python and AWS. Because in the DevSecOps boot camp, we use all of these technologies, but from a security perspective. So all the basics and all the essentials of these tools need to be there. And these are actually all the things you learn in our DevOps boot camp or a subset of things you learn there, including Jenkins. But for GitLab specifically, which is the CI CD tool that we use in the DevSecOps boot camp. If you have zero experience with it, we actually have a GitLab CI course as well, where you'll learn all the essentials that you will need for the DevSecOps boot camp. So just make sure that either through our courses or from learning somewhere else or just work experience, you check the boxes of this prerequisite list. Now, if you are coming from more IT operations background and want to start into DevOps and DevSecOps, you will also want to have a good foundation of software development. Like you don't have to be super fluent in coding, obviously, because DevSecOps role is not about coding. But you have to understand the software development lifecycle concepts. And this can also tremendously help here to connect the dots in multiple places more easily. And the software development basics and the entire lifecycle, basically the steps involved in that, you actually learn in our IT beginners course. So if you want to up your skills in this area, then that will be the course to start with. However, it's not a must. So it's more of an optional requirement. But that would definitely make it easier to do both DevOps and DevSecOps boot camps. So basically, you need knowledge and understanding of DevOps to the same level as you get in our DevOps boot camp or, as I said, an equivalent work experience. And if you know my tutorials and courses already, you know that I always, always explain and take time to thoroughly go through the details of any concept or functionality that I am demoing without assuming that people already know it in detail. So I don't leave stuff out. And that's why I make sure to cover the relevant concepts and details in the appropriate courses and boot camps to make it easy for anyone to decide basically what skills that they want to learn properly and not repeating everything in every course. So that means if something is not explained in detail in the DevSecOps course, it surely means that it was already explained in either DevOps boot camp or GitLab CI course. So that's basically a prerequisite. If you fulfill that, if you check all the boxes here, then you're good to go. So let's get to the actual contents of what you will learn when you enroll. So basically, what new powerful skills and expertise you will have once you have completed and worked through the entire boot camp. And the first things first, we start with security essentials or security basics, which is great since you don't need this as a prerequisite knowledge. So even if you don't have security background, this chapter covers all of that. And it's important because security is a very broad topic and we need to cover all security essentials needed to lay the foundation for the entire upcoming training to fill any knowledge gaps specifically for DevSecOps. In this chapter, we also go through what's called OWASP top 10 categories. A DevSecOps engineer should definitely know the OWASP foundation and be familiar with their work. So this is a perfect introduction to them and one of their projects actively used as guidelines in application security. So we go through this in detail, deep diving and understanding each category and what security aspects they cover. Very important. We're going to go through different security risks at different levels of the application, whether it's the application code itself, the runtime, the infrastructure, and so on. Different security types, explaining SQL injection, path traversal, XSS or cross site scripting, client or server side request forgery, and several others as part of security basics. And if you're a software developer alone, this knowledge added to your current experience will make you 10 times better at your work. If you understand the security concepts behind the application security and as a non software developer, this is the central part of understanding what security threads and application or systems around that application can even have before you learn how to secure stuff. So this chapter is an absolute must for anybody who wants to understand core application security concepts in order to learn about DevSecOps. So instead of just learning how to execute security scanning tools in order to automate DevSecOps processes by just copy pasting the commands from the official documentation, you actually learn what you're trying to secure with those tools or what security issues you are trying to validate. And this is the difference between our educational material and any other courses which leave out such crucial knowledge and only focus on the tools and their features without teaching the concepts and purpose behind them. After understanding the security essentials, we basically laid a good foundation to build on top of that and now understand the whys behind the DevSecOps. Why was there a need for it and what purpose does it have? So here you will learn about the DevSecOps concepts, the different types of DevSecOps automation tools, the security scanning types, what you automate and how. And it's also important to understand DevSecOps as its own engineering role and clear division of responsibilities between DevSecOps and other engineering roles, which is an extremely important but often ignored topic. And this is an example of a direct reference to practice and how things are implemented in the real world versus the theory. Now, let me add here, if you just learned these two chapters that I just described and you didn't even continue with the rest of the bootcamp, you will already be more knowledgeable in security and DevSecOps than 80 % of engineers who are not directly security engineers, which is pretty crazy to be able to learn all these in just the first two chapters, considering the importance of this highly complex topic. And again, we achieve that by dedicating lots of time to put together the essential topics, crafting the project outline and going into the right level of detail in each lecture. And now starts the action. With all this knowledge, we can start the exciting journey of learning DevSecOps with hands on practice and integrating security in every single step. Now, the demo projects in the rest of the bootcamp are divided into three main categories. Application security, infrastructure and cloud security, and platform security for Kubernetes specifically. And each one of those alone in isolation is a huge topic. So we cover all of them, plus a couple of more things that I'm going to mention at the end. The category of application security is the part where you learn tons of DevSecOps tools, which help us automate security validation in our application release process to basically validate whether our application code is secure or not. And if not, what security issues does it actually have and how can we fix them? So we start off by setting up a base CI pipeline with little to no security. And this is done on purpose so that we can see a clear comparison of before and after security implementation, securing the pipeline step by step and learning new DevSecOps concepts and tools in each of these steps. And as I said, there are tons of DevSecOps concepts and tons of things that go into automating application security with DevSecOps. So we're going to start implementing automated security checks to scan the application code for any leaked secrets in the code. We're going to do extensive code testing using SAS tools, which stands for setting application security testing. And we're also going to learn about software composition analysis to automate validating any third party dependencies of an application for any security issues. And as part of that, we're also going to learn the concept of CVEs and how they reference known vulnerabilities in third party public libraries. So here we're going to learn the concepts of what each type of security scanning actually does and all the tools that help us automate those processes. But when we do the automated security scanning, we also want to visualize the results. So we are going to learn how to generate reports of any of those automated security checks, how to use a vulnerability management tool called Defect Dojo to upload those reports and use Defect Dojo to help us find the fixes and find the remediation of the security issues. We're also going to learn a very important concept of false positive analysis when working with security scanning tools. And we're going to learn for the practical real world reference why that is so important and how to configure the tools to minimize and reduce the number of false positives. What we are also going to do is based on the Python knowledge from DevOps, we're going to actually automate the process of generating reports and uploading them to a vulnerability management tool, which, again, is a use case that you would need in a practical real world application of DevSecOps, because DevOps and DevSecOps is all about automating. And this is part of that automation process. And then very interesting and important, we are actually going to dig into the example application that we are scanning for securities. And we're going to actually fix some of the issues like SQL injection issue, the third party library vulnerabilities and so on in order to understand how the fixes are done in general, as well as important notes on understanding the tasks and responsibilities in a DevSecOps process and how that applies to real world again. And that is just the CI pipeline. But of course, the pipeline continues from CI to CICD with the addition of continuous deployment and adding a deployment part basically opens up a whole new world of security concerns that we need to handle with other concepts and tools. So here again, we start off by building a completely insecure but realistic continuous deployment to AWS with bad security practices so that we can secure that step by step and see the comparison of before and after implementing DevSecOps. As part of that, we're also going to learn a very important concept of image scanning, because as you know, Docker has become standard. We are deploying our applications as containers and container is a runtime for the application. So we're not only concerned about how secure the application code is, but also the environment where it's going to run, which is container, how secure that runtime is. And again, we're going to use DevSecOps automation tools for container scanning. And on top of that, we actually learn how to configure automated scans on the Docker repository itself and specifically in AWS ECR. And again, we're going to go a step further here and we're also going to see an example of how to actually fix or remediate security issues found in a Docker image specifically. And that brings us to the next step of the application release, which is the deployment environment, which, as I said, is a whole new world of security concerns and security concepts that we need to consider. We're going to learn about infrastructure and cloud security because that's where the application will run and that's where the application will actually be accessible by the end users. So completely exposed to public and definitely the best cloud platform to learn about cloud security is AWS, which is by far the most used cloud platforms still in the world. So that's what we'll be focusing on in this boot camp as well. However, I want to mention here is that as with any other tool that we're going to use in this boot camp, my approach is always concepts before technologies. And this applies to AWS as well. So even though we learn lots of AWS specific services here, you actually learn tons of many general security concepts that you can apply to any cloud platform or infrastructure. And that is extremely important to me to not just teach the tools and technologies or technology specific things, but the concepts so that you are actually empowered to go out there and use any tool that applies to that concept. And that's why I made sure to have general cloud security and infrastructure security concepts in this part. So what are some of the things that are included here? We basically are going to learn about a very important concept of access management to security. So we're going to learn the core AWS service for access management of your cloud platform, which is IAM service. So we're going to go deeper here. We're going to understand the secure and proper usage of users, groups, policies, and most importantly, the AWS roles. And this is important because when we're automating things and instead of humans just doing manual stuff, basically services and scripts and tools talk to each other and the whole thing is orchestrated with automation, then we need to use roles extensively, way more than users or groups. We're also going to secure deployment to our environment, which is going to be a combination of secure access management, but also secure network configuration to make sure that all the traffic getting to your virtual machines on AWS, which are EC2 instances, all the traffic is secure and it goes through AWS authentication and authorization steps, which means no SSH ing into the servers. And what's more important, no static private keys or user access keys, instead using roles and short lived access tokens for short lived sessions. Here we have another step, another concept that actually applies to application security, but it comes after deploying an application to the end environment. And that is a concept of DUST or dynamic application security testing. So SAST or static application security testing is for the code, the application code itself, which is also called a white box testing. However, there are many security issues that will only appear when the application is actually running and interactions to that application is happening. So basically DUST is simulating an attacker who is attacking or trying to hack into your running systems. And again, we're going to learn the concept of DUST, the tools, and we're going to see how to secure our application after finding any issues or security findings with DUST tests. So going back to the infrastructure security, again, coming back to the automation concept because we want things automated. We are actually going to go into details of how infrastructure as code helps in securing your infrastructure and why is it so important in DevSecOps. And once we've understood that, we're actually going to deploy that and use it to make our infrastructure more secure. And we're going to use Terraform here to basically build a secure AWS infrastructure for our application deployment environment. Again, with proper access management, network security and so on. And here we're going to go a step further and we're actually going to learn not only how to secure our infrastructure using infrastructure as code tool, but also how to automate the security checks when using infrastructure as code to create the infrastructure. And in doing that, we're actually going to use a concept of GitOps where we're going to build a CI CD pipeline for our Terraform infrastructure as code script and add the security scanning or static security scanning in that pipeline, just like we did for the application, which is the definition of GitOps of using version control tool for your infrastructure as code and treating it the same way as your application. And as a final but very important part of cloud security and infrastructure security, we're going to learn the concept of logging and monitoring, and we're going to understand exactly why and how logging and monitoring help us in securing our systems or even after somebody has infiltrated our systems. And for the cloud security specifically, we're actually going to learn two AWS services for logging and monitoring, which are CloudTrail and CloudWatch. So we're going to learn about these tools in general, but of course, we need use cases, we need hands on practice. So we're going to configure those services to monitor the activity and behavior on our AWS cloud platform across all different services and actually notify us when something happens that is a suspicious behavior or something that may affect security of our systems. And as part of that, we're also going to learn how to monitor and alert on AWS cloud costs using AWS budget service, which is a small use case, but also a useful one. After the chapter of infrastructure and cloud security, we're going to move into a third giant part of this bootcamp related to Kubernetes platform security, because as you know, Kubernetes has already become a standard in the cloud world and no DevOps related bootcamp or course would be complete without covering Kubernetes in it. This means we are going to actually change our application development environment from simple virtual machines on AWS to a full blown Kubernetes cluster on AWS using EKS. And that means by introducing Kubernetes cluster on top of cloud infrastructure, we'll introduce another world of security attack surface and security concerns which need to be addressed. And our goal is to always equip you with the most in demand skills and most use cases. So stopping at AWS and cloud security was not an option for us here. So learning how to secure Kubernetes platform and applications running inside Kubernetes cluster will be an absolute game changer in your career. And I just want to note here that we are going to be first releasing the part one of this bootcamp, because as I said, this bootcamp is pretty large. So we kind of divided it up into two parts and Kubernetes platform security will be another large part two of this bootcamp. But to cover on a high level, the concepts and topics that you're going to learn related to Kubernetes security, obviously, just like with cloud security, we're going to cover the access management to Kubernetes cluster. Who has access? What? Who can log in as an administrator to set up and configure stuff? And how are those access credentials managed with the least privileged access? So as part of this, we're going to actually dive in and see again in practice, not just the Kubernetes native mechanism for access control, which is Kubernetes RBAC mechanism, role based access control with service accounts, roles, role bindings and so on. But also its integration with AWS's access management, access management service called IAM, which, as you remember, we mentioned in the cloud security. So basically combining those to give us secure access control of EKS cluster. And again, this is a very practical real world use case. But of course, aside for access management, we also need to secure the applications running inside how we pull the private images into the Kubernetes cluster, how we make sure to secure the containers, the pods running inside the cluster so that they don't become the entry points of security attacks to allow hackers to break out of the pods and access the whole Kubernetes cluster. So we're going to learn the concepts behind that, as well as how to secure that part. We're also going to learn the Kubernetes native security related components such as network policies. So how to do micro network segmentation and basically secure the access on a pod level rather than on the cluster level. And as part of that, we're also going to learn a third party implementation of that. We're also going to learn the concept of service mesh and how different features of service mesh actually help you secure your complex microservices applications in the Kubernetes cluster. And of course, in addition to that, we have the cluster entry points like ingress controllers, the load balancers, which are also important considerations when we're talking about security. So we're going to cover all of that and see actual real life use cases of those things. One more super important and relevant topic is sensitive data management in Kubernetes, because when we have applications that need to talk to each other, we have databases, we have other services that require authentication and authorization. Obviously, we have lots of access keys or credentials and so on that needs to be stored securely. So as part of this, we're going to learn a very popular open source tool from HashiCorp called Vault. So using Vault, we're actually going to demonstrate how to store and use secrets and sensitive data in Kubernetes and around Kubernetes, including the secret key management, the secret data management for the applications, storing any credentials and so on. And finally, again, we want to automate processes. We want to learn the automation parts of the security as well in Kubernetes. Since we're learning DevSecOps, that means we're going to learn the tools for automatic scanning of security misconfigurations and security vulnerabilities of Kubernetes manifests. So when product teams deploy their applications to Kubernetes cluster using Kubernetes manifest files, we can automate the scanning of those configuration files for any security issues. And as part of that, we're also going to learn what's called policy as code. So basically creating any security policies related to Kubernetes and enforce those policies as part of the CI CD pipeline for the application deployment process, which is a super exciting and interesting topic and something that also makes working with Kubernetes and managing security issues and misconfigurations in Kubernetes way easier to handle from the Kubernetes administrator side. So this part is going to be completely packed with absolutely amazing, exciting concepts directly related to Kubernetes, but also involving lots of third party tools. And as I said, this will upgrade your existing skills as an engineer to a completely new level. And that's not even all. We're not done yet. A very important security related topic is compliance. The need to automate things and make things fast and efficient in DevOps and DevSecOps world applies to compliance as well, which we all know as this traditional bureaucratic manual effort that companies have to do to validate compliance of their projects. But not in DevSecOps. We will learn about compliance as code and the tools that help us automate compliance using code and scripts. And compliance is an overarching concept that actually applies to all these three categories that we just went through from application security to infrastructure and cloud security to platform security. And as part of compliance as code, we're also going to learn about CIS benchmarks and how they are used as part of implementing compliance as code. And again, all of this will be taught as hands on demo project. So you're actually going to learn how to do all of this in practice and not just theory. And finally, the last but not least, DevSecOps is not only a technological change and technological implementation where you just put a dozen technologies together and create automated processes, but it's also a conceptual change or sometimes even cultural change in IT project teams in organizations. So it's important to understand, again, in real world, what are the challenges and difficulties of introducing DevSecOps into a project or the entire organization? How do you get engineers on board? How do you introduce DevSecOps strategically in teams step by step? Because here's the thing, when you as an engineer learn about DevSecOps, you're getting a completely different understanding and perspective of what benefits it has. And by having this knowledge, you will know exactly how it helps the business and teams. But other people, including engineers who are not aware of those concepts, often may not have the same perspective and may not even think that this is something important or relevant, or they just don't have time to research and understand why it's important. So how can you be the driver for DevSecOps in your project and organization to show the other team members and engineers using incremental wins, what value it has? So here in this last chapter, we cover some practical strategies and steps for DevSecOps adoption in organizations. And this could be another huge value add in your career, because knowing this will let you provide massive value for the company strategically as well. So that's basically the entire curriculum. And as you see, it's huge. It has lots of technologies, lots of concepts, lots to learn. And I'm happy that we can make all this knowledge available to the world. One thing I want to stress here again is that the main focus of the entire bootcamp, just like in every other course or bootcamp that we have, is to learn and understand the concepts and think about the tools just as means to an end. That means the CI CD pipeline that we build, the infrastructure as code project that we build, all the different security scanning tools that we use, all of that knowledge is easily transferable to any other CI CD tool, to any other security scanning tool, even to any application using a different tech stack than we're using in this bootcamp. So you'll have all the knowledge to replace any of these tools very easily because you understand the fundamental concepts. That means if you're thinking about, I want to implement this for Jenkins pipeline, or I want to do this in GitHub actions or Bitbucket or whatever CI CD tools you want to use. So you can literally take the pipeline and translate it to any other CI CD tool. So that was extremely important for me because I believe that is the most powerful level of knowledge when you're not tied or chained to the tools, but rather see them as means to an end to actually accomplish the actual goals that you have with your projects, for example. Now, what you get when you enroll in this bootcamp is not only the educational videos with all the demos that you can work along, but a bunch of other stuff, which should make your learning process easier, more comfortable, more convenient. So obviously all the Git repositories that we're using in this project are perfectly structured so you can easily follow them. So all of them will be provided in the relevant places. And in addition to that, we have also created accompanying handouts with key takeaways. And we found that a lot of students actually find value in that because once they have gone through a huge chapter, they want to kind of summarize in their heads and kind of revisit all the key points, a way more important addition to this bootcamp that you also get out of the box when you enroll. We also understand the importance of support for students in their learning journey. And that's why we provide dedicated DevSecOps engineers and a support team in an exclusive group where you can get active support throughout your entire learning process. So for the entire learning journey, you're going to have a dedicated team of engineers who have real world experience and expertise in this field, answering your questions, supporting you whenever you need, motivating you and helping you along the journey. And we also made sure to cover multiple time zones with multiple support engineers so that every student gets help when they need it. So when you get stuck in a demo or need more explanation of some concept, etc., you can ask your question in a dedicated channel in this private group and someone from our support or me myself will get back to you as soon as possible. And as I said, support part is extremely important for us because we try and successfully achieve to exceed our students expectations with our content. And we want to achieve the same with support as well. And once more, we are not done yet. You actually get two more things as part of this bootcamp. First of all, I believe that one of the best proofs of your newly acquired knowledge is a certification. Even though I'm not a big fan for just learning for a certification, I believe that if you learn something practical, you should have a certified document that shows that. Because after working hard and learning for weeks or months, you want to be able to showcase and promote your new skills in a simple way. And this is included in the bootcamp at no additional cost because we want to give our students the best way to prove their knowledge after intensive learning. But even more than that, we also made sure to provide certificates to our students in a way that is easy to share or embed in various formats, but also easy to validate and proof. So everyone who sees your certificate will know that it's legitimate because this technology allows for a validation of a certificate instead of an old fashioned simple PDF file. So at the end of the training program, you can apply for a verifiable digital certificate or digital badge. And remember what I mentioned at the beginning, the value of proper security implementation for companies. So every company who even remotely cares about securing their applications or systems will have interest to have engineers skilled in DevSecOps processes regardless of their roles in order to increase the security awareness across engineering teams. So no matter if you are a software developer, cloud engineer, automated testing engineer, whatever, you can ask your employer whether they want to invest in your upskilling and professional training, which many companies already do by providing such yearly training budgets for their employees. And that's why to help you in this process, we have also prepared the convince your boss letter with detailed description of skills you learn and acquire in this bootcamp and the learning outcomes that will actually benefit the company as well that you can present to them. And finally, we are completely transparent with information around the bootcamp. And that's why I made this long video to make sure that I cover every single detail. So you know exactly what you're getting, how you're getting all the details. So no one is misled or enrolls without meeting important prerequisite criteria, for example. So we put all this information on the website in this video. We added a Q &A section. There is also an additional questions form that you can ask us any question that we might have missed to cover. But if you still have any doubt about anything that we didn't mention or just want to check out the bootcamp to decide if it's actually for you, maybe the technical level, whatever, you can do so completely free of risk, because once you enroll, you can check out a few videos during the week from different chapters. You can check out a couple of demo projects that we have and make your final decision whether you actually want to do this bootcamp. If not, you can give it back in the same week. No questions asked. And at least you will know you have checked it out and made a completely informed decision. So that was probably the longest bootcamp overview video in the world. But I hope I was able to answer all the questions that you might have, was able to give some value in this video itself. And I hope to see you inside the bootcamp.