I've seen this question a lot and many of you have also asked what is the difference between docker and kubernetes because I guess it seems like they're competing technologies but the fact is they're not alternatives to each other in fact they go hand in hand together you could use this docker without kubernetes and you can use communities without docker however many projects in best practices actually combine those two technologies to get the best out of both so to demonstrate that docker and kubernetes go actually handinhand here a couple of points for each technology so docker is a container technology which basically means that it creates an isolated environment for applications while kubernetes is an infrastructure for managing those containers where docker really shines is actually automating the building and deployment process of applications so it's actually widely used in the CI CD process while kubernetes comes into action after the application container has been deployed and it takes care of automating scheduling and management of that deployed application containers so overall docker is a container platform to configure build and distribute those build containers or kubernetes is an ecosystem for managing a cluster of multiple docker containers here's a diagram that shows exactly where docker and kubernetes fit in the whole process so docker is mainly used in the local development process so when you're developing a software application you would use docker containers for different services that your application depends on like databases message brokers etc and it's also used in the CI process to build your application and package it into an isolated container environment as we mentioned before once built that container gets stored or pushed into a private repository so now is where kubernetes actually comes into the game so if you have a development server that is made up of multiple virtual or physical servers you would basically install kubernetes on top of those servers and once kubernetes is running you will create a cluster that would actually run your docker containers on top of it and this diagram actually demonstrates how docker and kubernetes technologies can actually be used together so now in order to get a little bit more detailed view of how kubernetes cluster works so you have a kubernetes engine that spends multiple virtual physical servers to create one cluster where docker containers are actually running and you can distribute the number of doctor containers across those physical or virtual servers as you wish where each container will be its own application and the kubernetes service that actually enables docker to run in that cluster is cubelets so each node in the community's cluster will actually have one cubelet and the technology that is actually comparable with kubernetes is docker swarm so as we saw this is a kubernetes cluster set up and the docker swarm is basically an alternative to kubernetes which is a container orchestration tool so instead of cubelets you would have services called docker daemons that will run on each node and instead of the kubernetes engine you would just have docker that actually spends those multiple nodes that make up the cluster and the rest is the same so you have the same docker containers with the same applications running on that cluster set up so now that we saw that docker swarm is an alternative to kubernetes let's see how they actually compare what are the advantages and disadvantages of each technology so the first difference is that kubernetes is much more complex to install and set up then toku swarm and the reason for that is that kubernetes is actually more complex and has much more power but of course comes with a higher learning curve whereas docker swarm is more lightweight however is limited in its functionality so some of the powerful functionality that kubernetes offers in comparison is that it supports auto scaling where a stockist worm needs manual scaling to be configured it also has a builtin monitoring where as docker swarm depends on thirdparty tools for monitoring but also to talk about some advantages of docker swarm for example kubernetes doesn't support auto load balancing whereas docker swarm supports that feature and also with kubernetes you actually need to learn a new commandline tool which is the cube CTL for example whereas with docker swarm you actually have the same docker command line that you use with docker so you don't have a need for a separate commandline tool there thanks for watching the video I hope it was helpful and if it was don't forget to like it if you want to be notified whenever a new video comes out then subscribe to my channel if you have any questions if something wasn't clear in the video please post them in a comment section below and I will try to answer them so thank you and see you in the next video