I recently worked with Honeypot to tell my personal Journey if you don't know Honeypot it's a tech job platform in the dark region the Netherlands and Barcelona but you may know Honeypot from the kubernetes and Prometheus documentaries they put out on their YouTube channel in this video I talk about my personal journey into software engineering and then devops I also talk about University education versus being selftaught as well as give some advice to people who are just starting out in the software development and many more interesting topics I hope you guys enjoyed and find it useful foreign devops engineer and currently actually what I do is fulltime create content for other devops Engineers or people who are interested in becoming devops Engineers to learn about lots of different Technologies in the field as well as consult and help companies to build the devops processes in their in their organizations foreign why I became a engineer in the first place and why how I actually ended up in it field is a pretty random one actually was by coincidence because I had no idea of I.T field and how what kind of tasks or what kind of thing it was I was getting myself into I actually had a marketing background and when I decided I want to stay in Austria actually started looking for a profession that would be much more demanded than marketing professionals were and it actually popped out right away from just the job demands and the job descriptions and amount of of job demand for this profession so I kind of that was like my first point of Interest like okay what is this I.T and of course I had this thing in my in my mind which was um I mean I don't know any women actually in this field I don't even know any friends of mine in this field so and I had this thing that this is for like for men but immediately I think after starting uh the studies in it after two months or so I realized programming is super fun it's super interesting uh it's it's difficult and it's challenging as I expected but it's not something that you can't do like it it's not impossible right you have to learn it just as you learn any other profession so I realized it's not that difficult compared to to other stuff and that was actually the the um time when I decided okay this is highly demanded by I also enjoy doing it and then from then on I got an internship from the second semester um and then I realized I I was learning a lot at job at the internship by doing the things in practice than just learning things at the college or university just theoretically so I focused on that actually more so the the most the biggest disadvantage of college and university is they can't really keep up with their technological developments so their curriculum is 100 gonna be outdated because that's just how it is um and second it just takes much more time because you learn a lot of kind of needed a necessary theoretical stuff that you may never actually use at work right and it takes a lot of time away from you that you could actually be investing in learning programming for example in Java instead of learning mathematics and that was actually also a reason why I personally so I quit my studies in the third beginning of third semester because I realized okay I'm learning much more from this online resources and combined with work experience so I just realized I don't need actually this formal education so that's what I would recommend others as well but another challenge is also when you're learning yourself it can be challenging because one you need selfdiscipline and second you may not actually know what to learn right so you need some some way or some resource that tells you okay learn this first to this level and this and combine this way so it could be hard for for a lot of people to find or put together these resources themselves foreign so even if software development and DeVos engineering is super fun and I actually love it either I have so I have to give a warning as well because it comes with a lot of challenges especially when you're beginning and starting off and I had this personally myself you may feel you will definitely feel like super overwhelmed especially when you're in the team and they're like senior engineers and they're like super experienced you feel like a newbie you feel like you don't know anything and you feel like you can't you are not learning fast enough so the way that it affected me for example in in one of the projects that I can mention as an example where I actually learned or and took over the kubernetes fulltime kubernetes management was that we were a team of a couple of software developers and we had super experience like expert level developers in the team and I actually felt even though I was also one of the lead developers I actually felt like pretty um inexperienced myself because I had less experience I had less knowledge and it was like a whole new world like a Next Level project like with the difficulty so I felt like okay there is another project where I feel like I don't know a lot of things I had this impulsive Syndrome again so use that actually as a motivation for me to take on tasks that I would be like probably the only one in the team that would like learn and master those skills so in a way that in a way I could say that I turned my imposter syndrome into into this advantage and motivation of actually learning stuff that were super valuable that I built the most knowledge in thank you after that I found out about devops which is basically to explain in like very simple terms uh devops is um the basically making the work of developers and operations um automated more efficient seamless right and since we have like a separate role as a devops engineer basically what you what the main responsibility is to take what developers have created and seamlessly in the most automated efficient fast secure whatever way um basically release it to their end users right so the whole process of taking that coded application putting it on the end environment and making it accessible to the end users in a secure way in a you know a highly a performance available way that's the the main responsibility of devops and then I once I found out about that I already knew okay all these technologies that are part of devops are already familiar for me and I just decided to go full time in that field and learn all the other rest of the Technologies basically um in that field if you want to get into devops you can use the software development entry as like a first point and then even as a junior software developer you can start transitioning into devops because you would have enough Foundation knowledge as a prerequisite to start learning the things that you need in devops devops is still relatively like compared to to other it Fields I would say relatively young and there is a lot of things going on there like a lot of Dynamics and I you could see like a lot of different technologies that are being developed and invented for different use cases or like problems that you have in the devops projects and you also have like a lot of um similar like very very similar Technologies developed in in the same area which is actually a sign um for the fact that there is no like one standardized solution for that so I believe that the trend the market Trend and the way that in the direction where devops is going to be developing into will be to standardize the processes more to have like a few set of tools that most of the projects like 90 or maybe even more projects will use um and all the rest of the technologies will just disappear because like there has to be one winner in each category so I think that's going to be the trend versus now where you have like 10 different tools to choose from which are Super similar for the same task and then you have this thing because none of them is super standardized and the one that's mostly you so you kind of have to choose between them and evaluate them all the time but I think it's going to standardize a lot more and generally the devops because it's becoming mainstream already and we see that the devops itself is going to be become more clearly defined and there will be like more clarity from the companies what they expect from a devops engineer where's the line between uh developer and devops engineer where's the line between operations and devops I think that's going to be in like maybe four or five years we're gonna see that kind of standardization oh thousands of developers find jobs across Europe using Honeypot if you're up for a new challenge in one of these European cities sign up at honeypot.io if you want to see more Tech documentaries then subscribe so you don't miss the next one thank you