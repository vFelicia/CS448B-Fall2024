in this video i will talk about running kubernetes on cloud and the benefits of a managed kubernetes service among others i go through the topics of spinning up a cluster load balancing data persistence in kubernetes cluster and the problem of moving or migrating from one cloud platform to another there are so many tools and trends nowadays like infrastructure as a service kubernetes on cloud managed kubernetes service etc that have developed over the past few years and are trending now so it's good to get a good big picture overview of all this and that's what i will cover in this video one of the known infrastructure as a service platforms is lynode which is sponsoring this video so huge thanks to lenod for that because sponsorships like this allow me to create more free content for you on my youtube channel so let's build a case where you and your team are developing a micro service application with database that will be deployed in kubernetes cluster you want your application to be available from a browser it's your domain name with secure https connection plus you have some requirements like security for your whole cluster setup of course and the data persistence for your database and because you want to do it properly you want to have development and production coordinates environments that are the same so you can properly test new features before releasing them so this is your wish setup and you want to get this as efficiently as possible without wasting a lot of time and without having to spend your whole time learning and figuring out every piece of technology so bear that setup in mind while we go through the following concepts okay and by the way this whole setup that i will explain in this video with concepts i will make a practical demo of it so you know theoretically how all this works but can also implement it in practice so basically you have a complete knowledge package for this specific scenario from just two videos so let's dive right in first of all where will your kubernetes cluster for application be deployed consider you want to set up kubernetes cluster on a cloud platform like lenode how does this actually work now there are two options to do that the option number one is you can spin up let's say six lynode server instances and create your own kubernetes cluster from scratch meaning you install master processes on three nodes and make them master nodes then install the worker processes like cube ctl cube proxy and container runtime like docker on the other three and make them into worker nodes and once you have set them up you have a cluster and now you can deploy your applications on it so the whole cluster master and worker nodes are your responsibility to manage secure do backups etc so you have to manage the cluster now yourself it is doable but it's a pretty big overhead to install all these binaries and processes and to put the cluster together if you just want to create a simple cluster to deploy your applications the option of creating cluster from scratch on cloud instances is not very practical because as i mentioned you want to get things done fast and easy and don't want to spend too much time on setting things up and figuring it all out so as an alternative cloud providers like lenode also offer what is called a managed kubernetes service that does a lot of heavy lifting for you on lynode it's called a linode kubernetes engine so how does this work or what does it actually represent so you don't have to create cluster from scratch most of it is done for you automatically by lenovo platform so when you create a kubernetes cluster on lke linux engine you just choose how many worker nodes you want so you just care about worker nodes you will get for example three worker nodes with all the processes including docker container runtime preinstalled so you don't have to install any of this and you will get them up and running in no time so what about the masternodes who creates them who manages them where are they the thing is leadnote creates the master nodes or also called the control plane in the background when you create the cluster but you don't even see that because it's completely managed by lynode it's not your responsibility anymore so you don't have to manage and secure and do all the configuration on it that's one advantage but this also means that you only pay for the worker notes now you don't pay for this extra couple of notes that run as your masternodes that eliminates not only extra costs but also a lot of effort and overhead because you can literally just get started in minutes with a running kubernetes cluster so it saves a lot of time so let's go through this in more detail how does this all work and what can you do with linode kubernetes engine the process is pretty simple let's say you create a cluster with three worker nodes to deploy your application on linux ui choose your work notes with their resources leadnote has server instances of different capacities so depending on your needs whether it's a test development or production environment you will choose which nodes you need with how much capacity then you select a region or data center where the worker nodes will run so for example if you're let's say in uk maybe you create cluster in your nearest region in the uk and with a couple of clicks your kubernetes cluster will be up and running then you connect to the cluster using cubectl from your laptop and deploy your applications services and do all these things that you need to do in the cluster super straightforward so let's say you need to deploy a mongodb database for your node.js application and you want several replicas of that now database applications need data persistence right to save that application data and if you have three replicas of a database you need persistence or storage for all three replicas if you want to learn generally how data persistence works in kubernetes i have a separate video about that so you can check that out now if you have watched it already you know there are different types of storages like there are cloud storage providers there is nfs local storage on the nodes themselves etc and the storage you have to configure yourself kubernetes doesn't do that for you so you would have to create that storage the physical actual storage and make it available for the cluster resource like database then you would have to create persistent volume components with the storage backend and now you can attach these volumes to your database parts well lean out has its own storage linode block storage that you can use to dynamically create the volumes so you don't have to set up and configure anything you don't have to create the physical storage and then create volumes out of it and connect them etc you just use lynode's storage class and lynode will create the persistent volumes with the respective physical storage in the background automatically and when you deploy your database application the storage will get attached to your database pods and you will see all this in a demo part in detail so you have a very little effort here as well of course it's good to know how it works but you don't have to do much here okay so now you have your node.js application let's say running as well as mongodb database application with replicas and its storage configured so now we need services and access from the browser through ingress which is part of kubernetes that basically manages routing of incoming requests like from a browser to internal services in kubernetes so in our example you would need to install and run ingress controller in your kubernetes cluster so that you can configure ingress rules that will then route the incoming traffic to your node.js application to understand the concept behind this in a cloud environment like manage community service or in a lead note kubernetes engine how does this setup work how will ingress get that incoming request and it happens through lynode's node balancer so in cloud platforms you have cloud providers own load balancer implementations that gets in front of the nginx ingress controller so that becomes the entry point in your cluster so let's see how that works leenod's node balancer is as the name says a load balancer for your worker nodes where nodes are the lead node server instances so say you have two linux instances one runs a database application and other runs a web server and you expose the web server using a public ip address so browser can send requests directly to the web server the problem is you can't scale this application if you suddenly start getting a lot of traffic your web server will become a bottleneck also if you make changes to the web server like reboot it reconfigure it etc your application becomes unavailable instead let's say you add a node balancing fraud that takes the incoming request and directs it to the web server so node balancer will get the public ip address and web server will be hidden away and accessible only at private ip from the load balancer itself now you can add multiple web servers under that load balancer that load balancer can forward the request to so you can scale your application up and down without users even noticing anything now you have an entry point to your application that you set up once and just leave it and it works it's just there to accept the requests and then redirect it to one of the web servers you can also configure session stickiness with lean notes load balancer which means if user authenticated on one server that keeps sessions in the memory meaning only that web server instance has the session information and knows the client you can configure the node balancer to forward the next request from that client to the same web server instead of randomly picking or passing the request to any server so the same client will always land on the same backhand and trust me if your application keeps sessions in memory this will be the first thing you're gonna be asking how to solve so this feature is very helpful now obviously you need your connections to be secured so you can also configure the node balancer with ssl certificate pretty easily so you can accept https requests only node you can do that using a plugin called cert manager which basically helps with managing ssl tls certificates remember we don't want to spend time doing everything ourselves we want to delegate most of this stuff to technologies so in this case you can get the certificate and store it as a kubernetes secret and use it to secure the connection to your cluster now as i said i will make a demo video right after this where i will show you all of these in practice click the notification bell after subscribing and you will get notified when the new video is out and as i said the concept you'll learn on lynode you can apply on other platforms as well so far i've used three or four different cloud platforms and the usage concepts are pretty similar it's just that some platforms are better in doing certain things now that you have a successful setup your application is scaled and available through browser users can now use it and let's say when you created your cluster on lke you selected region let's say dallas usa so that's where your cluster or work nodes are running suddenly you notice most of your users are accessing your application from europe and india let's say this means that connection speed is not good for users because the servers are locating geographically too far away from them so you want to host your application in closer proximity to your users that's where the availability zones of a cloud provider come into play leadnote has data centers in 11 physical locations also called availability zones where you can run your nodes so if you want to roll out your application for german and indian users for example you can simply select the data center locations near them now let's say everything is set up on lke your application is running you have it in multiple data centers all looks good your team or company decides you know what we would like to move our data in all the sensitive information from the cloud platform to our private cloud and also there is this new feature of our application that will be most efficiently done using a specific service in cloud platform b whatever that is so basically you want to migrate part of your application setup to private cloud and part or just one feature to another cloud usually what happens is when you set up your kubernetes cluster on a cloud platform you end up using its services like native load balancers and storage or some apis that are specific to that cloud provider so your application or parts of your application gets closely tied up to that specific cloud provider and you can't migrate easily you may need a lot of reprogramming and reconfiguration to move parts of your code or the whole application away from the platform and migrate it to some other place that's called vendor lock in an obvious reason for that is of course cloud platforms want to keep the companies um tied to them by providing these useful super services but which are cloud specific so you can't move your application easily afterwards in case you need it leenode however doesn't have that vendor lockin which is a great thing if you come to the point where you actually need that migration or partial migration so you would be able to easily do the above and move your workloads to other platforms and they do that by being open cloud and having their api completely open and free so they don't lock you in with their native api another point is let's say your setup grows in size you deploy more and more services your infrastructure configuration gets more complex and your devops team grows as well in this case you would want to automate as much as possible so you may automate creating configuring tearing down doing all sorts of things with your infrastructure where your cluster is running and also automate deploying your applications and services and you can do that using automation tools so for leenode specifically you can use those tools to automate your infrastructure and also deployment of services in that infrastructure so for example tools like terraform or insible which are automation tools have modules or providers or whatever they are called in their respective tool that can connect to lenode platform to get access to its resources and then let you automate your devops work to again save time and work more efficiently and finally a couple of things that must be mentioned about lenode kubernetes engine that may seem minor at the beginning but can also be very important first one is creating a cluster initially on many cloud platforms usually takes long because the master nodes need to be provisioned the configuration you selected must be applied some other resources must be created etc so on some platforms it could be up to 20 30 minutes even to just initialize the cluster on lke when you create a cluster it takes under five minutes which is way less compared to other platforms and it's pretty fascinating when considering how much actually needs to be done in the background now you may think that you only need to create cluster once and that's it so not a big deal if i have to wait half an hour at the beginning however when you're just starting off you want to practice you want to test or maybe create test or trial cluster you may need to do it a couple of times especially at the beginning for example i create demos and try out some new things on lke so i need to create and tear down the cluster pretty often so in this case it can save a lot of time and finally another detail that i notice is that you can ssh into your worker notes which can be very useful when troubleshooting for example and surprisingly this is not a common thing with managed kubernetes service because the other two cloud platforms that i've used they didn't support that feature or more correctly they didn't allow that feature so you can actually ssh into your notes into your worker notes in case you needed to troubleshoot something from that but know that you have to be careful when using the ssh into linux nodes because you can easily break something on the server so unless you know exactly what you're doing avoid changing some stuff there so that's it for the introduction of managed kubernetes service with an example of linux kubernetes engine thank you for watching and see you in the next video