00:01 - hey guys welcome back to kids for code
00:03 - today we will be talking about variable
00:05 - manipulation and user input
00:10 - manipulating means changing our
00:11 - variables we will do this
00:13 - all the time in our programs
00:17 - here's an example we have the statement
00:19 - age equals 10
00:21 - but what if today was our birthday what
00:23 - if we wanted to update our age to be one
00:25 - year older
00:26 - well we take that statement and add
00:28 - another age equals h plus one it takes
00:30 - the pre-existing value of age which is
00:32 - ten
00:33 - and adds one to it making it eleven
00:36 - you can use other math operators other
00:39 - than addition
00:39 - such as subtraction multiplication
00:42 - division and modulus
00:44 - there are also shortcuts you can use you
00:47 - can use
00:47 - age plus equals one to do the same exact
00:50 - thing
00:50 - as age equals h plus one
00:57 - here are some basic math operators we
00:59 - have addition
01:00 - subtraction div multiplication and
01:03 - division
01:05 - for advanced math operators we have
01:07 - exponents
01:08 - floor division and modulus
01:12 - here is an example in python so we have
01:14 - a which equals five and b equals two
01:17 - so addition is a plus b subtraction
01:20 - equals a minus b
01:22 - multiplication equals a times b
01:25 - division equals a divided by b so
01:28 - addition
01:28 - equals seven subtraction equals three
01:32 - multiplication equals ten and division
01:34 - equals two point five
01:36 - exponent equals a to the power of b four
01:39 - division equals
01:40 - a divided by b but it's different than
01:42 - normal division
01:44 - modulus equals a modulus b
01:47 - so exponent would equal 25 or five to
01:51 - the second power
01:52 - fourteen would equal two
01:56 - you might think that this is rounded but
01:58 - it's slightly different
01:59 - if it was rounded then instead of two
02:02 - point five
02:04 - five divided by two would equal three
02:06 - but
02:08 - for division we just get rid of the
02:10 - decimal
02:12 - and for modulus the answer is one and
02:14 - this is because
02:15 - five divided by two equals two with the
02:18 - remainder of one that remainder is the
02:20 - answer
02:22 - to five modulus two so
02:25 - five minus two equals one
02:28 - and now i will show you a demo in
02:31 - pycharm okay
02:35 - so we're going to start by making an
02:38 - integer called num1 and we'll make it
02:41 - equal to 12.
02:42 - next we're going to make a
02:45 - float and we're going to call it num2
02:47 - and we're going to make it equal to 2.5
02:51 - so we're going to use a print statement
02:55 - for mathematical operators so i want to
02:57 - print
02:59 - num1 times num2 the value of that so
03:02 - what i do is
03:03 - i write num1 times
03:06 - num2 when i print it out
03:12 - to the console it will say 30.0
03:16 - now 12 times 2.5 equals 30
03:20 - but since you're multiplying an integer
03:22 - and a float
03:24 - the result will always be a float that
03:25 - is why it's 30.0 instead of 30.
03:29 - and note that you can multiply them
03:31 - within the print statement and when you
03:33 - do this the value of num2 and num1 are
03:35 - not changed
03:39 - but if we wanted to change the value of
03:40 - num1 we could do it like this so i could
03:42 - go
03:42 - num1 equals num1
03:47 - plus 10. then i'm gonna
03:52 - print that out to the console to see
03:56 - to make sure that the value was changed
03:57 - correctly
03:59 - so i'm going to run it again
04:02 - and this time the second thing printed
04:04 - out is 22
04:06 - and the reason why we get 22 is because
04:08 - num1
04:10 - equal 12 but then this statement
04:13 - that comes afterward has no one equal
04:16 - num1
04:17 - plus 10. so it takes the value of 12 and
04:19 - adds 10 to it making it 22.
04:24 - now i will show you some information
04:26 - about user input
04:29 - now i will talk about user input and
04:31 - string concatenation
04:33 - bruff briefly mentioned this subject in
04:36 - our print statement lesson
04:37 - but concatenation is a fancy word for
04:41 - combining two strings together we can do
04:43 - this by simply
04:45 - combining two strings with a plus sign
04:48 - so hi plus there it will just in a print
04:51 - statement it would print out hi there
04:54 - and if you wanna write the same string
04:56 - multiple times and you don't want to
04:57 - have to
04:58 - write it again and again and again you
05:00 - can just do hello
05:01 - times six
05:09 - however when you use the plus sign to
05:11 - combine values
05:12 - it only works for strings if you try and
05:15 - do this with
05:16 - integers or floats an error will
05:19 - occur this is because the compiler is
05:22 - trying to mathematically add a number
05:24 - and a word which you actually can't do
05:28 - because you can't add 6 and hello that
05:31 - doesn't make sense
05:33 - so if you want to print out a string
05:35 - variable
05:36 - with a boolean or an integer
05:40 - or a float in the same print statement
05:42 - you can use one of two methods
05:45 - you can use a comma instead of a plus
05:48 - sign
05:48 - which will automatically add a space
05:50 - between the two values
05:52 - so when it prints out i'm there'll be a
05:54 - space then 17
05:55 - another space and then years old so it
05:57 - prints out i'm 17 years old
06:00 - and the spacing is correct
06:03 - or you could type class your inflow or
06:05 - boolean to a string
06:07 - you can place the non-string value
06:09 - inside the parentheses of the statement
06:12 - str for short for string and
06:15 - here's an example of it so we got print
06:17 - i'm
06:18 - plus string 17 plus years old notice how
06:22 - there's spaces at the end of this
06:24 - at the end of i'm and at the and before
06:27 - years old this is because when you use
06:29 - pluses it doesn't automatically add a
06:31 - space
06:32 - so you have to space it out in
06:35 - your quotation marks and not
06:38 - through the variable
06:43 - now when we talk about the len function
06:45 - len function
06:46 - we use the len function to get the
06:47 - length of a string
06:49 - you can put the string inside len to get
06:51 - the string's length
06:53 - if you see in this example there is
06:55 - class name which equals python
06:57 - then we make another variable which is
06:59 - equal to the length of class name when
07:02 - we print this out
07:04 - and concatenate it to make sure
07:07 - that it is spaced out properly
07:11 - it will print out word length is 6. it
07:16 - returns an
07:17 - integer this is because the length of a
07:20 - word is an
07:21 - integer not a string or a boolean or a
07:23 - float
07:25 - and remember that since it's an integer
07:27 - we have to concatenate if we're going to
07:29 - be using it with
07:30 - a string
07:35 - user input you we can get input
07:39 - from the keyboard by typing into our
07:42 - program
07:42 - we will do this with the input method so
07:45 - if you see here
07:46 - there's a print statement that asks what
07:47 - is your favorite class
07:49 - and a variable that equals input so what
07:52 - happens is this print statement will
07:54 - show up on the console
07:55 - and then there will be cur a cursor will
07:58 - appear
07:59 - and then you can type it in then
08:04 - there's another print statement here and
08:06 - it prints out your favorite class is
08:07 - plus whatever the input was so if you
08:09 - typed in math like in this example
08:12 - we'll say your favorite class is math
08:15 - alternatively you can combine this print
08:18 - statement and
08:19 - the variable declaration name equals
08:22 - input
08:23 - in something where you go name equals
08:25 - input
08:26 - what is your favorite class and then
08:29 - you can print out your favorite classes
08:30 - plus name and then you will get the
08:32 - same result except for one tiny
08:35 - difference
08:36 - your user input is entered on a
08:38 - different line
08:39 - when you separate name equals input and
08:42 - the print statement
08:44 - but if you don't separate them then the
08:47 - input
08:48 - and the print statement will be on the
08:49 - same line i will now show you a demo
08:52 - in pycharm here's the demo for user
08:54 - input
08:56 - so i'm going to start by asking for the
08:59 - person's name
09:00 - and to do this i'm actually going to
09:02 - combine
09:04 - my declaration of the variable in my
09:06 - print state so i'm going to say name
09:08 - equals input and then
09:11 - i'm going to have my parentheses
09:13 - quotation marks what
09:15 - is your name
09:18 - always remember spacing because that
09:20 - affects where your input
09:22 - is put
09:25 - because if you don't have the space the
09:28 - variable
09:28 - will be right next to the question mark
09:31 - and there will be no spaces in between
09:33 - this is also important to um
09:37 - watch out for when you're um
09:40 - connect concatenating with strings
09:44 - so i have a statement name equals input
09:46 - what is your name
09:48 - then i'm going to make another one that
09:49 - asks for age
09:51 - and since it's an integer and not a
09:53 - string i actually have to do something
09:55 - different
09:56 - now this this difference applies if
09:58 - you're using a boolean
10:00 - integer or float so before i
10:03 - type in input i have to say int
10:05 - parentheses
10:07 - input to let the computer know
10:10 - that i'm taking input as an int
10:14 - and you do the same thing with float
10:17 - and booleans except instead of writing
10:19 - in you'd write float
10:21 - or bool depending on what you're using
10:24 - and then you continue like normally
10:26 - after adding in before then you just
10:28 - make more parentheses
10:30 - and then have your print statement
10:31 - inside and this time i'm going to ask
10:35 - what is your age
10:40 - now i'm going to have a statement that
10:42 - tells the user
10:44 - the information that the user gave to us
10:47 - so we're gonna combine
10:50 - stuff or concatenate a string
10:54 - and an integer the string is name and
10:57 - the integer is age
10:59 - start with your
11:02 - name is and i'm going to try something
11:06 - here and see if it works
11:08 - your name is plus and i'm going to add
11:10 - name
11:12 - plus
11:16 - and u
11:19 - r
11:22 - plus age plus
11:26 - quotation marks years
11:29 - old so
11:32 - what this is supposed to do is print out
11:34 - your name
11:36 - is plus your name plus you and you are
11:40 - your age years old so if my name was
11:43 - george
11:44 - and i was 10 years old it your name is
11:46 - george
11:48 - and you are 10 years old at least it
11:50 - should anyway
11:52 - but when i run it
11:56 - i'm going to enter my name calvin my age
11:58 - 14.
11:59 - what happens is an error because you
12:02 - cannot use a plus sign
12:04 - for integers without typecasting
12:08 - the integer to a string
12:11 - but to fix this i don't have to typecast
12:15 - the integer age to a string i can also
12:18 - use commas
12:19 - i'm going to show you that now but since
12:21 - these commas automatically add a space
12:24 - i don't have to worry about spacing
12:27 - anymore so i can delete these spaces
12:30 - in the print statement portion
12:34 - of the print statement
12:38 - so then i will delete these plus signs
12:45 - and i will run it so what happens is i
12:48 - enter my name
12:50 - i enter my age and i'll print out your
12:52 - name is calvin and you are 14 years old
12:55 - but let's say i want to use plus signs
12:58 - so for this one i'd have to use spaces
13:02 - inside of the quotation marks to make
13:04 - sure that my print statement is
13:06 - formatted properly
13:13 - so now i replace the comma
13:16 - with a plus sign and then i use str then
13:20 - i surround age in parentheses
13:23 - this instead of this prints out
13:26 - age as a string instead of as an integer
13:32 - allowing you to use plus signs so now
13:35 - i'm going to try it and i made sure that
13:37 - i
13:37 - spaced out the words in quotation marks
13:41 - now i will run it again type in my name
13:52 - and my age and it responds
13:55 - your name is calvin and you are 14 years
13:57 - old
14:00 - uh thank you for watching this video i
14:02 - hope you learned a lot
14:04 - about user input and variable
14:07 - manipulation
14:08 - i hope you have a great day goodbye