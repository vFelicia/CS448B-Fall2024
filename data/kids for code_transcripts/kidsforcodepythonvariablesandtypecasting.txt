00:00 - hello my name is Ethan and today I'll be
00:04 - talking about variables and typecasting
00:07 - which is part of day three alright so
00:11 - what are data and data types so data is
00:14 - basically just information like if you
00:16 - think about data you think about just
00:19 - information and like anything that can
00:22 - be considered info like an item or like
00:24 - a fact
00:25 - or like a number right or your address
00:27 - that's all data it's all considered data
00:29 - so in Python there's also data and it's
00:33 - referred to as data types and there are
00:35 - many different types of data so for
00:38 - example here we have the number 42 and
00:40 - we have the word hello in Python these
00:43 - are two different data types which I'll
00:45 - be going over here so here are some
00:48 - basic data types
00:49 - there's the integer which is called int
00:52 - int when you type in Python and they are
00:56 - just basically a whole numbers such as 1
00:58 - 2 3 4 5 103 and 20 they're all integers
01:02 - and that number 42 before was an integer
01:05 - so what's a floating-point which is
01:08 - called float in Python so float
01:11 - describes decimal decimal numbers such
01:14 - as 99.5 2.25 and 3.0 so as you can see
01:19 - 3.0 is a decimal number as well like if
01:22 - you put float in front of a number or
01:24 - you just write out 3.0 it'll change it
01:27 - to always having a decimal point even
01:29 - though it's an integer it'll have a
01:31 - decimal point after if you convert it to
01:33 - a float datatype so a string which is
01:36 - STR for short
01:38 - in Python it's a sequence of characters
01:41 - like the word hello those are five five
01:45 - letters heo and five is also considered
01:49 - a character as well as aren't aren't is
01:52 - a word and it's consisted of these
01:54 - characters so basically if you were to
01:56 - type on your keyboard those are all
01:59 - basically the characters that you can
02:00 - use in a string and you have to put them
02:02 - in quotation marks so what's a boolean
02:04 - or B ool for as short and Python it's
02:08 - basically just true and false so it's a
02:10 - boolean value has to
02:13 - data types you like it's a data type but
02:15 - you can only store two values in it true
02:16 - or false so but you might be wondering
02:21 - what do you store data types in well
02:23 - variables are what you can store data
02:26 - data end so you can always store a
02:29 - variable store data into a variable by
02:31 - writing the name of your variable equals
02:34 - and then whatever you want to contain in
02:36 - your variable it could be like a float
02:38 - or it could be an integer it could be a
02:40 - string it could be a boolean value it
02:41 - can be whatever the data type you want
02:43 - so there are some naming rules when it
02:46 - comes to variables such as it can't have
02:48 - any spaces in it and it has to be camel
02:51 - case in basically camel case well it
02:53 - doesn't have to be camel case but it's
02:55 - just like the conventional way of naming
02:57 - variables you want to have a lowercase
02:59 - and then you want to have the next word
03:01 - to be uppercase and the words following
03:03 - also to be uppercase and it also can't
03:05 - start with a number or a symbol and it
03:08 - can't be a Python keyword and if it's a
03:11 - Python keyword you can tell because
03:12 - it'll become a different color than your
03:15 - IDE so let's test that out here so if I
03:20 - were to write the variable let's say the
03:26 - X variable X variable equals 5 that's a
03:32 - variable it works let's print it out to
03:34 - see if it works so this is how you print
03:37 - it out you can just store that data into
03:40 - a variable and you can use that variable
03:42 - in your code so here and what's so good
03:47 - about variables is you can change it as
03:49 - you go on but I'll talk about that in a
03:52 - bit so as you can see we can print out
03:54 - five but if we name it something like if
03:58 - as you can see it's highlighted
04:00 - different color you're good an error
04:03 - it's just a syntax error and it thinks
04:05 - it's an if statement but it's actually
04:06 - not so also if you would sin if you were
04:10 - to name it with a space like vary X
04:13 - right see what happens so you can see
04:16 - it's also invalid syntax because there's
04:19 - a space and it thinks that X the
04:21 - variable and it has this var in front of
04:23 - it which python doesn't recognize
04:26 - so if we also try naming it with a
04:29 - symbol in front like one and then
04:32 - variable equals five we can see that if
04:37 - you run it we can see that it will also
04:39 - have a syntax errors so when you name
04:41 - variables you have to be careful with
04:43 - your name and it's just best to name it
04:45 - something simple so you can see it and
04:47 - type it easily when you code all right
04:50 - so let's move on so python uses dynamic
04:54 - typing which means that variables can be
04:57 - renamed and reassigned datatypes which I
05:00 - just talked about so it makes python a
05:02 - flexible language and in simpler words
05:05 - it means that we don't have to basically
05:07 - write what data type you want our
05:09 - variable to be so as you can see here we
05:12 - have the variable item which is the
05:15 - string vegetable okay and then if we
05:18 - want to rename the variable or change
05:20 - the variable all we have to do in the
05:22 - next line of code or in some line after
05:24 - item equals vegetable we can just name
05:26 - it
05:26 - item equals 42 and now the variable into
05:29 - all the lines after we need we name it
05:31 - the variable is 42 so let's demonstrate
05:35 - that here so if you were to have the
05:38 - variable X equals 5 and then we print X
05:43 - and then we do x equals 10 then we print
05:49 - X again let's see what happened so as
05:53 - you can see X is 5 here and then we
05:56 - rename X to be 10 so as you can see I
06:00 - run it and it just prints out X which is
06:03 - originally five and then we rename the
06:05 - variable after and we print it again in
06:07 - it's 10 so that's just what dynamic
06:09 - typing is all right so here are some
06:13 - examples of declaring variables as you
06:15 - can see paid equals 19 that's an integer
06:19 - change equal to 0.67 that's a
06:21 - floating-point value did pay equals true
06:24 - that's a boolean value and message
06:26 - equals thank you for your order that's a
06:28 - string it's pretty simple alright so
06:31 - when it comes to printing variables I
06:33 - showed it already but you just name your
06:35 - variable and then you can print your
06:37 - variable you notice how you can only
06:38 - print it after
06:40 - your variable is defined so if you print
06:42 - your variable try to put your variable
06:44 - before you define it let's say you prime
06:46 - X into X and then we name X equals 5 it
06:53 - will won't work and this is because when
06:57 - we try to print it X is not defined like
07:00 - I said earlier it's dynamic typing and
07:02 - it always goes from top to bottom
07:03 - Python reads your code from top to
07:05 - bottom so if you were to print or do
07:07 - something with your variable before you
07:08 - define it it won't work so you have to
07:11 - define the variable before you do
07:12 - something with that variable such as
07:14 - printed of it and also you can
07:18 - concatenate variables together by
07:20 - combining variables or string or
07:23 - variable or integer plus variable just
07:26 - to combine it with a plus sign so let's
07:28 - demonstrate that here so we do print and
07:33 - we can do hi my name is and then we do
07:37 - space and then age 14 so let me put this
07:49 - into quotation marks and then we can do
07:53 - age 14 let's put that as a string plus
08:06 - okay so name plus string and my image is
08:19 - space and then plus age so let's see
08:23 - what happens when we print this out as
08:27 - you can see it prints hi my name is
08:28 - Ethan and my age is 14 so that's how you
08:31 - concatenate variables and other data
08:34 - types together in Python all right so we
08:38 - have a quick quiz here so what would be
08:41 - the output if I ran this code so let's
08:43 - look at this code paid equals 19 change
08:46 - equals 0.67 day to pay equals true and
08:50 - message equals thank you for your order
08:53 - so these are the four variables we
08:55 - defined earlier as well but it's
08:56 - defining this code here and now we're
08:58 - printing paid change and message and
09:01 - notice how we have three print
09:04 - statements in three different lines so
09:05 - it's gonna print in three different
09:07 - lines and if you look here B is the only
09:09 - one where it prints in three different
09:11 - lines and it prints these three
09:12 - variables paid change and message so be
09:15 - it must be the correct answer so let's
09:17 - check our let's check if we're right yup
09:20 - so we can see that B is the right answer
09:22 - here all right so checking data types in
09:27 - Python so if you don't know what data
09:30 - type you have and you want to know what
09:33 - it is you can simply just print out the
09:35 - type and by to do this just to type
09:38 - inside the parentheses you want to see
09:40 - what whatever you want to check the data
09:44 - type is you want to put inside those
09:45 - parentheses it could be a variable but
09:47 - it could also just be a simple string
09:48 - number integer or float but as you can
09:52 - see here we define pay t equals 19 and
09:54 - then we check the type of paid by doing
09:57 - type in parentheses paid and then we
10:00 - print that out and as you can see this
10:01 - is what's gonna be printed it's going to
10:03 - be print class it's because 19 is an
10:06 - integer so let's test this out so say x
10:10 - equals seven hundred eighty nine point
10:13 - one two three
10:14 - so let's print the type which is gonna
10:21 - be float I think so let's check it yeah
10:24 - its float I notice how it has decimal
10:26 - points so it's a float value all right
10:31 - so typecasting is basically just
10:33 - converting one piece of data to another
10:36 - so datatype converting and if I wanted
10:39 - to convert a shrink to an integer you
10:41 - just have to put STR like the
10:45 - abbreviation we went over earlier in
10:46 - front of your variable so as you can see
10:48 - here we have the variable num equals
10:51 - five and then we're going to print the
10:53 - type of num right type and it's going to
10:56 - be an integer because five is an integer
10:58 - here and then here we read if we're
11:01 - redefining the variable okay so we have
11:03 - num equals STR
11:06 - so STR is a function to convert whatever
11:10 - you put in the parentheses it's called
11:12 - the argument into a string so if we do
11:16 - this it'll print and we print the type
11:18 - of num after we change the type it'll
11:21 - become a string let me do STR in front
11:23 - of it okay
11:25 - so let's test this out and let's say
11:29 - well I'm gonna show you that you can't
11:32 - always convert it because it has to make
11:36 - sense right so let's say I had the
11:37 - string word equals hello and I wanted to
11:43 - convert this to an integer all right so
11:46 - that's first of all let's check type
11:50 - type or it's a string so we can check it
11:55 - it's a string STR and now let's do word
12:00 - equals int work okay and then let's try
12:06 - to print it out let's just try to print
12:07 - word out and see what happens
12:09 - as you can see we can error value error
12:13 - 'invalid literal for int with base 10
12:17 - because Hello is not a base 10 integer
12:21 - it's not a number so if you think about
12:23 - it it's like an invalid argument word is
12:26 - not going to be able to be converted to
12:28 - an integer in the int function because
12:31 - if you think about it Hello is basically
12:33 - not you can't convert hello to a number
12:36 - right all right let's move on now here's
12:40 - another example this is just converting
12:42 - a string to an integer here you can see
12:44 - that the string 5 is convertible because
12:47 - 5 is an integer right so you can convert
12:50 - it to an integer
12:52 - alright and that's it so thank you guys
12:56 - for watching and yeah