With timestamps:

00:00 - so recently came across this awesome
00:01 - tutorial on lighting a simple scene in
00:03 - unity and I thought I would do the same
00:05 - using the new and improved progressive
00:07 - light matter so in this video we'll
00:08 - learn a bunch about lighting and use it
00:10 - to put together this scene also make
00:12 - sure to check out the guy who made the
00:13 - original tutorial
00:14 - LMH poli he has a bunch of really useful
00:17 - videos this video is sponsored by Dennis
00:19 - Pandita then this is an awesome udemy
00:21 - instructor and has just launched a new
00:24 - course the complete unity 3d game
00:26 - development course throughout the series
00:28 - you'll learn how to create six
00:29 - completely different games this includes
00:31 - pong six egg and farmville when you're
00:33 - done you should have a solid
00:35 - understanding of unity as well as
00:37 - programming in c-sharp
00:38 - you'll also learn how to create basic 3d
00:40 - assets using blender so to get started
00:43 - simply click the link in the description
00:45 - and get a discount alright let's get
00:47 - into the video so before we start
00:49 - setting up lighting there are a few
00:50 - things that we need to understand the
00:52 - first one is global illumination we all
00:54 - know that our eyes work by picking up
00:56 - rays of light unless we are looking
00:59 - directly into a light source these rays
01:01 - of light bounce around between objects
01:03 - before hitting our eyes every time the
01:05 - light hits an object it gets modified
01:07 - absorbed or is sent out in a new
01:09 - direction depending on the properties of
01:11 - the material on that object because of
01:13 - how powerful modern computers are this
01:15 - is something that we can now simulate
01:17 - and the results can be incredibly
01:19 - realistic in computer graphics we split
01:21 - up this act of light bouncing around
01:23 - into two categories direct and indirect
01:26 - lighting direct lighting is when light
01:28 - gets sent out from a light source
01:30 - bounces once and then reaches the eye
01:33 - here is an example of a scene with only
01:35 - direct lighting enabled as you can see
01:37 - objects not directly influenced by the
01:39 - light are completely dark indirect
01:42 - lighting is when light bounces off
01:43 - multiple surfaces before hitting the eye
01:45 - of course theoretically light will keep
01:48 - bouncing until it gets fully absorbed
01:50 - but we can often get away by only
01:52 - calculating a few bounces after which
01:54 - the remaining light waves will be so
01:56 - weak that they don't have much influence
01:57 - on the final image anyway now enlighten
02:00 - is a solution for delivering real-time
02:02 - global illumination this is great if you
02:04 - have a lot of moving lights or objects
02:06 - in your scene but often you want to
02:08 - calculate lighting beforehand both to
02:10 - get more detailed lighting but also to
02:12 - save on
02:13 - performance this is called baking when
02:15 - you bake your lighting unity calculates
02:17 - all the lighting values and turns them
02:19 - into large textures that are then
02:21 - overlaid on top of your objects while
02:24 - you can use enlighten to beg your
02:25 - lighting it's much preferred to use the
02:27 - new progressive light mapper the
02:29 - progressive light mapper is a path
02:31 - tracing based light mapper which means
02:33 - that it will realistically simulate
02:35 - lighting bouncing around the scene it
02:37 - does this by gradually sending out light
02:39 - rays from the camera towards the light
02:41 - sources this means that you can see the
02:43 - result as it renders in the editor and
02:45 - you can adjust light properties without
02:46 - having to re render the entire scene so
02:49 - with that explanation let's jump right
02:50 - in to unity sir is the symbol seen in
02:53 - unity I'm using completely default
02:55 - settings here the only thing I've done
02:56 - is gone ahead and import two 3d models
02:59 - we have the room here which is just a
03:01 - simple cubes where we can see through
03:03 - the back faces of the walls and a monkey
03:06 - it's cute right I've also taken my main
03:08 - camera and positioned it so it looks
03:10 - inside of the room now the first thing
03:12 - that we want to do is set up a few light
03:14 - sources by default every unity scene
03:16 - comes with a directional light I will
03:19 - simply go ahead and remove this that's
03:21 - because I want this to be an indoor
03:23 - scene so instead let's create our own
03:25 - lights of course we could go right click
03:26 - light and select one of the predefined
03:29 - lights or we could simply create an
03:31 - object with an emissive material and
03:33 - that's what we're going to be doing here
03:35 - so that's right click go 3d object and
03:37 - let's select a plane that's also
03:39 - disabled lighting in the scene view so
03:41 - we can clearly see what's going on let's
03:43 - set the scale of this plane to 0.2 by 1
03:46 - by 0.2
03:47 - let's also reset its position let's
03:50 - rotate it by negative 90 on the Z here
03:52 - it's not pointing out from the left wall
03:54 - I'm gonna hold down control in order to
03:57 - snap this plane it snap it into the wall
03:59 - let's move it down to stand right on top
04:01 - of our ground I'm also going to take it
04:03 - and move it out a tiny tiny bit we can
04:06 - use something like negative 2.49 just to
04:10 - make sure that it doesn't intersect with
04:11 - our wall so right now our plane has a
04:13 - default material applied instead we want
04:16 - to go ahead and create a material that
04:17 - will emit light on to the rest of our
04:19 - scene to do that let's right-click in
04:21 - the project go create let's create a
04:23 - material I'm gonna call this material or
04:26 - light and I'm then gonna drag it onto a
04:29 - plane on the right hand side here under
04:31 - emission let's enable that and here we
04:33 - can choose a color I've already found an
04:36 - orange color that I like so I'm simply
04:38 - going to paste it in here you can of
04:39 - course use the same one if you want I'm
04:41 - also going to set the amount of emission
04:43 - to 1.5 so down here we can see that it
04:46 - makes our material look brighter but in
04:48 - a scene it's currently not really doing
04:50 - anything first off we need to make sure
04:51 - to rename a lighting but still nothing
04:54 - is happening the reason why is that
04:56 - objects with emission won't actually
04:58 - emit light in real time now in order for
05:01 - this to show we have to bake a light map
05:03 - and to do this we have to let unity know
05:05 - that our light as well as the rest of
05:07 - the objects in our scene are all static
05:09 - in other words our objects aren't going
05:11 - to move so we can safely bake a light
05:13 - map for them to do that let's select our
05:14 - plane hold down shift and select the
05:17 - room and monkey as well let's go to the
05:18 - top right here and select static and now
05:21 - you can see in here in the bottom right
05:23 - corner that unity starts baking a light
05:25 - map and right away we can see the result
05:27 - this is by no means pretty yet but we
05:29 - definitely have lighting in the scene
05:31 - I'm gonna rename the plane here to
05:33 - orange light I'm gonna duplicate it and
05:36 - then going to go to the exposition here
05:38 - and remove the minus to snap it to the
05:41 - other side and I'm also going to rotate
05:43 - it around the y
05:44 - 180 degrees finally I'm going to
05:46 - duplicate the orange light material I'm
05:49 - gonna rename it to blue light and then
05:51 - gonna drag it on to the light on the
05:53 - right hand side here I'm gonna select
05:54 - the color and I have a blue color
05:57 - prepared as well and I'm also going to
05:59 - go and change the emission to two
06:00 - finally I'll select the new light and
06:02 - rename it to blue light so now in our
06:05 - game view we can see that we have two
06:07 - lights and this simple scene but it
06:09 - doesn't look too good yet one of the
06:12 - reasons why is whenever you import a 3d
06:15 - object you have to make sure that the
06:17 - object has light map URIs in some cases
06:20 - you can get away by simply selecting the
06:22 - object an enabling generate light map
06:24 - UVs
06:25 - this means that unity will automatically
06:27 - calculate the light map movies for this
06:29 - object if we apply on our room here you
06:31 - can see not much changed that's because
06:33 - when creating this room in my modeling
06:35 - software I've already made sure to
06:37 - create UVs for it as well but makes
06:39 - to use this option if you haven't but a
06:41 - scene still doesn't look that good let's
06:44 - try and change the lighting properties
06:46 - to do this we'll go window go and do
06:48 - lighting and choose settings this will
06:51 - bring up the lighting window first
06:52 - because this is an outdoor scene I'm
06:54 - going to go ahead and remove the skybox
06:56 - material so I'll simply set this to none
06:58 - right away you can see this darkens our
07:00 - scene and gives it kind of a bluish tint
07:02 - that's because the default ambient color
07:04 - in unity is a dark blue if your entire
07:07 - scene is indoors there really shouldn't
07:09 - be any ambient lighting all the lighting
07:12 - should come from light emitters within
07:14 - your scene so we'll go ahead and set
07:16 - this to a complete black we'll also make
07:18 - sure to disable real-time global
07:19 - illumination because again we want to
07:21 - only bake our light Maps and you can see
07:24 - right away our entire scene becomes dark
07:26 - that's because so far unity has been
07:27 - using real-time calculated lighting and
07:30 - now unity actually starts baking a light
07:32 - map again the result here is not too
07:34 - impressive that's because we want to
07:35 - configure our light mapping settings
07:37 - first we choose what light map we want
07:40 - to use we of course want to change this
07:42 - from enlighten to progressive sometimes
07:44 - when changing between the two options
07:46 - you have to go down and deselect Auto
07:48 - generate then go to the drop down arrow
07:51 - and hit clear bake data and then we can
07:54 - once again enable it you'll notice how
07:55 - the entire scene again turns black and
07:58 - it might say it's backing down here but
08:00 - the result is also completely dark the
08:02 - reason why is when using the progressive
08:04 - light mapper we have to make sure to go
08:06 - into our emissive materials so here's
08:09 - the blue light and under emission change
08:11 - it from real-time global illumination to
08:13 - baked go ahead and do the same thing for
08:15 - the orange light and right away you can
08:17 - see the light mapper working in our
08:19 - scene you can also see that it looks
08:21 - very noisy and after while everything
08:24 - suddenly looks smooth and the result is
08:26 - already much better if you now go ahead
08:28 - and make a change to a scene say let's
08:30 - move our monkey we can again see this
08:32 - noise reappearing what we're seeing is
08:35 - actual light rays getting sent out and
08:37 - as more and more gets sent out the noise
08:40 - gets reduced and finally when the light
08:42 - mapper has sent out all of its samples
08:44 - it simply takes the result and blurs it
08:47 - you can also see that because I have
08:48 - prioritized view enabled the light
08:51 - mapper will actually render the part
08:52 - that we
08:53 - looking at in the scene view first this
08:55 - is super cool if you want to focus on a
08:57 - specific part of your scene so now it's
08:59 - time to play around with some settings
09:01 - and the first most noticeable problem
09:03 - that we want to get rid of is this weird
09:06 - theme running down the monkey's head now
09:08 - this seam is here because I've gone
09:10 - ahead and manually uvd monkey and this
09:13 - is one of the places that I decided to
09:15 - put a seam but of course we want to make
09:17 - this as hard to notice as possible and
09:19 - one of the really cool tools that we
09:21 - have here is what is called seam
09:22 - stitching this is something you enable
09:25 - per object so if we go ahead and select
09:26 - our monkey switch to the inspector and
09:29 - go under the mesh renderer under
09:31 - lighting here we have a separate
09:32 - category for light map settings and here
09:35 - is a property called stitch themes if we
09:37 - now enable it you can see that
09:39 - immediately the seam gets blurred out
09:41 - and becomes way less noticeable I
09:44 - definitely recommend turning that on for
09:45 - most complex objects and our lighting
09:47 - actually already looks okay one of the
09:50 - things that we can do is easily decrease
09:52 - the light map size this is simply the
09:55 - end resolution of our texture because
09:57 - our scene is very small we can
09:58 - definitely decrease this to 512 as you
10:01 - can see the end result is pretty much
10:02 - the same and we've just more than half
10:04 - the size of a light map we can also
10:06 - choose whether or not to compress the
10:08 - light map this will heavily reduce the
10:10 - file size but it can also add a lot of
10:13 - weird artifacting to the lighting in
10:15 - fact we can see an example of that right
10:17 - here these weird pants are because of
10:19 - compression on the light map so let's
10:21 - try and disable it you can see right
10:23 - away our light map increases in size but
10:26 - the banding is now gone we can also see
10:29 - on the side of the monkey here on the
10:31 - ear we're getting these weird purple
10:33 - colors now these are definitely not
10:35 - supposed to be here this is what we call
10:38 - bleeding it's when data from one part of
10:40 - the light map leads into data from
10:43 - another part of the light map if we
10:45 - switch to the global maps tab here we
10:47 - can actually see the two textures that
10:48 - were generated for a scene notice how we
10:50 - can recognize different parts of the
10:52 - scene in these maps we have different
10:55 - walls from the room we have different
10:57 - parts of the monkey if some of these
10:59 - elements start to bleed into each other
11:01 - we get this weird result so to try and
11:03 - get rid of this I would start by
11:05 - increasing the light map
11:06 - patting let's try and set this to eight
11:08 - right away we can see that the problem
11:10 - still occurs let's now try and increase
11:12 - the light map resolution let's try and
11:15 - increase it to a hundred now that
11:17 - definitely helped but we can still see a
11:18 - tiny bit of bleeding so let's try
11:20 - increasing them a tiny bit more and
11:22 - there we go with the problem is now gone
11:24 - keep in mind that every time you
11:25 - increase the light map resolution it
11:27 - will also take longer for your light map
11:29 - to bake so some of these settings you
11:31 - might want to leave fairly low while
11:32 - adjusting and then when it's time to
11:34 - bake the final result you can bump them
11:36 - up this also applies to the number of
11:38 - direct and indirect samples sambal is
11:40 - basically just another word for Ray so
11:43 - this here is the number of briefs that
11:44 - we send out per Texel in order to
11:47 - determine the direct lighting in our
11:49 - scene and this here is the same but for
11:50 - indirect lighting in other words if we
11:52 - go ahead and increase these we should
11:54 - get greater detail in the result we can
11:57 - also adjust the number of bounces that
11:59 - we want to calculate we could say set
12:01 - this to 3 and this could take a while so
12:03 - you might want to go off and do
12:04 - something else and you can see the
12:06 - result is a much smoother less noisy
12:09 - light map and the lighting will
12:11 - definitely be more precise this is
12:13 - always one of those settings that I just
12:15 - leave by default when I'm setting up the
12:17 - scene and then crank all the way up when
12:19 - it's time for a final render especially
12:21 - because the number of direct samples and
12:23 - bounces don't have any influence on the
12:25 - size of our light map they just increase
12:27 - the time it takes so I'm gonna set these
12:29 - back and finally I'm going to enable
12:30 - something that will make everything look
12:33 - much much better I think this is
12:35 - everyone's favorite setting to enable
12:37 - I'm of course talking about ambient
12:38 - occlusion ambient occlusion
12:40 - is the shattering that occurs between
12:42 - two nearby objects as you can see in the
12:44 - corners of a room here in the crevices
12:47 - on a monkey and where our monkey sits on
12:49 - the ground so right now it's maybe a bit
12:51 - too much I'm going to decrease it to 0.1
12:54 - and also decrease the max distance to
12:56 - 0.7 finally if you find errors in your
12:58 - light map that you just can't get rid of
13:01 - by adjusting these settings it might be
13:03 - because it happens during unities
13:05 - filtering stage this is why unity takes
13:07 - the fairly noisy light map and applies
13:09 - some post-processing in order to smooth
13:11 - it out luckily we can adjust how unity
13:13 - filters the light map to do this we go
13:16 - to filtering and you can see what
13:17 - happens if I disable this
13:19 - this is the finished light map in its
13:20 - raw form from here we can go under
13:23 - advanced and we can add different types
13:25 - of filtering I find that in 90% of cases
13:27 - I use caution and here you have the
13:30 - possibility to dial down the amount of
13:31 - filtering both for the direct and
13:33 - indirect lighting as well as the ambient
13:35 - occlusion
13:36 - for indoor scenes I often have to go in
13:38 - here and decrease the filtering on the
13:40 - indirect radius as you can see the scene
13:42 - still doesn't look noisy and it often
13:44 - removes weird lighting glitches but for
13:47 - this scene we can simply keep it add
13:48 - Auto finally if your scene is overall
13:51 - too dark you can increase the indirect
13:53 - intensity or give your entire seen a
13:55 - boost using the albedo boost one of the
13:58 - questions that I get asked the most is
14:00 - how do you add glow to your lights there
14:03 - currently is shining on to the
14:04 - environment and that's fine but most of
14:06 - the time when you look directly at
14:07 - lights in real life or through a camera
14:10 - they will have this sort of glowing halo
14:12 - effect the answer is we don't actually
14:14 - add this through the lighting system
14:16 - instead we use post-processing effects
14:18 - to do that we'll go to the asset store
14:21 - will search for post-processing select
14:24 - it hit import and import again then we
14:26 - want to select our camera go to the
14:28 - inspector and here we want to add a
14:30 - component called the post-processing
14:32 - behavior this will enable
14:34 - post-processing on our camera we can
14:36 - then switch to the game you to see the
14:38 - result right click in the project panel
14:40 - go create and we'll create a
14:41 - post-processing profile which will store
14:43 - all of our settings we called it CC for
14:45 - color correction select our main camera
14:47 - and drag in our CC object and now when
14:50 - we select our CC object we have all
14:52 - these different post-processing effects
14:54 - the one that creates glow for our lights
14:56 - is the one called bloom and this might
14:59 - be a bit too much so let's open up our
15:01 - bloom let's decrease the intensity to
15:04 - 0.3 and let's also decrease the radius
15:06 - to something along 2.8 and while we
15:09 - added we can also add a tiny bit of
15:11 - color grading let's enable that open it
15:13 - up and we'll change the tone mapper to
15:15 - filmic will also increase the exposure a
15:18 - bit and maybe we want to decrease our
15:20 - bloom even more and finally we can go in
15:22 - and add a vignette and we probably want
15:25 - to decrease the intensity on this one as
15:27 - well so there you go that's the basics
15:29 - of lighting a scene in unity
15:32 - that's pretty much it for this video if
15:33 - you want to learn more about lighting
15:35 - such as how to set up real-time lighting
15:37 - in unity definitely let me know in the
15:39 - comments also make sure to check out the
15:41 - complete unity 3d game development
15:43 - course simply click the link in the
15:44 - description to get started and get a
15:46 - discount along the way on that thanks
15:48 - for watching and I will see you in the
15:49 - next video thanks to of the awesome
15:51 - patreon supporters who donated in
15:53 - December and a special thanks to German
15:54 - beefy O infinity PBR euro Omer and soft
15:58 - tune sighs mummy Derek M skirt myrrh
16:00 - free Samara Peter died double-tap 45
16:02 - James Pete and Evans Thomas Wally
16:04 - Superman the great John Burkhart coke
16:06 - approaches Lotito Alex for kid ski
16:08 - Suniya Hobson James Rogers Robert pond
16:11 - rock fan and Erasmus

Cleaned transcript:

so recently came across this awesome tutorial on lighting a simple scene in unity and I thought I would do the same using the new and improved progressive light matter so in this video we'll learn a bunch about lighting and use it to put together this scene also make sure to check out the guy who made the original tutorial LMH poli he has a bunch of really useful videos this video is sponsored by Dennis Pandita then this is an awesome udemy instructor and has just launched a new course the complete unity 3d game development course throughout the series you'll learn how to create six completely different games this includes pong six egg and farmville when you're done you should have a solid understanding of unity as well as programming in csharp you'll also learn how to create basic 3d assets using blender so to get started simply click the link in the description and get a discount alright let's get into the video so before we start setting up lighting there are a few things that we need to understand the first one is global illumination we all know that our eyes work by picking up rays of light unless we are looking directly into a light source these rays of light bounce around between objects before hitting our eyes every time the light hits an object it gets modified absorbed or is sent out in a new direction depending on the properties of the material on that object because of how powerful modern computers are this is something that we can now simulate and the results can be incredibly realistic in computer graphics we split up this act of light bouncing around into two categories direct and indirect lighting direct lighting is when light gets sent out from a light source bounces once and then reaches the eye here is an example of a scene with only direct lighting enabled as you can see objects not directly influenced by the light are completely dark indirect lighting is when light bounces off multiple surfaces before hitting the eye of course theoretically light will keep bouncing until it gets fully absorbed but we can often get away by only calculating a few bounces after which the remaining light waves will be so weak that they don't have much influence on the final image anyway now enlighten is a solution for delivering realtime global illumination this is great if you have a lot of moving lights or objects in your scene but often you want to calculate lighting beforehand both to get more detailed lighting but also to save on performance this is called baking when you bake your lighting unity calculates all the lighting values and turns them into large textures that are then overlaid on top of your objects while you can use enlighten to beg your lighting it's much preferred to use the new progressive light mapper the progressive light mapper is a path tracing based light mapper which means that it will realistically simulate lighting bouncing around the scene it does this by gradually sending out light rays from the camera towards the light sources this means that you can see the result as it renders in the editor and you can adjust light properties without having to re render the entire scene so with that explanation let's jump right in to unity sir is the symbol seen in unity I'm using completely default settings here the only thing I've done is gone ahead and import two 3d models we have the room here which is just a simple cubes where we can see through the back faces of the walls and a monkey it's cute right I've also taken my main camera and positioned it so it looks inside of the room now the first thing that we want to do is set up a few light sources by default every unity scene comes with a directional light I will simply go ahead and remove this that's because I want this to be an indoor scene so instead let's create our own lights of course we could go right click light and select one of the predefined lights or we could simply create an object with an emissive material and that's what we're going to be doing here so that's right click go 3d object and let's select a plane that's also disabled lighting in the scene view so we can clearly see what's going on let's set the scale of this plane to 0.2 by 1 by 0.2 let's also reset its position let's rotate it by negative 90 on the Z here it's not pointing out from the left wall I'm gonna hold down control in order to snap this plane it snap it into the wall let's move it down to stand right on top of our ground I'm also going to take it and move it out a tiny tiny bit we can use something like negative 2.49 just to make sure that it doesn't intersect with our wall so right now our plane has a default material applied instead we want to go ahead and create a material that will emit light on to the rest of our scene to do that let's rightclick in the project go create let's create a material I'm gonna call this material or light and I'm then gonna drag it onto a plane on the right hand side here under emission let's enable that and here we can choose a color I've already found an orange color that I like so I'm simply going to paste it in here you can of course use the same one if you want I'm also going to set the amount of emission to 1.5 so down here we can see that it makes our material look brighter but in a scene it's currently not really doing anything first off we need to make sure to rename a lighting but still nothing is happening the reason why is that objects with emission won't actually emit light in real time now in order for this to show we have to bake a light map and to do this we have to let unity know that our light as well as the rest of the objects in our scene are all static in other words our objects aren't going to move so we can safely bake a light map for them to do that let's select our plane hold down shift and select the room and monkey as well let's go to the top right here and select static and now you can see in here in the bottom right corner that unity starts baking a light map and right away we can see the result this is by no means pretty yet but we definitely have lighting in the scene I'm gonna rename the plane here to orange light I'm gonna duplicate it and then going to go to the exposition here and remove the minus to snap it to the other side and I'm also going to rotate it around the y 180 degrees finally I'm going to duplicate the orange light material I'm gonna rename it to blue light and then gonna drag it on to the light on the right hand side here I'm gonna select the color and I have a blue color prepared as well and I'm also going to go and change the emission to two finally I'll select the new light and rename it to blue light so now in our game view we can see that we have two lights and this simple scene but it doesn't look too good yet one of the reasons why is whenever you import a 3d object you have to make sure that the object has light map URIs in some cases you can get away by simply selecting the object an enabling generate light map UVs this means that unity will automatically calculate the light map movies for this object if we apply on our room here you can see not much changed that's because when creating this room in my modeling software I've already made sure to create UVs for it as well but makes to use this option if you haven't but a scene still doesn't look that good let's try and change the lighting properties to do this we'll go window go and do lighting and choose settings this will bring up the lighting window first because this is an outdoor scene I'm going to go ahead and remove the skybox material so I'll simply set this to none right away you can see this darkens our scene and gives it kind of a bluish tint that's because the default ambient color in unity is a dark blue if your entire scene is indoors there really shouldn't be any ambient lighting all the lighting should come from light emitters within your scene so we'll go ahead and set this to a complete black we'll also make sure to disable realtime global illumination because again we want to only bake our light Maps and you can see right away our entire scene becomes dark that's because so far unity has been using realtime calculated lighting and now unity actually starts baking a light map again the result here is not too impressive that's because we want to configure our light mapping settings first we choose what light map we want to use we of course want to change this from enlighten to progressive sometimes when changing between the two options you have to go down and deselect Auto generate then go to the drop down arrow and hit clear bake data and then we can once again enable it you'll notice how the entire scene again turns black and it might say it's backing down here but the result is also completely dark the reason why is when using the progressive light mapper we have to make sure to go into our emissive materials so here's the blue light and under emission change it from realtime global illumination to baked go ahead and do the same thing for the orange light and right away you can see the light mapper working in our scene you can also see that it looks very noisy and after while everything suddenly looks smooth and the result is already much better if you now go ahead and make a change to a scene say let's move our monkey we can again see this noise reappearing what we're seeing is actual light rays getting sent out and as more and more gets sent out the noise gets reduced and finally when the light mapper has sent out all of its samples it simply takes the result and blurs it you can also see that because I have prioritized view enabled the light mapper will actually render the part that we looking at in the scene view first this is super cool if you want to focus on a specific part of your scene so now it's time to play around with some settings and the first most noticeable problem that we want to get rid of is this weird theme running down the monkey's head now this seam is here because I've gone ahead and manually uvd monkey and this is one of the places that I decided to put a seam but of course we want to make this as hard to notice as possible and one of the really cool tools that we have here is what is called seam stitching this is something you enable per object so if we go ahead and select our monkey switch to the inspector and go under the mesh renderer under lighting here we have a separate category for light map settings and here is a property called stitch themes if we now enable it you can see that immediately the seam gets blurred out and becomes way less noticeable I definitely recommend turning that on for most complex objects and our lighting actually already looks okay one of the things that we can do is easily decrease the light map size this is simply the end resolution of our texture because our scene is very small we can definitely decrease this to 512 as you can see the end result is pretty much the same and we've just more than half the size of a light map we can also choose whether or not to compress the light map this will heavily reduce the file size but it can also add a lot of weird artifacting to the lighting in fact we can see an example of that right here these weird pants are because of compression on the light map so let's try and disable it you can see right away our light map increases in size but the banding is now gone we can also see on the side of the monkey here on the ear we're getting these weird purple colors now these are definitely not supposed to be here this is what we call bleeding it's when data from one part of the light map leads into data from another part of the light map if we switch to the global maps tab here we can actually see the two textures that were generated for a scene notice how we can recognize different parts of the scene in these maps we have different walls from the room we have different parts of the monkey if some of these elements start to bleed into each other we get this weird result so to try and get rid of this I would start by increasing the light map patting let's try and set this to eight right away we can see that the problem still occurs let's now try and increase the light map resolution let's try and increase it to a hundred now that definitely helped but we can still see a tiny bit of bleeding so let's try increasing them a tiny bit more and there we go with the problem is now gone keep in mind that every time you increase the light map resolution it will also take longer for your light map to bake so some of these settings you might want to leave fairly low while adjusting and then when it's time to bake the final result you can bump them up this also applies to the number of direct and indirect samples sambal is basically just another word for Ray so this here is the number of briefs that we send out per Texel in order to determine the direct lighting in our scene and this here is the same but for indirect lighting in other words if we go ahead and increase these we should get greater detail in the result we can also adjust the number of bounces that we want to calculate we could say set this to 3 and this could take a while so you might want to go off and do something else and you can see the result is a much smoother less noisy light map and the lighting will definitely be more precise this is always one of those settings that I just leave by default when I'm setting up the scene and then crank all the way up when it's time for a final render especially because the number of direct samples and bounces don't have any influence on the size of our light map they just increase the time it takes so I'm gonna set these back and finally I'm going to enable something that will make everything look much much better I think this is everyone's favorite setting to enable I'm of course talking about ambient occlusion ambient occlusion is the shattering that occurs between two nearby objects as you can see in the corners of a room here in the crevices on a monkey and where our monkey sits on the ground so right now it's maybe a bit too much I'm going to decrease it to 0.1 and also decrease the max distance to 0.7 finally if you find errors in your light map that you just can't get rid of by adjusting these settings it might be because it happens during unities filtering stage this is why unity takes the fairly noisy light map and applies some postprocessing in order to smooth it out luckily we can adjust how unity filters the light map to do this we go to filtering and you can see what happens if I disable this this is the finished light map in its raw form from here we can go under advanced and we can add different types of filtering I find that in 90% of cases I use caution and here you have the possibility to dial down the amount of filtering both for the direct and indirect lighting as well as the ambient occlusion for indoor scenes I often have to go in here and decrease the filtering on the indirect radius as you can see the scene still doesn't look noisy and it often removes weird lighting glitches but for this scene we can simply keep it add Auto finally if your scene is overall too dark you can increase the indirect intensity or give your entire seen a boost using the albedo boost one of the questions that I get asked the most is how do you add glow to your lights there currently is shining on to the environment and that's fine but most of the time when you look directly at lights in real life or through a camera they will have this sort of glowing halo effect the answer is we don't actually add this through the lighting system instead we use postprocessing effects to do that we'll go to the asset store will search for postprocessing select it hit import and import again then we want to select our camera go to the inspector and here we want to add a component called the postprocessing behavior this will enable postprocessing on our camera we can then switch to the game you to see the result right click in the project panel go create and we'll create a postprocessing profile which will store all of our settings we called it CC for color correction select our main camera and drag in our CC object and now when we select our CC object we have all these different postprocessing effects the one that creates glow for our lights is the one called bloom and this might be a bit too much so let's open up our bloom let's decrease the intensity to 0.3 and let's also decrease the radius to something along 2.8 and while we added we can also add a tiny bit of color grading let's enable that open it up and we'll change the tone mapper to filmic will also increase the exposure a bit and maybe we want to decrease our bloom even more and finally we can go in and add a vignette and we probably want to decrease the intensity on this one as well so there you go that's the basics of lighting a scene in unity that's pretty much it for this video if you want to learn more about lighting such as how to set up realtime lighting in unity definitely let me know in the comments also make sure to check out the complete unity 3d game development course simply click the link in the description to get started and get a discount along the way on that thanks for watching and I will see you in the next video thanks to of the awesome patreon supporters who donated in December and a special thanks to German beefy O infinity PBR euro Omer and soft tune sighs mummy Derek M skirt myrrh free Samara Peter died doubletap 45 James Pete and Evans Thomas Wally Superman the great John Burkhart coke approaches Lotito Alex for kid ski Suniya Hobson James Rogers Robert pond rock fan and Erasmus
