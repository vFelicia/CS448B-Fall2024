With timestamps:

00:00 - this video is brought to you by our own
00:01 - Metta thank you so much for donating if
00:03 - you want to support breakage yourself
00:04 - you can go to patreon.com/scishow geez
00:06 - thanks for tuning in at brac ease hello
00:11 - and welcome to this video including at
00:12 - our defense game in unity today we'll be
00:14 - making a game over screen so whenever we
00:16 - run out of lives
00:18 - we'll have this cool UI that animates
00:20 - onto the screen and displays the amount
00:21 - of waves we were able to survive through
00:23 - along with a retry button and a menu
00:26 - button and we haven't yet created a main
00:28 - menu but it's definitely on the roadmap
00:30 - so we'll just go ahead and add this
00:31 - button now and then we can link it up to
00:34 - the menu at a later point also if you
00:36 - think that I sound a bit weird that is
00:38 - because I'm currently sick it's nothing
00:41 - serious but it is definitely annoying so
00:43 - and it might have an effect on my voice
00:45 - and also um I will have to push the
00:50 - livestream from this month livestream on
00:53 - to the beginning of next month because
00:55 - of this and yeah so I will be
00:58 - live-streaming hopefully if everything
01:00 - goes well on November the second which
01:02 - is a Wednesday so you can reserve that
01:05 - date if you want to join in on it and
01:08 - yeah that was pretty much all I needed
01:10 - to say so let's just jump right into it
01:12 - so as you can see I'm here in unity and
01:14 - what I want to start with is um kind of
01:18 - sketching out the UI so let's start by
01:20 - going to our overlay canvas because this
01:22 - is going to be overlaid on top of the
01:24 - screen and creating an entirely new
01:26 - object let's just make this an empty
01:28 - object in fact and let's stretch this to
01:30 - fit the entire screen and this one is
01:33 - going to be our game over UI then we can
01:37 - right click on that go to UI and select
01:39 - arm panel and again we want to stretch
01:42 - this to the entire screen we want to
01:44 - remove the source image to make this
01:46 - completely square and get rid of the
01:48 - roundings and then we can find some cool
01:51 - background color here so I want to make
01:53 - this pretty Dyke and I wanted to try out
01:56 - kind of a purple looking color without
01:59 - making this too girly I think that could
02:01 - actually be pretty cool so something
02:03 - like this just to kind of dim everything
02:06 - down and then we can op the Alpha on
02:08 - this so let's actually adjust the color
02:11 - again now that we've done that
02:13 - and I think something like this is
02:15 - fairly decent as a backdrop what I
02:19 - recommend whenever doing this kind of
02:20 - game over menus and stuff is going into
02:22 - Photoshop and just going crazy if you
02:24 - know how to do 2d design to make a cool
02:27 - looking game over screen but if that's
02:30 - not something that you want to spend
02:31 - time on if your thing that's too
02:33 - difficult you can just do this inside of
02:36 - unity as I'm doing here so this is going
02:39 - to be our background and then we have a
02:41 - ul mi UI element which is going to be a
02:44 - text object and this is just going to
02:47 - say game over at the on top of the
02:50 - screen here so that's just actually
02:52 - let's just anchor everything to the
02:54 - center but let's then move this up and
02:56 - kind of size it up here and let's change
02:59 - this to Center and Center and let's make
03:02 - this a font size of thumb something like
03:04 - 100 we're going to make this say game
03:07 - over
03:08 - and of course we need to scale this out
03:10 - in order for this to be displayed on the
03:12 - screen and this is maybe just a tad too
03:15 - big so that's cool 85 or something it's
03:18 - also changed the font to Roboto black
03:20 - and change the color here to some
03:23 - completely white color I actually kind
03:26 - of like the look of this but I think we
03:28 - don't even need it to be on this heavy
03:30 - on the font I think something like a
03:32 - real bottle medium is actually going to
03:34 - be great and then we'll put whatever
03:37 - text we decide to show here like really
03:41 - in the center and make it really bold to
03:44 - emphasize it so this looks pretty good
03:47 - and then what we can do is maybe just
03:48 - add some kind of shadow to this so let's
03:52 - add a shadow and we can maybe make this
03:54 - 2 by minus 2 and you could just make
03:57 - this black or we could go completely
03:59 - crazy and make it red but I think that
04:01 - we are again going to do that to our
04:03 - center element here so this is fine and
04:06 - we can call this our game over text or
04:09 - you could just call it something like
04:10 - title then we can duplicate this and
04:13 - actually let's just make this fit the
04:16 - screen it just looks better that way
04:17 - let's duplicate this and move it down
04:19 - and one thing that I wanted to do is
04:21 - right now if we maximize the game view
04:23 - you can node you will see that the text
04:25 - doesn't stretch
04:26 - in order to easily make it stretch
04:28 - together with our game view we can go
04:31 - into our overlaid canvas we can find the
04:34 - canvas scaler and change this to scale
04:36 - with screen size and if we then bump
04:39 - this over to scale with the height we
04:41 - actually get a pretty nice looking
04:43 - effect here especially for the icons
04:45 - down here which before just kind of
04:47 - disappeared in the UI but now that they
04:49 - stretch with it things are looking
04:51 - pretty good so that's let's just keep
04:54 - that so our second gameovertext here is
04:57 - not going to say game over this is going
04:59 - to be a number and this is going to be
05:01 - the amount of rounds we have survived so
05:03 - let's just now set this to like a huge
05:05 - number 125 for example let's make the
05:09 - font size even bigger let's do 120 and
05:12 - let's change the font here to Roboto
05:15 - black let's just try that and we can
05:17 - always change it later and we need to
05:20 - give this plenty of space and this is
05:22 - going to be our rounds and then we
05:25 - actually let's wrap this entire thing
05:27 - into an empty object so let's create an
05:29 - empty object here do something like this
05:32 - stretch it out there let's call this our
05:35 - rounds survived and under that we are
05:39 - going to have our rounds and let's
05:40 - duplicate that and this is going to be
05:42 - our text that kind of explains what this
05:45 - is and that is just going to say
05:47 - something it's going to be a lot smaller
05:49 - something like 20 and it's just going to
05:51 - say rounds survived or waves or whatever
05:55 - you want to call this I'm just going to
05:56 - save rounds and we can stretch this down
06:00 - put that somewhere round on there just
06:05 - where you think it looks nice
06:07 - the one is always kind of annoying when
06:09 - lining up elements so let's just put it
06:11 - 25 here and you can see that that is
06:13 - indeed centered and yeah I think that
06:16 - looks pretty good whatever what I want
06:18 - to do is kind of change the font here
06:20 - something more alight I think Roboto
06:23 - light or even Roboto thin looks really
06:25 - good here especially if we remove the
06:27 - shadow that looks pretty good
06:30 - and we can maybe make this a font size
06:33 - of size of 25 instead that's fine let's
06:37 - take the rounds here and let's make this
06:39 - shadow
06:40 - completely apparent so with the alpha of
06:43 - 255 and then let's make that some
06:46 - reddish color that looks pretty good we
06:49 - can try maybe making it more purple this
06:54 - gives a pretty fun look I think we
06:56 - should definitely have something like
06:57 - this in here and it's definitely gonna
07:01 - need some tweaking but I actually kind
07:03 - of like the look of this it's a bit
07:05 - girly but we can survive that we are men
07:07 - so all right now of course there can be
07:11 - girls out there as well I didn't mean to
07:13 - offend apologize so um let's now drag
07:17 - this up a bit um and in order to do that
07:22 - it's just go like that and go like this
07:25 - to Center it there we go
07:27 - we don't need to spend any more time on
07:29 - that whatsoever so drag down the game
07:31 - over and then we can make a few buttons
07:33 - so let's right-click on the game over
07:35 - here go to you I and then button and we
07:38 - can drag this down and we can scale it
07:42 - up a lot I want these buttons to be
07:44 - really big and okay maybe not that big
07:48 - you can make it just tiny bit something
07:52 - like this it's always hard for me to
07:55 - just let it go and let you guys do this
07:57 - on yo so we're going to call this one
07:59 - the retry and let's first off change the
08:03 - text here so retry with capital letters
08:06 - let's change this to something like I
08:08 - don't know Roboto medium perhaps we can
08:12 - also bump up the font size quite a bit
08:15 - actually it's fun to kind of sometimes
08:18 - make this font size super big just see
08:22 - what happens we can just try out this
08:23 - look actually they don't like that we
08:26 - can also maybe even get rid of the image
08:29 - and just have the retry as text but I
08:31 - actually kind of like the image in there
08:32 - so again just play around with this on
08:35 - your own so I'm going to bump this down
08:36 - to something like 40 I think that's a
08:38 - pretty good size and we can change the
08:40 - font color here to kind of the
08:42 - background color just call it pick this
08:44 - color over here and I actually think
08:46 - that looks pretty nice and um we could
08:49 - even add a shadow to this as well but I
08:51 - don't think it's needed really
08:53 - we can also get rid of the UI sprite to
08:57 - make it totally square but I even like
08:59 - that it's round a bit I don't know
09:02 - actually let's make it square I think
09:04 - that's even better so this is going to
09:06 - be a retry button and we can just Center
09:08 - this kana there we go and then duplicate
09:12 - it and move this one over something like
09:16 - that and you can of course be more
09:18 - precise by typing in the unit's up here
09:20 - and this is going to be our menu button
09:24 - so we're going to go menu there and
09:26 - we're going to change the text here to
09:27 - menu awesome
09:29 - so actually think this menu looks kind
09:32 - of decent and def is definitely usable
09:34 - in our game so what we can do now is
09:37 - actually implement this so as soon as
09:40 - I'm done moving around some of these
09:42 - elements there we go what we'll do is
09:46 - create a script on the GAMEOVER itself
09:49 - so let's go in here and create a game
09:50 - over script that sits on the game over
09:53 - object and we'll public this with stuff
09:55 - in just a moment but the first thing
09:57 - that we really want to do is enable and
09:59 - disable this object as the game
10:01 - continues so we'll start with it being
10:03 - disabled so we'll just disable it right
10:05 - now and then as soon as the game ends
10:08 - we'll just have our game master because
10:10 - this is the one that instigates will
10:13 - have him just enable that object and
10:15 - then on the object here on the object
10:17 - itself will have the GAMEOVER script
10:19 - here then taking care of finding the
10:21 - correct amount of rounds and if you want
10:23 - to do other stuff such as linking up the
10:26 - buttons or you can do crazy animations
10:28 - all of that we'll have a look at but
10:31 - we'll have all of that happen just when
10:33 - the game object is enabled so on this
10:36 - way our game over script doesn't have to
10:38 - communicate to our game master script
10:40 - and everything is a lot more simple so
10:41 - let's find our game manager script here
10:44 - open that up in visual studio and have a
10:46 - look at what is going on so it's opening
10:50 - up on my secondary monitor and I'll just
10:51 - drag it over here so this is our game
10:54 - manager as it looks right now so the
10:57 - first thing is of course we need a
10:59 - reference to our UI element so let's
11:01 - create a public game object and this is
11:05 - going to be a our game
11:07 - over you I and all we then do is
11:10 - whenever we end the game we can remove
11:12 - the debug deadlock statement here we
11:13 - simply go game over you I whoops not
11:18 - game over game over UI dot said active
11:22 - and we set that to true so we simply
11:24 - enable it and that's all we need to do
11:27 - inside of our end game it's really
11:29 - really simple so if we then jump into
11:32 - unity find out game manager and drag our
11:36 - game over UI object into that and then
11:39 - hit play you will notice that when we
11:42 - die and of course we have to wait until
11:44 - we die here again ignore these errors
11:46 - they don't matter
11:47 - so what we can do is actually just start
11:50 - out with a amount of lives a zero
11:52 - meaning that on the first frame we play
11:55 - the game will just die so let's just try
11:57 - that so we'll hit play and we should say
11:59 - see that the game of my menu screen just
12:01 - pops up so that's awesome so now that we
12:04 - know that this is working let's actually
12:07 - just implement a quick way for us to
12:09 - test this without having it pop up in
12:11 - the very beginning of the game to do
12:12 - that let's set our start lives back to
12:14 - one let's put an if statement in here
12:16 - saying if input dot get keyed out and
12:21 - the key we want to look for is the e key
12:25 - for an end and then we simply do a end
12:29 - game so this is just a quick temporary
12:33 - shortcut for allowing us to quickly end
12:35 - the game
12:36 - so now let's go back hit play and hit
12:39 - here and you can see that insert game oh
12:41 - or that pops up our game over screen and
12:44 - into the game the game is still running
12:46 - in the background and actually kind of
12:48 - like the fact that the enemies keep
12:49 - moving and the timer keeps going and all
12:52 - of the turrets keep shooting but what I
12:55 - really don't like is the fact that we
12:57 - can still move around the camera I think
12:59 - all of the players controls should
13:01 - definitely be just disabled once this
13:04 - game over screen pops up so I want to do
13:06 - this let's expose this variable right
13:09 - here because if all of the other scripts
13:11 - can actually just connect to the game
13:13 - manager to find out if the game has
13:14 - ended it's very easily easy to implement
13:17 - on those scripts a some kind of
13:19 - functionality that just
13:21 - which is them off as soon as that
13:22 - happens so let's turn this into a public
13:25 - static bowl and let's also rename this
13:28 - to a game is over something like that
13:32 - again quick renaming with control RR uh
13:37 - yeah so now we can use this inside of
13:40 - our where is it our main camera and
13:45 - camera controller so in here and on
13:47 - inside the update method we'll just
13:49 - write a if game over or game manager dot
13:53 - game is over so in case the game is over
13:56 - we want to disable this component so
13:59 - this dot enabled equals false and you
14:03 - don't even need to write this here but
14:05 - it's just it makes things more explicit
14:08 - and then we simply return out of this
14:10 - update loop so now when we play and we
14:14 - add the game so let me press P you can
14:17 - see that we can no longer move around
14:19 - camera so one thing we have to be
14:21 - careful with when doing it this way is
14:23 - that right now inside of our game
14:25 - manager the game is over variable is
14:29 - static and static variables carry on
14:31 - from one scene to another that means
14:35 - that if we were to now reset the game
14:37 - our game is over would be false the
14:41 - first time and then we end the game and
14:43 - we restart the scene and then game is
14:45 - over it would be equal to true so we
14:48 - need to set it back to false this here
14:50 - only sets it to false at the very start
14:53 - of the game not when we restart the
14:56 - scene so we just need to remove this
14:58 - create a start method which is called
15:00 - every time we load a new scene and then
15:03 - we just set game is over equal to false
15:07 - in there so at the beginning of each
15:09 - scene the game is not over just a quick
15:11 - little fix there and something that can
15:13 - be really annoying to deal with if you
15:15 - don't know this about static variables
15:16 - but now you do so that's awesome so now
15:19 - that we fixed this um what do we want to
15:22 - do well we definitely want to have our
15:25 - route survived here change depending on
15:28 - well the amount of rounds that the
15:30 - player has survived in order to do this
15:32 - we need to keep track of that
15:34 - so let's go into a game master and add
15:37 - that into a player stats we'll just go
15:39 - in here we'll make a public integer and
15:41 - this is going to be the rounds and in
15:46 - the start method again we'll just set
15:48 - rounds equal to zero again we don't do
15:51 - this here because then when restarting
15:53 - our rounds won't be reset so we said
15:56 - that inside of the start method then
15:59 - what we can do is find our wave spawner
16:01 - where we take care of spawning the
16:03 - different waves and when we spawn a new
16:06 - way if you can see we increase the wave
16:08 - index which is a private variable and
16:10 - we'll just go ahead and an increase the
16:14 - rounds as well so we can just go play
16:16 - your stats dot rounds and it's not
16:22 - appearing for some reason public in
16:26 - rounds oh we need to make this static of
16:29 - course public static int so player stats
16:32 - that round plus plus so we'll just
16:34 - increase it there and now we should see
16:38 - that happening so we can't actually see
16:40 - the round sent here because it's static
16:42 - but we actually it should increase and
16:45 - one way of course that we can check this
16:47 - out is just by making our rounds
16:49 - survived actually update so let's now
16:51 - create some functionality inside of our
16:53 - game over what we need here is first off
16:56 - a reference to the text object so let's
16:59 - do it
17:00 - unity engine you I included up here
17:03 - let's use that namespace let's do a
17:06 - public text variable and this is going
17:08 - to store our rounds text and we just
17:12 - close that off then when this object is
17:15 - enabled whenever the game is done so
17:18 - void on enable its called whenever the
17:22 - object is enabled it's pretty much the
17:24 - same as start except it's called every
17:26 - time a game object gets enabled and not
17:28 - only in the beginning of the game and
17:30 - then we can go in here would say rounds
17:33 - text dot text equals player stats dot
17:39 - and then we can go rounds and we of
17:44 - course need to convert this to a string
17:46 - so we'll do it
17:47 - a dot to string right afterwards
17:51 - awesome so believe that is all we needed
17:55 - to do so now in our game over we should
17:57 - see a round sticks appear and we'll
17:59 - simply drag in our rounds there remember
18:03 - to do the round subject not the text
18:05 - object which is the round survives and
18:07 - this is the actual rounds whatever just
18:10 - be careful with your naming - not
18:12 - totally clear here
18:13 - so let's now do a plate and we'll wait a
18:17 - second here so now it's spawned one
18:19 - enemy let's wait for our for it to spawn
18:22 - one more and that should put us on a
18:26 - total of two rounds survived and if you
18:28 - now hit E you can see that says game
18:30 - over two rounds survive and of course
18:33 - right now you can help but survive at
18:36 - least a few rounds one thing you could
18:38 - do is keep track of what enemies are
18:41 - associated with what round and whether
18:44 - or not you've actually killed those
18:45 - enemies but I think that would be overly
18:47 - complicated at the moment if you don't
18:49 - do a thing you should be able to survive
18:51 - about three rounds that's all right so
18:54 - um you can see here how many rounds
18:56 - we've survived and we are now able to
18:57 - press the different buttons however
18:59 - nothing happens when we press these
19:01 - buttons and again go away icloud so
19:04 - let's actually sick those up to the
19:06 - script so not to do this we'll make two
19:08 - public methods inside of our script
19:11 - we'll make one cold retry and we'll make
19:17 - another one called menu inside of you
19:22 - our retry method we'll go and just
19:26 - reload the level so in order to reload
19:28 - the level we'll be using up here go to
19:31 - the engine dot scene management we need
19:33 - to include this whenever you want to do
19:35 - anything with scenes including loading a
19:38 - new level which is mostly what you use
19:40 - it for let me go scene manager dot load
19:44 - C and this text in either a building
19:47 - decks and the build index I will show
19:50 - you what means so if we go up here to
19:51 - file build settings you can see here
19:55 - that we have all to include all of the
19:57 - different scenes that we want to have in
19:59 - our builds so in our case we need to
20:01 - dragon the main scene and each scene is
20:04 - associated with an index which is here
20:06 - so our main scene
20:08 - currently sits at zero I don't know if
20:10 - you could add multiple scenes you cannot
20:13 - but if we were to create a new scene or
20:15 - just duplicate the main scene here and
20:17 - add it in there you can see that we can
20:19 - change the order of these in order to
20:21 - change the build index for now we only
20:24 - have one scene in here one thing you can
20:26 - also load it but so if in case here we
20:29 - wanted to load on main scene we would
20:31 - just go zero or we could go main scene
20:34 - we can also use the name and see here as
20:37 - long as it's totally accurate you can
20:39 - use the name but in case we change the
20:42 - name of the main scene this is not a
20:44 - good way to do it and if we add more
20:46 - scenes that are before this one well
20:49 - then the build index is going to change
20:51 - as well so instead we get the currently
20:53 - active scene and use the build index of
20:56 - that to load the scene so in order to
20:58 - get the currently active scene we go
21:00 - scene manager dot get active scene and
21:03 - then we need to use the build index or
21:06 - name of that seed in our case we'll just
21:08 - use the build index and we'll close that
21:10 - off so that is going to restart the
21:12 - currently loaded scene and this is a
21:14 - very generic piece of code because you
21:16 - can use it anywhere no matter the scene
21:19 - to restart the level awesome and then in
21:23 - the menu here on what we'll do is just
21:25 - put in a debug block saying go to menu
21:31 - there we go and we'll definitely change
21:34 - this at a later point of course so now
21:37 - we should be able to go in and test this
21:40 - out and one thing that I just wanted to
21:41 - do is select the retry add menu I just
21:44 - change the highlight color just to make
21:47 - it a bit more visible when highlighting
21:49 - the buttons so now when we hit play we
21:52 - wait for around here we hit E the game
21:55 - is over
21:56 - we can hit menu and it should say oh of
21:58 - course one thing that we also need to do
22:01 - is actually hook this up so if we go on
22:05 - to retry under an on click event we need
22:08 - to hit plus we need to drag in our game
22:10 - over object go onto the game over script
22:13 - go to
22:15 - try and the same thing with our menu add
22:18 - an on-click event drag in our game over
22:20 - go out the game over and select the menu
22:23 - function awesome and the last thing
22:27 - concerning the UI here is I want to
22:29 - disable navigation because we are using
22:31 - a mouse so now we can hit play and wait
22:36 - for round hit e you can see it pops up
22:39 - you can see we have nice highlighting if
22:41 - we add menu it says go to menu and if we
22:45 - hit retry it restarts the level one
22:47 - small issue here is you can see there's
22:49 - a problem with the lining when I really
22:51 - restart the level this is just a very
22:53 - similar unity specific thing and that is
22:55 - with the new lighting system whenever it
22:58 - reloads the scene sometimes it doesn't
23:00 - have time to calculate the lining and so
23:02 - it just starts the seed without any
23:04 - lining in it in order to disable this we
23:07 - simply remove Auto from down here and
23:09 - hit build and this will build all the
23:11 - light settings and save it and now when
23:14 - we hit play and do the exact same thing
23:17 - here so just hit retry you can see the
23:19 - lighting is ok that also means that if
23:21 - you want to change the lighting in your
23:23 - scene you're going to need to put it
23:25 - back to auto while figuring things out
23:26 - disable it and hit build so that's kind
23:29 - of annoying but it is an easy fix to an
23:32 - easy problem alright so that was pretty
23:34 - much all the core functionality that I
23:36 - wanted to show you how to create in this
23:38 - video however I still want to spice
23:40 - things up a bit with some animation so
23:42 - let's just very quickly create that so
23:44 - let's find our game object and enable
23:47 - this and what I want to do is animate
23:49 - each up each element separately in order
23:52 - to get a cool looking animation if we
23:54 - just have it all fade in it looks very
23:56 - generic so what we'll do is just go to
23:59 - our game over here and create a new
24:00 - animation go under the animation folder
24:03 - and let's save this as well just game
24:06 - over you will also do something more
24:08 - specific but this is going to be fine
24:10 - let me find our background here we add a
24:13 - new component and this is going to be
24:15 - the canvas group this allows us to
24:18 - simply change the Alpha without messing
24:20 - around with the color then we go forward
24:22 - let's say to a 30 um milliseconds wait
24:28 - what
24:29 - half a second and then we set the Alpha
24:33 - to zero and then we simply flip these
24:36 - keyframes so there we go so that it
24:38 - starts off at zero and then slowly
24:41 - animates em then we find our game over
24:44 - text here and I want this to kind of
24:46 - come down and at the same time fade in
24:49 - so again we'll add a component here
24:51 - called the canvas group we'll set the
24:54 - Alpha to and let's do that this and
24:56 - another point so let's do it here set
24:58 - the Alpha to zero and we'll also move
25:01 - this up a bit and again we can flip
25:04 - these around so this is going to start
25:05 - here and it's going to end over here so
25:09 - let's see how this looks so it slowly
25:11 - fades in and the game over pops up I
25:13 - think it's a bit too slow so we'll just
25:16 - have a go ahead moving everything over a
25:19 - bit actually like that a lot so we'll
25:23 - just stay with that and then the next
25:26 - thing is of course our round survived so
25:30 - this is where I will put in a canvas
25:32 - group again and I want this to kind of
25:36 - scale from being really large and then
25:40 - zoom in and at the same time we want it
25:42 - to fade it so again the canvas group
25:45 - here will set the Alpha to zero and
25:48 - we'll set the scale to something like
25:50 - 1.2 on all the different axes and then
25:54 - again we flip this so flip it around and
25:57 - kind of move it over it's nice to get
25:59 - the different animations overlaying a
26:01 - little bit or else it will seem really
26:02 - robotic and not really cool so let's hit
26:05 - play and I really like the look at that
26:08 - and then the last thing that I want to
26:11 - do is just kind of have our buttons pop
26:14 - up so we'll take our retry button here
26:16 - and we'll set the scale to 0.9 and paw
26:20 - nine even point eight it's going to look
26:22 - pretty good I think point eight and
26:24 - we'll also add a canvas group to this
26:26 - and set the Alpha of course to the you
26:29 - guessed it zero and we'll have this
26:31 - animate on as well there we go and let's
26:37 - do the same thing with our menu so I get
26:40 - add a canvas group
26:42 - the Alpha to zero set the scale to point
26:45 - eight and point eight and move things
26:48 - over and we'll just line it up with the
26:52 -  button and then offset it
26:54 - something like that even or set offset
26:57 - it even more and hit play so I think
27:02 - this gives a really cool kind of organic
27:05 - looking animation and I definitely think
27:07 - I think it looks really nice so the last
27:10 - thing that I want to do is just select
27:11 - all these different keyframes go under
27:14 - curves right click and select our flat
27:17 - for all of them well I want to do this
27:20 - for them so that's just select all of
27:21 - them again let's try this out hit flat
27:24 - there we go so it if to focus it on this
27:27 - and we'll just see what that looks ok so
27:29 - now they're all flat so that will just
27:31 - kind of smooth out the animation so
27:32 - let's try that one more time yeah
27:37 - awesome that's really great so let's now
27:40 - actually have this play whenever the
27:42 - game over object starts and it should do
27:44 - that right away but right now it's
27:46 - looping so let's go onto our animation
27:48 - here find our game over animation not
27:50 - the controller let's just set loop time
27:53 - on to what disabled so it won't loop at
27:56 - all this way when we go ahead and play
27:59 - the game hit play here and wait and hit
28:03 - e you can see that it slowly pops up it
28:06 - looks super cool and if we now go into a
28:09 - game master and just clean up our game
28:11 - manager and clean up our temporary
28:13 - testing code here hit save now the game
28:16 - should be working just the way we wanted
28:18 - it to so I'm just going to have the game
28:20 - play in the background here while we do
28:22 - the outro and you can see that all of
28:24 - our elements are actually coming
28:26 - together and this is now not a very
28:28 - challenging game but it is a game it has
28:31 - an end state it doesn't have necessarily
28:33 - a win scenario but because there is a
28:35 - score this the player has something to
28:37 - strive towards he has multiple options
28:40 - both it which turrets he chooses and
28:42 - where he places them and yeah we have
28:46 - enemies that vary in difficulty or at
28:50 - least they morph more more and more of
28:52 - them spawn and there you can see the
28:54 - game over
28:55 - screed as well so the game is turning
28:57 - out really fun and we definitely have to
28:59 - do some tricks but all of the core
29:02 - functionality is really there so let me
29:04 - know what you want to see next and
29:06 - without further ado thanks for watching
29:07 - and I will see you in the next video and
29:09 - also I really apologize for this
29:12 - sounding sick and everything I know it's
29:14 - really annoying to listen to but I
29:16 - thought it was better than putting out a
29:18 - video so yeah thanks for watching and
29:21 - bye thank you so much to all of the
29:22 - awesome people who donated in September
29:25 - and especially thanks to our own Metta
29:26 - Robert Roach James Calhoun Kim Rose
29:29 - koukos Bao I'm damned Wong and Dickson P
29:32 - thank you so much for donating you guys
29:34 - are awesome if you want to support
29:36 - practice yourself you can go to
29:37 - patreon.com/crashcourse

Cleaned transcript:

this video is brought to you by our own Metta thank you so much for donating if you want to support breakage yourself you can go to patreon.com/scishow geez thanks for tuning in at brac ease hello and welcome to this video including at our defense game in unity today we'll be making a game over screen so whenever we run out of lives we'll have this cool UI that animates onto the screen and displays the amount of waves we were able to survive through along with a retry button and a menu button and we haven't yet created a main menu but it's definitely on the roadmap so we'll just go ahead and add this button now and then we can link it up to the menu at a later point also if you think that I sound a bit weird that is because I'm currently sick it's nothing serious but it is definitely annoying so and it might have an effect on my voice and also um I will have to push the livestream from this month livestream on to the beginning of next month because of this and yeah so I will be livestreaming hopefully if everything goes well on November the second which is a Wednesday so you can reserve that date if you want to join in on it and yeah that was pretty much all I needed to say so let's just jump right into it so as you can see I'm here in unity and what I want to start with is um kind of sketching out the UI so let's start by going to our overlay canvas because this is going to be overlaid on top of the screen and creating an entirely new object let's just make this an empty object in fact and let's stretch this to fit the entire screen and this one is going to be our game over UI then we can right click on that go to UI and select arm panel and again we want to stretch this to the entire screen we want to remove the source image to make this completely square and get rid of the roundings and then we can find some cool background color here so I want to make this pretty Dyke and I wanted to try out kind of a purple looking color without making this too girly I think that could actually be pretty cool so something like this just to kind of dim everything down and then we can op the Alpha on this so let's actually adjust the color again now that we've done that and I think something like this is fairly decent as a backdrop what I recommend whenever doing this kind of game over menus and stuff is going into Photoshop and just going crazy if you know how to do 2d design to make a cool looking game over screen but if that's not something that you want to spend time on if your thing that's too difficult you can just do this inside of unity as I'm doing here so this is going to be our background and then we have a ul mi UI element which is going to be a text object and this is just going to say game over at the on top of the screen here so that's just actually let's just anchor everything to the center but let's then move this up and kind of size it up here and let's change this to Center and Center and let's make this a font size of thumb something like 100 we're going to make this say game over and of course we need to scale this out in order for this to be displayed on the screen and this is maybe just a tad too big so that's cool 85 or something it's also changed the font to Roboto black and change the color here to some completely white color I actually kind of like the look of this but I think we don't even need it to be on this heavy on the font I think something like a real bottle medium is actually going to be great and then we'll put whatever text we decide to show here like really in the center and make it really bold to emphasize it so this looks pretty good and then what we can do is maybe just add some kind of shadow to this so let's add a shadow and we can maybe make this 2 by minus 2 and you could just make this black or we could go completely crazy and make it red but I think that we are again going to do that to our center element here so this is fine and we can call this our game over text or you could just call it something like title then we can duplicate this and actually let's just make this fit the screen it just looks better that way let's duplicate this and move it down and one thing that I wanted to do is right now if we maximize the game view you can node you will see that the text doesn't stretch in order to easily make it stretch together with our game view we can go into our overlaid canvas we can find the canvas scaler and change this to scale with screen size and if we then bump this over to scale with the height we actually get a pretty nice looking effect here especially for the icons down here which before just kind of disappeared in the UI but now that they stretch with it things are looking pretty good so that's let's just keep that so our second gameovertext here is not going to say game over this is going to be a number and this is going to be the amount of rounds we have survived so let's just now set this to like a huge number 125 for example let's make the font size even bigger let's do 120 and let's change the font here to Roboto black let's just try that and we can always change it later and we need to give this plenty of space and this is going to be our rounds and then we actually let's wrap this entire thing into an empty object so let's create an empty object here do something like this stretch it out there let's call this our rounds survived and under that we are going to have our rounds and let's duplicate that and this is going to be our text that kind of explains what this is and that is just going to say something it's going to be a lot smaller something like 20 and it's just going to say rounds survived or waves or whatever you want to call this I'm just going to save rounds and we can stretch this down put that somewhere round on there just where you think it looks nice the one is always kind of annoying when lining up elements so let's just put it 25 here and you can see that that is indeed centered and yeah I think that looks pretty good whatever what I want to do is kind of change the font here something more alight I think Roboto light or even Roboto thin looks really good here especially if we remove the shadow that looks pretty good and we can maybe make this a font size of size of 25 instead that's fine let's take the rounds here and let's make this shadow completely apparent so with the alpha of 255 and then let's make that some reddish color that looks pretty good we can try maybe making it more purple this gives a pretty fun look I think we should definitely have something like this in here and it's definitely gonna need some tweaking but I actually kind of like the look of this it's a bit girly but we can survive that we are men so all right now of course there can be girls out there as well I didn't mean to offend apologize so um let's now drag this up a bit um and in order to do that it's just go like that and go like this to Center it there we go we don't need to spend any more time on that whatsoever so drag down the game over and then we can make a few buttons so let's rightclick on the game over here go to you I and then button and we can drag this down and we can scale it up a lot I want these buttons to be really big and okay maybe not that big you can make it just tiny bit something like this it's always hard for me to just let it go and let you guys do this on yo so we're going to call this one the retry and let's first off change the text here so retry with capital letters let's change this to something like I don't know Roboto medium perhaps we can also bump up the font size quite a bit actually it's fun to kind of sometimes make this font size super big just see what happens we can just try out this look actually they don't like that we can also maybe even get rid of the image and just have the retry as text but I actually kind of like the image in there so again just play around with this on your own so I'm going to bump this down to something like 40 I think that's a pretty good size and we can change the font color here to kind of the background color just call it pick this color over here and I actually think that looks pretty nice and um we could even add a shadow to this as well but I don't think it's needed really we can also get rid of the UI sprite to make it totally square but I even like that it's round a bit I don't know actually let's make it square I think that's even better so this is going to be a retry button and we can just Center this kana there we go and then duplicate it and move this one over something like that and you can of course be more precise by typing in the unit's up here and this is going to be our menu button so we're going to go menu there and we're going to change the text here to menu awesome so actually think this menu looks kind of decent and def is definitely usable in our game so what we can do now is actually implement this so as soon as I'm done moving around some of these elements there we go what we'll do is create a script on the GAMEOVER itself so let's go in here and create a game over script that sits on the game over object and we'll public this with stuff in just a moment but the first thing that we really want to do is enable and disable this object as the game continues so we'll start with it being disabled so we'll just disable it right now and then as soon as the game ends we'll just have our game master because this is the one that instigates will have him just enable that object and then on the object here on the object itself will have the GAMEOVER script here then taking care of finding the correct amount of rounds and if you want to do other stuff such as linking up the buttons or you can do crazy animations all of that we'll have a look at but we'll have all of that happen just when the game object is enabled so on this way our game over script doesn't have to communicate to our game master script and everything is a lot more simple so let's find our game manager script here open that up in visual studio and have a look at what is going on so it's opening up on my secondary monitor and I'll just drag it over here so this is our game manager as it looks right now so the first thing is of course we need a reference to our UI element so let's create a public game object and this is going to be a our game over you I and all we then do is whenever we end the game we can remove the debug deadlock statement here we simply go game over you I whoops not game over game over UI dot said active and we set that to true so we simply enable it and that's all we need to do inside of our end game it's really really simple so if we then jump into unity find out game manager and drag our game over UI object into that and then hit play you will notice that when we die and of course we have to wait until we die here again ignore these errors they don't matter so what we can do is actually just start out with a amount of lives a zero meaning that on the first frame we play the game will just die so let's just try that so we'll hit play and we should say see that the game of my menu screen just pops up so that's awesome so now that we know that this is working let's actually just implement a quick way for us to test this without having it pop up in the very beginning of the game to do that let's set our start lives back to one let's put an if statement in here saying if input dot get keyed out and the key we want to look for is the e key for an end and then we simply do a end game so this is just a quick temporary shortcut for allowing us to quickly end the game so now let's go back hit play and hit here and you can see that insert game oh or that pops up our game over screen and into the game the game is still running in the background and actually kind of like the fact that the enemies keep moving and the timer keeps going and all of the turrets keep shooting but what I really don't like is the fact that we can still move around the camera I think all of the players controls should definitely be just disabled once this game over screen pops up so I want to do this let's expose this variable right here because if all of the other scripts can actually just connect to the game manager to find out if the game has ended it's very easily easy to implement on those scripts a some kind of functionality that just which is them off as soon as that happens so let's turn this into a public static bowl and let's also rename this to a game is over something like that again quick renaming with control RR uh yeah so now we can use this inside of our where is it our main camera and camera controller so in here and on inside the update method we'll just write a if game over or game manager dot game is over so in case the game is over we want to disable this component so this dot enabled equals false and you don't even need to write this here but it's just it makes things more explicit and then we simply return out of this update loop so now when we play and we add the game so let me press P you can see that we can no longer move around camera so one thing we have to be careful with when doing it this way is that right now inside of our game manager the game is over variable is static and static variables carry on from one scene to another that means that if we were to now reset the game our game is over would be false the first time and then we end the game and we restart the scene and then game is over it would be equal to true so we need to set it back to false this here only sets it to false at the very start of the game not when we restart the scene so we just need to remove this create a start method which is called every time we load a new scene and then we just set game is over equal to false in there so at the beginning of each scene the game is not over just a quick little fix there and something that can be really annoying to deal with if you don't know this about static variables but now you do so that's awesome so now that we fixed this um what do we want to do well we definitely want to have our route survived here change depending on well the amount of rounds that the player has survived in order to do this we need to keep track of that so let's go into a game master and add that into a player stats we'll just go in here we'll make a public integer and this is going to be the rounds and in the start method again we'll just set rounds equal to zero again we don't do this here because then when restarting our rounds won't be reset so we said that inside of the start method then what we can do is find our wave spawner where we take care of spawning the different waves and when we spawn a new way if you can see we increase the wave index which is a private variable and we'll just go ahead and an increase the rounds as well so we can just go play your stats dot rounds and it's not appearing for some reason public in rounds oh we need to make this static of course public static int so player stats that round plus plus so we'll just increase it there and now we should see that happening so we can't actually see the round sent here because it's static but we actually it should increase and one way of course that we can check this out is just by making our rounds survived actually update so let's now create some functionality inside of our game over what we need here is first off a reference to the text object so let's do it unity engine you I included up here let's use that namespace let's do a public text variable and this is going to store our rounds text and we just close that off then when this object is enabled whenever the game is done so void on enable its called whenever the object is enabled it's pretty much the same as start except it's called every time a game object gets enabled and not only in the beginning of the game and then we can go in here would say rounds text dot text equals player stats dot and then we can go rounds and we of course need to convert this to a string so we'll do it a dot to string right afterwards awesome so believe that is all we needed to do so now in our game over we should see a round sticks appear and we'll simply drag in our rounds there remember to do the round subject not the text object which is the round survives and this is the actual rounds whatever just be careful with your naming not totally clear here so let's now do a plate and we'll wait a second here so now it's spawned one enemy let's wait for our for it to spawn one more and that should put us on a total of two rounds survived and if you now hit E you can see that says game over two rounds survive and of course right now you can help but survive at least a few rounds one thing you could do is keep track of what enemies are associated with what round and whether or not you've actually killed those enemies but I think that would be overly complicated at the moment if you don't do a thing you should be able to survive about three rounds that's all right so um you can see here how many rounds we've survived and we are now able to press the different buttons however nothing happens when we press these buttons and again go away icloud so let's actually sick those up to the script so not to do this we'll make two public methods inside of our script we'll make one cold retry and we'll make another one called menu inside of you our retry method we'll go and just reload the level so in order to reload the level we'll be using up here go to the engine dot scene management we need to include this whenever you want to do anything with scenes including loading a new level which is mostly what you use it for let me go scene manager dot load C and this text in either a building decks and the build index I will show you what means so if we go up here to file build settings you can see here that we have all to include all of the different scenes that we want to have in our builds so in our case we need to dragon the main scene and each scene is associated with an index which is here so our main scene currently sits at zero I don't know if you could add multiple scenes you cannot but if we were to create a new scene or just duplicate the main scene here and add it in there you can see that we can change the order of these in order to change the build index for now we only have one scene in here one thing you can also load it but so if in case here we wanted to load on main scene we would just go zero or we could go main scene we can also use the name and see here as long as it's totally accurate you can use the name but in case we change the name of the main scene this is not a good way to do it and if we add more scenes that are before this one well then the build index is going to change as well so instead we get the currently active scene and use the build index of that to load the scene so in order to get the currently active scene we go scene manager dot get active scene and then we need to use the build index or name of that seed in our case we'll just use the build index and we'll close that off so that is going to restart the currently loaded scene and this is a very generic piece of code because you can use it anywhere no matter the scene to restart the level awesome and then in the menu here on what we'll do is just put in a debug block saying go to menu there we go and we'll definitely change this at a later point of course so now we should be able to go in and test this out and one thing that I just wanted to do is select the retry add menu I just change the highlight color just to make it a bit more visible when highlighting the buttons so now when we hit play we wait for around here we hit E the game is over we can hit menu and it should say oh of course one thing that we also need to do is actually hook this up so if we go on to retry under an on click event we need to hit plus we need to drag in our game over object go onto the game over script go to try and the same thing with our menu add an onclick event drag in our game over go out the game over and select the menu function awesome and the last thing concerning the UI here is I want to disable navigation because we are using a mouse so now we can hit play and wait for round hit e you can see it pops up you can see we have nice highlighting if we add menu it says go to menu and if we hit retry it restarts the level one small issue here is you can see there's a problem with the lining when I really restart the level this is just a very similar unity specific thing and that is with the new lighting system whenever it reloads the scene sometimes it doesn't have time to calculate the lining and so it just starts the seed without any lining in it in order to disable this we simply remove Auto from down here and hit build and this will build all the light settings and save it and now when we hit play and do the exact same thing here so just hit retry you can see the lighting is ok that also means that if you want to change the lighting in your scene you're going to need to put it back to auto while figuring things out disable it and hit build so that's kind of annoying but it is an easy fix to an easy problem alright so that was pretty much all the core functionality that I wanted to show you how to create in this video however I still want to spice things up a bit with some animation so let's just very quickly create that so let's find our game object and enable this and what I want to do is animate each up each element separately in order to get a cool looking animation if we just have it all fade in it looks very generic so what we'll do is just go to our game over here and create a new animation go under the animation folder and let's save this as well just game over you will also do something more specific but this is going to be fine let me find our background here we add a new component and this is going to be the canvas group this allows us to simply change the Alpha without messing around with the color then we go forward let's say to a 30 um milliseconds wait what half a second and then we set the Alpha to zero and then we simply flip these keyframes so there we go so that it starts off at zero and then slowly animates em then we find our game over text here and I want this to kind of come down and at the same time fade in so again we'll add a component here called the canvas group we'll set the Alpha to and let's do that this and another point so let's do it here set the Alpha to zero and we'll also move this up a bit and again we can flip these around so this is going to start here and it's going to end over here so let's see how this looks so it slowly fades in and the game over pops up I think it's a bit too slow so we'll just have a go ahead moving everything over a bit actually like that a lot so we'll just stay with that and then the next thing is of course our round survived so this is where I will put in a canvas group again and I want this to kind of scale from being really large and then zoom in and at the same time we want it to fade it so again the canvas group here will set the Alpha to zero and we'll set the scale to something like 1.2 on all the different axes and then again we flip this so flip it around and kind of move it over it's nice to get the different animations overlaying a little bit or else it will seem really robotic and not really cool so let's hit play and I really like the look at that and then the last thing that I want to do is just kind of have our buttons pop up so we'll take our retry button here and we'll set the scale to 0.9 and paw nine even point eight it's going to look pretty good I think point eight and we'll also add a canvas group to this and set the Alpha of course to the you guessed it zero and we'll have this animate on as well there we go and let's do the same thing with our menu so I get add a canvas group the Alpha to zero set the scale to point eight and point eight and move things over and we'll just line it up with the button and then offset it something like that even or set offset it even more and hit play so I think this gives a really cool kind of organic looking animation and I definitely think I think it looks really nice so the last thing that I want to do is just select all these different keyframes go under curves right click and select our flat for all of them well I want to do this for them so that's just select all of them again let's try this out hit flat there we go so it if to focus it on this and we'll just see what that looks ok so now they're all flat so that will just kind of smooth out the animation so let's try that one more time yeah awesome that's really great so let's now actually have this play whenever the game over object starts and it should do that right away but right now it's looping so let's go onto our animation here find our game over animation not the controller let's just set loop time on to what disabled so it won't loop at all this way when we go ahead and play the game hit play here and wait and hit e you can see that it slowly pops up it looks super cool and if we now go into a game master and just clean up our game manager and clean up our temporary testing code here hit save now the game should be working just the way we wanted it to so I'm just going to have the game play in the background here while we do the outro and you can see that all of our elements are actually coming together and this is now not a very challenging game but it is a game it has an end state it doesn't have necessarily a win scenario but because there is a score this the player has something to strive towards he has multiple options both it which turrets he chooses and where he places them and yeah we have enemies that vary in difficulty or at least they morph more more and more of them spawn and there you can see the game over screed as well so the game is turning out really fun and we definitely have to do some tricks but all of the core functionality is really there so let me know what you want to see next and without further ado thanks for watching and I will see you in the next video and also I really apologize for this sounding sick and everything I know it's really annoying to listen to but I thought it was better than putting out a video so yeah thanks for watching and bye thank you so much to all of the awesome people who donated in September and especially thanks to our own Metta Robert Roach James Calhoun Kim Rose koukos Bao I'm damned Wong and Dickson P thank you so much for donating you guys are awesome if you want to support practice yourself you can go to patreon.com/crashcourse
