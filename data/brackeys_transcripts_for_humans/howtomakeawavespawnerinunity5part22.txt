With timestamps:

00:00 - thanks for tuning in at brakus so what
00:09 - happens when we are waiting well
00:11 - currently we don't have any logic for
00:13 - this well first off when we are waiting
00:16 - it means that we've spawned all of our
00:18 - enemies but we don't want to be counting
00:20 - down just yet firstly we need to give a
00:23 - player a chance to kill off all of these
00:26 - enemies some wave spawner is do it on a
00:29 - fixed countdown timer but I like the
00:32 - ones that wait until you've killed off
00:33 - the entire wave before giving you a new
00:36 - challenge so in order to do this up here
00:40 - under the update method we are going to
00:43 - say if state a sequel to spawn state dot
00:49 - waiting well then we want to check if
00:53 - our player has killed all of the enemies
00:55 - so let's make a method for that so here
00:59 - we want to check if enemies are still
01:02 - alive so we can do this down here and
01:07 - we're going to make this a return type
01:10 - of pool because we want to be returning
01:13 - true or false depending on whether or
01:15 - not we still have an enemy alive and
01:19 - we're simply gonna call this enemy is
01:22 - alive and what we're going to do in here
01:28 - is we could do a very simple check
01:32 - simply say if game objects don't find
01:36 - game objects with tag and then we could
01:38 - give all enemies attack of let's say
01:41 - enemy and this returns an array of all
01:46 - of all enemies or if all cane of game
01:52 - objects with this tag so we could say
01:54 - that if that has a length of length of 0
01:58 - well then there are no enemies we could
02:00 - also simply do game objects that find
02:04 - game object with tag and singular and
02:07 - can put in enemy here and say that if
02:10 - that is equal to No
02:13 - meaning if we haven't found anything
02:15 - well then we want to simply return that
02:21 - return false meaning that no enemy is
02:24 - alive and then if not we return true
02:28 - this is a very simple check and this is
02:31 - going to work just fine just know that
02:34 - this is a fairly taxing operation
02:37 - because if we have a lot of game objects
02:40 - in our game which it's natural that
02:44 - we'll have if we spawn a bunch of
02:46 - enemies and have buildings and all kinds
02:49 - of stuff and particle system is it's
02:51 - going to loop through everything in
02:53 - order to find objects with its this tag
02:57 - so instead what we want to do it set
03:00 - this on a fixed timer so it will only
03:03 - check whether or not an enemy is alive
03:07 - let's say once a second instead of every
03:10 - frame because that's just unnecessary
03:13 - the player really won't notice if we
03:16 - only do this once once one time each
03:19 - second so in order to put this on a
03:23 - timer we basically make a lot of this we
03:26 - basically do the same trick as with the
03:29 - wave count down here so it's instead of
03:32 - having a wave count down we'll have a
03:34 - private float we don't need to see this
03:36 - in the inspector and this is going to be
03:39 - the I'm going to call this the search
03:45 - countdown and you could if you wanted to
03:49 - we are going to default this to or one
03:52 - you could have a time between searches
03:55 - variable but I think we'll just hard
03:57 - code this for now so we'll simply set it
03:59 - equal to one then down here we'll check
04:03 - if search countdown actually firstly
04:09 - we'll subtract here so we'll say search
04:11 - countdown my- equals time Delta time and
04:15 - then we'll check if search countdown is
04:18 - less than or equal to zero well then we
04:22 - want to do our search here
04:25 - and if we find something we return our
04:28 - false and if it isn't well then we don't
04:32 - do any check then we simply go down here
04:34 - and return true they're still in in your
04:37 - life because and the reason why we can
04:39 - do this is we are only going to be
04:42 - checking if an enemy is alive if we've
04:48 - actually spawned some enemies so this is
04:51 - going to work just fine so let's have a
04:55 - look at what this will actually do well
04:57 - after we've done spawning we set the
05:00 - state eagles to spawn state dad waiting
05:03 - then we go up to the update method which
05:06 - is being called all the time and it says
05:09 - that well if we're currently waiting
05:11 - then we need to check if enemies are
05:13 - still alive so in here we could say if
05:17 - enemy is alive and this will check of
05:24 - course if we have any enemies in our
05:27 - scene and so if we don't have any
05:31 - enemies alive this is the same as doing
05:33 - this equal or it's equal to false that's
05:37 - the exact same simply put an exclamation
05:39 - mark there well what do we want to do
05:43 - then well then we want to kind of begin
05:46 - a new round then we want to start
05:49 - counting down we want to set the next
05:53 - wave we want to increment that by one
05:55 - and we might want to let the player know
05:59 - that he's completed this wave and give
06:02 - him some points maybe on something like
06:05 - that so that completes the current round
06:07 - and begins a new one and if some enemies
06:15 - are still alive so else if we still have
06:20 - enemies alive well then we simply want
06:22 - to return because we don't want to go
06:25 - down here and do all of the wave
06:26 - counting and on all of that if we still
06:29 - have enemies alive then we simply want
06:31 - to let the player kill those off before
06:34 - doing anything else so here we want to
06:36 - begin a new round
06:38 - and how do we check well we call this
06:41 - method which says that if we that that
06:45 - has the search countdown and if it hits
06:48 - zero well then we want to check if we
06:50 - found a game object with the tag of
06:52 - enemy and if we haven't well then no
06:56 - enemies are live so we'll return false
06:58 - and if we have or if we don't want to be
07:01 - checking then we return true and there's
07:06 - only one thing wrong with this code
07:09 - right now and that is we need to set our
07:11 - search countdown equal to
07:13 - oops that shouldn't be done there that
07:16 - should be done here equal to 1 F once we
07:20 - hit zero so in the instance that our
07:22 - search countdown reaches zero and there
07:25 - is still enemies alive well then we want
07:28 - to be checking in one second so we need
07:31 - to set that back to what so I think this
07:36 - is pretty much error free I hope at
07:39 - least so we can put in some debug
07:42 - deadlock statement and see how this is
07:45 - working in just a second so in here we
07:49 - want to begin a new round so therefore
07:51 - we will simply put in debug deadlock
07:53 - wave completed and down here we want to
08:01 - I think we can just leave this be
08:04 - actually and then the spawn wave will
08:07 - say spawning wave and then we'll give it
08:13 - the wave dot name and down here we have
08:17 - this spawning enemy method
08:22 - we of course need to add some stuff to a
08:25 - spawn enemy method in order for this
08:28 - enemies alive to actually check actually
08:30 - work because that searches for game
08:33 - objects and currently behind actually
08:35 - instantiating any game objects so
08:37 - instead of choosing a random spawn point
08:40 - let's simply just instantiate some
08:44 - enemies at the current position of our
08:46 - wave spawner
08:47 - so that's just gonna be our TM object
08:49 - and in my case that set 0 0 0 so we'll
08:52 - just instantiate the enemy here at
08:55 - transformed position and transform
08:59 - rotation you could also just put in
09:01 - vector 3.0 and quaternion identity if
09:06 - you wanted to have it instantiate at 0 0
09:08 - 0 so and I think it's a bit more logical
09:13 - to have this above and let's see if this
09:18 - is actually working one thing you will
09:20 - have to do and make sure that you do
09:23 - this is you'll have to go in find your
09:27 - prefab and I have mine here of the enemy
09:31 - and make sure it's tagged as enemy if
09:34 - this isn't tagged as enemy it's going to
09:38 - spawn all of the enemies and then it's
09:40 - simply going to continue on to the next
09:42 - wave because it's not gonna find any
09:45 - enemies that are alive once it checks so
09:49 - make sure that you mark that correctly
09:51 - and you want to be doing that with all
09:53 - of the enemies that you want to be
09:55 - spawning so now on our key GM object you
09:58 - can see that we have this waves array
10:01 - and we can maybe expand this to 3 and
10:04 - the first one is going to be alien
10:06 - invasion and it's going to have this
10:10 - alien spaceship it's going to spawn two
10:12 - and it's going to do so with one a
10:15 - second then we have alien invasion 2.0
10:19 - and again this spaceship and it's going
10:24 - to spawn 3 at a rate of 2 actually let's
10:31 - do 1.5 and then finally we'll have
10:35 - one while you can
10:39 - and again the spaceship and this is
10:43 - going to have a count of five and a rate
10:47 - of two so now we have these different
10:51 - waves and in the time between waves here
10:54 - we'll just leave that at five and we
10:57 - want to be able to see the wave count
10:59 - down so right now it should get as far
11:02 - as to saying wave completed and then
11:06 - nothing should happen so we'll simply
11:07 - return here just to make sure that
11:12 - things are working so far so down here
11:15 - we should see or we should see that it
11:18 - starts counting down and here we should
11:21 - see that it starts spawning that's the
11:23 - first enemy that's the second one once I
11:25 - kill those off it says wave completed
11:30 - there so that's perfect and we'll just
11:34 - see that again so you can see it starts
11:36 - counting down it spawns some enemies
11:41 - it's currently searching if these
11:44 - enemies are still alive and as soon as I
11:48 - kill this off it says wave completed
11:54 - whoops cool so once a wave is completed
11:59 - we want to make a method that deals with
12:02 - this and you can of course call this
12:05 - wave completed or you could call it
12:07 - begin new round I think we are going to
12:12 - call this will call this wave completed
12:17 - so we want to put a debug log statements
12:21 - in there and we of course want to be
12:23 - calling it up here so we'll call wave
12:26 - completed there put in this debug that
12:31 - log statement and in here we'll first
12:35 - off set our
12:39 - next wave index will increment that by
12:44 - one will also say that spawn state dot
12:49 - or that state equals spawn state dot
12:54 - counting because now we want to be
12:56 - counting down again and of course when
12:59 - we're counting down we also want to make
13:00 - sure that our wave count down equals
13:03 - time between waves and are there any
13:09 - more things that we want to reset I
13:11 - don't believe that there is one last
13:15 - thing that we might want to do is right
13:20 - now when we hit when we go pal okay so
13:24 - we have three level waves defined here
13:27 - and if we go above that limit meaning if
13:30 - we complete the last one here it's
13:32 - simply going to give us an error once it
13:34 - tries spawning a wave with an index of
13:37 - three meaning the fourth wave so what we
13:41 - can do here simply say that if next wave
13:44 - plus one because that's the next wave we
13:48 - are going to be spawning this is
13:50 - currently the current wave and then plus
13:52 - one is the next wave if that is bigger
13:56 - than waves dot length plus one also or
14:02 - minus one I should say because of the
14:06 - differences between length which is the
14:09 - number of waves and index which is
14:11 - zero-based so meaning that if the next
14:15 - way we are going to whoops it's my phone
14:17 - going off there sorry
14:18 - so this means that if the next wave we
14:22 - are going to be spawning has a it's
14:26 - bigger than the number of waves that we
14:28 - have well then we want to set next wave
14:32 - equal to 0 and T bar Tadlock that we
14:38 - have completed all waves I should say
14:45 - all
14:47 - waves complete and then we can say
14:53 - looping so that's simply going to go
15:00 - back and spawn the first wave again and
15:03 - that's of course not going to be it
15:05 - changed in difficulty as is it's simply
15:08 - going to spawn the wave but this is
15:10 - where we could add on some kind of stat
15:12 - multiplier which would also add on a
15:15 - game finished screen and well done
15:18 - you've completed the game or do whatever
15:21 - you can continue with the game start a
15:24 - new scene with new waves you can do all
15:26 - kinds of stuff in here this is where the
15:29 - game state is currently complete and of
15:33 - course if we haven't reached the final
15:36 - wave and completed it yet
15:38 - well then we simply want to continue on
15:40 - to the next one so this should actually
15:44 - be working now so if we go in here and
15:47 - hit play of course this will all be
15:51 - spawning right here but we should be
15:53 - able to kill off this wave and it's
15:59 - going to say wave completed and it
16:01 - starts counting down again and we can
16:04 - kill out the next wave should have three
16:06 - three spaceships which which is it it
16:09 - does and this wave should have five and
16:16 - indeed it does and it should say down
16:20 - here all waves complete looping and it
16:24 - start spawning the first wave again oops
16:29 - actually that wave had three so okay so
16:35 - that's because we actually let it do
16:37 - this so we need an else statement here
16:40 - currently we let it set next wave to
16:44 - zero and say all waves complete looping
16:46 - and then it went down and incremented
16:49 - the wave immediately so it we went up to
16:51 - one which is the second wave but that
16:53 - should be fixed now so the very last
16:57 - thing that we want to be implementing
16:58 - here is a way for us to spawn
17:01 - on our enemies at random spawn points so
17:07 - in order to do this we could of course
17:10 - have some complete random spawning where
17:12 - they can spawn everywhere on the map we
17:15 - just have to check if they spawn inside
17:17 - of Collider and that's really cumbersome
17:21 - and I don't think it's something most
17:24 - games need so instead we're going to be
17:27 - going with the old tactic of having a
17:31 - bunch of spawn points that we define
17:33 - before run time and then simply
17:36 - selecting a random one so in order to do
17:40 - this all we need to do is just like we
17:43 - have this wave labret we also need to
17:45 - create a public spawn public transform
17:50 - array called spawn points and we can
17:56 - define that inside of the editor I also
17:58 - want to change this to private now
18:00 - there's no reason why we should be
18:02 - seeing that in the inspector and
18:04 - basically what we want to do here is
18:07 - down when we spawn an enemy we say that
18:10 - we're spawning this enemy and that's
18:11 - fine and then we want to instantiate him
18:14 - but we first want to choose a random
18:17 - spawn point of it simply gonna call this
18:19 - underscore SP and it's going to be equal
18:22 - to spawn points and then the index that
18:27 - we are going to be accessing is going to
18:29 - be random that range between zero and
18:33 - spawn points dot length so this means
18:38 - that you have to be sure that you have
18:42 - at least one spawn point in your spawn
18:47 - points array or this code is not going
18:50 - to be working because then we don't know
18:51 - where we want to spawn our enemy but if
18:55 - you do have one well then this is going
18:58 - to work fine and now instead of
19:00 - transformed our position we simply say
19:01 - SP deposition and SP dot rotation and we
19:06 - can of course do a quick check here that
19:08 - says give spawn points this dot length
19:12 - is equal to zero
19:14 - then we want to debug that lag era no
19:19 - spawn points referenced and I think this
19:25 - is something we want to be doing inside
19:27 - of the stat method so if we go up here
19:29 - we can check for it that we can also
19:33 - check for waves being out of length and
19:37 - and all that stuff and I'll just leave
19:40 - you to doing that if you want to be
19:41 - ultra safe but I think this script is
19:44 - actually working now and let's go in and
19:47 - add some spawn points so you can see
19:50 - that a new array appears here called
19:53 - spawn points and we can just maximize or
19:58 - it just insert three elements here and
20:01 - this assembly of type transformed so we
20:04 - can make a new empty game object here
20:06 - and call this enemy spawn point and
20:13 - we'll simply reset the transform on that
20:16 - and we'll give it an icon and I'll
20:19 - simply make that red and I'm going to
20:23 - take this and making in it make it into
20:26 - an prefab by simply dragging it into the
20:29 - project panel and I'm going to be
20:32 - dragging up some of these in here so
20:35 - we'll just make some more so we have
20:38 - three spawn points and I'll rename all
20:40 - of these to enemy spawn point and I
20:46 - think I'll parent all of these to the TM
20:48 - objects I also have a spawn point here
20:50 - for the player and I think we'll just
20:52 - rename that too
20:55 - now we'll just leave that at spawn point
20:57 - but we have the enemy spawn points here
20:59 - and I'll simply drag this out so you can
21:03 - see them in action and now and this is
21:09 - hopefully the last time that we have to
21:11 - play test we simply need to a drag in
21:15 - the spawn points into our array and
21:20 - finally hit apply
21:24 - hit play and I'll maximize here turn on
21:28 - the gizmos it's counting down and it's
21:35 - spawning enemies at random points so
21:39 - that was basically all for this video
21:41 - quite a long one I might need to split
21:44 - it up but I hope you enjoyed it and I
21:47 - hope that you find it kind of
21:49 - understandable enough that you can tweak
21:52 - this to suit your own game I hope that
21:56 - I've made this kind of generic not
21:58 - enough that you can actually tweak it
22:01 - and use it how you want you so thanks
22:04 - for watching I hope you enjoyed it and
22:06 - I'll see you in the next video

Cleaned transcript:

thanks for tuning in at brakus so what happens when we are waiting well currently we don't have any logic for this well first off when we are waiting it means that we've spawned all of our enemies but we don't want to be counting down just yet firstly we need to give a player a chance to kill off all of these enemies some wave spawner is do it on a fixed countdown timer but I like the ones that wait until you've killed off the entire wave before giving you a new challenge so in order to do this up here under the update method we are going to say if state a sequel to spawn state dot waiting well then we want to check if our player has killed all of the enemies so let's make a method for that so here we want to check if enemies are still alive so we can do this down here and we're going to make this a return type of pool because we want to be returning true or false depending on whether or not we still have an enemy alive and we're simply gonna call this enemy is alive and what we're going to do in here is we could do a very simple check simply say if game objects don't find game objects with tag and then we could give all enemies attack of let's say enemy and this returns an array of all of all enemies or if all cane of game objects with this tag so we could say that if that has a length of length of 0 well then there are no enemies we could also simply do game objects that find game object with tag and singular and can put in enemy here and say that if that is equal to No meaning if we haven't found anything well then we want to simply return that return false meaning that no enemy is alive and then if not we return true this is a very simple check and this is going to work just fine just know that this is a fairly taxing operation because if we have a lot of game objects in our game which it's natural that we'll have if we spawn a bunch of enemies and have buildings and all kinds of stuff and particle system is it's going to loop through everything in order to find objects with its this tag so instead what we want to do it set this on a fixed timer so it will only check whether or not an enemy is alive let's say once a second instead of every frame because that's just unnecessary the player really won't notice if we only do this once once one time each second so in order to put this on a timer we basically make a lot of this we basically do the same trick as with the wave count down here so it's instead of having a wave count down we'll have a private float we don't need to see this in the inspector and this is going to be the I'm going to call this the search countdown and you could if you wanted to we are going to default this to or one you could have a time between searches variable but I think we'll just hard code this for now so we'll simply set it equal to one then down here we'll check if search countdown actually firstly we'll subtract here so we'll say search countdown my equals time Delta time and then we'll check if search countdown is less than or equal to zero well then we want to do our search here and if we find something we return our false and if it isn't well then we don't do any check then we simply go down here and return true they're still in in your life because and the reason why we can do this is we are only going to be checking if an enemy is alive if we've actually spawned some enemies so this is going to work just fine so let's have a look at what this will actually do well after we've done spawning we set the state eagles to spawn state dad waiting then we go up to the update method which is being called all the time and it says that well if we're currently waiting then we need to check if enemies are still alive so in here we could say if enemy is alive and this will check of course if we have any enemies in our scene and so if we don't have any enemies alive this is the same as doing this equal or it's equal to false that's the exact same simply put an exclamation mark there well what do we want to do then well then we want to kind of begin a new round then we want to start counting down we want to set the next wave we want to increment that by one and we might want to let the player know that he's completed this wave and give him some points maybe on something like that so that completes the current round and begins a new one and if some enemies are still alive so else if we still have enemies alive well then we simply want to return because we don't want to go down here and do all of the wave counting and on all of that if we still have enemies alive then we simply want to let the player kill those off before doing anything else so here we want to begin a new round and how do we check well we call this method which says that if we that that has the search countdown and if it hits zero well then we want to check if we found a game object with the tag of enemy and if we haven't well then no enemies are live so we'll return false and if we have or if we don't want to be checking then we return true and there's only one thing wrong with this code right now and that is we need to set our search countdown equal to oops that shouldn't be done there that should be done here equal to 1 F once we hit zero so in the instance that our search countdown reaches zero and there is still enemies alive well then we want to be checking in one second so we need to set that back to what so I think this is pretty much error free I hope at least so we can put in some debug deadlock statement and see how this is working in just a second so in here we want to begin a new round so therefore we will simply put in debug deadlock wave completed and down here we want to I think we can just leave this be actually and then the spawn wave will say spawning wave and then we'll give it the wave dot name and down here we have this spawning enemy method we of course need to add some stuff to a spawn enemy method in order for this enemies alive to actually check actually work because that searches for game objects and currently behind actually instantiating any game objects so instead of choosing a random spawn point let's simply just instantiate some enemies at the current position of our wave spawner so that's just gonna be our TM object and in my case that set 0 0 0 so we'll just instantiate the enemy here at transformed position and transform rotation you could also just put in vector 3.0 and quaternion identity if you wanted to have it instantiate at 0 0 0 so and I think it's a bit more logical to have this above and let's see if this is actually working one thing you will have to do and make sure that you do this is you'll have to go in find your prefab and I have mine here of the enemy and make sure it's tagged as enemy if this isn't tagged as enemy it's going to spawn all of the enemies and then it's simply going to continue on to the next wave because it's not gonna find any enemies that are alive once it checks so make sure that you mark that correctly and you want to be doing that with all of the enemies that you want to be spawning so now on our key GM object you can see that we have this waves array and we can maybe expand this to 3 and the first one is going to be alien invasion and it's going to have this alien spaceship it's going to spawn two and it's going to do so with one a second then we have alien invasion 2.0 and again this spaceship and it's going to spawn 3 at a rate of 2 actually let's do 1.5 and then finally we'll have one while you can and again the spaceship and this is going to have a count of five and a rate of two so now we have these different waves and in the time between waves here we'll just leave that at five and we want to be able to see the wave count down so right now it should get as far as to saying wave completed and then nothing should happen so we'll simply return here just to make sure that things are working so far so down here we should see or we should see that it starts counting down and here we should see that it starts spawning that's the first enemy that's the second one once I kill those off it says wave completed there so that's perfect and we'll just see that again so you can see it starts counting down it spawns some enemies it's currently searching if these enemies are still alive and as soon as I kill this off it says wave completed whoops cool so once a wave is completed we want to make a method that deals with this and you can of course call this wave completed or you could call it begin new round I think we are going to call this will call this wave completed so we want to put a debug log statements in there and we of course want to be calling it up here so we'll call wave completed there put in this debug that log statement and in here we'll first off set our next wave index will increment that by one will also say that spawn state dot or that state equals spawn state dot counting because now we want to be counting down again and of course when we're counting down we also want to make sure that our wave count down equals time between waves and are there any more things that we want to reset I don't believe that there is one last thing that we might want to do is right now when we hit when we go pal okay so we have three level waves defined here and if we go above that limit meaning if we complete the last one here it's simply going to give us an error once it tries spawning a wave with an index of three meaning the fourth wave so what we can do here simply say that if next wave plus one because that's the next wave we are going to be spawning this is currently the current wave and then plus one is the next wave if that is bigger than waves dot length plus one also or minus one I should say because of the differences between length which is the number of waves and index which is zerobased so meaning that if the next way we are going to whoops it's my phone going off there sorry so this means that if the next wave we are going to be spawning has a it's bigger than the number of waves that we have well then we want to set next wave equal to 0 and T bar Tadlock that we have completed all waves I should say all waves complete and then we can say looping so that's simply going to go back and spawn the first wave again and that's of course not going to be it changed in difficulty as is it's simply going to spawn the wave but this is where we could add on some kind of stat multiplier which would also add on a game finished screen and well done you've completed the game or do whatever you can continue with the game start a new scene with new waves you can do all kinds of stuff in here this is where the game state is currently complete and of course if we haven't reached the final wave and completed it yet well then we simply want to continue on to the next one so this should actually be working now so if we go in here and hit play of course this will all be spawning right here but we should be able to kill off this wave and it's going to say wave completed and it starts counting down again and we can kill out the next wave should have three three spaceships which which is it it does and this wave should have five and indeed it does and it should say down here all waves complete looping and it start spawning the first wave again oops actually that wave had three so okay so that's because we actually let it do this so we need an else statement here currently we let it set next wave to zero and say all waves complete looping and then it went down and incremented the wave immediately so it we went up to one which is the second wave but that should be fixed now so the very last thing that we want to be implementing here is a way for us to spawn on our enemies at random spawn points so in order to do this we could of course have some complete random spawning where they can spawn everywhere on the map we just have to check if they spawn inside of Collider and that's really cumbersome and I don't think it's something most games need so instead we're going to be going with the old tactic of having a bunch of spawn points that we define before run time and then simply selecting a random one so in order to do this all we need to do is just like we have this wave labret we also need to create a public spawn public transform array called spawn points and we can define that inside of the editor I also want to change this to private now there's no reason why we should be seeing that in the inspector and basically what we want to do here is down when we spawn an enemy we say that we're spawning this enemy and that's fine and then we want to instantiate him but we first want to choose a random spawn point of it simply gonna call this underscore SP and it's going to be equal to spawn points and then the index that we are going to be accessing is going to be random that range between zero and spawn points dot length so this means that you have to be sure that you have at least one spawn point in your spawn points array or this code is not going to be working because then we don't know where we want to spawn our enemy but if you do have one well then this is going to work fine and now instead of transformed our position we simply say SP deposition and SP dot rotation and we can of course do a quick check here that says give spawn points this dot length is equal to zero then we want to debug that lag era no spawn points referenced and I think this is something we want to be doing inside of the stat method so if we go up here we can check for it that we can also check for waves being out of length and and all that stuff and I'll just leave you to doing that if you want to be ultra safe but I think this script is actually working now and let's go in and add some spawn points so you can see that a new array appears here called spawn points and we can just maximize or it just insert three elements here and this assembly of type transformed so we can make a new empty game object here and call this enemy spawn point and we'll simply reset the transform on that and we'll give it an icon and I'll simply make that red and I'm going to take this and making in it make it into an prefab by simply dragging it into the project panel and I'm going to be dragging up some of these in here so we'll just make some more so we have three spawn points and I'll rename all of these to enemy spawn point and I think I'll parent all of these to the TM objects I also have a spawn point here for the player and I think we'll just rename that too now we'll just leave that at spawn point but we have the enemy spawn points here and I'll simply drag this out so you can see them in action and now and this is hopefully the last time that we have to play test we simply need to a drag in the spawn points into our array and finally hit apply hit play and I'll maximize here turn on the gizmos it's counting down and it's spawning enemies at random points so that was basically all for this video quite a long one I might need to split it up but I hope you enjoyed it and I hope that you find it kind of understandable enough that you can tweak this to suit your own game I hope that I've made this kind of generic not enough that you can actually tweak it and use it how you want you so thanks for watching I hope you enjoyed it and I'll see you in the next video
