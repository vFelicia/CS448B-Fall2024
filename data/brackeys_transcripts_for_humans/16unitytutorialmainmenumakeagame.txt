With timestamps:

00:00 - thanks for tuning in at
00:02 - braies hello everyone and welcome to
00:04 - video number 16 in make a game a cool
00:08 - series on making a video game in unity
00:11 - So today we're going to be taking a look
00:13 - at uh making our menu actually do
00:17 - something so we're going to be expanding
00:19 - on the subject of last week's video and
00:23 - uh this process is actually both very
00:26 - easy and also very fun so you will
00:29 - notice that I am on a Mac today and
00:32 - that's because I'm currently traveling
00:34 - so I hope the quality and audio quality
00:36 - is uh just as fine as it normally is
00:40 - let's just get started as you can see
00:42 - I've already opened up unity and I'm
00:45 - just going to quickly go ahead and drag
00:46 - the music object up here because I like
00:49 - it at the
00:50 - top um what we're going to go ahead and
00:53 - do is uh maybe move these buttons here
00:58 - just a tiny bit closer together I think
01:01 - they're just a tad too far apart so I'm
01:05 - just going to set this to
01:07 - 135 and the same with the other one 135
01:11 - there that looks a a a bit better and uh
01:15 - what we can also do is we can rename
01:17 - this from audio to music because I think
01:21 - that we are only going to be changing
01:23 - the Music Volume today I would like this
01:26 - slider to do
01:28 - that awesome so now we can actually go
01:31 - ahead and and select the canvas here and
01:34 - today we can make this Pixel Perfect so
01:37 - if you click this you will notice that
01:39 - everything looks much better and much
01:41 - sharper than it did before the reason
01:44 - why I couldn't do that in the last video
01:46 - was because uh Unity 4.6 beta um was
01:50 - having some problems with my windows
01:53 - configuration but on this computer it
01:55 - works just fine so try it
01:57 - out awesome so
02:01 - select the main camera and we're going
02:02 - to add a new script so hit add component
02:06 - new script and this is of course going
02:07 - to be a type JavaScript and let's just
02:10 - call this main menu and this script
02:14 - let's open it up in monod develop is
02:16 - simply going to be a bunch of functions
02:19 - that we can call whenever we press our
02:22 - buttons and change something with our
02:24 - slider uh that does some simple things
02:27 - let's just delete the two default
02:29 - functions
02:30 - and let's create a new one let's call
02:33 - this quit game because that's the
02:36 - easiest one to
02:37 - do and uh let's just open up some
02:40 - brackets and inside of this we're simply
02:42 - going to say
02:44 - application.
02:46 - quid and we're done that was basically
02:49 - it um this application. quid function
02:53 - will not actually do anything at all
02:56 - inside of the unity editor but once you
03:00 - build it to let's say a Windows Mac or
03:03 - Linux stand alone this will actually
03:06 - close down the uh the
03:08 - application so now let's save this hit
03:11 - into unity and hit
03:14 - play and uh I'm just going to turn down
03:16 - the volume here a bit you can see that
03:19 - when I press the button nothing happens
03:22 - but that's not because application. quit
03:25 - doesn't work inside the editor that's
03:27 - because we have to assign it to this
03:30 - button so let's just make a debug.log
03:32 - statement in here so we can test whether
03:35 - or not something is actually happening
03:38 - let's just
03:39 - say uh game is
03:45 - exiting just like this to let us know
03:48 - that the button has been pressed now
03:50 - let's save this hit play and this should
03:53 - still not be
03:54 - working indeed it is not what we're
03:58 - going to do is we're going to go into
04:00 - our scene view we're going to select the
04:02 - quit game button then we can scroll
04:06 - down and you can see that there's a list
04:09 - here called
04:11 - onclick excuse me so what we can do with
04:15 - this on click list is we can add items
04:18 - or functions that we want to be called
04:21 - whenever we press the button so simply
04:24 - hit the plus sign we are then going to
04:27 - select the object that the function is
04:29 - on so so that's the main camera then
04:31 - we're going to go ahead and and find our
04:34 - script which is main menu and now you
04:36 - can see that there is a quit game
04:38 - function down here so now this should
04:42 - indeed be called let's go into the
04:45 - console so we can see what is going on
04:47 - let's hit play and now when we press the
04:49 - quit game
04:51 - button it will say game is exiting so
04:55 - now we know it's
04:57 - working awesome uh now let's go ahead
05:00 - and make another function and this is
05:01 - going to be for our start
05:06 - game and inside of this we're going to
05:09 - say
05:10 - application. load level whoops not
05:12 - loaded level but load
05:16 - level and in here we're going to pass it
05:18 - a name and we're just going to do level
05:21 - one now save head back into unity and
05:25 - remember whenever we do uh we load a
05:28 - level in unity we have to also added to
05:30 - the build settings let's go under file
05:33 - build settings and you can see that our
05:36 - level one is indeed added to the build
05:39 - I'm also going to add the main menu and
05:41 - drag it up so it's right
05:44 - above cool now we can go ahead and and
05:48 - uh find our play game button so simply
05:50 - select
05:52 - it and we can go ahead and add is a a
05:56 - item an item to the list
06:00 - let's again select the main camera now
06:03 - we're going to go on the main menu and
06:04 - you should see a start game function
06:07 - indeed we have one right here so now
06:10 - when we hit play and then hit play game
06:14 - the game will change
06:18 - scene what we are also going to
06:21 - do with this is we are going to go in
06:26 - here and instead of just hardcoding in
06:30 - the name of the level that we want to
06:33 - load we can use what is called an
06:36 - argument because wouldn't it be cool if
06:38 - we could load or start the game with
06:42 - different
06:44 - levels uh with different buttons all
06:47 - using the same
06:49 - function that's actually relatively easy
06:52 - to do all we have to do is create a an
06:56 - argument or a parameter and we do this
06:59 - inside of these two
07:02 - parentheses in here we are first going
07:05 - to type what we will refer to the level
07:08 - name as so we'll just refer to it as
07:12 - level it's basically the name of the
07:14 - variable that we're making then we are
07:17 - going to make a type and this is going
07:19 - to be of type string because a name is
07:22 - usually usually of tripe
07:26 - string so now instead of hard coding
07:29 - level one in here we'll simply type in
07:32 - level because that's what we've called
07:34 - our
07:35 - variable what this says is that whenever
07:38 - we call the function start game and
07:41 - wanted to do things in here we'll make a
07:44 - we'll require that we send over a name
07:48 - with it uh that we will call level and
07:51 - that we can then pass in
07:54 - here so now what this actually means in
07:57 - practice it's okay if you don't qu
07:59 - understand it yet U but it's you will
08:02 - see the effect of it is that we can
08:05 - select our play game button we can
08:07 - scroll down again select the function
08:10 - the start game and you can see that it
08:12 - takes in a string now and this allows us
08:16 - in uh in this box right here to Simply
08:20 - type in the name of the level that we
08:22 - want to load so for different buttons we
08:25 - can type in different levels here and
08:27 - it's also just much easier to change
08:29 - because we don't have to find it in code
08:32 - you can just do it inside of the editor
08:34 - so now when we hit play it's again going
08:37 - to work just fine but but it's now a lot
08:40 - more flexible and we don't have to add a
08:42 - function for every single level that we
08:45 - want to load we could also go ahead and
08:47 - change the name of this to load level
08:51 - because we are then we can use it for
08:53 - much more but since this is under the
08:55 - main menu script I'm just going to call
08:57 - it start game
09:00 - the last function that we're going to be
09:01 - making is
09:02 - also slightly different but still uh
09:06 - just bear with me here and and you will
09:08 - get it in a sec so we're going to make a
09:10 - function and we're going to call this
09:13 - set game
09:15 - volume of course you can call it
09:17 - whatever you want then inside of the
09:20 - parentheses you're going to type Vol
09:23 - that's what we're going to call our
09:25 - volume of type
09:28 - float and then we're going to open it up
09:31 - here so again we are taking in a
09:34 - parameter we are calling it V and it's
09:38 - going to store the volume as a
09:41 - number so that's all we're doing we're
09:43 - just saying that when we call we're
09:45 - going to call this from the slider the
09:47 - slider value is going to be passed in
09:50 - here and we'll just call it Vol for
09:52 - volume now we can go ahead and use this
09:54 - V to set the volume of our music so
09:59 - let's first create a reference to our
10:00 - music so up here do a VAR and let's call
10:05 - this music of type audio
10:11 - source and we can just put that in in
10:14 - the inspector now inside of the set game
10:17 - volume function all we need to do is do
10:20 - music. volume equals W because remember
10:25 - the V here is the value of a slider
10:30 - so that's all we need to do in code
10:32 - we've now finished our script let's head
10:35 - back into Unity first off select our
10:37 - main camera and drag in the music object
10:40 - into our music audio Source that's very
10:44 - important or you're going to get a null
10:46 - reference exception if you get one just
10:49 - remember to drag it in there now we can
10:52 - select our slider scroll down and you
10:55 - can see that we have again on value
10:57 - changed this will be called every time
10:59 - the value changes we're going to hit
11:01 - play or plus find our main camera object
11:06 - find the function on the main menu and
11:08 - you can see that it's up here under
11:10 - Dynamic float which means that we will
11:12 - put in whatever value of the uh slider
11:17 - as an argument which is just what we
11:19 - want so we're going to hit set game
11:21 - volume and that's all we need to do I'm
11:24 - also just going to default this to
11:27 - 0.45 maybe I think that's a pretty good
11:29 - starting point for the volume and now
11:31 - I'm just going to bump up the volume on
11:34 - my computer so you can hear how this
11:36 - affects the music let me hit play here
11:39 - and I'll just try it out you can see
11:42 - hear the music playing and now I can
11:44 - adjust it using the
11:56 - slider so that was basically all for
11:59 - today's video I hope you enjoyed it and
12:02 - I'll see you in the next one
12:10 - [Music]

Cleaned transcript:

thanks for tuning in at braies hello everyone and welcome to video number 16 in make a game a cool series on making a video game in unity So today we're going to be taking a look at uh making our menu actually do something so we're going to be expanding on the subject of last week's video and uh this process is actually both very easy and also very fun so you will notice that I am on a Mac today and that's because I'm currently traveling so I hope the quality and audio quality is uh just as fine as it normally is let's just get started as you can see I've already opened up unity and I'm just going to quickly go ahead and drag the music object up here because I like it at the top um what we're going to go ahead and do is uh maybe move these buttons here just a tiny bit closer together I think they're just a tad too far apart so I'm just going to set this to 135 and the same with the other one 135 there that looks a a a bit better and uh what we can also do is we can rename this from audio to music because I think that we are only going to be changing the Music Volume today I would like this slider to do that awesome so now we can actually go ahead and and select the canvas here and today we can make this Pixel Perfect so if you click this you will notice that everything looks much better and much sharper than it did before the reason why I couldn't do that in the last video was because uh Unity 4.6 beta um was having some problems with my windows configuration but on this computer it works just fine so try it out awesome so select the main camera and we're going to add a new script so hit add component new script and this is of course going to be a type JavaScript and let's just call this main menu and this script let's open it up in monod develop is simply going to be a bunch of functions that we can call whenever we press our buttons and change something with our slider uh that does some simple things let's just delete the two default functions and let's create a new one let's call this quit game because that's the easiest one to do and uh let's just open up some brackets and inside of this we're simply going to say application. quid and we're done that was basically it um this application. quid function will not actually do anything at all inside of the unity editor but once you build it to let's say a Windows Mac or Linux stand alone this will actually close down the uh the application so now let's save this hit into unity and hit play and uh I'm just going to turn down the volume here a bit you can see that when I press the button nothing happens but that's not because application. quit doesn't work inside the editor that's because we have to assign it to this button so let's just make a debug.log statement in here so we can test whether or not something is actually happening let's just say uh game is exiting just like this to let us know that the button has been pressed now let's save this hit play and this should still not be working indeed it is not what we're going to do is we're going to go into our scene view we're going to select the quit game button then we can scroll down and you can see that there's a list here called onclick excuse me so what we can do with this on click list is we can add items or functions that we want to be called whenever we press the button so simply hit the plus sign we are then going to select the object that the function is on so so that's the main camera then we're going to go ahead and and find our script which is main menu and now you can see that there is a quit game function down here so now this should indeed be called let's go into the console so we can see what is going on let's hit play and now when we press the quit game button it will say game is exiting so now we know it's working awesome uh now let's go ahead and make another function and this is going to be for our start game and inside of this we're going to say application. load level whoops not loaded level but load level and in here we're going to pass it a name and we're just going to do level one now save head back into unity and remember whenever we do uh we load a level in unity we have to also added to the build settings let's go under file build settings and you can see that our level one is indeed added to the build I'm also going to add the main menu and drag it up so it's right above cool now we can go ahead and and uh find our play game button so simply select it and we can go ahead and add is a a item an item to the list let's again select the main camera now we're going to go on the main menu and you should see a start game function indeed we have one right here so now when we hit play and then hit play game the game will change scene what we are also going to do with this is we are going to go in here and instead of just hardcoding in the name of the level that we want to load we can use what is called an argument because wouldn't it be cool if we could load or start the game with different levels uh with different buttons all using the same function that's actually relatively easy to do all we have to do is create a an argument or a parameter and we do this inside of these two parentheses in here we are first going to type what we will refer to the level name as so we'll just refer to it as level it's basically the name of the variable that we're making then we are going to make a type and this is going to be of type string because a name is usually usually of tripe string so now instead of hard coding level one in here we'll simply type in level because that's what we've called our variable what this says is that whenever we call the function start game and wanted to do things in here we'll make a we'll require that we send over a name with it uh that we will call level and that we can then pass in here so now what this actually means in practice it's okay if you don't qu understand it yet U but it's you will see the effect of it is that we can select our play game button we can scroll down again select the function the start game and you can see that it takes in a string now and this allows us in uh in this box right here to Simply type in the name of the level that we want to load so for different buttons we can type in different levels here and it's also just much easier to change because we don't have to find it in code you can just do it inside of the editor so now when we hit play it's again going to work just fine but but it's now a lot more flexible and we don't have to add a function for every single level that we want to load we could also go ahead and change the name of this to load level because we are then we can use it for much more but since this is under the main menu script I'm just going to call it start game the last function that we're going to be making is also slightly different but still uh just bear with me here and and you will get it in a sec so we're going to make a function and we're going to call this set game volume of course you can call it whatever you want then inside of the parentheses you're going to type Vol that's what we're going to call our volume of type float and then we're going to open it up here so again we are taking in a parameter we are calling it V and it's going to store the volume as a number so that's all we're doing we're just saying that when we call we're going to call this from the slider the slider value is going to be passed in here and we'll just call it Vol for volume now we can go ahead and use this V to set the volume of our music so let's first create a reference to our music so up here do a VAR and let's call this music of type audio source and we can just put that in in the inspector now inside of the set game volume function all we need to do is do music. volume equals W because remember the V here is the value of a slider so that's all we need to do in code we've now finished our script let's head back into Unity first off select our main camera and drag in the music object into our music audio Source that's very important or you're going to get a null reference exception if you get one just remember to drag it in there now we can select our slider scroll down and you can see that we have again on value changed this will be called every time the value changes we're going to hit play or plus find our main camera object find the function on the main menu and you can see that it's up here under Dynamic float which means that we will put in whatever value of the uh slider as an argument which is just what we want so we're going to hit set game volume and that's all we need to do I'm also just going to default this to 0.45 maybe I think that's a pretty good starting point for the volume and now I'm just going to bump up the volume on my computer so you can hear how this affects the music let me hit play here and I'll just try it out you can see hear the music playing and now I can adjust it using the slider so that was basically all for today's video I hope you enjoyed it and I'll see you in the next one
