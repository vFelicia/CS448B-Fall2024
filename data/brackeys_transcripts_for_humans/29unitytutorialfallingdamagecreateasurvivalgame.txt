With timestamps:

00:02 - hello and welcome to video number 29 in
00:06 - our survival game series done by
00:08 - practice I am the CEO of Black Keys and
00:11 - in this video we're going to be taking a
00:13 - look at applying fault damage to our
00:16 - player so whenever our fault our player
00:19 - falls from a certain height it will
00:22 - apply damage to the player stat script
00:24 - depending on how high okay cool so we're
00:29 - going to be needing a script we applied
00:32 - in tutorial number 20 this one called
00:36 - the FPS Walker enhanced which is
00:40 - something I got from the internet and
00:41 - then made some improvements and changes
00:43 - to to allow for stuff like crouching so
00:49 - if you don't have this applied please go
00:51 - ahead and watch tutorial number 20 to
00:53 - learn more about that and of course this
00:56 - new updated version will also be
00:58 - included in the assets pack which you
01:01 - can get from our website and if you
01:03 - don't know how to import it then we have
01:05 - a bonus video showing just been awesome
01:09 - anyway let's get started so as always
01:11 - I've opened up unity and you notice that
01:16 - our player is pretty far from the ground
01:19 - and if we just select him we can see
01:23 - over here in the right-hand side in this
01:25 - inspector that our FPS Walker enhanced
01:30 - is indeed on the player and in here we
01:35 - have a lot of settings the ones we're
01:38 - going to be focusing on the de falling
01:40 - damage so here we have the falling
01:43 - damage threshold and that's what adjust
01:46 - how high the player has to fall above
01:49 - the ground for it to register at all but
01:53 - if we hit play now we will notice that
01:55 - our player doesn't die though inside of
01:59 - our console it will tell us how far we
02:02 - fell from in unity units so we have to
02:08 - somehow apply this to our player stats
02:10 - while also giving some control over
02:13 - how much falling damage he needs to
02:16 - receive and also I would like to just
02:19 - make this simple ability to enable and
02:22 - disable falling damage at all okay great
02:27 - so let's first of all adjust the falling
02:31 - damage threshold to something we like I
02:35 - don't know if 10 is the perfect amount
02:37 - we'll we'll quickly figure that out so
02:39 - let's see here
02:43 - there it registers that's maybe that was
02:49 - 13 units and there are also registers
02:54 - that might be a bit too high now
02:57 - actually I like that a lot but again
03:00 - this is depending this is completely
03:03 - dependent on the game you're making some
03:05 - please test this out and don't just go
03:08 - with the value I'll I went with here
03:12 - great so we'll get him high up in the
03:15 - air here and then open up the FPS Walker
03:18 - enhanced script here we go so that is
03:26 - quite a few things going on here but
03:28 - most of this you can just ignore we're
03:32 - going to scroll down just a bit to read
03:34 - says if falling and this is basically
03:39 - where we call the fouling damage alert
03:41 - function and I just quickly want to
03:44 - rename that because now it's no longer
03:46 - an alert so we'll call this apply
03:48 - falling damage instead so delete the
03:51 - alert part and Adly apply and then go
03:54 - all the way down to the button of the
03:58 - script and do the same apply falling
04:03 - damage now we can just go ahead and make
04:06 - the descript actually damage the player
04:10 - that's the most crucial part so under
04:14 - the function apply falling damage will
04:17 - make a new line right before the debug
04:19 - deadlock and here we're just going to
04:22 - send a message using game object that
04:25 - sent message
04:26 - to the players that script to call the
04:29 - function apply damage because if we open
04:32 - up our players stats v2 we can see that
04:35 - we have a function here called apply
04:37 - damage which has an input which is the
04:41 - damage amount and that we'll just call
04:44 - the that we'll just subtract the health
04:46 - and then check whether or not we're dead
04:49 - and so that's just all we need to do so
04:54 - now we can just type game object with
04:59 - the small G that's send message open our
05:04 - parentheses apply damage and I've made
05:09 - it with a mm and I know that's a typo
05:12 - but I just decided to stick with it
05:14 - because I made several of those it's a
05:17 - bad habit of mine but please do change
05:20 - it in your script if you want to so
05:23 - apply damage and it's just here um so
05:27 - apply damage comma and then we're going
05:30 - to type full distance close it up and
05:34 - then a semicolon and now when we go back
05:39 - into unity and hit play we take a look
05:42 - at our health in the right hand corner
05:44 - and indeed we lose health when falling
05:48 - but we are falling from a really high
05:52 - distance and not dying and this is
05:55 - really unrealistic and also we still
05:57 - don't have the ability to turn on and
05:59 - off fold damage at all so let's go ahead
06:03 - and make those two adjustments so slide
06:07 - all the way up to the top and let's make
06:10 - some new variables right above the
06:13 - falling damage threshold let's type var
06:17 - enable falling damage equals true so
06:24 - that's going to be true now all the
06:27 - falling damage is going to be enabled by
06:30 - default let's also make another variable
06:33 - and I'm just going to make this right
06:34 - under called var
06:37 - falling damage multiplier and what this
06:45 - is going to do is it's going to
06:47 - determine how much we want to multiply
06:50 - the falling damage and then subtract
06:53 - from health so if this is equal to one
06:55 - we're just going to subtract the amount
06:58 - of units we fill but if it's equal to
07:01 - two we're going to we are going to
07:04 - subtract double it and if it's equal to
07:07 - 0.5 1/2 and so on ok so now that we have
07:11 - made those two variables let's go down
07:14 - to here where we are calling the
07:15 - function on the if folding remember if
07:18 - you can't find something in the script
07:20 - you can just go ahead and try a press
07:22 - ctrl F or command if your command if if
07:26 - you're on a Mac and then you can just
07:28 - type in what you're looking for so I'm
07:31 - looking for apply damage apply falling
07:37 - damage and that will highlight it in the
07:41 - script and you can just press ENTER
07:43 - until you find whatever you want so
07:47 - that's just a handy thing to to always
07:49 - remember but inside of this if statement
07:52 - we are trying to figure figure out if we
07:55 - fell and we want to just add a parameter
08:00 - so we want to check for something more
08:01 - than just that and we do this by using
08:04 - these two ad and signs so two of them
08:08 - will make it check for this and whatever
08:13 - we type nine and that's going to be
08:16 - enable falling damage sequel to true so
08:21 - we both need to fall and we also have
08:24 - neat we also need to have falling damage
08:27 - enabled now we can scroll down again to
08:31 - read such game object that sent message
08:33 - apply damage following this or fall
08:37 - distance and then we can type x and then
08:44 - the falling damage
08:47 - multiplier let's see if we get any
08:52 - errors it looks fine
08:55 - these can just be ignored and now inside
08:59 - of the inspector panel you can see some
09:02 - new variables showing the enable falling
09:05 - damage which we can take on and off and
09:08 - the falling damage multiplier so let's
09:12 - see if this working if it is we should
09:14 - be dying now and we did and now we can
09:18 - hit respawn and we are back in the game
09:21 - so that's basically it for this tutorial
09:24 - guys I hope you enjoyed it and this was
09:27 - just a rather short one but well I'll
09:31 - just quickly make a few changes and keep
09:34 - the camera running because I think I
09:36 - shouldn't make anything while the camera
09:40 - is not so if you just want to see me do
09:43 - some fire animation or just animating
09:46 - the light here just a few tricks then
09:49 - just stay for a couple of minutes but
09:52 - this is really the ending of the video
09:54 - so thank you for watching and I'll see
09:56 - you in the next one okay so those of you
09:59 - who stayed will just be animating the
10:01 - light here under the campfire because
10:03 - it's annoying me a little bit that it's
10:07 - not flickering even though the fire is
10:10 - so let's just move down our player again
10:13 - to get him back on solid ground and now
10:17 - we can go to a campfire and we can see I
10:20 - dragged in the default flame prefab here
10:25 - which comes with the standard asset and
10:28 - under that we have allowed light source
10:31 - one now we can go ahead and bring up the
10:35 - unity animation so window animation or
10:40 - control six should bring it up here just
10:44 - brought it up on my other screen I will
10:47 - just go ahead and dark it down here and
10:49 - now we can go ahead and adjust the light
10:52 - properties for this game object but
10:55 - we'll first hit the record so hit that
10:58 - red button
11:00 - and let's save this on the animations
11:03 - call this slow light flicker a light
11:07 - flickers flow actually light flicker
11:12 - slow hit save and we'll just remember to
11:19 - set this to loop and now we can just go
11:22 - ahead and quickly make an animation for
11:24 - this this could of course also be done
11:26 - through scripting though I just wanted
11:29 - to show you a very basic animation now
11:31 - and how you can set it to loop without
11:33 - that much work so at first I wanted to
11:37 - be glowing it's at full amount so I'll
11:40 - just quickly add a key or a curve
11:43 - actually we will go with curve and now
11:47 - you can go forward to let's say one
11:52 - change it to 0.9 maybe a bit less oops
11:59 - we're animating the enabled here that's
12:01 - really not what I wanted so we'll just
12:04 - delete that again I wanted to animate
12:09 - the intensity there we have it so here
12:12 - at curve go forward to about one go down
12:19 - to like 0.7 and we can see it's just a
12:25 - very tiny amount so it creates a little
12:29 - bit of detail to a game now let's go to
12:33 - something like 140 and then change it to
12:41 - 0.8 again like that you can swim out of
12:46 - it we can maybe try playing this and
12:51 - that just gives some very subtle light
12:55 - flickering and we could of course expand
12:58 - on this to make some fast changes too so
13:02 - the intensity down to say zero point six
13:07 - here don't know if that's too much and
13:11 - then
13:12 - have it rise to 0.85
13:18 - and then go forward some more and go
13:22 - back to 0.8 so it will loop correctly
13:26 - and let's see if this is looking out
13:29 - great the drop is a little big for me
13:35 - there at 0.6 so let's to 0.7 instead hit
13:43 - play and I think that looks really great
13:48 - so that was basically it for the small
13:51 - animation there let's just have a quick
13:53 - look at it in game remember to check
13:56 - play automatically so let's just
14:00 - maximize the screen and that's really
14:08 - awesome just a little bit of light
14:10 - flickering and this will probably be
14:12 - more visible once it gets nighttime yes
14:15 - it is and that looks really great okay
14:18 - so the next thing I wanted to do was
14:21 - just to quickly take our crosshair here
14:25 - and drag him under the player so drag
14:29 - him under I'll play it there and that
14:32 - was basically it for that let's also see
14:35 - ro add the position variables here there
14:39 - we go
14:39 - just so we have the crosshair oriented
14:42 - towards our player and then I also want
14:45 - to let's see if there any more changes
14:50 - that actually looks pretty good we could
14:53 - go ahead and disable the audio zone but
14:55 - I think that's pretty moody I'm speaking
14:58 - with an audio guy at the moment who
15:01 - might be interested in making some cool
15:03 - music for the game so that would be
15:06 - really really awesome but we'll see but
15:09 - yeah that's basically it for this video
15:11 - guys thank you for sticking around and
15:13 - I'll see you in the next one

Cleaned transcript:

hello and welcome to video number 29 in our survival game series done by practice I am the CEO of Black Keys and in this video we're going to be taking a look at applying fault damage to our player so whenever our fault our player falls from a certain height it will apply damage to the player stat script depending on how high okay cool so we're going to be needing a script we applied in tutorial number 20 this one called the FPS Walker enhanced which is something I got from the internet and then made some improvements and changes to to allow for stuff like crouching so if you don't have this applied please go ahead and watch tutorial number 20 to learn more about that and of course this new updated version will also be included in the assets pack which you can get from our website and if you don't know how to import it then we have a bonus video showing just been awesome anyway let's get started so as always I've opened up unity and you notice that our player is pretty far from the ground and if we just select him we can see over here in the righthand side in this inspector that our FPS Walker enhanced is indeed on the player and in here we have a lot of settings the ones we're going to be focusing on the de falling damage so here we have the falling damage threshold and that's what adjust how high the player has to fall above the ground for it to register at all but if we hit play now we will notice that our player doesn't die though inside of our console it will tell us how far we fell from in unity units so we have to somehow apply this to our player stats while also giving some control over how much falling damage he needs to receive and also I would like to just make this simple ability to enable and disable falling damage at all okay great so let's first of all adjust the falling damage threshold to something we like I don't know if 10 is the perfect amount we'll we'll quickly figure that out so let's see here there it registers that's maybe that was 13 units and there are also registers that might be a bit too high now actually I like that a lot but again this is depending this is completely dependent on the game you're making some please test this out and don't just go with the value I'll I went with here great so we'll get him high up in the air here and then open up the FPS Walker enhanced script here we go so that is quite a few things going on here but most of this you can just ignore we're going to scroll down just a bit to read says if falling and this is basically where we call the fouling damage alert function and I just quickly want to rename that because now it's no longer an alert so we'll call this apply falling damage instead so delete the alert part and Adly apply and then go all the way down to the button of the script and do the same apply falling damage now we can just go ahead and make the descript actually damage the player that's the most crucial part so under the function apply falling damage will make a new line right before the debug deadlock and here we're just going to send a message using game object that sent message to the players that script to call the function apply damage because if we open up our players stats v2 we can see that we have a function here called apply damage which has an input which is the damage amount and that we'll just call the that we'll just subtract the health and then check whether or not we're dead and so that's just all we need to do so now we can just type game object with the small G that's send message open our parentheses apply damage and I've made it with a mm and I know that's a typo but I just decided to stick with it because I made several of those it's a bad habit of mine but please do change it in your script if you want to so apply damage and it's just here um so apply damage comma and then we're going to type full distance close it up and then a semicolon and now when we go back into unity and hit play we take a look at our health in the right hand corner and indeed we lose health when falling but we are falling from a really high distance and not dying and this is really unrealistic and also we still don't have the ability to turn on and off fold damage at all so let's go ahead and make those two adjustments so slide all the way up to the top and let's make some new variables right above the falling damage threshold let's type var enable falling damage equals true so that's going to be true now all the falling damage is going to be enabled by default let's also make another variable and I'm just going to make this right under called var falling damage multiplier and what this is going to do is it's going to determine how much we want to multiply the falling damage and then subtract from health so if this is equal to one we're just going to subtract the amount of units we fill but if it's equal to two we're going to we are going to subtract double it and if it's equal to 0.5 1/2 and so on ok so now that we have made those two variables let's go down to here where we are calling the function on the if folding remember if you can't find something in the script you can just go ahead and try a press ctrl F or command if your command if if you're on a Mac and then you can just type in what you're looking for so I'm looking for apply damage apply falling damage and that will highlight it in the script and you can just press ENTER until you find whatever you want so that's just a handy thing to to always remember but inside of this if statement we are trying to figure figure out if we fell and we want to just add a parameter so we want to check for something more than just that and we do this by using these two ad and signs so two of them will make it check for this and whatever we type nine and that's going to be enable falling damage sequel to true so we both need to fall and we also have neat we also need to have falling damage enabled now we can scroll down again to read such game object that sent message apply damage following this or fall distance and then we can type x and then the falling damage multiplier let's see if we get any errors it looks fine these can just be ignored and now inside of the inspector panel you can see some new variables showing the enable falling damage which we can take on and off and the falling damage multiplier so let's see if this working if it is we should be dying now and we did and now we can hit respawn and we are back in the game so that's basically it for this tutorial guys I hope you enjoyed it and this was just a rather short one but well I'll just quickly make a few changes and keep the camera running because I think I shouldn't make anything while the camera is not so if you just want to see me do some fire animation or just animating the light here just a few tricks then just stay for a couple of minutes but this is really the ending of the video so thank you for watching and I'll see you in the next one okay so those of you who stayed will just be animating the light here under the campfire because it's annoying me a little bit that it's not flickering even though the fire is so let's just move down our player again to get him back on solid ground and now we can go to a campfire and we can see I dragged in the default flame prefab here which comes with the standard asset and under that we have allowed light source one now we can go ahead and bring up the unity animation so window animation or control six should bring it up here just brought it up on my other screen I will just go ahead and dark it down here and now we can go ahead and adjust the light properties for this game object but we'll first hit the record so hit that red button and let's save this on the animations call this slow light flicker a light flickers flow actually light flicker slow hit save and we'll just remember to set this to loop and now we can just go ahead and quickly make an animation for this this could of course also be done through scripting though I just wanted to show you a very basic animation now and how you can set it to loop without that much work so at first I wanted to be glowing it's at full amount so I'll just quickly add a key or a curve actually we will go with curve and now you can go forward to let's say one change it to 0.9 maybe a bit less oops we're animating the enabled here that's really not what I wanted so we'll just delete that again I wanted to animate the intensity there we have it so here at curve go forward to about one go down to like 0.7 and we can see it's just a very tiny amount so it creates a little bit of detail to a game now let's go to something like 140 and then change it to 0.8 again like that you can swim out of it we can maybe try playing this and that just gives some very subtle light flickering and we could of course expand on this to make some fast changes too so the intensity down to say zero point six here don't know if that's too much and then have it rise to 0.85 and then go forward some more and go back to 0.8 so it will loop correctly and let's see if this is looking out great the drop is a little big for me there at 0.6 so let's to 0.7 instead hit play and I think that looks really great so that was basically it for the small animation there let's just have a quick look at it in game remember to check play automatically so let's just maximize the screen and that's really awesome just a little bit of light flickering and this will probably be more visible once it gets nighttime yes it is and that looks really great okay so the next thing I wanted to do was just to quickly take our crosshair here and drag him under the player so drag him under I'll play it there and that was basically it for that let's also see ro add the position variables here there we go just so we have the crosshair oriented towards our player and then I also want to let's see if there any more changes that actually looks pretty good we could go ahead and disable the audio zone but I think that's pretty moody I'm speaking with an audio guy at the moment who might be interested in making some cool music for the game so that would be really really awesome but we'll see but yeah that's basically it for this video guys thank you for sticking around and I'll see you in the next one
