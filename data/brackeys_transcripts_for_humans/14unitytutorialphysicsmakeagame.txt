With timestamps:

00:00 - thanks for tuning in at brakus hello
00:04 - everyone welcome to video number 14 and
00:07 - make a game a cool series on making a
00:10 - video game in unity today we are just
00:13 - going to be doing some different fixes
00:15 - here and there and we are also going to
00:17 - be playing a lot around with physics so
00:20 - I just wanted to give you an overall
00:22 - introduction to some of the more unknown
00:25 - parts of the physics system in unity so
00:28 - we're not going to be scripting today
00:29 - it's going to be all visual stuff
00:32 - so let's write into it first off I just
00:36 - want to fix the ambient light because
00:38 - when we now open up unity I think that
00:41 - some parts of the scene are just a bit
00:44 - too dark and you'll see that when we
00:46 - start to add more models into the game
00:49 - this is of course not its final graphic
00:51 - state I hope to add some details to it
00:54 - later on
00:56 - go so first off as you see here that's
01:00 - quite a bit of shadow on the ball so
01:02 - what I'm going to do is first I'm going
01:05 - to turn down the sunlight and this seems
01:07 - too weird that I'm fixing this by
01:09 - turning down the light but that is so we
01:12 - can turn up what is called ambient light
01:14 - to get some more fill light into the
01:17 - scene so we'll get rid of those shadows
01:20 - there so we'll do 1.3 here maybe let's
01:24 - see this in the game that looks nice
01:27 - when we now pump up the ambient light
01:31 - and you do this under edit render
01:33 - settings and then ambient light so we go
01:37 - in here and we still want this to be a
01:39 - grayish color maybe just a tiny bit blue
01:42 - from the sky but that's up to you I will
01:45 - just bump it up a bit here like this I
01:49 - think this is much better and maybe
01:51 - actually give it some more
01:53 - light from the Sun still so it becomes
01:56 - very very lit up yeah something like
02:00 - zero point actually let's still do 0.4
02:04 - so now it's it's very bright
02:06 - everything is very lit up but I really
02:09 - like this feeling for such a
02:12 - cartoon-like game cool so what we're
02:16 - going to do now is we are going to let's
02:19 - see on the list here we are going to fix
02:21 - the ball rotation because right now when
02:24 - we play the game wait a sec I'm just
02:29 - going to bump down the music here so
02:31 - it's not too loud for you this is
02:36 - probably better so right now when we
02:38 - play the game and we roll over here
02:43 - the ball might sometimes start to go in
02:47 - the wrong direction so if I can get it
02:49 - to do it here I might not be able to you
02:52 - oh yeah that did it so right now it's
02:55 - rolling off in some of the directions
02:57 - that we cannot control and that's a
03:00 - problem because sometimes the ball will
03:02 - just randomly roll out of the platform
03:04 - so what we can do to fix this is really
03:06 - easy we simply select the ball and we
03:09 - use what is called rigidbody constraints
03:12 - so under the rigidbody component go into
03:14 - constraints and we can simply check the
03:17 - different axes that we don't want the
03:20 - ball to either move or rotate in so
03:24 - right now we are only moving along the Y
03:28 - and the x axis so I'm just going to go
03:32 - ahead and check see so that it won't
03:37 - position itself on the z axis and in the
03:40 - rotation tab here we are actually only
03:43 - rotating on the z axis so I'm just going
03:46 - to go ahead and check X and y and now
03:49 - when we play the game we will still be
03:51 - able to move in the same directions but
03:54 - we are sure that the ball will never
03:56 - start rolling off cool so what we can do
04:00 - now is we can go ahead and begin with
04:03 - all the fun stuff so this was the basic
04:06 - introduction to rigid body constraints
04:08 - but radiant body can constraints can be
04:11 - useful for many things and here I'm
04:13 - going to go ahead and show you an
04:14 - example so we are going to go ahead and
04:17 - create a cylinder here and this is not
04:21 - going to be pretty by any means I just
04:23 - want to illustrate what you can do with
04:25 - these
04:25 - and then you can come up with some nice
04:28 - gameplay elements on your own so I'm
04:32 - going to rotate this on the x axis by 90
04:34 - degrees and I'm going to bump this down
04:37 - to here cool now let's get some of this
04:44 - stuff out of the way here and change the
04:48 - the positioning to global just move it
04:54 - over here and let's maybe do two of
04:58 - these right next to each other like this
05:02 - this is only to test it out so we're
05:04 - just going to move this closer to the
05:07 - center and then we can duplicate one of
05:10 - these platforms here and position it
05:14 - directly on top of the cylinder so we'll
05:16 - just choose both the cylinder and the
05:18 - platform and we'll give them a custom X
05:22 - value so let's see what we are going to
05:25 - need here something like 13 point 5
05:29 - let's do that great and then we can just
05:32 - move down the platform a bit here like
05:35 - this this looks nice we are going to
05:37 - rename this to rotatable tate able
05:47 - platform and then we are going to add a
05:51 - component a physics rigidbody and in
05:55 - here we are just going to freeze some of
05:57 - the positions so we're just going to
05:59 - leave everything like it is but we are
06:02 - going to freeze the let's see x y&z
06:06 - position we don't want this to move at
06:08 - all and then we are going to freeze the
06:10 - X and the y rotation so now this will
06:14 - only rotate along the cylinder so when
06:18 - we now play the game we can use this as
06:22 - a springboard so this gives us a lot of
06:26 - control over what our different
06:29 - rigidbody components do and will allow
06:32 - us to create interesting physics
06:33 - gameplay so please go ahead and
06:36 - experiment with this on your own and
06:39 - constrainted in every race - to make the
06:42 - game fun to play and you can of course
06:44 - also drag up the mass if you want this
06:46 - to be more difficult to move for the
06:48 - player or whatever you want to do so
06:51 - this was just an overall introduction
06:54 - great so now that we have the rotatable
06:58 - platform of the way let's actually just
07:02 - parent the let's see what how we're
07:04 - going to do this let's make a new game
07:08 - object let's go to game object create
07:10 - empty and let's call this springboard
07:17 - and then select the rotatable platform
07:22 - and the cylinder and let's drag them
07:26 - under the springboard and let's rename
07:28 - the rotatable platform here to just
07:30 - platform and the cylinder to base or
07:36 - axis us or whatever you want to do now
07:39 - let's break the prefab here because we
07:43 - don't want this to be be connected to
07:47 - the preforms prefabs from the other
07:49 - platforms and there's multiple ways to
07:52 - to break a prefab one of the ways is
07:56 - just to drag it down into a new one and
07:58 - then delete that one and it will be
08:01 - broken here so there's multiple ways to
08:04 - do this I just it's a bad habit but
08:07 - that's the way I do it and now we can go
08:10 - ahead and instead bring down our
08:13 - springboard as a prefab so we can
08:15 - distribute this around the scene and
08:17 - this again it's not pretty I just wanted
08:20 - to show you how this can be done so now
08:23 - we can go ahead and delete the
08:24 - springboard and we might revisit it
08:26 - later great so what we're going to do
08:30 - now is we're going to go ahead and
08:31 - create a we're going to go ahead and
08:35 - create a joint and basically there are
08:39 - different kinds of joints they are fixed
08:41 - hinge and Springs
08:43 - there are also some others like
08:45 - character joints but we're not going to
08:47 - look into those so these are the three
08:50 - most basic joints
08:52 - they're good for different things the
08:54 - fixed joint will make a game object try
08:57 - to position itself as much as possible
09:00 - and then you can give it values for when
09:02 - it will break the hinge the hinge
09:07 - component will be good for stuff like
09:11 - doors because you can give it certain
09:13 - axes that it will rotate around we could
09:16 - do we could have used this spring at the
09:19 - hinge component to do the spring board
09:21 - if we wanted to then of course there are
09:24 - Springs which are just like they sound
09:28 - you connect them to a certain position
09:30 - and then you give them values for
09:34 - dampening and spring values and they
09:37 - will be able to be flexed and Bend but
09:41 - they will always try to get as close to
09:44 - that position as possible so let's try
09:46 - to implement these and see them in
09:48 - action these descriptions of those
09:51 - components are of course not exact but I
09:54 - just wanted you to understand basically
09:56 - what they do so now let's try to
09:58 - implement them of course if you want
10:00 - more precise descriptions of what they
10:02 - can do and what the different values
10:06 - will do for these components please go
10:10 - ahead and just visit the unity scripting
10:13 - reference I try to stay away from those
10:16 - long and boring descriptions cool so now
10:20 - let's finally go ahead and implement
10:22 - some of this so let's go ahead and hit
10:25 - create game object and let's do a let's
10:31 - do a scaps Allah let's do a cylinder and
10:34 - for the cylinder let's first off scale
10:39 - this down in the Y so something like 0.2
10:45 - yeah this looks pretty nice and let's
10:48 - bring this upwards so we have some space
10:51 - for this and let's call this base then
10:56 - let's duplicate this game object move it
10:59 - down here and let's scale it down on the
11:02 - X to something like 0.2
11:05 - on the wire - something like 0.3 and
11:08 - under set the - 0.2 again so yeah this
11:13 - looks just fine what we can do is we can
11:15 - move this up so that it just barely
11:18 - collides with our base and we can go
11:24 - ahead and rename this to joint
11:29 - let's do Ghent one actually and let's
11:32 - hit add component physics and then let's
11:37 - see where is it spring joint let's also
11:40 - go to the base here and hit add
11:43 - component physics and then fixed joint
11:47 - you here you can go ahead and add a
11:50 - break force or a break torque for when
11:54 - this joint will break so how much weight
11:57 - needs to be applied to this before it
12:00 - will fall down since this is just
12:03 - floating in free air I'm not going to do
12:05 - any brake force but that's a option for
12:08 - you if you want to the rigidbody we are
12:11 - not going to connect everything because
12:13 - if you don't it will just try to stay at
12:17 - the position it was in when you hit
12:19 - place so basically the position you said
12:21 - in the scene here will be its fixed
12:24 - position now for the joint one here we
12:27 - have the spring joint component and this
12:30 - does a bunch of things first off let's
12:33 - bump up the spring to something like a
12:34 - hundred because we want this to be
12:36 - pretty tight then you can tweak stuff
12:39 - like damper minimum and Max distance I'm
12:42 - going to do max distance students to
12:44 - something like zero point one and I'm
12:46 - not going to make this able to break so
12:48 - this should give us a pretty nice joint
12:50 - for our setup here
12:51 - now let's duplicate this rename it to
12:54 - joint to drag it down a bit here and
13:01 - that looks pretty nicely now if I joined
13:04 - one we are going ahead and connect the
13:07 - base to a rigid body here so on the
13:10 - connected body simply select a base one
13:13 - then in join two we are going to connect
13:15 - joint one
13:17 - and should we do a third one we can do
13:19 - that so let's drag this one down and
13:24 - let's connect let's first rename it
13:28 - actually and then drag in joint two so
13:31 - as you can see we've made a chain of
13:34 - spring joints and now when we hit play
13:37 - it will look like this so as you can see
13:41 - they are not fully connected but you are
13:43 - able to use them just like in any
13:47 - reasonable chain so that's what a series
13:50 - of spring joints will look like that's
13:53 - of course really good for creating
13:55 - different gameplay elements but instead
13:58 - of spring joints let's use something
14:00 - else let's use what is called a hinge
14:03 - joint and this is much more restricted
14:06 - in the way that it moves and behaves you
14:09 - have much more control let hit let's hit
14:12 - remove component on all three joints hit
14:16 - add component physics and then go to
14:20 - hinge joint
14:21 - now let's chain up the rigid bodies once
14:25 - again so for joint one we'll do the base
14:29 - for joint - we will do joint one and for
14:33 - joint three we will do joint - now
14:36 - select all of them again so we can treat
14:39 - the parameters at the same time now
14:42 - we're going to do anchor instead of X
14:45 - which is the direction in which these
14:48 - orange arrows will point we want to do Z
14:52 - so that they will rotate only around the
14:55 - z axis so let's do one in the Z and we
14:59 - can see that the direction of these
15:01 - orange arrows has changed to the Z
15:06 - called the anchor we're just going to do
15:08 - y1 that's going to be just fine and now
15:11 - let's have a look at this this will be
15:14 - much better for the kind of game we are
15:16 - creating because first of all they will
15:18 - stay much closer they don't have that
15:20 - spring effect and also they will only
15:24 - move along one axis so let's now try
15:28 - ahead and see how this behaves whoops if
15:30 - I can jump up correctly and hit it there
15:35 - it was so you can see that this gives
15:37 - also a pretty nice effect it might not
15:40 - be as realistic in the way it moves but
15:43 - it it will do so of course there are
15:48 - there are pros and cons for both of
15:50 - these methods I just wanted to show you
15:53 - both of them and how they can behave and
15:56 - and such you can also just use the
16:00 - spring joints and then use constraints
16:03 - to only make them move certain ways or
16:05 - you can do some scripting it's all up to
16:08 - you it's this all becomes really fun
16:11 - when you start adding forces to change
16:14 - like this great then at last I'm just
16:17 - going to create a cube here and I'm
16:20 - going to move it over just so it's kind
16:25 - of right let's look at this from the
16:28 - y-axis here we can soup through actually
16:33 - let's put this into wireframe look at it
16:36 - from the y-axis from the bottom let's
16:39 - now hit this cube in the middle in the
16:43 - top right to switch into isometric view
16:46 - which will allow us to position this
16:48 - better now move it over just the way you
16:51 - wanted here and let's click back on the
16:56 - cube again here to make to change back
16:59 - into perspective and change back into
17:02 - textured now we can just scale this down
17:05 - on the x-axis to something like 0.3 and
17:10 - now we have a pretty cool chain that
17:14 - ends up with a it almost looks like a
17:17 - hammer actually here so this will be be
17:20 - fun to experiment with
17:22 - and please go ahead and add some forces
17:25 - through scripting oh yeah of course we
17:27 - also need to create a rigidbody buddy
17:29 - for this so let's go ahead and find it
17:33 - waste the cube there let's rename this
17:36 - to hammer let's add a physics
17:41 - rid let's do Hinch giant and let's
17:44 - connect the joint three and change the
17:48 - axes to one in the Z so now this will
17:51 - behave just like the other ones and we
17:54 - will have a pretty nice effect so let's
17:56 - see yes this indeed does wake cool so
18:00 - now let's go ahead and make this into a
18:02 - prefab so let's create an empty game
18:04 - object by pressing control shift and
18:06 - let's rename this to chain hammer thing
18:12 - II let's just do chain hammer and let's
18:16 - just move all of this under there and
18:20 - let's drag it down to make a prefab out
18:24 - of it so again we might revisit this
18:27 - later and use it but for now I just
18:29 - wanted to show you how it's done
18:31 - so let's go ahead and maybe just pull
18:35 - this back like it was before
18:38 - and let's save this out and that was
18:41 - pretty much it for this tutorial I hope
18:43 - you think that these new tools are fun
18:46 - to play around with of course there are
18:49 - more coming out also the pong tutorial
18:52 - series is I've just finished that so now
18:56 - I will have time to start another one
18:58 - which is really exciting so thanks for
19:01 - watching and I'll see you in the next
19:03 - video
19:06 - [Music]

Cleaned transcript:

thanks for tuning in at brakus hello everyone welcome to video number 14 and make a game a cool series on making a video game in unity today we are just going to be doing some different fixes here and there and we are also going to be playing a lot around with physics so I just wanted to give you an overall introduction to some of the more unknown parts of the physics system in unity so we're not going to be scripting today it's going to be all visual stuff so let's write into it first off I just want to fix the ambient light because when we now open up unity I think that some parts of the scene are just a bit too dark and you'll see that when we start to add more models into the game this is of course not its final graphic state I hope to add some details to it later on go so first off as you see here that's quite a bit of shadow on the ball so what I'm going to do is first I'm going to turn down the sunlight and this seems too weird that I'm fixing this by turning down the light but that is so we can turn up what is called ambient light to get some more fill light into the scene so we'll get rid of those shadows there so we'll do 1.3 here maybe let's see this in the game that looks nice when we now pump up the ambient light and you do this under edit render settings and then ambient light so we go in here and we still want this to be a grayish color maybe just a tiny bit blue from the sky but that's up to you I will just bump it up a bit here like this I think this is much better and maybe actually give it some more light from the Sun still so it becomes very very lit up yeah something like zero point actually let's still do 0.4 so now it's it's very bright everything is very lit up but I really like this feeling for such a cartoonlike game cool so what we're going to do now is we are going to let's see on the list here we are going to fix the ball rotation because right now when we play the game wait a sec I'm just going to bump down the music here so it's not too loud for you this is probably better so right now when we play the game and we roll over here the ball might sometimes start to go in the wrong direction so if I can get it to do it here I might not be able to you oh yeah that did it so right now it's rolling off in some of the directions that we cannot control and that's a problem because sometimes the ball will just randomly roll out of the platform so what we can do to fix this is really easy we simply select the ball and we use what is called rigidbody constraints so under the rigidbody component go into constraints and we can simply check the different axes that we don't want the ball to either move or rotate in so right now we are only moving along the Y and the x axis so I'm just going to go ahead and check see so that it won't position itself on the z axis and in the rotation tab here we are actually only rotating on the z axis so I'm just going to go ahead and check X and y and now when we play the game we will still be able to move in the same directions but we are sure that the ball will never start rolling off cool so what we can do now is we can go ahead and begin with all the fun stuff so this was the basic introduction to rigid body constraints but radiant body can constraints can be useful for many things and here I'm going to go ahead and show you an example so we are going to go ahead and create a cylinder here and this is not going to be pretty by any means I just want to illustrate what you can do with these and then you can come up with some nice gameplay elements on your own so I'm going to rotate this on the x axis by 90 degrees and I'm going to bump this down to here cool now let's get some of this stuff out of the way here and change the the positioning to global just move it over here and let's maybe do two of these right next to each other like this this is only to test it out so we're just going to move this closer to the center and then we can duplicate one of these platforms here and position it directly on top of the cylinder so we'll just choose both the cylinder and the platform and we'll give them a custom X value so let's see what we are going to need here something like 13 point 5 let's do that great and then we can just move down the platform a bit here like this this looks nice we are going to rename this to rotatable tate able platform and then we are going to add a component a physics rigidbody and in here we are just going to freeze some of the positions so we're just going to leave everything like it is but we are going to freeze the let's see x y&z position we don't want this to move at all and then we are going to freeze the X and the y rotation so now this will only rotate along the cylinder so when we now play the game we can use this as a springboard so this gives us a lot of control over what our different rigidbody components do and will allow us to create interesting physics gameplay so please go ahead and experiment with this on your own and constrainted in every race to make the game fun to play and you can of course also drag up the mass if you want this to be more difficult to move for the player or whatever you want to do so this was just an overall introduction great so now that we have the rotatable platform of the way let's actually just parent the let's see what how we're going to do this let's make a new game object let's go to game object create empty and let's call this springboard and then select the rotatable platform and the cylinder and let's drag them under the springboard and let's rename the rotatable platform here to just platform and the cylinder to base or axis us or whatever you want to do now let's break the prefab here because we don't want this to be be connected to the preforms prefabs from the other platforms and there's multiple ways to to break a prefab one of the ways is just to drag it down into a new one and then delete that one and it will be broken here so there's multiple ways to do this I just it's a bad habit but that's the way I do it and now we can go ahead and instead bring down our springboard as a prefab so we can distribute this around the scene and this again it's not pretty I just wanted to show you how this can be done so now we can go ahead and delete the springboard and we might revisit it later great so what we're going to do now is we're going to go ahead and create a we're going to go ahead and create a joint and basically there are different kinds of joints they are fixed hinge and Springs there are also some others like character joints but we're not going to look into those so these are the three most basic joints they're good for different things the fixed joint will make a game object try to position itself as much as possible and then you can give it values for when it will break the hinge the hinge component will be good for stuff like doors because you can give it certain axes that it will rotate around we could do we could have used this spring at the hinge component to do the spring board if we wanted to then of course there are Springs which are just like they sound you connect them to a certain position and then you give them values for dampening and spring values and they will be able to be flexed and Bend but they will always try to get as close to that position as possible so let's try to implement these and see them in action these descriptions of those components are of course not exact but I just wanted you to understand basically what they do so now let's try to implement them of course if you want more precise descriptions of what they can do and what the different values will do for these components please go ahead and just visit the unity scripting reference I try to stay away from those long and boring descriptions cool so now let's finally go ahead and implement some of this so let's go ahead and hit create game object and let's do a let's do a scaps Allah let's do a cylinder and for the cylinder let's first off scale this down in the Y so something like 0.2 yeah this looks pretty nice and let's bring this upwards so we have some space for this and let's call this base then let's duplicate this game object move it down here and let's scale it down on the X to something like 0.2 on the wire something like 0.3 and under set the 0.2 again so yeah this looks just fine what we can do is we can move this up so that it just barely collides with our base and we can go ahead and rename this to joint let's do Ghent one actually and let's hit add component physics and then let's see where is it spring joint let's also go to the base here and hit add component physics and then fixed joint you here you can go ahead and add a break force or a break torque for when this joint will break so how much weight needs to be applied to this before it will fall down since this is just floating in free air I'm not going to do any brake force but that's a option for you if you want to the rigidbody we are not going to connect everything because if you don't it will just try to stay at the position it was in when you hit place so basically the position you said in the scene here will be its fixed position now for the joint one here we have the spring joint component and this does a bunch of things first off let's bump up the spring to something like a hundred because we want this to be pretty tight then you can tweak stuff like damper minimum and Max distance I'm going to do max distance students to something like zero point one and I'm not going to make this able to break so this should give us a pretty nice joint for our setup here now let's duplicate this rename it to joint to drag it down a bit here and that looks pretty nicely now if I joined one we are going ahead and connect the base to a rigid body here so on the connected body simply select a base one then in join two we are going to connect joint one and should we do a third one we can do that so let's drag this one down and let's connect let's first rename it actually and then drag in joint two so as you can see we've made a chain of spring joints and now when we hit play it will look like this so as you can see they are not fully connected but you are able to use them just like in any reasonable chain so that's what a series of spring joints will look like that's of course really good for creating different gameplay elements but instead of spring joints let's use something else let's use what is called a hinge joint and this is much more restricted in the way that it moves and behaves you have much more control let hit let's hit remove component on all three joints hit add component physics and then go to hinge joint now let's chain up the rigid bodies once again so for joint one we'll do the base for joint we will do joint one and for joint three we will do joint now select all of them again so we can treat the parameters at the same time now we're going to do anchor instead of X which is the direction in which these orange arrows will point we want to do Z so that they will rotate only around the z axis so let's do one in the Z and we can see that the direction of these orange arrows has changed to the Z called the anchor we're just going to do y1 that's going to be just fine and now let's have a look at this this will be much better for the kind of game we are creating because first of all they will stay much closer they don't have that spring effect and also they will only move along one axis so let's now try ahead and see how this behaves whoops if I can jump up correctly and hit it there it was so you can see that this gives also a pretty nice effect it might not be as realistic in the way it moves but it it will do so of course there are there are pros and cons for both of these methods I just wanted to show you both of them and how they can behave and and such you can also just use the spring joints and then use constraints to only make them move certain ways or you can do some scripting it's all up to you it's this all becomes really fun when you start adding forces to change like this great then at last I'm just going to create a cube here and I'm going to move it over just so it's kind of right let's look at this from the yaxis here we can soup through actually let's put this into wireframe look at it from the yaxis from the bottom let's now hit this cube in the middle in the top right to switch into isometric view which will allow us to position this better now move it over just the way you wanted here and let's click back on the cube again here to make to change back into perspective and change back into textured now we can just scale this down on the xaxis to something like 0.3 and now we have a pretty cool chain that ends up with a it almost looks like a hammer actually here so this will be be fun to experiment with and please go ahead and add some forces through scripting oh yeah of course we also need to create a rigidbody buddy for this so let's go ahead and find it waste the cube there let's rename this to hammer let's add a physics rid let's do Hinch giant and let's connect the joint three and change the axes to one in the Z so now this will behave just like the other ones and we will have a pretty nice effect so let's see yes this indeed does wake cool so now let's go ahead and make this into a prefab so let's create an empty game object by pressing control shift and let's rename this to chain hammer thing II let's just do chain hammer and let's just move all of this under there and let's drag it down to make a prefab out of it so again we might revisit this later and use it but for now I just wanted to show you how it's done so let's go ahead and maybe just pull this back like it was before and let's save this out and that was pretty much it for this tutorial I hope you think that these new tools are fun to play around with of course there are more coming out also the pong tutorial series is I've just finished that so now I will have time to start another one which is really exciting so thanks for watching and I'll see you in the next video
