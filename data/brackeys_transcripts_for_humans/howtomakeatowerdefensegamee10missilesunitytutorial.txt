With timestamps:

00:00 - this video is brought to you by Aron
00:01 - meta I'm really sorry if I butchered
00:04 - your name thank you so much for donating
00:06 - if you want to support breis yourself
00:07 - you can go to patreon.com Brees thanks
00:10 - for tuning in at
00:12 - braies hello everyone and welcome to
00:14 - this video on creating a tower defense
00:16 - game in unity today we are going to be
00:17 - doing some explosions we are going to be
00:19 - editing our missile by adding a texture
00:22 - to it we are going to be creating a cool
00:24 - particle effect when it hits something
00:26 - and also we'll be editing the bullet
00:28 - script uh to allow for damaging enemies
00:31 - in a radius instead of just hitting the
00:33 - target so a really exciting video today
00:36 - and let's just jump right into it so you
00:38 - can see that I'm here in unity and what
00:40 - I want to begin with is finding uh our
00:43 - input ports folder and then our missile
00:45 - launcher if you haven't watched the
00:47 - previous video where we imported the
00:48 - missile launcher I definitely recommend
00:51 - that you go ahead and do that now or you
00:53 - could just use your own model for a
00:55 - missile of course but this missile here
00:57 - that you can see I have in the scene um
00:59 - is of that missile launcher model so you
01:03 - will have to import that at least cool
01:06 - so uh we basically want to set this up
01:08 - with a new material it currently has the
01:10 - default one so let's right click under
01:12 - the missile launcher materials folder to
01:14 - create a new one and let's call this one
01:17 - missile let's then drag it on top of the
01:20 - model and let's uh select our missile
01:22 - launcher texture and drag that into the
01:24 - albo channel let's bump up the metallic
01:27 - and bring down the smoothness to make it
01:29 - fit with the rest of our
01:31 - scene and basically I want to use this
01:33 - as our Graphics object but not as our
01:36 - root object and the reason why is that
01:38 - if we current select it and make sure we
01:41 - are set to Pivot and local up here you
01:44 - can see that our blue arrow meaning our
01:46 - forward axis which is our Z positive Z
01:49 - points
01:51 - upwards and not forward when it comes in
01:54 - relation to our missile so basically we
01:57 - want to rotate our missile so that it it
01:59 - points in the same direction as our Z so
02:01 - that when we chase a Target it will look
02:04 - the correct way and the Really the
02:07 - easiest way to do this is just rename
02:09 - this to something like Graphics create
02:11 - an empty object that we reset the
02:13 - transform on and let's uh call this one
02:16 - missile missile there we go let's take
02:19 - our Graphics object drag it on the
02:21 - missile let's reset the Transformer on
02:24 - that and let's just drag it up here so
02:25 - we can see what's going on and you will
02:27 - notice it has disappeared but really
02:29 - it's just really really tiny so we'll
02:32 - just select our Graphics here and set
02:34 - the scale to 100 by 100 by 100 and that
02:38 - will bring it right back and then what
02:40 - we can do is we can actually just rotate
02:43 - it on uh 90Â° around the Y AIS and now
02:47 - when we select our missile you can see
02:49 - that the z-axis and our missile points
02:51 - in the same direction so now we can hit
02:54 - an uh hit add component and then add the
02:57 - bullet component let's select the speed
02:59 - of something like 30 I want to give the
03:01 - impression that this missile actually
03:03 - has some mass and therefore moves a bit
03:05 - slower towards the Target and we'll also
03:08 - get this cool like meat seeding uh meat
03:10 - seeding seeking heat seeking missile
03:13 - effect um that that looks kind of
03:16 - impressive and then as the impact effect
03:18 - we'll create one ourselves in a second
03:20 - but let's just use the bullet impact
03:22 - effect uh for now so now we can take
03:25 - this missile drag it down under the
03:27 - prefabs folder to make it a prefab let's
03:29 - remove remve it from the scene and then
03:31 - let's select our missile launcher and
03:33 - drag our missile under the bullet prefab
03:35 - to replace the bullet with the missile
03:38 - there we go so now we should be able to
03:41 - actually test this out and I'm just
03:43 - going to do that really quickly
03:45 - by placing the turret down there and you
03:49 - can see I just paused it here it's just
03:50 - launched the missile if we take a look
03:53 - at the missile in the scene it's
03:55 - definitely not pointing towards our
03:58 - enemy and why is that because it's
04:00 - pointing in the right direction here as
04:02 - we can see that is because we actually
04:04 - haven't added this functionality yet so
04:07 - if we go ahead and take a look at our
04:09 - missile and then the bullet script and
04:11 - double click that to open it up in
04:12 - Visual Studio we currently don't do any
04:15 - uh rotation on the object at all so
04:18 - let's go ahead and do this and it's
04:20 - really easy we want to do this in the
04:21 - update Loop because we do want to do it
04:23 - every frame and we want to do it right
04:25 - beneath the line where we move the
04:27 - actual missile that means transform
04:30 - translate what we want to put here is
04:32 - just
04:33 - transform. look at so it will look at
04:37 - whatever Target and of course we will
04:39 - just use our Target variable that is the
04:41 - transform up here that we set using um
04:45 - or that we set from the actual missile
04:48 - launcher so the missile launcher points
04:49 - towards something and it fires the
04:51 - bullet in our case a missile and it says
04:53 - your target is this enemy and it will
04:56 - fly towards that and now Point towards
04:59 - that and if you hear some noise in the
05:01 - background that is just my cat's being
05:03 - uh naughty but um I will try and
05:06 - continue here um so the next thing that
05:09 - we want to do uh let's just see this
05:12 - working actually let's just see this in
05:13 - effect here so you can see that our
05:16 - missile now correctly chases our enemy
05:20 - so that's cool the next thing that we
05:22 - want to do is damage the player or the
05:25 - uh enemies in a radius so if we go in
05:27 - here under our bullet script again you
05:30 - can see that currently if we get within
05:33 - um or if we hit the target here we call
05:35 - a function called Hit Target and all
05:38 - that does is instantiate some kind of
05:40 - effect and then uh
05:43 - destroy the target game object and
05:45 - destroy the bullet all I want to do is I
05:48 - want to go up here and add a new
05:50 - variable and this is going to be a
05:52 - public float with a range or radius I
05:56 - think I'm going to call this the
05:57 - explosion radius and I'm going to
06:00 - default this to zero and this way down
06:03 - here we can simply add in an if
06:05 - statement that that says if explosion
06:08 - radius is greater than zero well then we
06:11 - want something extraordinary to happen
06:13 - then we want to damage uh people in a
06:15 - radius people our enemies and uh if not
06:20 - then we can just go ahead and hit this
06:22 - single Target and I think the way that
06:25 - we do this is instead of just destroying
06:27 - the target object or we'll still be
06:29 - doing that but let's wrap that in a
06:31 - function because we might do uh several
06:33 - things I definitely want to have some
06:36 - particles whenever our enemies die
06:39 - because right now it's just um our hit
06:41 - particle and not any kind of death
06:43 - effect and that looks kind of empty and
06:46 - I also want some way of keeping track of
06:48 - the health of our enemies uh so that is
06:51 - to come but for now we'll just have a a
06:53 - void damage here and it's going to
06:56 - damage a transform and we'll just call
06:58 - that enemy
07:00 - and then we can simply put this
07:01 - Destroyer statement down here so instead
07:03 - of destroying the target up here we're
07:05 - going to destroy
07:08 - enemy. game object here and then what we
07:11 - can do is we can say if explosion radius
07:15 - is greater than zero then we want to
07:17 - damage several enemies and we'll uh
07:19 - actually want to explode and we'll add
07:22 - that function in in a second if not then
07:25 - we want to
07:27 - damage uh the the Target only the target
07:31 - there we go and no ma matter what we
07:34 - want to destroy ourselves at the end so
07:37 - that should actually be it and now we
07:39 - can create the actual explode function
07:41 - here so we'll have a void
07:44 - explode and the way that we're going to
07:46 - do this is we are going to use
07:49 - physics dot um I believe it
07:54 - is overlap sphere and this is just going
07:57 - to shoot out a sphere and check for all
08:00 - of the colliders that is hit by that
08:02 - sphere that overlaps with that sphere or
08:05 - inside of that sphere and it's going to
08:07 - do that from a position and in a radius
08:10 - so our radius here is our explosion
08:13 - radius and we can use this to get an
08:16 - array which is basically just a list of
08:19 - items a fixed uh a list of items with a
08:21 - fixed uh range fixed range fixed length
08:26 - um so we can get an array of all of the
08:28 - colliders
08:29 - that are in that sphere so collider
08:32 - array and we'll call this one
08:35 - our uh
08:37 - colliders or something like hit objects
08:39 - or something like that and the reason
08:42 - why I'm not calling this enemies is
08:44 - because we might also have hit some
08:46 - objects that aren't our enemies and what
08:48 - you can really do here we don't want
08:50 - position there we want transform.
08:52 - position transform up position is that
08:55 - you can add a layer mask to uh filter
08:58 - out anything but enemies that are on a
09:01 - particular layer maybe called the enemy
09:03 - layer or something like that or we could
09:06 - just use the fact that all of our
09:08 - enemies if we go under our prefabs here
09:10 - and select our enemy all of our enemies
09:12 - are tagged as enemies so now we Loop
09:15 - through uh this list here so for each
09:19 - collider uh collider in
09:24 - colliders here for each thing that we
09:28 - have hid we want to see if that collider
09:32 - if the collider that we've hid do tag is
09:35 - equal to enemy so if it the the thing
09:38 - that we hit here is taged as an enemy
09:41 - then we can go ahead and damage it so
09:43 - then we can call
09:44 - damage on collider do
09:49 - transform there we go so now we will uh
09:52 - shoot out a sphere as an explosion we'll
09:56 - see what it hits we'll Loop through all
09:58 - of the things that it hit and check if
10:00 - they are indeed an enemy and if they are
10:02 - we will damage them which basically now
10:05 - just means destroy them cool so that is
10:08 - basically all the logic that we are
10:11 - going to need so now if we hit play here
10:13 - and it's not going to be visible with
10:15 - the first enemy of course only the
10:16 - second one when we have multiple enemies
10:18 - in here so I'm just going to wait a
10:20 - second here and actually I just uh
10:23 - reminded myself that we haven't changed
10:26 - uh the range of our missile launcher so
10:28 - we have to select our missile launcher
10:30 - actually we have to select our missile
10:32 - and we have to add an explosion radius
10:35 - and you will notice that currently we
10:36 - don't have any way of viewing this
10:38 - radius so as we did with our turret when
10:41 - we added a range I suggest that we go
10:43 - down here and go void on draw gizmos
10:47 - selected and we add in
10:50 - gizmos do draw wire sphere from our
10:55 - current position transform. position in
10:59 - explosion radius and that we make this
11:03 - um red or something so gizmos color
11:06 - equals color. red there we go so that
11:10 - will just make it very clear to the user
11:12 - when setting things in the inspector
11:14 - here how big a radius the uh missile
11:17 - actually will explode in and this is
11:19 - quite a big radius we might have to
11:22 - bring it down to something like seven or
11:24 - uh let's just do eight that might hit
11:26 - something like at least two or three
11:28 - enemies
11:30 - um so let's apply that let's go and hit
11:32 - play and now we should see that if we
11:36 - wait for the first one here to pass by
11:39 - and put a turret for this second wave
11:41 - here we should see that they both
11:43 - explode because they were in that radius
11:46 - and none of the environment or anything
11:48 - that gets removed and uh the one that
11:51 - was down here didn't get hit so you can
11:53 - see that this always hits uh two and
11:56 - sometimes if you're lucky hits three
11:58 - enemies which think is is quite good for
12:01 - balance but you can of course mess
12:03 - around with this especially when we get
12:05 - the actual damage parameters in there
12:07 - that we can tweak cool so now let's add
12:11 - an awesome effect so now is for the
12:13 - particle play time that should be a
12:16 - whole whole thing we should have like a
12:18 - jingle that goes particle play time okay
12:21 - maybe for the next video so let's go and
12:24 - hit create particle system and let's re
12:29 - said actually I don't want to begin with
12:31 - a whole fresh particle system let's use
12:33 - our bullet impact effect as a base here
12:36 - so let's duplicate the prefab call this
12:38 - one the
12:39 - explosion
12:40 - effect uh maybe we should do missile
12:43 - explosion effect to be more clear about
12:45 - what this is let's drag it in uh and now
12:50 - we can see that this is kind of boring
12:51 - let's first of all Loop this while we're
12:53 - playing around with it and set the
12:54 - duration to something like three so that
12:56 - looks pretty good there and my is
12:59 - joining in again say hi hi so I'll just
13:03 - put him down so um what we can then go
13:06 - is we can go under shape here and maybe
13:09 - just bring up the size of this radius a
13:12 - bit because we are do want our explosion
13:15 - to be kind of
13:16 - large and dramatic and then we can go
13:19 - under emission and definitely bump this
13:21 - up I think we should go to something
13:23 - like 30 and my idea with this is that we
13:26 - add a bunch of debris that goes flying
13:28 - and that
13:29 - falls on the um on the ground and then
13:33 - we add a separate particle system that
13:35 - is kind of our fire spikes thing which
13:39 - is also Cubes but that actually has a
13:41 - negative gravity so they go flying in
13:43 - the air I think that's going to look
13:45 - fairly cool so let's just have this be
13:47 - at something like 30 and uh the start
13:50 - size and all that actually is pretty
13:52 - good but I definitely want to bump up
13:54 - the speed so let's go between 10 and
13:56 - maybe 15
14:00 - and maybe between five and
14:03 - 15 but I definitely want them to go
14:05 - flying I actually think that this this
14:07 - looks pretty good and then I want to go
14:09 - down on the renderer and I want to
14:11 - disable uh receive shadows and cast
14:13 - Shadows I don't think there's any reason
14:15 - for them to actually do that um not when
14:18 - we have this many in the scene
14:20 - especially because we're going to be
14:21 - adding a cool light in a moment that you
14:23 - will see what uh what
14:25 - does and um yeah I kind of like that so
14:29 - let's use that as a base to work off of
14:31 - and uh let's now duplicate this and we
14:34 - can maybe we can take the second one and
14:37 - drag it under as a child and this is
14:40 - going to be our Flames or Sparks or
14:43 - something it's just going to look a bit
14:44 - difference so let's create a new
14:47 - material for this create U material and
14:50 - this is going to be our missile
14:54 - explosion um Sparks Flames flames
15:00 - uh so let's go under our Flames object
15:02 - under the renderer and let's drag our
15:04 - new material under
15:07 - that and we can now go in and edit this
15:10 - uh the color of this here
15:12 - so did that actually apply I don't think
15:16 - that applied correctly let's go down
15:19 - here okay so it's actually selected as
15:21 - the material here but I think our nested
15:23 - prefabs is messing with us there we go
15:25 - so now it looks correctly so we'll Nest
15:27 - those in a second
15:29 - um so I really like the look of that but
15:31 - we'll definitely have to adjust the
15:33 - color a bit here so I want to have
15:35 - something kind of red orange really
15:38 - really
15:39 - bright something like that I I think
15:43 - that looks really cool and then what we
15:45 - will do is we will have A1 gravity
15:49 - modifier so it goes flying up into the
15:52 - air and we will add definitely some size
15:56 - to these we'll have them be between to 5
15:59 - and
16:00 - 0.5 to make them a lot bigger we'll set
16:03 - the start lifetime between um random
16:07 - between two constants between let's do
16:11 - uh 0.5 and
16:12 - one and let's definitely also add some
16:15 - speed to these so the start Speed is
16:17 - going to between uh be between 10 and
16:22 - 25 and I really like the the way that uh
16:26 - this is going uh let's actually do 15
16:29 - and 25 and let's also set the emission
16:32 - up to 50 I want that to be a lot of
16:35 - flames and let's also bring up the size
16:38 - of these so let's bring up uh those up
16:40 - to 25 and 0.5 and we can maybe even make
16:45 - these a tiny bit bigger um but I I think
16:48 - we'll try this out and see how it goes
16:51 - that really gives this aggressive field
16:53 - to the explosion uh so we can drag those
16:55 - on that now and we can try and hit apply
16:58 - to this prefab here so if we hit
17:00 - simulate that looks cool and then we can
17:02 - remove the looping and we can remove the
17:05 - looping on the other one as well hit
17:07 - apply again and now uh remove that from
17:10 - the scene we can go back into our bullet
17:13 - script here and we just want to make
17:14 - sure that the effect that we instantiate
17:17 - has something like 5 seconds and not
17:19 - only 2 seconds because this effect might
17:21 - last last a little bit longer uh just in
17:24 - case you have a different effect than I
17:26 - do I think that the uh B there was just
17:29 - a bit too
17:31 - small uh
17:32 - so that's awesome and I believe that we
17:36 - have to select our missile now and hit
17:40 - or drag our missile explosion effect
17:42 - under the impact effect slot for that to
17:45 - be applied so now we can hit play and
17:47 - this will look cool but maybe a tiny bit
17:50 - uh empty here so I think the explosion
17:53 - itself is uh freaking cool but I
17:57 - definitely think uh that that we need
17:59 - some kind of flashing light in there
18:01 - just some kind of flash effect to make
18:03 - it feel like an explosion missile and
18:06 - also if we go under uh the missile
18:08 - explosion effect and select our Flames I
18:10 - want to go down and disable Collision
18:13 - there's really no reason to check for
18:15 - Collision when they're just flying up
18:17 - into the air anyways um so all of the
18:20 - other stuff seems fine now now let's
18:22 - drag this under our hierarchy and let's
18:25 - just add a quick Point light to this so
18:27 - let's go uh right click and then light
18:31 - Point light and I want the range of this
18:33 - to be something like I don't know 20 or
18:35 - 25 and the color to
18:39 - be a bit more orange
18:42 - here really orange actually and I want
18:45 - the intensity to be high something like
18:47 - three or four U maybe even four actually
18:50 - uh because this is a whole explosion
18:54 - thingy and I want to drag it up a bit
18:57 - there we go in relation to our Flames
18:59 - here and we can just see what that looks
19:01 - like I think that looks really cool and
19:03 - let's also add some hard Shadows to
19:05 - these um so that's not going to require
19:08 - too much rendering time but it does
19:10 - definitely add something to the scene
19:13 - especially have if you have more enemies
19:15 - in here and now we have basically two
19:17 - options either we could go in and create
19:19 - an animation that is going to quickly
19:21 - fade this out or we could create a
19:23 - script that does the same thing maybe
19:25 - that just disables it after a single
19:27 - frame or something I think we should
19:29 - just go ahead and create an animation
19:31 - that gives us a lot of control and it's
19:33 - really really easy so let's have this be
19:36 - light and let's go under animation here
19:39 - hit create and this is just going to be
19:41 - our explosion light animation and let's
19:46 - create a whole new folder for this so go
19:48 - new folder
19:51 - animation and let's go and save it under
19:54 - that and you can see now that it's
19:56 - created the light controller that
19:58 - controls what animation we are playing
20:01 - and explosion light which is our
20:03 - animation itself and on our light it has
20:06 - created an animator component that is
20:09 - the one that takes care of playing
20:12 - whatever the controller tells it um and
20:15 - actually going through the uh explosion
20:18 - animation so now we have this timeline
20:20 - here and I just want to add in um a tiny
20:25 - change in intensity so let's go forward
20:27 - something like I don't know like uh 0 uh
20:32 - 05 here and let's bring the intensity
20:35 - all the way down I don't think there's
20:37 - any reason to go more technical with
20:40 - this and you can see just how quick of
20:42 - an effect that is and that is basically
20:45 - all I want to do however I want to
20:47 - select our explosion light and disable
20:49 - Loop time so it won't just stand there
20:51 - in Loop and look like a muscle flash it
20:54 - will just disappear once it's gone
20:56 - through a single time and we can also
20:58 - see on the the light here that uh if we
21:00 - double click that to open it up in the
21:02 - animator this is orange which means that
21:04 - it's the default animation State and so
21:06 - it will be played right when the object
21:08 - gets spawned in so now we can hit apply
21:11 - on the missile launcher explosion effect
21:14 - remove it from the scene and we should
21:16 - be able to hit uh play and see this in
21:20 - action so I think that gives a really
21:23 - really cool effect I think we added the
21:26 - range which is great so we have the
21:28 - functionality in place we have a cool
21:30 - looking particle and we even have a
21:32 - light in there so that is basically all
21:35 - I wanted to do uh for this video you can
21:37 - of course tweak this in any way that you
21:39 - want to and uh yeah thanks for watching
21:41 - I hope you enjoyed it and without
21:42 - further Ado I will see you in the next
21:44 - one thank you so much to all the awesome
21:46 - patreon supporters who donated in August
21:48 - and a special thanks to Aon meta Robert
21:50 - Ro scal Hound vix and P and Andrew k
21:58 - I

Cleaned transcript:

this video is brought to you by Aron meta I'm really sorry if I butchered your name thank you so much for donating if you want to support breis yourself you can go to patreon.com Brees thanks for tuning in at braies hello everyone and welcome to this video on creating a tower defense game in unity today we are going to be doing some explosions we are going to be editing our missile by adding a texture to it we are going to be creating a cool particle effect when it hits something and also we'll be editing the bullet script uh to allow for damaging enemies in a radius instead of just hitting the target so a really exciting video today and let's just jump right into it so you can see that I'm here in unity and what I want to begin with is finding uh our input ports folder and then our missile launcher if you haven't watched the previous video where we imported the missile launcher I definitely recommend that you go ahead and do that now or you could just use your own model for a missile of course but this missile here that you can see I have in the scene um is of that missile launcher model so you will have to import that at least cool so uh we basically want to set this up with a new material it currently has the default one so let's right click under the missile launcher materials folder to create a new one and let's call this one missile let's then drag it on top of the model and let's uh select our missile launcher texture and drag that into the albo channel let's bump up the metallic and bring down the smoothness to make it fit with the rest of our scene and basically I want to use this as our Graphics object but not as our root object and the reason why is that if we current select it and make sure we are set to Pivot and local up here you can see that our blue arrow meaning our forward axis which is our Z positive Z points upwards and not forward when it comes in relation to our missile so basically we want to rotate our missile so that it it points in the same direction as our Z so that when we chase a Target it will look the correct way and the Really the easiest way to do this is just rename this to something like Graphics create an empty object that we reset the transform on and let's uh call this one missile missile there we go let's take our Graphics object drag it on the missile let's reset the Transformer on that and let's just drag it up here so we can see what's going on and you will notice it has disappeared but really it's just really really tiny so we'll just select our Graphics here and set the scale to 100 by 100 by 100 and that will bring it right back and then what we can do is we can actually just rotate it on uh 90Â° around the Y AIS and now when we select our missile you can see that the zaxis and our missile points in the same direction so now we can hit an uh hit add component and then add the bullet component let's select the speed of something like 30 I want to give the impression that this missile actually has some mass and therefore moves a bit slower towards the Target and we'll also get this cool like meat seeding uh meat seeding seeking heat seeking missile effect um that that looks kind of impressive and then as the impact effect we'll create one ourselves in a second but let's just use the bullet impact effect uh for now so now we can take this missile drag it down under the prefabs folder to make it a prefab let's remove remve it from the scene and then let's select our missile launcher and drag our missile under the bullet prefab to replace the bullet with the missile there we go so now we should be able to actually test this out and I'm just going to do that really quickly by placing the turret down there and you can see I just paused it here it's just launched the missile if we take a look at the missile in the scene it's definitely not pointing towards our enemy and why is that because it's pointing in the right direction here as we can see that is because we actually haven't added this functionality yet so if we go ahead and take a look at our missile and then the bullet script and double click that to open it up in Visual Studio we currently don't do any uh rotation on the object at all so let's go ahead and do this and it's really easy we want to do this in the update Loop because we do want to do it every frame and we want to do it right beneath the line where we move the actual missile that means transform translate what we want to put here is just transform. look at so it will look at whatever Target and of course we will just use our Target variable that is the transform up here that we set using um or that we set from the actual missile launcher so the missile launcher points towards something and it fires the bullet in our case a missile and it says your target is this enemy and it will fly towards that and now Point towards that and if you hear some noise in the background that is just my cat's being uh naughty but um I will try and continue here um so the next thing that we want to do uh let's just see this working actually let's just see this in effect here so you can see that our missile now correctly chases our enemy so that's cool the next thing that we want to do is damage the player or the uh enemies in a radius so if we go in here under our bullet script again you can see that currently if we get within um or if we hit the target here we call a function called Hit Target and all that does is instantiate some kind of effect and then uh destroy the target game object and destroy the bullet all I want to do is I want to go up here and add a new variable and this is going to be a public float with a range or radius I think I'm going to call this the explosion radius and I'm going to default this to zero and this way down here we can simply add in an if statement that that says if explosion radius is greater than zero well then we want something extraordinary to happen then we want to damage uh people in a radius people our enemies and uh if not then we can just go ahead and hit this single Target and I think the way that we do this is instead of just destroying the target object or we'll still be doing that but let's wrap that in a function because we might do uh several things I definitely want to have some particles whenever our enemies die because right now it's just um our hit particle and not any kind of death effect and that looks kind of empty and I also want some way of keeping track of the health of our enemies uh so that is to come but for now we'll just have a a void damage here and it's going to damage a transform and we'll just call that enemy and then we can simply put this Destroyer statement down here so instead of destroying the target up here we're going to destroy enemy. game object here and then what we can do is we can say if explosion radius is greater than zero then we want to damage several enemies and we'll uh actually want to explode and we'll add that function in in a second if not then we want to damage uh the the Target only the target there we go and no ma matter what we want to destroy ourselves at the end so that should actually be it and now we can create the actual explode function here so we'll have a void explode and the way that we're going to do this is we are going to use physics dot um I believe it is overlap sphere and this is just going to shoot out a sphere and check for all of the colliders that is hit by that sphere that overlaps with that sphere or inside of that sphere and it's going to do that from a position and in a radius so our radius here is our explosion radius and we can use this to get an array which is basically just a list of items a fixed uh a list of items with a fixed uh range fixed range fixed length um so we can get an array of all of the colliders that are in that sphere so collider array and we'll call this one our uh colliders or something like hit objects or something like that and the reason why I'm not calling this enemies is because we might also have hit some objects that aren't our enemies and what you can really do here we don't want position there we want transform. position transform up position is that you can add a layer mask to uh filter out anything but enemies that are on a particular layer maybe called the enemy layer or something like that or we could just use the fact that all of our enemies if we go under our prefabs here and select our enemy all of our enemies are tagged as enemies so now we Loop through uh this list here so for each collider uh collider in colliders here for each thing that we have hid we want to see if that collider if the collider that we've hid do tag is equal to enemy so if it the the thing that we hit here is taged as an enemy then we can go ahead and damage it so then we can call damage on collider do transform there we go so now we will uh shoot out a sphere as an explosion we'll see what it hits we'll Loop through all of the things that it hit and check if they are indeed an enemy and if they are we will damage them which basically now just means destroy them cool so that is basically all the logic that we are going to need so now if we hit play here and it's not going to be visible with the first enemy of course only the second one when we have multiple enemies in here so I'm just going to wait a second here and actually I just uh reminded myself that we haven't changed uh the range of our missile launcher so we have to select our missile launcher actually we have to select our missile and we have to add an explosion radius and you will notice that currently we don't have any way of viewing this radius so as we did with our turret when we added a range I suggest that we go down here and go void on draw gizmos selected and we add in gizmos do draw wire sphere from our current position transform. position in explosion radius and that we make this um red or something so gizmos color equals color. red there we go so that will just make it very clear to the user when setting things in the inspector here how big a radius the uh missile actually will explode in and this is quite a big radius we might have to bring it down to something like seven or uh let's just do eight that might hit something like at least two or three enemies um so let's apply that let's go and hit play and now we should see that if we wait for the first one here to pass by and put a turret for this second wave here we should see that they both explode because they were in that radius and none of the environment or anything that gets removed and uh the one that was down here didn't get hit so you can see that this always hits uh two and sometimes if you're lucky hits three enemies which think is is quite good for balance but you can of course mess around with this especially when we get the actual damage parameters in there that we can tweak cool so now let's add an awesome effect so now is for the particle play time that should be a whole whole thing we should have like a jingle that goes particle play time okay maybe for the next video so let's go and hit create particle system and let's re said actually I don't want to begin with a whole fresh particle system let's use our bullet impact effect as a base here so let's duplicate the prefab call this one the explosion effect uh maybe we should do missile explosion effect to be more clear about what this is let's drag it in uh and now we can see that this is kind of boring let's first of all Loop this while we're playing around with it and set the duration to something like three so that looks pretty good there and my is joining in again say hi hi so I'll just put him down so um what we can then go is we can go under shape here and maybe just bring up the size of this radius a bit because we are do want our explosion to be kind of large and dramatic and then we can go under emission and definitely bump this up I think we should go to something like 30 and my idea with this is that we add a bunch of debris that goes flying and that falls on the um on the ground and then we add a separate particle system that is kind of our fire spikes thing which is also Cubes but that actually has a negative gravity so they go flying in the air I think that's going to look fairly cool so let's just have this be at something like 30 and uh the start size and all that actually is pretty good but I definitely want to bump up the speed so let's go between 10 and maybe 15 and maybe between five and 15 but I definitely want them to go flying I actually think that this this looks pretty good and then I want to go down on the renderer and I want to disable uh receive shadows and cast Shadows I don't think there's any reason for them to actually do that um not when we have this many in the scene especially because we're going to be adding a cool light in a moment that you will see what uh what does and um yeah I kind of like that so let's use that as a base to work off of and uh let's now duplicate this and we can maybe we can take the second one and drag it under as a child and this is going to be our Flames or Sparks or something it's just going to look a bit difference so let's create a new material for this create U material and this is going to be our missile explosion um Sparks Flames flames uh so let's go under our Flames object under the renderer and let's drag our new material under that and we can now go in and edit this uh the color of this here so did that actually apply I don't think that applied correctly let's go down here okay so it's actually selected as the material here but I think our nested prefabs is messing with us there we go so now it looks correctly so we'll Nest those in a second um so I really like the look of that but we'll definitely have to adjust the color a bit here so I want to have something kind of red orange really really bright something like that I I think that looks really cool and then what we will do is we will have A1 gravity modifier so it goes flying up into the air and we will add definitely some size to these we'll have them be between to 5 and 0.5 to make them a lot bigger we'll set the start lifetime between um random between two constants between let's do uh 0.5 and one and let's definitely also add some speed to these so the start Speed is going to between uh be between 10 and 25 and I really like the the way that uh this is going uh let's actually do 15 and 25 and let's also set the emission up to 50 I want that to be a lot of flames and let's also bring up the size of these so let's bring up uh those up to 25 and 0.5 and we can maybe even make these a tiny bit bigger um but I I think we'll try this out and see how it goes that really gives this aggressive field to the explosion uh so we can drag those on that now and we can try and hit apply to this prefab here so if we hit simulate that looks cool and then we can remove the looping and we can remove the looping on the other one as well hit apply again and now uh remove that from the scene we can go back into our bullet script here and we just want to make sure that the effect that we instantiate has something like 5 seconds and not only 2 seconds because this effect might last last a little bit longer uh just in case you have a different effect than I do I think that the uh B there was just a bit too small uh so that's awesome and I believe that we have to select our missile now and hit or drag our missile explosion effect under the impact effect slot for that to be applied so now we can hit play and this will look cool but maybe a tiny bit uh empty here so I think the explosion itself is uh freaking cool but I definitely think uh that that we need some kind of flashing light in there just some kind of flash effect to make it feel like an explosion missile and also if we go under uh the missile explosion effect and select our Flames I want to go down and disable Collision there's really no reason to check for Collision when they're just flying up into the air anyways um so all of the other stuff seems fine now now let's drag this under our hierarchy and let's just add a quick Point light to this so let's go uh right click and then light Point light and I want the range of this to be something like I don't know 20 or 25 and the color to be a bit more orange here really orange actually and I want the intensity to be high something like three or four U maybe even four actually uh because this is a whole explosion thingy and I want to drag it up a bit there we go in relation to our Flames here and we can just see what that looks like I think that looks really cool and let's also add some hard Shadows to these um so that's not going to require too much rendering time but it does definitely add something to the scene especially have if you have more enemies in here and now we have basically two options either we could go in and create an animation that is going to quickly fade this out or we could create a script that does the same thing maybe that just disables it after a single frame or something I think we should just go ahead and create an animation that gives us a lot of control and it's really really easy so let's have this be light and let's go under animation here hit create and this is just going to be our explosion light animation and let's create a whole new folder for this so go new folder animation and let's go and save it under that and you can see now that it's created the light controller that controls what animation we are playing and explosion light which is our animation itself and on our light it has created an animator component that is the one that takes care of playing whatever the controller tells it um and actually going through the uh explosion animation so now we have this timeline here and I just want to add in um a tiny change in intensity so let's go forward something like I don't know like uh 0 uh 05 here and let's bring the intensity all the way down I don't think there's any reason to go more technical with this and you can see just how quick of an effect that is and that is basically all I want to do however I want to select our explosion light and disable Loop time so it won't just stand there in Loop and look like a muscle flash it will just disappear once it's gone through a single time and we can also see on the the light here that uh if we double click that to open it up in the animator this is orange which means that it's the default animation State and so it will be played right when the object gets spawned in so now we can hit apply on the missile launcher explosion effect remove it from the scene and we should be able to hit uh play and see this in action so I think that gives a really really cool effect I think we added the range which is great so we have the functionality in place we have a cool looking particle and we even have a light in there so that is basically all I wanted to do uh for this video you can of course tweak this in any way that you want to and uh yeah thanks for watching I hope you enjoyed it and without further Ado I will see you in the next one thank you so much to all the awesome patreon supporters who donated in August and a special thanks to Aon meta Robert Ro scal Hound vix and P and Andrew k I
