With timestamps:

00:00 - after we're making a game you need your
00:01 - characters to interact with things
00:03 - around them sometimes they need to pick
00:05 - up objects sometimes they need to aim in
00:08 - the right direction and sometimes they
00:09 - just need to place their hands and feet
00:11 - correctly on the environment this used
00:13 - to be a pretty complicated task but
00:15 - luckily unity has added a feature called
00:17 - animation rigging that makes it so much
00:19 - easier it's currently in preview but
00:22 - most of the big features have already
00:23 - been implemented but Before we jump into
00:25 - unity and start using it let's have a
00:27 - look at how animation rigging works also
00:29 - this video is sponsored by unity so
00:32 - normally when we have an animated
00:33 - character in unity it consists of a few
00:35 - things a base object with an animated
00:38 - component this controls what animations
00:40 - to play as a child of this object is the
00:43 - mesh itself this normally has a skinned
00:45 - mesh renderer component and is
00:47 - responsible for rendering the character
00:48 - itself and finally we have the character
00:51 - skeleton often called the rig this is a
00:53 - hierarchy of game objects that make up
00:55 - the individual bones of our character
00:57 - for example this character has a pelvis
00:59 - bone that leads to the spine that leads
01:01 - to the thighs that leads to the calf and
01:03 - then the foot so character animation
01:05 - basically works in three steps the
01:08 - character plays on animation determined
01:09 - by the animator the bones are then moved
01:11 - around by that animation and the mesh of
01:14 - the character then shapes itself to
01:15 - follow the bones using the skin mesh
01:17 - renderer but what if we don't know
01:18 - beforehand exactly where we want
01:20 - opponents to go animations are fixed so
01:23 - they don't always fit perfectly with the
01:24 - interactive parts of our game say for
01:26 - example we want a character to look
01:28 - towards the player well in this case we
01:30 - need to change the rotation of the head
01:31 - while the game is running depending on
01:33 - the position of the player but we can't
01:35 - do that if an animation is already
01:37 - controlling our head bone this is where
01:39 - animation rigging comes in with
01:41 - animation rigging we basically create an
01:43 - extra rig on top of the original one
01:45 - that then overrides part of that
01:47 - animation think of this like a much
01:49 - simpler rig which only has two controls
01:51 - that we need in this case we would
01:53 - create a rig with the multi aim
01:55 - constraint this component would
01:56 - reference the bone that we want to
01:57 - control in this case the head bone as
02:00 - well as a new object that we create to
02:01 - act as the target when we then play we
02:03 - can see that our original animation
02:05 - plays just fine but our head rotation is
02:07 - being controlled by the new rig this
02:09 - allows us to do many things just using
02:11 - different kinds of constraints it
02:13 - when it comes to the character
02:14 - interacting with objects so with that
02:17 - explanation let's jump into unity and
02:19 - try it out some community and as you can
02:21 - see I'm using version 20 28.1 animation
02:24 - rigging will also work with 20193 but
02:26 - unity have added some nice convenience
02:28 - features to make setup easier in the new
02:30 - version and the first thing that we
02:31 - wanted to do is go ahead and install the
02:33 - animation rigging package but it's
02:35 - currently in preview so first we have to
02:37 - make sure to enable preview packages to
02:39 - do this we go under edit go to the
02:41 - project settings go under package
02:43 - manager and make sure to check enable
02:45 - preview packages with that we can simply
02:48 - open up the package manager window so I
02:49 - go window package manager here at the
02:52 - top we'll make sure to show all packages
02:54 - and now we can just search for animation
02:57 - and here is the animation rigging
02:59 - package let's simply select that and
03:01 - install it and that's it the package is
03:06 - now ready to be used now as you can see
03:08 - I've gone ahead and set up this very
03:10 - simple example scene with just a camera
03:12 - ground and a character and with all the
03:15 - talk of bones I thought that nothing
03:18 - would be more appropriate than an actual
03:20 - skeleton the skeleton character here is
03:22 - freely available on the asset store will
03:24 - of course have a link for that in the
03:25 - description now this character has an
03:27 - animator here that if we hit play
03:30 - just place the idle animation over and
03:32 - over we can see that inside of the
03:35 - animator window but remember we could be
03:37 - playing any kind of animation and we can
03:39 - easily switch between them while
03:41 - overriding some of this movement but
03:43 - we'll see that later now the first thing
03:45 - that I recommend you do is setup
03:46 - animation rigging to show some of the
03:48 - bones that are making up our character
03:50 - and we can actually do this really
03:52 - easily by simply selecting our character
03:54 - going animation rigging and selecting
03:56 - bone renderer setup as you can see this
03:58 - adds a component that references all of
04:01 - the transforms that make up our rig this
04:03 - is a rig here and these are all the
04:04 - different bones inside of that rig and
04:07 - as you can see they're all reference
04:08 - here and it simply displays them inside
04:11 - of the scene view we can go ahead and
04:13 - change the size of the bones the color
04:15 - and the shape but for now the default
04:17 - settings are going to do just fine and
04:19 - this is not only going to show the bones
04:21 - it's also going to allow us to select
04:23 - them using our mouse which is just
04:25 - really handy
04:27 - now the second thing that we're gonna do
04:28 - is create a rig remember animation
04:30 - rigging works by creating an extra rig
04:33 - on top of our original one that is going
04:35 - to modify our movement to do that again
04:37 - we just select our character we go
04:39 - animation rigging and hit rig setup and
04:42 - as you can see that creates another
04:44 - component this is the rig builder which
04:46 - now has a rig layer called rig one and
04:49 - if we click that we can see that this is
04:52 - an object that is now under our
04:54 - character called rig one with a simple
04:56 - rig component so this is where we're
04:59 - going to be building our rig in other
05:01 - words we are going to be adding
05:02 - constraints under this object if example
05:05 - we wanted the head of our character to
05:07 - be constantly looking at a target we
05:10 - could go ahead and add a multi aim
05:12 - constraint so I'm gonna right click on
05:14 - this object here and create a new empty
05:16 - object under it I'm gonna rename this
05:18 - object to head aim and I'm gonna go
05:20 - ahead and add a component here go into
05:23 - animation rigging and here we can see
05:24 - all the different constraints I'm gonna
05:26 - select multi aim constraint now here we
05:29 - need to fill out a few things the first
05:31 - one is the constraint object this is
05:34 - what we want our constrain to apply to
05:35 - in our case that's the head since we
05:38 - want to be controlling the head with
05:40 - this component so I'm gonna go under our
05:42 - skeleton here and I'm gonna go ahead and
05:44 - find the head and drag that in then we
05:47 - have the aim axis in our case that is
05:50 - going to be the y-axis and finally we
05:53 - have the source objects in other words
05:55 - the target that we're going to be aiming
05:57 - towards you can create multiple targets
06:00 - here and blend between them for now I'm
06:01 - just gonna go ahead and create one
06:03 - target so let's go under our hit aim
06:05 - here
06:06 - that's right click and create a new
06:07 - object let's again rename this object
06:10 - I'm gonna call it target and instead of
06:13 - having this just be invisible inside of
06:15 - the editor let's go ahead and add a
06:18 - gizmo so we can do that down here in the
06:20 - right hand corner we can hit the plus
06:21 - sign and this allows us to choose an
06:24 - effector gizmo so first under the shape
06:26 - here we can search for effector and as
06:29 - you can see there are some different
06:30 - ones there's a ball a cube a circle a
06:34 - locator and a square I'm gonna choose
06:36 - the ball effector for this one I'm also
06:38 - going to set the size to something like
06:40 - point two and now we can clearly see the
06:43 - target then we can go back to our head
06:45 - aim and simply assign this target as a
06:49 - source object and it should actually
06:51 - work now but under these settings we
06:53 - have the possibility to limit how much
06:56 - our head can rotate which is probably
06:58 - something we want to do because there is
07:00 - after all a limit to how far we can
07:02 - stretch our neck it might not apply to
07:04 - this skirt and guy right here but it's
07:06 - probably still going to look better if
07:08 - we added so under the minimum limit here
07:10 - I'm gonna put in minus 100 and as the
07:13 - maximum limit I'm gonna put in 100 so
07:16 - now we can only rotate 100 degrees in
07:18 - either direction and that's it if we now
07:21 - go ahead and play we can see that our
07:23 - head immediately snaps to look at the
07:25 - target and if I now change this target
07:28 - around as you can see our head just
07:31 - follows awesome and we could of course
07:34 - put this target anywhere we'd like we
07:36 - can have it follow around a player
07:38 - character we could place it if something
07:40 - important is happening say an explosion
07:42 - happens over here we probably want the
07:44 - characters to notice we can do so much
07:47 - with this stuff and as you can see it
07:49 - works perfectly as long as we don't get
07:51 - too far behind the character next really
07:54 - aren't made to stretch this far and it
07:56 - does lead to some weird behavior so for
07:58 - this I would recommend adding some kind
08:00 - of script that reduces this effect if
08:01 - the target gets behind the character
08:03 - look at the under the rig here there is
08:06 - a weight this allows us to control how
08:08 - much this constraint should influence
08:10 - our character so if I go ahead and dial
08:12 - that down we can see that our head is no
08:15 - longer being influenced by the weight so
08:17 - what you could do is simply reduce this
08:19 - using a bit of code if the target gets
08:22 - too far behind the character so weights
08:24 - make it really easy to control when to
08:26 - apply constraints and we can actually
08:28 - control the weight of individual source
08:30 - objects as well if we select the head
08:32 - aim there is a weight slider here under
08:35 - the source objects also right now for
08:37 - example it looks a bit weird because
08:39 - only the head of our character is
08:41 - rotating normally humanoid characters
08:43 - will rotate a bit of their chest and
08:45 - arms as well so let's quickly add that
08:48 - using the weight slider to do this we
08:50 - can simply select our head aim and
08:51 - duplicate it so I'm gonna press control
08:53 - D
08:54 - we can then rename this to chest aim and
08:56 - instead of having a separate target for
08:59 - this that's delete that let's take our
09:01 - target here and move it outside of these
09:03 - two so it's a separate object and let's
09:05 - also assign that to our chest so now
09:07 - both are heading and chest aim are using
09:10 - the same target and what we can simply
09:12 - do is go into our chest aim and reduce
09:14 - the weight so I'm gonna put that down to
09:17 - something like point three and instead
09:19 - of constraining the head here let's go
09:22 - ahead and constrain the spine so I'm
09:24 - going to take the spine one and drag
09:26 - that in instead so now we have two multi
09:28 - aim constraints affecting two different
09:30 - parts of the body with eight different
09:32 - weight and that means that if we play
09:34 - and move around our target we can see
09:37 - that our entire body is now rotating a
09:40 - bit towards that target which makes the
09:42 - movement seem a lot more natural awesome
09:45 - and remember how I talked about that we
09:47 - could apply any kind of animation well
09:49 - if I go in to the animator now on this
09:51 - character and change to a walk animation
09:54 - it just works really cool now there of
09:58 - course many more constraints that we can
09:59 - apply to achieve different results one
10:02 - that I use a lot is the two bone I
10:04 - constrict
10:05 - this will allow us to have the arms and
10:07 - legs of our character probably bend to
10:10 - follow a target so you can just imagine
10:11 - how useful that is let's try to set up
10:14 - one for the right arm and we could of
10:16 - course add this inside of the same rig
10:18 - but since we're affecting a completely
10:20 - different part of the body let's go
10:22 - ahead and create a separate one so we'll
10:24 - select our character look under
10:25 - animation rigging and let's again press
10:28 - rig setup as you can see this adds a not
10:30 - the rig layer to our rig builder and
10:32 - again and not the object and maybe we
10:35 - could rename these two to something
10:36 - other than rig one and two let's have
10:38 - the first one be head rig and the second
10:41 - one be arm rig then inside of the arm
10:44 - rig we can right-click and create an
10:46 - empty object let's rename this one to
10:48 - arm mover let's set a component corner
10:52 - animation rigging and select lead to
10:54 - bone ika constraint now as you can see
10:56 - this text in three bones instead of just
10:58 - one that's because it will apply some
11:00 - natural movement so natural bending of
11:02 - the bones as long as we have three bones
11:05 - in sequence so in our case we need the
11:07 - route mid
11:07 - tip to be the bones that make up our arm
11:10 - let's go under our spine here under the
11:12 - neck let's find our left arm here we
11:15 - have the upper arm
11:15 - then the forearm and then the hand so
11:17 - let's start with the hand here and
11:19 - assign that to the tip we're going to
11:21 - assign the forearm to the mid and the
11:23 - upper arm to the root of course we also
11:25 - need a source object as you can see the
11:28 - target is currently none so let's go
11:30 - under our arm rig and arm mover here
11:32 - let's right click and create another
11:34 - empty object let's rename this one to
11:36 - target and as you can see our target is
11:39 - currently placed down here instead we
11:42 - want this to be placed on the hand
11:43 - because we are going to be moving around
11:45 - our hand and arm with this object so to
11:48 - snap it to our hand we can simply select
11:50 - the target then hold down control and
11:52 - select the hand then go under animation
11:54 - rigging and hit a line transform and as
11:57 - you can see the target immediately snaps
11:59 - to our hand we also want to display this
12:02 - with a gizmo so let's go to the bottom
12:04 - right corner and hit plus again we can
12:06 - choose an effector shape I'm going to
12:07 - search for effector I'm gonna choose the
12:09 - square root vector I'm gonna set the
12:11 - size of this to something like point
12:13 - three and there we go we now have a
12:15 - square here that we can select and move
12:17 - around and finally let's go to the arm
12:19 - mover and assign this target and that's
12:21 - it if we now hit play we can see that
12:24 - while our character is playing an
12:26 - animation our hand is now remaining in
12:29 - place and that means that we can
12:31 - actually select this target object here
12:33 - and move around our hand even rotate it
12:36 - in any way that we'd like and our arm
12:38 - will appropriately follow really really
12:42 - cool and a cool tip is actually to move
12:44 - the target while the game is running to
12:46 - somewhere you think looks cool like here
12:49 - and then just copying the placement by
12:51 - right-clicking on the transform and
12:53 - selecting copy weld placement we can
12:56 - then stop playing and go to the target
12:58 - right click on the transform and hit
13:00 - paste world placement so if we hit play
13:03 - indeed the arm goes right up and we can
13:06 - use this for all kinds of things like
13:07 - placing the hands correctly when holding
13:09 - a weapon now in our case this is what we
13:12 - want but sometimes we don't want the
13:14 - hand to snap to the target sometimes we
13:16 - want to just keep that offset and in
13:18 - that case we can go under the arm mover
13:20 - go
13:21 - settings and under maintain target
13:23 - offset we can choose whether to do that
13:25 - on position rotation or both just
13:28 - something that's good to know there and
13:29 - again we can adjust this using the
13:31 - weight slider imagine for example that
13:33 - all the skeletons are gathering and they
13:36 - want to check if everyone is present
13:37 - John are you there of course you can
13:41 - change the weight and position through
13:43 - script you can change it through the
13:45 - animation window and everything even
13:48 - works with timeline now as well so you
13:50 - can just imagine the possibilities and
13:52 - the good thing is that animation rigging
13:54 - runs on jobs so it's very performant one
13:58 - thing to note is that because it runs on
13:59 - jobs
14:00 - you shouldn't reassign targets while the
14:02 - game is running so if you need to change
14:04 - between following different objects I
14:06 - would recommend creating a script that
14:08 - just moves the target to the right
14:10 - object and of course from here it's up
14:12 - to you to start playing around with
14:13 - adding different constraints as you can
14:16 - see there are a lot to choose from
14:17 - luckily they're all really well
14:20 - documented
14:20 - well of course have a link to where you
14:21 - can learn more about them in the
14:23 - description another thing that is good
14:24 - to know is that multiple constraints
14:26 - within a single rig applied based on
14:29 - their order in the hierarchy so if
14:30 - you're working with multiple constraints
14:32 - in one rig the top one will be applied
14:34 - first in our case here that's the
14:36 - heading and then the chess team gets
14:38 - applied the order of the rigs however
14:40 - are based on the order of the rig layers
14:43 - in the rig builder so under a rig
14:45 - builder component in our character here
14:47 - we can change the order of individual
14:49 - rigs and if you need some good examples
14:51 - on how to use some of these constraints
14:53 - you can simply go to the package in the
14:55 - package manager and here we can look
14:57 - under samples let's import these and
14:59 - this will create a unity folder here
15:02 - with some constrained samples and if we
15:04 - open up the scenes folder we can see
15:07 - that there are lots of examples for the
15:08 - different ones of course if you're using
15:10 - Europe Eli key you might have to update
15:12 - some of the materials we can do that by
15:14 - going edit render pipeline Universal
15:16 - render pipeline upgrade project
15:18 - materials to universal and hit proceed
15:20 - and then everything should show up and
15:22 - as you can see here's an example of two
15:24 - bonide k one of the multi aim one for
15:27 - blending one for I K on an entire chain
15:30 - of bones one for parenting if you want
15:32 - to have objects follow your
15:34 - and the list pretty much goes on as you
15:37 - can see it can get pretty crazy awesome
15:39 - and that's pretty much it for this video
15:41 - if you enjoyed it make sure to subscribe
15:42 - and ring the notification bells so don't
15:44 - miss the next one well of course that
15:46 - links to where you can learn more about
15:47 - animation rigging in the description
15:48 - including a TDC talk on some more
15:50 - advanced use cases on that thanks for
15:53 - watching and I will see you in the next
15:54 - video thanks to all the awesome patreon
15:56 - supporters who donated in May and
15:58 - especially thanks to face Samara fire
15:59 - lost to violence locked forever replica
16:01 - studios na'vi ninja SOT Mike Jason
16:04 - Narita SKU
16:05 - Luna set piano satin black Donna team
16:07 - Cascone 10 - Sam Jacob Sanford no he was
16:10 - sake mug and 20 rod Gregory Pierce
16:12 - Michael Cobb of the mighty Zeus Owen
16:14 - Cooper as in the Pierce Erasmus and
16:16 - serious mode you guys Rock

Cleaned transcript:

after we're making a game you need your characters to interact with things around them sometimes they need to pick up objects sometimes they need to aim in the right direction and sometimes they just need to place their hands and feet correctly on the environment this used to be a pretty complicated task but luckily unity has added a feature called animation rigging that makes it so much easier it's currently in preview but most of the big features have already been implemented but Before we jump into unity and start using it let's have a look at how animation rigging works also this video is sponsored by unity so normally when we have an animated character in unity it consists of a few things a base object with an animated component this controls what animations to play as a child of this object is the mesh itself this normally has a skinned mesh renderer component and is responsible for rendering the character itself and finally we have the character skeleton often called the rig this is a hierarchy of game objects that make up the individual bones of our character for example this character has a pelvis bone that leads to the spine that leads to the thighs that leads to the calf and then the foot so character animation basically works in three steps the character plays on animation determined by the animator the bones are then moved around by that animation and the mesh of the character then shapes itself to follow the bones using the skin mesh renderer but what if we don't know beforehand exactly where we want opponents to go animations are fixed so they don't always fit perfectly with the interactive parts of our game say for example we want a character to look towards the player well in this case we need to change the rotation of the head while the game is running depending on the position of the player but we can't do that if an animation is already controlling our head bone this is where animation rigging comes in with animation rigging we basically create an extra rig on top of the original one that then overrides part of that animation think of this like a much simpler rig which only has two controls that we need in this case we would create a rig with the multi aim constraint this component would reference the bone that we want to control in this case the head bone as well as a new object that we create to act as the target when we then play we can see that our original animation plays just fine but our head rotation is being controlled by the new rig this allows us to do many things just using different kinds of constraints it when it comes to the character interacting with objects so with that explanation let's jump into unity and try it out some community and as you can see I'm using version 20 28.1 animation rigging will also work with 20193 but unity have added some nice convenience features to make setup easier in the new version and the first thing that we wanted to do is go ahead and install the animation rigging package but it's currently in preview so first we have to make sure to enable preview packages to do this we go under edit go to the project settings go under package manager and make sure to check enable preview packages with that we can simply open up the package manager window so I go window package manager here at the top we'll make sure to show all packages and now we can just search for animation and here is the animation rigging package let's simply select that and install it and that's it the package is now ready to be used now as you can see I've gone ahead and set up this very simple example scene with just a camera ground and a character and with all the talk of bones I thought that nothing would be more appropriate than an actual skeleton the skeleton character here is freely available on the asset store will of course have a link for that in the description now this character has an animator here that if we hit play just place the idle animation over and over we can see that inside of the animator window but remember we could be playing any kind of animation and we can easily switch between them while overriding some of this movement but we'll see that later now the first thing that I recommend you do is setup animation rigging to show some of the bones that are making up our character and we can actually do this really easily by simply selecting our character going animation rigging and selecting bone renderer setup as you can see this adds a component that references all of the transforms that make up our rig this is a rig here and these are all the different bones inside of that rig and as you can see they're all reference here and it simply displays them inside of the scene view we can go ahead and change the size of the bones the color and the shape but for now the default settings are going to do just fine and this is not only going to show the bones it's also going to allow us to select them using our mouse which is just really handy now the second thing that we're gonna do is create a rig remember animation rigging works by creating an extra rig on top of our original one that is going to modify our movement to do that again we just select our character we go animation rigging and hit rig setup and as you can see that creates another component this is the rig builder which now has a rig layer called rig one and if we click that we can see that this is an object that is now under our character called rig one with a simple rig component so this is where we're going to be building our rig in other words we are going to be adding constraints under this object if example we wanted the head of our character to be constantly looking at a target we could go ahead and add a multi aim constraint so I'm gonna right click on this object here and create a new empty object under it I'm gonna rename this object to head aim and I'm gonna go ahead and add a component here go into animation rigging and here we can see all the different constraints I'm gonna select multi aim constraint now here we need to fill out a few things the first one is the constraint object this is what we want our constrain to apply to in our case that's the head since we want to be controlling the head with this component so I'm gonna go under our skeleton here and I'm gonna go ahead and find the head and drag that in then we have the aim axis in our case that is going to be the yaxis and finally we have the source objects in other words the target that we're going to be aiming towards you can create multiple targets here and blend between them for now I'm just gonna go ahead and create one target so let's go under our hit aim here that's right click and create a new object let's again rename this object I'm gonna call it target and instead of having this just be invisible inside of the editor let's go ahead and add a gizmo so we can do that down here in the right hand corner we can hit the plus sign and this allows us to choose an effector gizmo so first under the shape here we can search for effector and as you can see there are some different ones there's a ball a cube a circle a locator and a square I'm gonna choose the ball effector for this one I'm also going to set the size to something like point two and now we can clearly see the target then we can go back to our head aim and simply assign this target as a source object and it should actually work now but under these settings we have the possibility to limit how much our head can rotate which is probably something we want to do because there is after all a limit to how far we can stretch our neck it might not apply to this skirt and guy right here but it's probably still going to look better if we added so under the minimum limit here I'm gonna put in minus 100 and as the maximum limit I'm gonna put in 100 so now we can only rotate 100 degrees in either direction and that's it if we now go ahead and play we can see that our head immediately snaps to look at the target and if I now change this target around as you can see our head just follows awesome and we could of course put this target anywhere we'd like we can have it follow around a player character we could place it if something important is happening say an explosion happens over here we probably want the characters to notice we can do so much with this stuff and as you can see it works perfectly as long as we don't get too far behind the character next really aren't made to stretch this far and it does lead to some weird behavior so for this I would recommend adding some kind of script that reduces this effect if the target gets behind the character look at the under the rig here there is a weight this allows us to control how much this constraint should influence our character so if I go ahead and dial that down we can see that our head is no longer being influenced by the weight so what you could do is simply reduce this using a bit of code if the target gets too far behind the character so weights make it really easy to control when to apply constraints and we can actually control the weight of individual source objects as well if we select the head aim there is a weight slider here under the source objects also right now for example it looks a bit weird because only the head of our character is rotating normally humanoid characters will rotate a bit of their chest and arms as well so let's quickly add that using the weight slider to do this we can simply select our head aim and duplicate it so I'm gonna press control D we can then rename this to chest aim and instead of having a separate target for this that's delete that let's take our target here and move it outside of these two so it's a separate object and let's also assign that to our chest so now both are heading and chest aim are using the same target and what we can simply do is go into our chest aim and reduce the weight so I'm gonna put that down to something like point three and instead of constraining the head here let's go ahead and constrain the spine so I'm going to take the spine one and drag that in instead so now we have two multi aim constraints affecting two different parts of the body with eight different weight and that means that if we play and move around our target we can see that our entire body is now rotating a bit towards that target which makes the movement seem a lot more natural awesome and remember how I talked about that we could apply any kind of animation well if I go in to the animator now on this character and change to a walk animation it just works really cool now there of course many more constraints that we can apply to achieve different results one that I use a lot is the two bone I constrict this will allow us to have the arms and legs of our character probably bend to follow a target so you can just imagine how useful that is let's try to set up one for the right arm and we could of course add this inside of the same rig but since we're affecting a completely different part of the body let's go ahead and create a separate one so we'll select our character look under animation rigging and let's again press rig setup as you can see this adds a not the rig layer to our rig builder and again and not the object and maybe we could rename these two to something other than rig one and two let's have the first one be head rig and the second one be arm rig then inside of the arm rig we can rightclick and create an empty object let's rename this one to arm mover let's set a component corner animation rigging and select lead to bone ika constraint now as you can see this text in three bones instead of just one that's because it will apply some natural movement so natural bending of the bones as long as we have three bones in sequence so in our case we need the route mid tip to be the bones that make up our arm let's go under our spine here under the neck let's find our left arm here we have the upper arm then the forearm and then the hand so let's start with the hand here and assign that to the tip we're going to assign the forearm to the mid and the upper arm to the root of course we also need a source object as you can see the target is currently none so let's go under our arm rig and arm mover here let's right click and create another empty object let's rename this one to target and as you can see our target is currently placed down here instead we want this to be placed on the hand because we are going to be moving around our hand and arm with this object so to snap it to our hand we can simply select the target then hold down control and select the hand then go under animation rigging and hit a line transform and as you can see the target immediately snaps to our hand we also want to display this with a gizmo so let's go to the bottom right corner and hit plus again we can choose an effector shape I'm going to search for effector I'm gonna choose the square root vector I'm gonna set the size of this to something like point three and there we go we now have a square here that we can select and move around and finally let's go to the arm mover and assign this target and that's it if we now hit play we can see that while our character is playing an animation our hand is now remaining in place and that means that we can actually select this target object here and move around our hand even rotate it in any way that we'd like and our arm will appropriately follow really really cool and a cool tip is actually to move the target while the game is running to somewhere you think looks cool like here and then just copying the placement by rightclicking on the transform and selecting copy weld placement we can then stop playing and go to the target right click on the transform and hit paste world placement so if we hit play indeed the arm goes right up and we can use this for all kinds of things like placing the hands correctly when holding a weapon now in our case this is what we want but sometimes we don't want the hand to snap to the target sometimes we want to just keep that offset and in that case we can go under the arm mover go settings and under maintain target offset we can choose whether to do that on position rotation or both just something that's good to know there and again we can adjust this using the weight slider imagine for example that all the skeletons are gathering and they want to check if everyone is present John are you there of course you can change the weight and position through script you can change it through the animation window and everything even works with timeline now as well so you can just imagine the possibilities and the good thing is that animation rigging runs on jobs so it's very performant one thing to note is that because it runs on jobs you shouldn't reassign targets while the game is running so if you need to change between following different objects I would recommend creating a script that just moves the target to the right object and of course from here it's up to you to start playing around with adding different constraints as you can see there are a lot to choose from luckily they're all really well documented well of course have a link to where you can learn more about them in the description another thing that is good to know is that multiple constraints within a single rig applied based on their order in the hierarchy so if you're working with multiple constraints in one rig the top one will be applied first in our case here that's the heading and then the chess team gets applied the order of the rigs however are based on the order of the rig layers in the rig builder so under a rig builder component in our character here we can change the order of individual rigs and if you need some good examples on how to use some of these constraints you can simply go to the package in the package manager and here we can look under samples let's import these and this will create a unity folder here with some constrained samples and if we open up the scenes folder we can see that there are lots of examples for the different ones of course if you're using Europe Eli key you might have to update some of the materials we can do that by going edit render pipeline Universal render pipeline upgrade project materials to universal and hit proceed and then everything should show up and as you can see here's an example of two bonide k one of the multi aim one for blending one for I K on an entire chain of bones one for parenting if you want to have objects follow your and the list pretty much goes on as you can see it can get pretty crazy awesome and that's pretty much it for this video if you enjoyed it make sure to subscribe and ring the notification bells so don't miss the next one well of course that links to where you can learn more about animation rigging in the description including a TDC talk on some more advanced use cases on that thanks for watching and I will see you in the next video thanks to all the awesome patreon supporters who donated in May and especially thanks to face Samara fire lost to violence locked forever replica studios na'vi ninja SOT Mike Jason Narita SKU Luna set piano satin black Donna team Cascone 10 Sam Jacob Sanford no he was sake mug and 20 rod Gregory Pierce Michael Cobb of the mighty Zeus Owen Cooper as in the Pierce Erasmus and serious mode you guys Rock
