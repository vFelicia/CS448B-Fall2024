With timestamps:

00:03 - hello one welcome to video number 30
00:06 - Part B in our survival games series done
00:09 - by practice I'm the CEO
00:10 - Blackie's and in this one we're going to
00:13 - continue where we left off in the last
00:15 - video so basically what we did last was
00:19 - we made sure that all of this um all of
00:23 - this with the current weapon variable
00:25 - being adjusted using the scroll wheel
00:28 - and the input get button down we we took
00:34 - care of all of that so that is working
00:36 - and now we're going to move on to the
00:38 - part where we are going to enable and
00:41 - disable the weapons depending on that
00:44 - variable and we're also going to make
00:46 - sure that the animations will match the
00:49 - weapon we have equipped great so as
00:54 - always I've opened RB unity and so here
00:58 - we are and our script is attached to the
01:01 - melee object and if we just go ahead and
01:05 - open it up let's write some more code so
01:08 - under the function select weapon that's
01:12 - really just empty but we are calling it
01:16 - at the right time so we are calling it
01:18 - whenever we change something and I just
01:21 - want to go up to the top under the
01:23 - function awake and type select weapon
01:29 - zero so just right when we start out the
01:33 - game it will make sure that the first
01:36 - weapon is selected so that they so that
01:40 - one will be okay so now we are going to
01:43 - write the logic that will go through all
01:45 - of the channels of the melee objects or
01:48 - all of the weapons and it's going to
01:50 - check with the index with the current
01:54 - weapon and and see if if that's the
01:57 - weapon we want to have equipped it if it
01:59 - is it should it should enable it if not
02:03 - it should disable it okay so what we're
02:08 - going to do is we're going to use a new
02:10 - type of statement this is
02:13 - what is called a for statement and what
02:17 - it will do it will it will call a piece
02:21 - of code for every child attached to the
02:25 - mealy object and I'm not going to go
02:28 - into exactly how what all of these signs
02:32 - meet mean because we are going to be
02:34 - using many lists and arrays when I
02:38 - explain the inventory system and so
02:41 - we're going to go more in depth with it
02:43 - there but for now let's just type 4 and
02:46 - then start parentheses var i equals 0
02:52 - semicolon I is less than transform that
02:59 - child count semicolon I plus plus and
03:07 - this is really just a bunch of symbols
03:11 - but just type after me for now and I
03:14 - will explain it what all of this means
03:17 - in another video ok so here we're going
03:22 - to activate the selected weapon so type
03:32 - if open our parentheses I is equal to
03:37 - index so whenever we go through this if
03:42 - the child count it has assigned is equal
03:46 - to the current weapon then we want it to
03:49 - be enabled so open up the bracket keys
03:53 - and then we could just type transform
03:58 - dot get child I
04:07 - that game object that said active true
04:14 - and this will indeed enable the object
04:18 - are you enable this object so it will
04:23 - enable the selected weapon object
04:25 - because it will find the child of the
04:28 - transform using the eye and it will then
04:34 - use the game object to set it active but
04:40 - we want to also check whether or not
04:42 - it's a weapon or what kind of weapon it
04:45 - is so that we can have different
04:47 - animations play but we're going to do
04:50 - that in just a sec for now let's just
04:51 - type LS so open up some brackets and
05:03 - inside of here we are going to type
05:06 - transform that get child I dot game
05:15 - object that said active should be false
05:19 - and so if the if the one that we are
05:25 - going through we are iterate iterating
05:28 - through is equal to the current weapon
05:30 - it will set it to active if it's not the
05:34 - one we're looking for
05:35 - it will disable it now we can go inside
05:38 - of our if statement and type out the
05:42 - logic checking if it's a fist weapon or
05:47 - if it's a a weapon we want to swing so
05:51 - type if transform dot get child I that
06:01 - name
06:02 - is equal to
06:07 - fists so I'm going to have a separate
06:13 - weapon which is just going to be an
06:15 - empty game object since we don't need
06:18 - anything to spawn into our hands they
06:21 - are already there and that it's going to
06:23 - be called fists and whether when every
06:26 - that's what we have equipped so when
06:29 - that's what we are have selected and
06:31 - what we are using we want the weapon on
06:34 - variable inside of our controller to be
06:38 - false so that the hit animations will
06:41 - play so that's what we're going to type
06:44 - now
06:45 - so if transform that get child ID name
06:50 - is equal to fist we want the animator
06:54 - which is the variable we set earlier dot
06:59 - set pool for boolean to be weapon on so
07:07 - if we want to access the weapon on
07:09 - variable , and we want it to be false
07:13 - so this is how you access different
07:16 - variables in a controller using mekin 'm
07:20 - so we have the animated controller let's
07:23 - actually just take a quick look at that
07:25 - so inside of our arms folder we have the
07:28 - arms controller and if we double click
07:30 - it we can have a look at how it looks so
07:34 - we have the different animation setup
07:37 - and you can see this in previous videos
07:39 - and basically we have the weapon is on
07:43 - parameter which allows us to define
07:47 - whether or not we want to swing or hit
07:50 - or punch something whenever we attack um
07:55 - and this is the parameter or the
07:58 - variable we are going to access and
08:00 - that's done using this quote so the
08:05 - animator that set boolean weapon on
08:07 - should be false else if it's not the if
08:14 - transform duck a child I that name is
08:16 - not equal to fists
08:21 - then we want to type the animator that
08:26 - set bull
08:30 - weapon on should be true because then
08:37 - it's a weapon and you can do this with
08:40 - any kind of weapon you have it could
08:43 - also be if it's a dagger then uh it is
08:48 - stacker it should be true else if it's
08:53 - sword then sword should be true and and
08:56 - so on you can you can keep on making
08:59 - these adjustments so that your animation
09:03 - will always stay up-to-date with the
09:06 - weapon you're using ok cool so now if we
09:10 - save this out we should hopefully see
09:13 - this working and I will just leave
09:18 - making them open so that we can quickly
09:21 - see whether or not our weapon asan is
09:23 - changing so when we hit play now we get
09:27 - an error and that's because we need to
09:30 - assign the animator so you can see it's
09:36 - slowing down and that's because we have
09:38 - an error in our script so if we could
09:41 - just get unity to behave let's see looks
09:47 - like it's crashing I'll just quickly
09:49 - pause the video and return okay so I got
09:52 - unity back up and running and you can
09:54 - see that we got the error here
09:57 - unassigned reference exception the
10:00 - variable the animator of weapon
10:02 - switching to test has not been assigned
10:05 - so we just that just means that we need
10:08 - to assign the animator
10:11 - variable and all we have to do here is
10:15 - really just find it in our project pane
10:17 - and drag it on to the animator variable
10:22 - so I'm not in the project pane but under
10:24 - the arms so we just select our melee
10:28 - object and drag the arms on there and
10:31 - we'll it will automatically
10:33 - find the component attached and so now
10:37 - when we hit play and make sure we can
10:41 - see our making them controller here we
10:47 - can use the scroll wheel to scrub
10:49 - through the different weapons and right
10:52 - now we don't have the weapon asan
10:54 - turning on anywhere since we don't have
10:58 - the fist object traded yet so if I just
11:02 - quickly go ahead and for example drag
11:04 - the axe out of here so that we'll just
11:09 - have it disabled over there and instead
11:12 - make a new empty game object pushing
11:14 - control-shift-n
11:15 - or command shift then if you're on a Mac
11:18 - renaming this to fists drag again under
11:24 - the melee object changing the position
11:27 - and rotation to zero to make it centered
11:30 - on the melee object then we will also be
11:34 - able to now equip the fists weapon so
11:38 - when we hit play by default the fists
11:44 - will be on and we can scrub through that
11:48 - we are getting an area called weapon is
11:51 - on or weapon on does not exist that's
11:54 - because we need to type weapon is on so
11:57 - weapon is on there and weapon is on
12:03 - there and now when we hit play go and do
12:10 - the animator we can see that our hands
12:14 - are open whenever we don't have anything
12:18 - equip to them and when we then equip the
12:22 - weapon we can see them closing and that
12:27 - means that it will also play the correct
12:29 - swing and attack animations depending on
12:32 - whether or not it has an AH and weapon
12:36 - attached and if we want to say increase
12:39 - the maximum number of weapons so we can
12:41 - include our axe or we have to do is bump
12:44 - up the max weapons
12:46 - quickly do this in code also so it will
12:49 - be automatically included in the assets
12:52 - pack and then make one more of these if
12:56 - inputs so here we go four and A three
13:07 - and now we can have more weapons inside
13:12 - so that's really all you have to do to
13:14 - adjust how many weapons you can have I'm
13:17 - just going to quickly undo this and so
13:20 - don't really want it to be included but
13:23 - that was the general idea and let's just
13:26 - bump down that again so that's really
13:29 - cool and if we want to see this actually
13:31 - working in real time inside of the
13:33 - animator all we have to do is get rid of
13:36 - rid of the annoying mekin embarque by
13:38 - hitting apply real motion and now we can
13:42 - see the weapon is on is false we can see
13:45 - the idle playing and when I then scroll
13:48 - up we should be able to see whoops looks
13:53 - like I went too far back in history here
13:56 - so the weapon is on there we go and now
13:59 - it should be working so let's hit play
14:03 - again you can see the weapon is on is
14:06 - false the idle is playing when they go
14:09 - up select the weapon the idle with
14:11 - weapon is playing and the weapon is on
14:13 - and so it will shift back and through
14:17 - correctly so that was pretty much it for
14:21 - this tutorial guys I hope you enjoyed it
14:24 - and I'll see you in the next video

Cleaned transcript:

hello one welcome to video number 30 Part B in our survival games series done by practice I'm the CEO Blackie's and in this one we're going to continue where we left off in the last video so basically what we did last was we made sure that all of this um all of this with the current weapon variable being adjusted using the scroll wheel and the input get button down we we took care of all of that so that is working and now we're going to move on to the part where we are going to enable and disable the weapons depending on that variable and we're also going to make sure that the animations will match the weapon we have equipped great so as always I've opened RB unity and so here we are and our script is attached to the melee object and if we just go ahead and open it up let's write some more code so under the function select weapon that's really just empty but we are calling it at the right time so we are calling it whenever we change something and I just want to go up to the top under the function awake and type select weapon zero so just right when we start out the game it will make sure that the first weapon is selected so that they so that one will be okay so now we are going to write the logic that will go through all of the channels of the melee objects or all of the weapons and it's going to check with the index with the current weapon and and see if if that's the weapon we want to have equipped it if it is it should it should enable it if not it should disable it okay so what we're going to do is we're going to use a new type of statement this is what is called a for statement and what it will do it will it will call a piece of code for every child attached to the mealy object and I'm not going to go into exactly how what all of these signs meet mean because we are going to be using many lists and arrays when I explain the inventory system and so we're going to go more in depth with it there but for now let's just type 4 and then start parentheses var i equals 0 semicolon I is less than transform that child count semicolon I plus plus and this is really just a bunch of symbols but just type after me for now and I will explain it what all of this means in another video ok so here we're going to activate the selected weapon so type if open our parentheses I is equal to index so whenever we go through this if the child count it has assigned is equal to the current weapon then we want it to be enabled so open up the bracket keys and then we could just type transform dot get child I that game object that said active true and this will indeed enable the object are you enable this object so it will enable the selected weapon object because it will find the child of the transform using the eye and it will then use the game object to set it active but we want to also check whether or not it's a weapon or what kind of weapon it is so that we can have different animations play but we're going to do that in just a sec for now let's just type LS so open up some brackets and inside of here we are going to type transform that get child I dot game object that said active should be false and so if the if the one that we are going through we are iterate iterating through is equal to the current weapon it will set it to active if it's not the one we're looking for it will disable it now we can go inside of our if statement and type out the logic checking if it's a fist weapon or if it's a a weapon we want to swing so type if transform dot get child I that name is equal to fists so I'm going to have a separate weapon which is just going to be an empty game object since we don't need anything to spawn into our hands they are already there and that it's going to be called fists and whether when every that's what we have equipped so when that's what we are have selected and what we are using we want the weapon on variable inside of our controller to be false so that the hit animations will play so that's what we're going to type now so if transform that get child ID name is equal to fist we want the animator which is the variable we set earlier dot set pool for boolean to be weapon on so if we want to access the weapon on variable , and we want it to be false so this is how you access different variables in a controller using mekin 'm so we have the animated controller let's actually just take a quick look at that so inside of our arms folder we have the arms controller and if we double click it we can have a look at how it looks so we have the different animation setup and you can see this in previous videos and basically we have the weapon is on parameter which allows us to define whether or not we want to swing or hit or punch something whenever we attack um and this is the parameter or the variable we are going to access and that's done using this quote so the animator that set boolean weapon on should be false else if it's not the if transform duck a child I that name is not equal to fists then we want to type the animator that set bull weapon on should be true because then it's a weapon and you can do this with any kind of weapon you have it could also be if it's a dagger then uh it is stacker it should be true else if it's sword then sword should be true and and so on you can you can keep on making these adjustments so that your animation will always stay uptodate with the weapon you're using ok cool so now if we save this out we should hopefully see this working and I will just leave making them open so that we can quickly see whether or not our weapon asan is changing so when we hit play now we get an error and that's because we need to assign the animator so you can see it's slowing down and that's because we have an error in our script so if we could just get unity to behave let's see looks like it's crashing I'll just quickly pause the video and return okay so I got unity back up and running and you can see that we got the error here unassigned reference exception the variable the animator of weapon switching to test has not been assigned so we just that just means that we need to assign the animator variable and all we have to do here is really just find it in our project pane and drag it on to the animator variable so I'm not in the project pane but under the arms so we just select our melee object and drag the arms on there and we'll it will automatically find the component attached and so now when we hit play and make sure we can see our making them controller here we can use the scroll wheel to scrub through the different weapons and right now we don't have the weapon asan turning on anywhere since we don't have the fist object traded yet so if I just quickly go ahead and for example drag the axe out of here so that we'll just have it disabled over there and instead make a new empty game object pushing controlshiftn or command shift then if you're on a Mac renaming this to fists drag again under the melee object changing the position and rotation to zero to make it centered on the melee object then we will also be able to now equip the fists weapon so when we hit play by default the fists will be on and we can scrub through that we are getting an area called weapon is on or weapon on does not exist that's because we need to type weapon is on so weapon is on there and weapon is on there and now when we hit play go and do the animator we can see that our hands are open whenever we don't have anything equip to them and when we then equip the weapon we can see them closing and that means that it will also play the correct swing and attack animations depending on whether or not it has an AH and weapon attached and if we want to say increase the maximum number of weapons so we can include our axe or we have to do is bump up the max weapons quickly do this in code also so it will be automatically included in the assets pack and then make one more of these if inputs so here we go four and A three and now we can have more weapons inside so that's really all you have to do to adjust how many weapons you can have I'm just going to quickly undo this and so don't really want it to be included but that was the general idea and let's just bump down that again so that's really cool and if we want to see this actually working in real time inside of the animator all we have to do is get rid of rid of the annoying mekin embarque by hitting apply real motion and now we can see the weapon is on is false we can see the idle playing and when I then scroll up we should be able to see whoops looks like I went too far back in history here so the weapon is on there we go and now it should be working so let's hit play again you can see the weapon is on is false the idle is playing when they go up select the weapon the idle with weapon is playing and the weapon is on and so it will shift back and through correctly so that was pretty much it for this tutorial guys I hope you enjoyed it and I'll see you in the next video
