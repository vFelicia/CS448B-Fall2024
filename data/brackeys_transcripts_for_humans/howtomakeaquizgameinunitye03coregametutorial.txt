With timestamps:

00:00 - thanks for tuning in at brakus hello I
00:04 - want to welcome to the third video on
00:06 - making a quiz game in unity today we are
00:08 - going to be tying together some of our
00:10 - code with the actual interface in unity
00:12 - so to be displaying questions and maybe
00:15 - doing some animation stuff so that's
00:16 - going to be a lot of fun if you think
00:18 - that I sound a bit weird that's because
00:20 - I still am a little bit sick so as
00:22 - always that's why good so let's just
00:25 - jump into today's video so you can see
00:27 - here that I'm in unity and I haven't
00:29 - changed anything since the last time I
00:31 - was here and the first thing that I want
00:33 - to be doing is actually changing this
00:35 - question placeholder here so if we jump
00:38 - into our game-manager script let's go
00:40 - ahead and make a reference to that and
00:42 - make sure that we change that while
00:45 - whenever we load in a new question so
00:48 - you can see here that I'm in visual
00:50 - studio and we have this a function here
00:53 - that gets a random question and we are
00:56 - just going to remove this debug block
00:57 - statement and I want to rename this into
01:00 - instead of get random questions so I
01:02 - wanted to say set current question I
01:06 - think that makes a bit more sense for
01:07 - what we're doing and inside of this what
01:11 - I want to do is this is where I want to
01:13 - access our current question dot fact
01:19 - oops fact and that is the actual text
01:22 - that we want to display and why do we
01:24 - want to put this well we want to put
01:26 - this into a private reference so I'm
01:29 - going to make a serialize field here
01:31 - private to make it show up in the
01:33 - inspector make it a private and then
01:36 - we'll do a text object and whenever we
01:38 - want to use a unity text from the new a
01:42 - GUI system or relatively new we need to
01:45 - include unity engine dot UI up here so
01:50 - that's part of the UI namespace so we
01:52 - have a private text and we'll simply
01:53 - call this the question text or the fact
01:57 - the fact text and we can just close that
02:01 - off and then down here we can say that
02:03 - fact text dot text needs to be equal to
02:07 - the current question fact and when we
02:10 - save this head back into unity find our
02:13 - game
02:13 - manager we should see a new field pop up
02:16 - here indeed we do and I'm just going to
02:20 - close off the questions array there and
02:21 - we can just take under the question
02:23 - panel and the question here we can
02:28 - simply drag that onto there and let's
02:31 - just instead of question that's called
02:33 - this fact just so we are using the same
02:36 - terminology throughout and let's join
02:38 - try and hit play here and you can see
02:40 - that now that states something that is
02:43 - very obviously very true so the next
02:46 - thing that we need to do is kind of make
02:48 - this interactive so we need some kind of
02:50 - win or lose statement and therefore we
02:53 - need to hook up these to true and false
02:56 - buttons so let's make a a couple of
02:59 - public methods that will do this for us
03:01 - so first off we'll make a whoops a
03:04 - public I need to move my keyboard closer
03:09 - here so I can actually hit the buttons
03:10 - there we go a public void and this is
03:13 - going to be the user select true and in
03:20 - here we will simply say that if and then
03:24 - if our current question dot is true well
03:31 - then we have selected the correct answer
03:33 - then we can write out debug the lock are
03:35 - correct else meaning if we have selected
03:42 - true and the current question is not
03:43 - true then we can write out that we were
03:46 - wrong so we can write out wrong here
03:49 - there we go and we will duplicate this
03:52 - piece of code down here and make this
03:55 - user select false and if you have
03:59 - multiple our answers if it's not just a
04:02 - true or false you can make this into a
04:04 - single method that has an integer
04:08 - stating what the user has selected or
04:11 - enum or whatever so you can use an
04:14 - argument instead of just copy pasting
04:15 - this method but whenever we just have
04:17 - boolean true or false this is going to
04:20 - be work just fine so use the Select
04:21 - false and we can see here that if
04:23 - current question that is not true then
04:26 - we want to write out
04:27 - that was correct so if we've selected
04:29 - false and it was false then we were
04:31 - correct and it was true then we were
04:33 - wrong perfect so now we can just save
04:36 - that head back into unity and now we can
04:40 - link these methods up with our actual
04:42 - buttons so if we go ahead and find our
04:45 - true button here for example we can
04:47 - start with that and find the actual
04:49 - button layer then on click here we have
04:52 - the possibility to add an event so we'll
04:55 - go ahead and hit plus on that will take
04:57 - our game-manager and drag it in and the
05:00 - function that we want to access under
05:01 - our game manager is usage select true we
05:05 - can do the same with our false button so
05:06 - find the button layer add a new on click
05:09 - event drag in our game manager and here
05:13 - on the game manager we want to select
05:14 - usage select
05:15 - false good so now we can hit play here
05:18 - and I am super cool that is indeed true
05:23 - and you can see it says correct if we
05:25 - then choose false you can see it says
05:28 - wrong so that's perfect so the next
05:30 - thing that we need is some is both a way
05:33 - for this to be displayed on the UI but
05:36 - we also need a way to transition to the
05:38 - next question so let's begin with that
05:41 - so let's make a method that will
05:46 - transition to the next question but it
05:49 - will do so after a certain amount of
05:53 - seconds we need some kind of delay so
05:55 - that the user can see oh I was correct
05:57 - or was wrong and then it will transition
05:59 - so that we have kind of a little bit of
06:02 - time to understand what what went down
06:06 - good so in order to do this let's start
06:08 - by making some kind of serialize field
06:12 - and this is going to be a private float
06:15 - and it's going to store the delay so
06:18 - delay or maybe time between questions
06:23 - and we are going to set that to let's
06:27 - just say one second by default and we
06:29 - can always tweak this later
06:31 - then we are going to make a new
06:35 - enumerator and this is where we are
06:37 - going to be using system dark
06:39 - collections so we'll
06:41 - just make one let's say here in
06:44 - ienumerator
06:45 - and this one is going to be called
06:48 - transition to next question and what we
06:55 - are first going to do is I want to take
06:57 - this uh net answer questions that remove
06:59 - add I would kind of like to maybe move
07:03 - that down here but then again it's fine
07:07 - that we're just doing it with the random
07:09 - index but now I want to move it down
07:11 - here so that we are actually removing
07:15 - this whenever we have answered something
07:18 - I think that's a better way and instead
07:20 - of using remove add we are going to use
07:22 - remove and then instead of inserting an
07:24 - index we are going to insert the current
07:26 - question so it will remove by an element
07:29 - not by an index then what we can do is
07:32 - we can rate wait a certain amount of
07:34 - seconds so yield return new wait for
07:37 - seconds and if you've never worked with
07:39 - our numerators and maybe you're not so
07:41 - advanced in ccr programming just write
07:45 - after me here and ienumerator if we were
07:48 - to understand this very simply allows us
07:52 - to wait a certain amount of seconds
07:54 - inside of the method before something
07:56 - new happens and you do that by typing
07:58 - yield return new waitforseconds and then
08:01 - giving that the amount of seconds to
08:03 - wait and the amount of seconds that we
08:05 - want to rate wait is the time between
08:07 - questions there we go so just right
08:11 - after me you don't need to understand
08:12 - why this works it just does and then
08:16 - what we want to do is of course set a
08:17 - new current question so we're going to
08:19 - say actually instead of doing that lets
08:21 - just reload the entire scene so let's go
08:25 - ahead and go and find out and it yeah
08:28 - okay so when we need to reload the scene
08:30 - we need to also import scene management
08:32 - so using scene our unity engine dot
08:37 - scene management there we go and now we
08:40 - can access our scene manager down here
08:43 - and we can tell it to load a scene and
08:47 - the scene that we wanted to load is the
08:50 - current scene and we can get the index
08:53 - or the name of our currency
08:55 - by saying scene manager dot I'll get
09:02 - active scene there we go and then we
09:06 - need to either use a build index or a
09:08 - name we're just going to use the build
09:10 - index so we'll say dot build index so we
09:13 - will load the scene with the index of
09:15 - our current scene that is kind of the
09:17 - idea here now that means that we will
09:19 - just restart so that's going to work
09:22 - just fine and the only thing that we
09:24 - need to do now is make sure that we
09:26 - transition to the new question after
09:28 - having selected something so let's do
09:30 - that under the user selects true then we
09:32 - want to call that and whenever we are
09:35 - working with our enumerators we don't
09:37 - just call them like this we use start
09:40 - co-routine and then we specify the I
09:43 - enumerated routine and in this case we
09:45 - want to load in or start the transition
09:50 - to next question there we go and we need
09:53 - to do the same thing down here good so
09:57 - now that we've saved this we can head
09:59 - back into unity and we should see now
10:02 - then when we hit play and two plus two
10:06 - equals four that's true so I'm going to
10:08 - select true it says correct it waits one
10:10 - second and then it loads in the next
10:12 - question and that's perfect violets are
10:14 - red that's false and it says correct and
10:18 - it loads in the new question and you can
10:19 - see if our answer wrong to a question
10:21 - false wrong and it loads in and then
10:26 - okay so maybe it loaded in the same
10:29 - question here and let's find that
10:31 - because that's because we only have
10:33 - three questions and when it's done with
10:36 - all of the different questions on it
10:39 - simply loops again
10:41 - and that means that if we go under our
10:43 - debug here and look under our current
10:45 - question a note that wasn't what I
10:49 - wanted to see maybe we cannot inspect
10:51 - this actually we can't what I wanted to
10:55 - show you here is that the our unanswered
10:59 - questions array was reset and then it
11:02 - selected a new one in the unanswered
11:04 - questions array and that's why the same
11:06 - one appeared so you can see if I answer
11:08 - wrong here again
11:09 - it shows me a new one and that's simply
11:11 - because of the way we have it set up
11:12 - this is not a real issue if you have
11:14 - plenty of questions in the array but
11:18 - since I only have three this might
11:19 - happen at times so just make sure to
11:22 - make plenty of questions if this
11:24 - behavior really annoys you we can go in
11:26 - and tell it make some kind of if that
11:30 - story's some kind of temporary variable
11:32 - that stories the previous question that
11:35 - was loaded and what you can then do is
11:38 - simply check if that was equal to the
11:40 - same and if it is then load a new one
11:42 - but I don't think that that's really
11:44 - necessary here cool so this is actually
11:47 - working
11:48 - however our game itself is actually
11:52 - pretty lame because we're not really
11:53 - showing what's going on
11:55 - so let's instead of using these debug
11:58 - log statements do some actual animations
12:00 - so let's find our canvas here and let's
12:03 - add a component to this and that's
12:06 - actually it we'll add this automatically
12:08 - let's just instead go ahead and find our
12:11 - window and then animation and let's drag
12:15 - it down here let's go ahead and create a
12:17 - new animation clip create and let's make
12:20 - this um the mm let's make a folder for
12:25 - this first of all this is just going to
12:27 - be animation and undo that let's go
12:30 - ahead and make this clip and this is
12:32 - going to be our true answer so in case
12:39 - we've selected the true one what I want
12:41 - to do is I want to have this false
12:44 - button slide out of the picture so that
12:47 - we can see that it was the true one we
12:48 - selected and what I wanted to do is I
12:50 - wanted to reveal what the whether or not
12:54 - this was correct
12:55 - behind this button so in order to do
12:58 - this let's make two text objects one for
13:01 - the true and one for the force okay
13:04 - so let's go ahead and make two text
13:06 - objects and in order to do this let's
13:07 - just maybe copy the text from our
13:10 - question panel here and let's just scale
13:16 - this somewhat the same size as the
13:21 - buttons maybe
13:23 - I don't know quite how we want to scare
13:28 - this yet so they are like that and their
13:33 - anger points goes there okay so that's
13:36 - fine
13:37 - so what we can do is maybe scale this
13:40 - like that and that and put this in the
13:47 - middle there we go and what we can then
13:52 - do is maybe just temporarily disable the
13:55 - true button here and change the text
13:58 - here to maybe correct and we can scale
14:02 - this up a bit
14:04 - fifty is pretty cool we can maybe even
14:07 - make this a bold text and instead of
14:10 - doing that under there let's find the
14:11 - actual both bold font so let's find the
14:14 - road barrio Baro bold there we go that's
14:20 - the italic version there's the non
14:23 - italic one so it says correct there I
14:26 - actually think that bold this might be a
14:28 - bit too much let's do the medium one
14:30 - instead there we go so it tells you that
14:33 - that was correct or wrong whatever and
14:37 - everything else looks pretty nice here
14:40 - so let's just make this the arm and this
14:44 - is then the false answer because this
14:48 - will be shown if we click false the then
14:52 - the true button will slide out and it
14:54 - will be real whether or not this was
14:56 - correct or or wrong good so I will just
15:02 - keep that and then let's make sure that
15:04 - this stretches correctly oops
15:06 - find our false answer and drag in the
15:10 - anchor points there we go so now this
15:12 - will stretch correctly with the screen
15:16 - and that's perfect
15:19 - good now that we have that in place
15:23 - let's do the same with the a true button
15:26 - so let's now disable the false button
15:29 - and enable the true button you can see
15:31 - that it covers it up then we can take
15:33 - the false answer and duplicated and we
15:35 - can then move it
15:36 - over here now that we have hope move it
15:41 - over here and are they lining up indeed
15:47 - they are and we can now make this may be
15:49 - correct is fine the the text is fine but
15:52 - this is then the true answer and we also
15:55 - need to move the anchor point so this
15:57 - one goes all the way over there and this
16:00 - one goes over there and I could see that
16:02 - I just had messed this up a tiny bit
16:04 - there we go and we also want this to be
16:06 - at the back of this button so that they
16:09 - overlay so now you can see that when I
16:11 - enable the buttons it's fine if I then
16:13 - select let's say true and disable this
16:15 - it will show whether or not that was
16:17 - correct now we simply need to first of
16:19 - all link this to the animation and also
16:23 - have the script change this so let's
16:25 - first off head into visual studio and
16:28 - let's just make two references to this
16:30 - just like we did the fact text so let's
16:33 - do serialize field and this is the
16:35 - private text and we call this um true
16:39 - answer text will do that and another
16:44 - serialize field oops
16:46 - another serialize field and this is the
16:49 - private text false add to text perfect
16:56 - I'll save that then when we set the
17:02 - current question when we load all of
17:03 - this in what we want to do is we want to
17:06 - say that if our current question dot is
17:13 - true so if it is actually true then we
17:17 - want to set answer or true answer text
17:23 - dot text to correct and then we want to
17:29 - set false and to text text equal to
17:34 - false else meaning if the current
17:40 - question is not true then we want to set
17:43 - true answer text dot text equal to false
17:47 - or wrong I mean run
17:49 - is the correct terminology here and the
17:53 - false answer text dot text equal to
17:57 - correct so and it's fine that we are
18:01 - setting it in here because it's covered
18:03 - up by the buttons and so the user won't
18:05 - be able to see that and that's good
18:07 - because then we only have need to have
18:09 - this code in one place so now what we
18:12 - should see if we link up these texts
18:15 - here so the true answer to enter text
18:18 - and the false answer on the false answer
18:20 - text is that when we hit play and maybe
18:24 - disable these you can say that if we
18:26 - select true this is correct and if we
18:29 - select false this is wrong so that's
18:32 - perfect and you will see this come to
18:35 - life when we do the animations we're
18:36 - we're going to which we're going to do
18:38 - right now so let's select the canvas
18:39 - here go on the record and let's select
18:43 - our so this is when we select our true
18:47 - answer so that means that we will need
18:48 - to move over our false button and we do
18:53 - this by simply keyframing
18:55 - the position of the false button so what
18:57 - we can do is simply we can simply move
19:03 - this out there we go simply out there
19:07 - just outside the screen maybe just a bit
19:09 - further and you can see here that I'm
19:13 - not doing the actual movement I'm simply
19:15 - making us a single keyframe and that's
19:17 - because unity will blend between the
19:19 - animation States itself and therefore we
19:22 - only need to have these stationary
19:23 - States and it will do the fading on its
19:26 - own and that's going to look just fine
19:27 - then we'll also have another clip here
19:31 - and this is also going to go under
19:33 - animation and it's not going to say true
19:35 - answer this is going to say false answer
19:38 - and this is going to do the exact
19:40 - opposite it's going to take our true
19:42 - button and then move that out of the way
19:45 - something like that and now that we have
19:48 - these two States the true answer in the
19:50 - false answer and just for good or this
19:52 - sake we'll go ahead and create a
19:54 - separate state here which is the no
19:59 - answer state or unanswered state and we
20:03 - save this and then if we record this
20:05 - what I want to do is I want to simply
20:07 - keyframe whoops I want to keyframe the
20:16 - stationary positions are for false
20:18 - buttons and this might be a bit overkill
20:20 - you really might not need to do this
20:22 - since we are loading in the frame and
20:24 - stuff like that or reloading the scene
20:26 - but just for good honest sake we are
20:28 - going to set them there in the no answer
20:29 - state good so what we can then do is we
20:34 - can find a project panel here we can go
20:37 - on the animation and you can see that we
20:38 - have a canvas animation or animator here
20:42 - and we're just going to call this the
20:45 - let's say game animator and we can open
20:50 - this up so if we double click this it
20:52 - will open it up in the animator editor
20:55 - and what we need to do here is we want
20:57 - to set our no answer state to the
21:00 - default state so that's just right click
21:03 - and set as layer default state so right
21:07 - when we load in the game this is what
21:08 - it's going to be playing which is
21:10 - nothing and then we make a transition to
21:12 - the true answer and to the false answer
21:14 - and we go in here and we say that we
21:18 - don't want this to have exit time and we
21:22 - don't want this either to have exit time
21:24 - so this way it will transition as soon
21:26 - as it's triggered and not wait for this
21:28 - to play that wouldn't make any sense and
21:30 - then we give it some parameters so we go
21:33 - into parametres here and we add two
21:35 - triggers the first one is true and the
21:39 - second one is false and if we have true
21:44 - here we add a condition here so the
21:46 - condition is true then we transition to
21:48 - the true answer and the condition here
21:50 - is false then we can transfer to the or
21:54 - then we transition to the false answer
21:56 - so now you can see that if I had play
21:58 - here and select true
22:01 - it says correct if I do this again and
22:05 - whoops I didn't turn it off there if I
22:08 - do this again and maybe select false
22:10 - it says correct now because violets are
22:13 - not red cool that's how it works and now
22:16 - we simply need to
22:17 - reference this and triggered inside of
22:19 - our script and that is super easy all we
22:21 - need to do is go into our game manager
22:23 - and add a reference to our animator and
22:31 - we'll just call this one animator and
22:34 - just going to write private there
22:36 - because I like to do that and then under
22:39 - our user select true all we do is we say
22:44 - animator or with small letters now dot
22:49 - set trigger and we simply say true or I
22:55 - did that dot capital there we go
22:57 - and you can of course make this into a
22:59 - variable up there if you want to be able
23:01 - to change that but I'm just going to
23:03 - hard-coded in because I imagine you know
23:05 - how to do that and down here we're going
23:07 - to do the same but with false and now if
23:09 - we say that our game should actually be
23:12 - done so if we hit play here you can see
23:16 - it says I'm super cool we select true
23:19 - and we have an unassigned reference here
23:23 - so we need to drag in the animator then
23:26 - that sits on the canvas let's try that
23:28 - again
23:28 - hit play my lights are red that's false
23:31 - and it says correct I'm super cool
23:33 - that's true it says correct two plus two
23:36 - equals four let's try and add two wrong
23:37 - here's or false and that's wrong so
23:40 - there we go now we have provided the
23:42 - user with feedback on what he's doing
23:44 - and you can see there our error was
23:45 - there again but that's fine so we can
23:47 - now just play all of this all the time
23:50 - and that's perfect cool so the way that
23:57 - we are handling the looping of the
23:59 - questions here's maybe a bit symbol and
24:03 - you can definitely do other ways to do
24:05 - this you can also just make an in screen
24:07 - when the users answered all the
24:09 - questions it's always difficult to find
24:11 - out what to do when you don't have any
24:13 - more questions the similar solution is
24:15 - just make a lot of questions and I
24:18 - definitely recommend that you play
24:20 - around with stuff like a score calendar
24:23 - and a cool end screen make some kind of
24:26 - menu as well all that stuff you can take
24:29 - from other series
24:31 - on the channel and I definitely
24:32 - recommend that you experience or that
24:34 - you play around with this I think I will
24:37 - make one short video in this series to
24:40 - wrap it up where we will maybe build
24:43 - some kind of an icon and build this out
24:46 - so I can show you different ways of
24:47 - sharing the game but that is actually
24:50 - all I wanted to put in the game so I
24:52 - hope that you enjoyed this course and I
24:55 - will see you in the next and final video

Cleaned transcript:

thanks for tuning in at brakus hello I want to welcome to the third video on making a quiz game in unity today we are going to be tying together some of our code with the actual interface in unity so to be displaying questions and maybe doing some animation stuff so that's going to be a lot of fun if you think that I sound a bit weird that's because I still am a little bit sick so as always that's why good so let's just jump into today's video so you can see here that I'm in unity and I haven't changed anything since the last time I was here and the first thing that I want to be doing is actually changing this question placeholder here so if we jump into our gamemanager script let's go ahead and make a reference to that and make sure that we change that while whenever we load in a new question so you can see here that I'm in visual studio and we have this a function here that gets a random question and we are just going to remove this debug block statement and I want to rename this into instead of get random questions so I wanted to say set current question I think that makes a bit more sense for what we're doing and inside of this what I want to do is this is where I want to access our current question dot fact oops fact and that is the actual text that we want to display and why do we want to put this well we want to put this into a private reference so I'm going to make a serialize field here private to make it show up in the inspector make it a private and then we'll do a text object and whenever we want to use a unity text from the new a GUI system or relatively new we need to include unity engine dot UI up here so that's part of the UI namespace so we have a private text and we'll simply call this the question text or the fact the fact text and we can just close that off and then down here we can say that fact text dot text needs to be equal to the current question fact and when we save this head back into unity find our game manager we should see a new field pop up here indeed we do and I'm just going to close off the questions array there and we can just take under the question panel and the question here we can simply drag that onto there and let's just instead of question that's called this fact just so we are using the same terminology throughout and let's join try and hit play here and you can see that now that states something that is very obviously very true so the next thing that we need to do is kind of make this interactive so we need some kind of win or lose statement and therefore we need to hook up these to true and false buttons so let's make a a couple of public methods that will do this for us so first off we'll make a whoops a public I need to move my keyboard closer here so I can actually hit the buttons there we go a public void and this is going to be the user select true and in here we will simply say that if and then if our current question dot is true well then we have selected the correct answer then we can write out debug the lock are correct else meaning if we have selected true and the current question is not true then we can write out that we were wrong so we can write out wrong here there we go and we will duplicate this piece of code down here and make this user select false and if you have multiple our answers if it's not just a true or false you can make this into a single method that has an integer stating what the user has selected or enum or whatever so you can use an argument instead of just copy pasting this method but whenever we just have boolean true or false this is going to be work just fine so use the Select false and we can see here that if current question that is not true then we want to write out that was correct so if we've selected false and it was false then we were correct and it was true then we were wrong perfect so now we can just save that head back into unity and now we can link these methods up with our actual buttons so if we go ahead and find our true button here for example we can start with that and find the actual button layer then on click here we have the possibility to add an event so we'll go ahead and hit plus on that will take our gamemanager and drag it in and the function that we want to access under our game manager is usage select true we can do the same with our false button so find the button layer add a new on click event drag in our game manager and here on the game manager we want to select usage select false good so now we can hit play here and I am super cool that is indeed true and you can see it says correct if we then choose false you can see it says wrong so that's perfect so the next thing that we need is some is both a way for this to be displayed on the UI but we also need a way to transition to the next question so let's begin with that so let's make a method that will transition to the next question but it will do so after a certain amount of seconds we need some kind of delay so that the user can see oh I was correct or was wrong and then it will transition so that we have kind of a little bit of time to understand what what went down good so in order to do this let's start by making some kind of serialize field and this is going to be a private float and it's going to store the delay so delay or maybe time between questions and we are going to set that to let's just say one second by default and we can always tweak this later then we are going to make a new enumerator and this is where we are going to be using system dark collections so we'll just make one let's say here in ienumerator and this one is going to be called transition to next question and what we are first going to do is I want to take this uh net answer questions that remove add I would kind of like to maybe move that down here but then again it's fine that we're just doing it with the random index but now I want to move it down here so that we are actually removing this whenever we have answered something I think that's a better way and instead of using remove add we are going to use remove and then instead of inserting an index we are going to insert the current question so it will remove by an element not by an index then what we can do is we can rate wait a certain amount of seconds so yield return new wait for seconds and if you've never worked with our numerators and maybe you're not so advanced in ccr programming just write after me here and ienumerator if we were to understand this very simply allows us to wait a certain amount of seconds inside of the method before something new happens and you do that by typing yield return new waitforseconds and then giving that the amount of seconds to wait and the amount of seconds that we want to rate wait is the time between questions there we go so just right after me you don't need to understand why this works it just does and then what we want to do is of course set a new current question so we're going to say actually instead of doing that lets just reload the entire scene so let's go ahead and go and find out and it yeah okay so when we need to reload the scene we need to also import scene management so using scene our unity engine dot scene management there we go and now we can access our scene manager down here and we can tell it to load a scene and the scene that we wanted to load is the current scene and we can get the index or the name of our currency by saying scene manager dot I'll get active scene there we go and then we need to either use a build index or a name we're just going to use the build index so we'll say dot build index so we will load the scene with the index of our current scene that is kind of the idea here now that means that we will just restart so that's going to work just fine and the only thing that we need to do now is make sure that we transition to the new question after having selected something so let's do that under the user selects true then we want to call that and whenever we are working with our enumerators we don't just call them like this we use start coroutine and then we specify the I enumerated routine and in this case we want to load in or start the transition to next question there we go and we need to do the same thing down here good so now that we've saved this we can head back into unity and we should see now then when we hit play and two plus two equals four that's true so I'm going to select true it says correct it waits one second and then it loads in the next question and that's perfect violets are red that's false and it says correct and it loads in the new question and you can see if our answer wrong to a question false wrong and it loads in and then okay so maybe it loaded in the same question here and let's find that because that's because we only have three questions and when it's done with all of the different questions on it simply loops again and that means that if we go under our debug here and look under our current question a note that wasn't what I wanted to see maybe we cannot inspect this actually we can't what I wanted to show you here is that the our unanswered questions array was reset and then it selected a new one in the unanswered questions array and that's why the same one appeared so you can see if I answer wrong here again it shows me a new one and that's simply because of the way we have it set up this is not a real issue if you have plenty of questions in the array but since I only have three this might happen at times so just make sure to make plenty of questions if this behavior really annoys you we can go in and tell it make some kind of if that story's some kind of temporary variable that stories the previous question that was loaded and what you can then do is simply check if that was equal to the same and if it is then load a new one but I don't think that that's really necessary here cool so this is actually working however our game itself is actually pretty lame because we're not really showing what's going on so let's instead of using these debug log statements do some actual animations so let's find our canvas here and let's add a component to this and that's actually it we'll add this automatically let's just instead go ahead and find our window and then animation and let's drag it down here let's go ahead and create a new animation clip create and let's make this um the mm let's make a folder for this first of all this is just going to be animation and undo that let's go ahead and make this clip and this is going to be our true answer so in case we've selected the true one what I want to do is I want to have this false button slide out of the picture so that we can see that it was the true one we selected and what I wanted to do is I wanted to reveal what the whether or not this was correct behind this button so in order to do this let's make two text objects one for the true and one for the force okay so let's go ahead and make two text objects and in order to do this let's just maybe copy the text from our question panel here and let's just scale this somewhat the same size as the buttons maybe I don't know quite how we want to scare this yet so they are like that and their anger points goes there okay so that's fine so what we can do is maybe scale this like that and that and put this in the middle there we go and what we can then do is maybe just temporarily disable the true button here and change the text here to maybe correct and we can scale this up a bit fifty is pretty cool we can maybe even make this a bold text and instead of doing that under there let's find the actual both bold font so let's find the road barrio Baro bold there we go that's the italic version there's the non italic one so it says correct there I actually think that bold this might be a bit too much let's do the medium one instead there we go so it tells you that that was correct or wrong whatever and everything else looks pretty nice here so let's just make this the arm and this is then the false answer because this will be shown if we click false the then the true button will slide out and it will be real whether or not this was correct or or wrong good so I will just keep that and then let's make sure that this stretches correctly oops find our false answer and drag in the anchor points there we go so now this will stretch correctly with the screen and that's perfect good now that we have that in place let's do the same with the a true button so let's now disable the false button and enable the true button you can see that it covers it up then we can take the false answer and duplicated and we can then move it over here now that we have hope move it over here and are they lining up indeed they are and we can now make this may be correct is fine the the text is fine but this is then the true answer and we also need to move the anchor point so this one goes all the way over there and this one goes over there and I could see that I just had messed this up a tiny bit there we go and we also want this to be at the back of this button so that they overlay so now you can see that when I enable the buttons it's fine if I then select let's say true and disable this it will show whether or not that was correct now we simply need to first of all link this to the animation and also have the script change this so let's first off head into visual studio and let's just make two references to this just like we did the fact text so let's do serialize field and this is the private text and we call this um true answer text will do that and another serialize field oops another serialize field and this is the private text false add to text perfect I'll save that then when we set the current question when we load all of this in what we want to do is we want to say that if our current question dot is true so if it is actually true then we want to set answer or true answer text dot text to correct and then we want to set false and to text text equal to false else meaning if the current question is not true then we want to set true answer text dot text equal to false or wrong I mean run is the correct terminology here and the false answer text dot text equal to correct so and it's fine that we are setting it in here because it's covered up by the buttons and so the user won't be able to see that and that's good because then we only have need to have this code in one place so now what we should see if we link up these texts here so the true answer to enter text and the false answer on the false answer text is that when we hit play and maybe disable these you can say that if we select true this is correct and if we select false this is wrong so that's perfect and you will see this come to life when we do the animations we're we're going to which we're going to do right now so let's select the canvas here go on the record and let's select our so this is when we select our true answer so that means that we will need to move over our false button and we do this by simply keyframing the position of the false button so what we can do is simply we can simply move this out there we go simply out there just outside the screen maybe just a bit further and you can see here that I'm not doing the actual movement I'm simply making us a single keyframe and that's because unity will blend between the animation States itself and therefore we only need to have these stationary States and it will do the fading on its own and that's going to look just fine then we'll also have another clip here and this is also going to go under animation and it's not going to say true answer this is going to say false answer and this is going to do the exact opposite it's going to take our true button and then move that out of the way something like that and now that we have these two States the true answer in the false answer and just for good or this sake we'll go ahead and create a separate state here which is the no answer state or unanswered state and we save this and then if we record this what I want to do is I want to simply keyframe whoops I want to keyframe the stationary positions are for false buttons and this might be a bit overkill you really might not need to do this since we are loading in the frame and stuff like that or reloading the scene but just for good honest sake we are going to set them there in the no answer state good so what we can then do is we can find a project panel here we can go on the animation and you can see that we have a canvas animation or animator here and we're just going to call this the let's say game animator and we can open this up so if we double click this it will open it up in the animator editor and what we need to do here is we want to set our no answer state to the default state so that's just right click and set as layer default state so right when we load in the game this is what it's going to be playing which is nothing and then we make a transition to the true answer and to the false answer and we go in here and we say that we don't want this to have exit time and we don't want this either to have exit time so this way it will transition as soon as it's triggered and not wait for this to play that wouldn't make any sense and then we give it some parameters so we go into parametres here and we add two triggers the first one is true and the second one is false and if we have true here we add a condition here so the condition is true then we transition to the true answer and the condition here is false then we can transfer to the or then we transition to the false answer so now you can see that if I had play here and select true it says correct if I do this again and whoops I didn't turn it off there if I do this again and maybe select false it says correct now because violets are not red cool that's how it works and now we simply need to reference this and triggered inside of our script and that is super easy all we need to do is go into our game manager and add a reference to our animator and we'll just call this one animator and just going to write private there because I like to do that and then under our user select true all we do is we say animator or with small letters now dot set trigger and we simply say true or I did that dot capital there we go and you can of course make this into a variable up there if you want to be able to change that but I'm just going to hardcoded in because I imagine you know how to do that and down here we're going to do the same but with false and now if we say that our game should actually be done so if we hit play here you can see it says I'm super cool we select true and we have an unassigned reference here so we need to drag in the animator then that sits on the canvas let's try that again hit play my lights are red that's false and it says correct I'm super cool that's true it says correct two plus two equals four let's try and add two wrong here's or false and that's wrong so there we go now we have provided the user with feedback on what he's doing and you can see there our error was there again but that's fine so we can now just play all of this all the time and that's perfect cool so the way that we are handling the looping of the questions here's maybe a bit symbol and you can definitely do other ways to do this you can also just make an in screen when the users answered all the questions it's always difficult to find out what to do when you don't have any more questions the similar solution is just make a lot of questions and I definitely recommend that you play around with stuff like a score calendar and a cool end screen make some kind of menu as well all that stuff you can take from other series on the channel and I definitely recommend that you experience or that you play around with this I think I will make one short video in this series to wrap it up where we will maybe build some kind of an icon and build this out so I can show you different ways of sharing the game but that is actually all I wanted to put in the game so I hope that you enjoyed this course and I will see you in the next and final video
