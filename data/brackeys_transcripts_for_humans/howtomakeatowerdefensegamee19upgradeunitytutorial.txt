With timestamps:

00:00 - this video is brought to you by sutan Al
00:01 - Sharif thank you so much for donating if
00:03 - you want to support Brees yourself you
00:04 - can go to patreon.com/crashcourse
00:08 - [Music]
00:24 - [Music]
00:30 - just a canvas with two buttons that will
00:32 - hover over any selected turret the first
00:35 - one is the upgrade button which we will
00:37 - make actually do something today and
00:40 - then in the next video we can do
00:41 - something with the sell button so um
00:44 - yeah before we get started with this I
00:46 - just want to fix a very quick uh little
00:48 - bug that I uh discovered when turning
00:51 - off the recording uh from the last video
00:54 - and that is if we currently have Play
00:56 - and play some turrets at the very top of
00:58 - our map here so let's just place some
01:00 - right here you can see if we try and
01:02 - place these at the very top of some of
01:05 - these nodes it's not going to give a
01:07 - hover animation and nothing happens when
01:08 - we presses it when we press it and also
01:11 - if we try to select one of these you can
01:13 - see that sometimes doesn't work it does
01:16 - if we click down here but not at the top
01:19 - so what is happening here well it's
01:22 - actually our top canvas that is
01:24 - currently overlaying our map a bit and
01:27 - because that has a graphic raycaster
01:30 - that will sometimes block uh any
01:32 - information about uh having clicked on
01:34 - an object so what we want to do is
01:36 - simply disable this graphic raycaster I
01:39 - believe you can just remove the
01:40 - component as well I'm just going to keep
01:42 - it there and that should actually fix
01:44 - that box so now if we go in here we
01:46 - should see that um everything if we
01:49 - select the chart everything highlights
01:51 - properly and that we can correctly shift
01:54 - between the different turrets much
01:56 - better awesome so what I want to begin
01:59 - with here is is our node script that
02:01 - sits on every node object in the game
02:03 - oops that's our enemy script our node
02:05 - script here and you can see quite a lot
02:08 - is going on in here and I actually want
02:09 - to add more stuff to this um because I
02:12 - think the current way that we are
02:13 - building turrets can be made made a lot
02:16 - more logical so if we have a look here
02:19 - we have a function called on Mouse down
02:21 - so whenever we press uh the node we
02:24 - check are we over any goey if we are we
02:26 - don't want to do anything do we really
02:28 - want to select this node in uh in that
02:31 - case then we want to do that uh can we
02:33 - build there if we can't then we skip out
02:36 - and if we pass through all of these if
02:38 - statement well then we're ready to build
02:39 - a turret and we do that by calling build
02:42 - turret on and then passing in the node
02:45 - and that uh function sits on the build
02:47 - manager I think it would be a lot more
02:50 - sensical to have this function sit on
02:52 - the Node itself because we have building
02:54 - on the Node so we might as well have the
02:56 - function on the Node also we're passing
02:58 - in an instance of uh of or a reference
03:01 - to this instance of the class and then
03:04 - we're changing stuff inside of our build
03:05 - manager if we go into our build manager
03:07 - here you can see that we are accessing
03:10 - turret under the node and changing that
03:12 - and there's no reason to do that using a
03:14 - reference when we can just do all of it
03:16 - locally so let's change this so let's go
03:18 - in here and create a separate function
03:20 - and we're just going to call this one
03:22 - build turret and instead of uh taking in
03:24 - a node we are going to take in a
03:26 - blueprint so we're going to take in here
03:29 - a turret blueprint containing the
03:31 - information about the turret that we
03:32 - want to build and let's just call this
03:34 - one
03:36 - blueprint whoops let me not mess up the
03:39 - parentheses there awesome so this is
03:42 - what we want to call down here so we
03:43 - want to go build turret and then we want
03:46 - to pass in some kind of blueprint and we
03:48 - will talk about where we get this from
03:50 - in a moment then inside of our build
03:52 - manager we can take all of this code
03:55 - copy it and delete it and delete the
03:58 - entire function save that and go into
04:01 - our node and paste that here so now we
04:05 - can use our blueprint instead of the
04:06 - turd to build so in here we go
04:08 - blueprint. cost um we go blueprint. cost
04:13 - there there as well we go instantiate
04:15 - blueprint. prefab and we want to use get
04:19 - build position but we don't need to
04:21 - reference it through a node now so you
04:23 - can see we are removing a lot of
04:25 - unnecessary references here so again we
04:27 - don't want to go node. turret and uh
04:30 - currently these are both called turret
04:32 - our turret up here and the temporary
04:35 - turret right here so let's just go ahead
04:37 - and rename this to underscore turret and
04:39 - do that there as well so we can
04:41 - distinguish between the turret we just
04:43 - instantiated and our local field
04:46 - variable up there then we have the
04:48 - effect here and we want to uh
04:50 - instantiate a build effect and we could
04:53 - either have this sit on the blueprint as
04:55 - well that would make sense because then
04:57 - you would be able to have different
04:58 - effects for different turrets when
05:00 - building them but since we don't want to
05:03 - create that let's just have this still
05:05 - sit on the game um on on the build
05:07 - manager so in that case we could simply
05:09 - go build manager. build effect and
05:13 - because this is a public variable that's
05:15 - totally accessible and again we our gu
05:19 - get build position here is just a local
05:21 - uh function so we don't need a reference
05:23 - and everything else looks fine I also
05:26 - want to remove this money left thing
05:28 - because we now have a money this counter
05:30 - so we can just display turet
05:32 - build cool so this function should
05:35 - actually work just fine now however we
05:37 - still need to pass in the correct
05:39 - blueprint and this of course sits on the
05:41 - build manager our build manager is
05:43 - responsible for figuring out what to
05:45 - build next so he has a variable called
05:48 - turn to build and instead of making this
05:51 - public which means that we could then
05:53 - also change it from outside of the
05:55 - script let's just have a function called
05:58 - um get tur to build so we simply go down
06:01 - here just like we have a select turr to
06:03 - build and again this is why we don't
06:06 - want to make it public publicly
06:08 - accessible that means that we would be
06:09 - able to change it without also
06:11 - deselecting nodes and we don't want to
06:13 - do that we want to always deselect our
06:15 - notes when we change the tur to bill so
06:18 - let's just make another public void here
06:20 - and actually it's not going to be a
06:21 - public void it's going to be a public
06:23 - turret blueprint called get turret to
06:28 - build
06:30 - and this is simply going to return the
06:32 - turret to build there we go it's that
06:34 - easy so inside of our node now we go
06:36 - build turret and then we go build
06:39 - manager. get turet to
06:42 - build cool so now things should be
06:44 - working and we can definitely try this
06:46 - out so let's just hit play and let's try
06:49 - building some turrets and you can see
06:51 - that works just fine so now that we have
06:55 - our code grouped a little more logically
06:57 - we can also go ahead and add a
06:59 - functionality as well so we have our
07:01 - build turret let's also make a public
07:04 - and this time I want it to be public
07:06 - because we want this to be called from
07:08 - without the class and this is going to
07:10 - be a public void called
07:12 - upgrade actually let's do upgrade turret
07:16 - just to be very specific on what's going
07:18 - on and in here we are essentially want
07:21 - to do a lot of the same stuff so let's
07:23 - just take off this code and then edit it
07:25 - a tiny bit so if player stats. money is
07:28 - less than blue print Dot and then we
07:30 - want to have an upgrade
07:33 - cost and uh if it's not well then we
07:36 - want to say not enough money to upgrade
07:40 - that and then return we also want to
07:42 - subtract our upgrade
07:46 - cost and we're going to be making this
07:48 - variable in a second and the thing that
07:50 - we want to build is no longer blueprint.
07:53 - prefab we want to instead build
07:56 - blueprint. um upgraded prefab
08:01 - and the same build position and
08:03 - everything we can also have a separate
08:05 - effect right now we're just using build
08:06 - manager. build effect we could also have
08:09 - a build manager. upgrade effect if you
08:11 - want that to look different but I think
08:13 - the build effect looks really cool and I
08:15 - think it would work fine for upgrades so
08:17 - far but you can definitely go in and
08:19 - change this and then we want to say
08:22 - debug.log turret
08:24 - upgraded however remember we currently
08:26 - have a turret there already so we can't
08:28 - just instance the upgraded turret then
08:30 - we are going to have two turrets sitting
08:32 - there we also need to get rid of the
08:34 - previous version so in order to do that
08:36 - we use the fact that we have a reference
08:38 - to that turret right up here and what I
08:41 - also want to do is I want to go in here
08:44 - and uh instead of having this as an
08:47 - optional uh optional variable I actually
08:49 - want to make this non-editable I want to
08:52 - hide this in the inspector and remember
08:55 - you can use this whenever you need a
08:56 - public variable that you can access from
08:58 - anywhere
09:00 - but that you don't want people to edit
09:02 - inside of the inspector and this is one
09:03 - of those and we're going to have
09:05 - multiple we're also going to have a
09:07 - public uh turd blueprint which is going
09:10 - to be our current turet
09:13 - blueprint and we also going to have an a
09:17 - third one which is going to be a public
09:20 - Boolean whoops public
09:23 - Boolean um saying whether or not the
09:26 - turret is upgraded so we're going to
09:28 - default that TOA
09:30 - and then we're going to switch it down
09:31 - here so let's first of all set is
09:34 - upgraded to True whoops this is inside
09:37 - of the build tet we want to do that down
09:39 - here we want to set is upgraded to True
09:42 - whenever we are done
09:43 - upgrading
09:45 - and okay so all of that is great and
09:50 - then let's see here we also want to get
09:53 - rid of the old turret and currently
09:55 - blueprint here um is actually called
09:58 - turret blueprint so let's just go ahead
10:00 - and change that so this is going to be
10:02 - turret
10:04 - blueprint there we go there we go and
10:06 - there we go and uh here before
10:09 - instantiating the new turret let's get
10:10 - rid of the old run so we just go destroy
10:15 - turret and it's already a game object so
10:17 - we can simply go like that so get rid of
10:21 - the old
10:24 - turret and here we
10:28 - are building a new
10:32 - one awesome so all we really need to do
10:36 - now is have some way of calling this
10:38 - function because it should totally work
10:41 - however we don't call it from anywhere
10:43 - and one thing we of course we run into
10:46 - is the fact that we haven't up uh added
10:48 - the upgrade cost added the upgrade cost
10:52 - and the upgraded prefa um variables to
10:55 - our turd blueprint so let's do that
10:57 - first so let's go and find find our
10:59 - third blueprint script and let's just
11:02 - add two new variables just the exact
11:04 - same way that we have our two previous
11:06 - one we are going to have a public game
11:08 - object which is going to be the
11:10 - upgraded upgraded prefab and we are
11:14 - going to have a public in with the uh
11:17 - upgrade
11:18 - cost there we go and you could
11:21 - essentially make a system for upgrading
11:23 - turrets infinitely by simply uh adding
11:26 - on to their um variables so we could
11:28 - just increase their damage by a fixed
11:30 - amount and the range by a fixed amount
11:33 - but I think that we're going to limit
11:34 - ourselves to have uh every turret have
11:36 - like two versions a non-upgraded and an
11:39 - upgraded you could also create an array
11:41 - or a list of turrets uh that you cycle
11:44 - through so first step you have the
11:46 - Second Step third step and um every and
11:50 - you can adjust the uh cost and uh edit
11:52 - every game object for each step and that
11:55 - would of course mean a fixed amount of
11:57 - upgrades but it would meaning uh mean
11:59 - that you have more than one I think
12:01 - we're going to stick to the simple
12:02 - approach because well we've done that
12:04 - all the way through and I think it's
12:06 - worked out just fine but that is
12:08 - something that you should definitely
12:09 - experiment on your own I believe with
12:11 - the tools that you've gotten from the
12:13 - series so far that you should be able to
12:14 - do that so um of course if you run into
12:17 - problems doing something like that you
12:19 - can always visit the um breis Forum at
12:22 - forum. bre.com uh where people really
12:25 - want to help you with that kind of stuff
12:27 - so uh yeah so now we can save this and
12:31 - uh we should get rid of those errors in
12:34 - here and we have so that's awesome so
12:37 - again we just need to call this upgrade
12:39 - tet function and when do we want to do
12:42 - that well we want to do that whenever we
12:44 - press the upgrade button so in case
12:46 - we've instantiated a turret we've
12:48 - selected it and we' pressed the upgrade
12:50 - button that is when we want this stuff
12:52 - to happen so let's uh create some
12:55 - functionality for this so let's find our
12:57 - node UI and let's um uh double click
13:01 - that to open it up in monu develop in
13:03 - Visual Studio I'm sorry and in here
13:06 - whenever we set the target we don't want
13:08 - to do anything we want to create a
13:10 - public void here called
13:14 - upgrade and we want to hook this up to
13:16 - our button so that whenever we press our
13:18 - button it will call this function right
13:21 - here and this is simply going to go
13:23 - Target do upgrade Target boom that's all
13:27 - we need to do while we can also do in
13:29 - here is hide the menu right after we do
13:32 - that so we simply go build manager.
13:34 - instance do um deselect node so that
13:39 - whenever we upgrade something the menu
13:42 - doesn't stay open it's just going to uh
13:44 - close it and we're good to go you could
13:47 - also just call the height function
13:49 - directly but that will actually mess uh
13:51 - things up a bit um because the node will
13:54 - still be selected but the UI will just
13:56 - be hidden so this is the way uh you want
13:58 - to do
14:00 - it uh yeah cool I believe that's all we
14:04 - need to do so now we just need to hook
14:06 - things up our node UI is fine but we
14:09 - need to go into our shop which is under
14:12 - the overlay Canvas Shop here and we need
14:15 - to find the place where we are uh
14:17 - setting up these different turret
14:19 - Blueprints and of course we need to add
14:21 - an upgraded prefab and an upgrade cost
14:24 - so um the upgrade cost here I'm just
14:26 - going to set to something like 60 and of
14:29 - course you should definitely try this
14:30 - out turny and balance it do some math on
14:33 - it what makes sense here um uh compared
14:37 - to just buying new turrets and stuff
14:39 - like that but I'm just pulling this uh
14:41 - number out of uh out of the eror and
14:43 - then we can see um what happens with it
14:47 - and then we have an upgraded prefab and
14:49 - we need to go in and create this so
14:50 - let's find our um standard turd preat
14:53 - let's duplicate this and let's call this
14:55 - standard turret uncore upgraded
14:59 - and uh we can just drag this into the
15:01 - inspector so we can have a look at it so
15:03 - I want to bump up the range to 20 I want
15:05 - to change the fire rate to something
15:07 - like
15:08 - 1.5 and I definitely also want to edit
15:11 - the bullet prefab so let's create a
15:13 - separate prefab here uh for the bullet
15:16 - here so this is going to be be the
15:18 - bullet
15:20 - upgraded and we can go in here and drag
15:23 - our bullet in there and uh hit apply on
15:26 - that we can find our bullet upgraded
15:29 - and I want to just bump up the damage on
15:31 - this a bit to something like 70 and bump
15:35 - up the speed to something like
15:37 - 80 cool and U what we can then actually
15:40 - I don't want to bump up the speed I
15:42 - think that's fine at
15:43 - 70 um cool and then we can create some
15:47 - separate materials to make this actually
15:49 - pop so let's uh draging our bullet here
15:51 - so we can see what's going on with it
15:53 - and where is it it's it's down there so
15:55 - let's just pull it over here so we can
15:57 - see what's going on awesome so let's go
16:00 - under our materials and let's find our
16:02 - bullet material again we want to
16:04 - duplicate this control D or command D
16:06 - and do bullet uncore upgraded drag that
16:09 - onto the bullet and then let's make this
16:12 - red to really make it pop it's awesome
16:16 - and we can delete that then we can uh
16:19 - edit the materials for our standard
16:21 - turet upgraded as well you can bring in
16:23 - a new model here no one's saying that
16:25 - you shouldn't do that you can also just
16:28 - have it look the exact same but I think
16:30 - you should make something different
16:31 - about it you could display the upgrade
16:34 - level using some kind of UI but we're
16:37 - just going to be modifying the material
16:38 - and making it a bit bigger so the scale
16:40 - here I want to do 1.2.
16:43 - 2.2 H apply on
16:45 - that and I also want to edit the
16:48 - material so let's go and find our
16:49 - Imports find the standard turd go new
16:52 - materials and you can see I've already
16:54 - created a folder here called materials
16:57 - upgraded and I just want to take all of
17:00 - these duplicate them and drag them in
17:03 - there awesome so this is going to be the
17:06 - uh turd uncore upgraded uncore barrels
17:10 - this is going to be the
17:12 - turd uh
17:14 - underscore upgraded uncore Main and
17:18 - finally we are going to have the turret
17:21 - underscore um upgraded uncore
17:25 - secondary cool and then we can edit
17:27 - these so uh of course we need to drag
17:29 - them in so let's select our standard tet
17:31 - upgraded here uh let's find our uh base
17:36 - no our pot to rotate find our head here
17:39 - and let's drag this in so we're going to
17:41 - have our upgraded barrels our upgraded
17:43 - Main and I upgraded secondary and hit
17:47 - apply and you can actually go in and
17:49 - edit the base as well but I think I want
17:51 - the base to stay the same and all I
17:54 - really want to do here is find our
17:55 - secondary color and make this red
18:00 - so just to know uh just to show the user
18:02 - that there isn't a variation on this
18:04 - turret I think this combined uh with the
18:07 - scale of the turret is going to make it
18:09 - very clear which turrets are upgraded
18:12 - and which turrets are not while still
18:14 - keeping the overall look and feel of the
18:17 - turret so you can see that this is just
18:19 - another version of that
18:21 - turret cool so uh now we can select our
18:24 - shop and we can drag our upgraded prefab
18:27 - in there so that's fine our standard
18:29 - turret underscore upgraded and drag it
18:32 - in there and we should be able to play
18:34 - the missile launcher and the laser
18:36 - Beamer will do in the next video I think
18:38 - um this one is already fairly long and U
18:41 - we're not completely done yet so in the
18:43 - next video we'll uh definitely hook
18:45 - those up so uh let's try and hit play
18:48 - and uh
18:50 - let's spawn in some turs here and you
18:53 - can see currently that our upgrade cost
18:55 - doesn't update um but it should be the
18:58 - appropriate cost here you can see we're
19:00 - currently on this much money and when
19:01 - hit I hit
19:03 - upgrade oh of course we need to hook up
19:05 - our buttons as well so uh we need to go
19:08 - and find our node UI find our buttons
19:11 - and then the upgrade button and uh we
19:13 - are just going to add an onclick event
19:16 - onto this so let's hit uh plus there and
19:18 - let's um drag in our node UI and go on
19:23 - node UI and then upgrade in order to
19:26 - actually call that method that we
19:27 - created uh whenever we uh we upgrade
19:30 - stuff so let's try that again so now
19:33 - we're going to go in here create some
19:36 - turrets and I'm going to hit upgrade and
19:39 - we have another reference exception so
19:41 - that's awesome let's find out what's
19:43 - going on all right so I figured out what
19:45 - the mistake was and that's just me being
19:47 - stupid so of course inside of our node
19:50 - whenever we are building the turret we
19:52 - also need to make sure that we are
19:54 - setting the Tet blueprint equal to the
19:57 - um blueprint that was passed in there we
20:01 - go so we're passing in the blueprint of
20:03 - the turret that we want to build and we
20:06 - need to also make sure to save that on
20:08 - the Node now it's done we made the
20:10 - variable accessible but we didn't
20:12 - actually change it in any way and that
20:14 - was why we were getting that no
20:15 - reference exception so let's try this
20:18 - one more time so let's uh build three
20:20 - turrets let's try upgrading and boom
20:22 - there we go awesome so that's working
20:25 - and it's looking super super cool
20:28 - cool and you can see the second time
20:30 - here I can actually keep upgrading these
20:33 - and that's a problem and also our UI is
20:35 - currently not updating uh to show um the
20:38 - actual cost of that so that's what we're
20:40 - going to be editing now and that's the
20:42 - last thing we're going to be doing in
20:43 - this video so let's very quickly have a
20:46 - look at how we can change this so if we
20:47 - go under a node UI let's begin by
20:50 - looking at how we can make the um
20:53 - upgrade cost actually update so let's
20:56 - enable our canvas and let's also so
20:58 - remove the rotation here while we edit
21:00 - it and let's go into 2D mode so you can
21:03 - see under our upgrade button we have a
21:05 - text variable and this is containing
21:07 - both the upgrade uh title and the uh
21:11 - cost let's split this up into two
21:13 - different variable so let's have this
21:15 - one be our text and duplicate that and
21:19 - this is what this one is going to be the
21:21 - actual uh cost or
21:23 - amount and uh let's rename that to cost
21:27 - then we you can simply take the text
21:29 - here drag that up to something like
21:32 - 30.25 is going to be fine and drag our
21:35 - cost down so we split it in half and
21:38 - then we take our cost here and angle our
21:40 - text to the top and we take our text and
21:42 - angle that to the bottom there we go so
21:45 - we have the exact same thing but now
21:48 - it's split up into two different objects
21:49 - and that just makes it easier to handle
21:51 - uh inside of um visual studio so uh what
21:55 - we're going to do is take our text here
21:57 - change that to upgrade without the um
22:00 - bold tags and we can simply go in here
22:02 - and now change this to robotto bold from
22:04 - the very beginning and uh everything
22:07 - else looks good of course we want to
22:09 - update this on the sell Button as well
22:11 - so what we'll do is simply go in here
22:14 - remove the sell button duplicate the
22:16 - upgrade button and we simply go in here
22:18 - and change the text to sell change the
22:21 - cost to I don't know let's just do 50
22:25 - here and let's change the uh button name
22:28 - to
22:29 - cell cool and of course we want to
22:31 - remove the on click
22:33 - event there we go so what we then do is
22:36 - go under our node UI double click that
22:38 - and we create a reference to our text
22:40 - object containing the cost so we go
22:42 - under uh up here and include Unity
22:45 - engine. UI so we can make a reference to
22:49 - a text object so we're going to make a
22:51 - public text here which is going to be
22:53 - the upgrade upgrade cost and then when
22:58 - we set a new Target meaning that well
23:00 - we've selected a turret we're going to
23:02 - move it and we're going to set the UI to
23:05 - active and we're also going to go
23:07 - upgrade cost. text is now equal to
23:11 - Target do turret blueprint do cost and
23:15 - of course we want to add onto this the
23:18 - dollar sign there we go that's all we
23:21 - need to do there and um yeah so that
23:25 - should actually update so if we just
23:27 - make sure to drag in the UI element so
23:29 - we drag in our um and we need to find
23:32 - that so let's select our node UI let's
23:34 - drag in not the text but the cost there
23:37 - and we disabled the canvas we should see
23:40 - this working already so if we go in here
23:42 - and create a tur and this should say 60
23:45 - now and it doesn't it says a 100 so why
23:50 - does it do that let's find out so let's
23:53 - go on our shop overl Canvas Shop and
23:57 - let's let's see the upgrade cost is
23:59 - currently 60 and that's why so we using
24:02 - cost and not upgrade cost awesome so now
24:05 - we should see this working and we can
24:07 - also go under the canvas and rotate this
24:09 - on 35° again just rotate it back to
24:13 - where it was before and now we should
24:15 - this see this update here so there we go
24:18 - and if we were to spawn in a missile
24:20 - launcher which currently has an a
24:22 - default upgrade cost of zero you can see
24:24 - that it says that as well so it does
24:26 - update depending on the turn awesome so
24:30 - uh the final thing that I wanted to do
24:33 - was just make it so that we can't
24:36 - upgrade um when multiple times so we
24:39 - have upgraded one uh time and otherwise
24:42 - it's just going to disable that button
24:44 - and all we really need to do here is go
24:46 - in and use the fact that we now have a
24:48 - variable under a Target called is
24:50 - upgraded so in case we already
24:53 - upgraded then we want to disable this
24:56 - button uh and we only want to uh change
24:59 - the upgrade text here in case we're not
25:01 - so we're going to go in here create an
25:02 - uh if statement saying if target. is not
25:06 - upgraded then we want to set the upgrade
25:09 - cost.
25:11 - text and all of that and if it is so if
25:14 - it's already upgraded then we want to do
25:17 - upgrade uh cost. text and set that equal
25:20 - to um done or upgraded or maxed out or
25:26 - whatever and what we also want to do is
25:29 - create a reference to the button itself
25:31 - so that we can make it non-interactable
25:33 - so let's have a button here and we'll
25:36 - just call this upgrade
25:38 - button and all we need to do is go down
25:40 - here and say button no upgrade button
25:45 - upgrade button there we go do
25:47 - interactable equals false or true in
25:51 - this case and false in the other
25:54 - case there we go and that will just kind
25:57 - of fade the button out a little bit and
25:59 - make uh remove any hover animations and
26:01 - also make sure that it doesn't call this
26:03 - function down here um in case it's
26:05 - already upgraded so now let's try
26:08 - actually doing that so let's try and
26:09 - going in here and uh dragging in our
26:13 - upgrade button and that should be it are
26:16 - you ready I'm ready let's try it let's
26:19 - hit uh maximize and if my system doesn't
26:23 - freeze here there we go wow nerves I
26:27 - have haven't saved there we go it'sit
26:29 - maximize let's hit play and let's try
26:33 - this out so let's create three turrets
26:36 - let's select one of them let's hit
26:38 - upgrade it upgrades we can select it
26:40 - again it says upgrade done you can see
26:42 - it's a bit faded out and we can't click
26:43 - it we can still click the sell but we
26:45 - can click the upgrade and it changes for
26:48 - the other one so you can see now that we
26:50 - have a really really nice upgrade system
26:53 - in here U and that makes it very clear
26:56 - on what's going on how it how much it's
26:58 - going to cost and allows you to change a
27:01 - bunch of different parameters from uh
27:03 - Graphics to um effects to uh damage
27:08 - range and all that kind of stuff on the
27:11 - different turrets so I hope you enjoyed
27:13 - this video I'm looking forward to
27:14 - implementing the next turrets along with
27:16 - some selling of stuff in the next one so
27:19 - I guess there's only one thing left to
27:20 - say which is upgrade complete and I will
27:23 - see you in the next video thanks to all
27:25 - the awesome patreon supporters who
27:27 - donated in October and a special thanks
27:29 - to Sultan elff F marifi and James Kell
27:32 - Hound become a supporter at patreon.com
27:36 - Brees

Cleaned transcript:

this video is brought to you by sutan Al Sharif thank you so much for donating if you want to support Brees yourself you can go to patreon.com/crashcourse just a canvas with two buttons that will hover over any selected turret the first one is the upgrade button which we will make actually do something today and then in the next video we can do something with the sell button so um yeah before we get started with this I just want to fix a very quick uh little bug that I uh discovered when turning off the recording uh from the last video and that is if we currently have Play and play some turrets at the very top of our map here so let's just place some right here you can see if we try and place these at the very top of some of these nodes it's not going to give a hover animation and nothing happens when we presses it when we press it and also if we try to select one of these you can see that sometimes doesn't work it does if we click down here but not at the top so what is happening here well it's actually our top canvas that is currently overlaying our map a bit and because that has a graphic raycaster that will sometimes block uh any information about uh having clicked on an object so what we want to do is simply disable this graphic raycaster I believe you can just remove the component as well I'm just going to keep it there and that should actually fix that box so now if we go in here we should see that um everything if we select the chart everything highlights properly and that we can correctly shift between the different turrets much better awesome so what I want to begin with here is is our node script that sits on every node object in the game oops that's our enemy script our node script here and you can see quite a lot is going on in here and I actually want to add more stuff to this um because I think the current way that we are building turrets can be made made a lot more logical so if we have a look here we have a function called on Mouse down so whenever we press uh the node we check are we over any goey if we are we don't want to do anything do we really want to select this node in uh in that case then we want to do that uh can we build there if we can't then we skip out and if we pass through all of these if statement well then we're ready to build a turret and we do that by calling build turret on and then passing in the node and that uh function sits on the build manager I think it would be a lot more sensical to have this function sit on the Node itself because we have building on the Node so we might as well have the function on the Node also we're passing in an instance of uh of or a reference to this instance of the class and then we're changing stuff inside of our build manager if we go into our build manager here you can see that we are accessing turret under the node and changing that and there's no reason to do that using a reference when we can just do all of it locally so let's change this so let's go in here and create a separate function and we're just going to call this one build turret and instead of uh taking in a node we are going to take in a blueprint so we're going to take in here a turret blueprint containing the information about the turret that we want to build and let's just call this one blueprint whoops let me not mess up the parentheses there awesome so this is what we want to call down here so we want to go build turret and then we want to pass in some kind of blueprint and we will talk about where we get this from in a moment then inside of our build manager we can take all of this code copy it and delete it and delete the entire function save that and go into our node and paste that here so now we can use our blueprint instead of the turd to build so in here we go blueprint. cost um we go blueprint. cost there there as well we go instantiate blueprint. prefab and we want to use get build position but we don't need to reference it through a node now so you can see we are removing a lot of unnecessary references here so again we don't want to go node. turret and uh currently these are both called turret our turret up here and the temporary turret right here so let's just go ahead and rename this to underscore turret and do that there as well so we can distinguish between the turret we just instantiated and our local field variable up there then we have the effect here and we want to uh instantiate a build effect and we could either have this sit on the blueprint as well that would make sense because then you would be able to have different effects for different turrets when building them but since we don't want to create that let's just have this still sit on the game um on on the build manager so in that case we could simply go build manager. build effect and because this is a public variable that's totally accessible and again we our gu get build position here is just a local uh function so we don't need a reference and everything else looks fine I also want to remove this money left thing because we now have a money this counter so we can just display turet build cool so this function should actually work just fine now however we still need to pass in the correct blueprint and this of course sits on the build manager our build manager is responsible for figuring out what to build next so he has a variable called turn to build and instead of making this public which means that we could then also change it from outside of the script let's just have a function called um get tur to build so we simply go down here just like we have a select turr to build and again this is why we don't want to make it public publicly accessible that means that we would be able to change it without also deselecting nodes and we don't want to do that we want to always deselect our notes when we change the tur to bill so let's just make another public void here and actually it's not going to be a public void it's going to be a public turret blueprint called get turret to build and this is simply going to return the turret to build there we go it's that easy so inside of our node now we go build turret and then we go build manager. get turet to build cool so now things should be working and we can definitely try this out so let's just hit play and let's try building some turrets and you can see that works just fine so now that we have our code grouped a little more logically we can also go ahead and add a functionality as well so we have our build turret let's also make a public and this time I want it to be public because we want this to be called from without the class and this is going to be a public void called upgrade actually let's do upgrade turret just to be very specific on what's going on and in here we are essentially want to do a lot of the same stuff so let's just take off this code and then edit it a tiny bit so if player stats. money is less than blue print Dot and then we want to have an upgrade cost and uh if it's not well then we want to say not enough money to upgrade that and then return we also want to subtract our upgrade cost and we're going to be making this variable in a second and the thing that we want to build is no longer blueprint. prefab we want to instead build blueprint. um upgraded prefab and the same build position and everything we can also have a separate effect right now we're just using build manager. build effect we could also have a build manager. upgrade effect if you want that to look different but I think the build effect looks really cool and I think it would work fine for upgrades so far but you can definitely go in and change this and then we want to say debug.log turret upgraded however remember we currently have a turret there already so we can't just instance the upgraded turret then we are going to have two turrets sitting there we also need to get rid of the previous version so in order to do that we use the fact that we have a reference to that turret right up here and what I also want to do is I want to go in here and uh instead of having this as an optional uh optional variable I actually want to make this noneditable I want to hide this in the inspector and remember you can use this whenever you need a public variable that you can access from anywhere but that you don't want people to edit inside of the inspector and this is one of those and we're going to have multiple we're also going to have a public uh turd blueprint which is going to be our current turet blueprint and we also going to have an a third one which is going to be a public Boolean whoops public Boolean um saying whether or not the turret is upgraded so we're going to default that TOA and then we're going to switch it down here so let's first of all set is upgraded to True whoops this is inside of the build tet we want to do that down here we want to set is upgraded to True whenever we are done upgrading and okay so all of that is great and then let's see here we also want to get rid of the old turret and currently blueprint here um is actually called turret blueprint so let's just go ahead and change that so this is going to be turret blueprint there we go there we go and there we go and uh here before instantiating the new turret let's get rid of the old run so we just go destroy turret and it's already a game object so we can simply go like that so get rid of the old turret and here we are building a new one awesome so all we really need to do now is have some way of calling this function because it should totally work however we don't call it from anywhere and one thing we of course we run into is the fact that we haven't up uh added the upgrade cost added the upgrade cost and the upgraded prefa um variables to our turd blueprint so let's do that first so let's go and find find our third blueprint script and let's just add two new variables just the exact same way that we have our two previous one we are going to have a public game object which is going to be the upgraded upgraded prefab and we are going to have a public in with the uh upgrade cost there we go and you could essentially make a system for upgrading turrets infinitely by simply uh adding on to their um variables so we could just increase their damage by a fixed amount and the range by a fixed amount but I think that we're going to limit ourselves to have uh every turret have like two versions a nonupgraded and an upgraded you could also create an array or a list of turrets uh that you cycle through so first step you have the Second Step third step and um every and you can adjust the uh cost and uh edit every game object for each step and that would of course mean a fixed amount of upgrades but it would meaning uh mean that you have more than one I think we're going to stick to the simple approach because well we've done that all the way through and I think it's worked out just fine but that is something that you should definitely experiment on your own I believe with the tools that you've gotten from the series so far that you should be able to do that so um of course if you run into problems doing something like that you can always visit the um breis Forum at forum. bre.com uh where people really want to help you with that kind of stuff so uh yeah so now we can save this and uh we should get rid of those errors in here and we have so that's awesome so again we just need to call this upgrade tet function and when do we want to do that well we want to do that whenever we press the upgrade button so in case we've instantiated a turret we've selected it and we' pressed the upgrade button that is when we want this stuff to happen so let's uh create some functionality for this so let's find our node UI and let's um uh double click that to open it up in monu develop in Visual Studio I'm sorry and in here whenever we set the target we don't want to do anything we want to create a public void here called upgrade and we want to hook this up to our button so that whenever we press our button it will call this function right here and this is simply going to go Target do upgrade Target boom that's all we need to do while we can also do in here is hide the menu right after we do that so we simply go build manager. instance do um deselect node so that whenever we upgrade something the menu doesn't stay open it's just going to uh close it and we're good to go you could also just call the height function directly but that will actually mess uh things up a bit um because the node will still be selected but the UI will just be hidden so this is the way uh you want to do it uh yeah cool I believe that's all we need to do so now we just need to hook things up our node UI is fine but we need to go into our shop which is under the overlay Canvas Shop here and we need to find the place where we are uh setting up these different turret Blueprints and of course we need to add an upgraded prefab and an upgrade cost so um the upgrade cost here I'm just going to set to something like 60 and of course you should definitely try this out turny and balance it do some math on it what makes sense here um uh compared to just buying new turrets and stuff like that but I'm just pulling this uh number out of uh out of the eror and then we can see um what happens with it and then we have an upgraded prefab and we need to go in and create this so let's find our um standard turd preat let's duplicate this and let's call this standard turret uncore upgraded and uh we can just drag this into the inspector so we can have a look at it so I want to bump up the range to 20 I want to change the fire rate to something like 1.5 and I definitely also want to edit the bullet prefab so let's create a separate prefab here uh for the bullet here so this is going to be be the bullet upgraded and we can go in here and drag our bullet in there and uh hit apply on that we can find our bullet upgraded and I want to just bump up the damage on this a bit to something like 70 and bump up the speed to something like 80 cool and U what we can then actually I don't want to bump up the speed I think that's fine at 70 um cool and then we can create some separate materials to make this actually pop so let's uh draging our bullet here so we can see what's going on with it and where is it it's it's down there so let's just pull it over here so we can see what's going on awesome so let's go under our materials and let's find our bullet material again we want to duplicate this control D or command D and do bullet uncore upgraded drag that onto the bullet and then let's make this red to really make it pop it's awesome and we can delete that then we can uh edit the materials for our standard turet upgraded as well you can bring in a new model here no one's saying that you shouldn't do that you can also just have it look the exact same but I think you should make something different about it you could display the upgrade level using some kind of UI but we're just going to be modifying the material and making it a bit bigger so the scale here I want to do 1.2. 2.2 H apply on that and I also want to edit the material so let's go and find our Imports find the standard turd go new materials and you can see I've already created a folder here called materials upgraded and I just want to take all of these duplicate them and drag them in there awesome so this is going to be the uh turd uncore upgraded uncore barrels this is going to be the turd uh underscore upgraded uncore Main and finally we are going to have the turret underscore um upgraded uncore secondary cool and then we can edit these so uh of course we need to drag them in so let's select our standard tet upgraded here uh let's find our uh base no our pot to rotate find our head here and let's drag this in so we're going to have our upgraded barrels our upgraded Main and I upgraded secondary and hit apply and you can actually go in and edit the base as well but I think I want the base to stay the same and all I really want to do here is find our secondary color and make this red so just to know uh just to show the user that there isn't a variation on this turret I think this combined uh with the scale of the turret is going to make it very clear which turrets are upgraded and which turrets are not while still keeping the overall look and feel of the turret so you can see that this is just another version of that turret cool so uh now we can select our shop and we can drag our upgraded prefab in there so that's fine our standard turret underscore upgraded and drag it in there and we should be able to play the missile launcher and the laser Beamer will do in the next video I think um this one is already fairly long and U we're not completely done yet so in the next video we'll uh definitely hook those up so uh let's try and hit play and uh let's spawn in some turs here and you can see currently that our upgrade cost doesn't update um but it should be the appropriate cost here you can see we're currently on this much money and when hit I hit upgrade oh of course we need to hook up our buttons as well so uh we need to go and find our node UI find our buttons and then the upgrade button and uh we are just going to add an onclick event onto this so let's hit uh plus there and let's um drag in our node UI and go on node UI and then upgrade in order to actually call that method that we created uh whenever we uh we upgrade stuff so let's try that again so now we're going to go in here create some turrets and I'm going to hit upgrade and we have another reference exception so that's awesome let's find out what's going on all right so I figured out what the mistake was and that's just me being stupid so of course inside of our node whenever we are building the turret we also need to make sure that we are setting the Tet blueprint equal to the um blueprint that was passed in there we go so we're passing in the blueprint of the turret that we want to build and we need to also make sure to save that on the Node now it's done we made the variable accessible but we didn't actually change it in any way and that was why we were getting that no reference exception so let's try this one more time so let's uh build three turrets let's try upgrading and boom there we go awesome so that's working and it's looking super super cool cool and you can see the second time here I can actually keep upgrading these and that's a problem and also our UI is currently not updating uh to show um the actual cost of that so that's what we're going to be editing now and that's the last thing we're going to be doing in this video so let's very quickly have a look at how we can change this so if we go under a node UI let's begin by looking at how we can make the um upgrade cost actually update so let's enable our canvas and let's also so remove the rotation here while we edit it and let's go into 2D mode so you can see under our upgrade button we have a text variable and this is containing both the upgrade uh title and the uh cost let's split this up into two different variable so let's have this one be our text and duplicate that and this is what this one is going to be the actual uh cost or amount and uh let's rename that to cost then we you can simply take the text here drag that up to something like 30.25 is going to be fine and drag our cost down so we split it in half and then we take our cost here and angle our text to the top and we take our text and angle that to the bottom there we go so we have the exact same thing but now it's split up into two different objects and that just makes it easier to handle uh inside of um visual studio so uh what we're going to do is take our text here change that to upgrade without the um bold tags and we can simply go in here and now change this to robotto bold from the very beginning and uh everything else looks good of course we want to update this on the sell Button as well so what we'll do is simply go in here remove the sell button duplicate the upgrade button and we simply go in here and change the text to sell change the cost to I don't know let's just do 50 here and let's change the uh button name to cell cool and of course we want to remove the on click event there we go so what we then do is go under our node UI double click that and we create a reference to our text object containing the cost so we go under uh up here and include Unity engine. UI so we can make a reference to a text object so we're going to make a public text here which is going to be the upgrade upgrade cost and then when we set a new Target meaning that well we've selected a turret we're going to move it and we're going to set the UI to active and we're also going to go upgrade cost. text is now equal to Target do turret blueprint do cost and of course we want to add onto this the dollar sign there we go that's all we need to do there and um yeah so that should actually update so if we just make sure to drag in the UI element so we drag in our um and we need to find that so let's select our node UI let's drag in not the text but the cost there and we disabled the canvas we should see this working already so if we go in here and create a tur and this should say 60 now and it doesn't it says a 100 so why does it do that let's find out so let's go on our shop overl Canvas Shop and let's let's see the upgrade cost is currently 60 and that's why so we using cost and not upgrade cost awesome so now we should see this working and we can also go under the canvas and rotate this on 35° again just rotate it back to where it was before and now we should this see this update here so there we go and if we were to spawn in a missile launcher which currently has an a default upgrade cost of zero you can see that it says that as well so it does update depending on the turn awesome so uh the final thing that I wanted to do was just make it so that we can't upgrade um when multiple times so we have upgraded one uh time and otherwise it's just going to disable that button and all we really need to do here is go in and use the fact that we now have a variable under a Target called is upgraded so in case we already upgraded then we want to disable this button uh and we only want to uh change the upgrade text here in case we're not so we're going to go in here create an uh if statement saying if target. is not upgraded then we want to set the upgrade cost. text and all of that and if it is so if it's already upgraded then we want to do upgrade uh cost. text and set that equal to um done or upgraded or maxed out or whatever and what we also want to do is create a reference to the button itself so that we can make it noninteractable so let's have a button here and we'll just call this upgrade button and all we need to do is go down here and say button no upgrade button upgrade button there we go do interactable equals false or true in this case and false in the other case there we go and that will just kind of fade the button out a little bit and make uh remove any hover animations and also make sure that it doesn't call this function down here um in case it's already upgraded so now let's try actually doing that so let's try and going in here and uh dragging in our upgrade button and that should be it are you ready I'm ready let's try it let's hit uh maximize and if my system doesn't freeze here there we go wow nerves I have haven't saved there we go it'sit maximize let's hit play and let's try this out so let's create three turrets let's select one of them let's hit upgrade it upgrades we can select it again it says upgrade done you can see it's a bit faded out and we can't click it we can still click the sell but we can click the upgrade and it changes for the other one so you can see now that we have a really really nice upgrade system in here U and that makes it very clear on what's going on how it how much it's going to cost and allows you to change a bunch of different parameters from uh Graphics to um effects to uh damage range and all that kind of stuff on the different turrets so I hope you enjoyed this video I'm looking forward to implementing the next turrets along with some selling of stuff in the next one so I guess there's only one thing left to say which is upgrade complete and I will see you in the next video thanks to all the awesome patreon supporters who donated in October and a special thanks to Sultan elff F marifi and James Kell Hound become a supporter at patreon.com Brees
