With timestamps:

00:00 - thanks for tuning in at brakus hello
00:04 - everyone and welcome to the second video
00:06 - in the going to the short series today
00:09 - we are going to be taking a look at
00:10 - making player control so that's gonna be
00:13 - really awesome and you might notice that
00:15 - in the 2d assets pack available on
00:18 - Frankie's comm we have a 2d character
00:22 - controller now which is great for 2d
00:24 - platformer games and this was originally
00:27 - made by Mike dis arrow so thanks to him
00:30 - now let's get started with today's video
00:33 - so as always I've opened up unity and if
00:36 - we first off go ahead and focus on the
00:38 - player so what we're gonna do is we're
00:41 - gonna add a box Collider so go to add
00:44 - component and you can see that's a new
00:46 - tab called physics 2d let's select this
00:49 - and hit the box Collider now we can go
00:54 - ahead and adjust the size it didn't do
00:56 - this automatically because I've added
00:58 - this shadowing effect so it thinks that
01:01 - the image starts out here so we're just
01:04 - gonna shrink this down a bit first off
01:07 - the size on the x-axis is going to be
01:10 - zero point 2 4 and the size on the
01:17 - y-axis is going to be 2 points I believe
01:22 - it's 6 8 nope 8 6 there we have it and
01:27 - that looks really precise and you can of
01:31 - course zoom in and edit it further
01:33 - now now we can just go ahead and add the
01:36 - script so let's hit add component new
01:39 - script and let's call this player
01:43 - controls and we're gonna make it a type
01:47 - JavaScript throughout this short series
01:50 - we're going to be using JavaScript
01:52 - because I find it easiest for complete
01:55 - beginners to learn and this is mostly
01:57 - for beginners to intermediate users but
02:00 - you can of course go ahead and convert
02:01 - it to c-sharp and it will work just fine
02:04 - let's hit create an ad and double-click
02:07 - it to open it up in monodevelop for the
02:10 - new monodevelop looks way cleaner
02:13 - and has a much yeah a much more clean
02:16 - interface let's first off delete the
02:19 - function start because we're not gonna
02:20 - need it now we can go ahead and declare
02:22 - some variables so let's type var move up
02:29 - what we're going to do is we're going to
02:31 - store what keys we want to press in
02:33 - order for players to move up and down as
02:35 - variables a lot of people don't know
02:38 - that you can do this but it's really
02:40 - handy because we need two players each
02:42 - with their set of controls and we don't
02:44 - want to manage inputs controls or create
02:47 - several script for that instead we can
02:49 - just store it as a variable so we're
02:52 - gonna do type key code and then make
02:55 - another variable called move down which
02:58 - is also gonna be of type key code at
03:01 - last we're gonna create a third variable
03:03 - called speed and let's do a type float
03:07 - and we're just gonna set that equal to
03:10 - ten by default now in the function
03:14 - update let's create the if statements
03:16 - that are going to check for input so if
03:19 - input dot get key and then we're gonna
03:25 - open up a parenthesis and type move up
03:27 - so if we press the move up key
03:30 - something's gonna happen then let's do
03:36 - else if input dot get key and this time
03:46 - we're gonna type move down so if we
03:49 - press the down key something something
03:52 - else is gonna happen and at last we want
03:56 - in an else statement and the reason for
03:59 - this is that we are not going to be
04:00 - adding force to a player instead we're
04:04 - going to access the velocity directly
04:07 - this will allow us to get the really
04:09 - tight and snappy controls which is which
04:12 - are usually in old-school arcade games
04:15 - and not those floaty annoying kinds of
04:17 - controls but it also means that once we
04:21 - have set the velocity it will stay the
04:24 - same because it's not affected by
04:25 - gravity or any other force
04:27 - so basically once we press a key the
04:31 - player will just keep on moving and we
04:34 - want him to stop whenever we don't press
04:37 - anything so we are going to do else and
04:40 - in here we can set the velocity to be
04:44 - zero but before we can change the
04:46 - velocity at all we need to add a
04:49 - rigidbody so let's head back into unity
04:52 - and see that the variables now appear
04:55 - let's select the move up and change it
04:58 - to W because this is the player on the
05:01 - left and I want that to be W there and
05:04 - they move down to s the speed we're just
05:12 - gonna leave that at 10 now we can go
05:14 - ahead and hit add component physics to D
05:17 - and then rigidbody 2d you can see that a
05:22 - lot of these settings are just like the
05:24 - old rigidbody component we're gonna
05:26 - start off by changing the gravity scale
05:28 - to zero because we don't want the heat
05:30 - player to fall to the ground also we're
05:34 - gonna check fixed angle which is a
05:36 - really new awesome feature making our
05:40 - object stationary on the rotation
05:43 - meaning that it won't just rotate when
05:45 - we play the game now we can go ahead and
05:48 - open up the script again and unity has
05:52 - made the naming of their new functions
05:54 - really easy to remember basically once
05:57 - you want to do something 2d space if ik
05:59 - like axis seeing a 2d rigidbody all we
06:03 - have to do is type what we used to type
06:05 - and then put 2d after so if we want to
06:08 - access the rigidbody we could just gonna
06:10 - do rigid body and then put 2d after then
06:18 - we're gonna do dot velocity and then
06:20 - we're gonna do the y axis because that's
06:23 - the up and down and we're gonna set that
06:25 - speed you're gonna do the same in the
06:28 - next one
06:30 - rigidbody 2d dot velocity dot y equal
06:35 - speed but we want to reverse the
06:38 - direction we want this to go downwards
06:40 - so what
06:41 - we can do is we can say speed times
06:43 - minus one so by multiplying with minus
06:47 - one we reverse the variable speed thus
06:51 - our object will move downwards in the
06:54 - else statement here we're going to type
06:56 - rigidbody2d
06:58 - dot velocity dot y and then just equal
07:03 - it to zero this way our object one move
07:07 - now we can go in and play with our
07:10 - controls sorry it play and now we can
07:12 - move up and down so this is working just
07:15 - how we want it you can easily duplicate
07:18 - the kid the player and change the move
07:21 - up and down and now we have two players
07:23 - you will also notice that we can move
07:26 - off-screen this is something we are
07:28 - going to change in an upcoming video
07:30 - where I'm going to show you a cool
07:33 - script I made where it will
07:34 - automatically adjust colliders or
07:37 - boundary boxes that they are also known
07:39 - to fit the screen size so that's gonna
07:43 - be really awesome thank you for watching
07:45 - this video and I'll see you in the next
07:47 - one
07:47 - [Music]

Cleaned transcript:

thanks for tuning in at brakus hello everyone and welcome to the second video in the going to the short series today we are going to be taking a look at making player control so that's gonna be really awesome and you might notice that in the 2d assets pack available on Frankie's comm we have a 2d character controller now which is great for 2d platformer games and this was originally made by Mike dis arrow so thanks to him now let's get started with today's video so as always I've opened up unity and if we first off go ahead and focus on the player so what we're gonna do is we're gonna add a box Collider so go to add component and you can see that's a new tab called physics 2d let's select this and hit the box Collider now we can go ahead and adjust the size it didn't do this automatically because I've added this shadowing effect so it thinks that the image starts out here so we're just gonna shrink this down a bit first off the size on the xaxis is going to be zero point 2 4 and the size on the yaxis is going to be 2 points I believe it's 6 8 nope 8 6 there we have it and that looks really precise and you can of course zoom in and edit it further now now we can just go ahead and add the script so let's hit add component new script and let's call this player controls and we're gonna make it a type JavaScript throughout this short series we're going to be using JavaScript because I find it easiest for complete beginners to learn and this is mostly for beginners to intermediate users but you can of course go ahead and convert it to csharp and it will work just fine let's hit create an ad and doubleclick it to open it up in monodevelop for the new monodevelop looks way cleaner and has a much yeah a much more clean interface let's first off delete the function start because we're not gonna need it now we can go ahead and declare some variables so let's type var move up what we're going to do is we're going to store what keys we want to press in order for players to move up and down as variables a lot of people don't know that you can do this but it's really handy because we need two players each with their set of controls and we don't want to manage inputs controls or create several script for that instead we can just store it as a variable so we're gonna do type key code and then make another variable called move down which is also gonna be of type key code at last we're gonna create a third variable called speed and let's do a type float and we're just gonna set that equal to ten by default now in the function update let's create the if statements that are going to check for input so if input dot get key and then we're gonna open up a parenthesis and type move up so if we press the move up key something's gonna happen then let's do else if input dot get key and this time we're gonna type move down so if we press the down key something something else is gonna happen and at last we want in an else statement and the reason for this is that we are not going to be adding force to a player instead we're going to access the velocity directly this will allow us to get the really tight and snappy controls which is which are usually in oldschool arcade games and not those floaty annoying kinds of controls but it also means that once we have set the velocity it will stay the same because it's not affected by gravity or any other force so basically once we press a key the player will just keep on moving and we want him to stop whenever we don't press anything so we are going to do else and in here we can set the velocity to be zero but before we can change the velocity at all we need to add a rigidbody so let's head back into unity and see that the variables now appear let's select the move up and change it to W because this is the player on the left and I want that to be W there and they move down to s the speed we're just gonna leave that at 10 now we can go ahead and hit add component physics to D and then rigidbody 2d you can see that a lot of these settings are just like the old rigidbody component we're gonna start off by changing the gravity scale to zero because we don't want the heat player to fall to the ground also we're gonna check fixed angle which is a really new awesome feature making our object stationary on the rotation meaning that it won't just rotate when we play the game now we can go ahead and open up the script again and unity has made the naming of their new functions really easy to remember basically once you want to do something 2d space if ik like axis seeing a 2d rigidbody all we have to do is type what we used to type and then put 2d after so if we want to access the rigidbody we could just gonna do rigid body and then put 2d after then we're gonna do dot velocity and then we're gonna do the y axis because that's the up and down and we're gonna set that speed you're gonna do the same in the next one rigidbody 2d dot velocity dot y equal speed but we want to reverse the direction we want this to go downwards so what we can do is we can say speed times minus one so by multiplying with minus one we reverse the variable speed thus our object will move downwards in the else statement here we're going to type rigidbody2d dot velocity dot y and then just equal it to zero this way our object one move now we can go in and play with our controls sorry it play and now we can move up and down so this is working just how we want it you can easily duplicate the kid the player and change the move up and down and now we have two players you will also notice that we can move offscreen this is something we are going to change in an upcoming video where I'm going to show you a cool script I made where it will automatically adjust colliders or boundary boxes that they are also known to fit the screen size so that's gonna be really awesome thank you for watching this video and I'll see you in the next one
