With timestamps:

00:00 - hello everyone and welcome to this video
00:01 - on creating a high score for your game
00:02 - in this video we are going to explore
00:04 - some simple techniques for storing data
00:05 - on your system to do that we'll be using
00:07 - unity building player prefs
00:09 - something that's pretty easy to use but
00:10 - can come in really really handy all
00:12 - right let's get started
00:13 - so as you can see I've set up this test
00:15 - scene with a few UI pieces first up we
00:17 - have the road dice button whenever you
00:18 - press this we want the number to change
00:20 - to a random number between 1 and 6 we
00:22 - also have the high score which is going
00:23 - to display the largest number that we
00:25 - have so far so whenever our score is
00:27 - greater than the high score we'll set
00:29 - our high score equal to that number and
00:31 - then finally we have a button for
00:32 - resetting our high score so let's make
00:34 - these things actually do something let's
00:36 - begin by creating an empty object let's
00:38 - reset the transform and call this one
00:40 - dice we also add a component to this and
00:43 - call that dice as well I'm going to
00:44 - choose c-sharp and they create an ADD
00:46 - let's double click it to open it up in
00:48 - Visual Studio let's remove the two using
00:50 - tags up here and both the methods so the
00:52 - first thing we need to do is change our
00:54 - score text to do that we need a
00:56 - reference to the text object and it's
00:57 - using this unity GUI system so remember
00:59 - whenever we code for the unity GUI we
01:01 - need to go up here and say using unity
01:04 - engine UI we're now able to make a
01:06 - variable of type text and we'll call it
01:09 - our score of course you need to make
01:11 - sure that this is marked as public and
01:13 - this way when we save it and go back
01:14 - into unity we can take this score object
01:17 - and simply drag it in now in order to
01:19 - update this we need to make a method
01:21 - let's go void let's call it something
01:23 - like update score or roll dice we can
01:27 - then get a random number we do that by
01:29 - going random range and the number we
01:32 - want to get is between 1 and this is
01:34 - inclusive and then 7 and this is
01:36 - exclusive this way we can get the
01:38 - numbers 1 2 3 4 5 & 6 but not the number
01:42 - 7 we can then store this in a temporary
01:44 - variable so let's write integer and
01:46 - let's give this variable a name say
01:48 - let's just call it number so we're now
01:50 - creating an integer variable code number
01:52 - and giving it a random number between 1
01:54 - and 6 we can then set score text equal
01:58 - to that number however there is one
02:00 - slight problem with this and that is
02:02 - that our number is currently an integer
02:04 - whereas our text is a string so we need
02:07 - to convert from one data type to another
02:09 - luckily converting to strings is really
02:12 - see all we need to do is write dot to
02:14 - string and then to parentheses and this
02:16 - function will go ahead and convert the
02:18 - number into a string so everything adds
02:20 - up we now save this heading to unity and
02:22 - of course nothing is going to happen so
02:24 - far because we are not actually calling
02:26 - the function we've made the function but
02:28 - we need to also trigger it to do that we
02:30 - use a button event let's find our roll
02:32 - dice button and this is just an ordinary
02:33 - button we go ahead and add an on-click
02:36 - event by hitting the plus we drag in the
02:38 - dice where script is sitting then if we
02:40 - go here and select a function we can go
02:41 - under the die script and select one but
02:43 - you can see that our function is not
02:45 - currently visible that's because we also
02:46 - need to mark the function as public
02:48 - let's go into visual studio and insert
02:50 - public again save that and when we now
02:53 - go into unity we can see that under dice
02:55 - there's now a function called Road dice
02:57 - alright so when we hit play we are now
02:59 - able to roll the dice and get a random
03:01 - number and displayed on this screen but
03:03 - how do we store this as a high score to
03:05 - do that we use what is called player
03:07 - press player perhaps it's a data
03:09 - civilization tool built into unity that
03:11 - means that it's a way for unity to store
03:13 - pieces of data somewhere on our system
03:15 - that means the during our game we can
03:17 - set certain values and then load them
03:19 - back in at a later time and so we can
03:20 - have data persist from one game play
03:22 - session to another as long as it's on
03:24 - the same computer taking advantage of
03:26 - player press it's actually really easy
03:28 - to set a number we go player press dot
03:31 - set integer note that you can also set
03:34 - floats or strings but we'll set integer
03:37 - and this is a function that takes in two
03:39 - values the first one is a key this is
03:42 - simply a string that makes the name of
03:44 - the variable so in our case we could
03:45 - call it something like high score we
03:47 - then write comma and feed it the value
03:49 - in our case the value is going to be
03:51 - number whatever number we rolled if we
03:53 - then want it at a later point to get
03:55 - this value we use player proofs get an
03:58 - example of this could be at the
03:59 - beginning of our game we could do this
04:01 - in the start method which is called
04:03 - whenever we start the game we could
04:05 - display our high score so of course we
04:06 - need a reference to a high score text
04:08 - object so let's create another public
04:10 - text and call this one high score and
04:12 - then in the start method we'll set high
04:14 - score dot text equal to and then we use
04:17 - player press dot get int and as the key
04:21 - we need to write the exact same as we
04:23 - did down here or else it's
04:24 - going to work so I'm just going to copy
04:25 - it and that's all we need to do only of
04:28 - course this is again returning an
04:29 - integer and high score text is requiring
04:32 - a string so we need to again follow this
04:34 - up with dot to string so what we should
04:37 - see now is that whenever we roll the
04:39 - dice we're going to display a random
04:41 - number and store that number on the
04:43 - computer as high score then the next
04:45 - time we start the game we're going to
04:46 - set a high score text equal to that high
04:49 - score number but of course the first
04:50 - time we start our game that isn't going
04:52 - to be a high score stored and so we need
04:55 - to give this some kind of default value
04:57 - and that's really easy all we do inside
04:59 - of a get in method is write a comma and
05:01 - then the default value we want and we're
05:03 - just going to set that to zero let's
05:05 - save this and see if it works of course
05:07 - make sure to select the dice and drag in
05:09 - the high score text to swap so we can
05:11 - play we can see that at first our high
05:13 - score sets itself to zero
05:15 - we then roll the dice and our high score
05:17 - is not going to update yet
05:19 - but if we then exit play mode and play
05:21 - again it's going to remember that value
05:23 - but there are a few problems with this
05:25 - first off we want the high score to
05:27 - update as soon as we roll the dice but
05:29 - we also only wanted to update if we get
05:31 - a value that's larger right now if we
05:33 - roll the dice and get say the value 2
05:36 - that's what it's going to remember so if
05:38 - we go back here and hit play it should
05:39 - now display 2 and of course we never
05:41 - want a high score to decrease to fix
05:43 - this again we go into visual studio we
05:46 - go down here to where it sets our high
05:47 - score and we simply check if the number
05:49 - we rolled is bigger than our current
05:51 - high score to do that rewrite if then
05:54 - number and we want to check if that's
05:56 - greater than and then we get a high
05:57 - score so we'd write player press and the
06:00 - key is high school and then again a
06:01 - default value of zero and that's it so
06:04 - if this if statement is true it means
06:06 - that we've beaten our high score and so
06:08 - we can go ahead and set it to the new
06:10 - number we could also add some kind of
06:12 - effect here congratulating the player on
06:14 - beating the score finally we probably
06:16 - also want to update the high score right
06:18 - away and not wait until we reboot the
06:20 - game to do that we just set high score
06:22 - equal to the number we wrote again we
06:24 - only want to do this if we roll the
06:27 - greater number and again remember to put
06:28 - two strings here so if we now save and
06:31 - hit back into unity our high score
06:32 - system should actually be complete so
06:34 - currently our high score is two if we
06:36 - roll the dice and get a six you can see
06:38 - it updating but if you roll the dice
06:39 - again and get a one it stays at six and
06:42 - if we exit the game and play it again we
06:45 - can see that our high score still
06:46 - remembers the six but what if we want to
06:48 - reset our high score this is really
06:50 - really handy when debugging but
06:52 - sometimes you also want players to be
06:53 - able to reset their settings and start
06:55 - over doing that is really really simple
06:57 - all we need to do is go in and add
06:59 - another function we'll also make this a
07:01 - public voice so we can trigger it using
07:03 - the button and we'll call it something
07:04 - like reset we can then open and close
07:07 - some curly brackets and in here we'll
07:09 - write player press Delete and here we
07:12 - have the possibility of deleting a
07:13 - specific key in our case we would go in
07:15 - and say delete key and then high score
07:18 - and this would work just fine
07:20 - or we can delete all of the save
07:22 - settings of course use this with caution
07:24 - if you're also storing other stuff like
07:26 - player usernames progress data or
07:29 - anything else it will be deleted but I
07:31 - like living on the edge so I'm just
07:32 - going to write the lead all let's save
07:34 - this and in unity we now need to add
07:36 - this to the onclick event so let's go
07:38 - into the reset button let's add an on
07:40 - click event
07:41 - let's drag in our dice and this time as
07:43 - the function we are not going to select
07:44 - row dice what we set and so when we hit
07:47 - play we can still roll the dice and
07:48 - everything but as soon as we hit reset
07:51 - it's going to reset our high score of
07:52 - course we can't see this because we are
07:54 - updating the text object but if we go
07:56 - out of play mode and go back in we can
07:58 - see that it sets itself back to zero and
08:00 - so all we need to do is just add high
08:03 - score text equals and then we'll write a
08:06 - zero here of course the quotation marks
08:08 - are still there because we want it to be
08:09 - a string now we can actually visually
08:11 - see that it resets that said play roll
08:14 - the dice
08:15 - reset the high score roll it again and
08:17 - you can see that now working
08:18 - let's pretty much it for this video if
08:20 - you enjoyed it make sure to subscribe so
08:21 - you don't miss a future episode also
08:23 - remember that you can easily expand upon
08:25 - the system to turn it into a
08:26 - full-featured scoreboard thanks for
08:27 - watching and I will see you in the next
08:29 - video
08:31 - [Music]
08:33 - thanks of the awesome people who donated
08:35 - in February and a special thanks to
08:37 - Derek huge jerk face filmography James
08:39 - Calhoun and Jason Lotito
08:41 - if you want to become a picture in
08:42 - yourself you can do so a pitching
08:43 - becomes - brekkie thanks a lot guys

Cleaned transcript:

hello everyone and welcome to this video on creating a high score for your game in this video we are going to explore some simple techniques for storing data on your system to do that we'll be using unity building player prefs something that's pretty easy to use but can come in really really handy all right let's get started so as you can see I've set up this test scene with a few UI pieces first up we have the road dice button whenever you press this we want the number to change to a random number between 1 and 6 we also have the high score which is going to display the largest number that we have so far so whenever our score is greater than the high score we'll set our high score equal to that number and then finally we have a button for resetting our high score so let's make these things actually do something let's begin by creating an empty object let's reset the transform and call this one dice we also add a component to this and call that dice as well I'm going to choose csharp and they create an ADD let's double click it to open it up in Visual Studio let's remove the two using tags up here and both the methods so the first thing we need to do is change our score text to do that we need a reference to the text object and it's using this unity GUI system so remember whenever we code for the unity GUI we need to go up here and say using unity engine UI we're now able to make a variable of type text and we'll call it our score of course you need to make sure that this is marked as public and this way when we save it and go back into unity we can take this score object and simply drag it in now in order to update this we need to make a method let's go void let's call it something like update score or roll dice we can then get a random number we do that by going random range and the number we want to get is between 1 and this is inclusive and then 7 and this is exclusive this way we can get the numbers 1 2 3 4 5 & 6 but not the number 7 we can then store this in a temporary variable so let's write integer and let's give this variable a name say let's just call it number so we're now creating an integer variable code number and giving it a random number between 1 and 6 we can then set score text equal to that number however there is one slight problem with this and that is that our number is currently an integer whereas our text is a string so we need to convert from one data type to another luckily converting to strings is really see all we need to do is write dot to string and then to parentheses and this function will go ahead and convert the number into a string so everything adds up we now save this heading to unity and of course nothing is going to happen so far because we are not actually calling the function we've made the function but we need to also trigger it to do that we use a button event let's find our roll dice button and this is just an ordinary button we go ahead and add an onclick event by hitting the plus we drag in the dice where script is sitting then if we go here and select a function we can go under the die script and select one but you can see that our function is not currently visible that's because we also need to mark the function as public let's go into visual studio and insert public again save that and when we now go into unity we can see that under dice there's now a function called Road dice alright so when we hit play we are now able to roll the dice and get a random number and displayed on this screen but how do we store this as a high score to do that we use what is called player press player perhaps it's a data civilization tool built into unity that means that it's a way for unity to store pieces of data somewhere on our system that means the during our game we can set certain values and then load them back in at a later time and so we can have data persist from one game play session to another as long as it's on the same computer taking advantage of player press it's actually really easy to set a number we go player press dot set integer note that you can also set floats or strings but we'll set integer and this is a function that takes in two values the first one is a key this is simply a string that makes the name of the variable so in our case we could call it something like high score we then write comma and feed it the value in our case the value is going to be number whatever number we rolled if we then want it at a later point to get this value we use player proofs get an example of this could be at the beginning of our game we could do this in the start method which is called whenever we start the game we could display our high score so of course we need a reference to a high score text object so let's create another public text and call this one high score and then in the start method we'll set high score dot text equal to and then we use player press dot get int and as the key we need to write the exact same as we did down here or else it's going to work so I'm just going to copy it and that's all we need to do only of course this is again returning an integer and high score text is requiring a string so we need to again follow this up with dot to string so what we should see now is that whenever we roll the dice we're going to display a random number and store that number on the computer as high score then the next time we start the game we're going to set a high score text equal to that high score number but of course the first time we start our game that isn't going to be a high score stored and so we need to give this some kind of default value and that's really easy all we do inside of a get in method is write a comma and then the default value we want and we're just going to set that to zero let's save this and see if it works of course make sure to select the dice and drag in the high score text to swap so we can play we can see that at first our high score sets itself to zero we then roll the dice and our high score is not going to update yet but if we then exit play mode and play again it's going to remember that value but there are a few problems with this first off we want the high score to update as soon as we roll the dice but we also only wanted to update if we get a value that's larger right now if we roll the dice and get say the value 2 that's what it's going to remember so if we go back here and hit play it should now display 2 and of course we never want a high score to decrease to fix this again we go into visual studio we go down here to where it sets our high score and we simply check if the number we rolled is bigger than our current high score to do that rewrite if then number and we want to check if that's greater than and then we get a high score so we'd write player press and the key is high school and then again a default value of zero and that's it so if this if statement is true it means that we've beaten our high score and so we can go ahead and set it to the new number we could also add some kind of effect here congratulating the player on beating the score finally we probably also want to update the high score right away and not wait until we reboot the game to do that we just set high score equal to the number we wrote again we only want to do this if we roll the greater number and again remember to put two strings here so if we now save and hit back into unity our high score system should actually be complete so currently our high score is two if we roll the dice and get a six you can see it updating but if you roll the dice again and get a one it stays at six and if we exit the game and play it again we can see that our high score still remembers the six but what if we want to reset our high score this is really really handy when debugging but sometimes you also want players to be able to reset their settings and start over doing that is really really simple all we need to do is go in and add another function we'll also make this a public voice so we can trigger it using the button and we'll call it something like reset we can then open and close some curly brackets and in here we'll write player press Delete and here we have the possibility of deleting a specific key in our case we would go in and say delete key and then high score and this would work just fine or we can delete all of the save settings of course use this with caution if you're also storing other stuff like player usernames progress data or anything else it will be deleted but I like living on the edge so I'm just going to write the lead all let's save this and in unity we now need to add this to the onclick event so let's go into the reset button let's add an on click event let's drag in our dice and this time as the function we are not going to select row dice what we set and so when we hit play we can still roll the dice and everything but as soon as we hit reset it's going to reset our high score of course we can't see this because we are updating the text object but if we go out of play mode and go back in we can see that it sets itself back to zero and so all we need to do is just add high score text equals and then we'll write a zero here of course the quotation marks are still there because we want it to be a string now we can actually visually see that it resets that said play roll the dice reset the high score roll it again and you can see that now working let's pretty much it for this video if you enjoyed it make sure to subscribe so you don't miss a future episode also remember that you can easily expand upon the system to turn it into a fullfeatured scoreboard thanks for watching and I will see you in the next video thanks of the awesome people who donated in February and a special thanks to Derek huge jerk face filmography James Calhoun and Jason Lotito if you want to become a picture in yourself you can do so a pitching becomes brekkie thanks a lot guys
