With timestamps:

00:02 - hello everyone and welcome to the
00:05 - sprinting tutorial done by Brad keys I
00:07 - am the CEO of Rockies and I know exactly
00:09 - what you're thinking sprinting well why
00:12 - not crouching hour crouching will be in
00:15 - the next video I make I promise
00:18 - so in there and we'll explain how to do
00:21 - crouching functionality and also how to
00:23 - merge the Sprint and Crouch scripts
00:26 - together but first of all we are gonna
00:29 - of course take a look at how to run so I
00:32 - have as always open up unity and I have
00:36 - made a new scene here just to
00:38 - demonstrate how sprinting and crouching
00:42 - would work and let's go ahead and select
00:47 - the player here and you can see that I
00:49 - have the finished script attached to him
00:51 - called the sprint and Crouch so this is
00:54 - what we are going to be making let's
00:57 - have a look so this is my default run
01:03 - speed and if I hold down the shift key
01:05 - you can see getting a lot faster and
01:09 - when I let go it goes back to normal
01:12 - if you hold down the ctrl key oh I'm
01:16 - sorry this C key for Crouch you can see
01:19 - that our character smoothly animates
01:21 - into a crouching position and my speed
01:25 - decreases and if I now hold down the
01:28 - shift key nothing happens so you can't
01:32 - sprint while crouching and that's
01:35 - basically it for this script let me just
01:38 - go ahead and show you what is actually
01:40 - happening inside of unity so if i zoom
01:43 - in on our character here of course when
01:47 - I sprint nothing happens but when I do
01:50 - the crouching you can see that the
01:54 - capsule Collider or rather the character
01:57 - controller which is just a capsule get
02:01 - scaled down so not the entire object
02:05 - gets scaled and you might be thinking
02:08 - that well that looks really weird he
02:11 - might be clipping
02:12 - through walls or floors but it's really
02:16 - just a graphic that looks weird the
02:19 - reason why it's done this way is because
02:21 - if we scale down the whole game object
02:23 - stuff like weapons and other things
02:26 - attached would be compressed also and so
02:31 - you would have to make a crouching
02:33 - animation for your your character on
02:37 - whatever you have instead of this object
02:39 - so I'll leave you to do that on your own
02:43 - but that's basically how the crouching
02:46 - and sprinting works let's get into
02:49 - creating the script so I'll hit the
02:51 - player and disable the sprinting Crouch
02:54 - script now go down to the project pane
02:57 - hit create JavaScript call this sprint
03:04 - drag it on to our player and
03:09 - double-click it to open it up in
03:11 - monodevelop there we have it now we can
03:19 - go ahead and delete the prac Maastricht
03:22 - you can also leave it be and we are
03:27 - gonna keep both the function start and
03:29 - the function update I'll just go ahead
03:31 - and space out the brackets the bracket
03:34 - keys and that's how I like it so now
03:37 - let's go to the top and declare some
03:40 - variables the first one is pretty
03:42 - self-explanatory it's the one called
03:45 - walk speed and it's gonna be a type
03:49 - float and it's gonna be equal to let's
03:53 - say 7 so this is just the regular speed
04:02 - regular speed and the reason why we need
04:07 - this is because we need to set the speed
04:09 - to something that means that every frame
04:13 - when we are not sprinting or crouching
04:15 - this speed will be applied so we'll make
04:19 - a new one called you guessed it sprint
04:22 - speed which is also going to be a type
04:25 - float and it's going to be
04:26 - - about let's say 13 this is gonna be
04:30 - the run speed alright so we are also
04:36 - gonna need to make some private
04:39 - variables private var if you're gonna
04:43 - call this char loader it's gonna be a
04:46 - type character motor and it's and let's
04:51 - make the semicolon another private
04:54 - variable is needed this one is going to
04:56 - be called char controller and it's gonna
05:01 - be a type character controller there we
05:08 - go so let's start out by in the function
05:14 - start telling these variables what they
05:19 - need to contain so basically why we need
05:22 - this is because of how we need the
05:25 - character to interact the charm motor
05:29 - will allow us to actually move the
05:32 - character forward or I should say change
05:36 - the speed of the character once we
05:38 - decide whether he's walking sprinting or
05:41 - crouching this character motor will
05:44 - allow us to change his speed this
05:49 - character controller will allow us to
05:52 - check if our character is grounded that
05:56 - means if he is standing on something or
06:00 - if he's floating in the air because we
06:02 - only want him to be able to sprint if
06:04 - he's standing on the ground so now let's
06:08 - go under the function start and let's
06:11 - type char motor the variable we just
06:13 - created equals get component and this is
06:18 - the type of function you use whenever
06:22 - you need a component from a game object
06:24 - and since there can only be one of every
06:28 - type of component we can just write
06:30 - character motor so this will take the
06:32 - character motor from our game object and
06:36 - play around with that so now the
06:40 - charge controller this is going to be
06:43 - equal to get component and then
06:47 - character controller and remember this
06:54 - script could be made without making
06:57 - these variables but then you would have
06:59 - to access the character motor and the
07:02 - character controller through the gate
07:04 - component each time you wanted to change
07:06 - something and that could be very taxing
07:09 - on your computer remember that every
07:13 - time you need to change something for
07:15 - example in the transform or access some
07:18 - information for example the character
07:21 - motor from the character controller then
07:24 - it's a really good idea to do what's
07:26 - called catch the data or cache and
07:30 - depending on how you would pronounce it
07:33 - but to cache the data in two different
07:35 - variables instead of having to do a
07:38 - search for them so that's really really
07:42 - handy so make sure you do that and the
07:45 - script will run a lot smoother so now
07:48 - let's go into the function update and
07:50 - that's right power speed no capital
07:55 - equals warp speed the variable above and
08:00 - semicolon so now we create a new
08:03 - variable every time it draws the frame
08:05 - and it's going to be called speed and
08:08 - it's by default gonna be equal to the
08:12 - walk speed now you're gonna check if
08:17 - character controller is grounded so that
08:21 - is grounded and then we're going to type
08:26 - and and that is done by making these two
08:30 - symbols and input dot get key
08:42 - get key see if I get this right
08:47 - left shift I remember if this isn't
08:54 - working for you it's because unity might
08:57 - have named it as something else or you
08:59 - have gone into the settings and named it
09:01 - as something else so you can always use
09:04 - input that gate key and then key code
09:06 - and then dot and you'll get a list of
09:11 - everything you need so that's a a good
09:14 - way to make sure that it will work but
09:16 - for now I'm just going to use this left
09:20 - shift end up the parentheses and now we
09:27 - are gonna make two symbols and it's
09:31 - gonna be these two here and these two
09:37 - standing brackets they mean that it
09:42 - could also be the input or whatever we
09:46 - are gonna write here so these ant
09:49 - symbols they mean and so if the
09:53 - character controller is grounded and the
09:56 - input key that left shift is pressed
10:00 - then we want something to happen and
10:01 - these mean or so if the character is
10:05 - grounded DFCS
10:06 - and the key dot K key left shift is
10:09 - press it isn't well then we can check if
10:13 - input dot get key and then right shift
10:19 - so that you can sprint with both the
10:22 - left and the right shift keys so
10:28 - remember the standing brackets means or
10:36 - now let's open up the brackets and
10:39 - inside of here we are gonna write speed
10:42 - this variable here equals sprint speed
10:49 - the one we made in the top so this
10:54 - script is simply gonna allow us to make
10:56 - sure that every time we draw a frame we
11:00 - want to create a speed variable which is
11:03 - going to be equal to the sprint speed if
11:06 - the character is standing and the key is
11:09 - pressed if not it's just going to be
11:11 - equal to the walk speed but this doesn't
11:15 - actually influence how our character
11:18 - moves - to influence that we have to
11:22 - access the character motor so charm
11:24 - motor that movement dot max forward
11:31 - speed equals speed and here we are
11:38 - setting the speed so here we are making
11:45 - making the actual speed variable and
11:56 - here in the if statement we are checking
12:02 - for opportunity to sprint and here we
12:11 - are actually change in the speed to
12:19 - sprint so that is how our script is
12:24 - gonna look there's really not any more
12:26 - to it so let's go ahead and save this
12:29 - and head back into unity and let's try
12:34 - to see what happens here yeah we can see
12:36 - two variables pop up the block speed the
12:38 - sprint speed and indeed we have no
12:41 - errors so we can just go ahead and try
12:44 - to hit play and when I run forward and
12:47 - hold down the shift the speed does
12:51 - indeed increase so that's how to do
12:54 - basic sprinting in the next video we're
12:57 - going to take a look at crouching and
12:58 - maybe sometime in the future
13:00 - we'll also take
13:02 - look at how to do it actual sprinting
13:04 - bar so that our character can run out of
13:07 - craft that's it for now guys I hope you
13:11 - enjoyed the video and I'll see you in
13:13 - the next one
13:19 - you

Cleaned transcript:

hello everyone and welcome to the sprinting tutorial done by Brad keys I am the CEO of Rockies and I know exactly what you're thinking sprinting well why not crouching hour crouching will be in the next video I make I promise so in there and we'll explain how to do crouching functionality and also how to merge the Sprint and Crouch scripts together but first of all we are gonna of course take a look at how to run so I have as always open up unity and I have made a new scene here just to demonstrate how sprinting and crouching would work and let's go ahead and select the player here and you can see that I have the finished script attached to him called the sprint and Crouch so this is what we are going to be making let's have a look so this is my default run speed and if I hold down the shift key you can see getting a lot faster and when I let go it goes back to normal if you hold down the ctrl key oh I'm sorry this C key for Crouch you can see that our character smoothly animates into a crouching position and my speed decreases and if I now hold down the shift key nothing happens so you can't sprint while crouching and that's basically it for this script let me just go ahead and show you what is actually happening inside of unity so if i zoom in on our character here of course when I sprint nothing happens but when I do the crouching you can see that the capsule Collider or rather the character controller which is just a capsule get scaled down so not the entire object gets scaled and you might be thinking that well that looks really weird he might be clipping through walls or floors but it's really just a graphic that looks weird the reason why it's done this way is because if we scale down the whole game object stuff like weapons and other things attached would be compressed also and so you would have to make a crouching animation for your your character on whatever you have instead of this object so I'll leave you to do that on your own but that's basically how the crouching and sprinting works let's get into creating the script so I'll hit the player and disable the sprinting Crouch script now go down to the project pane hit create JavaScript call this sprint drag it on to our player and doubleclick it to open it up in monodevelop there we have it now we can go ahead and delete the prac Maastricht you can also leave it be and we are gonna keep both the function start and the function update I'll just go ahead and space out the brackets the bracket keys and that's how I like it so now let's go to the top and declare some variables the first one is pretty selfexplanatory it's the one called walk speed and it's gonna be a type float and it's gonna be equal to let's say 7 so this is just the regular speed regular speed and the reason why we need this is because we need to set the speed to something that means that every frame when we are not sprinting or crouching this speed will be applied so we'll make a new one called you guessed it sprint speed which is also going to be a type float and it's going to be about let's say 13 this is gonna be the run speed alright so we are also gonna need to make some private variables private var if you're gonna call this char loader it's gonna be a type character motor and it's and let's make the semicolon another private variable is needed this one is going to be called char controller and it's gonna be a type character controller there we go so let's start out by in the function start telling these variables what they need to contain so basically why we need this is because of how we need the character to interact the charm motor will allow us to actually move the character forward or I should say change the speed of the character once we decide whether he's walking sprinting or crouching this character motor will allow us to change his speed this character controller will allow us to check if our character is grounded that means if he is standing on something or if he's floating in the air because we only want him to be able to sprint if he's standing on the ground so now let's go under the function start and let's type char motor the variable we just created equals get component and this is the type of function you use whenever you need a component from a game object and since there can only be one of every type of component we can just write character motor so this will take the character motor from our game object and play around with that so now the charge controller this is going to be equal to get component and then character controller and remember this script could be made without making these variables but then you would have to access the character motor and the character controller through the gate component each time you wanted to change something and that could be very taxing on your computer remember that every time you need to change something for example in the transform or access some information for example the character motor from the character controller then it's a really good idea to do what's called catch the data or cache and depending on how you would pronounce it but to cache the data in two different variables instead of having to do a search for them so that's really really handy so make sure you do that and the script will run a lot smoother so now let's go into the function update and that's right power speed no capital equals warp speed the variable above and semicolon so now we create a new variable every time it draws the frame and it's going to be called speed and it's by default gonna be equal to the walk speed now you're gonna check if character controller is grounded so that is grounded and then we're going to type and and that is done by making these two symbols and input dot get key get key see if I get this right left shift I remember if this isn't working for you it's because unity might have named it as something else or you have gone into the settings and named it as something else so you can always use input that gate key and then key code and then dot and you'll get a list of everything you need so that's a a good way to make sure that it will work but for now I'm just going to use this left shift end up the parentheses and now we are gonna make two symbols and it's gonna be these two here and these two standing brackets they mean that it could also be the input or whatever we are gonna write here so these ant symbols they mean and so if the character controller is grounded and the input key that left shift is pressed then we want something to happen and these mean or so if the character is grounded DFCS and the key dot K key left shift is press it isn't well then we can check if input dot get key and then right shift so that you can sprint with both the left and the right shift keys so remember the standing brackets means or now let's open up the brackets and inside of here we are gonna write speed this variable here equals sprint speed the one we made in the top so this script is simply gonna allow us to make sure that every time we draw a frame we want to create a speed variable which is going to be equal to the sprint speed if the character is standing and the key is pressed if not it's just going to be equal to the walk speed but this doesn't actually influence how our character moves to influence that we have to access the character motor so charm motor that movement dot max forward speed equals speed and here we are setting the speed so here we are making making the actual speed variable and here in the if statement we are checking for opportunity to sprint and here we are actually change in the speed to sprint so that is how our script is gonna look there's really not any more to it so let's go ahead and save this and head back into unity and let's try to see what happens here yeah we can see two variables pop up the block speed the sprint speed and indeed we have no errors so we can just go ahead and try to hit play and when I run forward and hold down the shift the speed does indeed increase so that's how to do basic sprinting in the next video we're going to take a look at crouching and maybe sometime in the future we'll also take look at how to do it actual sprinting bar so that our character can run out of craft that's it for now guys I hope you enjoyed the video and I'll see you in the next one you
