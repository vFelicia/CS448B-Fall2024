With timestamps:

00:00 - hello everyone in this large stream
00:01 - recording we are going to have a look at
00:03 - creating a falling word typing game and
00:06 - we're going to create something along
00:08 - these lines here as you see here if I
00:11 - hit play we see these words falling from
00:14 - the top of our screen and we have to
00:15 - type oops we have to type them out
00:18 - before they reach the end in order to
00:20 - win or else our game will punish us so
00:24 - that is kind of the base of the game
00:26 - it's just it's just plain typing and of
00:29 - course we generate random voids you can
00:31 - do plenty of stop stuff with this like
00:34 - yeah two more words you can have words
00:37 - explode into other words you can create
00:39 - cool effects when typing and destroying
00:41 - words you can make different kinds of
00:44 - punishments when you type the wrong
00:46 - letters or if the words reach the bottom
00:48 - of your screen
00:49 - there's so much stuff that you can do
00:51 - with this it's a really fun simple game
00:54 - and it's actually fairly hard to code
00:57 - also if you're wondering about the Hat
00:58 - if you're watching this when it's not
01:00 - December I'm sorry but it's currently
01:02 - December so that's why the Hat is there
01:04 - I wanted to bring it on and this game is
01:07 - inspired by many games of this type but
01:10 - especially this one that I really like
01:12 - called Z type so it it does basically
01:16 - the exact same thing but the cool thing
01:18 - is here that they've added some effect
01:20 - so every time you type a letter it
01:22 - shoots out its gun and that's just
01:25 - really fun so that's an example of where
01:26 - you can take this very easily they use
01:29 - pretty much the same back-end code as
01:31 - what I've done here so just a
01:33 - proof-of-concept to get your site
01:35 - started but that's an example of where
01:37 - you can take it from here
01:38 - and without further ado let's get into
01:41 - it so let's go file new project and here
01:48 - we're going to write let's call it
01:50 - something like word falling falling
01:54 - falling word typing game best
01:58 - description of all time and that will
02:00 - hit 2d and hit create project and unity
02:03 - is going to load up a fresh project for
02:05 - us so meanwhile we can have a look at
02:07 - some some questions in the chat here if
02:09 - we have anything pressing one
02:13 - that I do want to mention oh look it's
02:15 - working but one thing I do wanna mention
02:17 - is unfortunately I wasn't able to
02:18 - participate in this month's or this
02:21 - previous Durham DeRay I really wanted to
02:24 - but I was at Dreamhack so I was
02:26 - prevented from doing so but I definitely
02:28 - want to make a small game soon my oh I
02:32 - just I just really want to do some
02:34 - programming um not for a tutorial just
02:37 - for fun so hopefully I'll do something
02:41 - soon if I get the time but now our unity
02:44 - project has booted up so we are going to
02:46 - continue with D totaram first thing
02:48 - first I'm going to select my main camera
02:50 - and I'm going to change the background
02:51 - to kind of a dark color we can go do
02:54 - black we can do a dark green if we want
02:56 - it to be kind of matrix like it could be
02:59 - fun let's do that and let's save the
03:01 - scene right away here under main so that
03:04 - I can hit ctrl s without it popping up
03:06 - next we could go ahead and sketch out a
03:10 - canvas and a text element and kind of
03:14 - make that look great already however
03:17 - that's not really the base of our game
03:20 - what I ended up doing was actually
03:22 - creating 90% of the code in a
03:26 - non-visible non-unity specific way and I
03:29 - think that works really well for this
03:31 - game because all we are really handling
03:33 - is words and words are very simple
03:35 - objects they are in essence just strings
03:39 - and when we need to display them all we
03:42 - need is a text element so it's really
03:44 - really simple to create this inside of
03:47 - unity so let's instead begin by kind of
03:50 - sketching out the structure of our
03:52 - program and then start showing it using
03:55 - unity so we'll go ahead and first of all
03:58 - create an empty object and we'll reset
04:01 - this inside of unity and we'll call it
04:02 - all word manager and this is where we'll
04:06 - add a component called word manager of
04:09 - type C sharp let's say create an ad and
04:11 - let's open it up in Visual Studio and
04:13 - the first thing that we want to add to
04:16 - this script well we can go ahead and
04:17 - delete the start and update methods but
04:20 - the first thing that we want to add is a
04:22 - list that will contain all of our words
04:25 - now we haven't gone ahead
04:27 - and created a word class you could go
04:29 - ahead and just use a string here but I
04:31 - actually want to define these words as
04:33 - classes so we can have each word be
04:36 - responsible for um different things such
04:40 - as removing letters checking how many
04:42 - letters are left and yeah just keeping
04:46 - track of how much of the word we've
04:48 - currently written so that's why I want
04:51 - to go ahead and create a separate class
04:52 - for this that will create in just a
04:54 - second and we'll just call this list
04:56 - words I'm also going to make it public
04:58 - so that we can see it in the inspector
04:59 - and so that we might be able to edit it
05:01 - through script later now we can save
05:03 - this and we can go into unity again and
05:06 - let's this time create a c-sharp script
05:08 - just inside the project panel because we
05:10 - don't want this to sit on any objects we
05:13 - just want this to be the word c-sharp
05:15 - script let's open this up in Visual
05:18 - Studio as well come on there we go
05:21 - and this here we don't want to derive
05:24 - from monobehaviour again we don't want
05:26 - this to be a component we just want this
05:28 - to be a class therefore we can also
05:30 - delete both the start and the update
05:32 - method and we'll also make sure to mark
05:34 - this class as system dot serializable so
05:38 - that all of our variables will show up
05:41 - inside of the unit inspector and the
05:43 - main variable that we want to create
05:45 - here is a public strength and this is
05:48 - current of course going to contain the
05:50 - word itself we'll also create a
05:52 - constructor so public word and a
05:57 - constructor is something that I haven't
05:59 - used that much in my tutorials basically
06:02 - what it is is a way to define what
06:04 - happens when our class is created so
06:07 - when we create a new word object our
06:09 - constructor allows us to set up initial
06:12 - variables and do kind of yeah set up
06:15 - stuff so one thing that we could do here
06:17 - is allow ourself to pass in a word so
06:20 - I'm gonna write underscore word so we
06:21 - don't confuse these two and then inside
06:25 - of our constructor we can set word equal
06:27 - to underscore word this way when we go
06:30 - inside of our word manager and if we in
06:33 - here were to just create say a start
06:35 - method we can now create a new word and
06:38 - call it words
06:40 - by setting it equal to a new word and
06:43 - then we can pass in a string say example
06:46 - there we go and we don't have to create
06:49 - the new word and then afterwards go word
06:52 - dot word equals example so it's just
06:57 - cleaner cool and for some reason this is
07:03 - not kind of recognizing that we've
07:06 - created a word script and I think all we
07:08 - need to do is restart Visual Studio and
07:10 - that should work once more let's try
07:13 - that so open studio here and we should
07:17 - see it recognizing the fact that word is
07:21 - a thing cool
07:23 - so now inside of our word manager we can
07:25 - add some more functionality the first
07:27 - thing that we want to do is add a new
07:29 - word to do that we'll create a start
07:31 - method and inside of our start method
07:34 - we'll just begin by adding a few words
07:37 - let's just start by creating three words
07:40 - of course we need a method in order to
07:43 - create these words so we'll create a
07:44 - public board add word and in here we'll
07:50 - create a new word in the way that I just
07:52 - showed it's a word word equals a new
07:54 - word and now we can feed it in a word
07:58 - such as again example however we don't
08:02 - want to feed it in a word that is
08:04 - predefined we want to use a random word
08:07 - and therefore we need to create a random
08:10 - word generator so inside of unity will
08:13 - again go to the project hit c-sharp
08:15 - script and create a word generator and
08:19 - let's double click this to open it up
08:21 - English is studio as well again oops
08:24 - don't do that again we want to delete
08:27 - both of our methods and inside of our
08:30 - word generator we basically want to have
08:32 - some kind of public static string called
08:37 - get random word so this is basically
08:42 - just a static method that will return a
08:45 - random word of our choosing and in order
08:48 - to get a random word we could of course
08:49 - have a look at creating our own words
08:51 - from scratch if you don't want it to be
08:53 - some
08:54 - from the English language or you could
08:56 - simply use a very very long list of
08:58 - words you could take words from a
09:00 - dictionary you could create your own
09:01 - huge text file with a bunch of words
09:04 - that you get a random one from and this
09:07 - is actually fairly easy loading data in
09:09 - from a text file in unity is actually
09:11 - not something that has to be incredibly
09:13 - hard but the absolute easiest way is
09:16 - simply defining a very very big array
09:18 - that we can get a random word from and
09:21 - I've actually done this so let's go
09:23 - ahead and write private static string
09:26 - let's mark it as an array and we'll call
09:28 - it all word list and the way that we
09:31 - create this word list is basically by
09:33 - opening and closing - curly brackets
09:35 - we'll end with a semicolon and in here
09:38 - we can then write each word so word one
09:40 - word two and so on and this is the
09:45 - syntax and I've gone ahead and created a
09:47 - whole list of words using this syntax
09:50 - that I'm just gonna copy in from my
09:52 - secondary monitor here so you can see I
09:54 - have a bunch of words like sidewalk jump
09:57 - pretty wood and so on and you can add as
10:00 - many words as you want here or delete as
10:02 - many words as you want so I'm just gonna
10:05 - save this and I'm also going to show you
10:07 - where I got these words from because I'm
10:09 - not that creative and coming up with
10:11 - cool words to use I actually just went
10:13 - to Chrome and search for a random word
10:16 - generator and this site came up random
10:18 - lists comm slash random works and in
10:21 - here I could specify a quantity so a
10:23 - amount of words if we type in 50 here
10:26 - and whether or not I don't want
10:27 - duplicates I don't want that and then
10:30 - hit refresh you can see it gives me 50
10:32 - words and if we now simply select all of
10:34 - these hit copy and paste them into some
10:37 - kind of text software so I have sublime
10:39 - here you can see it pastes them nicely
10:41 - one add one word per line so you could
10:45 - easily save this as a text file and load
10:47 - it into unity or format it in the same
10:50 - way that I've done here totally up to
10:53 - you again I will have these words
10:55 - available for you as part of the project
10:58 - on github if you want to download it so
11:00 - yeah but for now you can just use your
11:02 - own placeholder words
11:03 - cool so let me just see if everything is
11:06 - cool with the
11:08 - here awesome things are going according
11:12 - to plan I think except for the the Hat
11:15 - maybe that was kind of improved but
11:17 - that's alright and yes this is super
11:19 - hard coding but it works so that's
11:21 - alright so now when we want to get a
11:24 - random word all we want to do is just
11:27 - get a random element inside of this
11:29 - string away and the way to do that is by
11:31 - first getting a random index so the
11:34 - number associated with one of these
11:35 - elements will create an integer called
11:37 - random index and set it equal to random
11:40 - dot whoops random and now it doesn't
11:45 - autocomplete here but I'm sure that this
11:47 - is correct random dot range and we want
11:49 - to get a number between zero so the
11:52 - first index is zero that Sidewalk and
11:55 - then the length of our array so that's
11:58 - going to be word list dot length then we
12:04 - will take this random index and use it
12:06 - to find a word so our string random word
12:09 - will be equal to our word list and then
12:13 - we use the index random index cool and
12:17 - then we can simply return a random word
12:20 - so now inside of our word manager
12:23 - instead of just hard coding in a word
12:25 - here we can get a random word really
12:28 - easily
12:29 - all we need to do is write word
12:30 - generator word generator and for some
12:34 - reason again it isn't registering here
12:35 - but we have to do dot and then I think
12:39 - it's get random word yes dot get random
12:42 - word and open and close that so if we
12:44 - now save this closed down visual studio
12:46 - once again to get our autocomplete back
12:50 - here if one of you guys has to trigger
12:52 - other than just restarting Visual Studio
12:54 - for this that would be really nice it's
12:55 - been acting out today and now you should
12:57 - see that yeah this looks fine and
12:59 - instead of a word magnitude now
13:00 - recognizes that we can go where
13:02 - generator dot kid rate word so now we
13:06 - are adding some random words and we can
13:08 - actually just go ahead and maybe debug
13:10 - that like these to show them in our
13:12 - console so we're going to throw a debug
13:15 - deadlock with our word dot word if we
13:19 - save that go into unity
13:21 - and I think we can just go ahead and hit
13:24 - play here we should see three random
13:27 - words pop into the console awesome and
13:30 - inside of our word manager we still see
13:32 - an empty list and that's because we now
13:35 - need to take our word that we created
13:37 - and add it to our word list and that's
13:40 - to be easy all we need to do instead of
13:42 - actually let's keep the debug the block
13:44 - here but all we need to do is go words
13:47 - dot add I mean then feed it in our new
13:50 - word and now we should see that if we
13:53 - play the game inside of unity and wait
13:58 - for it to compile here three words get
14:01 - as it gets added to our array jassie
14:04 - floor and scarves awesome and you'll get
14:08 - of course three random words each time
14:10 - you play so that's it for adding words
14:14 - however we don't have any way of
14:16 - registering what we are typing and we
14:21 - have we don't have any way of kind of
14:23 - removing words so next let's create a
14:26 - public void called type letter and here
14:33 - will of course take in a letter so this
14:36 - is going to be of type char or character
14:38 - will call it later and we want to do
14:43 - some checking here so the first thing
14:45 - that we want to do is define an active
14:47 - word so in my demo I basically just went
14:50 - ahead and said the first word with the
14:53 - starting letter that you type will from
14:56 - here on out be the active word and all
14:58 - letters should type from there will only
15:00 - be checked against that word so you
15:05 - basically just select a word by typing
15:07 - the first letter in the word and that's
15:09 - what we'll do here let's go to the top
15:11 - and let's create kind of an active words
15:14 - so let's do private private bowl has
15:20 - active word and it's also do a private
15:23 - word which will store the active word
15:27 - then down here when we type the data we
15:29 - will check if has active word so if we
15:33 - already have an active word
15:35 - we can go ahead and check if the letter
15:39 - that we typed was the next letter in the
15:41 - sequence and if it is we want to remove
15:43 - a letter from the world so check if
15:46 - letter was next remove it from the word
15:52 - if it was not so if we or if we don't
15:57 - have an active word well then we want to
15:59 - check if the letter that we typed is the
16:02 - beginning letter in any of the words on
16:04 - screen so we want to loop through all of
16:06 - our words so for each word which we'll
16:09 - call word in our words list we want to
16:12 - check if the word and then we want to
16:16 - check if the first letter in the word we
16:18 - can of course the word dot word and then
16:20 - get the first character in the string
16:22 - and see if that is equal to letter and
16:25 - this will actually work but it's not
16:28 - pretty I think a better way of doing
16:30 - this is by going into our word here and
16:33 - simply creating a function that we'll
16:36 - call public char get next letter so this
16:42 - function will return a character which
16:46 - is the next letter in our word so we
16:47 - haven't removed any letters in a word
16:49 - this will always return the first letter
16:51 - so here we can simply return word and
16:54 - then in the beginning this is going to
16:56 - be 0
16:57 - next it's going to be 1 then 2 then 3 so
17:01 - we need some kind of index specifying
17:03 - what letter we're currently looking at
17:04 - in our word or how many letters we have
17:07 - typed so far and we'll do that up here
17:10 - we'll create a private integer called
17:12 - type index and we'll default this to 0
17:15 - so inside of our constructor we'll set
17:17 - type index equal to 0 then when we get
17:21 - the next letter we'll simply return word
17:23 - to the type index which will start off
17:27 - at 0 so now inside of our word manager
17:30 - we instead of doing if word that word to
17:33 - the 0th is equal to letter will simply
17:37 - do if word dot next letter is equal to
17:41 - letter and if it is well then we want to
17:45 - go ahead and select or mark this word as
17:47 - the active board
17:49 - so we'll set active word equal to this
17:51 - word we also said has active word to
17:54 - true because we now we have an active
17:56 - word and we also want to go go word dot
18:00 - type letter so we want to remove the
18:02 - first letter we want to type it out to
18:05 - do that we'll need to create another
18:07 - method so we'll do a public void called
18:10 - type letter and let's see here all we
18:17 - want to do here is really just increase
18:19 - the type index and then we want to
18:23 - remove the letter on screen but we'll do
18:28 - that later when displaying it all we
18:30 - need to do right now is just increase
18:32 - the type index and our system will
18:34 - understand that this letter has been
18:35 - typed let's save that let's go into a
18:38 - word manager and at the very bottom here
18:40 - we simply want to break out of our for
18:43 - each statement this will make sure that
18:44 - as soon as we find a letter and set it
18:47 - active we don't go ahead on and search
18:49 - for more letters start or more words
18:52 - starting with the same letter and also
18:54 - said those to active that will lead to
18:55 - some very weird behavior so we'll make
18:58 - sure to put break here and so it will
18:59 - exit out of our for each so if we
19:02 - actually find an active word all we need
19:05 - to do all we need to do is check if the
19:10 - letter was next so if word dot get oops
19:14 - if active word dot get next letter is
19:19 - equal to letter the same check that we
19:22 - do down here but now we check against
19:24 - the active word if this is the case well
19:27 - then we want to go ahead and type it so
19:28 - we can simply do active word oops
19:31 - active active word dot type letter and
19:38 - there we go and finally we can go to the
19:44 - bottom even check if we have an active
19:47 - words so if has active word and and
19:51 - active word dot word typed or is
19:57 - complete or something along these lines
19:58 - so if we've tied the type the entire
20:00 - word here
20:03 - well then we want to set has active word
20:06 - to false and then we want to remove this
20:10 - word from the lists of words that remove
20:14 - active word so we put this in here just
20:18 - to make sure that if we finish typing
20:20 - the word we mark it as non active and we
20:25 - remove it from the list
20:26 - we also all we need to do to do this is
20:28 - go and make F method for checking if the
20:31 - word has been typed through and that is
20:34 - actually a very simple thing to do all
20:36 - we need to do is go into our word create
20:38 - a public pool called word typed and here
20:45 - we'll create a boolean called word typed
20:47 - set it equal to and now here we need to
20:52 - make a check we want to check if type
20:54 - index is greater than or equal to
20:57 - whoops greater than or equal to word dot
21:00 - length so if our index starting at 0 has
21:04 - been increased enough times that it has
21:07 - that it is now equal to or greater than
21:10 - the length of the word all of our word
21:13 - has been typed and so word type will be
21:15 - true if not this will be false and then
21:18 - word type will to be false so if word
21:21 - typed we can go ahead and remove the
21:29 - word on-screen again we won't do this
21:32 - yet and then we can simply return all
21:36 - word typed variable so that we know
21:39 - instead of our word manager whether or
21:42 - not it was typed cold so I believe this
21:46 - should actually work now I don't think
21:48 - we'll get any errors hopefully yes
21:52 - awesome and if we hit play let's see
21:55 - what happens so we get crack rely and
21:58 - homely and if I have a look inside of my
22:01 - word manager here and type in crack
22:05 - nothing happens all right so this is
22:09 - interesting nothing currently happens
22:11 - let's see what we're doing right or
22:13 - wrong here so of course we aren't trip
22:16 - triggering our type letter now this
22:19 - function will totally work but we aren't
22:21 - setting this up to our keyboard so the
22:24 - next thing that we want to do is create
22:26 - a script that will actually call this
22:28 - type letter function and before that we
22:31 - do that I just want to have a quick look
22:32 - in the chat chat to see if everyone's
22:34 - following I know this is very
22:35 - programming intensive especially
22:37 - compared to some of the other live
22:39 - streams but I think it's it's pretty
22:42 - neat and it's always fun to try and take
22:45 - an another approach than the usual unity
22:47 - approach because this is not kind of how
22:50 - you would normally go about creating
22:51 - something in unity normally you start
22:52 - with game objects and components and you
22:55 - try and kind of work your way through
22:56 - without doing any scripting and then
22:59 - when you really need to script something
23:00 - you go and add a tiny script that does
23:02 - only what you need and not more but here
23:04 - we are actually coding kind of an entire
23:07 - structure for a program and then later
23:09 - we'll just be adding unity on top to
23:11 - kind of display everything so awesome to
23:15 - you guys who are drawing enjoying the
23:17 - Hat I hope you guys are feeling nice and
23:23 - are able to follow along looks like it
23:26 - that's awesome and so those of you who
23:30 - are asking if this will be on YouTube of
23:32 - course it will always is it will be up
23:35 - this Sunday cool so next up let's
23:38 - trigger this type letter function so
23:41 - that we can actually see this stuff
23:43 - working to do that we need to go into
23:47 - unity and we need to create another
23:49 - script on our word manager and this one
23:51 - will be called word input again c-sharp
23:55 - create an ADD let's double click it to
23:57 - open it up in Visual Studio and we want
23:59 - to read out the solution here cool and
24:03 - here we'll use a very very simple
24:06 - function that not a lot of people know
24:09 - about we'll use it inside the update and
24:12 - it's called input dot input string this
24:17 - basically as it says here returns the
24:19 - keyboard input entered this frame so
24:23 - basically if you just slam your hands on
24:25 - the keyboard this is going to show all
24:27 - of the characters that you typed
24:30 - that frame and the cool thing for us is
24:33 - that we can loop through these as
24:34 - individual characters to make sure that
24:36 - we get them all so that if you type
24:38 - multiple characters in one frame we will
24:41 - catch them all and insert Pokemon pun
24:45 - here so we basically just want to go and
24:48 - loop through them using a forage loop we
24:50 - want to look at each character which
24:53 - we'll call later
24:54 - in our input input string and for each
24:58 - one of these we want to access our word
25:01 - manager and type out a letter so for now
25:04 - we can maybe just do a debug deadlock to
25:05 - see that this is working and we'll just
25:07 - debug that lock out the letter on that
25:10 - we're looking at if we save this go into
25:13 - unity and play it will of course debug
25:16 - the lock are three words and then if I
25:19 - try and write test weensy it te s T so
25:24 - it's working awesome and if I just slam
25:27 - my hands on the keyboard whoa okay
25:31 - something happened I might have hit
25:34 - something that I shouldn't you can see
25:36 - that it gets all of the keys and I
25:38 - wasn't actually able to get multiple in
25:41 - a single frame or maybe I was and it
25:44 - just split them up but we do get all of
25:47 - them even if I press multiple keys
25:49 - simultaneously so that is pretty cool
25:51 - and I need to reopen all of the programs
25:53 - that I just minimized so now we can go
25:56 - and create a reference to our word
25:58 - manager we will create a woops caps dog
26:00 - is on a public word manager and we'll
26:04 - call it word manager and we'll just
26:07 - reference this through the inspector
26:08 - then in here we'll access our word
26:10 - manager and we'll go dot type letter and
26:13 - the letter that we want to type is the
26:16 - letter that we are looking at if we save
26:18 - that go in to unity and hit play we
26:22 - should now see that this function gets
26:24 - called and let's check if we select our
26:27 - word manager and I try and type out the
26:30 - word sambar we get a null reference and
26:35 - that's because I need to reference this
26:37 - boom there we go okay let's try this
26:39 - again and I try and type out the word
26:42 - awesome and it
26:44 - would be pretty awesome if it now works
26:45 - ah some boom it's removed from the list
26:50 - so if I type out the word correctly it
26:53 - gets removed from the list also if I
26:55 - type start typing mellow so I'll type an
26:57 - M and an E and then try typing you a
27:00 - bunch of times an A which is not in the
27:03 - word nothing happens until I type the ll
27:05 - and the O and W and now it gets removed
27:08 - from the list so you can type anything
27:10 - that you want but you can only proceed
27:13 - by typing the correct character and
27:15 - that's what we want you can of course
27:16 - add penalties if you don't type the
27:18 - correct stuff reduce your score or maybe
27:21 - add random words when you type the wrong
27:23 - thing but we now have a way of
27:26 - differentiating between the two super
27:29 - cool so the next thing that we want to
27:31 - do is probably allow ourselves to UM see
27:37 - the words on screen so let's go ahead
27:40 - and make these visible and this is kind
27:42 - of the unity part of this tutorial so
27:45 - we'll go inside of our hard can
27:46 - right-click we'll go UI and we'll create
27:49 - a text element and by default the canvas
27:52 - here is going to be fitted to screen
27:54 - space I want to change this to world
27:55 - space to make our units more manageable
27:57 - and want to change the scale to point
28:00 - zero one five or something along these
28:02 - lines point zero one five on all the
28:04 - axes that looks pretty decent and I want
28:07 - to scale it up to fit most of our world
28:09 - screen here I'm also going to take our
28:11 - text element that we just created and
28:13 - center it by holding down alt and
28:15 - pressing in the center here I'm also
28:17 - going to scale it up on the font size to
28:19 - something like 24 I'm going to Center it
28:22 - both horizontally and vertically and
28:24 - change the color to a white now we can
28:26 - see it pretty clearly let's call this a
28:29 - test word and we can now see that we can
28:33 - easily move this around the screen and
28:35 - have it fall down if that's what we want
28:37 - it but a very nice thing that we could
28:42 - have on this object is a script that is
28:45 - kind of responsible for displaying or
28:48 - text let's create a separate script for
28:51 - this we'll call it our word display
28:53 - again that's the next C sharp hit create
28:56 - an ad and it's also rename
28:58 - object here to word and let's then drag
29:04 - it into our project to create a prefab
29:06 - out of it and remove it from our on
29:09 - scene so now if we double click on a
29:13 - word display we can go ahead and sketch
29:15 - this out so the first thing that we need
29:20 - at the top here is a actually we don't
29:24 - need to start an outtake here we might
29:25 - need update at some point but not start
29:27 - so let's create a public reference to
29:30 - our text element so public text however
29:33 - whenever we're dealing with text we need
29:35 - to be using the correct namespace so up
29:37 - here we'll import Unity engine dot UI
29:40 - because text is a UI element so we'll
29:43 - create a public text we call it text and
29:46 - then we'll create a public void that
29:49 - we'll call set word and this will take
29:51 - in a string which is going to be the
29:53 - word and all this will do is simply set
29:55 - text the text equal to the word passed
29:58 - in then if we save that and go into our
30:02 - word here this is where we actually set
30:07 - up our word but we also need a reference
30:09 - to a word display in order to be able to
30:12 - access our set word method so let's have
30:16 - our word manager kind of set this
30:20 - connection up whenever we add a new word
30:23 - we could simply you know create a
30:26 - reference to or we could instantiate a
30:29 - prefab our word prefab that we just
30:31 - created we could get the word display on
30:33 - script on that prefab and we can then
30:36 - feed it into our word so that a word
30:38 - always has a reference to a word display
30:41 - let's go ahead and do that let's create
30:43 - a public word display variable here
30:46 - called display actually let's make it
30:49 - private but then inside of our
30:51 - constructor we can we can also allow it
30:55 - to pass in a word display so word
30:57 - display and we'll call it underscore
31:00 - display and then down here we can go
31:02 - display equals underscore display just
31:06 - like we do with our word so we pass in a
31:08 - word as a string and our display
31:10 - component
31:11 - and then right after we can actually
31:13 - access it and go dot said word and we
31:18 - can simply feed it in our word so that
31:22 - should work now however we of course
31:24 - still need to set this up inside of a
31:26 - word generator or a word manager I
31:29 - should say so here now it's complaining
31:30 - that we're only feeding it in a string
31:32 - which is a word we also need to feed it
31:35 - or display excuse me so to do that we
31:39 - first need a way of spawning in our
31:42 - object and I actually want to do this in
31:45 - another script so let's go to our word
31:48 - manager that's it a component and let's
31:51 - now create a word spawner that's right I
31:55 - want you that we needed to create a lot
31:57 - of different scripts but I think this
31:58 - makes a lot more sense when we split it
32:00 - up in this way because otherwise we
32:02 - would just end up with a two kilometer
32:04 - long script and that's not something
32:05 - that is really desirable for anyone so
32:08 - let's open up our word spawner
32:10 - as soon as unity kind of recognizes that
32:15 - I'm doing things
32:16 - come on unity read out the solution that
32:19 - might be what it was waiting for it was
32:21 - so inside of our word spawn and now we
32:25 - can create a public void called spawn
32:30 - word and in fact we do not want this to
32:34 - be a void we want this to return a word
32:36 - display so that we can access it from in
32:38 - within a word generator so that we can
32:41 - access it from it within a word so that
32:43 - we can call a method on a word display I
32:45 - know this is crazy but it does work and
32:47 - it is actually a fairly decent way of
32:50 - going about it
32:51 - so now inside of our spawn word method
32:53 - we of course want to spawn in so we want
32:56 - to instantiate our word prefab to do
32:59 - that we need a reference to a word
33:01 - prefab so public game object word word
33:05 - prefab and we then instantiate our word
33:09 - prefab as well as get a reference to it
33:14 - to the object that we just instantiated
33:16 - we'll call this our word object we can
33:20 - then use get component on a word object
33:22 - word object get component
33:24 - to get a word display we can store word
33:28 - display inside of a word display
33:30 - variable called word display and finally
33:36 - we can return the word display there we
33:40 - go sub we've now created the object
33:42 - we've created a word prefab we've gotten
33:45 - the word display component from that
33:47 - prefab and we've returned it so that now
33:50 - inside of our world generator or word
33:53 - manager we can create a reference to a
33:57 - word spawner so public word spawner word
34:01 - spawner and here we can go word spawner
34:07 - dot spawn word and we can then retrieve
34:13 - the word display from that spawners of
34:16 - word display and we can feed it in here
34:21 - or we could just do very simply word
34:26 - word equals new word where we get a
34:29 - random word and we spawn in a word
34:35 - prefab as well as feeded the display on
34:38 - that prefab so now we're simply giving
34:41 - it two arguments which are basically
34:43 - functions doing a whole bunch of stuff
34:44 - but we are we aren't doing it inside of
34:47 - the script we're doing it in separate
34:49 - scripts which just looks really nice so
34:51 - we're feeding it a word and the display
34:55 - on a prefab so that's one way that you
34:58 - can kind of link an entire system of or
35:02 - game system to unity in order to display
35:04 - stuff if we now save this and save
35:08 - everything else we should actually I
35:10 - don't think get any errors and I think
35:14 - it was will work in some capacity so if
35:17 - we go and select our word manager we can
35:20 - drag in our word spawner boom to link
35:24 - those two up we can take a word prefab
35:26 - and drag that into a word spawner and
35:28 - now when we hit play it's not going to
35:31 - be pretty but something is going to work
35:32 - and we also get a null reference
35:34 - exception and that is because we haven't
35:38 - hooked up
35:39 - so inside of our word prefab we also
35:42 - need to feed this our text we could also
35:44 - just use K component for this which is
35:46 - probably better but we aren't kind of a
35:49 - tight time schedule here so we'll just
35:51 - link it up manually but now if we hit
35:54 - play we can see the two work the three
35:56 - boys are encouraging interrupt and cut
35:58 - and if I see here I have three words one
36:02 - is showing cut what is showing
36:05 - interrupts and the third one is showing
36:07 - encouraging yes see now that's
36:10 - encouraging because that means things
36:13 - are working we aren't currently seeing
36:15 - it on the screen there and that's
36:16 - because our words are currently not
36:18 - within our canvas we need to parent them
36:20 - to our canvas because everything inside
36:22 - or all UI elements need to be inside of
36:24 - a canvas in order to be drawn to do that
36:27 - all we need to do is get a reference to
36:29 - our canvas inside of a word spawner so
36:31 - we'll create a public transform and
36:34 - we'll call it our word canvas then when
36:37 - we spawn it we want to set the parent to
36:40 - our word canvas and that should actually
36:43 - be it so if we now hit play oh we need
36:48 - to reference this domain under our word
36:51 - manager we need to drag in our canvas as
36:54 - the word canvas and if we now hit play
36:55 - we should see yes there the three words
36:59 - are we have feel mark and verdict boom
37:05 - that's awesome and I can go ahead and
37:08 - write these words I can write feel and
37:10 - it will disappear from the list but it
37:13 - currently won't disappear from the
37:14 - screen and also they're currently
37:16 - spawning at the very center on top of
37:18 - each other they aren't falling there
37:20 - currently is lots of stuff to add but
37:22 - the hardest parts of this system is
37:26 - definitely over with now it's just about
37:28 - adding detail because that's really all
37:30 - that this is is kind of detail so the
37:35 - next thing that we can now do is hook it
37:37 - up so that when we are write a word we
37:41 - also remove it and so that when we write
37:44 - each letter that also gets removed to do
37:47 - that we just need to add a tiny bit more
37:49 - functionality to our word display so now
37:52 - we can
37:52 - set the word directly but we also want
37:55 - to be able to remove a letter and to do
37:58 - that we simply want to go text a text
38:00 - equals text text dot remove we want to
38:05 - go start at the first letter and only go
38:09 - one letter forward to only remove the
38:11 - first letter we can also set text dot
38:14 - color equal to colored red to show that
38:18 - whenever we are removing a letter on a
38:20 - text object this is what we currently
38:22 - have focused we can also add another
38:25 - method public void remove word for when
38:29 - we are completely done with the word to
38:31 - you that will simply call destroy game
38:33 - object and that should remove the entire
38:36 - word if we save this now and go inside
38:39 - of our word script we can see inside of
38:43 - our type letter function we want to
38:45 - remove a letter on the screen we've
38:47 - already put that here so we'll simply
38:48 - access our display and go dot remove
38:51 - letter and that should be it and inside
38:54 - of our word type we want to remove the
38:56 - word on the screen so here we'll go
38:57 - display don't remove word and that
39:01 - should also be it so now if we hit save
39:03 - and hit into unity and hit play
39:07 - everything that we need should be set up
39:10 - and we should actually see this working
39:12 - of course I will just separate these out
39:13 - real quick so we can see them and I'm
39:16 - gonna write D a F F Y and it disappears
39:21 - from a scene the same thing with three
39:24 - and the same thing with painstaking
39:26 - there we go so now we have actually
39:30 - synced up our code our actual gameplay
39:33 - code with these display elements and
39:36 - that was kind of the hardest part
39:38 - because now it's just a part about
39:41 - adding different spawn positions about
39:43 - configuring how they fall about adding
39:45 - point scores and all that stuff we can
39:48 - definitely go in and just add a tiny bit
39:49 - of that but first let me just check the
39:52 - chat here to see if everything everyone
39:54 - is doing good and just let me check if
39:57 - the signal on the broadcast is still up
39:59 - yeah okay cool I don't get any feedback
40:03 - when I'm programming that you guys are
40:05 - still here is there kind of just
40:06 - you know stop pretending that I'm the
40:08 - only one in the room and things get kind
40:10 - of weird when I realized there are 300
40:12 - people in here so good to see that you
40:14 - guys are still here I just needed a
40:16 - reminder and yeah
40:21 - one guy in the chat is saying to use
40:24 - text mushroom I couldn't agree more if
40:26 - you want to create this game yourself
40:28 - don't use unities built-in text use text
40:32 - Metro I have an entire youtube video
40:34 - dedicated on the subject that you should
40:35 - definitely check out it renders text
40:38 - much crisper more performant gives you
40:40 - more layout and styling options it's
40:43 - just better in every single way and it's
40:44 - been adopted by unity so you can get it
40:46 - for free text mesh it's awesome
40:48 - I just didn't want to spend time with it
40:50 - here because I've shown it so many times
40:51 - already yeah awesome
40:55 - cool yeah look at we'll get going again
40:59 - so um I'm just gonna bring up my stuff
41:03 - here and yes the next thing that we want
41:06 - to add is some proper spawning to do
41:09 - that will go inside of our word spawner
41:12 - and maybe randomize the position of our
41:15 - words a bit and you can definitely do
41:18 - this using spawn points if you want you
41:21 - can do a round-robin you can randomly
41:23 - select spawn points or we can just
41:25 - choose a random position through a
41:27 - random number generator I think we
41:29 - should actually do that I didn't do that
41:30 - for the demo but let's try and see if we
41:33 - can work it out I've which is always the
41:36 - worst decisions I make is when I try and
41:38 - add something live but let's do it so
41:40 - here we're going to get a random
41:43 - position so vector3 random position I've
41:46 - set it equal to a new vector3 here we'll
41:49 - want to feed it an x position and this
41:51 - is what we want to be random some some
41:53 - kind of random x and a y which we're
41:55 - going to set to something like seven
41:58 - tall and the random x position is going
42:01 - to be random dot range between I think
42:03 - something like two negative two point
42:06 - five and oops to 0.5 and positive two
42:11 - point five and I think that should be
42:13 - within make sure to make the F is there
42:17 - the FS to show that it's the
42:20 - I think that should be within the range
42:22 - of our screen of course that's going to
42:23 - depend on how wide your screen is and
42:26 - really when it comes to spawning I have
42:28 - so many tutorials on how to create
42:31 - time-based spawners wave systems all
42:34 - that stuff just search for brekkie x'
42:36 - spawn or wave spawner there's so much
42:39 - information there that you can check out
42:41 - but here we're just getting a random
42:42 - position and we now use this here so
42:44 - spawn it at the random position and at
42:46 - quaternion dot identity which means no
42:49 - rotation at all so now we can save that
42:51 - go into unity press the play button and
42:54 - we should see that our words spawn at
42:58 - random x positions right above the
43:01 - screen that's perfect now all we need to
43:03 - do is go and select the words so under
43:05 - word display there we can move them so
43:11 - in here we'll go void update and inside
43:16 - of an update will write transform
43:17 - translate in orbit moves not transform
43:20 - Direction to translate in order to move
43:23 - them a tiny bit each frame and we want
43:24 - to move them downward so zero on the x
43:27 - on negative something on the Y and here
43:30 - we'll give it some kind of fall speed
43:34 - multiplied with time to tell to time and
43:37 - then zero on the Z and then we'll
43:40 - specify fall speed up here so we'll
43:42 - create a public float fall speed and set
43:46 - it equal to let's try what have no idea
43:51 - and let's save that and go back into
43:55 - unity and hit play and maybe it works it
43:59 - does so analyze pretty whoops oh I
44:04 - selected a peril there now pretty
44:07 - perfect cool or parallel what's the word
44:12 - so now they are falling and we can
44:15 - actually give them random fall speeds as
44:17 - well if you want simply go to the top
44:20 - here create a start method that will
44:21 - randomize the fall speed just like we
44:23 - did with the x-axis there's so much
44:26 - stuff you can do guys I'll leave it up
44:28 - to you the last thing that we want is a
44:30 - to create a spawner the kind of
44:33 - works on a fixed timer and it would
44:36 - actually be really nice if words spawned
44:38 - faster and faster so to do that instead
44:42 - of spawning three words right at the
44:43 - beginning inside of word manager here
44:46 - we'll simply remove this start method
44:48 - and we'll create another yes you guessed
44:51 - it will create yet another component
44:54 - another script here that will call word
44:57 - timer again c-sharp he create an ADD
45:00 - let's double click it to open it up in
45:02 - Visual Studio and this is actually going
45:05 - to be really really really simple all we
45:08 - need is a word a public word manager so
45:13 - we need a reference to a word manager
45:16 - will then create a public float which
45:19 - we'll call our word delay and by default
45:21 - we can maybe set it equal to 1.5 and
45:25 - we'll also create a private float which
45:27 - will be the next word time so this will
45:30 - be the time after we start the game that
45:33 - we want to spawn the next word and by
45:35 - default we just want to spawn one right
45:37 - away so we'll set that to zero will then
45:39 - create a void update method and in here
45:42 - we want to check if time to time so if
45:44 - the amount of time elapsed since we
45:46 - started the game is greater than or
45:48 - equal to the next time that we wanted to
45:50 - spawn a word well then we can go ahead
45:52 - and spawn a words or word manager that
45:54 - add word as well as set our next word
45:58 - time equal to the current time plus o
46:00 - plus a word delay boom and we can then
46:06 - of course to make this or to make the
46:08 - delay decrease as time goes by so make
46:12 - word spawn at a faster and faster rate
46:14 - we can simply multiply this with some
46:18 - value that is this than one so multiply
46:20 - this with 0.99 and now if we save this
46:24 - and go into unity and make sure to set
46:27 - up this reference so here we need to
46:29 - drag in you need to drag in and I'll
46:32 - have a sip of tea here as I feel my
46:34 - throat keeping up with drag in our word
46:38 - manager we'll hit play and now ladies
46:42 - and gentlemen we will spawn one word at
46:45 - a time
46:47 - and they will fall and they will fall
46:49 - edie or they will spawn at a faster and
46:52 - faster rate awesome so now we actually
46:55 - have a game and I'm gonna see how far I
46:57 - can get here actually let me maximize
46:59 - this real quick
47:00 - just to make things look cooler not that
47:04 - this is the most beautiful game ever
47:05 - created but it works and you can see
47:07 - what you can do with it
47:09 - PI's love periodic PI's mute dangerous
47:16 - wish me luck guys
47:18 - and we can actually right now we don't
47:20 - have a score implemented but what we can
47:23 - do is I can pause the game right after
47:25 - woops I cannot do this while speaking
47:29 - right after I'm done to see what our
47:34 - current delay is that should indicate
47:36 - how long we were able to go numerous
47:41 - jazzy starts to get hot now heart not
47:48 - hot distinct Rin and site yeah that's it
47:53 - alright so I was able to go while
47:55 - speaking maybe not the best of
47:57 - performance is until the word delay of
47:59 - about point eight so there you go and
48:02 - you can see this decreasing for each
48:03 - word that gets spawned and of course we
48:06 - don't have a penalty right now when they
48:07 - reach the end of the screen all you
48:10 - would do here is simply give one of the
48:12 - or some of the words a box Collider and
48:14 - register it using a trigger or you could
48:17 - simply check their positions and see if
48:19 - they reach a certain point well and game
48:21 - over or penalties or whatever and make
48:24 - sure to select another active word
48:25 - there's so much stuff that you can do
48:27 - but that is everything that I wanted to
48:30 - show for this video awesome phew that
48:35 - was actually quite a complicated one
48:37 - because it had so many so many systems
48:39 - and I had to kind of keep track of all
48:42 - of them in my head while explaining why
48:45 - live streaming and yeah I think I
48:47 - overloaded at some point but I hope at
48:50 - least some of this was coherent to you
48:52 - guys and that it could help you a tiny
48:54 - bit I really hope so
48:56 - and also the hat really worked without
48:58 - it I wouldn't have been able to do it so
49:00 - like the tutorial and that's basically
49:02 - the game for now and we're going to
49:05 - switch over to a on chat format where
49:08 - you can ask all the questions that you
49:11 - want so I'm going to switch to the chat
49:13 - here and you can get a closer look at
49:16 - the Hat I know fancy and I basically had
49:22 - this for so many years I'm really
49:24 - surprised it still fits on my head I
49:26 - guess it was a bit too big when I got it
49:28 - so yeah guys ask questions I'm here to
49:33 - answer and no you did not come too late
49:36 - you can still get some Q&A and by the
49:39 - way I will of course I've loaded to
49:41 - YouTube
49:41 - don't worry and the project to github
49:43 - awesome so one thing that I will do
49:47 - before is answering questions is plug my
49:49 - patron so if you guys like these sort of
49:52 - live streams and videos and pretty much
49:55 - everything that we do there is an
49:58 - awesome way for you to support him it's
50:00 - called patreon.com I don't know if they
50:04 - want me to mention the com it's called
50:06 - patron and you can go to
50:12 - patreon.com/scishow and it's just a way
50:21 - for you to appreciate what we're doing
50:23 - and and kind of help us out and I can
50:26 - honestly say that preaching is currently
50:28 - a huge part of our income we are full
50:30 - time on this stuff and when I say we I
50:32 - mean Sophia and I and recently we have
50:35 - had a friend joining us as well which
50:37 - has been really awesome but we are
50:39 - living off of this stuff so patron is
50:41 - really necessary to keep going and yeah
50:44 - let me just quickly show you guys what
50:47 - patron is and the wooh infinite mode
50:50 - enabled there so basically all you need
50:53 - to do is go to patreon.com slash brad
50:56 - keys it is right here and you can go and
51:00 - press the big orange become a patron
51:03 - button I get I do offer a few rewards
51:05 - like mentioning you at the at the end of
51:08 - the video maybe even at the beginning of
51:10 - the video if you support
51:12 - more and and priority support and stuff
51:16 - like that and also you just become part
51:17 - of a very nice and friendly community so
51:20 - I hope you guys will go in and support I
51:22 - just wanted to to pluck it because it's
51:24 - been a little while and I recently
51:26 - redesigned it so now it is a lot yeah
51:29 - more modern and up to date with what
51:32 - we've been doing and also removes the
51:34 - goals because they were terrible and
51:37 - really outdated I I don't want to work
51:40 - by goals I want to do as much content as
51:42 - I possibly can for you guys and not be
51:44 - restricted and sit there and wait until
51:46 - we reach a certain goal
51:47 - I felt way to restrict it by that but
51:49 - yeah definitely check this out guys I
51:52 - think it's it's pretty cool also what do
51:53 - you guys think of the new logo and and
51:57 - practice thing and the colors I've I've
52:00 - done a redesign on on some of this stuff
52:02 - I hope you like it definitely give me
52:05 - feedback if you have something please be
52:08 - sweet about it but but you can give
52:10 - feedback so I think I just started
52:11 - Spotify there but now we can switch from
52:13 - infinite mode back into chat mode here
52:16 - so thanks to the awesome or to the
52:19 - people who are saying that the the logo
52:20 - looks looks good you guys are awesome
52:22 - and there you go so now the that was
52:26 - party files closed again I I don't think
52:28 - it's it's time to to listen to indie
52:30 - rock so um let's see oh also some people
52:35 - saying the old one was faded you're
52:36 - probably right but I wanted something
52:38 - new and I think this is more visible the
52:40 - old one
52:41 - just became a bit boring to me it's
52:43 - actually inspired by blast if you if you
52:46 - guys were at the Bass Pro Series in
52:48 - Denmark it's it was a csgo tournament in
52:51 - Denmark a little while back they had a
52:53 - really really cool logo I think and and
52:56 - kind of used this color scheme so I
52:57 - wanted to try something with that did I
53:02 - already use scriptable objects will you
53:04 - make a tutorial about it it seems like a
53:05 - very interesting way of coding so if you
53:07 - already did I haven't made a dedicated
53:09 - tutorial for scriptable objects
53:11 - definitely something that I want to do I
53:13 - have touched on it during the RPG
53:15 - tutorials though so that can serve as a
53:17 - pretty nice introduction but it is
53:19 - specifically to the RPG tutorial so I
53:21 - definitely want to do something
53:22 - standalone with those and in fact it's
53:24 - really good you mention it because
53:26 - I want to write that down so I'm gonna
53:27 - do that right up industry greetings
53:32 - greetings hi villian Steamworks and
53:35 - unity tutorial would be awesome I don't
53:37 - have any experience with programming for
53:39 - Steamworks actually I've heard that it
53:41 - can be a bit of a pain but has become
53:42 - easier over the last few years as with
53:45 - most stuff in unity but yeah before you
53:48 - pretty much had to be a C++ program in
53:50 - order to get it to work or at least get
53:52 - some it's this assistance but I think
53:54 - there are some nice Perkins for it now
53:56 - how did I learn programming I'm actually
53:59 - working on a video on how I got started
54:00 - with game development so stay tuned for
54:03 - that I'm really excited about that video
54:06 - greetings 12 you guys think readings
54:08 - from different places is already or
54:10 - you're always really cool to hear where
54:12 - you guys are from any limitation on
54:15 - setting up an authoritative server for a
54:16 - multiplayer game based on collisions or
54:18 - rigid bodies it's very clunky at the
54:20 - moment no I'm sorry it's not something
54:22 - that I have too much experience with I
54:23 - you know the server guy who knows all
54:26 - the good server stuff and you know can
54:28 - recommend server things to you yeah yeah
54:30 - that's not me I'm the guy asking so yeah
54:35 - I wouldn't really wouldn't make any
54:37 - recommendations um let's see
54:41 - multiplayer solutions comparison would
54:43 - be great to so many new thing is hard to
54:45 - find good info that's true that's
54:49 - actually very true that could be
54:50 - interesting um what did i do at
54:53 - dreamhack I played video games and yeah
54:58 - checked out some of the new cool stuff
55:00 - and met up with people it was very fun
55:02 - can you show us how to create and load
55:05 - save games I do have a video on saving
55:09 - high scores using player prefs it's a
55:12 - very simple saving system probably not
55:16 - what you're talking about but I think
55:17 - people tend to generalize saving a bit
55:22 - too much really you need to look into
55:24 - stuff like player player prefs and maybe
55:27 - pick up an asset on the asset store if
55:28 - you wanna get more advanced or saving
55:31 - into xml or json format and then of
55:34 - course maybe check out some ways to keep
55:40 - that there is secure but it's really a
55:43 - there's really a lot of ways to go about
55:45 - it depending on your game also if you
55:47 - want to save it on the server it's and
55:48 - it's a different thing so yeah but I
55:50 - could definitely do more with
55:52 - serializing let's see will you ever make
55:59 - unreal tutorials I would love to do
56:01 - unreal tutorials at some point it's just
56:03 - about time and prioritization and so far
56:05 - I haven't I realized it too much because
56:08 - I think most of you guys are interested
56:09 - in universitarios but definitely let me
56:12 - know if you want to see someone real
56:14 - stuff can you make a video on sound
56:16 - design I have a video on creating simple
56:18 - audio in unity so kind of an
56:20 - introduction to unit this whole audio
56:22 - system but it isn't really focused on
56:24 - sound design it's more just a fan
56:26 - technical introduction this is how you
56:28 - do stuff I definitely would like to do
56:30 - more with sound at some point but also
56:32 - at the same time it doesn't seem that
56:34 - too many of you guys are interested in
56:35 - it I think it's something that most
56:37 - people just save to the very end of
56:38 - their project and then they kind of slap
56:40 - something on which is a shame because
56:41 - sound can be so very important is it
56:45 - possible to have a video in background
56:47 - of main menu yeah you can definitely
56:49 - display video in unity by using the
56:52 - video player component I think it's what
56:54 - it's called and it's become much better
56:56 - recently in the last video called how to
57:01 - create an options menu did you create
57:02 - panel and you put all the sprites in iam
57:07 - yes I did create a panel yes and I put
57:13 - stuff inside of the panel yes how many
57:17 - inches is your monitor this one is 24
57:20 - and this one is 24 so 2 times 24 video
57:27 - untouched controls maybe at some point
57:30 - that could be really fun do you have
57:31 - plans on to tell us about Facebook or
57:33 - play games integration firebase or
57:34 - something similar not at the moment but
57:37 - if enough people request it you know the
57:39 - you know it I've said it so many times
57:41 - um are you planning to do a la piste
57:44 - system menu maybe at some point when
57:51 - will you put the game on github this
57:53 - Sunday
57:54 - also uploaded to YouTube actually maybe
57:58 - tonight I'll see if I have time in your
58:02 - last video settings menu in unity you
58:04 - make quality settings does this also
58:06 - scale images down yes as you saw some of
58:11 - the quality adjustments did definitely
58:14 - decrease the resolution on the images so
58:17 - yes and it also it scales textures and
58:19 - also UI elements and I didn't actually
58:21 - know it skilled you are elements but it
58:23 - does why don't you use serial serialize
58:25 - field actually do all the time but I do
58:27 - leave it out from tutorials once in a
58:29 - while and definitely the live streams
58:31 - because it's all about being quick and
58:32 - being kind of focusing on a certain
58:36 - subject and I don't want people to get
58:38 - distracted by words they don't know I
58:40 - want to teach your subject and try and
58:42 - get them to understand that and not get
58:44 - sidetracked because they don't know the
58:46 - word serialize field I would like to
58:48 - teach that separately so that's why I
58:50 - sometimes stray away from using more
58:52 - advanced programming ways that's also
58:54 - why I almost never use constructors or
58:55 - Gator sensitives in this video I wanted
58:58 - to or in this dive stream I wanted to
58:59 - make a point out of using a constructor
59:01 - and show you how cool and easy it is
59:03 - because of the way that we're
59:04 - programming but I often tend to the
59:06 - leave a lot of this stuff out can you
59:10 - create a first-person control that's
59:12 - better than the standard asset one I
59:14 - don't like the standard assets one
59:17 - either creating first plane controllers
59:19 - is hard if you want a really really
59:22 - really good first-person controller that
59:24 - you can use for pretty much any project
59:25 - I would actually recommend picking one
59:27 - up from the asset store personally I
59:30 - simply love your FPS ultimate FPS it's a
59:34 - great asset it's also expensive but
59:36 - maybe there's still sale today I think
59:38 - this is actually the last day of sale or
59:40 - maybe it was yesterday but I know it was
59:42 - on sale and it often it's definitely
59:45 - check that out will you teach us about
59:47 - multiplayer I would love to do some more
59:48 - multiplayer stuff um I can't do unity I
59:54 - want a personal helper I don't have $200
59:56 - if I had really should give it I'm sorry
59:59 - I cannot help everyone I really try and
60:02 - help as many people as possible
60:03 - especially if the questions are fairly
60:06 - simple for me to answer
60:08 - if I just get dumped a project and need
60:10 - to open everything up and look around it
60:11 - it just takes too much time but I try
60:13 - and answer as many questions as possible
60:15 - I'm sorry there's plenty of help to get
60:16 - on the different forums and really just
60:19 - try things out and try not to start too
60:21 - complicated just do something that you
60:23 - know that you can achieve and then play
60:25 - around with it that's the best way to
60:26 - learn don't break your neck
60:29 - did you know and I'm so darn pissed
60:33 - about it don't mention doodle diary in
60:36 - my live stream guys I will shut it down
60:40 - no fortunately I was doing something
60:44 - really fun which was Dreamhack but I did
60:47 - not get to participate once again yeah
60:51 - but I will do something soon I think
60:56 - congratulations on participating your
60:58 - first doodleberry let's see will you do
61:02 - a tutorial about adds add some unity
61:06 - that's something that I could definitely
61:07 - do if I get enough requests for it I've
61:09 - done something with services before I've
61:11 - done analytics and that went pretty well
61:15 - I think there isn't a lot of information
61:17 - about it so that's definitely something
61:19 - that I'll put in the list what advice
61:28 - would you give a new give to a new
61:29 - program who wants to dive into the
61:31 - programming industry depends on what you
61:34 - define by new if you define by define it
61:38 - as I have programmed for a long time but
61:41 - I haven't had a job yet I have very
61:44 - little experience in in finding jobs and
61:49 - getting positions and all that since
61:50 - I've pretty much been freelance for my
61:53 - entire life so I wouldn't know too much
61:56 - about that I hear it's a lot about being
61:58 - really willing to take pretty much
62:00 - anything and then just showing what
62:04 - you're able to do even though your
62:06 - position might not fulfilling the
62:10 - requirements of your position and then
62:12 - some I hear that's the way to go but in
62:15 - terms of just learning programming and
62:17 - wanting to take a peek at the industry
62:19 - and what
62:20 - it's like just get started just start
62:23 - making stuff and that's also something
62:26 - that's gonna help you get a job having a
62:28 - good portfolio having something to show
62:30 - is very important even for programmers
62:33 - showing I made this I made this I I'm a
62:36 - I know these systems I feel comfortable
62:38 - using this stuff is something that just
62:41 - cannot be underrated so really just do
62:43 - it just do something make something and
62:46 - and start small how do you make Amal to
62:52 - play a card game like werewolf or mafia
62:53 - that's not something that I can answer
62:55 - in the live stream how can I say
62:59 - what's a script and what isn't I'm sorry
63:05 - I don't understand the question
63:06 - if you could rephrase it that would be
63:08 - awesome throwing the difficult questions
63:15 - now do you plan to make a video game or
63:19 - a video on mobile came up to my sessions
63:22 - not really right now but I would
63:24 - definitely like to do something on
63:26 - performance optimization in general and
63:28 - that should also apply to mobile that is
63:30 - what I would answer some some people
63:34 - want to see RTS stuff RTS stuff is super
63:36 - advanced but we could do something
63:37 - artist like let's see one guys linking
63:44 - to his student Gary game should we check
63:47 - it out should we check out the Ludum
63:50 - dare game I'm gonna open it up here I
63:52 - think we should a lot of you guys are
63:55 - talking about firebase should I know
63:58 - what firebase is beta mobile apps and
64:01 - grow your business I'm sorry I'm not
64:03 - aware of what this is at the time looks
64:06 - like something created by Google builds
64:10 - apps fast without managing
64:11 - infrastructure have I missed something
64:16 - okay I'm sorry I'll have to look into
64:18 - firebase sorry but let's play some
64:22 - little diary games let's see I'm going
64:26 - to switch over here put this over on the
64:28 - other screen switch into the main
64:32 - view and we are going to open up that to
64:36 - patient oh yeah pitch enter comes -
64:37 - practice boom here unity game black
64:43 - storm Prague really like the central
64:45 - screen it's cool man every single day we
64:48 - even see things that inverse it can be
64:50 - good and of course it can be bad words
64:54 - opinions society it can transform you
64:59 - negativity will try and shape you into
65:01 - some hideous vessel of yourself this is
65:05 - really neat I really like this intro
65:08 - don't let that happen
65:09 - alright alright let's see where we're
65:11 - going here be yourself start okay so you
65:15 - can be squished pout and rules I should
65:18 - probably read the about with this game
65:20 - by myself or them there before you come
65:21 - up Oh check this out guys black thorn
65:26 - truck call rules rotate with the left
65:30 - and right arrow keys get the fifty signs
65:33 - of negative influence into the holes
65:35 - the more you have stuck to you the worse
65:38 - things get alright I'm ready for this
65:42 - and I'm definitely going to suck at this
65:45 - oh ok I see yeah ah what what's the
65:50 - difference between the the yellow ones
65:52 - and the not yellow ones I know this is
65:59 - hard and this is also really fun
66:01 - I really like the sticking on to
66:03 - mechanic and I really like the backstory
66:05 - oh I can use it to destroy the gooey
66:07 - things well that's awesome I really suck
66:10 - at this though there we go please this
66:14 - is surprisingly difficult this is super
66:19 - cool
66:19 - I really like the art direction in the
66:21 - simplicity oh no oh no this oh no this
66:25 - is bad guys I'm just gonna do this hope
66:29 - for everything
66:30 - oh Jesus okay yeah yeah I failed
66:39 - really really well done I love the menu
66:42 - I love the intro I love the art
66:45 - direction I don't have sound enable so I
66:46 - cannot comment on that if the game has
66:48 - sound I don't know the mechanics are
66:52 - super interesting only thing that I
66:54 - would change is maybe make it so that it
66:57 - takes longer for it to become difficult
67:00 - at least for me the it felt fairly well
67:05 - balanced and then holy [ __ ] I couldn't
67:07 - do a thing but that's probably because
67:09 - you're using some kind of exponential
67:12 - difficulty curve and you have to really
67:16 - be careful with those because they will
67:17 - get out of hand really quickly so but
67:20 - really really nice game and yeah I
67:22 - really like the art of it and and the
67:24 - introduction was with the story was
67:26 - really good maybe also more particle
67:29 - effects
67:30 - I love particles but really cool how
67:35 - would I feel if your future son daughter
67:36 - use JavaScript I think I'll just be
67:40 - really happy if they program can you
67:42 - make a tutorial on translucent material
67:44 - maybe at some point I don't do is too
67:45 - much shader writing but I definitely
67:48 - want to do something with shaders at
67:50 - some point from what country are most
67:53 - people that are watching you um I think
67:55 - most of you guys are from the US some
67:57 - people from Denmark England and a lot of
68:01 - people from India actually what is your
68:05 - next game tutorial series on the YouTube
68:06 - channel I haven't planned one yet
68:08 - particles yes particles are fun biscuit
68:11 - oh thanks from yes cat like coding has
68:16 - awesome tutorials on materials and
68:17 - shaders and other stuff as well
68:19 - definitely check him out
68:21 - I shoot a tutorial series that would be
68:23 - awesome yeah that would be really nice
68:26 - alright guys I think that's enough for
68:28 - questions and we also played a game and
68:29 - everything yeah I think this was a
68:31 - success and also we didn't get that many
68:33 - errors doing or doing the tutorials
68:36 - that's awesome
68:36 - look I'm gonna take off the hat yeah I
68:40 - know it's sad I'm already here it's it
68:43 - was really hot having that on it looks
68:46 - pretty fun
68:47 - okay I'm gonna put it back on until this
68:50 - tree is done otherwise I'd just get to
68:54 - subconscious so yeah the hats back on
68:56 - don't worry don't worry but we will
68:58 - still end the stream here so thank you
69:00 - guys for all the questions I hope you
69:02 - guys had fun I really did end up and
69:05 - that's industry by everyone riding what
69:07 - country they're from in the comments I
69:09 - really want to see that that could be
69:10 - super fun so yeah definitely right where
69:13 - you're from right now where are you
69:14 - based where you're watching this from
69:16 - and on that check out patreon.com slash
69:19 - breakfast if you want to support these
69:20 - streams and the content in general you
69:22 - guys are awesome couldn't do it without
69:24 - you and yeah thanks for watching guys
69:27 - and I'll see you in the next video bye
69:30 - thanks of the awesome patreon supporters
69:32 - who donated in November and a special
69:34 - thanks to German Amanda rue C infinity
69:36 - PPR and soft tune cybercrime meter
69:38 - team's Kirk Chaisson r5 James P Dan
69:41 - Evans Thomas Wally
69:42 - Superman the great John Beauregard cocoa
69:44 - brown Jason the Tito
69:45 - Alex Rockets key manulis James Rogers
69:47 - Robert pond Rob fair and Rasmus you guys
69:50 - Rock

Cleaned transcript:

hello everyone in this large stream recording we are going to have a look at creating a falling word typing game and we're going to create something along these lines here as you see here if I hit play we see these words falling from the top of our screen and we have to type oops we have to type them out before they reach the end in order to win or else our game will punish us so that is kind of the base of the game it's just it's just plain typing and of course we generate random voids you can do plenty of stop stuff with this like yeah two more words you can have words explode into other words you can create cool effects when typing and destroying words you can make different kinds of punishments when you type the wrong letters or if the words reach the bottom of your screen there's so much stuff that you can do with this it's a really fun simple game and it's actually fairly hard to code also if you're wondering about the Hat if you're watching this when it's not December I'm sorry but it's currently December so that's why the Hat is there I wanted to bring it on and this game is inspired by many games of this type but especially this one that I really like called Z type so it it does basically the exact same thing but the cool thing is here that they've added some effect so every time you type a letter it shoots out its gun and that's just really fun so that's an example of where you can take this very easily they use pretty much the same backend code as what I've done here so just a proofofconcept to get your site started but that's an example of where you can take it from here and without further ado let's get into it so let's go file new project and here we're going to write let's call it something like word falling falling falling word typing game best description of all time and that will hit 2d and hit create project and unity is going to load up a fresh project for us so meanwhile we can have a look at some some questions in the chat here if we have anything pressing one that I do want to mention oh look it's working but one thing I do wanna mention is unfortunately I wasn't able to participate in this month's or this previous Durham DeRay I really wanted to but I was at Dreamhack so I was prevented from doing so but I definitely want to make a small game soon my oh I just I just really want to do some programming um not for a tutorial just for fun so hopefully I'll do something soon if I get the time but now our unity project has booted up so we are going to continue with D totaram first thing first I'm going to select my main camera and I'm going to change the background to kind of a dark color we can go do black we can do a dark green if we want it to be kind of matrix like it could be fun let's do that and let's save the scene right away here under main so that I can hit ctrl s without it popping up next we could go ahead and sketch out a canvas and a text element and kind of make that look great already however that's not really the base of our game what I ended up doing was actually creating 90% of the code in a nonvisible nonunity specific way and I think that works really well for this game because all we are really handling is words and words are very simple objects they are in essence just strings and when we need to display them all we need is a text element so it's really really simple to create this inside of unity so let's instead begin by kind of sketching out the structure of our program and then start showing it using unity so we'll go ahead and first of all create an empty object and we'll reset this inside of unity and we'll call it all word manager and this is where we'll add a component called word manager of type C sharp let's say create an ad and let's open it up in Visual Studio and the first thing that we want to add to this script well we can go ahead and delete the start and update methods but the first thing that we want to add is a list that will contain all of our words now we haven't gone ahead and created a word class you could go ahead and just use a string here but I actually want to define these words as classes so we can have each word be responsible for um different things such as removing letters checking how many letters are left and yeah just keeping track of how much of the word we've currently written so that's why I want to go ahead and create a separate class for this that will create in just a second and we'll just call this list words I'm also going to make it public so that we can see it in the inspector and so that we might be able to edit it through script later now we can save this and we can go into unity again and let's this time create a csharp script just inside the project panel because we don't want this to sit on any objects we just want this to be the word csharp script let's open this up in Visual Studio as well come on there we go and this here we don't want to derive from monobehaviour again we don't want this to be a component we just want this to be a class therefore we can also delete both the start and the update method and we'll also make sure to mark this class as system dot serializable so that all of our variables will show up inside of the unit inspector and the main variable that we want to create here is a public strength and this is current of course going to contain the word itself we'll also create a constructor so public word and a constructor is something that I haven't used that much in my tutorials basically what it is is a way to define what happens when our class is created so when we create a new word object our constructor allows us to set up initial variables and do kind of yeah set up stuff so one thing that we could do here is allow ourself to pass in a word so I'm gonna write underscore word so we don't confuse these two and then inside of our constructor we can set word equal to underscore word this way when we go inside of our word manager and if we in here were to just create say a start method we can now create a new word and call it words by setting it equal to a new word and then we can pass in a string say example there we go and we don't have to create the new word and then afterwards go word dot word equals example so it's just cleaner cool and for some reason this is not kind of recognizing that we've created a word script and I think all we need to do is restart Visual Studio and that should work once more let's try that so open studio here and we should see it recognizing the fact that word is a thing cool so now inside of our word manager we can add some more functionality the first thing that we want to do is add a new word to do that we'll create a start method and inside of our start method we'll just begin by adding a few words let's just start by creating three words of course we need a method in order to create these words so we'll create a public board add word and in here we'll create a new word in the way that I just showed it's a word word equals a new word and now we can feed it in a word such as again example however we don't want to feed it in a word that is predefined we want to use a random word and therefore we need to create a random word generator so inside of unity will again go to the project hit csharp script and create a word generator and let's double click this to open it up English is studio as well again oops don't do that again we want to delete both of our methods and inside of our word generator we basically want to have some kind of public static string called get random word so this is basically just a static method that will return a random word of our choosing and in order to get a random word we could of course have a look at creating our own words from scratch if you don't want it to be some from the English language or you could simply use a very very long list of words you could take words from a dictionary you could create your own huge text file with a bunch of words that you get a random one from and this is actually fairly easy loading data in from a text file in unity is actually not something that has to be incredibly hard but the absolute easiest way is simply defining a very very big array that we can get a random word from and I've actually done this so let's go ahead and write private static string let's mark it as an array and we'll call it all word list and the way that we create this word list is basically by opening and closing curly brackets we'll end with a semicolon and in here we can then write each word so word one word two and so on and this is the syntax and I've gone ahead and created a whole list of words using this syntax that I'm just gonna copy in from my secondary monitor here so you can see I have a bunch of words like sidewalk jump pretty wood and so on and you can add as many words as you want here or delete as many words as you want so I'm just gonna save this and I'm also going to show you where I got these words from because I'm not that creative and coming up with cool words to use I actually just went to Chrome and search for a random word generator and this site came up random lists comm slash random works and in here I could specify a quantity so a amount of words if we type in 50 here and whether or not I don't want duplicates I don't want that and then hit refresh you can see it gives me 50 words and if we now simply select all of these hit copy and paste them into some kind of text software so I have sublime here you can see it pastes them nicely one add one word per line so you could easily save this as a text file and load it into unity or format it in the same way that I've done here totally up to you again I will have these words available for you as part of the project on github if you want to download it so yeah but for now you can just use your own placeholder words cool so let me just see if everything is cool with the here awesome things are going according to plan I think except for the the Hat maybe that was kind of improved but that's alright and yes this is super hard coding but it works so that's alright so now when we want to get a random word all we want to do is just get a random element inside of this string away and the way to do that is by first getting a random index so the number associated with one of these elements will create an integer called random index and set it equal to random dot whoops random and now it doesn't autocomplete here but I'm sure that this is correct random dot range and we want to get a number between zero so the first index is zero that Sidewalk and then the length of our array so that's going to be word list dot length then we will take this random index and use it to find a word so our string random word will be equal to our word list and then we use the index random index cool and then we can simply return a random word so now inside of our word manager instead of just hard coding in a word here we can get a random word really easily all we need to do is write word generator word generator and for some reason again it isn't registering here but we have to do dot and then I think it's get random word yes dot get random word and open and close that so if we now save this closed down visual studio once again to get our autocomplete back here if one of you guys has to trigger other than just restarting Visual Studio for this that would be really nice it's been acting out today and now you should see that yeah this looks fine and instead of a word magnitude now recognizes that we can go where generator dot kid rate word so now we are adding some random words and we can actually just go ahead and maybe debug that like these to show them in our console so we're going to throw a debug deadlock with our word dot word if we save that go into unity and I think we can just go ahead and hit play here we should see three random words pop into the console awesome and inside of our word manager we still see an empty list and that's because we now need to take our word that we created and add it to our word list and that's to be easy all we need to do instead of actually let's keep the debug the block here but all we need to do is go words dot add I mean then feed it in our new word and now we should see that if we play the game inside of unity and wait for it to compile here three words get as it gets added to our array jassie floor and scarves awesome and you'll get of course three random words each time you play so that's it for adding words however we don't have any way of registering what we are typing and we have we don't have any way of kind of removing words so next let's create a public void called type letter and here will of course take in a letter so this is going to be of type char or character will call it later and we want to do some checking here so the first thing that we want to do is define an active word so in my demo I basically just went ahead and said the first word with the starting letter that you type will from here on out be the active word and all letters should type from there will only be checked against that word so you basically just select a word by typing the first letter in the word and that's what we'll do here let's go to the top and let's create kind of an active words so let's do private private bowl has active word and it's also do a private word which will store the active word then down here when we type the data we will check if has active word so if we already have an active word we can go ahead and check if the letter that we typed was the next letter in the sequence and if it is we want to remove a letter from the world so check if letter was next remove it from the word if it was not so if we or if we don't have an active word well then we want to check if the letter that we typed is the beginning letter in any of the words on screen so we want to loop through all of our words so for each word which we'll call word in our words list we want to check if the word and then we want to check if the first letter in the word we can of course the word dot word and then get the first character in the string and see if that is equal to letter and this will actually work but it's not pretty I think a better way of doing this is by going into our word here and simply creating a function that we'll call public char get next letter so this function will return a character which is the next letter in our word so we haven't removed any letters in a word this will always return the first letter so here we can simply return word and then in the beginning this is going to be 0 next it's going to be 1 then 2 then 3 so we need some kind of index specifying what letter we're currently looking at in our word or how many letters we have typed so far and we'll do that up here we'll create a private integer called type index and we'll default this to 0 so inside of our constructor we'll set type index equal to 0 then when we get the next letter we'll simply return word to the type index which will start off at 0 so now inside of our word manager we instead of doing if word that word to the 0th is equal to letter will simply do if word dot next letter is equal to letter and if it is well then we want to go ahead and select or mark this word as the active board so we'll set active word equal to this word we also said has active word to true because we now we have an active word and we also want to go go word dot type letter so we want to remove the first letter we want to type it out to do that we'll need to create another method so we'll do a public void called type letter and let's see here all we want to do here is really just increase the type index and then we want to remove the letter on screen but we'll do that later when displaying it all we need to do right now is just increase the type index and our system will understand that this letter has been typed let's save that let's go into a word manager and at the very bottom here we simply want to break out of our for each statement this will make sure that as soon as we find a letter and set it active we don't go ahead on and search for more letters start or more words starting with the same letter and also said those to active that will lead to some very weird behavior so we'll make sure to put break here and so it will exit out of our for each so if we actually find an active word all we need to do all we need to do is check if the letter was next so if word dot get oops if active word dot get next letter is equal to letter the same check that we do down here but now we check against the active word if this is the case well then we want to go ahead and type it so we can simply do active word oops active active word dot type letter and there we go and finally we can go to the bottom even check if we have an active words so if has active word and and active word dot word typed or is complete or something along these lines so if we've tied the type the entire word here well then we want to set has active word to false and then we want to remove this word from the lists of words that remove active word so we put this in here just to make sure that if we finish typing the word we mark it as non active and we remove it from the list we also all we need to do to do this is go and make F method for checking if the word has been typed through and that is actually a very simple thing to do all we need to do is go into our word create a public pool called word typed and here we'll create a boolean called word typed set it equal to and now here we need to make a check we want to check if type index is greater than or equal to whoops greater than or equal to word dot length so if our index starting at 0 has been increased enough times that it has that it is now equal to or greater than the length of the word all of our word has been typed and so word type will be true if not this will be false and then word type will to be false so if word typed we can go ahead and remove the word onscreen again we won't do this yet and then we can simply return all word typed variable so that we know instead of our word manager whether or not it was typed cold so I believe this should actually work now I don't think we'll get any errors hopefully yes awesome and if we hit play let's see what happens so we get crack rely and homely and if I have a look inside of my word manager here and type in crack nothing happens all right so this is interesting nothing currently happens let's see what we're doing right or wrong here so of course we aren't trip triggering our type letter now this function will totally work but we aren't setting this up to our keyboard so the next thing that we want to do is create a script that will actually call this type letter function and before that we do that I just want to have a quick look in the chat chat to see if everyone's following I know this is very programming intensive especially compared to some of the other live streams but I think it's it's pretty neat and it's always fun to try and take an another approach than the usual unity approach because this is not kind of how you would normally go about creating something in unity normally you start with game objects and components and you try and kind of work your way through without doing any scripting and then when you really need to script something you go and add a tiny script that does only what you need and not more but here we are actually coding kind of an entire structure for a program and then later we'll just be adding unity on top to kind of display everything so awesome to you guys who are drawing enjoying the Hat I hope you guys are feeling nice and are able to follow along looks like it that's awesome and so those of you who are asking if this will be on YouTube of course it will always is it will be up this Sunday cool so next up let's trigger this type letter function so that we can actually see this stuff working to do that we need to go into unity and we need to create another script on our word manager and this one will be called word input again csharp create an ADD let's double click it to open it up in Visual Studio and we want to read out the solution here cool and here we'll use a very very simple function that not a lot of people know about we'll use it inside the update and it's called input dot input string this basically as it says here returns the keyboard input entered this frame so basically if you just slam your hands on the keyboard this is going to show all of the characters that you typed that frame and the cool thing for us is that we can loop through these as individual characters to make sure that we get them all so that if you type multiple characters in one frame we will catch them all and insert Pokemon pun here so we basically just want to go and loop through them using a forage loop we want to look at each character which we'll call later in our input input string and for each one of these we want to access our word manager and type out a letter so for now we can maybe just do a debug deadlock to see that this is working and we'll just debug that lock out the letter on that we're looking at if we save this go into unity and play it will of course debug the lock are three words and then if I try and write test weensy it te s T so it's working awesome and if I just slam my hands on the keyboard whoa okay something happened I might have hit something that I shouldn't you can see that it gets all of the keys and I wasn't actually able to get multiple in a single frame or maybe I was and it just split them up but we do get all of them even if I press multiple keys simultaneously so that is pretty cool and I need to reopen all of the programs that I just minimized so now we can go and create a reference to our word manager we will create a woops caps dog is on a public word manager and we'll call it word manager and we'll just reference this through the inspector then in here we'll access our word manager and we'll go dot type letter and the letter that we want to type is the letter that we are looking at if we save that go in to unity and hit play we should now see that this function gets called and let's check if we select our word manager and I try and type out the word sambar we get a null reference and that's because I need to reference this boom there we go okay let's try this again and I try and type out the word awesome and it would be pretty awesome if it now works ah some boom it's removed from the list so if I type out the word correctly it gets removed from the list also if I type start typing mellow so I'll type an M and an E and then try typing you a bunch of times an A which is not in the word nothing happens until I type the ll and the O and W and now it gets removed from the list so you can type anything that you want but you can only proceed by typing the correct character and that's what we want you can of course add penalties if you don't type the correct stuff reduce your score or maybe add random words when you type the wrong thing but we now have a way of differentiating between the two super cool so the next thing that we want to do is probably allow ourselves to UM see the words on screen so let's go ahead and make these visible and this is kind of the unity part of this tutorial so we'll go inside of our hard can rightclick we'll go UI and we'll create a text element and by default the canvas here is going to be fitted to screen space I want to change this to world space to make our units more manageable and want to change the scale to point zero one five or something along these lines point zero one five on all the axes that looks pretty decent and I want to scale it up to fit most of our world screen here I'm also going to take our text element that we just created and center it by holding down alt and pressing in the center here I'm also going to scale it up on the font size to something like 24 I'm going to Center it both horizontally and vertically and change the color to a white now we can see it pretty clearly let's call this a test word and we can now see that we can easily move this around the screen and have it fall down if that's what we want it but a very nice thing that we could have on this object is a script that is kind of responsible for displaying or text let's create a separate script for this we'll call it our word display again that's the next C sharp hit create an ad and it's also rename object here to word and let's then drag it into our project to create a prefab out of it and remove it from our on scene so now if we double click on a word display we can go ahead and sketch this out so the first thing that we need at the top here is a actually we don't need to start an outtake here we might need update at some point but not start so let's create a public reference to our text element so public text however whenever we're dealing with text we need to be using the correct namespace so up here we'll import Unity engine dot UI because text is a UI element so we'll create a public text we call it text and then we'll create a public void that we'll call set word and this will take in a string which is going to be the word and all this will do is simply set text the text equal to the word passed in then if we save that and go into our word here this is where we actually set up our word but we also need a reference to a word display in order to be able to access our set word method so let's have our word manager kind of set this connection up whenever we add a new word we could simply you know create a reference to or we could instantiate a prefab our word prefab that we just created we could get the word display on script on that prefab and we can then feed it into our word so that a word always has a reference to a word display let's go ahead and do that let's create a public word display variable here called display actually let's make it private but then inside of our constructor we can we can also allow it to pass in a word display so word display and we'll call it underscore display and then down here we can go display equals underscore display just like we do with our word so we pass in a word as a string and our display component and then right after we can actually access it and go dot said word and we can simply feed it in our word so that should work now however we of course still need to set this up inside of a word generator or a word manager I should say so here now it's complaining that we're only feeding it in a string which is a word we also need to feed it or display excuse me so to do that we first need a way of spawning in our object and I actually want to do this in another script so let's go to our word manager that's it a component and let's now create a word spawner that's right I want you that we needed to create a lot of different scripts but I think this makes a lot more sense when we split it up in this way because otherwise we would just end up with a two kilometer long script and that's not something that is really desirable for anyone so let's open up our word spawner as soon as unity kind of recognizes that I'm doing things come on unity read out the solution that might be what it was waiting for it was so inside of our word spawn and now we can create a public void called spawn word and in fact we do not want this to be a void we want this to return a word display so that we can access it from in within a word generator so that we can access it from it within a word so that we can call a method on a word display I know this is crazy but it does work and it is actually a fairly decent way of going about it so now inside of our spawn word method we of course want to spawn in so we want to instantiate our word prefab to do that we need a reference to a word prefab so public game object word word prefab and we then instantiate our word prefab as well as get a reference to it to the object that we just instantiated we'll call this our word object we can then use get component on a word object word object get component to get a word display we can store word display inside of a word display variable called word display and finally we can return the word display there we go sub we've now created the object we've created a word prefab we've gotten the word display component from that prefab and we've returned it so that now inside of our world generator or word manager we can create a reference to a word spawner so public word spawner word spawner and here we can go word spawner dot spawn word and we can then retrieve the word display from that spawners of word display and we can feed it in here or we could just do very simply word word equals new word where we get a random word and we spawn in a word prefab as well as feeded the display on that prefab so now we're simply giving it two arguments which are basically functions doing a whole bunch of stuff but we are we aren't doing it inside of the script we're doing it in separate scripts which just looks really nice so we're feeding it a word and the display on a prefab so that's one way that you can kind of link an entire system of or game system to unity in order to display stuff if we now save this and save everything else we should actually I don't think get any errors and I think it was will work in some capacity so if we go and select our word manager we can drag in our word spawner boom to link those two up we can take a word prefab and drag that into a word spawner and now when we hit play it's not going to be pretty but something is going to work and we also get a null reference exception and that is because we haven't hooked up so inside of our word prefab we also need to feed this our text we could also just use K component for this which is probably better but we aren't kind of a tight time schedule here so we'll just link it up manually but now if we hit play we can see the two work the three boys are encouraging interrupt and cut and if I see here I have three words one is showing cut what is showing interrupts and the third one is showing encouraging yes see now that's encouraging because that means things are working we aren't currently seeing it on the screen there and that's because our words are currently not within our canvas we need to parent them to our canvas because everything inside or all UI elements need to be inside of a canvas in order to be drawn to do that all we need to do is get a reference to our canvas inside of a word spawner so we'll create a public transform and we'll call it our word canvas then when we spawn it we want to set the parent to our word canvas and that should actually be it so if we now hit play oh we need to reference this domain under our word manager we need to drag in our canvas as the word canvas and if we now hit play we should see yes there the three words are we have feel mark and verdict boom that's awesome and I can go ahead and write these words I can write feel and it will disappear from the list but it currently won't disappear from the screen and also they're currently spawning at the very center on top of each other they aren't falling there currently is lots of stuff to add but the hardest parts of this system is definitely over with now it's just about adding detail because that's really all that this is is kind of detail so the next thing that we can now do is hook it up so that when we are write a word we also remove it and so that when we write each letter that also gets removed to do that we just need to add a tiny bit more functionality to our word display so now we can set the word directly but we also want to be able to remove a letter and to do that we simply want to go text a text equals text text dot remove we want to go start at the first letter and only go one letter forward to only remove the first letter we can also set text dot color equal to colored red to show that whenever we are removing a letter on a text object this is what we currently have focused we can also add another method public void remove word for when we are completely done with the word to you that will simply call destroy game object and that should remove the entire word if we save this now and go inside of our word script we can see inside of our type letter function we want to remove a letter on the screen we've already put that here so we'll simply access our display and go dot remove letter and that should be it and inside of our word type we want to remove the word on the screen so here we'll go display don't remove word and that should also be it so now if we hit save and hit into unity and hit play everything that we need should be set up and we should actually see this working of course I will just separate these out real quick so we can see them and I'm gonna write D a F F Y and it disappears from a scene the same thing with three and the same thing with painstaking there we go so now we have actually synced up our code our actual gameplay code with these display elements and that was kind of the hardest part because now it's just a part about adding different spawn positions about configuring how they fall about adding point scores and all that stuff we can definitely go in and just add a tiny bit of that but first let me just check the chat here to see if everything everyone is doing good and just let me check if the signal on the broadcast is still up yeah okay cool I don't get any feedback when I'm programming that you guys are still here is there kind of just you know stop pretending that I'm the only one in the room and things get kind of weird when I realized there are 300 people in here so good to see that you guys are still here I just needed a reminder and yeah one guy in the chat is saying to use text mushroom I couldn't agree more if you want to create this game yourself don't use unities builtin text use text Metro I have an entire youtube video dedicated on the subject that you should definitely check out it renders text much crisper more performant gives you more layout and styling options it's just better in every single way and it's been adopted by unity so you can get it for free text mesh it's awesome I just didn't want to spend time with it here because I've shown it so many times already yeah awesome cool yeah look at we'll get going again so um I'm just gonna bring up my stuff here and yes the next thing that we want to add is some proper spawning to do that will go inside of our word spawner and maybe randomize the position of our words a bit and you can definitely do this using spawn points if you want you can do a roundrobin you can randomly select spawn points or we can just choose a random position through a random number generator I think we should actually do that I didn't do that for the demo but let's try and see if we can work it out I've which is always the worst decisions I make is when I try and add something live but let's do it so here we're going to get a random position so vector3 random position I've set it equal to a new vector3 here we'll want to feed it an x position and this is what we want to be random some some kind of random x and a y which we're going to set to something like seven tall and the random x position is going to be random dot range between I think something like two negative two point five and oops to 0.5 and positive two point five and I think that should be within make sure to make the F is there the FS to show that it's the I think that should be within the range of our screen of course that's going to depend on how wide your screen is and really when it comes to spawning I have so many tutorials on how to create timebased spawners wave systems all that stuff just search for brekkie x' spawn or wave spawner there's so much information there that you can check out but here we're just getting a random position and we now use this here so spawn it at the random position and at quaternion dot identity which means no rotation at all so now we can save that go into unity press the play button and we should see that our words spawn at random x positions right above the screen that's perfect now all we need to do is go and select the words so under word display there we can move them so in here we'll go void update and inside of an update will write transform translate in orbit moves not transform Direction to translate in order to move them a tiny bit each frame and we want to move them downward so zero on the x on negative something on the Y and here we'll give it some kind of fall speed multiplied with time to tell to time and then zero on the Z and then we'll specify fall speed up here so we'll create a public float fall speed and set it equal to let's try what have no idea and let's save that and go back into unity and hit play and maybe it works it does so analyze pretty whoops oh I selected a peril there now pretty perfect cool or parallel what's the word so now they are falling and we can actually give them random fall speeds as well if you want simply go to the top here create a start method that will randomize the fall speed just like we did with the xaxis there's so much stuff you can do guys I'll leave it up to you the last thing that we want is a to create a spawner the kind of works on a fixed timer and it would actually be really nice if words spawned faster and faster so to do that instead of spawning three words right at the beginning inside of word manager here we'll simply remove this start method and we'll create another yes you guessed it will create yet another component another script here that will call word timer again csharp he create an ADD let's double click it to open it up in Visual Studio and this is actually going to be really really really simple all we need is a word a public word manager so we need a reference to a word manager will then create a public float which we'll call our word delay and by default we can maybe set it equal to 1.5 and we'll also create a private float which will be the next word time so this will be the time after we start the game that we want to spawn the next word and by default we just want to spawn one right away so we'll set that to zero will then create a void update method and in here we want to check if time to time so if the amount of time elapsed since we started the game is greater than or equal to the next time that we wanted to spawn a word well then we can go ahead and spawn a words or word manager that add word as well as set our next word time equal to the current time plus o plus a word delay boom and we can then of course to make this or to make the delay decrease as time goes by so make word spawn at a faster and faster rate we can simply multiply this with some value that is this than one so multiply this with 0.99 and now if we save this and go into unity and make sure to set up this reference so here we need to drag in you need to drag in and I'll have a sip of tea here as I feel my throat keeping up with drag in our word manager we'll hit play and now ladies and gentlemen we will spawn one word at a time and they will fall and they will fall edie or they will spawn at a faster and faster rate awesome so now we actually have a game and I'm gonna see how far I can get here actually let me maximize this real quick just to make things look cooler not that this is the most beautiful game ever created but it works and you can see what you can do with it PI's love periodic PI's mute dangerous wish me luck guys and we can actually right now we don't have a score implemented but what we can do is I can pause the game right after woops I cannot do this while speaking right after I'm done to see what our current delay is that should indicate how long we were able to go numerous jazzy starts to get hot now heart not hot distinct Rin and site yeah that's it alright so I was able to go while speaking maybe not the best of performance is until the word delay of about point eight so there you go and you can see this decreasing for each word that gets spawned and of course we don't have a penalty right now when they reach the end of the screen all you would do here is simply give one of the or some of the words a box Collider and register it using a trigger or you could simply check their positions and see if they reach a certain point well and game over or penalties or whatever and make sure to select another active word there's so much stuff that you can do but that is everything that I wanted to show for this video awesome phew that was actually quite a complicated one because it had so many so many systems and I had to kind of keep track of all of them in my head while explaining why live streaming and yeah I think I overloaded at some point but I hope at least some of this was coherent to you guys and that it could help you a tiny bit I really hope so and also the hat really worked without it I wouldn't have been able to do it so like the tutorial and that's basically the game for now and we're going to switch over to a on chat format where you can ask all the questions that you want so I'm going to switch to the chat here and you can get a closer look at the Hat I know fancy and I basically had this for so many years I'm really surprised it still fits on my head I guess it was a bit too big when I got it so yeah guys ask questions I'm here to answer and no you did not come too late you can still get some Q&A and by the way I will of course I've loaded to YouTube don't worry and the project to github awesome so one thing that I will do before is answering questions is plug my patron so if you guys like these sort of live streams and videos and pretty much everything that we do there is an awesome way for you to support him it's called patreon.com I don't know if they want me to mention the com it's called patron and you can go to patreon.com/scishow and it's just a way for you to appreciate what we're doing and and kind of help us out and I can honestly say that preaching is currently a huge part of our income we are full time on this stuff and when I say we I mean Sophia and I and recently we have had a friend joining us as well which has been really awesome but we are living off of this stuff so patron is really necessary to keep going and yeah let me just quickly show you guys what patron is and the wooh infinite mode enabled there so basically all you need to do is go to patreon.com slash brad keys it is right here and you can go and press the big orange become a patron button I get I do offer a few rewards like mentioning you at the at the end of the video maybe even at the beginning of the video if you support more and and priority support and stuff like that and also you just become part of a very nice and friendly community so I hope you guys will go in and support I just wanted to to pluck it because it's been a little while and I recently redesigned it so now it is a lot yeah more modern and up to date with what we've been doing and also removes the goals because they were terrible and really outdated I I don't want to work by goals I want to do as much content as I possibly can for you guys and not be restricted and sit there and wait until we reach a certain goal I felt way to restrict it by that but yeah definitely check this out guys I think it's it's pretty cool also what do you guys think of the new logo and and practice thing and the colors I've I've done a redesign on on some of this stuff I hope you like it definitely give me feedback if you have something please be sweet about it but but you can give feedback so I think I just started Spotify there but now we can switch from infinite mode back into chat mode here so thanks to the awesome or to the people who are saying that the the logo looks looks good you guys are awesome and there you go so now the that was party files closed again I I don't think it's it's time to to listen to indie rock so um let's see oh also some people saying the old one was faded you're probably right but I wanted something new and I think this is more visible the old one just became a bit boring to me it's actually inspired by blast if you if you guys were at the Bass Pro Series in Denmark it's it was a csgo tournament in Denmark a little while back they had a really really cool logo I think and and kind of used this color scheme so I wanted to try something with that did I already use scriptable objects will you make a tutorial about it it seems like a very interesting way of coding so if you already did I haven't made a dedicated tutorial for scriptable objects definitely something that I want to do I have touched on it during the RPG tutorials though so that can serve as a pretty nice introduction but it is specifically to the RPG tutorial so I definitely want to do something standalone with those and in fact it's really good you mention it because I want to write that down so I'm gonna do that right up industry greetings greetings hi villian Steamworks and unity tutorial would be awesome I don't have any experience with programming for Steamworks actually I've heard that it can be a bit of a pain but has become easier over the last few years as with most stuff in unity but yeah before you pretty much had to be a C++ program in order to get it to work or at least get some it's this assistance but I think there are some nice Perkins for it now how did I learn programming I'm actually working on a video on how I got started with game development so stay tuned for that I'm really excited about that video greetings 12 you guys think readings from different places is already or you're always really cool to hear where you guys are from any limitation on setting up an authoritative server for a multiplayer game based on collisions or rigid bodies it's very clunky at the moment no I'm sorry it's not something that I have too much experience with I you know the server guy who knows all the good server stuff and you know can recommend server things to you yeah yeah that's not me I'm the guy asking so yeah I wouldn't really wouldn't make any recommendations um let's see multiplayer solutions comparison would be great to so many new thing is hard to find good info that's true that's actually very true that could be interesting um what did i do at dreamhack I played video games and yeah checked out some of the new cool stuff and met up with people it was very fun can you show us how to create and load save games I do have a video on saving high scores using player prefs it's a very simple saving system probably not what you're talking about but I think people tend to generalize saving a bit too much really you need to look into stuff like player player prefs and maybe pick up an asset on the asset store if you wanna get more advanced or saving into xml or json format and then of course maybe check out some ways to keep that there is secure but it's really a there's really a lot of ways to go about it depending on your game also if you want to save it on the server it's and it's a different thing so yeah but I could definitely do more with serializing let's see will you ever make unreal tutorials I would love to do unreal tutorials at some point it's just about time and prioritization and so far I haven't I realized it too much because I think most of you guys are interested in universitarios but definitely let me know if you want to see someone real stuff can you make a video on sound design I have a video on creating simple audio in unity so kind of an introduction to unit this whole audio system but it isn't really focused on sound design it's more just a fan technical introduction this is how you do stuff I definitely would like to do more with sound at some point but also at the same time it doesn't seem that too many of you guys are interested in it I think it's something that most people just save to the very end of their project and then they kind of slap something on which is a shame because sound can be so very important is it possible to have a video in background of main menu yeah you can definitely display video in unity by using the video player component I think it's what it's called and it's become much better recently in the last video called how to create an options menu did you create panel and you put all the sprites in iam yes I did create a panel yes and I put stuff inside of the panel yes how many inches is your monitor this one is 24 and this one is 24 so 2 times 24 video untouched controls maybe at some point that could be really fun do you have plans on to tell us about Facebook or play games integration firebase or something similar not at the moment but if enough people request it you know the you know it I've said it so many times um are you planning to do a la piste system menu maybe at some point when will you put the game on github this Sunday also uploaded to YouTube actually maybe tonight I'll see if I have time in your last video settings menu in unity you make quality settings does this also scale images down yes as you saw some of the quality adjustments did definitely decrease the resolution on the images so yes and it also it scales textures and also UI elements and I didn't actually know it skilled you are elements but it does why don't you use serial serialize field actually do all the time but I do leave it out from tutorials once in a while and definitely the live streams because it's all about being quick and being kind of focusing on a certain subject and I don't want people to get distracted by words they don't know I want to teach your subject and try and get them to understand that and not get sidetracked because they don't know the word serialize field I would like to teach that separately so that's why I sometimes stray away from using more advanced programming ways that's also why I almost never use constructors or Gator sensitives in this video I wanted to or in this dive stream I wanted to make a point out of using a constructor and show you how cool and easy it is because of the way that we're programming but I often tend to the leave a lot of this stuff out can you create a firstperson control that's better than the standard asset one I don't like the standard assets one either creating first plane controllers is hard if you want a really really really good firstperson controller that you can use for pretty much any project I would actually recommend picking one up from the asset store personally I simply love your FPS ultimate FPS it's a great asset it's also expensive but maybe there's still sale today I think this is actually the last day of sale or maybe it was yesterday but I know it was on sale and it often it's definitely check that out will you teach us about multiplayer I would love to do some more multiplayer stuff um I can't do unity I want a personal helper I don't have $200 if I had really should give it I'm sorry I cannot help everyone I really try and help as many people as possible especially if the questions are fairly simple for me to answer if I just get dumped a project and need to open everything up and look around it it just takes too much time but I try and answer as many questions as possible I'm sorry there's plenty of help to get on the different forums and really just try things out and try not to start too complicated just do something that you know that you can achieve and then play around with it that's the best way to learn don't break your neck did you know and I'm so darn pissed about it don't mention doodle diary in my live stream guys I will shut it down no fortunately I was doing something really fun which was Dreamhack but I did not get to participate once again yeah but I will do something soon I think congratulations on participating your first doodleberry let's see will you do a tutorial about adds add some unity that's something that I could definitely do if I get enough requests for it I've done something with services before I've done analytics and that went pretty well I think there isn't a lot of information about it so that's definitely something that I'll put in the list what advice would you give a new give to a new program who wants to dive into the programming industry depends on what you define by new if you define by define it as I have programmed for a long time but I haven't had a job yet I have very little experience in in finding jobs and getting positions and all that since I've pretty much been freelance for my entire life so I wouldn't know too much about that I hear it's a lot about being really willing to take pretty much anything and then just showing what you're able to do even though your position might not fulfilling the requirements of your position and then some I hear that's the way to go but in terms of just learning programming and wanting to take a peek at the industry and what it's like just get started just start making stuff and that's also something that's gonna help you get a job having a good portfolio having something to show is very important even for programmers showing I made this I made this I I'm a I know these systems I feel comfortable using this stuff is something that just cannot be underrated so really just do it just do something make something and and start small how do you make Amal to play a card game like werewolf or mafia that's not something that I can answer in the live stream how can I say what's a script and what isn't I'm sorry I don't understand the question if you could rephrase it that would be awesome throwing the difficult questions now do you plan to make a video game or a video on mobile came up to my sessions not really right now but I would definitely like to do something on performance optimization in general and that should also apply to mobile that is what I would answer some some people want to see RTS stuff RTS stuff is super advanced but we could do something artist like let's see one guys linking to his student Gary game should we check it out should we check out the Ludum dare game I'm gonna open it up here I think we should a lot of you guys are talking about firebase should I know what firebase is beta mobile apps and grow your business I'm sorry I'm not aware of what this is at the time looks like something created by Google builds apps fast without managing infrastructure have I missed something okay I'm sorry I'll have to look into firebase sorry but let's play some little diary games let's see I'm going to switch over here put this over on the other screen switch into the main view and we are going to open up that to patient oh yeah pitch enter comes practice boom here unity game black storm Prague really like the central screen it's cool man every single day we even see things that inverse it can be good and of course it can be bad words opinions society it can transform you negativity will try and shape you into some hideous vessel of yourself this is really neat I really like this intro don't let that happen alright alright let's see where we're going here be yourself start okay so you can be squished pout and rules I should probably read the about with this game by myself or them there before you come up Oh check this out guys black thorn truck call rules rotate with the left and right arrow keys get the fifty signs of negative influence into the holes the more you have stuck to you the worse things get alright I'm ready for this and I'm definitely going to suck at this oh ok I see yeah ah what what's the difference between the the yellow ones and the not yellow ones I know this is hard and this is also really fun I really like the sticking on to mechanic and I really like the backstory oh I can use it to destroy the gooey things well that's awesome I really suck at this though there we go please this is surprisingly difficult this is super cool I really like the art direction in the simplicity oh no oh no this oh no this is bad guys I'm just gonna do this hope for everything oh Jesus okay yeah yeah I failed really really well done I love the menu I love the intro I love the art direction I don't have sound enable so I cannot comment on that if the game has sound I don't know the mechanics are super interesting only thing that I would change is maybe make it so that it takes longer for it to become difficult at least for me the it felt fairly well balanced and then holy [ __ ] I couldn't do a thing but that's probably because you're using some kind of exponential difficulty curve and you have to really be careful with those because they will get out of hand really quickly so but really really nice game and yeah I really like the art of it and and the introduction was with the story was really good maybe also more particle effects I love particles but really cool how would I feel if your future son daughter use JavaScript I think I'll just be really happy if they program can you make a tutorial on translucent material maybe at some point I don't do is too much shader writing but I definitely want to do something with shaders at some point from what country are most people that are watching you um I think most of you guys are from the US some people from Denmark England and a lot of people from India actually what is your next game tutorial series on the YouTube channel I haven't planned one yet particles yes particles are fun biscuit oh thanks from yes cat like coding has awesome tutorials on materials and shaders and other stuff as well definitely check him out I shoot a tutorial series that would be awesome yeah that would be really nice alright guys I think that's enough for questions and we also played a game and everything yeah I think this was a success and also we didn't get that many errors doing or doing the tutorials that's awesome look I'm gonna take off the hat yeah I know it's sad I'm already here it's it was really hot having that on it looks pretty fun okay I'm gonna put it back on until this tree is done otherwise I'd just get to subconscious so yeah the hats back on don't worry don't worry but we will still end the stream here so thank you guys for all the questions I hope you guys had fun I really did end up and that's industry by everyone riding what country they're from in the comments I really want to see that that could be super fun so yeah definitely right where you're from right now where are you based where you're watching this from and on that check out patreon.com slash breakfast if you want to support these streams and the content in general you guys are awesome couldn't do it without you and yeah thanks for watching guys and I'll see you in the next video bye thanks of the awesome patreon supporters who donated in November and a special thanks to German Amanda rue C infinity PPR and soft tune cybercrime meter team's Kirk Chaisson r5 James P Dan Evans Thomas Wally Superman the great John Beauregard cocoa brown Jason the Tito Alex Rockets key manulis James Rogers Robert pond Rob fair and Rasmus you guys Rock
