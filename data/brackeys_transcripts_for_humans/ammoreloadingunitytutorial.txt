With timestamps:

00:00 - this hair that officially becomes too
00:01 - long in the last video a lot of you guys
00:03 - asked for a way to create ammunition and
00:05 - reloading until that's exactly what
00:07 - we're going to be looking at today and
00:08 - if you don't have a gun script and
00:09 - weapon switching already set up you can
00:11 - go ahead and watch the two previous
00:12 - videos I'll have a card linking to them
00:14 - here so let's just jump into it so in
00:15 - the last few videos we set up this
00:17 - hierarchy where we have the player than
00:19 - the main camera and the weapon holder
00:21 - the weapon holder has a weapon switching
00:23 - script that allows us to switch out
00:24 - these three different weapons that are
00:26 - all child's of that object and on each
00:28 - of these objects we then have a gun
00:30 - script and this is the script that we
00:32 - want to modify so let's go ahead and
00:34 - double click that and if you're using a
00:35 - different gun script that shouldn't be
00:36 - much of a problem this technique of
00:38 - applying ammunition and reloading
00:40 - applies to pretty much any gun script
00:41 - I've ever seen the first thing that we
00:43 - need to do is add a few variables we
00:45 - need a public integer and this is going
00:47 - to store our maximization so max ammo
00:49 - and we can default that to something
00:51 - like 10 then we also need a private
00:53 - integer and this is going to store our
00:54 - current ammunition so that's going to be
00:56 - current amyl we're not going to default
00:58 - that to anything and then we'll also
01:00 - need a public float and this here is
01:02 - going to be our reload time so we'll
01:04 - write reload time and set it equal to
01:06 - something like a second by default cool
01:09 - so now we can go and create a start
01:10 - method and all we really need to do here
01:13 - is add a single line which sets our
01:15 - current ammo equal to our maximum
01:18 - ammunition so right when we start the
01:20 - game or right when the gun is selected
01:22 - you make sure to fill up our ammunition
01:26 - now every time we shoot we of course
01:27 - want to subtract one from our car demo
01:29 - let's go to the place in our code where
01:31 - we shoot in our case that's inside of
01:33 - this shoot method and here we just add a
01:35 - line and you can do this anywhere within
01:37 - the method and it's going to say current
01:39 - ammo - - to subtract one so now our ammo
01:42 - should set itself correctly and update
01:44 - when we shoot and so all that's left is
01:46 - detecting when we run out of ammo to do
01:48 - that we go into the update method we
01:50 - write if current ammo is less than or
01:52 - equal to zero meaning we've run out of
01:55 - ammo in that case we want to go ahead
01:56 - and call some kind of reload function
01:59 - and of course you want to make sure that
02:00 - we do not go ahead and check for input
02:02 - and then fire and so we'll put return in
02:05 - here which means that our code will
02:07 - simply stop here and not continue on to
02:09 - the next if statement then we can make
02:11 - our reload function so let's go down
02:13 - here and write void reload and we'll
02:16 - start by just throwing a debug that
02:18 - large statement saying something like
02:20 - reloading and of course we want our
02:22 - reloading to take a bit of time but for
02:24 - now just for testing let's go ahead and
02:25 - set our current ammo equal to max ammo
02:28 - and then let's save this go into unity
02:31 - and our debug dead log statement should
02:33 - appear every 10 bullets so I'm just
02:35 - going to hold down the mouse once here
02:36 - and there we go
02:37 - it says reloading and if I continue here
02:39 - it's going to keep doing so every 10
02:42 - bullets so in order to add some reload
02:44 - time within our V load method we need to
02:46 - be using what is called a karate Kuro
02:48 - teens are a bit weird syntax wise and so
02:51 - some of this stuff you'll probably just
02:52 - have to write after me but they are also
02:54 - extremely useful let me show you how
02:56 - they're used so first off in order to
02:58 - use the corrode thing we go to the top
03:00 - and we need to import so say using
03:02 - system dark collections when you create
03:04 - a script notice that this line will be
03:06 - there by default probably the primary
03:07 - reason for that is corrode teens we then
03:10 - go back to a reload method and instead
03:12 - of writing void here a corrode team is
03:14 - of type I in numerator this is a weird
03:17 - word and we won't be focusing on it too
03:19 - much let's instead going here and now
03:21 - add a separate line and so we'll write
03:23 - yield return new waitforseconds and here
03:26 - we specify the amount of segments that
03:27 - we want to wait so you could just put in
03:29 - one here on our case we could put in
03:31 - reload time and close that off so what
03:34 - we have here is pretty much a normal
03:36 - function we can call it from anywhere in
03:37 - our code
03:38 - it's going to execute the things that we
03:40 - write in here however because we've
03:42 - marked it as an enumerator this function
03:44 - is now a Co routine and this means that
03:46 - we can effectively pass a function at
03:48 - any given time so in our case we write
03:50 - reloading to the console we then pass
03:52 - for reload times seconds and then
03:54 - continue on to set our current demo
03:56 - equal to our max ammo the only thing
03:58 - that we have to be careful with when
04:00 - dealing with kuroh genes is that we
04:02 - cannot call them like an ordinary
04:03 - function instead we have to write start
04:06 - co-routine and then input reload and
04:09 - remember to have both the parentheses
04:11 - for start corroding and for reloading
04:13 - here so now when our ammo reaches zero
04:15 - we should call our reload method which
04:17 - is going to display the message weight
04:19 - set our ammo and then we can continue on
04:22 - however there's a slight problem and
04:24 - that is that every frame where we've run
04:26 - out of ammo we're going to go ahead and
04:28 - start this current team and we really
04:29 - only want to do this once so what we'll
04:31 - do is go up here and add a private
04:33 - boolean private pull and we call this
04:36 - something like is reloading and we're
04:39 - going to fold it to false then in our
04:41 - update method we'll go ahead and add
04:42 - another line on top of everything else
04:44 - and it's going to say if is reloading so
04:47 - if we're currently reloading we want to
04:49 - go ahead and just return so we don't
04:50 - want to do any of the other stuff we
04:52 - have in our update method and we want to
04:53 - begin reloading at the top of our reload
04:56 - function so in here we'll say it is
04:57 - reloading to true and when we're done
04:59 - after we waited and set our ammo we want
05:01 - to set is reloading to false so now when
05:04 - we save this and hit into unity and hit
05:07 - play we should see that we can shoot 10
05:09 - times it will then pause for one second
05:11 - and we can then continue shooting and
05:12 - indeed it does awesome so the final
05:14 - thing that we can add here is some kind
05:16 - of reload animation
05:18 - however we actually have a bug in here
05:21 - that occurs when we start reloading than
05:23 - switch weapons and when we then switch
05:25 - back we cannot shoot and the reason why
05:28 - is that we never finish reloading and so
05:30 - when we go back is reloading is still
05:32 - equal to true but our kuroh team got
05:34 - interrupted and so it will never be set
05:35 - back we'll go ahead and fix this in a
05:37 - moment but let's first add some
05:38 - animation I want to make it so that we
05:40 - can add separate animations to each
05:42 - weapon but in my case here just to make
05:43 - things simple I'll have the same
05:45 - animation for each one so instead of
05:46 - animating heavy rifle and pistol let's
05:49 - go ahead and animate the entire weapon
05:50 - holder do that let's go window animation
05:53 - to open the animation window
05:54 - let's hit create let's go ahead and
05:55 - create a separate folder for this called
05:57 - animation let's save this animation as
06:00 - weapon idle let's also go ahead and
06:03 - create another clip and this one is
06:05 - going to be called weapon reload now we
06:07 - can hit record and for a weapon reload
06:09 - all I want to do is rotate our gun along
06:12 - the x-axis something like that and
06:14 - inside of our work an idle let's also
06:16 - hit record and make sure to insert a
06:18 - keyframe where our rotation is zero now
06:20 - let's stop recording going to the
06:22 - animation folder let's double click on
06:23 - the weapon holder controller and we can
06:25 - now see two animations the default one
06:27 - being weapon idle you can always make an
06:29 - animation default by right-clicking and
06:31 - going set as layer default state and
06:33 - then we also have the weapon reload
06:34 - animation we want to be able to
06:35 - transition from our weapon idle to
06:37 - reload and back to do that we right
06:39 - click on weapon idle it make transition
06:41 - and then click on working reload and we
06:43 - do is the same the other way around
06:45 - however right now we don't have a
06:46 - condition on these transitions and so
06:48 - they'll just occur immediately we only
06:50 - want this to happen when we start
06:51 - reloading and so what we want to do is
06:53 - go up here under parameters and add a
06:55 - new parameter we'll make this a type
06:57 - poll and we'll call it something like
06:58 - reloading this is a simple boolean value
07:01 - that we can control through a script it
07:03 - can either be true or false and we can
07:05 - have our transitions only occur if this
07:08 - value is equal to either true or false
07:10 - so transitioning for weapon idle to
07:12 - reload will only happen when reloading
07:14 - is true and the other way around will
07:16 - only happen when reloading is false we
07:18 - also want to select both of these
07:19 - animation and turn off has exit time
07:22 - this way we don't wait for our animation
07:23 - to play out but we just transition as
07:25 - soon as it happens so we should now
07:27 - actually be able to parent our animator
07:28 - over here hit play and if we now go
07:30 - ahead and check this value
07:32 - can see that we can switch between the
07:33 - two animation states now to control this
07:35 - through script let's go to a gun script
07:37 - let's add another public variable this
07:39 - one is going to be of type animator and
07:41 - we'll just call it animator then when we
07:43 - start reloading down here we'll say
07:45 - animator dot set bowl and the boolean we
07:49 - want to set is the reloading and we want
07:51 - to set it to true then we wait for a
07:53 - reload time and then we can set this
07:56 - ball back to false so if we now save
07:59 - that and go into unity we can see that
08:01 - an animated field appears for each of
08:03 - our weapons I'm just going to select all
08:04 - of them and drag in the weapon holder if
08:06 - you had separate animations for each
08:08 - weapon you would drag in the animator
08:09 - that sits on that particular weapon and
08:11 - if we now hit play start shooting and
08:13 - you can see it reloads awesome only one
08:16 - thing is that you can actually start
08:17 - shooting a tiny bit before the reload
08:19 - animation is totally done and that's
08:21 - because we can start shooting as soon as
08:22 - we set the pool reloading back to false
08:25 - but there's also a bit of transition
08:26 - duration there by default it's 0.25
08:29 - seconds so what we can do is actually
08:30 - wait for reload time minus 0.25 seconds
08:34 - then set reloading to false then wait
08:36 - again but this time only wait those 0.25
08:39 - seconds it's just a quick workaround but
08:41 - it works beautifully and now we should
08:43 - see that it only starts firing when it's
08:45 - totally done so to fix a little bug here
08:47 - we're if we go ahead and shoot and
08:49 - reload and then change weapons you can
08:51 - see that it kind of messes up the
08:53 - animator and when we then switch back we
08:56 - aren't able to shoot everything is being
08:58 - a tiny bit weird to take care of that we
08:59 - go into visual studio we go ahead and
09:01 - create yet another method and this one
09:03 - is going to be void on enable and in
09:06 - here all we want to do is set is
09:08 - reloading to false and we also want to
09:10 - go animator set ball reloading to false
09:14 - as well so the only difference between
09:16 - the start method here and the on enable
09:18 - is that start is only called the first
09:20 - time the game object is enabled well on
09:22 - in abel is called every single time and
09:24 - so this is one of those fairly rare
09:26 - cases where you actually need both and
09:27 - we should now see that when we begin
09:29 - shooting start reloading switch weapons
09:31 - it goes back to normal and we can now
09:33 - shoot with the other weapons as well and
09:34 - when we then switch back to the weapon
09:36 - it starts reloading again and everything
09:38 - is good and so this should very very
09:40 - easily work for all of our different
09:42 - weapons and you can see they simply use
09:44 - the same animation
09:45 - I know but you can go ahead and hook it
09:46 - up to different ones and you could also
09:48 - go ahead and expand upon this with some
09:50 - kind of UI displaying the current amount
09:52 - of ammo lots of possibilities here let's
09:54 - pretty much it for this video if you
09:56 - liked it make sure to subscribe so you
09:57 - don't miss a future episode also I'm
09:58 - really excited about the video that's
10:00 - going to be airing this Sunday it's
10:01 - going to be a behind the scenes video
10:03 - showing the making of my recent entry
10:05 - into the Gotham tower 38 combo had a
10:07 - blast making it and I hope you guys will
10:09 - enjoy I'm that thanks for watching and I
10:10 - will see you in the next video thanks of
10:13 - the awesome patreon supporters who
10:14 - donate it in March and a special thanks
10:16 - to Derek Eames Kirk faceful marrow 5
10:18 - james Calhoun and Jason Lotito if you
10:20 - want to support the channel and become a
10:21 - picture in yourself you could do so a
10:22 - patron the cons - brackets thanks a lot
10:25 - guys

Cleaned transcript:

this hair that officially becomes too long in the last video a lot of you guys asked for a way to create ammunition and reloading until that's exactly what we're going to be looking at today and if you don't have a gun script and weapon switching already set up you can go ahead and watch the two previous videos I'll have a card linking to them here so let's just jump into it so in the last few videos we set up this hierarchy where we have the player than the main camera and the weapon holder the weapon holder has a weapon switching script that allows us to switch out these three different weapons that are all child's of that object and on each of these objects we then have a gun script and this is the script that we want to modify so let's go ahead and double click that and if you're using a different gun script that shouldn't be much of a problem this technique of applying ammunition and reloading applies to pretty much any gun script I've ever seen the first thing that we need to do is add a few variables we need a public integer and this is going to store our maximization so max ammo and we can default that to something like 10 then we also need a private integer and this is going to store our current ammunition so that's going to be current amyl we're not going to default that to anything and then we'll also need a public float and this here is going to be our reload time so we'll write reload time and set it equal to something like a second by default cool so now we can go and create a start method and all we really need to do here is add a single line which sets our current ammo equal to our maximum ammunition so right when we start the game or right when the gun is selected you make sure to fill up our ammunition now every time we shoot we of course want to subtract one from our car demo let's go to the place in our code where we shoot in our case that's inside of this shoot method and here we just add a line and you can do this anywhere within the method and it's going to say current ammo to subtract one so now our ammo should set itself correctly and update when we shoot and so all that's left is detecting when we run out of ammo to do that we go into the update method we write if current ammo is less than or equal to zero meaning we've run out of ammo in that case we want to go ahead and call some kind of reload function and of course you want to make sure that we do not go ahead and check for input and then fire and so we'll put return in here which means that our code will simply stop here and not continue on to the next if statement then we can make our reload function so let's go down here and write void reload and we'll start by just throwing a debug that large statement saying something like reloading and of course we want our reloading to take a bit of time but for now just for testing let's go ahead and set our current ammo equal to max ammo and then let's save this go into unity and our debug dead log statement should appear every 10 bullets so I'm just going to hold down the mouse once here and there we go it says reloading and if I continue here it's going to keep doing so every 10 bullets so in order to add some reload time within our V load method we need to be using what is called a karate Kuro teens are a bit weird syntax wise and so some of this stuff you'll probably just have to write after me but they are also extremely useful let me show you how they're used so first off in order to use the corrode thing we go to the top and we need to import so say using system dark collections when you create a script notice that this line will be there by default probably the primary reason for that is corrode teens we then go back to a reload method and instead of writing void here a corrode team is of type I in numerator this is a weird word and we won't be focusing on it too much let's instead going here and now add a separate line and so we'll write yield return new waitforseconds and here we specify the amount of segments that we want to wait so you could just put in one here on our case we could put in reload time and close that off so what we have here is pretty much a normal function we can call it from anywhere in our code it's going to execute the things that we write in here however because we've marked it as an enumerator this function is now a Co routine and this means that we can effectively pass a function at any given time so in our case we write reloading to the console we then pass for reload times seconds and then continue on to set our current demo equal to our max ammo the only thing that we have to be careful with when dealing with kuroh genes is that we cannot call them like an ordinary function instead we have to write start coroutine and then input reload and remember to have both the parentheses for start corroding and for reloading here so now when our ammo reaches zero we should call our reload method which is going to display the message weight set our ammo and then we can continue on however there's a slight problem and that is that every frame where we've run out of ammo we're going to go ahead and start this current team and we really only want to do this once so what we'll do is go up here and add a private boolean private pull and we call this something like is reloading and we're going to fold it to false then in our update method we'll go ahead and add another line on top of everything else and it's going to say if is reloading so if we're currently reloading we want to go ahead and just return so we don't want to do any of the other stuff we have in our update method and we want to begin reloading at the top of our reload function so in here we'll say it is reloading to true and when we're done after we waited and set our ammo we want to set is reloading to false so now when we save this and hit into unity and hit play we should see that we can shoot 10 times it will then pause for one second and we can then continue shooting and indeed it does awesome so the final thing that we can add here is some kind of reload animation however we actually have a bug in here that occurs when we start reloading than switch weapons and when we then switch back we cannot shoot and the reason why is that we never finish reloading and so when we go back is reloading is still equal to true but our kuroh team got interrupted and so it will never be set back we'll go ahead and fix this in a moment but let's first add some animation I want to make it so that we can add separate animations to each weapon but in my case here just to make things simple I'll have the same animation for each one so instead of animating heavy rifle and pistol let's go ahead and animate the entire weapon holder do that let's go window animation to open the animation window let's hit create let's go ahead and create a separate folder for this called animation let's save this animation as weapon idle let's also go ahead and create another clip and this one is going to be called weapon reload now we can hit record and for a weapon reload all I want to do is rotate our gun along the xaxis something like that and inside of our work an idle let's also hit record and make sure to insert a keyframe where our rotation is zero now let's stop recording going to the animation folder let's double click on the weapon holder controller and we can now see two animations the default one being weapon idle you can always make an animation default by rightclicking and going set as layer default state and then we also have the weapon reload animation we want to be able to transition from our weapon idle to reload and back to do that we right click on weapon idle it make transition and then click on working reload and we do is the same the other way around however right now we don't have a condition on these transitions and so they'll just occur immediately we only want this to happen when we start reloading and so what we want to do is go up here under parameters and add a new parameter we'll make this a type poll and we'll call it something like reloading this is a simple boolean value that we can control through a script it can either be true or false and we can have our transitions only occur if this value is equal to either true or false so transitioning for weapon idle to reload will only happen when reloading is true and the other way around will only happen when reloading is false we also want to select both of these animation and turn off has exit time this way we don't wait for our animation to play out but we just transition as soon as it happens so we should now actually be able to parent our animator over here hit play and if we now go ahead and check this value can see that we can switch between the two animation states now to control this through script let's go to a gun script let's add another public variable this one is going to be of type animator and we'll just call it animator then when we start reloading down here we'll say animator dot set bowl and the boolean we want to set is the reloading and we want to set it to true then we wait for a reload time and then we can set this ball back to false so if we now save that and go into unity we can see that an animated field appears for each of our weapons I'm just going to select all of them and drag in the weapon holder if you had separate animations for each weapon you would drag in the animator that sits on that particular weapon and if we now hit play start shooting and you can see it reloads awesome only one thing is that you can actually start shooting a tiny bit before the reload animation is totally done and that's because we can start shooting as soon as we set the pool reloading back to false but there's also a bit of transition duration there by default it's 0.25 seconds so what we can do is actually wait for reload time minus 0.25 seconds then set reloading to false then wait again but this time only wait those 0.25 seconds it's just a quick workaround but it works beautifully and now we should see that it only starts firing when it's totally done so to fix a little bug here we're if we go ahead and shoot and reload and then change weapons you can see that it kind of messes up the animator and when we then switch back we aren't able to shoot everything is being a tiny bit weird to take care of that we go into visual studio we go ahead and create yet another method and this one is going to be void on enable and in here all we want to do is set is reloading to false and we also want to go animator set ball reloading to false as well so the only difference between the start method here and the on enable is that start is only called the first time the game object is enabled well on in abel is called every single time and so this is one of those fairly rare cases where you actually need both and we should now see that when we begin shooting start reloading switch weapons it goes back to normal and we can now shoot with the other weapons as well and when we then switch back to the weapon it starts reloading again and everything is good and so this should very very easily work for all of our different weapons and you can see they simply use the same animation I know but you can go ahead and hook it up to different ones and you could also go ahead and expand upon this with some kind of UI displaying the current amount of ammo lots of possibilities here let's pretty much it for this video if you liked it make sure to subscribe so you don't miss a future episode also I'm really excited about the video that's going to be airing this Sunday it's going to be a behind the scenes video showing the making of my recent entry into the Gotham tower 38 combo had a blast making it and I hope you guys will enjoy I'm that thanks for watching and I will see you in the next video thanks of the awesome patreon supporters who donate it in March and a special thanks to Derek Eames Kirk faceful marrow 5 james Calhoun and Jason Lotito if you want to support the channel and become a picture in yourself you could do so a patron the cons brackets thanks a lot guys
