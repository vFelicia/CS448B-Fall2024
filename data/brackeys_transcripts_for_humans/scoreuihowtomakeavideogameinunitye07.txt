With timestamps:

00:00 - since the last video a lot of you guys
00:01 - asked me how you can create some kind of
00:02 - score for the game that's what we're
00:04 - going to be making today it also gives
00:06 - us the chance to play around with some
00:07 - unity UI exciting stuff let's get
00:09 - started let's begin by getting a bit
00:11 - more organized
00:12 - first off let's create a folder for all
00:14 - of our scripts let's name it scripts
00:16 - we'll place our follow player play
00:18 - coalition and play movement in there
00:20 - let's also make one for our materials
00:22 - again we'll call this one materials and
00:24 - drag our obstacle mat and player mat in
00:26 - there I think we can just leave the rest
00:28 - here let's then correct something that's
00:30 - been knowing me since the last video and
00:32 - that is the collision detection
00:33 - sometimes it happens that our player
00:36 - actually passes through one of the
00:37 - obstacles it's something that you guys
00:39 - have also noticed in the comments to get
00:41 - more accurate physics detection we can
00:43 - select their obstacles and choose
00:44 - continuous under collision detection
00:47 - we'll do the same thing to our player
00:49 - we'll also go under edit project
00:51 - settings time and decrease our fixed
00:53 - time step I'll just set it to zero point
00:55 - zero one this means that unis will more
00:57 - frequently update our physics and
00:59 - therefore the chance of missing a
01:01 - collision is reduced this also means
01:02 - that we'll probably have to select our
01:04 - player and increase the forward force a
01:06 - little bit I'll just set it to something
01:07 - like 8000 and I played around with it
01:09 - and found that a sideways force of about
01:12 - 120 felt pretty good so now when we hit
01:14 - play everything should look and feel
01:16 - pretty much the same way but it just
01:18 - feels a lot nicer and the collisions are
01:20 - going to be much better I'm also just
01:21 - going to fix my OCD by setting our
01:23 - played to a Y position of exactly one
01:26 - alright so let's get started with our UI
01:28 - piece creating UI in unity is pretty
01:30 - much the same thing as creating anything
01:31 - else we go to the hierarchy we
01:34 - right-click we go under UI now and we
01:37 - can select text
01:38 - this creates a canvas a canvas is a
01:40 - place to display all of our different UI
01:42 - elements and a text object which of
01:44 - course allows us to configure our text
01:46 - but we can't currently see it anywhere
01:48 - so have a good look at it let's switch
01:50 - to 2d mode that select our text and hit
01:52 - F it's also zoom out a bit so we can see
01:55 - our entire canvas
01:56 - notice that the canvas will resize to
01:58 - fit the size of our game view this is
02:00 - basically the screen that we can paint
02:02 - stuff on for text object here I'm just
02:03 - going to move it up and put it kind of
02:05 - in the upper center I'm also going to
02:08 - change our text alignment to Center on
02:10 - both the horizontal and the
02:12 - you can also see that we can size about
02:14 - text and if we hold down alt we will
02:16 - size from the center however it doesn't
02:18 - actually change the font size it just
02:20 - changes the boundaries of our text so in
02:22 - order to actually scale about text we'll
02:24 - have to increase the font size over here
02:26 - just make sure you make plenty of room
02:27 - for the text so that if your player
02:29 - reaches a really high score it's not
02:31 - going to clip we can also set the
02:32 - horizontal overflow down here to Ola
02:34 - flow which means that if it should reach
02:37 - one of the boundaries it's just going to
02:38 - keep going something like this then
02:41 - let's change the text to something like
02:43 - two hundred and fifty just to give
02:44 - ourselves an idea of what's going on and
02:46 - I'm going to definitely also bump up the
02:48 - font size some more currently when we
02:50 - resize our window say if we maximize it
02:52 - our text is kind of parented to the
02:54 - center so text will always be a fixed
02:56 - distance from the center this also means
02:58 - that it doesn't resize and I kind of
03:01 - wanted to do that so let's select our
03:02 - canvas and let's change the UI scale
03:04 - mode from constant pixel size meaning
03:06 - that everything doesn't resize to scale
03:08 - with screen size and I wanted to kind of
03:11 - try and match the height you can see now
03:12 - that if we maximize our game view the
03:14 - font gets bigger as well and I really
03:16 - like that I'm also going to take the
03:18 - color of our text and make it completely
03:19 - white I think that gives a pretty cool
03:22 - faded look finally for the look of our
03:23 - text I really really hate Arial it's
03:27 - kind of a passion I mean there's a lot
03:28 - of bad funds out there but please
03:30 - anything but Arial so I'm just going to
03:32 - go ahead and download another one there
03:33 - are a lot of great fun our cows out
03:35 - there that font ogle font and so on I'm
03:38 - just going to go and open my browser I'm
03:40 - gonna search for Roboto
03:41 - this is a fun made by Google and its
03:43 - really nice modern and simple I'm just
03:45 - going to select this font click down
03:47 - here and we can now download it as a zip
03:50 - file so I'm just going to unzip that
03:52 - file by hitting extract all and extract
03:54 - and now you can just select all of the
03:56 - different font versions and drag them
03:58 - directly into unity voila
04:00 - we'll also go ahead and create a
04:01 - separate folder for this called fonts
04:03 - and shift select all of them and drag
04:05 - them in there and it's that easy now we
04:07 - can go on to our text and change the
04:08 - font to whatever version of Roboto that
04:11 - we like I'm just going to go with
04:13 - something like Roboto then actually we
04:15 - might wanna make the text black here
04:17 - just to make it more visible that kind
04:19 - of completes the look of our text but
04:21 - it's still not updating I mean if we
04:22 - play it's just going to be stuck at 250
04:25 - and I want this to
04:26 - count up by the mirror you could also
04:27 - count up the score by time but I think
04:30 - since this is about reaching as far as
04:32 - possible it's pretty fun to measure
04:33 - distance to do that we go ahead and
04:35 - create a new script on our text object
04:37 - I'm going to call it score and they
04:39 - create an ad let's double click it and
04:40 - as always we're just going to be
04:42 - removing the two using tags up there and
04:44 - the start method so in order to keep
04:46 - track of how far we reach into a level
04:48 - we need a reference to our player
04:49 - because our player has a position and we
04:51 - can use that to make sure his distance
04:53 - traveled it's the same as any other
04:55 - variable we start with public then the
04:57 - type here we could either write game
04:59 - object and this gives us a lot of
05:00 - information about our player but we only
05:02 - want the position and therefore we're
05:04 - going to type transform instead because
05:06 - remember the transform component is
05:08 - responsible for position rotation and
05:10 - scale we're going to go ahead and write
05:12 - player as the name and now in our update
05:14 - loop we should be able to access player
05:16 - dot position Z and this is how many
05:19 - units we've moved on the z axis of
05:21 - course we have to make sure that our
05:22 - player stats add a Z of 0 but indeed he
05:25 - does so if we just want to display the
05:27 - position of our player here we can say
05:29 - debug that lock and then insert player
05:31 - dot position dot Z into the parentheses
05:34 - let's save this go into unity select
05:36 - that text object and drag in our player
05:38 - if we then switch to the console and hit
05:40 - play we should get a bunch of debug
05:42 - deadlock messages constantly saying the
05:44 - updated position of our player on the z
05:46 - axis now all we need to do is transfer
05:49 - this value onto the UI element and
05:51 - that's really easy to do as well just
05:53 - like we needed a reference from a scorer
05:55 - to the player we also need a reference
05:57 - from our score to the text so again
05:59 - we'll go into unity and whenever we're
06:01 - dealing with UI elements we actually
06:03 - need to include some more functions so
06:05 - we'll go up here and say that we're
06:06 - going to be using unity engine dot UI
06:09 - and this now allows us to write code for
06:11 - the user interface we can then create
06:13 - another variable this is also going to
06:15 - be public and it's going to be of type
06:16 - text and this is of course because the
06:19 - name of the component that is
06:20 - responsible for text is text and so we
06:24 - make it of type text and we can give
06:26 - this some fancy name I'm just going to
06:27 - go with score text and close it with the
06:30 - semicolon then down here instead of
06:32 - debug dead logging opposition will say
06:34 - score text and now we can access all the
06:37 - different parts of our text we can
06:38 - change the fonts
06:39 - we can change the color and we can
06:42 - change the text itself so score text at
06:44 - text allows us to change the text
06:46 - content we can then set that equal to
06:48 - player table position dot Z however if
06:52 - we try and run this it is going to throw
06:54 - an error and we can actually already see
06:56 - it if we hover over this red part it
06:58 - says cannot implicitly convert type
07:00 - float to string so what's happening well
07:03 - our position on the z-axis is a float
07:05 - number remember float is one of the
07:07 - basic datatypes and whenever we want to
07:10 - set our text equal to something it
07:12 - requires a string a string is also one
07:14 - of the fundamental data types and it's
07:16 - what we use to store text so we need to
07:18 - convert this number into text to do that
07:21 - we simply write dot at the end here and
07:23 - then to string and we need to follow
07:26 - that with two parenthesis it's a bit
07:28 - weird that we have to do this I mean
07:30 - it's still going to be a number but now
07:31 - it's going to be a number inside of a
07:33 - string and that's the difference there
07:35 - for now just write after me so if we
07:36 - save this head back into unity we need
07:39 - to of course reference our score text so
07:40 - we'll drag in our text component and hit
07:42 - play and we can now see the UI updating
07:45 - however it's doing so with a very high
07:47 - precision and I think there's no reason
07:48 - for us to have decimal places in here
07:50 - only whole numbers to do that we simply
07:53 - need to format our text and the to
07:55 - string method actually allows us to do
07:57 - that really easily all we need to do is
07:59 - go in here and in quotation marks write
08:02 - a zero if we save that now go into unity
08:05 - and hit play we should see that it
08:06 - displays our distance in meters but only
08:09 - in whole numbers much much better and we
08:12 - can see how cool that looks in full
08:14 - screen if you think something about your
08:15 - text doesn't look super crisp you can
08:18 - select the canvas and choose pixel
08:20 - perfect this sometimes can make the UI
08:21 - render a lot sharper that's pretty much
08:23 - it for this video if you liked it make
08:25 - sure to subscribe so you don't miss a
08:26 - future episode also because of my
08:28 - traveling I had to delay the monthly
08:29 - live stream a bit but I will be
08:31 - live-streaming very soon make sure to
08:32 - follow me at Facebook facebook.com slash
08:35 - brickies over twitter at brackets tweet
08:37 - to get notified when that will happen
08:39 - you don't want to miss it it's always a
08:41 - lot of fun and I just did a video on
08:43 - creating destructible objects that I
08:44 - think could fit really nicely into this
08:46 - one if you want to have the player or
08:47 - the obstacles break when they collide so
08:50 - check that out here on that thanks for
08:51 - watching and I was
08:52 - you in the next video thanks off the
08:55 - awesome people who donated in February
08:56 - and a special thanks to Derek Hughes
08:58 - Kirk faithful Merrifield James Calhoun
09:00 - and Jason Latino if you want to become a
09:02 - picture in yourself you can do so a
09:03 - pitching that comes - practice thanks a
09:05 - lot guys

Cleaned transcript:

since the last video a lot of you guys asked me how you can create some kind of score for the game that's what we're going to be making today it also gives us the chance to play around with some unity UI exciting stuff let's get started let's begin by getting a bit more organized first off let's create a folder for all of our scripts let's name it scripts we'll place our follow player play coalition and play movement in there let's also make one for our materials again we'll call this one materials and drag our obstacle mat and player mat in there I think we can just leave the rest here let's then correct something that's been knowing me since the last video and that is the collision detection sometimes it happens that our player actually passes through one of the obstacles it's something that you guys have also noticed in the comments to get more accurate physics detection we can select their obstacles and choose continuous under collision detection we'll do the same thing to our player we'll also go under edit project settings time and decrease our fixed time step I'll just set it to zero point zero one this means that unis will more frequently update our physics and therefore the chance of missing a collision is reduced this also means that we'll probably have to select our player and increase the forward force a little bit I'll just set it to something like 8000 and I played around with it and found that a sideways force of about 120 felt pretty good so now when we hit play everything should look and feel pretty much the same way but it just feels a lot nicer and the collisions are going to be much better I'm also just going to fix my OCD by setting our played to a Y position of exactly one alright so let's get started with our UI piece creating UI in unity is pretty much the same thing as creating anything else we go to the hierarchy we rightclick we go under UI now and we can select text this creates a canvas a canvas is a place to display all of our different UI elements and a text object which of course allows us to configure our text but we can't currently see it anywhere so have a good look at it let's switch to 2d mode that select our text and hit F it's also zoom out a bit so we can see our entire canvas notice that the canvas will resize to fit the size of our game view this is basically the screen that we can paint stuff on for text object here I'm just going to move it up and put it kind of in the upper center I'm also going to change our text alignment to Center on both the horizontal and the you can also see that we can size about text and if we hold down alt we will size from the center however it doesn't actually change the font size it just changes the boundaries of our text so in order to actually scale about text we'll have to increase the font size over here just make sure you make plenty of room for the text so that if your player reaches a really high score it's not going to clip we can also set the horizontal overflow down here to Ola flow which means that if it should reach one of the boundaries it's just going to keep going something like this then let's change the text to something like two hundred and fifty just to give ourselves an idea of what's going on and I'm going to definitely also bump up the font size some more currently when we resize our window say if we maximize it our text is kind of parented to the center so text will always be a fixed distance from the center this also means that it doesn't resize and I kind of wanted to do that so let's select our canvas and let's change the UI scale mode from constant pixel size meaning that everything doesn't resize to scale with screen size and I wanted to kind of try and match the height you can see now that if we maximize our game view the font gets bigger as well and I really like that I'm also going to take the color of our text and make it completely white I think that gives a pretty cool faded look finally for the look of our text I really really hate Arial it's kind of a passion I mean there's a lot of bad funds out there but please anything but Arial so I'm just going to go ahead and download another one there are a lot of great fun our cows out there that font ogle font and so on I'm just going to go and open my browser I'm gonna search for Roboto this is a fun made by Google and its really nice modern and simple I'm just going to select this font click down here and we can now download it as a zip file so I'm just going to unzip that file by hitting extract all and extract and now you can just select all of the different font versions and drag them directly into unity voila we'll also go ahead and create a separate folder for this called fonts and shift select all of them and drag them in there and it's that easy now we can go on to our text and change the font to whatever version of Roboto that we like I'm just going to go with something like Roboto then actually we might wanna make the text black here just to make it more visible that kind of completes the look of our text but it's still not updating I mean if we play it's just going to be stuck at 250 and I want this to count up by the mirror you could also count up the score by time but I think since this is about reaching as far as possible it's pretty fun to measure distance to do that we go ahead and create a new script on our text object I'm going to call it score and they create an ad let's double click it and as always we're just going to be removing the two using tags up there and the start method so in order to keep track of how far we reach into a level we need a reference to our player because our player has a position and we can use that to make sure his distance traveled it's the same as any other variable we start with public then the type here we could either write game object and this gives us a lot of information about our player but we only want the position and therefore we're going to type transform instead because remember the transform component is responsible for position rotation and scale we're going to go ahead and write player as the name and now in our update loop we should be able to access player dot position Z and this is how many units we've moved on the z axis of course we have to make sure that our player stats add a Z of 0 but indeed he does so if we just want to display the position of our player here we can say debug that lock and then insert player dot position dot Z into the parentheses let's save this go into unity select that text object and drag in our player if we then switch to the console and hit play we should get a bunch of debug deadlock messages constantly saying the updated position of our player on the z axis now all we need to do is transfer this value onto the UI element and that's really easy to do as well just like we needed a reference from a scorer to the player we also need a reference from our score to the text so again we'll go into unity and whenever we're dealing with UI elements we actually need to include some more functions so we'll go up here and say that we're going to be using unity engine dot UI and this now allows us to write code for the user interface we can then create another variable this is also going to be public and it's going to be of type text and this is of course because the name of the component that is responsible for text is text and so we make it of type text and we can give this some fancy name I'm just going to go with score text and close it with the semicolon then down here instead of debug dead logging opposition will say score text and now we can access all the different parts of our text we can change the fonts we can change the color and we can change the text itself so score text at text allows us to change the text content we can then set that equal to player table position dot Z however if we try and run this it is going to throw an error and we can actually already see it if we hover over this red part it says cannot implicitly convert type float to string so what's happening well our position on the zaxis is a float number remember float is one of the basic datatypes and whenever we want to set our text equal to something it requires a string a string is also one of the fundamental data types and it's what we use to store text so we need to convert this number into text to do that we simply write dot at the end here and then to string and we need to follow that with two parenthesis it's a bit weird that we have to do this I mean it's still going to be a number but now it's going to be a number inside of a string and that's the difference there for now just write after me so if we save this head back into unity we need to of course reference our score text so we'll drag in our text component and hit play and we can now see the UI updating however it's doing so with a very high precision and I think there's no reason for us to have decimal places in here only whole numbers to do that we simply need to format our text and the to string method actually allows us to do that really easily all we need to do is go in here and in quotation marks write a zero if we save that now go into unity and hit play we should see that it displays our distance in meters but only in whole numbers much much better and we can see how cool that looks in full screen if you think something about your text doesn't look super crisp you can select the canvas and choose pixel perfect this sometimes can make the UI render a lot sharper that's pretty much it for this video if you liked it make sure to subscribe so you don't miss a future episode also because of my traveling I had to delay the monthly live stream a bit but I will be livestreaming very soon make sure to follow me at Facebook facebook.com slash brickies over twitter at brackets tweet to get notified when that will happen you don't want to miss it it's always a lot of fun and I just did a video on creating destructible objects that I think could fit really nicely into this one if you want to have the player or the obstacles break when they collide so check that out here on that thanks for watching and I was you in the next video thanks off the awesome people who donated in February and a special thanks to Derek Hughes Kirk faithful Merrifield James Calhoun and Jason Latino if you want to become a picture in yourself you can do so a pitching that comes practice thanks a lot guys
