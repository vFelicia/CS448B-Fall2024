With timestamps:

00:00 - thanks for tuning in at
00:03 - braies hello everyone and welcome to
00:05 - episode 11 in make a game a cool series
00:08 - on making a video game in unity So today
00:12 - we're going to be doing something really
00:14 - awesome uh it's something that some
00:16 - people hate and some people enjoy the
00:18 - most about game making and it's adding
00:21 - audio to our game so we're going to add
00:23 - a bunch of different sounds and a
00:26 - musical track and what is really really
00:28 - difficult when adding audio is making it
00:30 - sound not repetitive so I'm going to
00:32 - show you some cool tips and tricks on
00:35 - how to do that and also in the 2D assets
00:38 - pack available at brack.com uh there's
00:42 - now an audio section and so if we go in
00:45 - here I've gathered um some different
00:47 - sounds that we can use there is a coin
00:49 - pickup sound a game over one I made
00:52 - myself some relaxed
00:55 - [Applause]
00:56 - music and then three wooden hits when
00:58 - our ball hits the um it's the ground so
01:02 - uh if we we will just take a quick list
01:04 - in here the coin
01:07 - pickup oops I need to set the repeat off
01:10 - here or we're going to get mad so
01:13 - there's the coin pickup sound if you
01:14 - heard it enough and the game over one
01:18 - game
01:19 - over pretty simple uh the relaxed music
01:22 - we had that ago and
01:24 - [Music]
01:25 - now some very simple wooden hits so uh
01:30 - and they are in in different strength
01:32 - and uh pitch up a bit and uh and yeah so
01:35 - now that we have these different sounds
01:38 - uh also a great way to uh a great place
01:41 - to get some free sounds is freesound.org
01:44 - if you go in here and search for
01:46 - something let's say relaxed
01:48 - music and uh and and hit search here
01:52 - then make sure to check the creative
01:54 - common zero on the right hand side and
01:57 - if you do that you are uh free to use
02:00 - the sound for whatever purpose you want
02:02 - to so you can also use it commercially
02:05 - so just make sure to press creative
02:07 - comments zero and uh and there's a lot
02:11 - of different
02:12 - sounds awesome so let's get started as
02:14 - always I've opened up unity and just
02:17 - before we go ahead and implement the
02:19 - sounds I've noticed that whenever our
02:21 - ball dies the score doesn't reset so to
02:25 - quickly fix this let's just go on the
02:27 - game master object the GM object that
02:29 - and then under the game master
02:32 - script in here if we double click that
02:34 - to open it up in mono develop um we will
02:37 - just make a quick change that will reset
02:40 - the score whenever the uh whenever the
02:44 - scene is loaded so up here we're just
02:47 - going to make a
02:50 - function
02:57 - start and inside of this we are going to
02:59 - write current
03:01 - score equals
03:03 - z so we will just reset it and now when
03:06 - we hit
03:10 - play and fold down the score will reset
03:15 - this will also reset the score if you
03:17 - change levels so to get some more
03:19 - control over that uh we're going to
03:21 - write a separate function in the
03:23 - future cool so now let's finally go
03:26 - ahead and implement the Audio I feel
03:28 - like I always just do something
03:30 - completely different than what I tell
03:31 - you the first like 3 minutes of the
03:33 - video but now we're here so um let's
03:36 - start with the coin let's start with the
03:39 - coin pickups uh sound so let's find our
03:42 - coin
03:43 - here and uh and uh let's go ahead and
03:46 - import the audio so inside of our 2D
03:50 - assets pack let's just import the entire
03:53 - folder drag it in there and all of the
03:56 - different audio clips will import they
03:59 - will relaxed music one uh will take a
04:01 - bit of time I have compressed the file
04:04 - to make it uh a bit smaller but it is
04:07 - still a a rather long music uh file so
04:11 - it is to be expected so under the audio
04:14 - now we can go ahead and select our coin
04:16 - pickup and we want this to be a um well
04:20 - it's it's completely up to you uh
04:22 - actually I think the coin pickup sound
04:24 - uh should not be 3D so let's just
04:27 - disable that and uh basically what it
04:29 - means is that um then it will just
04:31 - two-dimensionally
04:33 - play uh other than playing uh where it
04:37 - factorizes how far you are from the
04:39 - object and uh at what speed you're
04:42 - traveling and and all that advanced
04:44 - audio stuff so let's just disable 3D
04:47 - audio and uh hit
04:50 - apply cool so now under our coin uh
04:53 - object we can go ahead and hit add
04:56 - component and then
04:58 - audio and and uh we can go ahead and um
05:02 - actually okay so this is where it gets a
05:04 - bit complicated because there are
05:06 - multiple ways of handling this uh the
05:09 - first of which is to attach uh the audio
05:13 - on the coin itself and then just delay
05:17 - the destruction of the coin till the
05:19 - audio has finished playing um and then
05:21 - you can just disable the mesh renderer
05:24 - at start so you won't see it but that's
05:26 - a little too complicated I think um the
05:29 - other way is to spawn in an object that
05:32 - will uh have the audio sit on it and the
05:36 - great thing about this method is we are
05:38 - already spawning in an object remember
05:40 - when we hit play and roll over our coin
05:45 - you can see the particles and uh they
05:47 - destroy after a a certain amount of
05:49 - seconds so why not just put an audio
05:52 - onto the particles system and uh make it
05:55 - play
05:56 - instantly so let's find the particles
05:59 - the coin effect here let's go down hit
06:03 - add component audio and then audio
06:06 - source and under the audio clip we can
06:09 - now select the coin
06:11 - pickup and uh then we just simply
06:13 - remember to check play on awake and
06:17 - let's maybe just p uh take down the
06:19 - volume a bit here
06:22 - so let's try and see how this
06:25 - sound and it sounds just perfect uh I'm
06:28 - going to bring the volume down just to
06:30 - Tad more because it is um really high
06:33 - pitch the sound and it could quickly get
06:35 - annoying so that's perfect and uh what
06:39 - we can do also is we can make a script
06:41 - to change the pitch so that it will uh
06:43 - vary uh but I'm going to show you how to
06:46 - do that with uh some of the other
06:47 - effects so you can do that on your own
06:49 - on the coin here if you want to uh we're
06:52 - just going to keep the video
06:54 - short and and now that I've said that I
06:57 - just know that this is going to be like
06:58 - half an hour but but okay we'll try uh
07:01 - so under the audio uh we also have the
07:03 - game over and the Three Wooden Heads
07:07 - let's start out with the game over and
07:09 - I'm going to show you something cool uh
07:11 - you can do so under our let's see that's
07:15 - the game master
07:17 - script uh where is it we handle the um
07:21 - it's on the ball Health there so double
07:23 - click ball health and we can see that if
07:26 - we get below this uh transform the
07:29 - position we just restart the level but
07:32 - basically we want to say game over first
07:34 - because game over sounds are awesome so
07:36 - let's create a separate function uh
07:38 - because we want to delay the sound or
07:41 - delay the the loading of the level so
07:42 - the sound has stopped playing and
07:44 - whenever you do that you need to be
07:46 - outside of the update function because
07:48 - you can't delay uh the update function
07:51 - it needs to run every frame so we're
07:54 - going to make a separate function called
07:56 - uh
07:58 - restart and uh let's be more specific
08:01 - restart level let's call it
08:03 - that and uh we don't need any parameters
08:06 - but let's open up some brackets and
08:09 - inside of this we're just going to write
08:13 - um audio
08:18 - doplay like
08:20 - that and then we're going to do and here
08:23 - you can input a string but we're just
08:25 - going to leave it empty and it will play
08:27 - the first audio clip uh at attached and
08:30 - then we're going to do another another
08:32 - thing and that's uh we're going to wait
08:36 - so we're going to do a yield wait 4
08:40 - seconds like this and inside of here you
08:42 - can just write a number of seconds or
08:45 - you can do
08:46 - audio. length audio clip I think that is
08:50 - pretty sure it's audio
08:52 - clip.
08:55 - length uh
08:57 - no let's see here here it's one of these
09:01 - I I can't remember exactly which one um
09:05 - audio audio
09:07 - clip audio
09:10 - importer I'm pretty sure that is a
09:12 - length length in here hm this is weird
09:18 - length maybe they've removed it I'll
09:20 - just check up on that so um just give me
09:23 - a sec and I'll be back okay I'm back so
09:26 - the solution was pretty obvious instead
09:28 - of audio clip you go
09:30 - audio. clip. length so like that so it
09:34 - will simply weight the length of the
09:36 - audio clip and then we can do the
09:38 - loading so
09:39 - application do load
09:42 - [Music]
09:43 - level uh load level and then the level
09:50 - one and close it off so instead of uh
09:54 - loading the level up here we simply
09:56 - going to delete that and then say
09:57 - restart level so it will call that
10:00 - function instead and now when we hit
10:02 - save things should be working uh but we
10:05 - of course need to attach some audio to
10:08 - our ball so um let's just go in here and
10:11 - hit add component audio audio source and
10:17 - then let's find the audio uh game over
10:20 - let's not make it a 3D sound let's also
10:22 - make this 2D then find our ball again
10:26 - and select the audio clip game over
10:29 - oops so game over and let's not set it
10:33 - to play Awake on awake this time because
10:35 - we uh we set it to play through a script
10:37 - and uh everything else should be just
10:39 - fine so now when we hit play roll over
10:42 - our ball and fall
10:46 - down oh something is wrong here so I
10:51 - don't know it sounds like it waits with
10:54 - playing this the the clip until it
10:57 - starts loading the scene
10:59 - so that's weird let's just see game over
11:03 - there's no delay there um so let me just
11:07 - wow that's going to be a lot of pausing
11:08 - in this in this video uh I'll just
11:11 - quickly pause the video again and be
11:12 - back okay so I figured out what it is
11:15 - once again uh so basically this line
11:19 - right here says that if we get below a
11:21 - certain position it will uh call the
11:24 - restart level function and uh it does so
11:28 - but it does so if every frame that we
11:30 - are in uh that we are over this uh value
11:34 - so this audio doplay gets
11:37 - called every single uh frame and so when
11:40 - it does that it doesn't really have time
11:42 - to play it just starts over and starts
11:44 - over and starts silver uh so what we
11:47 - need to do is we need to make sure that
11:49 - this is only played once uh so what we
11:52 - can do is up here we can make a Boolean
11:55 - so we can do um has is
12:01 - restarting here and we can make this
12:04 - false by default and then uh we can do
12:08 - here uh we can say if is
12:13 - restarting is equal to
12:17 - false then we want to go ahead and call
12:19 - the
12:23 - function like
12:26 - this and then in here we simp simply
12:29 - said
12:30 - says uh is restarting equals true and
12:34 - then when we have loaded the level and
12:36 - it will probably do this automatically
12:38 - but you can go ahead and say is
12:40 - restarting is equals false but I'm
12:43 - pretty sure it will do that on its own
12:46 - uh and we can make this a private
12:48 - variable uh just so it won't get in our
12:50 - in our way in in spectro so now when we
12:53 - hit play we will finally see this
12:56 - working game over and it restarts
12:59 - beautiful and when we do it
13:01 - again game over great so a really evil
13:06 - voice saying game
13:07 - over uh yeah so now let's take care of
13:11 - the wooden hits and then at final um
13:14 - we'll do the
13:15 - music so the point with the hits here is
13:18 - that right now when you jump it says
13:21 - nothing and when you land it says
13:23 - nothing so I thought I wanted to put
13:26 - some sounds in here uh whether you both
13:28 - want it on the jumping and on the
13:30 - landing is up to you uh but let's go
13:33 - ahead and have a look at our uh ball
13:37 - control script um so what we can do is
13:41 - we
13:42 - can yeah so what we do is we just uh
13:45 - double click on our ball control here
13:48 - and uh let's
13:49 - simply uh edit this one so
13:54 - um cool so basically we have three
13:57 - different sounds we we have the hit one
13:59 - the hit two and the hit three three
14:02 - excuse
14:03 - me and the uh reason why we have three
14:06 - is because it gets really repetitive if
14:09 - you play the same sound over and over
14:12 - when it's something that needs to play
14:13 - as much as every time you jump and every
14:15 - time you land uh you don't want the same
14:18 - sound playing so here's uh what you do
14:22 - so first off we find the place where we
14:25 - Collide so that's the on collision stay
14:29 - and uh and again we have a problem here
14:31 - because the on Collis stay gets called
14:34 - every time we are on the ground so again
14:37 - we need to make a Boolean that will make
14:39 - sure uh we only play the audio once so
14:43 - let's go here and say um play ones we'll
14:48 - just call it that equals uh
14:53 - true just like that and then in the
14:56 - update function we say uh here when we
15:00 - uh
15:01 - Collide we say
15:03 - if uh play
15:05 - [Music]
15:07 - on is equal to
15:11 - true we will play the sound so in here
15:14 - we can do a debug.log just to quickly uh
15:17 - test this out so
15:19 - test and uh and and so it will play and
15:23 - then we want it to disable so we want to
15:26 - play once equals f
15:30 - uh but we also need to set this to True
15:32 - again so we will do that every time we
15:34 - jump so uh in here in our jump function
15:37 - we'll do play
15:38 - [Music]
15:40 - ones equals
15:43 - true and uh now we should see our code
15:46 - working we'll check our console first
15:49 - off we see one test we see
15:53 - another as soon as we jump okay so we
15:55 - can see there's a problem here it
15:57 - registers is the on Collis stay uh in
16:01 - here and that's not really something we
16:04 - want uh so what we can do is if we try
16:07 - and move it down past the rigid body
16:10 - that might be enough uh we might have to
16:13 - put in a little bit of a delay there
16:16 - just to get it off the
16:17 - ground uh let's see if we can if we can
16:20 - do
16:21 - that
16:23 - play now we need to put in a delay so uh
16:27 - again the easiest way to fix this is
16:29 - just to do a separate function called uh
16:35 - play uh On's
16:38 - true and in here and this is not really
16:40 - good code but I just wanted to get it
16:42 - out of the way because whenever it comes
16:44 - to audio it's a quite quite loose
16:47 - concept and if you just make it work it
16:51 - works basically so and that's what we're
16:54 - going to do now is we are going to make
16:56 - it work so let's copy
17:00 - that put it down under the play ones
17:04 - function and right before that we simply
17:07 - do a wait 4 seconds and then just
17:10 - something like
17:14 - 0.1 and now when we hit
17:16 - play we will see that we jump into the
17:21 - air and uh nothing
17:25 - appears great so everything is just
17:28 - working like it should um let's see okay
17:32 - we need to call the function of course
17:34 - so Play
17:36 - Once
17:39 - true
17:41 - equals uh no just call it here um the
17:47 - reason why I'm showing you all of this
17:49 - um these mistakes is because I could
17:53 - have easily done this a million times
17:55 - before uh I just practiced it and and
17:58 - have the all of the code written out
18:00 - before uh but a lot of people have told
18:03 - me not to do that because then you don't
18:04 - get to be a part of the problem solving
18:07 - process so that once you get to write
18:09 - your own scripts you don't know how to
18:11 - solve errors so that's the whole point
18:14 - of me not having all of this planned out
18:17 - uh so that's a really good excuse for
18:18 - being unprofessional let's move on uh so
18:21 - now when we go in here and hit
18:24 - play we will see hopefully we will
18:29 - see uh that the game has
18:34 - frozen okay so Unity is acting weird I
18:38 - can't move so let me just quickly
18:40 - restart
18:46 - Unity it does that from time to time
18:49 - let's play Here and Now when we hit jump
18:53 - it will say test again so we need to
18:55 - just delay this a little bit more let's
18:58 - do do 0
18:59 - point uh we can do
19:06 - 0.4 let's try this out no it's still
19:10 - just Co it okay so that's really weird
19:13 - is there something wrong with the unol
19:15 - state let's just try to debug this
19:19 - debug.
19:21 - log um test
19:24 - two see when it gets called and now
19:27 - we're going to see a lot of them so I'm
19:29 - just going to collapse them
19:33 - here no this is
19:37 - working then there's something wrong
19:39 - with with our code so if Play Once is
19:41 - equal to True db. log test and set Play
19:45 - Once equal to
19:47 - false then
19:49 - we down here whenever we
19:52 - jump uh we get the play once and we
19:56 - enable it to true I don't see what's
19:59 - wrong with this we can try and increase
20:02 - the delay just a bit more oh okay I see
20:04 - what's wrong now so yeah in the wait 4
20:07 - seconds statement we need to do yield
20:10 - wait 4 seconds and it doesn't even throw
20:12 - an error so okay now things should be
20:15 - finally working and we don't need to be
20:18 - delay it by that much yes and now it
20:22 - will great so now it's working so if I
20:25 - uncollapse this and just get rid of this
20:28 - stupid test
20:33 - function remove the debug.log and let's
20:36 - change this to 0.2 instead and now when
20:39 - we hit play and this is
20:41 - amazing it works
20:45 - great Okay cool so uh yeah what we can
20:49 - do now is we are going to play sounds
20:53 - but the problem with unity here is that
20:55 - we only want to have one source on each
20:59 - object and uh and if we look at the ball
21:02 - right now there's already a source and
21:05 - there's only room for one audio clip so
21:07 - what you do is instead of having
21:09 - multiple audio sources you simply change
21:12 - out the audio clip and then play it so
21:15 - we need some variables for the audio
21:17 - clips and we need a system to change
21:19 - them out so what we're going to do is
21:22 - first off in our uh game master script
21:27 - no our ball Health script here is we
21:29 - want to take this approach because if we
21:32 - change out the um the audio in the ball
21:34 - control and then die it will just play
21:38 - uh the uh hitwood sound uh for now and
21:42 - that's not really something we want so
21:44 - let's just make it change it back again
21:47 - to the game over sound so we're going to
21:50 - do VAR game over
21:54 - sound and we're going to make it of type
21:57 - audio clip and that's all we need so
22:00 - down here where it says is restarting
22:03 - equals true right below that or right
22:06 - below uh above the audio. playay we want
22:09 - to do audio. clip
22:12 - equals audio uh equals game over
22:19 - sound perfect so now it will set the
22:21 - clip to the game over sound and we need
22:25 - the game over sound uh not to be empty
22:27 - so let's just find it here under game
22:30 - over cool so that was basically it for
22:34 - that script and that's what we need to
22:36 - do every time we need to have multiple
22:39 - sounds on one object so in our ball
22:42 - control if we uh go in here and uh
22:46 - instead of our debug.log statement we
22:49 - want to play different sounds so let's
22:51 - just make some variables for the um for
22:55 - the different sounds so let's first off
22:56 - make play play one
23:00 - private and then uh we are going to do
23:02 - hit
23:04 - one of type audio
23:08 - clip
23:10 - hit
23:12 - two of type audio
23:15 - clip and hit three of type audio
23:22 - clip uh a clip AUD clip okay great so
23:28 - now that the spelling is in place we can
23:31 - go down under the on Collis State remove
23:34 - the debug.log and in here we want to
23:37 - make it random uh which of these it uh
23:41 - it is going to play so we're just going
23:43 - to first off do the audio.
23:46 - playay so that we have it
23:50 - there oops and close it off and right
23:54 - above that now we're going to do a
23:56 - random Dot range so uh we are going to
24:00 - say VAR make a new variable call this uh
24:05 - the hit and make it equal to random.
24:09 - range and we're going to go from Zer to
24:13 - four because I'm pretty sure you need to
24:15 - have one more than what you want so uh Z
24:18 - to four and uh yeah so close that
24:23 - off and then in here we're going to say
24:26 - if uh and this is where you could make a
24:28 - switch statement uh but we're going to
24:30 - get into them later so for now I'm just
24:32 - going to do a bunch of if if statements
24:35 - so if the H is equal to uh
24:41 - one I'm pretty sure this is going to
24:43 - return0 to three actually so if the hit
24:47 - is equal to
24:51 - zero then we want to do uh
24:55 - audio. clip equals hit
25:02 - 1 else
25:06 - if the hit is equal to
25:13 - one
25:15 - audio. clip equals hit
25:22 - 2 and then the last one just
25:26 - else
25:32 - oops
25:34 - else
25:35 - audio. clip equals hit 3 cool and then
25:41 - it's going to play the audio so now when
25:44 - we save this out and head back into
25:46 - Unity we of course get an error so let's
25:49 - see random do yeah we meant random.
25:52 - range like that cool so now when we hit
25:56 - play We Should see it
25:58 - changing uh whenever we had something so
26:02 - let's
26:04 - see and it doesn't
26:06 - change well yeah it does but it changes
26:08 - to nothing cool so uh we just need to
26:11 - apply the different hits so first of hit
26:15 - one hit
26:17 - two and hit
26:20 - three awesome let's
26:24 - jump hit
26:26 - three hit
26:29 - three hit three we are getting a lot of
26:32 - hit threes here that's a hit
26:35 - one and hit three and if it can get hit
26:38 - three and hit one it should also be able
26:41 - to get a a hit two so I yeah that was
26:45 - the hit two so it's completely random
26:47 - which of these it's it chooses cool so
26:50 - now that we have that in place we can
26:52 - simply go ahead and
26:55 - um and uh change the pit a bit because
26:58 - the cool thing uh and this is a pretty
27:01 - cool tip is that Unity can can also
27:04 - change the pitch of a clip so what we
27:07 - can do is if we want it to sound a
27:09 - little bit random we can pitch it up
27:11 - just a tad or pitch it down randomly so
27:15 - we can do audio.
27:17 - pitch and then we can do a random range
27:21 - equals random.
27:24 - range and uh if we take a look at the
27:26 - pitch property here it goes from one to
27:29 - three uh or negative3 so the default is
27:33 - one and it goes to three and3 and we
27:37 - don't want it to be that much at all but
27:40 - we do want it to be something like
27:42 - 0.9 comma
27:45 - 1.1 just SOL pit changes and it's uh
27:49 - going to make it sound pretty
27:51 - cool and yeah so and then in the Bal
27:54 - Health script if you don't want this to
27:56 - be affected by pitch again what you do
27:59 - is you simply say
28:01 - audio.
28:04 - pitch equals one so that will just stay
28:07 - the
28:08 - same awesome so now when we uh
28:13 - jump we can
28:15 - hear
28:17 - different hit Sounds playing at
28:19 - different
28:21 - pitch but you might notice that the
28:24 - sound sound uh the sound sounds pretty
28:27 - pretty far away and the reason for this
28:30 - is that our wooden hits are still 3D
28:33 - sounds and we are not oriented through
28:37 - our ball sounds doesn't get uh played
28:41 - back through our Ball but instead
28:43 - through our camera and if you want this
28:45 - or not is completely up to you right now
28:47 - our audio listener sits on the camera so
28:51 - everything that happens over here sounds
28:52 - pretty far away so what I would like to
28:55 - do is just try out and uh remove the
28:59 - audio listener from the camera and
29:01 - instead select the ball hit add
29:03 - component audio and then audio listener
29:07 - so that now everything we hear uh will
29:10 - be played back from the balls
29:12 - perspective and now we can hear the
29:15 - sound much more clear and it will still
29:18 - be affected by speed and other variables
29:21 - so uh that's pretty cool and now
29:24 - everything we have set up in our scene
29:26 - when we have stuff like fire or
29:28 - something uh we will hear it from our
29:30 - balls
29:32 - perspective awesome at last uh man this
29:35 - video is already 30 minutes so I'm just
29:38 - going to quickly go ahead and do
29:41 - the do the music so is anyone even
29:45 - watching at this point if you're
29:47 - watching at this point I guess you are
29:49 - either some kind of Hardcore fan or just
29:53 - really really into Unity so either way I
29:55 - love you and uh let's continue so uh
29:59 - under our audio we want to select the
30:01 - relaxed music and uh we want to disable
30:04 - 3D sound and hit apply so this is just
30:07 - going to load all over
30:09 - again and uh it takes a little while
30:12 - this is the largest file in our scene
30:15 - and audio files are can be uh can get
30:18 - really big so watch out with those long
30:20 - Clips at least compress them before use
30:25 - and now in our GM object let's handle
30:27 - through the game master let's just hit
30:29 - add component and then audio audio
30:33 - Source under the audio clip we're just
30:35 - going to change this to relaxed music
30:38 - and just hit play on awake and also Loop
30:41 - because I've made this uh loop pretty
30:43 - nicely let's turn down the volume a bit
30:46 - and now hit
30:48 - play we can hear some relaxing music
30:51 - play playing and uh you can play around
30:53 - with the volume to make it fit the rest
30:55 - of the sounds but that was basic
30:57 - basically it for this video I hope you
30:59 - enjoyed it and I'll see you in the next
31:01 - [Music]
31:15 - one

Cleaned transcript:

thanks for tuning in at braies hello everyone and welcome to episode 11 in make a game a cool series on making a video game in unity So today we're going to be doing something really awesome uh it's something that some people hate and some people enjoy the most about game making and it's adding audio to our game so we're going to add a bunch of different sounds and a musical track and what is really really difficult when adding audio is making it sound not repetitive so I'm going to show you some cool tips and tricks on how to do that and also in the 2D assets pack available at brack.com uh there's now an audio section and so if we go in here I've gathered um some different sounds that we can use there is a coin pickup sound a game over one I made myself some relaxed music and then three wooden hits when our ball hits the um it's the ground so uh if we we will just take a quick list in here the coin pickup oops I need to set the repeat off here or we're going to get mad so there's the coin pickup sound if you heard it enough and the game over one game over pretty simple uh the relaxed music we had that ago and now some very simple wooden hits so uh and they are in in different strength and uh pitch up a bit and uh and yeah so now that we have these different sounds uh also a great way to uh a great place to get some free sounds is freesound.org if you go in here and search for something let's say relaxed music and uh and and hit search here then make sure to check the creative common zero on the right hand side and if you do that you are uh free to use the sound for whatever purpose you want to so you can also use it commercially so just make sure to press creative comments zero and uh and there's a lot of different sounds awesome so let's get started as always I've opened up unity and just before we go ahead and implement the sounds I've noticed that whenever our ball dies the score doesn't reset so to quickly fix this let's just go on the game master object the GM object that and then under the game master script in here if we double click that to open it up in mono develop um we will just make a quick change that will reset the score whenever the uh whenever the scene is loaded so up here we're just going to make a function start and inside of this we are going to write current score equals z so we will just reset it and now when we hit play and fold down the score will reset this will also reset the score if you change levels so to get some more control over that uh we're going to write a separate function in the future cool so now let's finally go ahead and implement the Audio I feel like I always just do something completely different than what I tell you the first like 3 minutes of the video but now we're here so um let's start with the coin let's start with the coin pickups uh sound so let's find our coin here and uh and uh let's go ahead and import the audio so inside of our 2D assets pack let's just import the entire folder drag it in there and all of the different audio clips will import they will relaxed music one uh will take a bit of time I have compressed the file to make it uh a bit smaller but it is still a a rather long music uh file so it is to be expected so under the audio now we can go ahead and select our coin pickup and we want this to be a um well it's it's completely up to you uh actually I think the coin pickup sound uh should not be 3D so let's just disable that and uh basically what it means is that um then it will just twodimensionally play uh other than playing uh where it factorizes how far you are from the object and uh at what speed you're traveling and and all that advanced audio stuff so let's just disable 3D audio and uh hit apply cool so now under our coin uh object we can go ahead and hit add component and then audio and and uh we can go ahead and um actually okay so this is where it gets a bit complicated because there are multiple ways of handling this uh the first of which is to attach uh the audio on the coin itself and then just delay the destruction of the coin till the audio has finished playing um and then you can just disable the mesh renderer at start so you won't see it but that's a little too complicated I think um the other way is to spawn in an object that will uh have the audio sit on it and the great thing about this method is we are already spawning in an object remember when we hit play and roll over our coin you can see the particles and uh they destroy after a a certain amount of seconds so why not just put an audio onto the particles system and uh make it play instantly so let's find the particles the coin effect here let's go down hit add component audio and then audio source and under the audio clip we can now select the coin pickup and uh then we just simply remember to check play on awake and let's maybe just p uh take down the volume a bit here so let's try and see how this sound and it sounds just perfect uh I'm going to bring the volume down just to Tad more because it is um really high pitch the sound and it could quickly get annoying so that's perfect and uh what we can do also is we can make a script to change the pitch so that it will uh vary uh but I'm going to show you how to do that with uh some of the other effects so you can do that on your own on the coin here if you want to uh we're just going to keep the video short and and now that I've said that I just know that this is going to be like half an hour but but okay we'll try uh so under the audio uh we also have the game over and the Three Wooden Heads let's start out with the game over and I'm going to show you something cool uh you can do so under our let's see that's the game master script uh where is it we handle the um it's on the ball Health there so double click ball health and we can see that if we get below this uh transform the position we just restart the level but basically we want to say game over first because game over sounds are awesome so let's create a separate function uh because we want to delay the sound or delay the the loading of the level so the sound has stopped playing and whenever you do that you need to be outside of the update function because you can't delay uh the update function it needs to run every frame so we're going to make a separate function called uh restart and uh let's be more specific restart level let's call it that and uh we don't need any parameters but let's open up some brackets and inside of this we're just going to write um audio doplay like that and then we're going to do and here you can input a string but we're just going to leave it empty and it will play the first audio clip uh at attached and then we're going to do another another thing and that's uh we're going to wait so we're going to do a yield wait 4 seconds like this and inside of here you can just write a number of seconds or you can do audio. length audio clip I think that is pretty sure it's audio clip. length uh no let's see here here it's one of these I I can't remember exactly which one um audio audio clip audio importer I'm pretty sure that is a length length in here hm this is weird length maybe they've removed it I'll just check up on that so um just give me a sec and I'll be back okay I'm back so the solution was pretty obvious instead of audio clip you go audio. clip. length so like that so it will simply weight the length of the audio clip and then we can do the loading so application do load level uh load level and then the level one and close it off so instead of uh loading the level up here we simply going to delete that and then say restart level so it will call that function instead and now when we hit save things should be working uh but we of course need to attach some audio to our ball so um let's just go in here and hit add component audio audio source and then let's find the audio uh game over let's not make it a 3D sound let's also make this 2D then find our ball again and select the audio clip game over oops so game over and let's not set it to play Awake on awake this time because we uh we set it to play through a script and uh everything else should be just fine so now when we hit play roll over our ball and fall down oh something is wrong here so I don't know it sounds like it waits with playing this the the clip until it starts loading the scene so that's weird let's just see game over there's no delay there um so let me just wow that's going to be a lot of pausing in this in this video uh I'll just quickly pause the video again and be back okay so I figured out what it is once again uh so basically this line right here says that if we get below a certain position it will uh call the restart level function and uh it does so but it does so if every frame that we are in uh that we are over this uh value so this audio doplay gets called every single uh frame and so when it does that it doesn't really have time to play it just starts over and starts over and starts silver uh so what we need to do is we need to make sure that this is only played once uh so what we can do is up here we can make a Boolean so we can do um has is restarting here and we can make this false by default and then uh we can do here uh we can say if is restarting is equal to false then we want to go ahead and call the function like this and then in here we simp simply said says uh is restarting equals true and then when we have loaded the level and it will probably do this automatically but you can go ahead and say is restarting is equals false but I'm pretty sure it will do that on its own uh and we can make this a private variable uh just so it won't get in our in our way in in spectro so now when we hit play we will finally see this working game over and it restarts beautiful and when we do it again game over great so a really evil voice saying game over uh yeah so now let's take care of the wooden hits and then at final um we'll do the music so the point with the hits here is that right now when you jump it says nothing and when you land it says nothing so I thought I wanted to put some sounds in here uh whether you both want it on the jumping and on the landing is up to you uh but let's go ahead and have a look at our uh ball control script um so what we can do is we can yeah so what we do is we just uh double click on our ball control here and uh let's simply uh edit this one so um cool so basically we have three different sounds we we have the hit one the hit two and the hit three three excuse me and the uh reason why we have three is because it gets really repetitive if you play the same sound over and over when it's something that needs to play as much as every time you jump and every time you land uh you don't want the same sound playing so here's uh what you do so first off we find the place where we Collide so that's the on collision stay and uh and again we have a problem here because the on Collis stay gets called every time we are on the ground so again we need to make a Boolean that will make sure uh we only play the audio once so let's go here and say um play ones we'll just call it that equals uh true just like that and then in the update function we say uh here when we uh Collide we say if uh play on is equal to true we will play the sound so in here we can do a debug.log just to quickly uh test this out so test and uh and and so it will play and then we want it to disable so we want to play once equals f uh but we also need to set this to True again so we will do that every time we jump so uh in here in our jump function we'll do play ones equals true and uh now we should see our code working we'll check our console first off we see one test we see another as soon as we jump okay so we can see there's a problem here it registers is the on Collis stay uh in here and that's not really something we want uh so what we can do is if we try and move it down past the rigid body that might be enough uh we might have to put in a little bit of a delay there just to get it off the ground uh let's see if we can if we can do that play now we need to put in a delay so uh again the easiest way to fix this is just to do a separate function called uh play uh On's true and in here and this is not really good code but I just wanted to get it out of the way because whenever it comes to audio it's a quite quite loose concept and if you just make it work it works basically so and that's what we're going to do now is we are going to make it work so let's copy that put it down under the play ones function and right before that we simply do a wait 4 seconds and then just something like 0.1 and now when we hit play we will see that we jump into the air and uh nothing appears great so everything is just working like it should um let's see okay we need to call the function of course so Play Once true equals uh no just call it here um the reason why I'm showing you all of this um these mistakes is because I could have easily done this a million times before uh I just practiced it and and have the all of the code written out before uh but a lot of people have told me not to do that because then you don't get to be a part of the problem solving process so that once you get to write your own scripts you don't know how to solve errors so that's the whole point of me not having all of this planned out uh so that's a really good excuse for being unprofessional let's move on uh so now when we go in here and hit play we will see hopefully we will see uh that the game has frozen okay so Unity is acting weird I can't move so let me just quickly restart Unity it does that from time to time let's play Here and Now when we hit jump it will say test again so we need to just delay this a little bit more let's do do 0 point uh we can do 0.4 let's try this out no it's still just Co it okay so that's really weird is there something wrong with the unol state let's just try to debug this debug. log um test two see when it gets called and now we're going to see a lot of them so I'm just going to collapse them here no this is working then there's something wrong with with our code so if Play Once is equal to True db. log test and set Play Once equal to false then we down here whenever we jump uh we get the play once and we enable it to true I don't see what's wrong with this we can try and increase the delay just a bit more oh okay I see what's wrong now so yeah in the wait 4 seconds statement we need to do yield wait 4 seconds and it doesn't even throw an error so okay now things should be finally working and we don't need to be delay it by that much yes and now it will great so now it's working so if I uncollapse this and just get rid of this stupid test function remove the debug.log and let's change this to 0.2 instead and now when we hit play and this is amazing it works great Okay cool so uh yeah what we can do now is we are going to play sounds but the problem with unity here is that we only want to have one source on each object and uh and if we look at the ball right now there's already a source and there's only room for one audio clip so what you do is instead of having multiple audio sources you simply change out the audio clip and then play it so we need some variables for the audio clips and we need a system to change them out so what we're going to do is first off in our uh game master script no our ball Health script here is we want to take this approach because if we change out the um the audio in the ball control and then die it will just play uh the uh hitwood sound uh for now and that's not really something we want so let's just make it change it back again to the game over sound so we're going to do VAR game over sound and we're going to make it of type audio clip and that's all we need so down here where it says is restarting equals true right below that or right below uh above the audio. playay we want to do audio. clip equals audio uh equals game over sound perfect so now it will set the clip to the game over sound and we need the game over sound uh not to be empty so let's just find it here under game over cool so that was basically it for that script and that's what we need to do every time we need to have multiple sounds on one object so in our ball control if we uh go in here and uh instead of our debug.log statement we want to play different sounds so let's just make some variables for the um for the different sounds so let's first off make play play one private and then uh we are going to do hit one of type audio clip hit two of type audio clip and hit three of type audio clip uh a clip AUD clip okay great so now that the spelling is in place we can go down under the on Collis State remove the debug.log and in here we want to make it random uh which of these it uh it is going to play so we're just going to first off do the audio. playay so that we have it there oops and close it off and right above that now we're going to do a random Dot range so uh we are going to say VAR make a new variable call this uh the hit and make it equal to random. range and we're going to go from Zer to four because I'm pretty sure you need to have one more than what you want so uh Z to four and uh yeah so close that off and then in here we're going to say if uh and this is where you could make a switch statement uh but we're going to get into them later so for now I'm just going to do a bunch of if if statements so if the H is equal to uh one I'm pretty sure this is going to return0 to three actually so if the hit is equal to zero then we want to do uh audio. clip equals hit 1 else if the hit is equal to one audio. clip equals hit 2 and then the last one just else oops else audio. clip equals hit 3 cool and then it's going to play the audio so now when we save this out and head back into Unity we of course get an error so let's see random do yeah we meant random. range like that cool so now when we hit play We Should see it changing uh whenever we had something so let's see and it doesn't change well yeah it does but it changes to nothing cool so uh we just need to apply the different hits so first of hit one hit two and hit three awesome let's jump hit three hit three hit three we are getting a lot of hit threes here that's a hit one and hit three and if it can get hit three and hit one it should also be able to get a a hit two so I yeah that was the hit two so it's completely random which of these it's it chooses cool so now that we have that in place we can simply go ahead and um and uh change the pit a bit because the cool thing uh and this is a pretty cool tip is that Unity can can also change the pitch of a clip so what we can do is if we want it to sound a little bit random we can pitch it up just a tad or pitch it down randomly so we can do audio. pitch and then we can do a random range equals random. range and uh if we take a look at the pitch property here it goes from one to three uh or negative3 so the default is one and it goes to three and3 and we don't want it to be that much at all but we do want it to be something like 0.9 comma 1.1 just SOL pit changes and it's uh going to make it sound pretty cool and yeah so and then in the Bal Health script if you don't want this to be affected by pitch again what you do is you simply say audio. pitch equals one so that will just stay the same awesome so now when we uh jump we can hear different hit Sounds playing at different pitch but you might notice that the sound sound uh the sound sounds pretty pretty far away and the reason for this is that our wooden hits are still 3D sounds and we are not oriented through our ball sounds doesn't get uh played back through our Ball but instead through our camera and if you want this or not is completely up to you right now our audio listener sits on the camera so everything that happens over here sounds pretty far away so what I would like to do is just try out and uh remove the audio listener from the camera and instead select the ball hit add component audio and then audio listener so that now everything we hear uh will be played back from the balls perspective and now we can hear the sound much more clear and it will still be affected by speed and other variables so uh that's pretty cool and now everything we have set up in our scene when we have stuff like fire or something uh we will hear it from our balls perspective awesome at last uh man this video is already 30 minutes so I'm just going to quickly go ahead and do the do the music so is anyone even watching at this point if you're watching at this point I guess you are either some kind of Hardcore fan or just really really into Unity so either way I love you and uh let's continue so uh under our audio we want to select the relaxed music and uh we want to disable 3D sound and hit apply so this is just going to load all over again and uh it takes a little while this is the largest file in our scene and audio files are can be uh can get really big so watch out with those long Clips at least compress them before use and now in our GM object let's handle through the game master let's just hit add component and then audio audio Source under the audio clip we're just going to change this to relaxed music and just hit play on awake and also Loop because I've made this uh loop pretty nicely let's turn down the volume a bit and now hit play we can hear some relaxing music play playing and uh you can play around with the volume to make it fit the rest of the sounds but that was basic basically it for this video I hope you enjoyed it and I'll see you in the next one
