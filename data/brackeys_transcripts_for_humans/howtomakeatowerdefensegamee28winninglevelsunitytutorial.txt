With timestamps:

00:00 - [Music]
00:03 - hello everyone and welcome to this video
00:04 - in creating a tower defense game in
00:05 - unity today we're going to create some
00:07 - cool UI that will display whenever we
00:09 - finish a level so when we kill the last
00:13 - wave it's going to animate onto the
00:15 - screen and some callway display the
00:17 - amount of rounds that we completed and
00:20 - then have a few buttons for going to the
00:22 - next level it's going to look something
00:24 - like
00:26 - this so let's just go ahead and get
00:28 - started so as you can see I'm here in
00:29 - level one and we're going to be editing
00:31 - the UI so let's go to the scene here and
00:34 - let's open up our overlay canvas and
00:37 - instead of creating everything from
00:38 - scratch let's reuse some of the parts
00:40 - that we created in an earlier video more
00:42 - specifically the video on creating a
00:44 - game over screen so if you haven't
00:46 - watched that I recommend you do that
00:48 - first or if you feel like you know Unity
00:50 - a bit better you can definitely just do
00:52 - everything on your own so let's just
00:54 - duplicate the game over menu here and
00:56 - let's open it up to see what we're
00:57 - working with so this basically has a
01:00 - background a text saying game over which
01:03 - we're going to change in a second it's
01:05 - going to show the amount of rounds that
01:07 - we just completed or survived and um we
01:10 - are also going to have a couple of
01:11 - buttons in this case we have a retry and
01:13 - a menu button um we are going to change
01:15 - that to a continue and a menu button on
01:18 - the game over object itself we have a
01:21 - game over script that changes the round
01:23 - text to display the actual amount of
01:25 - rounds that we completed as well as
01:28 - hooking up some of the buttons to
01:29 - actually do something when we press them
01:31 - we also have an animator so if we go
01:33 - ahead and hit play it's just going to
01:34 - animate in very smoothly and that looks
01:36 - pretty nice so let's just keep that on
01:38 - there as well so let's begin by uh
01:40 - changing the name of this object to
01:42 - something like complete level and uh
01:46 - let's also remove the game over script
01:49 - let's now go to the game over text and
01:52 - rename this to something like uh level
01:55 - one text and we'll change the actual
01:58 - text to level
02:00 - one as well we might even put an
02:02 - exclamation mark in there no it doesn't
02:04 - look good and we can also change the
02:06 - font here to be robotto black I want
02:09 - this to really have an impact so the
02:11 - round survive we can pretty much leave
02:13 - as is but I do want to mess around with
02:16 - the buttons here a little bit so let me
02:18 - start by selecting the retry button and
02:20 - just scaling this up to fit the entirety
02:23 - of the two buttons so if we disable our
02:25 - menu now we've just made that twice as
02:27 - big and I think we can go ahead and
02:30 - change the uh text here to continue I
02:32 - really want the user to press this
02:34 - button so it's going to be very large
02:36 - and let's just rename it in the
02:37 - hierarchy as well we're not going to be
02:40 - hooking it up to an on click event just
02:42 - yet but we'll do that very soon next up
02:45 - I also want to maybe highlight this
02:47 - button a tiny bit more uh whenever we
02:49 - hover over it so I'm just going to
02:51 - change the highlighted color to be a bit
02:53 - more gray um that will just look a bit
02:56 - better because whenever you have bigger
02:58 - buttons you also want bigger highlight
03:00 - um animations that's a good rule of
03:03 - thumb so now we can take our continue
03:06 - and maybe move it up a tiny bit I'm
03:07 - holding down shift to move move it on
03:10 - the Y AIS let's also take our round
03:12 - survived and just move that up a tiny
03:14 - bit as well I think that looks a bit
03:16 - better we can maybe even move up our
03:18 - continue button a tiny bit more because
03:20 - what I want to do with our menu button
03:22 - here is actually place this right
03:24 - beneath and I want to go ahead and
03:26 - disable our image and just have the text
03:28 - here it's pretty new thing to do but
03:31 - it's done a lot especially on Android
03:34 - and smartphones and stuff like that to
03:37 - use text as a button so let's make this
03:40 - wide and let's also make it a robotto
03:43 - thin and we can definitely scale down
03:46 - the front to something like 20 we want
03:48 - it to be pretty small let's take the
03:50 - entire button here and scale down as
03:52 - well and just place that right under our
03:55 - continue button so you can see you can
03:56 - definitely click there but it's not
03:58 - going to be very clear clear and we
04:00 - definitely draw more attention to the
04:02 - click or to the continue button so now
04:05 - for our menu here we can go ahead and
04:06 - change the highlighted color as well
04:09 - just to make that more apparent as well
04:12 - and we don't want to have the menu image
04:14 - as our Target graphic instead we want to
04:16 - have our text so now when we hit play we
04:20 - should actually see this U menu working
04:23 - already and you can see it has a nice
04:25 - fade in and all that that working and we
04:27 - also can hover our two buttons and click
04:29 - on them but nothing yet happens and our
04:32 - rounds survived do not change so what I
04:35 - thought since we both have an amount of
04:37 - round survived under our complete level
04:39 - screen and under our game over screen is
04:42 - maybe separate that piece of code out
04:45 - into a separate script that we can then
04:47 - put on the actual text object our rounds
04:50 - here in order to change it so let's go
04:52 - into our game over script let's double
04:54 - click that to open it up in visual
04:56 - studio and we can maybe just extract
04:59 - that P piece of code so visual studio is
05:01 - opening here there it is and let's go in
05:04 - here and first off we need to take the
05:06 - round text we also need to change this
05:10 - function so let's create a new script
05:12 - that we place on our round survive let's
05:15 - do it on the complete level first and
05:17 - let's actually go into our round text
05:20 - object just to make things as simple as
05:22 - possible and let's call this one the
05:25 - rounds
05:27 - survived and we can just double click
05:29 - that to open it up as well and hit
05:33 - reload and what we'll do here is just
05:35 - move in all of the necessary parts of
05:37 - code so let's go into our game over
05:39 - script let's take our rounds text and
05:42 - let's copy that in here let's do the
05:46 - same thing with our unityengine.ui we
05:48 - need to include that namespace or else
05:51 - it's not going to work awesome and let's
05:53 - also take our void
05:56 - enable and move that in here as well
06:00 - so right now we're just setting the text
06:02 - equal to the amount of rounds that we
06:05 - have survived and we do that instantly
06:08 - what I wanted to do was kind of do a
06:10 - count up animation to really make that
06:13 - feel cooler than it really is so let's
06:17 - save our changes to the game over menu
06:20 - and let's have a look at how we can do
06:22 - that but first inside of unity let's
06:24 - just make sure that we link this up
06:25 - properly so round survived here we'll
06:28 - drag in our text
06:30 - and we'll also do the same thing for our
06:32 - game over so let's find our rounds let's
06:34 - add the round survived and let's drag in
06:37 - text so now it's going to work for both
06:39 - without having to duplicate any code
06:42 - that's just a lot
06:43 - better so what I thought we would do
06:45 - here is inside of our round survive
06:48 - script is create a um I enumerator that
06:52 - means that we're creating a cotin and
06:55 - remember co-routines are just weird when
06:58 - it comes to syntax we write I numerator
07:01 - instead of void and then we write the
07:03 - name of our function and in our case we
07:05 - can just put something like animate text
07:09 - and everything else is like a normal
07:10 - function so what a co-routine of course
07:13 - allows us to do whenever we write I
07:15 - numerator here instead of void we
07:18 - basically able to pause our code
07:21 - execution and then continue it at a
07:23 - later time and that's awesome for us
07:25 - because we want to count up with a small
07:27 - pause between each iteration when we
07:30 - count so uh in our case what we could do
07:34 - is maybe keep track of what round we're
07:36 - currently displaying so we're going to
07:38 - do an integer round and it's going to
07:41 - start at zero and then slowly count up
07:43 - to with the amount of rounds that we've
07:45 - survived and let's also begin by setting
07:47 - our rounds text. text equal
07:51 - to0 so that we're sure that our text
07:53 - will start at zero and that our variable
07:57 - um is not only going to start at zero
07:59 - but we actually display that on the text
08:01 - object then we're going to write
08:04 - while round is less than and then we're
08:08 - going to write player
08:10 - stats. rounds the same way we do up here
08:13 - that's the amount of rounds that we've
08:15 - survived so as long as round is less
08:18 - than player stats. rounds well then we
08:21 - want to count upward so we're going to
08:22 - say round Plus+ we're going to increase
08:25 - that by one then we're going to display
08:29 - the text with uh with an increase of one
08:32 - so we said rounds text. text equal to
08:36 - round do two
08:39 - string so basically what this code
08:41 - currently does is it sets our text equal
08:44 - to zero and creates a variable that's
08:46 - equal to zero as well and we call that
08:48 - round then we say while round is less
08:51 - than three which in the first place it
08:53 - is we're going to increase round by one
08:56 - so in this case round is going to be one
08:58 - and we're going going to set our text
09:00 - equal to 1 then we're going to go
09:03 - through again and say round is still
09:04 - less than three so we're going to
09:06 - increase that by one again so now it's
09:09 - equal to two and we're going to set our
09:10 - text equal to two and we do that one
09:13 - last time because round is that uh is
09:15 - equal to two and that's less than three
09:17 - we increase it by one and it's going to
09:19 - set the text equal to three so that's
09:22 - how this basically Works however between
09:25 - each time that we sent our text here and
09:27 - that we increase our round we want to
09:29 - delay a tiny bit we want to wait a
09:32 - fraction of a second so that it's
09:34 - actually going to be visible and not
09:36 - just happen faster than we can see it so
09:39 - in order to do that we're going to type
09:41 - yield return new and then wait for
09:44 - seconds and we've done this before but
09:46 - it's just very weird syntax wise I know
09:50 - and this is where we input the amount of
09:51 - seconds that we want to wait in our case
09:54 - I would like to uh wait 05 seconds I
09:58 - think that's going to be pretty pretty
09:59 - decent and uh that's pretty much all we
10:02 - need to do except for one thing and that
10:05 - is if we want this looking really good
10:07 - we of course want to wait until our text
10:10 - is visible before we start counting
10:12 - upwards and since we kind of fade
10:14 - everything in at the beginning we'll
10:16 - have to input just a small delay at the
10:19 - very beginning of our script or actually
10:21 - we should do that before the while loop
10:23 - but after we set our text equal to zero
10:26 - so let's say yield return new waight for
10:29 - seconds let's just input something like
10:31 - 7 Seconds here so before we can play
10:33 - this in unity we of course need to also
10:35 - call the method and remember whenever
10:38 - we're calling a cotin we can't just say
10:41 - animate text and then close it instead
10:43 - we need to wrap that in a start Co
10:46 - routine call so we write start Co
10:49 - routine and then we input our animate
10:52 - text into that so if we save that we
10:54 - should actually see this working and
10:56 - remember right now we are using three in
10:59 - instead of the actual amount of rounds
11:00 - which is going to be zero in the
11:01 - beginning but that's fine that that will
11:03 - just allow us to see what's going on in
11:06 - fact I want to bump this up to something
11:07 - higher so that we can really see what
11:09 - it's doing so let's bump it up to
11:11 - something like 17 so now when we hit
11:13 - play we should see that everything
11:15 - animates on and then it counts upwards
11:19 - that's awesome so um that works just
11:22 - fine and we can now change this back to
11:23 - be player stats. rounds so that it will
11:28 - actually change to the amount of rounds
11:30 - that we've survived so now we want to
11:32 - determine what happens whenever we press
11:34 - one of these buttons so if we go into
11:37 - Unity we can have a look at exactly how
11:39 - we want to link this up for our game
11:41 - over object we also have a game over
11:43 - script that takes care of retrying and
11:48 - going to the menu so let's create a new
11:50 - separate script that sits on our
11:52 - complete level called well complete
11:56 - level so we need this to work the the
11:59 - exact same way that our game over script
12:01 - currently does so let's jump in there
12:03 - and see what we're doing we have a
12:04 - reference to the scene fader so that we
12:06 - can nicely call the Fate 2 method and as
12:09 - input we use the menu scene name which
12:12 - is just equal to main menu and we need
12:14 - to wrap all of that in a nice public
12:16 - method so let's just do that inside of
12:18 - here as well so let's create a public
12:22 - scene fader called scene fader let's
12:25 - also create a public string which is is
12:29 - going to be our menu scene name and
12:31 - we'll default that to main
12:34 - menu and we can go down here delete
12:37 - these two functions and instead write
12:39 - public void
12:41 - menu and then here we simply go scen
12:44 - fader do fate 2 and then we input the
12:47 - menu scene
12:49 - name however we also need another method
12:52 - and that's what we need to do whenever
12:54 - we want to continue so let's create a
12:56 - public void continue
13:00 - and basically what we want to do here is
13:02 - the exact same thing that we did in the
13:05 - previous video we want to bump up our
13:07 - maximum level reached so that we will
13:10 - keep proper track of what level we are
13:13 - currently on and also we want of course
13:16 - transition to the next scene so to do
13:19 - that let's go into our game manager that
13:21 - takes care of all that for us currently
13:23 - and let's go in here and find our public
13:26 - string Next Level and the public in
13:29 - level to unlock and we can just move
13:31 - that inside of our complete level
13:33 - instead so here we're going to have our
13:36 - um and I actually want to move it up I
13:38 - think we're going to have our next level
13:40 - and our level to unlock and we also need
13:43 - to go down to where we actually call
13:46 - this so we have our player pref set in
13:49 - level reached and we also Fade to the
13:51 - next level so let's just copy all of
13:53 - this code and I'm just going to copy the
13:56 - um I'm just going to remove the
13:57 - debug.log
13:59 - so we'll just cut that and paste it in
14:02 - here and that means that inside of our
14:04 - game manager and this should actually
14:06 - work right away inside of our game
14:08 - manager we can now remove the scene
14:10 - fader because we don't need to do any
14:12 - level transitioning in here however when
14:15 - we win the level what we want to do is
14:18 - display our complete level screen so
14:20 - we'll wait to do all of this until we
14:23 - press the continue button but we still
14:25 - have to display the continue button and
14:26 - the menu button and all the other stuff
14:28 - that we've created when we win the level
14:31 - and so inside of our game manager when
14:33 - our win level um function is called we
14:36 - want to display that and we'll do that
14:38 - the exact same way we do with the game
14:39 - over UI we want to create a reference a
14:42 - public game object not game manager game
14:46 - object called complete
14:48 - level and then UI and we simply go down
14:52 - here and say complete level ui.
14:55 - setactive and we input true we probably
14:58 - also want to to set game is over equal
14:59 - to true the same way that we do when we
15:02 - end the game just to make sure that our
15:05 - camera will stop moving and any other
15:08 - scripts that are currently using this uh
15:11 - variable to figure out if it should be
15:13 - active will respond accordingly so just
15:16 - make sure to set that to
15:18 - true so now we should actually be able
15:20 - to go into unity and Link all of this
15:23 - stuff up and there are a few things that
15:24 - we need to drag around first off under
15:27 - our complete level we should actually
15:29 - see three values appearing and there
15:31 - they are we have the menu scene name
15:33 - that's going to be the same the next
15:35 - level that's exactly right the level to
15:38 - unlock is right as well we just need to
15:40 - drag in the scene fader and there we go
15:43 - then under our game over we should see
15:46 - that that's just fine as well and under
15:48 - our game master some variables here have
15:52 - disappeared but instead we have the
15:53 - complete level UI and we just want to
15:55 - drag in that entire object so now now we
15:58 - can disable our complete level UI and
16:01 - this should actually be working now
16:04 - however I discovered a bug and that is
16:07 - after we did a fix when it came to
16:10 - counting down how many enemies were left
16:13 - and then transitioning to the next wave
16:15 - and maybe even uh transitioning to the
16:17 - next scene we um also kind of missed
16:21 - some other things that were going on
16:23 - that part is actually still a bit
16:26 - glitched and I figured out that two
16:28 - things were going wrong the first one is
16:31 - that under our enemy whenever our enemy
16:34 - takes damage and his health reaches zero
16:37 - we die so we call the die method and
16:40 - what happens inside of the die method is
16:42 - that we get some money we instantiate an
16:44 - effect we destroy the game object and we
16:48 - add some um or we subtract one from the
16:51 - uh enemies alive however destroying a
16:55 - game object is not a very immediate
16:58 - thing Unity sometime takes a bit of time
17:01 - before it destroys a game object it
17:03 - might even call update once more before
17:06 - destroying the game object and it
17:08 - definitely uh is going to call update on
17:11 - other objects sometimes before doing it
17:14 - so what would happen is we would have an
17:17 - enemy that reaches um zero on its Health
17:21 - dies and then right after another turret
17:24 - shoots it it takes some more damage it's
17:27 - Health Reach is zero as well and we die
17:30 - again and so it's just going to keep
17:32 - dying a few times and therefore not only
17:34 - do we get more money than we should we
17:37 - also subtract more than we should from
17:38 - the enemies alive so what we'll do in
17:41 - here is a very very simple fix we'll
17:43 - create a private bullan variable called
17:46 - is dead and we'll default that to false
17:49 - then when we die we said is dead equal
17:52 - to true and then up here we simply say
17:55 - that if our health is less than or equal
17:57 - to zero and and we are not dead well
18:01 - then we can go ahead and die very simple
18:04 - fix but it is going to uh take care of
18:06 - the problem also inside of our wave
18:08 - spawner currently whenever we uh spawn a
18:12 - wave and we go through spawning all the
18:14 - enemies we check if our wave index is
18:16 - equal to the amount of waves and if it
18:19 - is we've just won the level because
18:21 - there are no more waves of course we
18:23 - don't want to check for this just after
18:25 - we finish spawning we want to check for
18:27 - this in the update Loop in case there
18:30 - are no more enemies alive so under the
18:32 - enemies alive check we're going to go in
18:35 - here and check if we've just reached the
18:37 - end of our level and in if we have then
18:40 - we can go ahead and win so again just a
18:43 - few bug fixes there but I thought I
18:45 - would just clear that up in the video
18:47 - because there's nothing more annoying
18:48 - than uh bugs like this um that are
18:51 - sometimes hard to reproduce but just
18:53 - gives weird results so now we should be
18:56 - able to go in here hit play and let's
18:59 - just play through our game here so let's
19:01 - start by creating some laser turrets and
19:04 - I'm actually just going to go totally
19:05 - overboard with these so that we can very
19:08 - quickly go through the game Let's also
19:10 - create a couple of standard turrets and
19:12 - maybe some missile launchers uh down
19:14 - here just for fun and you should be able
19:17 - to take care of it so this is our next
19:20 - to last off and this is our final wave
19:23 - and you can see that when The Last Enemy
19:24 - is killed it's going to say level one it
19:27 - disables our camera because we remember
19:29 - to said game is over it counts up to
19:31 - five the amount of rounds that we
19:33 - survived and we have two buttons we have
19:35 - the menu which I'm just going to promise
19:37 - you works and we have the continue
19:39 - button which we can go ahead and click
19:41 - and it does not oh yeah so that's the
19:44 - final thing that we forgot to link up
19:46 - and that means the menu button actually
19:48 - doesn't work as well what we need to do
19:50 - is go into our overlay canvas complete
19:53 - level and then we can select our
19:55 - continue and in here we of course need
19:58 - to to reference the onclick event you
19:59 - guys were probably sitting there oh no
20:01 - he doesn't know what he's doing yes and
20:03 - he forgotten to and yes I had so let's
20:05 - just drag in our complete level let's go
20:08 - under the complete level script and
20:10 - let's select the continue function and
20:13 - also under our menu let's drag in our
20:15 - complete level going onto the complete
20:17 - level script and selecting the menu
20:20 - function cool so that should actually
20:23 - make everything work so let's just again
20:25 - quickly run through this I'm never going
20:27 - to get tired of playing testing this
20:28 - game it's just it's I think it's really
20:31 - fun we really nailed some of the
20:33 - mechanics here um of course we might
20:37 - need some balancing but that's a whole
20:40 - another topic so let's just run through
20:42 - it here so this is the uh second to last
20:45 - level and the final level is going to
20:48 - spawn now and when we run through and
20:51 - kill off our last opponent level one
20:53 - everything counts up awesome we can hit
20:55 - continue and it's going to transition
20:58 - directly to the next level that's pretty
21:00 - much it for this video I hope you liked
21:02 - it and I really hope you like the series
21:04 - in general if you do you should consider
21:05 - visiting my Patron page patreon is a way
21:08 - for you to support me with a monthly
21:10 - donation and in return I offer some
21:12 - humble rewards and in general it's what
21:14 - keeps this channel going and growing so
21:17 - yeah consider uh supporting me there
21:19 - it's of course totally optional and
21:21 - regardless of if you do I will see you
21:24 - in the next video thanks to all the
21:26 - awesome Patron supporters who donated
21:28 - November and a special thanks to Sultan
21:30 - Al Sheriff fisel marifi James Kell hound
21:32 - and Robert bonam become a patreon
21:34 - yourself at patreon.com
21:37 - braies

Cleaned transcript:

hello everyone and welcome to this video in creating a tower defense game in unity today we're going to create some cool UI that will display whenever we finish a level so when we kill the last wave it's going to animate onto the screen and some callway display the amount of rounds that we completed and then have a few buttons for going to the next level it's going to look something like this so let's just go ahead and get started so as you can see I'm here in level one and we're going to be editing the UI so let's go to the scene here and let's open up our overlay canvas and instead of creating everything from scratch let's reuse some of the parts that we created in an earlier video more specifically the video on creating a game over screen so if you haven't watched that I recommend you do that first or if you feel like you know Unity a bit better you can definitely just do everything on your own so let's just duplicate the game over menu here and let's open it up to see what we're working with so this basically has a background a text saying game over which we're going to change in a second it's going to show the amount of rounds that we just completed or survived and um we are also going to have a couple of buttons in this case we have a retry and a menu button um we are going to change that to a continue and a menu button on the game over object itself we have a game over script that changes the round text to display the actual amount of rounds that we completed as well as hooking up some of the buttons to actually do something when we press them we also have an animator so if we go ahead and hit play it's just going to animate in very smoothly and that looks pretty nice so let's just keep that on there as well so let's begin by uh changing the name of this object to something like complete level and uh let's also remove the game over script let's now go to the game over text and rename this to something like uh level one text and we'll change the actual text to level one as well we might even put an exclamation mark in there no it doesn't look good and we can also change the font here to be robotto black I want this to really have an impact so the round survive we can pretty much leave as is but I do want to mess around with the buttons here a little bit so let me start by selecting the retry button and just scaling this up to fit the entirety of the two buttons so if we disable our menu now we've just made that twice as big and I think we can go ahead and change the uh text here to continue I really want the user to press this button so it's going to be very large and let's just rename it in the hierarchy as well we're not going to be hooking it up to an on click event just yet but we'll do that very soon next up I also want to maybe highlight this button a tiny bit more uh whenever we hover over it so I'm just going to change the highlighted color to be a bit more gray um that will just look a bit better because whenever you have bigger buttons you also want bigger highlight um animations that's a good rule of thumb so now we can take our continue and maybe move it up a tiny bit I'm holding down shift to move move it on the Y AIS let's also take our round survived and just move that up a tiny bit as well I think that looks a bit better we can maybe even move up our continue button a tiny bit more because what I want to do with our menu button here is actually place this right beneath and I want to go ahead and disable our image and just have the text here it's pretty new thing to do but it's done a lot especially on Android and smartphones and stuff like that to use text as a button so let's make this wide and let's also make it a robotto thin and we can definitely scale down the front to something like 20 we want it to be pretty small let's take the entire button here and scale down as well and just place that right under our continue button so you can see you can definitely click there but it's not going to be very clear clear and we definitely draw more attention to the click or to the continue button so now for our menu here we can go ahead and change the highlighted color as well just to make that more apparent as well and we don't want to have the menu image as our Target graphic instead we want to have our text so now when we hit play we should actually see this U menu working already and you can see it has a nice fade in and all that that working and we also can hover our two buttons and click on them but nothing yet happens and our rounds survived do not change so what I thought since we both have an amount of round survived under our complete level screen and under our game over screen is maybe separate that piece of code out into a separate script that we can then put on the actual text object our rounds here in order to change it so let's go into our game over script let's double click that to open it up in visual studio and we can maybe just extract that P piece of code so visual studio is opening here there it is and let's go in here and first off we need to take the round text we also need to change this function so let's create a new script that we place on our round survive let's do it on the complete level first and let's actually go into our round text object just to make things as simple as possible and let's call this one the rounds survived and we can just double click that to open it up as well and hit reload and what we'll do here is just move in all of the necessary parts of code so let's go into our game over script let's take our rounds text and let's copy that in here let's do the same thing with our unityengine.ui we need to include that namespace or else it's not going to work awesome and let's also take our void enable and move that in here as well so right now we're just setting the text equal to the amount of rounds that we have survived and we do that instantly what I wanted to do was kind of do a count up animation to really make that feel cooler than it really is so let's save our changes to the game over menu and let's have a look at how we can do that but first inside of unity let's just make sure that we link this up properly so round survived here we'll drag in our text and we'll also do the same thing for our game over so let's find our rounds let's add the round survived and let's drag in text so now it's going to work for both without having to duplicate any code that's just a lot better so what I thought we would do here is inside of our round survive script is create a um I enumerator that means that we're creating a cotin and remember coroutines are just weird when it comes to syntax we write I numerator instead of void and then we write the name of our function and in our case we can just put something like animate text and everything else is like a normal function so what a coroutine of course allows us to do whenever we write I numerator here instead of void we basically able to pause our code execution and then continue it at a later time and that's awesome for us because we want to count up with a small pause between each iteration when we count so uh in our case what we could do is maybe keep track of what round we're currently displaying so we're going to do an integer round and it's going to start at zero and then slowly count up to with the amount of rounds that we've survived and let's also begin by setting our rounds text. text equal to0 so that we're sure that our text will start at zero and that our variable um is not only going to start at zero but we actually display that on the text object then we're going to write while round is less than and then we're going to write player stats. rounds the same way we do up here that's the amount of rounds that we've survived so as long as round is less than player stats. rounds well then we want to count upward so we're going to say round Plus+ we're going to increase that by one then we're going to display the text with uh with an increase of one so we said rounds text. text equal to round do two string so basically what this code currently does is it sets our text equal to zero and creates a variable that's equal to zero as well and we call that round then we say while round is less than three which in the first place it is we're going to increase round by one so in this case round is going to be one and we're going going to set our text equal to 1 then we're going to go through again and say round is still less than three so we're going to increase that by one again so now it's equal to two and we're going to set our text equal to two and we do that one last time because round is that uh is equal to two and that's less than three we increase it by one and it's going to set the text equal to three so that's how this basically Works however between each time that we sent our text here and that we increase our round we want to delay a tiny bit we want to wait a fraction of a second so that it's actually going to be visible and not just happen faster than we can see it so in order to do that we're going to type yield return new and then wait for seconds and we've done this before but it's just very weird syntax wise I know and this is where we input the amount of seconds that we want to wait in our case I would like to uh wait 05 seconds I think that's going to be pretty pretty decent and uh that's pretty much all we need to do except for one thing and that is if we want this looking really good we of course want to wait until our text is visible before we start counting upwards and since we kind of fade everything in at the beginning we'll have to input just a small delay at the very beginning of our script or actually we should do that before the while loop but after we set our text equal to zero so let's say yield return new waight for seconds let's just input something like 7 Seconds here so before we can play this in unity we of course need to also call the method and remember whenever we're calling a cotin we can't just say animate text and then close it instead we need to wrap that in a start Co routine call so we write start Co routine and then we input our animate text into that so if we save that we should actually see this working and remember right now we are using three in instead of the actual amount of rounds which is going to be zero in the beginning but that's fine that that will just allow us to see what's going on in fact I want to bump this up to something higher so that we can really see what it's doing so let's bump it up to something like 17 so now when we hit play we should see that everything animates on and then it counts upwards that's awesome so um that works just fine and we can now change this back to be player stats. rounds so that it will actually change to the amount of rounds that we've survived so now we want to determine what happens whenever we press one of these buttons so if we go into Unity we can have a look at exactly how we want to link this up for our game over object we also have a game over script that takes care of retrying and going to the menu so let's create a new separate script that sits on our complete level called well complete level so we need this to work the the exact same way that our game over script currently does so let's jump in there and see what we're doing we have a reference to the scene fader so that we can nicely call the Fate 2 method and as input we use the menu scene name which is just equal to main menu and we need to wrap all of that in a nice public method so let's just do that inside of here as well so let's create a public scene fader called scene fader let's also create a public string which is is going to be our menu scene name and we'll default that to main menu and we can go down here delete these two functions and instead write public void menu and then here we simply go scen fader do fate 2 and then we input the menu scene name however we also need another method and that's what we need to do whenever we want to continue so let's create a public void continue and basically what we want to do here is the exact same thing that we did in the previous video we want to bump up our maximum level reached so that we will keep proper track of what level we are currently on and also we want of course transition to the next scene so to do that let's go into our game manager that takes care of all that for us currently and let's go in here and find our public string Next Level and the public in level to unlock and we can just move that inside of our complete level instead so here we're going to have our um and I actually want to move it up I think we're going to have our next level and our level to unlock and we also need to go down to where we actually call this so we have our player pref set in level reached and we also Fade to the next level so let's just copy all of this code and I'm just going to copy the um I'm just going to remove the debug.log so we'll just cut that and paste it in here and that means that inside of our game manager and this should actually work right away inside of our game manager we can now remove the scene fader because we don't need to do any level transitioning in here however when we win the level what we want to do is display our complete level screen so we'll wait to do all of this until we press the continue button but we still have to display the continue button and the menu button and all the other stuff that we've created when we win the level and so inside of our game manager when our win level um function is called we want to display that and we'll do that the exact same way we do with the game over UI we want to create a reference a public game object not game manager game object called complete level and then UI and we simply go down here and say complete level ui. setactive and we input true we probably also want to to set game is over equal to true the same way that we do when we end the game just to make sure that our camera will stop moving and any other scripts that are currently using this uh variable to figure out if it should be active will respond accordingly so just make sure to set that to true so now we should actually be able to go into unity and Link all of this stuff up and there are a few things that we need to drag around first off under our complete level we should actually see three values appearing and there they are we have the menu scene name that's going to be the same the next level that's exactly right the level to unlock is right as well we just need to drag in the scene fader and there we go then under our game over we should see that that's just fine as well and under our game master some variables here have disappeared but instead we have the complete level UI and we just want to drag in that entire object so now now we can disable our complete level UI and this should actually be working now however I discovered a bug and that is after we did a fix when it came to counting down how many enemies were left and then transitioning to the next wave and maybe even uh transitioning to the next scene we um also kind of missed some other things that were going on that part is actually still a bit glitched and I figured out that two things were going wrong the first one is that under our enemy whenever our enemy takes damage and his health reaches zero we die so we call the die method and what happens inside of the die method is that we get some money we instantiate an effect we destroy the game object and we add some um or we subtract one from the uh enemies alive however destroying a game object is not a very immediate thing Unity sometime takes a bit of time before it destroys a game object it might even call update once more before destroying the game object and it definitely uh is going to call update on other objects sometimes before doing it so what would happen is we would have an enemy that reaches um zero on its Health dies and then right after another turret shoots it it takes some more damage it's Health Reach is zero as well and we die again and so it's just going to keep dying a few times and therefore not only do we get more money than we should we also subtract more than we should from the enemies alive so what we'll do in here is a very very simple fix we'll create a private bullan variable called is dead and we'll default that to false then when we die we said is dead equal to true and then up here we simply say that if our health is less than or equal to zero and and we are not dead well then we can go ahead and die very simple fix but it is going to uh take care of the problem also inside of our wave spawner currently whenever we uh spawn a wave and we go through spawning all the enemies we check if our wave index is equal to the amount of waves and if it is we've just won the level because there are no more waves of course we don't want to check for this just after we finish spawning we want to check for this in the update Loop in case there are no more enemies alive so under the enemies alive check we're going to go in here and check if we've just reached the end of our level and in if we have then we can go ahead and win so again just a few bug fixes there but I thought I would just clear that up in the video because there's nothing more annoying than uh bugs like this um that are sometimes hard to reproduce but just gives weird results so now we should be able to go in here hit play and let's just play through our game here so let's start by creating some laser turrets and I'm actually just going to go totally overboard with these so that we can very quickly go through the game Let's also create a couple of standard turrets and maybe some missile launchers uh down here just for fun and you should be able to take care of it so this is our next to last off and this is our final wave and you can see that when The Last Enemy is killed it's going to say level one it disables our camera because we remember to said game is over it counts up to five the amount of rounds that we survived and we have two buttons we have the menu which I'm just going to promise you works and we have the continue button which we can go ahead and click and it does not oh yeah so that's the final thing that we forgot to link up and that means the menu button actually doesn't work as well what we need to do is go into our overlay canvas complete level and then we can select our continue and in here we of course need to to reference the onclick event you guys were probably sitting there oh no he doesn't know what he's doing yes and he forgotten to and yes I had so let's just drag in our complete level let's go under the complete level script and let's select the continue function and also under our menu let's drag in our complete level going onto the complete level script and selecting the menu function cool so that should actually make everything work so let's just again quickly run through this I'm never going to get tired of playing testing this game it's just it's I think it's really fun we really nailed some of the mechanics here um of course we might need some balancing but that's a whole another topic so let's just run through it here so this is the uh second to last level and the final level is going to spawn now and when we run through and kill off our last opponent level one everything counts up awesome we can hit continue and it's going to transition directly to the next level that's pretty much it for this video I hope you liked it and I really hope you like the series in general if you do you should consider visiting my Patron page patreon is a way for you to support me with a monthly donation and in return I offer some humble rewards and in general it's what keeps this channel going and growing so yeah consider uh supporting me there it's of course totally optional and regardless of if you do I will see you in the next video thanks to all the awesome Patron supporters who donated November and a special thanks to Sultan Al Sheriff fisel marifi James Kell hound and Robert bonam become a patreon yourself at patreon.com braies
