With timestamps:

00:09 - In previous videos on 
Scratch My Blocks, 
00:12 - we’ve explored creating 
a custom block, 
00:14 - tips and tricks for success, 
00:15 - and when and why
you might want to use them.
00:18 - The My Blocks category 
of blocks
00:19 - may be used to protect 
a sequence of code
00:21 - that has been proven to work, 
00:23 - collect a sequence of code 
that will be used over and over,
00:26 - or to parse out sections of code
for easier assembly elsewhere.
00:30 - But the blocks 
we’ve created so far 
00:32 - performed the exact 
same steps each time.
00:34 - What if we want to perform
the same sequence of code 
00:37 - (execute the same procedure) 
00:39 - each time the custom block
is called in the main program?
00:42 - But each time we want 
to make small changes,
00:45 - like the text shown 
or the coordinate used 
00:48 - or adjust the value in one 
or more of these blocks.
00:51 - Let’s learn how to create 
a My Block block
00:53 - that can be customized
each time it is used.
00:57 - Let's start by setting up a 
custom block that has 
00:59 - the character speak and say 
certain text at the same time.
01:03 - You'll see the code stack
I want to use here.
01:06 - I’ll click the 
“Make a Block” 
01:07 - and give it a descriptive 
name as before,
01:09 - like “speak and say.”
01:11 - But since I want to customize 
the text my sprite will 
01:13 - speak and say each time, I'm 
also going to add an input.
01:17 - With an input in place, 
the custom block 
01:19 - will use the parameter 
(the data I provide) 
01:22 - in the input bubble
when I use the block.
01:25 - In this case, the input I'm 
choosing is “number or text.” 
01:28 - And so I remember what the 
input is, I also want to give it
01:32 - a descriptive name, 
like “what to say.”
01:35 - Back in my scripts area, I’ll 
add the desired code sequence
01:38 - under the “define” block.
01:40 - Then in place of static,
unchanging text 
01:43 - in the “speak” and “say” blocks,
01:44 - I want to use the input I 
created while creating my block.
01:48 - To get the input, 
01:49 - click on the input label 
in the “define” block
01:51 - and drag it out to place 
it in a code block.
01:54 - In this case, I want to use 
the same text in both
01:57 - the “speak” and “say” blocks
so I'll do that two times.
02:00 - Now when I use this custom block
in my main program,
02:03 - you can see the 
blank input bubble
02:04 - where I can enter the parameter,
in this case my custom text.
02:08 - Let’s run the code 
to see how it looks. 
02:10 - “Hi! I’m a dragon. 
I have hot breath.”
02:14 - I'm able to use the 
same code sequence
02:16 - and customize it 
over and over 
02:18 - without rewriting this 
code stack each time.
02:20 - And if I need to make edits
to the procedure,
02:23 - I only need to make changes
under the “define” block to 
02:25 - update everywhere the block 
is used in my main program.
02:28 - “Hi! I’m a dragon. 
I have hot breath.”
02:32 - Let's see another example 
where I want
02:34 - to customize the 
X and Y coordinate 
02:36 - every time I run 
my custom block.
02:38 - As I create my custom block,
I can add labels between inputs
02:42 - to help me remember 
what is what 
02:43 - as I use the block 
and fill in the parameters.
02:59 - Or here is one more example
03:01 - where I'm using a custom block
to help me set up a math game.
03:06 - In this case, I'm
providing the two numbers
03:08 - in my question each time 
I use the custom block.
03:11 - The program is 
using those parameters 
03:13 - in my custom block 
to ask the question,
03:16 - check the 
user's answer, 
03:17 - and provide the 
appropriate response.
03:20 - I can even set up 
multiple custom blocks 
03:22 - with or without inputs
and use them together, 
03:25 - or add a custom block 
inside another custom block.
03:28 - Be sure to check out the 
tips and tricks
03:30 - shared in the other 
“My Blocks” videos 
03:32 - for more information.
03:34 - The possibilities are endless.
What will you create?

Cleaned transcript:

In previous videos on Scratch My Blocks, we’ve explored creating a custom block, tips and tricks for success, and when and why you might want to use them. The My Blocks category of blocks may be used to protect a sequence of code that has been proven to work, collect a sequence of code that will be used over and over, or to parse out sections of code for easier assembly elsewhere. But the blocks we’ve created so far performed the exact same steps each time. What if we want to perform the same sequence of code (execute the same procedure) each time the custom block is called in the main program? But each time we want to make small changes, like the text shown or the coordinate used or adjust the value in one or more of these blocks. Let’s learn how to create a My Block block that can be customized each time it is used. Let's start by setting up a custom block that has the character speak and say certain text at the same time. You'll see the code stack I want to use here. I’ll click the “Make a Block” and give it a descriptive name as before, like “speak and say.” But since I want to customize the text my sprite will speak and say each time, I'm also going to add an input. With an input in place, the custom block will use the parameter (the data I provide) in the input bubble when I use the block. In this case, the input I'm choosing is “number or text.” And so I remember what the input is, I also want to give it a descriptive name, like “what to say.” Back in my scripts area, I’ll add the desired code sequence under the “define” block. Then in place of static, unchanging text in the “speak” and “say” blocks, I want to use the input I created while creating my block. To get the input, click on the input label in the “define” block and drag it out to place it in a code block. In this case, I want to use the same text in both the “speak” and “say” blocks so I'll do that two times. Now when I use this custom block in my main program, you can see the blank input bubble where I can enter the parameter, in this case my custom text. Let’s run the code to see how it looks. “Hi! I’m a dragon. I have hot breath.” I'm able to use the same code sequence and customize it over and over without rewriting this code stack each time. And if I need to make edits to the procedure, I only need to make changes under the “define” block to update everywhere the block is used in my main program. “Hi! I’m a dragon. I have hot breath.” Let's see another example where I want to customize the X and Y coordinate every time I run my custom block. As I create my custom block, I can add labels between inputs to help me remember what is what as I use the block and fill in the parameters. Or here is one more example where I'm using a custom block to help me set up a math game. In this case, I'm providing the two numbers in my question each time I use the custom block. The program is using those parameters in my custom block to ask the question, check the user's answer, and provide the appropriate response. I can even set up multiple custom blocks with or without inputs and use them together, or add a custom block inside another custom block. Be sure to check out the tips and tricks shared in the other “My Blocks” videos for more information. The possibilities are endless. What will you create?
