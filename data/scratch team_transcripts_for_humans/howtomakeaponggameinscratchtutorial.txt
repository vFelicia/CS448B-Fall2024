With timestamps:

00:00 - - Hi everyone, it's ZoÃ«
from the Scratch team,
00:02 - also known as Zinnea.
00:05 - Today I wanted to show you
how to make a pong game
00:08 - in Scratch.
00:09 - This is a type of game
where you have a paddle
00:12 - and you're trying to stop a certain object
00:14 - from hitting the bottom of the screen.
00:16 - And yeah, by the end of this tutorial
00:18 - you'll be able to make
your own game like this
00:21 - and where you can design
it however you want,
00:22 - and I'll show you how to add
multiple levels and more.
00:27 - Let's get started.
00:28 - So first let's pick the object
00:30 - that's going to be bouncing
around in your game.
00:33 - You can just click this button that says
00:35 - "Choose a Sprite" and click "choose."
00:39 - And you can pick any object that you want.
00:42 - It could be a heart,
00:43 - or a puffer fish,
00:44 - or a star,
00:45 - or really anything.
00:47 - You can also pick a ball.
00:48 - I'll do that.
00:49 - Oh, and let's choose a backdrop.
00:52 - You can hover over this button that says,
00:54 - "choose a backdrop" and click "choose"
00:56 - and pick absolutely anywhere
00:58 - that you would like
your game to take place.
01:00 - I think maybe I'll pick the boardwalk.
01:04 - And now let's make this object move.
01:07 - In the motion category,
01:08 - you could drag out this
block, move 10 steps,
01:11 - and by clicking on that,
01:13 - the object will move.
01:15 - Let's see what happens
01:16 - if we put this block
inside a forever loop.
01:20 - So I'll go to the control category
01:22 - and drag out a forever loop,
01:24 - and now if I put the block in here,
01:28 - the ball just goes forward,
01:30 - you know, infinitely
until it hits the wall
01:32 - and it gets stuck.
01:33 - So to make it not get stuck on the wall,
01:36 - you can go to the motion category
01:38 - and there's this block
"if on edge bounce."
01:42 - So if you put this block
in the forever loop,
01:46 - the ball when it hits the wall,
01:49 - it realizes, oh, I hit
an edge so it bounces.
01:52 - So we've got it bouncing back and forth.
01:55 - But how can we make it
bounce all over the screen
01:58 - so it's not just in this one line?
02:01 - In the motion category
02:03 - there's this block "point in direction"
02:05 - and you can use it to set the direction
02:08 - that a Sprite is pointing in.
02:11 - And right now the Sprite
is pointing in direction 90
02:15 - and that's sort of straight this way.
02:18 - Let's try putting in
another number like 45.
02:22 - So now the ball is pointed
at a 45 degree angle
02:26 - and now it's really
bouncing around everywhere.
02:29 - And I'll put a "when green
flag clicked block on top"
02:33 - so that we can make it start
by clicking the green flag.
02:36 - You can also try putting a
different number in here like 15.
02:40 - So now we've got our
object bouncing around,
02:43 - let's add a paddle.
02:44 - So you can click on
"choose a Sprite" again,
02:47 - and pick any object you want.
02:49 - It will be a little bit easier
02:51 - if that object has a
flat-ish top of some kind,
02:54 - but you can still pick anything.
02:55 - We also do have this paddle
Sprite that you can use
02:58 - and I'll use that one.
03:00 - So let's make it so that
03:02 - when the player moves
the mouse left and right,
03:06 - the paddle moves with it.
03:07 - How can we make the paddle
go to a certain position
03:11 - between the left side of the screen
03:12 - and the right side of the screen?
03:14 - Well, in Scratch, you
might already know this,
03:17 - but X, this number,
03:20 - represents how far a Sprite is
03:21 - from this side of the screen to that side.
03:24 - And if you go to the motion category
03:26 - and drag out this block, "set X,"
03:31 - you can put in a number here
03:32 - and that will control
where the Sprite goes.
03:35 - So if you set X to 100,
03:38 - the Sprite goes all the way over here.
03:40 - If you set it to zero,
03:42 - the Sprite goes right into the middle.
03:44 - And if you set it to a negative
number, like negative 100,
03:47 - the Sprite goes over here.
03:49 - Now we want the paddle
to move left and right
03:53 - when the player moves
the mouse left and right.
03:55 - And here's how we can do that.
03:57 - If you go to the sensing category,
04:00 - there's this block "mouse X"
04:03 - and this block will tell you
what is the current X position
04:07 - of the player's mouse at that moment?
04:09 - So you can drag this block
into the set X block.
04:14 - And now this will set the X of the paddle
04:19 - to be wherever the X of the mouse is.
04:22 - To show you it, let's
put it in a forever loop.
04:25 - So I'll put that inside a forever loop,
04:28 - and I'll put a "when green
flag clicked block on top"
04:32 - so that we can make it start
by clicking the green flag.
04:35 - And there you go.
04:36 - When the player moves
the mouse left and right,
04:40 - the paddle moves left and right with it
04:42 - because we're always setting
the X position of the paddle
04:47 - to be the X position of the mouse.
04:49 - Okay, nice.
04:49 - We have the object bouncing around,
04:51 - we can move the paddle
04:52 - but right now the object
04:54 - just passes right through
the paddle if we hit it.
04:57 - So let's make it actually
04:58 - so that the object bounces off the paddle.
05:01 - Here's how you can do that.
05:02 - Let's go to the control category
and drag out an "if" block
05:07 - because we want the object to
bounce if it hits the paddle.
05:11 - So how could we tell if
the object hit the paddle?
05:14 - Well, in the sensing category
05:17 - there's this block that can check
05:19 - if one Sprite is touching another Sprite.
05:22 - So we can drag this block
05:25 - and click and choose paddle from the menu.
05:29 - And now if the object
connects with the paddle,
05:32 - what do we want it to do?
05:33 - What code should we put in here?
05:36 - Well, we want it to bounce.
05:38 - And before there was that
"if on edge bounce" block
05:41 - but there's no "if on
paddle bounce block,"
05:44 - but what is bouncing?
05:46 - It's basically turning in
the opposite direction,
05:49 - and then moving in that direction.
05:51 - So here's what you can do.
05:53 - You can go to the motion category
05:55 - and pick out this "turn" block
05:58 - and have it turn 180 degrees,
06:02 - because 180 degrees is half of a circle.
06:05 - So if you turn that many degrees,
06:08 - you'll go in the opposite direction
06:09 - from where you were going.
06:11 - And then after it turns,
06:13 - let's have it move a bit in
this new direction it's going.
06:15 - So you can drag out a move block,
06:18 - maybe we'll have it move 15 steps,
06:20 - so the ball moves a little
bit away from the paddle
06:23 - after it's been bounced.
06:25 - Now let's put a green flag block
on top and see if it works.
06:31 - Okay, so I hit the ball with the paddle
06:33 - but it didn't bounce.
06:35 - And here is why it's not working.
06:39 - We need to put this if
block inside a forever loop
06:43 - so that the ball is always
checking every second.
06:46 - Did I hit the paddle,
did I hit the paddle?
06:48 - Because right now,
06:49 - if it doesn't have a
forever loop around it
06:51 - when the green flag is
clicked it checks one time,
06:54 - am I hitting the paddle right now?
06:56 - Nope, okay, I don't need
to do this code anymore.
06:58 - So let's put this inside a forever loop,
07:01 - and now there we go,
07:03 - we can actually bounce
the ball with the paddle.
07:07 - And one other little thing I'll add,
07:09 - I'm gonna put a "wait 0.5
seconds" block in here
07:12 - after it moves so that we'll have it wait
07:15 - and let it move away
from the paddle a bit.
07:17 - Also, if you want to add some randomness
07:19 - to the way it bounces,
07:21 - you can go to the operator's category
07:23 - and drag out this block, "pick random."
07:25 - And instead of having the ball
turn 180 degrees every time
07:29 - it could turn somewhere
between 170 to 190 degrees,
07:33 - and now it'll be a little different
07:35 - each time it hits the wall.
07:36 - Okay, so we can hit the
ball with the paddle,
07:39 - but nothing bad happens to us right now
07:42 - if we don't hit the ball
07:44 - and it just goes to the
bottom of the screen.
07:45 - Let's make it so that the game ends
07:48 - if the ball hits the bottom of the screen.
07:50 - Here's how you can do that.
07:52 - We have this line Sprite
in the Sprite library.
07:56 - So if you click and add
that to your project,
08:00 - you can drag it to the
bottom of the screen
08:02 - and now let's make it so that
08:05 - if the ball ever touches this line
08:08 - that's under the paddle.
08:10 - Then the game ends.
08:11 - Let's say, if the line
Sprite makes contact with
08:16 - whatever your object is,
08:17 - so I'll pick the ball from the menu,
08:20 - have it stop all.
08:22 - There's this block in the control category
08:24 - and that will stop
everything in your game.
08:27 - So let's put that in here.
08:29 - And just like before,
08:30 - we need to put a forever loop around this
08:32 - so that the line is always checking
08:34 - if it connected with the object.
08:36 - And let's make this also start
08:37 - when the green flag is clicked,
08:40 - and let's test it out.
08:41 - So, you know, if I'm playing the game
08:44 - and I don't manage to catch the ball,
08:47 - it stops the game.
08:49 - There we go, and you can
restart it to try again.
08:51 - Now, let me show you how
to add multiple levels
08:54 - to your game.
08:55 - And first to do that, let's add a score.
08:59 - We can make a variable,
09:01 - and a variable in Scratch
09:03 - just keeps track of a
certain number in your game.
09:06 - So we can name this variable score.
09:10 - And every time the player hits the ball,
09:13 - let's change the score by
one so they get a point.
09:20 - There you go, pretty nice.
09:21 - And when the green flag is clicked,
09:24 - let's reset the score back to zero
09:26 - every time you start the game again.
09:29 - Now here's how you can add another level.
09:32 - After you set the score to zero,
09:35 - you can use this block and wait until
09:40 - the score is greater than let's say five.
09:46 - So this block will make the project
09:48 - wait until this thing happens
09:50 - before it does the next
block you put under it.
09:53 - And to make it go to another level,
09:55 - let's go to the next backdrop.
09:59 - And you can add another backdrop
10:01 - to be where the second level is.
10:03 - You can have the second
level be anywhere you want.
10:05 - And now when you get five points,
10:09 - it goes to the next
backdrop to the next level.
10:12 - And also let's add a block up
here and switch the backdrop
10:17 - to the first backdrop
we want it to start at.
10:19 - So I'll switch it to boardwalk
10:22 - and that will sort of
set your beginning level.
10:25 - And yeah, there you go,
10:26 - that's how you can make a pong game.
10:28 - Now, there are so many
things you could add to this
10:31 - and also the code for this project
10:34 - is in the description below
10:35 - so you could remix that if you want to.
10:38 - Yeah, I am so excited to
see the games you make.
10:42 - I'll see you next time
10:43 - and Scratch on.
10:47 - (upbeat music)

Cleaned transcript:

Hi everyone, it's ZoÃ« from the Scratch team, also known as Zinnea. Today I wanted to show you how to make a pong game in Scratch. This is a type of game where you have a paddle and you're trying to stop a certain object from hitting the bottom of the screen. And yeah, by the end of this tutorial you'll be able to make your own game like this and where you can design it however you want, and I'll show you how to add multiple levels and more. Let's get started. So first let's pick the object that's going to be bouncing around in your game. You can just click this button that says "Choose a Sprite" and click "choose." And you can pick any object that you want. It could be a heart, or a puffer fish, or a star, or really anything. You can also pick a ball. I'll do that. Oh, and let's choose a backdrop. You can hover over this button that says, "choose a backdrop" and click "choose" and pick absolutely anywhere that you would like your game to take place. I think maybe I'll pick the boardwalk. And now let's make this object move. In the motion category, you could drag out this block, move 10 steps, and by clicking on that, the object will move. Let's see what happens if we put this block inside a forever loop. So I'll go to the control category and drag out a forever loop, and now if I put the block in here, the ball just goes forward, you know, infinitely until it hits the wall and it gets stuck. So to make it not get stuck on the wall, you can go to the motion category and there's this block "if on edge bounce." So if you put this block in the forever loop, the ball when it hits the wall, it realizes, oh, I hit an edge so it bounces. So we've got it bouncing back and forth. But how can we make it bounce all over the screen so it's not just in this one line? In the motion category there's this block "point in direction" and you can use it to set the direction that a Sprite is pointing in. And right now the Sprite is pointing in direction 90 and that's sort of straight this way. Let's try putting in another number like 45. So now the ball is pointed at a 45 degree angle and now it's really bouncing around everywhere. And I'll put a "when green flag clicked block on top" so that we can make it start by clicking the green flag. You can also try putting a different number in here like 15. So now we've got our object bouncing around, let's add a paddle. So you can click on "choose a Sprite" again, and pick any object you want. It will be a little bit easier if that object has a flatish top of some kind, but you can still pick anything. We also do have this paddle Sprite that you can use and I'll use that one. So let's make it so that when the player moves the mouse left and right, the paddle moves with it. How can we make the paddle go to a certain position between the left side of the screen and the right side of the screen? Well, in Scratch, you might already know this, but X, this number, represents how far a Sprite is from this side of the screen to that side. And if you go to the motion category and drag out this block, "set X," you can put in a number here and that will control where the Sprite goes. So if you set X to 100, the Sprite goes all the way over here. If you set it to zero, the Sprite goes right into the middle. And if you set it to a negative number, like negative 100, the Sprite goes over here. Now we want the paddle to move left and right when the player moves the mouse left and right. And here's how we can do that. If you go to the sensing category, there's this block "mouse X" and this block will tell you what is the current X position of the player's mouse at that moment? So you can drag this block into the set X block. And now this will set the X of the paddle to be wherever the X of the mouse is. To show you it, let's put it in a forever loop. So I'll put that inside a forever loop, and I'll put a "when green flag clicked block on top" so that we can make it start by clicking the green flag. And there you go. When the player moves the mouse left and right, the paddle moves left and right with it because we're always setting the X position of the paddle to be the X position of the mouse. Okay, nice. We have the object bouncing around, we can move the paddle but right now the object just passes right through the paddle if we hit it. So let's make it actually so that the object bounces off the paddle. Here's how you can do that. Let's go to the control category and drag out an "if" block because we want the object to bounce if it hits the paddle. So how could we tell if the object hit the paddle? Well, in the sensing category there's this block that can check if one Sprite is touching another Sprite. So we can drag this block and click and choose paddle from the menu. And now if the object connects with the paddle, what do we want it to do? What code should we put in here? Well, we want it to bounce. And before there was that "if on edge bounce" block but there's no "if on paddle bounce block," but what is bouncing? It's basically turning in the opposite direction, and then moving in that direction. So here's what you can do. You can go to the motion category and pick out this "turn" block and have it turn 180 degrees, because 180 degrees is half of a circle. So if you turn that many degrees, you'll go in the opposite direction from where you were going. And then after it turns, let's have it move a bit in this new direction it's going. So you can drag out a move block, maybe we'll have it move 15 steps, so the ball moves a little bit away from the paddle after it's been bounced. Now let's put a green flag block on top and see if it works. Okay, so I hit the ball with the paddle but it didn't bounce. And here is why it's not working. We need to put this if block inside a forever loop so that the ball is always checking every second. Did I hit the paddle, did I hit the paddle? Because right now, if it doesn't have a forever loop around it when the green flag is clicked it checks one time, am I hitting the paddle right now? Nope, okay, I don't need to do this code anymore. So let's put this inside a forever loop, and now there we go, we can actually bounce the ball with the paddle. And one other little thing I'll add, I'm gonna put a "wait 0.5 seconds" block in here after it moves so that we'll have it wait and let it move away from the paddle a bit. Also, if you want to add some randomness to the way it bounces, you can go to the operator's category and drag out this block, "pick random." And instead of having the ball turn 180 degrees every time it could turn somewhere between 170 to 190 degrees, and now it'll be a little different each time it hits the wall. Okay, so we can hit the ball with the paddle, but nothing bad happens to us right now if we don't hit the ball and it just goes to the bottom of the screen. Let's make it so that the game ends if the ball hits the bottom of the screen. Here's how you can do that. We have this line Sprite in the Sprite library. So if you click and add that to your project, you can drag it to the bottom of the screen and now let's make it so that if the ball ever touches this line that's under the paddle. Then the game ends. Let's say, if the line Sprite makes contact with whatever your object is, so I'll pick the ball from the menu, have it stop all. There's this block in the control category and that will stop everything in your game. So let's put that in here. And just like before, we need to put a forever loop around this so that the line is always checking if it connected with the object. And let's make this also start when the green flag is clicked, and let's test it out. So, you know, if I'm playing the game and I don't manage to catch the ball, it stops the game. There we go, and you can restart it to try again. Now, let me show you how to add multiple levels to your game. And first to do that, let's add a score. We can make a variable, and a variable in Scratch just keeps track of a certain number in your game. So we can name this variable score. And every time the player hits the ball, let's change the score by one so they get a point. There you go, pretty nice. And when the green flag is clicked, let's reset the score back to zero every time you start the game again. Now here's how you can add another level. After you set the score to zero, you can use this block and wait until the score is greater than let's say five. So this block will make the project wait until this thing happens before it does the next block you put under it. And to make it go to another level, let's go to the next backdrop. And you can add another backdrop to be where the second level is. You can have the second level be anywhere you want. And now when you get five points, it goes to the next backdrop to the next level. And also let's add a block up here and switch the backdrop to the first backdrop we want it to start at. So I'll switch it to boardwalk and that will sort of set your beginning level. And yeah, there you go, that's how you can make a pong game. Now, there are so many things you could add to this and also the code for this project is in the description below so you could remix that if you want to. Yeah, I am so excited to see the games you make. I'll see you next time and Scratch on. (upbeat music)
