hoisting variable declarations and function declarations are processed before any code is executed so declaring a variable or function anywhere in the code is equivalent to declaring it at the top this also means that a variable and functions can appear to be used before they're declared this behavior is called hoisting as it appears that the Declaration is moved to the top variable definitions are when you assign a value to a variable these are not hoisted to the top let's look at some examples if you look over here we have console.log not declared if I take out this comment and I run this you're not going to see anything in the console because this console does not show errors and this is giving an error because the this variable is not used anywhere in the program but if I take out the comment for this one consult dolog defined later so show it shows undefined because this variable has has been hoisted up see it's not declared until right here this is when it's declared but it's defined right here here since it's declared right here to the program that's the same as it being right above it um the so the the Declarations are always moved to the top so it still knows that defined later exists but it's not defined till down here so it's undefined but if I take the comment off of this code and run it you'll see at the it's going to say I am defined so then we get to this next console.log which um was already not commented out and it said defined simultaneously so where we're declaring the variable and defining it so the Declaration the VAR defined simultaneously that gets hoisted to the top but the definition which is equals I am defined is not hoisted to the top so that's why when you run this you look at the bottom it's undefined because it has been declared but has not been defined so I take out this and now we got we have undefined and then I am defined so this is the undefined this is the I am defined let's clear that and if we go to the next one so if we call this function do something else but the the function is actually not declared until after the function call let's see what happens it says I did it that comes from this function I did it so functions are also hoisted to the top so it's just like this function is at the top before you call it now down here we have something that's similar but a little different so we have a variable that's declared here but then it's assigned to a a function so the variable will be the variable declared declaration will be at the top but the assignment to the function will be after the function call so if we do that um it's not going to show anything after I did it it's actually going to give an error and the errors aren't showing in this console view but it's going to get get an uncaught type error function VAR is not not a function because function VAR has been declared but it's undefined to make things easier to read you should declare all your variables at the top of your function scope so it is clear which which scope the variables are coming from Define your variables before you need to use them but Define your functions at the bottom of your scope to keep them out of the way thanks for watching my name is Bo KS check the description for links to more information Please Subscribe and remember use your code for good