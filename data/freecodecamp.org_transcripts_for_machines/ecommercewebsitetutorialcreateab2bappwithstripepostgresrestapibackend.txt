in this course Anya Kubo will teach you how to build three internal applications that are useful for many types of businesses the applications focus on the needs of employees managers and developers Anya is great at breaking things down and makes it simple to follow along when learning new Concepts hello everyone here on free cooker camper can build three apps and three hours using postgres Stripes API as well as an emailing integration my name is Anu Kubo software developer as well as course creator online and together we are going to build three internal tool applications that one business might use we will build an application used by employees an application used by managers and an application used by developers all linked to one database so just like you might see when working for a real small to mediumsized company now hold on yeah this seems super overwhelming why don't worry I'll be taking you through everything step by step starting with an explainer and ending with three separate tutorials leaving you with the confidence to build your own internal tools as well as some new business logic so by the end of this course you will have these wonderful applications to run an ecommerce store from the back end or back office side this is essentially what the operations team at a company will see the application will display all items in our inventory that we can sell and we will be getting this data from a database that we will build using postgres the data will be for mobile phones with each item having a price image URL description and unique SQ or identifier a data management purposes the application will also allow us to manage the purchases made by customers this means we will be able to search for orders and create refunds the refunds will be done thanks to a strike API integration on top of that we will also be able to email customers with autogenerated texts and this is some custom JavaScript that we write as well as the SMTP API you will also be able to see all other employees in the company thanks to this tab right here next up we will build the managers app in terms of admins of the company so imagine that you're a manager and you need to view all the employees at your company as well as their private information you might also need to delete someone from the database or edit their details such as their title or address for example well you can do that here as well as view the end injury too to delete items from the inventory and add new items to the inventory another nice feature we are going to add is the ability to see analytics of which employee is gaining the most revenue for your company and finally we will build a b2d app or business to developer application this app will offer additional developer friendly functionality what this means is that the app will be able to facilitate orders made through API course by displaying the endpoints right here as well as a bunch of other stuff okay so a lot to get through I'm excited let's do it this course is made possible by a grant from ritual the local platform built for Developers retool has drag and drop tools and Integrations to help developers build front ends for their internal apps right on top of apis and data sources in this course we'll be using resource free plan which is available for teams up to five people okay so let's do it I've started off on the retail platform which is the platform I'm going to use in order to build these internal apps and I'm just going to go ahead and create new from App okay so let's go ahead and call that up something I'm gonna go ahead and call it Mobby as that is my fake company's name it's a mobile company we're going to be making a mobile company's internal apps and this is going to be the employee app so just go ahead and do that you can of course Call It Whatever You Wish and there we go as you can see this is just some default settings we have a table in here and we also have a query that has been set up for us in order to get going however I am going to delete this so we can start with a clean slate so just go ahead and delete yours and then I'm also going to delete this table simply by clicking on it and then pressing delete on your keyboards great so now we have a clean slate we can control which tabs we want to see up here so here I can actually see the state of my queries okay when I get them and we can also control seeing the tab down here or we can minimize it as well as this tab on here which provides us with all our inbuilt components so let's go ahead and undo this first off I'm just going to create a container that's going to hold our tables our order tables our inventory table and our employee table to show us the employee all of that data so I'm just going to go ahead and call this order management dashboard just like so I'm going to choose to align it to the left like that and then we can also choose a color for this container's header so to do that just make sure you're on the actual container itself and then on the inspect tab we can scroll down and we can give our header a background color so I'm just going to go ahead and select one of these I'm going to go with primary and if we want to change it we can just drag this just like so to make it a little bit lighter or darker that is totally up to us okay if we go lighter the color will change a bit but we can also overwrite the default text color I'm just going to keep it white as I think that looks good great so we can change the header we can change the footer if we want to add one to this we can change the Border radius the Border there's literally so so much that we can do so perhaps while I'm here I'm just going to go ahead and change the Border radius of this to have the Border color that is the same okay so let's just go with this I'm just going to drag it to be somewhere up here great and then we can of course override it to be exact as well okay so that's our first container now I'm going to use the tabbed component so just this one right here and drag it in and we're going to have different tabs as I said the first one is going to be to see all the orders so let's go ahead and call this orders we can either give an icon if we wish so I'm just going to go ahead and just give it a little crown because they are one orders so I think that is kind of cute and then for view two we're going to have the inventory so that our employees can see the inventory in our shop so inventory and again just choose an item so I'm just going to go ahead with this one right here that kind of makes sense for an inventory and the third one I'm gonna have is for employees so the employees can also see other employees that work here and here I'm just gonna find one of a person so just like so great so if I click on any of these it should open a different tab but of course we need to put the content of that tab in here so I know that the first one is going to be a table so let's go ahead and drag that in and this is the default information that is being fed to our table we're going to delete all of this and actually feed in our data from a database so just go ahead and delete that to see we can start fresh with the inventory so if you click on here I'm going to show all the products in our company however I'm going to choose to Showcase another component for you and that is list view which will show us all the items as a list so let's go ahead and search for list view so I'm just going to drag that in here like so and this is cool because we can now drag other components into here so for example if I drag an image then we'll have loads of different images this is kind of the equivalent of mapping in JavaScript okay so let's have an image I'm also going to have let's put some text for example so we can put some text here this could be a title and then we can also have some text for a description if we wish as well there's maybe some other text for you know the price of the item as well as how much we have the product so let's go out and put that here so I've done that just so you could see how this is being mapped out to all the other list items and our list items so let's go ahead and select the list view component are actually just hard coded to number three but we can of course change this dynamically too once we get our data feeding in so we'll come back to this perhaps let's also I'm just going to change this for now we can use HTML elements in here if we want so I can use the h2 tag and this could be the product name for example so that is just an example of something we can do or we can make it smaller if we want so if we choose an H3 tag that'll just be that tiny bit smaller too here we're going to have the price so we can make it bold simply by using these two stars like so so I can just put USD and just hard code this as zero to start with but we know that the price is going to go in here okay and if we don't want to do it this way we can also just put an H five this time perhaps let's see what H5 looks like Okay so let's use an H5 element for that and here we're just going to again I'm just going to use an H5 element for this just to keep it consistent on both sides visually and let's go ahead and put the product ID as well as the stock level so that is something that we will have here and I'm just gonna make that a little bit longer for us so just like that and of course this is going to be a description of the product so I'm just going to put this is a description for now wonderful so this is just for us to have an idea of what's going to go in here what kind of data let's move on the last thing we're going to do is employees and once again for this one I'm going to have a table so let's go ahead and create and then find our table component and just drag it in here at the moment as I said it has default data just hard coded into here so it's an array of objects I'm just going to delete that so you can feed our own data in later on great now the next thing I want to do is say that when we have our orders and when we select a line from the orders we want to actually view the order visually along with the product pictures so I'm just gonna for now drag in another container so just like so and I'm going to get rid of the title this time I don't want it there and we can do so easily so if we click on the container too and we can do so easily by simply hiding the Heather like sir okay great so at the moment we're just using the default names however we can change this so perhaps let's go ahead and do that I'm going to name this to management container and let's change this to display container this tabbed container I'm just going to put management tab container okay so there we go and then I'm happy with all these tabs one times two times three that makes sense and table one well this is going to be for the orders so let's go ahead and maybe change that order table the inventory list so this list view I'm gonna put invin Tori list and the employees I'm going to change this to to just make sure to click on employees that's table two let's read in table two to be employees table just so that when people look at our code that we will be writing later it will be more readable and make more sense okay so there we go we've renamed all these components so feel free to do that you of course don't have to I just wanted to show you that it is possible okay wonderful so in here when I click on a line I essentially want to be able to view the order number so let's go ahead and delete this I'm going to use an H Four Element for this this time so let's put the closing tag and I'm going to put you are viewing order number and then we're going to put the order number in here okay so whatever it is that will show up perhaps let's make this a little bit smaller while we're at it I'm going to make this an H5 and great now when we select an order I essentially want the order to show up right but what if an order has more than one product so for this we're going to have to get the list view again because we're going to map that data on to the list view so just go ahead and drop that in here drop that in the container just like so and in here maybe let's rename this to something more readable I'm going to go ahead and rename this to order list View and in here I'm just going to drag in the image of what the order is so just like that I'm just going to make it bigger and then I'm also going to drop in some text because I want to display what this actually is so I'm going to make this an H 3 element this time and I'm just going to show the product name and then I'm also going to just drop in the description okay just so it's really visible to the employee this is a description cool and then we should probably also have the product ID as well so let's go ahead and drop that in here so product ID and we're going to put that right there wonderful so I think this is looking good we can space this out if we want so I can put a divider if I wish just to make it really obvious that you know the next item has started great so this is what it looks like now we can also actually hard code the height of this display container so I would do so by adding the height as being fixed and now if I just go ahead and change the height of this great and now I could just scroll through them with the height of this component being fixed rather than being Dynamic based on how many items we have in the list view that expands the components okay let's carry on before we get going to creating the refunds and notification section that I want to have here I think let's start with actually importing the data that we can work with and to do this I've actually gone ahead and created this file for you so you can literally copy it and drop it into your app okay so for the purposes of this tutorial we are going to be using a manage database on retour however of course in a real life situation you'd probably want to hook this up to actual real database I've gone ahead and written some code to create a table for the customer so each customer is going to be represented by a customer ID or contact name title address where they live and a way to contact them I've also done one for the employee which is kind of like the customer however it has more information as each employee at my company has employee ID a fast name last name title we also store that buff that you know just for fun if we want to send them some value notifications that higher date as well as where they live and how to contact them as well as their company photo next we have the product so all the products in our inventory which we have given an ID a product name a description how much they cost and how many units of these we have in stock as well as a photo of the product next we have the actual order so when a customer makes an order we actually use the employee ID that we assign to our employee to find out which employee is in charge of that order or took the order the customer ID that we made earlier to find out which customer made this order and then we also have the order date the required date by which they need the order by the ship date the ship address as well as the charge ID that is going to come from stripe so that we can make the refunds if we want okay and lastly we just have the order detail as this is the sales order but we don't actually know how many items are in the order or anything so here we have the product ID the unit price and how many of that product we got as well as if there was a discount applied so this is just of course sample data for this tutorial please feel free to use it it's nothing serious this is just for tutorial purposes it's a fake database that I have made okay so every order can have as many order details as I want next up we go about inserting data into each of these tables so this is how you would do it you would use the insert into keyword you'd select the table you then pick out all the columns essentially that you want to insert data into and then you do it by using the values keyword and inserting the data in the same order as the above okay so I did this for the employees table the products table the customer table the sales order table as well as the order detail table now I won't be going into how to write these SQL queries as this is not an SQL tutorial okay if you want to check that out there's plenty of resources on the free codecam channel for you to have a look at so please go right ahead okay so all I'm going to ask you to do as I said is just copy all of this like I'm doing right now to copy it and then back in here let's get up the bottom Tab and I want you to write a new resource query this time it's going to be to the manage database so go ahead and search for the manage database you should have one in your retour and just go ahead and paste it all in like so and hit save and run okay so I'm just going to make this a little bit bigger for you and great you should see a popup that says query one has ran successfully and you will see the related tables in here so those are all the tables in your manage database I have a few more as I've added some tables to a different tutorial but as long as you have these that should be fine that should have worked so all your tables should be in here along with all the columns that essentially make them up okay so that's quite useful for us let's just go ahead and rename this to add data so it's very easy for us to know which query is for doing which thing so great we've written our query to our data and We've ran it so we've added it to the manage database this is good now that we've actually added our data we need to retrieve that data we need to get data and I want to do it by writing another query so new resource query this time I'm going to call this get let's get the orders as that is the first table that we created so get orders like so or we can call it get sales orders to be more precise as that is what our table is called so there we go I've just chosen to call it the same as the table you don't have to but I've done it because we're going to get that table so make sure you're on the manage DB resource and all I'm going to do is write select all from so this is SQL sales order right because that was what our table was called so if I now save this and run it you will see the table show up right here so those are all our orders cool so that is how you would get a table from a database now to actually use this I would select the table that I want to populate with this data in this case it's the order table and in here you're going to use this a lot we're going to get two Kylie braces so this is something associated with retool these two Kylie braces and we're gonna get sales order data so we're simply getting whatever the query is called which is get sales orders and we're getting the data associated with it and there we go you've now populated this table with all our orders wonderful another thing that's handy if you don't know the structure of your data is to use this Explorer Tab and look at the state so as you will see here you will see get sales orders and if I open this up you'll see data which is an object and then you'll see all the columns that we can use as arrays cool so I'm just going to minimize that again now another cool thing that we can do for this table yes of course we can customize it so I can change the colors if I wish so I can go ahead and make the header background blue perhaps you know to really match the vibe of this overall component or what I can also do which is probably more useful instead of using the table names that come with our database we can actually visually change them to the user so we're not going to be changing the database at all we're just changing them visually to our users okay so I can change this to order ID so it doesn't have to be just all one word so just like so and let's go ahead and do the same for the customer ID so customer ID the employee ID employee ID so once again we are not changing anything in the database we're simply changing what it looks like on this UI it's also have the required date D shift date the shipped dress we can just have a dress really region postal code country and we don't really want the charge ID to be visible so I can go ahead and hide it like so that is an option for us too so I've just gone ahead and hidden it so now it won't be visible in our table anymore if I scroll through okay it finishes that country great so this is looking good I'm just going to go ahead and do the same thing for the employees tables so this is a bit of repetition for you what we did before is create a new resource query let's go ahead and call this get employees and then I'm going to select all from the table employee so just like so and hit save and run which will give me back all my employees when this stops running and then I'm simply going to select the employees table and under data I'm going to use the two curly braces get the employees ID so whatever we called our query and get the data from it so here's a preview and here we see that data wonderful so once again we can choose to hide as much as we want as this is the employee tab I'm going to hide these sensitive information as well as the photo so I'm going to hide this I'm going to hide where they live so just like that as well as a dress and the birthday but I am going to keep that higher date a phone number for contact as well as their first name and employee ID wonderful so that we go and of course we can change these dynamically if we wish to so I'm also gonna while I'm here just change this to be employee ID last name first name a title so we have CEO vice president sales manager that hired date and of course that phone number for contacting them if we need great so this is looking wonderful lastly I'm just going to do the inventory so once again let's make a new resource query I'm going to call this get inventory just like that and then we're going to select all from you guessed it product this time so we're going to get all the products save and run great so now I'm going to highlight the list view this time so the inventory list and the number of rows we're going to change this dynamically so get up your cardi braces use the get inventory data and then I'm going to select something that I want to pin my length to I think that should be the product ID as that is always going to be unique or should be unique and I'm going to get the length of this array okay great so there we have it as we've only got three items in our inventory that has been mapped out to three items in my inventory list okay great so now how do I feed data into this imagery list well what I would do is I would go ahead and select one of these so here is the image and I would go ahead and get the curly braces up again use the query get inventory data get the photo and we're going to Loop over each photo in our array by putting in an i okay so there we go we've looped over everything in our array so there's our three items and we're going to do the same for the product name so just in between the H3 tags that we added I'm going to use the two Kylie braces I'm going to use the get inventory data query so they're getting into a query to get the data and then I'm going to get the product name and loop over everything in my array and the price as well so I'm just going to go ahead and use the two Kylie braces here you see the space between USD the USD get inventory query to get the data that comes back and I'm going to get the unit price and once again open up an array and use the I to Loop over everything in our array do the same for the description so two curly braces get inventory query get the data from it get the product description open up our two brackets and pass through an eye so we Loop over everything great and then finally for the product ID well it's the same thing two curly braces get inventory data then we get the product ID and we Loop over by passing through an i into an array and finally get inventory data this time it's the units in stock and once again we pass through an eye great so this is looking really wonderful I'm happy with this perhaps we can just move this down a little bit so it's a bit more centered just like so as I think that might look a little bit better for the next products in line wonderful okay so this is looking good let's move on so under orders what I said is that if I select a row I actually want to show the orders that are associated with the order ID so let's go ahead and do that next so what I'm going to do is just select this title instead of having XX I'm going to go into this table which is called order table so just type out order table like so and this time we're going to get these selected row so just find selected Row from the drop down select did row we're going to get the data order ID okay so now whatever row we select this will change as you can see it's changing as I select a different right wonderful and now using the same approach we did for the inventory we're going to Loop over all of these list items in order to show all the products associated with this order number so to do this we're going to have to write another query this time to get one product so the resource query I'm going to call get products so just one product and the SQL I need to write for this it's going to be select all from the product table where the product i d equals any and then we're going to pass through the product ID that's associated with the order and we know we can get that data from the order detail table so let's go ahead and write a query for that so let's save this as it is this won't work at the moment but let's make a new query this is going to be called get sales order detail I'm going to do select all from order detail where the order ID equals and I'm going to enter this table called order table I'm going to get this selected row data order ID so just get the order ID great so save this and run it so if we select on this one right here you will see that the order associated with it has the product ID of three you'll see its price we'll see how many of them are ordered and we'll see the discount price and if I select a different row you will see that change and the order details of this order will change okay so now we're going to use this query in order to find out what product IDs are associated with which order ID and so to do this I'm just going to use get sales order detail data product ID okay and just make sure that this is in parenthesis and save and run it and great so that's all working well we've now linked up the actual product table to the sales order table so now I can just click on here and go into the get product query so this one that we wrote right here to get this photo URL so get product data dot photo we're going to just Loop over that by passing through and I just like so okay great so now let's go ahead and just try click on any one of these rows and you will see the order number here changes as well as the picture as this Samsung Galaxy is associated with this order but you wouldn't know that from looking at this line it's only thanks to us getting the product and searching for the product by the order ID that we're able to get all of this extra information so now I can use this extra information to finish this out so I'm going to go into the get product query again and get its data and this time get the product name as well as the description so get product data product description as well as the product ID okay so I'm just going to get product data product ID and loop over like so great and perhaps align it to the right now one thing what I have to do is we've obviously hard coded the length of this list so go ahead and click on the list order list View and we're just going to change this to be however long the get sales order detail data product ID length okay so in this case it will be one as only one product is associated with this order but if I go ahead and click on order 10 2 5 1 you will see there are two items associated with this order okay wonderful so this is looking great okay so I think what it is done for this section I'm just actually going to hard code the height of this as well so the order table I want it to be a fixed height so that is fixed to around about there which means that I also want to just change the height of this just so they're both kind of equal when we load the app to get started okay I just think visually that's a bit better but once again that is totally up to you that is a choice that you can make next up I want to focus on getting refunds and notifications about this refunds by using the strike API and the SMTP API in order to send emails so let's do it I'm just going to drag in the container like so so here we go and this is going to be for refunds notifications okay so this time I'm just going to change the header to be a kind of reddish color so just go ahead and select the container I'm going to rename this to refund container and then let's make the header background I'm going to make it like a red so maybe something around here is quite nice and I'm going to hard code the text to be white so that doesn't give us the default color that it wants I'm also going to actually add a image here to represent the Mobi company so this is just the kind of logo that I made feel free to not use it but I'm going to show you that you can also upload pictures into here so to do that just go ahead and drag in an image like so so that's what I have done and there we go so there is my company logo that I have made it's nothing special but I think for this tutorial it will do I'm just going to make this a little bit smaller and move it right back up here where it was before so now the refund container well as we know we're going to have to create refunds right and to do this I actually want to Auto populate a tab for the employee to see exactly what their refunding so it's really easy to read for them when they're on the phone perhaps and when they're composing emails so for this I'm going to put in another container just like so I'm not going to have a header for this so I'm just going to go ahead and hide the header so just like that and in here what I'm just going to call this text display container just like that and it's going to hold the text that we need to see so I think the employee should have something that says create refund for and then we're gonna have to get the customer associated with this order number right so just like we did with the product we're going to use that order number to fetch data from another table which is the customer table I'm going to create a new query I'm going to call this get customer and then we're going to select all from the table customer where the cost ID equals the table so the order tables sorry because that's what we call this customer ID so actually we can just use the custom ID we don't need to use the order number so that makes our life easier so let's get the order table selected row data cost ID okay so now let's save and run this and wonderful so there we go if we change the selected row it will get us a different customer based on the customer ID so in here now I'm going to use that I'm going to use the query we wrote called get customer data and get the contact name great I'm just going to add an S order just like so and then in here well we can also use markdown if we wish so I can choose to use markdown for this just to show you a different way of doing things and I'm also going to use an emotic con which is a cute little arrow okay so this is just some styling that I think is a bit fun great and this text well I want the text to be dark so let's just go ahead and change that okay so now let's move that out so create reason for Alan Michael's order or you can change the name that was totally up to us we just have to change the selected row and this query will automatically run okay because we're changing the selected run next up I'm just gonna essentially give instructions to an employee on what to do so I'm just going to put in some text I'm just going to go ahead and put in some text under here like so and this text is going to say so I'm just going to use these as it's easy for me uh I'm gonna have a one which is to check order details so you're telling the employee to check the order details and we can actually show them so this is for order number and we're going to go enter the order table selected row data and get the order ID so it's really obvious which order they're looking at and the text I'm just going to do this dark color again then we're going to have made on and then we're going to use the date that this order was made on so we're going to go into the order table selected row order date however it will show it in this format as a default we're going to pass it through into the new day object and change it to a date string so I'm going to do so by getting the new date JavaScript object and passing through the whole thing so the order date and then using the method of two date string on it okay so there we go that's a much more readable format for us and let's just go ahead and put a dot now I can use a space I can space this out Simply by adding this snippet of code so if you feel the need to do that just go ahead and add that okay great we can do the same here now the other piece of text that I want to add is the when the order was shipped so I'm going to put this order was shipped on V and once again I'm actually just going to get the new date objects as I now know I need to use it in order to change the format of the date and I'm going to go into the order table I'm going to get this selected row I'm going to get that data and I'm going to get the ship date so shipped date so there we go and I'm going to use the method of two date string on it in order to change it to a readable format without the time so that's when the order was shipped to and then we're going to put the address so we're going to once again go into the order table selectory data and get the ship address however it was spelled on the original database okay not what we changed it to here great so that's where it was shipped to and then we're going to also have the ship City so once again the order table selected row data shipped City and then as well as the country so just go ahead and add the country too okay so order table select little data ship country wonderful so I think this is looking really good the next thing I want to do is actually show the items associated with the order again just in a smaller way so once again we're going to use the list View so let's just drag and drop that in here let's call this order mini list here and this time I think we'll just show the picture but a really small picture in here so I'm just going to drag in an image like so as well as some text for the title I'm also going to have the unit price and the quantity as well so I'm just going to change that to be an individual text on right here okay so not as good to looping I'm just going to use the get product query again so I'm going to get product data photo open up I and loop and do the same for the title so get product data product name and loop and I'm just going to change the text to be a darker color so we can read it as perhaps also make this in bold so I'm just going to put it in these two stars and then we're gonna get the product so once again use the Stars get product data unit price and loop just finish that off change the text to be darker and I'm just going to put unit price in front of this so unit price just like so and then we're also going to have the quantity so maybe we move that down just so we can put this on one line like this and then the quantity we'll put here or perhaps if we want let's actually make this smaller so I don't really think it needs to be that big which means we can move all of these up to two I think that makes more sense for what we are really building here okay it's just a tiny little checkup for our employees so they don't have to go looking through all the data okay and this time we're actually going to get the sales order so get sales order detail data quantity to find out how much of each product was bought okay so let's just go ahead and put quantity here quantity and then let's change the color of the text great so this is looking wonderful and of course we want the order mini list view to change dynamically based on the get sales order detail data product ID length great so now if we click on this order which I know has two products we should get the two products associated with it on a phone next up we're going to select the refund type so for this I'm actually going to do a select drop down so I'm just going to drag this in here this is a new component that we haven't used yet and it's going to allow us to select something from a drop down that we can use in order to populate our email okay so there we go I'm going to position the label to be at the top I'm going to change the default text to be a dark color and now we can also change the label text itself so here's the label and this is going to say two select refund type okay and now we're going to put in the options for this so I can choose to do this manually or I can just choose to do the mapped version and I'm going to put an array that has the options of late in core correct and unsatisfactory and now for the label well let's just go ahead and get up our Kylie braces open up an array and we're going to actually show what the labels of these options are the first one is going to say order was late by over 10. days then the second one is going to say incorrect damaged order and the third one is going to say unsatisf Factory and we're gonna Loop I'm also going to choose to have the default option as being late okay and once again I'm just going to change the text of this to be a dark color so wonderful and we also need to change some other texts it would seem like highlighted foreground just make it dark so there we go so now if we select one it should show up here and this is looking good and then we can select other ones too and of course we can change this as much as we want okay great let's move on the next thing I want to put in is the refund amount and I'm going to do so with a number input this time so just go ahead and select one of these we can put a number we can actually put currency so perhaps let's go ahead and put currency as I feel that makes more sense so just drag that in and this should say amount to be refunded so amount to refund and then people can just select the amount in U.S dollars okay so feel free to change the currency if you wish I'm happy working in American dollars for this project next I'm just going to do a little quick recap so a little summary so I'm just going to put refund summary like so okay and then I'm just going to under this refund summary just display the actual refund amount to refund amount and then whatever the number input or the currency input value is I want to just display here as a quick summary and let's put that in bold and I'm just going to put US dollars okay so there we go we can even have US dollars in here to make that bold too great and once we've kind of checked all this I just want to have a button so I'm going to add in a button to actually commit the refund so let the refund happen so let's just go ahead and put a button in here and put in a button let's call this refund and I'm just going to make it green okay so let me make it green perhaps let's make it a little bit lighter too so there we have our refund button and let's also change the text to be white wonderful so I feel this is done I'm quite happy with this okay great now let's use this information to compose an email so we can send an email as well as well as come at the refund and we'll be using the stripe API in order to hook this up to the refund button to actually make that refund happen back onto the charge but first like I said let's do the email so let's put on another container I'm just going to work in a container in here once again I'm just going to get rid of the heading so we don't need to show the header for this I'm going to search for a component called text input so I'm just going to use the text input folders just like so change the label to be at the top so I'm just going to change the position to be top and I'm just going to essentially change the label to be three compose email as step number three for the employee okay and let's also go ahead and put another input for the actual email so it's going to be a text input this time just going to whack that in here and this is just going to say email and we're gonna have a placeholder that just says info at test.com okay great so there we go I want to change the color of this container in fact this should probably be called email container so email can container and the color of this so I'm just going to make a really light red so just like so wonderful and now I don't want this to be Auto I want it to be fixed I'm just going to drag it so it's always the same length just like that okay let's move a little bit bigger and that means I can move this down to the bottom and I'm also going to have a big button so let's go ahead and create and add a button here and this button is going to span all the way here I'm going to change the text to send email and I'm going to change this to be red okay so all of this section is kind of red and in here well I'm actually going to write a JavaScript transformer for the email text because we're gonna have to write a few things in here so I'm going to change this to the email text and what I'm going to do is I'm going to define a message that we're going to return okay so my message is going to be I'm just going to use some back ticks for this dear and then we're going to get the get customer data contacts name for comma I am sorry that your order was and then we're gonna have a reason from our selected option so whatever we select so I'm going to actually get it from the select I'm going to call this the refund select input so now we can actually grab the refund select input and get it to Value so we can display it making sure that this is actually in three curly braces this time okay so just make sure that looks like that otherwise it won't get picked up properly and then let's put please rest assured that your refund of and then once again on a kind of basis double quality braces now so it should be three in total and we're gonna get the refund amount of the number input so currency one value US Dollars has been also authorized and shall be with you in one to five working days okay and then let's put have a wonderful day great so that is our full message and now let's go ahead and just return the message okay so that's what will be returned when we use the email text Transformer great so I think we actually need to space this out from the Kali braces like so so just like touch okay so now it's being picked up so let's save this and now all I'm going to do is in here under the default text I'm going to get the email text value great perhaps the text area is actually better for this so let's go ahead and do that and once again get the email text value okay so I think maybe that's a bit better so just go ahead and delete that text input and I'm also going to hard code Auto growth with content so I'm going to change this to be 14 just so it's a little bit bigger and just move it up here and I'll change this label to be three compost email wonderful so this is looking so so much better and just align that email to go to the right okay so that is looking good we could of course mess around with this as much as we want that part is totally up to us and our house let's just make that water great now let's get to hooking this up so the first thing I'm going to do is just go to stripe so if you haven't used stripe before please go ahead and sign up to the developer portal I'm just going to go ahead and sign in so just go ahead and sign in like that this is what it should look like once you've signed up and you are returning back as a user and under here so here's the URL that you should be able to see and the test data tab is where we're going to be doing our magic so under payments is where you can actually create a new payment and you will do so by selecting this here so for example I can make a fake payment of 340 pounds and then we can actually just go ahead and put in some test card information so if you go ahead and search for stripe test cards then this should come up with this documentation right here and we can essentially use this fake card number so copy that and then paste it in here and then just for anything in the future so I'm going to put 20 25 just like so and put one two three okay so the future will be 25. so oops we need a description so mobile phone as well as the ZIP code and click submit okay great and then if you view the details so just go ahead and view the detail you will see a fake charge ID so the ID that we need is this one right here this is the charge ID it starts with ch and if you look in here I've actually given the same charge ID to all of my sales orders okay so this charge ID is what we're going to be using to make a refund so hopefully you understand how I got that charge ID now so I'm just going to go ahead and go back to here and I'm going to create a new resource query and I'm just going to go ahead and create a new resource I'm just going to go back in here create new resource and look for stripe now I'm just going to call this Moby app stripe and then the API Key Well to get this we're going to have to find our API key right so let's go ahead and shut this down I'm going to search for API developer API keys and here is my key so this is the one I'm going to need I'm going to copy this one so copy it please go ahead and make your own of course and I am just going to under here paste that in and test the connection and connection successful I'm going to create a resource okay so great I'm going to go back to resources go back to my app hit refresh as we're going to need to load that new resource in here create a new resource query search for the Mobi app stripe resource and under here we're going to search for an operation that is going to be a post to a refund so I'm just going to search for that in here it's a post request I'm going to post a refund so that should probably be down here just make sure to find the correct one as there is a lot in here is this poster charges getting the charge refund okay and the charge well it's going to be we're going to go into the order table I'm going to get the selected row data and the charge ID okay so at the moment as it says demo all our charge IDs are the same but each one of these rules should really have a different charge ID in the real life and then we're gonna have to send through the amount we want to refund so we're going to use the currency one value so this components of value okay and we're just going to save that and I'm just going to rename this to post refund and to on success so we want to know that this works I'm going to add just a confetti okay so so confetti will be thrown in the air if this works so let's go ahead and try this out I'm just going to go ahead and select an order so the first one this is for this order and as you can see there's one item of quantity one and then the unit price so I'm just going to go ahead and refund let's say 100 from it and then of course we need to link this up to the query that we wrote so I'm just going to go ahead and on the button I'm going to add an event handler which is to control the query post refund so now let's go ahead and click that button and tada that has worked as the confetti has run and if you look down here you will see amazing so this is the response that we get let's go ahead and try another one so I'm just going to select perhaps this line so there we go we have the unit price of course this unit price does not correlate to the charge ID because we just put on a random number however I'm just showing you how this works and if I was to refund fifty dollars this time to whatever the charge ID has on it and refund Tada that has worked and you will see that a refund has been made to the same charge ID essentially like I said this is not realistic I'm using test data you will see that that has worked okay that is actually the total amount refunded now because I refunded 100 earlier I just 350 and I refunded 100 earlier when I was testing this out as well so that is the total amount refunded and that was the original amount that we had great so that is not working let's carry on so we've hooked this up to the stripe API next I want to hook this up to actually sending an email so let's do that next I'm just going to minimize all of this right now okay and we don't need this anymore either okay so to do this we're going to get another new resource this time I'm going to use the Gmail resource so let's go ahead and actually go in here and create that resource specifically for this project I'm going to create a new resource and then we're going to search for the SMTP resource let's call this Mobi mailing SMTP the host for this is going to be SMTP gmail.com the port is 465 and then I'm just going to use Anya at freecodecamp.org okay so this is the email that it's going to be sent out from essentially and that I'm gonna have to put in my password okay so just go ahead and do that too okay and just test the connection you might get some errors even though you're putting your correct password so just check your email and just confirm it with you and then just go ahead and allow access to less secure apps okay so that has now been done which means that if we go back in here now and try that again so test connection that should work okay so great that's how you would fix that let's go ahead and just remove all these and make sure to perhaps maybe if you want and of course if you don't feel safe doing it then you don't have to there are other options that you can use for mailing okay great so that has our work let's go back here and refresh this page so just reload it in order to get that latest resource and then on this query 10 I'm going to now use the movie mailing SMTP the two email well that's just going to be the text input too so let's get text input to Value uh the subject is going to be regarding order and then let's get the order table selected real data order ID and then the body is just going to be the text area one so let's get text area one value okay and once again on success let's just get up some confetti wonderful so that is good and let's save this as something so save that and let's rename this to send email and on click of this button we're going to trigger it so add an event handler send email and great so now let's test it out I'm just going to send this to Anya at three codecamp.org and send the email and wonderful that seems to have worked let's go check it out great there we go so that is working we've done everything that we needed to do for this employee app this is the final product I hope you've enjoyed coding this along with me and I hope you're ready for the second part of this course where we're going to learn how to make an admin panel where we not only read data but we also add data delete data and edit data too so let's do it okay so let's start building our admin app or in other words our Mobi Manager application as I've chosen to call it so let's go ahead and create that new app I'm going to choose to call it Moby Manager application just like so and go ahead and create that app so once again you'll be given this boilerplate default setup and I'm just going to delete this and I'm going to delete the query that we have here okay great so now that we have done that I want to have two main components essentially one is for viewing our employees as a list as well as deleting employees or editing their details if we wish and on the right I'm gonna have an inventory section where we can see all of our inventory as well as delete lines or add new lines okay so this is going to be a great example of how to add data delete data and edit data from our database so let's do it we of course going to be using the exact same database that the employee database is using as is frequently seen in companies so first off I'm just going to create a container so there we go that is our container and let's go ahead and call this employees just like so and I'm just gonna make the header of this container a different color so I'm just going to select this kind of reddish color right here and I'm just going to make the text White okay so there we go and now I'm going to drop in another container this time this is going to be for the inventory so let's go ahead and change this to say in then Tori making sure to spell it correctly and I'm going to change the header of this to also be a different color let's go with the greenish color this time that I've kind of preselected so I like this green right here okay and it's also make the font White wonderful so we did say that we want a list view here so let's go ahead and select the list view container just like so and just drop it in so I've dropped that in here we can of course rename these if we wish so let's go ahead and rename this to employee container and then we're gonna have this as inventory container but of course you don't have to that is just my choice now on the list view I'm going to actually rename this to view Glory list View okay and in here I'm just gonna have an image of the employee as well as their name so we're going to have their name here let's just go ahead and make this an H3 element I think that should be fine with their name and then let's change the text of this to be a dark color just like so I'm just going to make it this dark grayish I'm also going to put in an icon so this icon is going to be to delete this employee so let's go ahead and find a delete icon so this one right here and then change the color of it to be once again a dark color and I'm just going to make this a lot smaller as well so there we go and I've got the name here we can make this as small as we wish okay so great and then let's have some text which is going to be for whatever the title is so we can have something like titled here and of course let's change the text again to a darker color just make it the same and then we've got the title another thing we can have is the employee ID so let's go ahead and change this to the employee ID and I'm just going to put this on the other side so I'm just going to drag it in here like so then we're gonna have the address so let's just change this address and make this in bold and then first line of the address and whatever really address related things we have in here so I think it was City we can of course change these uh then we have the region we also have the country and postcode so let's go ahead and mount that country postal code okay and perhapses also have a divider because why not just under the title just to make it a little bit more visually appealing as we want to space out the address from the title and then I'm also going to have a button here so that we can edit I'm gonna have this as edit and make it red so you can edit the improve you okay great so this is looking good I like the look of that now let's go ahead and get our data so I'm going to create a new resource query and this is going to be to get all the employees okay so this is going to be to our managed database just like so I'm going to select pull from employee and save and one okay great which means we can now populate this list with that so I'm actually going to get the employee data let's go by the employee ID and then length Okay as that should be unique so you've got three employees that looks good and now the picture here I'm going to once again go into get employee data get the photo and then Loop by passing through an eye and do the same for the name so once again get employee data we're going to get the first name this time and loop and then I'm just going to go to space and get the employee data last name to and again so actually we need to put the first one in Cali braces and finish that off and then open up our cardio braces again and then just put a space wonderful the title well we're just going to go into get employee data once more get the title and loop and then the employee ID let's go into the employee data get the amp ID and move okay so you're getting the juice now the first line of the address get employee data and then this time it's going to be the address and loop space that out the city is once again get employee's data City and loop this time the region so get employee data region and loop country you can of course display as much information or as little as you want that's part is totally up to you you have all the data to your disposal and finding the postal code so get employee data postal code and yep okay now I'm actually going to put in another divider so I can put the contact detail and the birthday of this employee because this is admin level stuff right we didn't want every employee to see it but as an admin you are privy to this information so I'm simply going to put the phone number so let's put phone and then go into the get employee data the phone and loop let's change this text as well to be a darker color making sure that's the same as the others and I'm just going to copy paste this and replace the second line with hired and then we're going to get into the higher date and then we probably want to pass this through the new day object so let's go ahead and do that and if our new day object and then get the method of two date string and just call it okay so then we've got the higher date and then let's have the and now let's have the birth date too so birthday and then this time we're gonna get the birth date great so that is our employees now that we have done that let's get you writing our query for updating an employee but to do that I'm actually going to show you how to make a modal so I'm just going to actually minimize this and instead of having a button I actually want to change this to be a Moodle so a modal popup so just go ahead and drag that in here like so it looks the same but it has different functionality so let's just change this to edit and I'm just going to make it a little bit smaller and once again just change the color to the red okay but this time when we click on this it will open up a module so let's go ahead and put what we want in this module and that is some text to let us know what this model is all about so I'm going to change this to say edit employee just like so and of course change this to be a darker color now let's have a text input because we're going to have text inputs we're also going to populate these text inputs with the data from this employee as a default okay so once again just change the text color and place it with the one we're using so our first label well this is just going to be the first name of the employee and as a default value we're going to go into the get employees data and get the first name and just Loop over it okay so that was really easy and the text is just going to be this dark of text so just like so so now let's copy and paste this and this time this is going to say last name so let's go up here I'm just going to change the state last name and the default text is going to be the last name okay so hopefully you'll get what we're doing here we're going to do the same for the title so title and then we're gonna have the title of the employee showing up here but then I'm gonna have the birth date so let's go ahead and put birth date this time I'm going to leave it like so therefore ever because I think it's quite important to differentiate between the two so there's our birth date and how it converts to that when we view on here but when we enter it it looks like this this is going to be the higher date so let's go ahead and pick out the higher date this time and the birth date so higher date from our database next we're going to have the address so I'm going to put a dress and then I'm going to pick out the address next we're going to have the city let's have the city pick out the city and then we're gonna have the region so pick out the region and have a label as region and then we're going to have a postal code so let's have a personal code and just change this Crystal go to the video that's what we want then we're just gonna have country and I'm just going to change the same country and then the phone number so phone let's change this to phone and then a URL so of course you probably would have a photo database for this but for the sake of this tutorial I'm just going to link to photos by URLs that are hosted online okay so that's what I've done here I've essentially got them from unsplash so I'm just going to get the photo this is going to say photo and lastly I'm just going to have the employee ID so this should be a number so let's go ahead and put number input so number input just like so stretch this out let's change the text so these contrast text here will change to be the same color as all the others and do it for the actual text too so there we go and I'm just going to change it to say employee ID so employee ID great and now I'm going to get a button so just put that in here like so and this is to update so put that in and change this to update and on the click of this we want to run a query right and that is to edit or update an employee so let's call this update employee and for this we're going to do it to the manage database and SQL that we're going to write for this is so we're gonna updates employee set first name equals and then we're gonna get now to find the text input it's text input one so that's what we're going to do we're going to get text text inputs one value then we're going to have to set last name and that is text input two so let's get text input choose value then we have to get the title and you guessed it that is going to be text input 3 and there it is test info 3's value then we get the birth date so birth date making sure that it's the correct one so text input value for the higher date which is text input 5 value the address which is six so let's find text input six value the city which is text input seven so let's go ahead and find that one the region which is text input H value the postal code which is nine so let's find that one the country just 10 so let's find text input 10 and we've got the phone number which is 11. so text input value 11. nearly that photos next photo text input value 12 this time then we have the employee ID which is number input one so amp ID which is number input value one great and we search for it by the employee ID which is why we need to put where and ID equals and then we're going to get the employee but based off this right here so we could go into the get employees and loop I think a better way to do this would be to I'm just going to save this minimize that is to get this employee ID so in fact I'm going to split this out and I'm going to make another so I'm just gonna duplicate this and I'm just going to have the employee ID in its own text so just like so and move that here and I'm just going to have the label as a separate one okay so that's what I've done I'm going to move this up here now space that back up here and just select all of these and move them up a little bit too so now I can grab text 14 14 value and search for the employee to update by that okay so now I'm going to save and what I'm going to do is actually now add an event handled to this but on the success of this I'm just going to add some confetti so that we know this has worked so save that and click on the button and I'll add a Transformer to an event handler and the query for this is going to be to update the employee so great so now let's check it out I'm just going to change Sarah's name to have an H at the end update and great so that has worked and next we need to actually refetch that data so on success we send some confetti and we also rerun the query to get employees okay so we're refreshing that data we're getting it again just run that and great so that has now been updated and Sarah Davis has actually dropped to the end okay wonderful so this is all looking great I'm really happy with this perhaps you can even give it some spacing in between each of these so I'm just going to add some spaces just like so you can do so or you can choose not to that part is totally up to you okay great so now to delete an employee so for this I'm actually going to write another query and that is going to be to delete employee just like so and to delete the employee I'm going to use the delete keyword from the employee database where the amp ID equals the text 14 value so once again we're just using the value of this text right here okay so that's all I'm going to do and unsuccess once again I'm just going to add some confetti so you know this works and we're also going to have to refetch all that data so get employees again and save okay so now let's try and delete someone from here I'm just going to go ahead and attach that to this icon right here so add an event listener or delete employee so I'm just going to click on here let's get rid of this so you see what this looks like delete Dawn funk and great so don Funk is now deleted to Adam we would have to go back into our database and readd that data okay but he's gone for now you can of course add a button to add new employees in here but we're just going under the assumption that this data is coming from elsewhere and we as managers just have the ability to edit the employee or delete them okay so that is the assumption that I am going under to add new things I'm going to show you how to do that in the inventory so once you gain that knowledge you can apply it to this section too so let's do it for the inventory however I'm going to write a new query which is to get inventory so get inventory just like so and this time I'm going to select all from product okay and save and run so just go ahead and do that and I'm going to get a table and as we are on this query it should populate with data from that query okay wonderful now again the text here is very light so just go ahead and change this I'm just gonna change it in here to be a darker color just like so and that looks good wonderful so now that we have that I'm going to show you how to create a custom column on this table so I'm just going to call this inventory table and I'm going to create a new column this is going to be to delete so hence I'm just going to call it delete and the column type is actually going to be a button so let's go ahead and search for the button just like so and the value is just going to say delete okay so great and we're going to have to add it on click however we need to write the query for that I'm just going to move this up so it's the first right here on the four next I'm also going to add an option to add an inventory item so once again I'm going to have a mode up so let's go ahead and search for the middle I'm just going to pop it in here I'm going to make this green so just like that and I'm going to change the text as maybe put this a little bit lighter to just the word add okay so just like that great and on this model well just like we did before I'm gonna have to create some inputs right but this time we're just going to leave them blank so let's go ahead and create I'm just going to drag in some text in here and this is going to say add a product so add a product just like so and then I'm just going to put in some inputs so this is going to be a let's have the ID first so let's put that in here I'm just going to drag that over let's not forget to change the text of this to be a darker color so I'm just going to whack that in here same for this one so let's go down here and change the contrast color the label as well as the actual text as well so there we go we have a label here that's meant to be for our ID so I'm just going to change this to say product ID and what is cool is that we can make this required so I can just go ahead and flip this and that is now required next let's have a text input I'm just going to drag that in here like so I'm just going to change the text of this so once again I'm just going to change it to be that and let's change the label of this I'm going to just change it to view product name just like so and I'm going to make this required I'm also going to have a photo URL so you can put on a photo of the product itself then we're also going to have units in stock so I'm just going to change say units in stock as well as a unit price which should be in currency so let's put in a currency section just like so so that we go and change the text of this as well and finally we're going to have a text area so look for a text area and just drag it in I'm going to change the label and this should say product description and great and then we're just going to have a button that will let us add to our database so once again I'm just going to put add just like that and let's write our queries so I'm going to write a new resource query this time to add product and this time well there should be a flashback to our data base that you saw on GitHub we're going to use insert into then we're going to find the table called products okay we're going to open up a parenthesis and describe the columns so we're going to have the product ID good product name making sure to spell exactly the same as I am the product this description the unit price units in stock Andy photo okay and then the values that we're going to insert which are the number input 2 value the text input 13 value the text area one value the currency one value I need text input 14 value great and on success we are going to let's get our on fatty and let's also rerun the data so get the inventory again and then let's also shot the components so control component and let's get the modal two and I just want to close it okay great so let's save that and now let's go ahead and try this out I'm going to put product four product name it's going to be test should change the text of this as well so just make that darker test mobile put in a random URL just copy the link address of that paste it in like so I'm just going to change the text of this two units in stock I'm going to put 12 say this costs 400 dollars and then let's just put a test and of course let's not forget to add the units in stock which is number input three okay and now let's hook this up to an event handler so this is going to run the query add product and then it's going to minimize this so you can see hit add and great so that has worked we have got the inventory again and that has been added for us wonderful now one last thing is we want to run the delete query so once again let's get up our queries let's make a new query I'm going to call this delete product just like so and I'm going to delete from product where products ID equals I want to go into the inventory table so the inventory table selected wrote data product ID okay once again on success I'm going to show you some confetti so add that and I'm also going to rerun the data so control query select the query get inventory again great so those two are added let's click save and now let's link this up so the delete column on click we want to run a query and that is the delete product query right so now let's test it out I'm just going to delete the one we made and wonderful so great we can now add things delete things and update things in our database this is looking wonderful and now finally I'm just going to build a revenue tracker so all I'm going to do is just drag in another container just like so drag it over all the way to the end I'm going to call this Revenue tracker so let's go ahead and put Revenue tracker unless we get a fun of blue because why not so I'm just going to select the actual container and then the header I'm just going to select this blue color right here okay and now I'm going to put in a tabbed container so let's put it in another tabbed container just like this okay because we're going to have a table and then we're going to actually show some historical data too so I'm actually going to write a new query so resource query this time it's going to be a query Json with SQL and we're going to essentially select all from and then we are going to get the order detail but we're also going to use the method of format datas as array so make it into an array we're going to pass through the get order detail data but of course for this to work we're going to have to you guess it get the order detail so I'm just going to save this it won't work and let's create a new resource query called get order detail just making sure to spell it exactly the same way as we did and this is going to be once again to our manage database I'm going to select or prompt order detail and save and run okay so now back in here that's what we're getting and we're going to join it with the sales order so once again we're going to format data as array we're going to pass through get sales order so all of the sales orders so this one is easy just save that we did in the previous part of this tutorial we're going to get sales orders this is going to be a managed database I'm going to select all from sales order and save and run okay and then orders order ID we're going to match both by order ID okay and we save and run this tada we get all that data but it's been joined together I'm going to show you what it looks like in a table as I think that'd be better I'm going to call this joined Revenue data and then I'm just going to put in a table right here using the joint Revenue data okay so there we go and we can even add our own custom column if we wish so I'm going to go ahead and just call this total amount and then the value we're going to put in is just the current row quantity multiplied by the current row unit price okay and that will show us the total amount so the unit price multiplied by this quantity value okay great and we can even move that here so let's go ahead and rename this alltran sections and on view two well one of you two I want this to be historical data so I'm just going to put historical data and then let's delete view through so now under here what I'm gonna do is use the graph so just like so just drag that in like that and as the xaxis we're going to have the order date because it's going to be historical and then we're going to group by the ship country so let's find the ship country we're going to stack the group data and we're going to add a new data set so just double click on that and let's call this joined Revenue data and in here well we're going to format data as object this time we're going to pass through the joined Revenue data and we're going to get the unit price we're going to go into it and look for the unit price we're going to map whatever is in the array to the joined Revenue data quantity okay just making sure that we are actually including the amount of items that were purchased okay each time and just make sure to actually spell everything correctly okay so there we go that is what you need to do I'm just going to put order date on here on the xaxis let's make this a date the yaxis going to be the total revenue and now I'm just going to actually hide all the rest of these and wonderful we have done it okay so all our transactions and then our historical data and of course we can make this as big as small as we want but now we know exactly how much money was made on each day so on July the 9th for example 696 dollars were made and if we look in here on July the 9th that makes sense as we sold two items at the unit price of three four eight so the total amount was 696. okay and finally it's time for our last app again using the same database and that is to build a developer portal an internal tool for developers to essentially get endpoints to the Mobi database so let's do it I'm going to create a new app and this time I'm going to call it Mobi developer application just like so and hit that bottom again we're just going to delete all the default things that come with this app so I'm going to delete this query too now our developer portal I'm just going to actually drag in some text so that people know what this is I'm going to use an H1 element this time let's go ahead and do that and I'm just going to call this a developer portal just like so and just drag that over and then let's also just have a little subtitle so everyone knows what this is for this is going to say get and points to the Moby data base okay wonderful and for this I'm going to use another cool component that we haven't used yet and that is the collapsible so collapsible container so let's just go ahead and drag that in here and wonderful now this first container well let's just go ahead and select it I'm going to change the header of this to have this kind of bluish color that I have chosen okay just like that and the title of this is going to be for the end point to get all our sales orders so I'm just going to go ahead and change this to get sales orders just like so okay now in here I'm just going to drag in some text this is going to say I'm going to use markdown this time get sales orders API endpoint to retrieve all sales orders and next I'm going to create a table so I'm just going to drag in a table like so and instead of having this I'm just going to write my own data for this so I'm going to open up an array to create my table and then I'm just going to create my first object my first object is just going to have the method type and this is going to be a get request so I'm just going to put get as the HTTP request method and the end point is going to be sales making sure that's in quotes orders for example and then we're gonna have the action foreign okay so I'm just making what I imagine a developer portal might look like when it comes to viewing the different endpoints we can have to a database okay so of course this is just for demo purposes next we might be able to filter so I'm just going to add that and the endpoint is going to be sales orders and then we're going to pass through an ID as a parameter which is going to have a value okay and then let's just have a few more so this time we're going to have get pagination endpoint is going to be sales orders and then we're going to have the page for example two and a limit of 10. we could even make this just for anything to do with sales orders right so if we want to add to the sales order we could do that as well it would just go to the sales orders endpoint just like so just say well if you want to update so this would be a put request and then we'd have to actually find whichever order we want to update essentially and then we're also going to have a delete write which again we're going to have to supply the order that we want to delete great so that's what it would look like let's actually go ahead and change this to sales orders a API I'm going to retrieve add edit and delete sales orders right I think that's fine I'm happy with that okay and I'm just going to make this a little bit bigger so that everything fits I'm just going to make this a little bit bigger too so that everything that's great and I'm just gonna change this to get post put delete sales orders wonderful so I've said this as an action however I actually want to change this to a button so let's go ahead and do that here I'm going to change this to a button let's search for button just like so wonderful now what do I want to copy well I want to actually copy all of the data that we supposedly get back so I'm just gonna go ahead and do this by going on click copy to clipboard and next I'm just going to put in another component in here so let's just go ahead and make this a little bit smaller next up we're just going to drag in a table and we're going to populate this with our get sales order data so let's go ahead and write that query down here I'm going to create a query I'm going to call it get sales order data so get sales order data I'm going to make sure that this is to the manage database so the same one and I'm going to select all from sales order and save and run okay great now that means let's go ahead and get rid of that for now then we can populate this table with our get sales order data just like so so we've got the query and we've got the data that comes back from the query great I'm actually going to go ahead and put this in a tabbed container so I'm just dragging that over here and the first view that we're going to have is to see the sample response and let's have the second view as the table if someone wants to see the data as a table so I'm just going to go ahead and put table like that and then let's get rid of you three as we don't need it so now under table I'm just going to drag in this table just like so so that we can view that data just like so I'm just going to make it smaller just so it fits on the same line another sample responses I'm going to get the Json Explorer element so just like so put that in here and perhaps actually let's make this stretch out all the way as we can take up this Blank Space right here stretch that out to the bottom as well okay and the same for the table and now instead of having this sample data we're going to get rid of that and I'm going to show you how you can generate an API for demonstration purposes thanks to retool all you're going to do is just click on get started just like so and we're going to upload a CSV and to do this we're actually going to download this table right here so just go ahead and download the data as a CSV file and then drag it in here and hit next and there we go so now that we've got that I want you to click next and let's go ahead and call our API the same thing that we called it here says sales orders and everything will suddenly make sense and generate the API and great okay so you will see this which we've already written here okay so here we have all the end points to this generated API I'm just going to copy this endpoint URL go on the sample responses and create a new resource query this time we want to call it get sales orders or order data from rest API we're going to use the rest query I'm going to get from this endpoint URL and click save and run okay so great so now I can use that on the sample response so let's go ahead and use get sales order data from rest API data wonderful so that is looking good so now let's go ahead and link up these we're going to copy this URL so once again that endpoint and let's get rid of the sales order bit as that is the endpoint that we need to add in addition to this okay so then I'm just going to go into table one and get these selected row data endpoint okay and kind of add that all together but we would have to get rid of the dots dot dots but perhaps let's just do that as I think that looks quite cool so I'm just going to go ahead and delete these dot dots from here okay we could have course done this in JavaScript too but to save time I'm just going to delete them from this hard copied text wonderful so now if we click on one of these you will get the full URL great and then if we paste it in here like so we get the first sales order okay so this is just kind of a demo purposes of course this is not live data it's just what we generated from a CSV right here we can of course do this for all the major end points so you've got the sales orders let's go ahead and do customers as well so I'm just going to copy and paste the entire thing and then let's change the title of this to customers let's also change the color of this I'm just going to make a lighter green just like this color right here I have prepicked out change what it says in here so this time let's have it say customers API endpoint retrieve add edit and delete customers and then of course we're gonna have to change them all in here too customers get customers it's also have to add a customer to the customers pagination customers edit a customer and customers and delete a customer from Custer verse okay so that is looking good and it's going to copy that but of course we need to get the right uh URL so I'm going to actually get rid of the data from this table so just go ahead and delete that let's get up our little dashboard for making queries and this time we're going to make another query it's going to be called get customers it's going to be to our manage database and we're going to select all from customer save and run Okay so we've got that so now we can use it here for our table get customers data just like so I'm going to minimizers at the bottom so we're getting all of our customers I'm going to download this again and it's generating new apis I'm just going to actually refresh this page and I'm going to drag that in here like so I'm also going to click next okay so those that is actually all of our customer data and then I'm going to click next again let's call our API customers generate the API and great so now let's copy that get our sample response and once again we're going to have to write a new query I'm going to call this get customers data from rest API we're going to like a rest query I'm going to get our customers save and run okay so now I'm going to minimize this and that is what I'm going to use for the value here get customer data from rest API data just like so and the action here well the action here is going to be to copy let's get our action table three customers okay so this is looking good that is table three so let's check it out let's copy this one and indeed if we are selecting the right row it does copy that to our clipboard okay great so we have to I'm just going to do one more but you kind of get the gist now so once more I'm just going to copy the whole thing and paste it like so this time I'm gonna have for employees let me change the color of this to be a kind of reddish color this time this is going to say pure use API I'm going to retrieve add edit and delete employees just get rid of that and once again I'm just going to make a query so resource query call this get employ use this is going to be to the managed database this time I'm going to select all from employee run this minimize this now in the table I'm going to get the data from get employees so just use get employees data and now we're going to you guessed it download this table go back here refresh this page and then I'm just going to drag in that table like so and once again I'm just going to hit next scroll down hit next and let's call this and flow yes and generate the API once again now let's copy this and now we're going to have to edit all the data in table five right here so let's just change this out to be employees and once again for here employees employees employees employees and employees okay so that's all done and on the action well that is fine and we are getting these selected row so in fact we might need to change this to be one end so let's go ahead and perhaps replace that just like so and then get rid of this and great so now let's test it out let's select this row right here let's copy this and paste it in and wonderful that seems to work we might have to change it for this API as I think we just use the other one so let's just see check if it works select the row copy this place it in okay that does not work we clearly use the wrong API let's see if we can get back our other one if I just go back that has not seemed to work so I'm just going to remake this API hit next hit next again call this customers generate the API copy this API and then in here on table three on the action just paste the whole thing like so and delete the customers pot okay so great so now let's select a row copy it paste it in and that now works we are getting all the customers great so there you go one last thing we're going to do and that is actually use this API so this one right here on the employees so once again it's just this one and then we're gonna get this make a new query so new resource query I'm going to call this get employees from rest API this is going to be to a rest query we're going to paste that in and just put in employees okay I'm safe and run great so that brings back our data and in here I'm just gonna use get employees data wonderful okay so you get that just now I'm not going to carry on and do all of them but we have our three right here for the developer portal and I'm happy with that okay and that's it I hope you've learned a lot in this tutorial and I really hope you've gained some skills and knowledge in building internal tools using low code Solutions