hello i am vim girl and i love talking about tech in this video i'll be showing you how to use redux redux is a javascript library that helps us manage our applications data and i'm going to build this to do app using redux to show you how it works let's get started with the html code i'll need an input box a submit button and a div tag to display the to do's since we're using the redux library we also need to add a script tag for redux alright let's check it out cool now we're ready to write some redux first thing we need to do is create a reducer to create a reducer we use redux dot combine reducers which takes in an object of functions these functions run whenever dispatch is called and the return value becomes our app's new state you'll see what i mean in a minute to start i'm just going to return an array of deuce groceries make dinner we use this reducer to create a store to create a store we are going to use redux dot create store and pass in my reducer we'll be using this store for everything like accessing the state and dispatching events before we move on let's see how we can access the state with the store window.stores you go to store and we're going to go to the chrome's console so we can access the state by using stores getstate function cool now we can see that my state currently has what i put in earlier okay now that i've set up redux i need a function called vendor that creates html based on our state let's get our container div and make sure that it's empty then we'll need to access the state of our app and we can do that using getstate now i'm going to loop through each element in my state and create a div element for each item i'll also need to display the errand and append the new element to our container div now when we call the render function we should be able to see our hardcoded todo list awesome okay next let's add functionality to the page we need to update the state when the submit button is clicked so let's get that button to update our state we call the dispatch function and pass in an object we are required to pass in a type key i usually name the value based on the user's action so i'll call it add i'm going to pass in another key called item and its value will be whatever is in the input box after the dispatch function is called our reducer will execute and we'll get our new stake but first we'll need to go back to our reducer real quick and make sure that our state is updated accordingly alright we want to build on top of our current state so we'll need to include the state and action as parameters when you start the app the initial state will be an empty array and action is the object we passed into our dispatch function it's best practice not to change the default state so i'm going to use object.assign to make a new copy of the state if action.type is add i'm going to add the item into our new states array then we're going to return the new state okay let's go back to our onclick function after dispatching we should call the render function to update our html based on the new state great now let's see what we have so far cool now we can add to do's let's add another functionality how about when i click on an item the item should be removed so let's add another dispatch event for each todo element and give it a type called remove we also need to pass in the index and then render to refresh the ui let's make sure that for each is providing that index when the reducer function executes if the type is removed i want to get rid of that item okay let's see if it works awesome we're done now let's recap what we need to have a redux app running first we create a reducer then we use this reducer to create a store using this door we can call getstate to get the state of our data when user clicks on the submit button or when they click on an item we use the store to dispatch an event to change our state alright that's it for today if you have any questions feel free to comment below