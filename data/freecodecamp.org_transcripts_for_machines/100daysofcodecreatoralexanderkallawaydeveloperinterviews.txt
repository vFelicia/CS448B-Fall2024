he is the creator of 100 days of code it's a movement that helps so many people around the world stay motivated and keep moving forward with their coding uh so alex how's everything going with you hi um everything is well with me everything's going going real really well yeah yeah well first of all congratulations on product hunt a couple days ago you were featured on product hunt and you were considered the number one product of the day with i think 700 or so up votes how many uploads do they have yeah now we're at 700 plus yeah it was surprising and it was really random because i haven't considered like 100 days of code is not really a product it's a product in a sense that bullet journal is a product it's more like a system of how you go about doing things it's a system of rules so i was hesitant for the longest time to actually release it on proto hunt um but uh i was actually at the freecad camp toronto with my friend um uh here uh so he just suggested um just a sec um so he he suggested um just to post it for me and um that was really nice of him i think uh but um just a second yeah so um we posted it randomly it was like saturday at 12 so um and for the whole day we got like 11 upvotes i was like okay at least we got the name um scheduled you know like uh taken by us it's not somebody who's gonna come up and just you know um kind of get the spot um but when i woke up the next day um we got already more than 100 about so i was i was like did i dream this and then i understood in the morning that actually it was it was true i was like wow and for the actual like the whole next day i was um sitting there just you know watching the the uploads just to make sure that we are we keep to be product of the day so yeah the friend who actually helped me with this uh his name is david diaz you might know him um he's the creator of the frontend checklist and now he's done the frontend checklist like performance checklist and i think he has um the design checklist and he's going to release some more uh so he's recently moved to toronto uh to kind of pursue his tech career further um yeah so we kind of met off uh off offline now uh which is nice he is an awesome guy so he suggests like he keeps suggesting me all of this stuff that i didn't know about um and yeah we ended up product like number one product of the day which i was surprised with but i was happy i i think what also helped is that you know when let's say you were developing a product like an app and you have to release it on protocol then you have to create like an article describing it like a video about it all those kind of assets that don't exist that you have to have for the launch but in our case because we've been running for i know two years now um we had all of that we had all the articles we had videos we had like a slack link everything they need so in that sense even instagram we like we're everywhere so it's been pretty easy to like set it up and just forget about it because it was like fully um customized yeah awesome well congratulations again on the success of uh the product launch uh i i guess we call it launch uh did you know that it wasn't even gonna go up there or did it just appear up there um so yeah we talked with david he's like how are you not here and he was the hunter so like he hunted the hundreds of code and i was the creator so we kind of like grouped together and just um he helped me put it there yeah pretty much what was it like for you know for you to be a top product i think free code camp uh was only the second place product when it was launched uh yeah looking back um that was a long time ago and that just totally took us out of left field we're like hey why are we getting all this additional traffic and there's like somebody's like you're on parkcon and we've already been up there for several hours so um but yeah like what was that like just um oh it's exciting um for me i'm still not sure why it happened the way it did because there were a lot of products like released in that day but also i think it's because we kind of like did the opposite of what people are supposed to do like you're supposed to release it during the weekday because every weekday there's like a newsletter that gets out the next day versus on the weekend there's no newsletter like there's no daily newsletter right so people optimize for a lot of things but they end up optimizing for the same things and they release those products on like you know using the best practices or whatever so i think one big part of it was that we released it randomly on a saturday that like not a lot of people would do especially the people who actually like planned their lunch so yeah yeah saturday like i can tell you anecdotally free code camp has about half the traffic it has on a weekday on saturday a lot of people choose to just kick it and take a day off i guess with 100 days of code they're not supposed to take a day off so maybe many of your existing uh people who are uh in the middle of the challenge decided to jump on and leave a remarkable product so did did this uh lead to a surge in new people um i believe it did yeah we've seen like new faces and new people on twitter especially because it's a different audience on product hunt i think um a bit of a different mindset there's some correlation with like people who are learning to code because there's so many different reasons you might be learning to code but prototype is more its focus is on the making of of things so eventually like you either graduate towards that or you find a stable job or you find a job like if you find a job at google for example like um and it's your first job you wouldn't just go on product hunt right away and try to make your own products until you get some experience so there's some kind of discord so that's why i think we got all those makers that aren't for the hunt to kind of take a look uh and discover what hundred days of code is and i've seen because i see the retweets of the hundred days of code bought i i've seen oh like this person joined and then what kind of congratulates them on like joining oh thank you for following me kind of stuff yeah yeah let's talk about the bot because the bot is really a remarkable success as far as twitter bots are concerned uh i understand that it recently crossed a thousand followers is is that correct i think we have 17 000 followers there uh for the twitter bot so it's pretty big uh it's bigger than like my account for example like my personal account i'm like whoa but because it brings more value to people is like 17 000 yeah i had no idea you had 17 000 followers that's amazing i i was thinking like for a bot for a bot account that basically is just retweeting successful that's amazing man congratulations i think yeah go ahead sorry oh yeah go ahead oh yeah my thing was is um the popularity of the bot is because of the value it provides because it kind of connects with the community instantly kind of like compared with instagram which um i think three months ago or two months ago they rolled out finally an ability to follow a hashtag which is not doable on twitter so like it is doable in a way that you search for hashtag and then you kind of find out the details what instagram does actually and you can if you are on instagram subscribe to the hundred days of code hashtag because it's just people posting stuff they're working on and it's pretty cool and okay i think twitter bot kind of feels that niche on twitter where it's just impossible to to kind of connect to the community unless you like follow person by person but also how do you find out about the new people and things like this and also it's not a simple bot and thank you thanks uh i mean to amman for creating it uh you can find him at ammon himself um on twitter and what he's done i think he's done it in the very beginning of the creation of the countries of code like concept and without it i don't think we would have such a you know continuous um influx of new people coming in and kind of like the the community sustaining itself um so not just it like retweets people but also um it congratulates them on their success and it kind of like tries to um if they're unmotivated or if they're upset it listens kind of to those um searches i guess for for the hundreds of code hashtags and their sentiments so like if they use the word upset or set or something it will try to cheer them up with like a motivational quote and stuff so um and like always uh thanks for following things like this so it's kind of in a way it's kind of like a super simple um yeah you could say like it's a bot but it's not just a retweeter bots which there there are so many of them and i think even in those retweet bots sometimes there's value like i follow one for golang for example and it's pretty good like i find about the opinions of people who are just tweeting about going something they like found out or some like criticisms of it and it's always different which before i was kind of like looking at those accounts for example like there was one for like angularjs like if you were to do anything like js like angularjs bot would like retweet you uh and it's not like it's not the official one but it's just one of those that i remember i was like why would i ever like um follow it because it's kind of gonna put so many tweets that i don't care about in my in my feed but i think twitter has got really really good at kind of mixing up your um timeline in in a really cool way yeah yeah well the uh the project itself the the 100 days of code bought and we're going to get into 100 days of code for for those of you who are listening who aren't that familiar with the 100 days of code challenge it's a hashtag and there's a website and there's a twitter bot and all these different aspects of it and of course there's a giant community and um i'm just looking at the 100 days of code twitter bot actually right now and i'm gonna drop a link to this in the notes as well um take a look at that um how did the bot come about and whose idea was it and uh who like who took it and rolled with it and expanded it i i mean uh i see that amman mittal was he's been absolutely critical and i've talked to him about it a lot in the past yeah he is amazing um and i think that's um initially he had that idea of starting a bot uh i was kind of having some thoughts but it was like all very vague because i was trying to think of so many different things about the challenge to kind of like formulate it better to make it fit different um use cases uh but definitely emma i think was the one who like he got the idea he created it and it just like was presented to us as that thing like oh it's done already so big big thanks to him and he um also open sourced it and there's a lot of people who have helped improve it uh improve the bot along the way um as well as i think it's been that twitter bot is a part of recordcamp um github so it's kinda like it's a part of recodecamp so if you're interested in um kind of contributing to open source you can look at the code like at the code in this bot and maybe you'll you'll um come up with like a different feature for it and things like this uh yeah so yeah and i think i should mention probably for the people who might just hear about the hundreds of code that it's a challenge in which there are two main rules one rule is you code for one minimum minimum one hour a day for the next hundred days after you commit to it and the second rule is you um encourage at least two people on twitter every day that are also in the hundred days of code challenge you either reply to them or you like their tweet or you just communicate with them somehow and that kind of puts you into the loop of things into the community um but definitely another thing i wanted to mention is that i see a lot of misconceptions about um the holidays of code how it's evolved to be now versus what i wrote in the first article because in the first article i'm like i'm very um very specific because i was working at a job and i i wasn't super happy with the technology i was learning so i had to find a way to consistently somehow learn web technology so a days of code was kind of like an internal response to kind of like i have to make it like a public commitment somehow so we were sitting in a restaurant a famous story like i did it every time but uh yeah i was just sitting and talking like i was complaining to my wife like every day i make that decision and every day i fail like i just watch something instead of doing anything so um i suggested maybe i do it for three months and i publicly commit i tell everybody that i'm gonna do this she's like yeah okay but what about 100 days as opposed to like 90 days it's kind of like doesn't sound really well uh it doesn't sound really good um so after that i was born the 100 days of code and because of those limitations that i had in my personal story i kind of i put all those into the article like oh you can't miss a day you have to do one minimum one hour a day and things like this but since then so many new people kind of came into the community that i find that they read it and they're like oh but on saturdays i cannot do like i cannot do anything like it's my family for example or oh i can only afford like 30 minutes a day can i not do the challenge or oh i skipped two days can i continue or should i like restart it and to all of those people and to all of you listening it's very flexible it's up to you and you can definitely do anything you want with it you don't have to restart it every time you like make a mistake there's of course some ideal scenarios and there's also your personal rules like how you twist the the rules for yourself before you start um but i i suggest that if there's a certain limitation that you know of upfront you kind of write it into the rules of your challenge so let's say you don't do any work on saturday okay that'll be one of your rules but then once you commit to it you don't um you don't also sometimes take san diego for example just like uh for fun but um if it's something like you're traveling or you're sick or something you can always pause the challenge and come back to it and continue you don't have to like oh i had a cold for three days and i like lost my 90day streak like why what really matters is that you keep coding every day that's the main thing it's like whatever gets you into that consistent um kind of um into that consistency i would say is what you need to do um and i also had another thought um oh yeah we've talked about today um about um certain you you call it the value of death uh but it's for everyone to kind of understand what i'm talking about is so you commit to 100 days and then you know during those hundred days like where is that moment where you kind of like start losing motivation you lose traction like what what can you do to prevent that from happening um and my recommendation i think is if you keep tweeting every day and tweeting your progress every day that'll keep you on track but as as long as soon as you um take a little pause of like three days four days it probably means you're gonna like stop doing it for for forever uh unless you come back to it later and that's the biggest i think because if you're constantly and also yeah being a part of the community so being in conversation with the people who are also doing the challenge like either on our slack which you can find in the hundred days of code dot com website slash connect um you can find all of the resources there um but as long as you keep yourself immersed into that you're going to do really well as soon as you break break off that's where it fails and i don't think there's like any difference between like 30 days or 90 days there's no some like like in certain other things for example if you were to immigrate to another country uh there's some statistics that like after three months that's where like the stress and and the depression hits of actually on all levels understanding or the the huge shift you've made right and it kind of hits you like a uh psycho bricks but yeah interestingly on that that anecdote uh of the the moving to another country you're someone who's lived in a lot of countries uh alex you're originally a russian national yep and you've lived in japan for a while and now you're living in toronto in canada yep would you liken moving to another country to that process of moving into a completely new field a really deep challenging subject domain like learning to code definitely i think there's a lot of similarities you're right and it's kind of like any major change is going to make you really really uncomfortable and what is nice about moving to another country is that you can't really go back like it's not as easy as just stop stopping coding for example and i think stopping gets harder the more you do it for example but still uh let's say i've moved here and i've paid for education or i've like i've lined up some work or whatever the situation might be uh it's really hard to just go back and like be like oh let's let this money kind of like go to to the toilet and things like this and also like the ticket price and everything so it kind of keeps you there uh but i think there's some really like if you can do it at some point in your life i think it's a good uh thing to do um because it kind of teaches you to overcome it's not just a gradual shift it's kind of like a quality shift in your life it's so much different that it's like it's hard to understand unless you try it uh same with coding i think um if you first were to come into the world of coding everything seems very foreign like all the terms are foreign you don't understand pretty much anything everybody seems like there's on such a high level that you will never catch up with them so and i think a lot of people who let's say they were in marketing or something and or they were in any other profession um and they hear about coding they get excited and reads a couple of vlogs and they decide okay i'm gonna learn to code uh what then can happen and that's really um sad is um they would do it for a month or they they would do it for two weeks and be like yeah okay that that's very interesting and then they kind of just like drop off and then like forget about that that's what i think 100 days of code can um fix for you if you are one of the beginners if you want to uh get into coding it kind of like it's a contract that you like sign with yourself to okay for this amount of time at least i'll give it like a fair shot and you don't expect let's say you're starting to learn french or you start to learn i don't know uh korean language you don't expect in a month that you understand everything or even like a little bit beyond the basics but people have that illusion with code sometimes they're like oh like i just don't get this like after two weeks like i've spent a month on this i still don't get it like people are spend like 20 years and they don't get some certain like parts of it right it's all and it's layered uh i i think it was one of your articles or one of your podcasts i was listening to it or maybe a code newbie uh interview and it was eyeopening to me at least at the time it was like a year ago or so um you were talking about how coding is so multilayered and then it's almost equally um difficult to do something like systems programming like closer to the to the metal as it is to do something that's very abstract that's even though i it seems to beginners and like me it seemed that oh that stuff is like unlearnable i i should be like okay with doing at least this kind of stuff like some javascript but i should never go into that like it's even more difficult but i think it's not more difficult it's just differently difficult it's a different um kind of area it's kind of like if you were to learn um and study astronomy or versus like i don't know something like microscopic it's just different different areas of it so if you're a beginner and that's another um i think misconception people have is that you must learn a certain thing like you must learn web development and that'll be your career if you're not a cs major but no you can get into the field by learning web development because it's the fastest way and there's most resources available but you are allowed to like look around and do other stuff as well yeah and one of the things i tell people who are starting with freecodecamp for example is like this is a good place to start it's a good foundation learning how the web works learning how to build basic web apps that you can share with your friends easily they don't need to install anything they can just go to a url and check it out a good way to get feedback and learn some basics and then if you want you can go learn how to write your own compiler or your own operating system uh or all those classic kind of computer science projects that people would do if they were doing like a doctorate in computer science or something like that there's nothing stopping you but so 100 days of code one of the big objectives is just to to keep people motivated and it serves as a commitment device to prevent them from kind of fizzling out 30 days yeah going over the rails yeah right so it's a way to cash capture them when they're enthusiastic early on and they've got that initial burst of motivation and lock it in for the following 100 days so i think yeah yep go ahead so how do you go about getting people to actually commit to this if somebody were listening right now and they wanted to they're they're just starting coding and they're really enthusiastic now but they know that as they have failing tests and error messages and all that enthusiasm a little bit right how can they commit to something like 100 days of code and force themselves to power through the setbacks all right so there's a couple of things first thing i've talked about already so i won't spend too much time on it it's the community it's very important then other ideas i have for for this kind of stuff is first you have to um immerse yourself into not only the successes of other people like if you follow this like coding stars on twitter only you kind of have a skewed perception of what coding is and also i would suggest find and read stories about people who who already learned to code and especially stories of people who have learned to code on their own because you'll see the common themes and you'll see that it's not just you like and you're not down and you're not like stupid and because these are all the fears that people are getting and like oh i've hit this error like i don't know what to do with that but usually with time at least i found this for myself um you even respo like you start responding to error messages differently like okay like this is what it says what can i do with it and you find out what it says usually it's your solution it's not as scary um so if something is failing is not it's like i guess 99 of coding is your tests failing your coding is failing like once it works it's done like there's no like unless it's like a build out of an app or um or a website you're just like building stuff out can like flashing it out uh you get that feeling of i don't know the the momentum but also they're part of like another more important part of coding is that once you've like built the skeleton you have to fill it in with like some meat and some content and this is usually where the problems happen and it's absolutely fine that they do um that's another point and the third kind of what hundred days of code can do for you or other things like this is elimination of decision making in terms of what do i do daily like your habits should never should a habit be a decision like it the beauty of committing to something for the longest like for a long period of time with having a plan is that you commit once you like will spend the day in frustration or maybe a week in frustration and learning about the sites you get excited and you make that commitment once but then it's not like every day you have to wake up and oh should they code today should they not make and this is me and the exercise like that's why i can't really exercise properly because i don't have a plan and i'm like always and i see that in myself right so i see i try to like be self aware of this but that's what fails for me is that for me it's every time i have to make that decision and every time i can rationalize myself out of it but if it's not something you rationalize you just sit down and like put your hands on the keyboard and you just start typing something that's kind of what it is um and i i think we talked about um before the call we talked about the book recommendations so i don't have it with me this i have a lot of books today that i'm going to show but um the ultimate one that i really like i've given to my boss to read uh it's the war of art by stephen pressfield and it's my absolute favorite book because i think there's so many and in it it talks about the struggle of a creative person to create art and in in our case the artist code in the case that's presented in the book he talks about writing but it also applies to everything else and it's it talks about the resistance and how um basically the common themes of um any struggle to produce something new so that's a book i would definitely recommend you read and it will give you a different perspective on like all those struggles that you feel like oh it's bad it's not bad it's just it's hard yeah and i can second that that's one of my favorite books uh it's you know procrastination seems like a pretty innocuous problem it's kind of almost a joke like oh i'm supposed to do my homework i'll just i'll just do it all at the last minute because then i have that time pressure it's all good you know but uh you know that's not particularly healthy but what's what's even worse is when you're depending on your own effort and there's no external pressure to tell you you have to get up and do this you really have to rely on habits and selfdiscipline and things like that to make sure things happen and you know in your current job there's a very good chance that your boss will be perfectly happy for you to stay focused on your work and what doing what it is you do rather than learning an entire new skill set and probably getting a job somewhere else or changing to a different department the company or something like that so if anything you have you know negative reinforcement to actually sit down and develop this new skill set um what are some of the other books you've got there i'm really curious to see oh yeah oh yeah so um which one should i start with so i'll start with the ones um i haven't like fully read i think i've read like 60 of each of those i'm planning to finish them it's make it stick it's a really good book uh taking like the latest discoveries in neuroscience and applying them to learning and one of those things is like that road memorization doesn't work and like are you watching that's what i'm taking from it is like rewatching tutorials doesn't really work or like relearning the same things over and over i would rather like go and try different resource um and things like this and like rereading especially i was when i was starting to learn to code i would copy everything like on codecademy for example i would copy like the whole things and like save them like my evernote so that i would like read it later but they've never read it and it was like just taking my time um so and mindset is a really really important book if you think that your like brain capacity or like intellectual capacity is limited it's not it's just it's a fluid concept and as you like strive more and you try harder on like working on complex things um your intellect will like go up pretty much uh and it's not uh that some people are smart and some people are stupid and that's what the book kind of changes it like i would definitely recommend that one um all right so now for my favorite ones okay um so willpower is a book i've read maybe five years ago or so and it was like when they said the author said even if it's visible so it's baum baumeister roy baumeister and john tierney um and they talk about willpower being a resource that you can deplete with the more you try to um exert it and there were some really cool anecdotes there about um what's his name uh with the magic i i forget his name oh david blaine exactly yeah like he can be insanely focused like certain weeks and have a meal plan and have a training plan and everything and then after he's done his like his trick or his performance for like next two weeks he's like just chilling at home and like eating chips and doing whatever he wants and i was so surprised by that i was like no i thought he was one of those people that like always always like kind like a machine um but yeah that was an important book but here to my favorite ones um this is i think this book is kind of to blame for the 100 days of code so there's a lot of ideas here so it's called the power of habit by charles duhigg i hope i don't um like i hope i pronounce his name correctly and you see i can make a lot of like notes as i read uh but some of the cool concepts in it um if i uh okay is that certain habits are very hard to break because they're part of a larger there's an illustration here like a larger frame which is the cue the routine and the reward so you can't really like there are neural pathways in your brain that you've trained with so many years of doing the same thing like let's say you're smoking but you're smoking because you have a cue to smoke sometimes you're like oh okay you got stress at work with some project that's your q for triggering of your habit of smoking for example and then once you smoked okay you you go to your time frame that's the reward you got like you got to chill a little bit and what they're saying is that you can't really stop the habit you can only replace it with something else so that cue like trigger will still happen all the time so you can choose something else to be your um stress reliever in this case for example you can be like oh just take a walk instead of smoking a cigarette when i'm stressed or have a cup of tea or something so that's one of them um i i tend to like ruin my books by writing in them um and i've read this a while ago so i can't really oh ai concept of a keystone habit also is amazing it's kind of like they've done a bunch of research and they found out about the people who have changed their life in many many many aspects um there was for all of them almost there was a keystone habit that started all of that so it's one habit that you start with and you do it every day no matter what and you see the effects of the positive effects and it kind of trains your brain to see other things in a similar framework so okay if i modify my behavior i'm actually getting positive results uh and that contradicts the mentality of uh instant beautification where oh it's nice okay it's good now i'm done i don't have to think about it and then the payoff comes with like negative consequences so in this case you kind of train your brain to delay gratification and the more you do it the better you get at everything so having that keystone habit you add more to it and i think the best example i have of that is uh leo babalta i hope i pronounced his name correctly as well uh of zenhabits.net so he was overweight he was smoking he was in debt and by at that time he was living in guam uh in in the us in like 2007 i think and so he started this blog where he would um talk about habits and how he was trying to and he made so many plans of how he would quit smoking and many of them failed but then and he's like now he says i wish i didn't choose the hardest habit to change but i think like it taught him a lot and that was his keystone habit and he started adding stuff and like getting rid of that getting rid of his car he's changed or sorry he's moved to san francisco he started writing books things like this so it's it's pretty nice um that's it for this book there's i have four more which i'm going to talk about this is a really nice book that was recommended to me uh by another person at free code camp so we don't only talk code then we talk about other stuff so slight edge and the author is jeff olsen so the book is really centered around one idea of how by changing something really slightly like one percent uh in whatever you're doing um will amass like critical effects over time and basically each chapter covers different aspects of your life like financial aspect exercise aspect all of this kind of stuff but the main idea is it's a very simple process of identifying one thing you're doing improving it by a minimum amount and then seeing those effects accumulate and it's i i think it's a nice book it's kind of like it's fast to read but it kind of like leaves an impression on you so this is as you can see one of the books that uh have had a big impact on me um and it was recommended by tim ferriss in his book before our work week so there are two books which i always say to people this is why i'm in canada like this is why i've made that change in my life it's a think and grow rich by by napoleon hill and the fourhour work week and they together kind of implanted me an idea like oh i could do business i could do stuff and it's not only limited to whatever i've been exposed to and so i was really confident that i can follow the recommendations of team ferris but in this case i think it was really really um powerful so the name of the book is the name of the house yeah it's the new psycho cybernetics it sounds really really weird but it's it's a nice book it's been written in the 60s i think and it's one of the first books that golfers used and like basketball trainers used to um kind of develop mental exercises for players so that they would play better um and then it's more like if you were to talk about like the power of thought and the power of your intention things like this but it's more of a practical approach to it i think uh in this book where um he kind of teaches you how to mentally imagine something before it happens or before like the results you want to achieve and that way your whole personality changes in response to what you're kind of envisioning so let's say you were a student and that's one of the examples there a student who would do really really bad at math and it's the reason is not he's like he's he's dumb it's just his selfimage of he has a selfimage of someone being bad at math because it was kind of like suggested to him over time by teachers by family whatever but you can definitely cancel that um influence by making kind of so they also teach you how to do it they teach you how to like form that selfimage and i think it's if i'm thinking uh correctly it's the author was um a surgeon and like a pla what would it call like a plastic surgeon cosmetic surgery yeah so um and he was treating people who um were injured during the world war ii and also some other people who were just convinced that they were ugly or something was wrong with them like with their face and he noticed that some people after he's corrected there whatever it was like a nose for example oh i have it like too big of a nose he would correct it and some people would completely ignore that their appearance totally changed and they would still think oh i'm ugly like you made it worse and now i still have the huge nose so they and he started thinking like how could this be and some people would like scars would would be sometimes proud of those scars and they it would not affect their selfimage and hence their uh also their behavior and and their being shy of other people sometimes as others that would just get scars during life and some people would get them at war for example and they were proud of them so he noticed that and he kind of went along developing that concept of selfimage and definitely that's something that applies to code where you think oh i'm not like good at coding i'm not smart enough or i'm like i'm only good for um what do you call it like arts and and stuff like that and it's totally different like arts is as complex as coding and it's just some people have have been into situations or under influence of others that have been telling them oh like you're not good for this and they kind of accepted that so now they have this like mental block and this i think is this book is a good way to remove that block if you want to kind of go forward and two small books but they're all by the same person and also one of my favorites so i'll show them one by one this is called whatever you think think the opposite by paul arden and this actually influenced me to create do the opposite which is like it's still in development but it's gonna be like an umbrella project for hundred days of code hundreds of x and all the other projects i'm developing um to be a framework of thinking of how you can live your life differently from uh the like the common uh person would uh and this one is called it's not how good you are it's how good you want to be and it's also like you can see how these books are very like creative in the way they're done but it's not the shallow creativeness of like oh let's just make a small book with like a bit of text and just sell it so let's sell it because they are there are some books that look this similar way they're like small and they're like oh very motivational but um this one is actually like it's it's gold um and it teaches you to think differently pretty much and how you can like like with product hunt if i were to follow all of those best practices we would probably not get the product of the day and like a small example of that and sometimes doing things differently will be much easier and that's also explored i think in the fourhour work week by team ferris where if you are realistic you you'll you'll be on the same level of like play um playing field as a lot of other smart people who are also trying to be like trying to do something but then sometimes you have to create your own separate category of doing things so that you're always number one in it and you continue to and like you're not in no competition with anybody because being in a competition um competition kind of like it forces you to play the the game of like whatever the people are doing and you're kind of counteracting their actions sometimes and and when you're on your own you listen to yourself what do you want like if you're all your friends are learning to code and you just like kind of coming along um probably not the best motivation but if you are excited about coding and your friends are excited about coding as well but you're in this case you're listening to yourself and your own motivations that you're probably going to have a much higher chance of success as well as like learning technology oh everybody is learning reaps for example but you're really interested in i don't know golang or python and stopping yourself from doing that actually hinders you because that way you're like one of the people who are doing the same thing uh which also can be good but um yeah in my in my personal philosophy i think it's always better to listen to yourself in those cases so yeah that's that's it about yeah again like we're going on the rent yeah speaking of success uh talking about uh kind of finding a smaller pond that you can kind of be the big fish in so to speak um rather than just trying to jump straight into the big pond and try to be a big fish there um what are some success stories from within 100 days of code that come to mind uh because you have so many people participating in the challenge you right uh i think at this point more than a thousand people have attempted it um in fact i can check real quick uh if i go to the 100 days of code on uh your i think it's still under uh your own github account right yep loa slash 100 days of code and i can see that there have been 4 500 forks and if we assume that each of those forks is um somebody attempting the challenge because i believe forking it is one of the steps still is it still one of the steps yep so that means it's a good way to yeah keep your journal yeah so 4500 people have attempted this challenge hundreds and hundreds of people maybe thousands of people have have finished at least one rotation i know that now many people do a second rotation a third rotation what's a success story from within the community someone who went through a hundred days of code and had a positive outcome either while they were still in 100 days a country shortly after they finished it so one person i have in mind is um i'm gonna butcher his name but it's sick um and he is by the name of a signature twitter so it's syknapse uh he lives in spain um and he had i think he's done hundreds of code twice by now but he's found a job and he's very happy at his job but he was a very um like during his time doing the hundreds of code he was one of the most active people on on the platform um also i think um victoria victoria uh berquist also um then uh we have ryan yost also who who was also working in the fulltime job while learning and he's actually helped me with um my other project which kind of attempts to help people change other habits called hundred days of x so he's been helping me with the hundred days of journaling um and it's kind of the same concept but you journal every day so um we've kind of talked a lot with them uh and i also like um to converse with um joe previte or pravitay yeah i'm terrible at names um yeah i think uh i'm not sure actually i talked to him the other day though right i know actually all these people you're mentioning i know them because they they make themselves known they're all over twitter they're all they're doing things you know and these are people who could just as easily be sitting on a couch playing video games right exactly no they're out there not only learning the code but inspiring tons of people that learn to code along oh yeah and i think one of the good ways you can help others learn is just by sharing your journey and sharing your like daytoday experiences what are you working on what which companies you're applying to not maybe not by name but that you're applying to jobs that you're like just sharing your journey and it always has a response in people because they are interested because they either excited for you and also they want to explore what they can do um let me see if i can find someone else so obviously emman uh mitel uh at ml himself who has been doing the hundreds of code who's also um created the bot for us um then i have a make a hankovic um from germany she's been helping a lot and also i forget to mention that um in what happened in this year is that we've rolled um not rolled out but we've added um different languages on the repo so now we are i think at 12 different languages the repo has been translated to and if you are on the repo you find one of the languages you speak is missing so you can consider adding it and it will be a great contribution to open source uh on github because anybody can then use it um and i was surprised with how many people actually helped us kind of create those translations one of the most surprising things was i was trying to find someone to translate it to japanese because i've been learning a little bit of japanese way back and for me it's like an i don't know in an exciting language and actually a company called pro gate um from japan reached out to me with with the pull request pretty much of everything translated to japanese and i was like yes and they are um pretty much like treehouse where they have courses for every like programming language i think um but it's all in japanese so um if you know japanese you can use that resource they seem to be very a very interesting um um kind of website to learn from also i definitely want to mention uh pi bytes which are a it's like a website where you can learn python in in bytes so pi bytes um i think bob is one of um i'm gonna butcher his last name uh i think belgium was i'm just gonna find it just by my memory doesn't serve me too well um let me find so i found five bytes but uh let me see yeah while you're looking at that so they oh i was just gonna encourage everybody to check out like i included a link um in the description to the live tweets about um 100 days of code using the 100 days of code first of all if you take a look at that you'll notice that there are probably i don't know 30 40 50 tweets an hour using this hashtag it's a very very popular hashtag and they're in all kinds of different world languages and people are at all different stages in the journey day 47 day 15 day 8 day 66 so people are all kind of going through this at different rates and they're they're all at different points in their their journey but they're doing it together and other people are jumping on and replying and encouraging them so it's it's really quite profound the notion of people cycling through this repeatedly motivating forward all right go another another cool way to find out some of the stories of people is if you go to product hunt for hundreds of code some um community members have actually posted their like reviews of the product where they told their stories of how um and just i think it's product hunt slash post slash 100 days of code all in like um what is it called um kebab case i think yeah uh these are dashes instead of spaces i'm gonna i'm gonna go ahead and add that link to the uh to the description real quick so people can read some of those there yeah so um that doesn't affect the the the fact that the stream's going on at the moment um coming back um to pie bites i found uh the creators uh is bob belder boss is one of the creators and i think he's working with julian seclara on this and they've created like a course for hundreds of code um like where you can learn things so as you know highlights of code doesn't have like a certain like curriculum it has a free code camp curriculum as i like but it doesn't have content so people often ask me like what should i do for my 100 days of code like is there a plan i'm like yeah just go to free code camp and that's the plan um but otherwise you're definitely encouraged to use any resources that you can and if you're learning a new technology definitely you can consider it as a part of the challenge that's another question i remember that a lot of people are asking uh but yeah so pi bytes their course i think the first 10 pi bytes are free and then if you decide it's like a paid course where you can learn python which is amazing and that'll be like also your countries of code journey um if you're interested in python specifically um so yeah that's one one of the things i wanted to mention for sure um there was something else well how about we talk about uh the slack chat so you've mostly been based on twitter and that's still the main hub for 100 days of code design right you also have a slack uh channel and you have a discord channel right yeah all of those you can find on on the main website the hyundais of code.com connect uh but on slack we now have around 3000 people i think let me even i can check just a sec yeah and how are people interacting on the slack like it do you have regulars or do people jump in when they have a question uh what what are the main things you find people discussing on there so um they're just sometimes people like introduce themselves and uh talk about different things random things like the questions that may have and we have pretty much a channel within our slack we have a channel for everything you might need like if you're stuck on on a code problem there's like ask for help there's ask for feedback where you've completed something there's um let me just check um connect by tech where people can connect by certain technology that you're using um there's get motivated channel where people just like put motivational stuff in and share resources is a good one uh so when you join uh i think it kind of um adds you to all of those channels by default and then you can kind of like pick and choose whichever ones um else you want but i would say it's a good resource where you need a certain question answered as opposed to twitter sometimes it's kind of like uh you've tweeted something somebody responded to it and then it's lost forever in the story timeline um so that's why we needed slack where conversations are more permanent they're not super permanent because it's a free slack we're not paying for it so only the 10 000 messages i think are saved which is okay like i don't intend to like run the biggest archive on on the internet but it doesn't help just just out of curiosity discord we started using that a lot more we still use gitter but like i created a discord specifically for the top contributors right meeting top contributors and one of the appeals of discord other than the fact that it's just a really really well built app it's really fast um is that there's no you know it's not like a free tier where you have messages different so i guess i'm curious like uh what do you think the benefits of slack are versus right right anybody who wants to start up a community which one would you recommend they use at this point um if you were to start a community use discord if you were uh in our case i don't want like the first 3 000 people that have registered on slack to just go off and like download another app because the cost of switching is too high and nobody will will do it i think well on our discord channel what i have to do is to create those like sub channels in a more like in a better way and then we gradually could i think move over there but i don't know like personally i don't know how to make that efficient and how to like avoid duplication of content and how to avoid all of that inertia that's built up uh and for me like if i were to download another app or use it in the browser it's kind of like just another app i have to run where for work i'm running slack so that's kind of that was the logic behind it yeah it's really hard to choose one of those platforms because there's always i really like also spectrum and that was an interesting one that recently came about from i think max toyber the the guy who is behind styled components i hope i got that correctly everything of those connections um that's an interesting one because it's more like kind of like the discuss kind of like the free code camp forum where everybody can everything is a link pretty much you know and that's what missing in slack is that any perfectly answered question is kind of lost forever in this slack world that was definitely a big motivation for us to focus our efforts more on the forum because you answer a question one time and that question shows up in the search results and it's indexed at google and it just reduces the redundancy uh that's it a lot of people want to have a unique answer to their specific question and it feels really good to have somebody giving you exactly what exactly what you're asking as opposed to your question is kind of similar to this which the free cocaine forum if you start to ask questions it'll steer you toward questions that things are similar but um yeah definitely like the the realtime nature of chat there's like a kind of a hype and uh just a lot of buzz around um having an instantaneous response from somebody right um and i think we should kind of we should try to dissuade ourselves from doing that because it builds bad habits of again it's instant gratification like i don't need to and that's why even on twitter or an email don't expect someone to respond to you right away they will respond in their own time where they they've scheduled it and and i think in some ways technology is kind of like ruining us in that sense where like if i'm not getting an answer in like one hour does that person hate me or like do they have something against me like no they just living their life um and same with those instant instant messages and i think if you are if you find yourself i think you're doing it really well but i'm speaking to the audience if you find yourself um being asked or if somebody asks you the same question over and over like let's say you go to a free go cam meetup at yours in your city and somebody keeps asking you the same question it may be a good idea to put that answer into a form of a blog post and have like some sort of like your own domain slash that blog post where you can kind of send people to and if they have more questions you can like ask the specific details or like answer the specific details about their their question but in this sense also what you get is visibility of this answer for everybody on the internet and that can help you and that can help them people who don't have access to you in particular for example um like i saw your article yesterday about them deleting all of the old tweets and i was like this is probably a question that gets asked a lot i'm like this is a good idea to answer that yeah uh so let's briefly talk about the future of 100 days of code what are some aspects of 100 days of code that you're really excited about and what do you have in store for the remainder of 2018 um i don't have anything particular in store but i think we could definitely add some um like learning paths for people that are like you know you're just a beginner you're you're doing this or you already um on a different track or you want to learn python for this kind of stuff so for us to have some sort of a way to give them some content like oh this is what you can do um that they don't have to search for that would be a good idea adding more languages would be another um and i have some other ideas as well on kind of like wrapping it all around that do the opposite uh platform where i'm thinking of starting a podcast ideally where one of the topics would be hundred days of code and where we can explore like learning to code uh in more depth um that's kind of like on my list of things that i would like to do i have an idea for you just take this with a grain of salt because um it it would involve work on your part would not work on mine but uh um i it seems human psychology and uh motivation and habit formation and those different aspects of applied psychology you could perhaps consider creating a book club because i know a lot of people who are interested in willpower and how to inculcate healthy habits and things like that and a lot of it is domain independent whether you're trying to learn to code whether you're trying to whether you're trying to write more and and critical things um or meditate more or whatever it is sleep more whatever you need to do to make your life uh better whether that's career based or lifestyle based um it seems like that reading you could build a reading list and then you could have kind of a book club like in october we're gonna be talking about this book and november we're gonna be talking about this book so everybody get this book and read it in advance of that that's kind of like book clubs are as old as books are uh yeah for sure um i haven't been considering it but if i can um send a link somehow somehow here i'll send it to you in this chat that i'm seeing so this is uh my kinda like a little newsletter that i'm sending out um i've only sent it a couple of times for now but this is where i'm gonna be building that i think it's a good idea to kind of tie it with your idea of reading like reading club where i would announce the things we're reading um in in that one great well i'm going to go ahead and share that um as well and thank you everybody wants to sign up with that i just signed up myself um now the pressure yeah actually right i sign up to a ton oh and somebody in the chat just said they love the book club idea i sign up to a ton of email newsletters it's a great way to to i mean the information just comes to you and uh usually if i don't have time i just archive it you know it's not a big deal right yeah i i basically treat my inbox a lot of people ask me how i stay up on all all the different things because i get emails from jason kalinakis at this week in startups he has like inside.com and they have some great newsletters um you know uh bruce schneiner has his cryptogram that comes out every month and that talks about security related stuff it's so convenient to just sign up for these people's uh newsletters and have the great information come directly to you right uh and and of course i have my own email blast that goes out to everybody who uh signs up for free code camp and i'm going to start sending that out again soon we're working on some infrastructure yeah i love that one yeah but yeah i think that that's really like an under utilized uh medium for reaching out to people is just sending emails uh and i would encourage everybody who's watching this if you're interested in building your reputation uh as a developer you know blogging podcasting these are great ways to do it and then you can also publicize your blogs in your podcast by having an email list uh even if there were only like 100 people on that email list and most of them are your relatives and friends who signed up that's great yeah because it's a low friction way for you to quickly kind of share stuff and it's way more rich than twitter if you tweet stuff out people are going to miss it yeah if you're on facebook uh well i for one don't even really use facebook anymore unless i absolutely have to and i think a lot of people exactly by the way they just downgraded all their unit numbers in europe uh a lot of people in europe have stopped using facebook too but um yeah like uh sorry for the little aggression i don't mean to do no no it's really interesting to me yeah i would say um know having a regular mailing list would be uh great for other people and i'm signed up for your email alex and i'm extremely jazzed to see what you send out and if you have a book club i happen to spend a tremendous time a tremendous amount of time running and i listen to books while i run uh i probably listen to 20 or 30 hours of audio content a week like between all the different podcasts and all the audiobooks i listen to so you know i'd be i'd be interested yeah audiobooks have been i think the number one discovery for me this year like i've all since i've started working i've always had trouble of like actually reading books as opposed to my time at like at college where i had so much time uh and audiobooks kind of filled that where you like you have to walk for 500 meters you have to hop on a bus and you have to you know walk in a kilometer and then um you ride by train things like this you can always listen to your audiobook so this year has been like insane in terms of like me getting through books and uh fiction as well like i'm i've had the longest time i've had a lot of trouble reading fiction books and i want to like scifi i love that i've recently read or like listened to dune and i was like wow now i understand this is amazing um so yeah and also one little tip that i got from buzz boss who's um our canadian super super and popular developer oh yeah one of my heroes yeah he's amazing um he's actually teaching at um like he used to teach at one of the boot camps here but unfortunately now no access we can just you know get his courses but um he is recommended on his podcast syntax fm by the way amazing podcast about web development um if you are going through a course or watching a video try to watch it on 1.5 x or 2x speed because you will not lose any content like i'm watching all the udemy courses i'm i'm taking at 2xp and i don't miss anything like i as a nonnative english speaker i thought i would i'll be like oh this is too fast for me but no actually and even when i'm watching on normal speed you would assume that i can code and listen at the same time but i can't so there's no really no value for me to like watch it at this moment like slow speed so that's one of the super tricks and you can double the amount of content you like get through and understand and like um digest um with that just little trick that's amazing yeah yeah and i'll just chime in as well i listen to everything on double speed as well and i found it dramatically i mean it cuts the amount of time you have to spend listening in half you have to listen a little harder so it keeps you more engaged and just like you said i never attempt to listen to a podcast or listen to an audiobook while i'm doing something else that uses my brain if i'm trying to code or i'm trying to write an article or something it's a fool's errand to multitask in that way i think you know you can multitask in the sense that you can run and listen to a podcast at the same time but you can't like write and talk at the same time or listen to somebody else and talk at the same time so the human brain just seems to be well disposed to doing kind of unthinking activity and thinking in parallel but yeah two thinking activities at the same time exactly i've recently found out especially by having those is that i can do any work around the house like i can vacuum clean the apartment while listening to an audiobook or sometimes i do the dishes and usually it's like it takes a bit more time than i would want to but if you're listening to an audio book it's kind of like the time you've already won and you kind of like just go ahead with it so it's also been like a great um kind of influx of more time that i can spend on it so yeah definitely yeah and we're in a golden asia podcast i think that this is like the amount of incredible content that comes out in podcast form every week is just too much you mentioned fm is great i listened to that i listened to change log i listen to software engineering daily code newbie learn to code with me podcast uh i don't want to leave anybody else's podcast but you know like indie hackers um and then of course like all the podcasts from prominent technologists and uh you know tech news uh kara swisher rico decode is great um there's no shortage of content you can you can run for like 10 hours a week 20 hours a week and and learn so much just with your headphones on new york times washington post like all the major publications have great podcast versions so i apologize for the protracted pitch but if you're not listening to podcasts yet you absolutely should start listening immediately and and you should check out the free code cam podcast for sure we're we're going to definitely continue to ramp up we're publishing one podcast every one day i'd like to start publishing every wednesday as well um so have at least two episodes a week for you all um and it's going to cover a lot like stuff that doesn't require a lot of visual aid so less you know how to debug this you know snippet of javascript and more right um how you know how do i stay motivated while i'm learning or you know how do i convince my boss that this technology decision is better than this one um different situations like this that's interesting i have just one question for you it's kind of like multilayered question could you tell us more about your running like do you run every day what time of day do you run how like what's the distance and how do you do it why you do it it's really interesting to me yeah i so i am a creature of havoc i've read the charles duhigg book i've read a lot of books about habit formation willpower and uh so every day i wake up with my kids wake me up basically they start crying come and get me out of bed so uh i grab my little infants uh i grab one under each arm walk them downstairs get them breakfast change their diaper or change my son's diet for my daughter's potty train now um and then uh after everybody's ready and everybody eats breakfast i've been skipping breakfast i basically am doing what's called intermittent fasting where i don't eat 16 hours a day and i've been losing about a pound every two weeks as a result of this so nice and doing it like ten or i don't know why it works but it seems to work i eat you know just whatever i'm not really doing anything diet wise but i'm not eating breakfast anymore and i'm not eating snacks after dinner so then i just just uh after i get the uh school and i go directly to the ymca and i just run laps around that for about an hour and then um i come home at work and then uh after my kids go to sleep sometimes i'll go there's a lake nearby and i just run around the lake um so you know anywhere between uh five and ten hours a week spent running wow i'll run about 10k you've probably read this book but if you haven't um you know haruki murakami is um one of the japanese authors so he has a book and he's an avid runner as well has a book called what i'm talking about when i'm talking about running or something like that or what i talk about when i talk about running amazing and i think check that out that's the second time this week that somebody recommended it to me so wow yeah yeah all right well hey uh i'm serious even if you don't create that book club that list of books put that together into an article and i'll include that uh because you know we could just put it on the headline like you know the 100 days of code how the creator of 100 days of code sticks with habits you know his reading list something like that and it sounds like you're discovering new books all the time that that kind of cover these different topics but you know like the zen in the art of motorcycle maintenance for the 2018 uh you know people living in that year that kind of list i think would be super helpful and um you know like that kind of category was often called like selfhelp or something like that but i just want to make it clear like these aren't like motivational business books uh the way that like you know i think those kind of books get kind of a bad rap a lot of these are applied psychology type books um yes some of them could probably be summarized in a couple pages of bullet points but um i think that there's a lot of value in reading them and i've read a lot of them and uh i i definitely think it's worth you know paying 10 15 bucks to to download a book and listen to it or um to to order a used copy for like a dollar or two on ebay um and have it delivered to your door and you know i think that just the process of reading these books and thinking about how they apply to your own life is incredibly valuable so you know even if you dispute like the scientific uh you know veracity uh and the methodology behind how they came to these conclusions just reading it and thinking about it is a helpful practice in my opinion so i i would encourage everybody to to give these a try and be relatively openminded about it so just one last question for you uh alex yep if people want to know what's going on in the world of alexander callaway the canadian of you know who moved from russia learned a program got a developer job and is now helping so many people thousands of people stay motivated in their efforts to become developers themselves uh if people want to follow you what would be the best way for them to keep tabs on you and your eyes i think um twitter is the best way and now um this little newsletter that i'm gonna because what if like twitter goes down you know uh in a couple of years but it's probably not gonna happen uh so i usually use twitter at callaway and instead of ll it's one one so ka one one away um that's the best way um because yeah i'm also usually not on facebook i use it just to create like either create or monitor events for frequent camp toronto um but otherwise i don't really have a use for it um so yeah definitely twitter is the best way all right well thank you so much for joining us thank you everybody thank you it's a lot of fun yeah yeah it's it's great talking to you again i had a blast hanging out with you in toronto yeah next time i'm in toronto i definitely want to hang out and get another a w um root beer float with you yeah and you won't have to do airbnb you can live with us all right cool yeah yeah and speaking of which uh i see in the background you've got a happy birthday kind of strung across uh yeah tell us a little bit about that so yeah it's been um i guess i should have should have taken it down by now but uh on 8th of june it was my wife's birthday just because it looks nice with the heart like the heart stays there it's kind of like a little uh lamps bulbs um and it's kind of like around has happy birthday so yeah yeah well belated uh happy birthday to your wife anna i'll tell her for sure oh by the way she's learning to code as well she has finally succumbed awesome yeah so we're gonna be like a developer family that's great man well i hope you all have a beautiful weekend together i hope you all get plenty of coding in and you get plenty of exercise and yeah you've inspired me to start writing i'm gonna run soon yeah for sure good book on running that is both motivational and kind of instructive is is called uh i think it's called born to run like the like the song um it talks about um talks about forefoot running where you're running your four feet instead of like most people run on their heels and if you do that it kind of like yeah hurts your knees like a lot more of the impact is absorbed by your knees if you run on kind of the balls of your feet most of it's absorbed by your the tendons in your lower leg so that was one of the big breakthroughs that allowed me at 37 you know i started running probably you know seriously when i was about 30. but already by then my knees were kind of like giving me grief after like a run but ever since i switched to running on my four feet i i've had no problem so a lot of people say oh i can't run you know my knees are bad i would encourage them i'm not saying that like no your legs are fine just go do it uh if you're having serious issues with your with your legs i would definitely go talk to a doctor about it or maybe a kinesthesiologist or something but um i would definitely encourage before you dismiss running as an activity try running on the balls of your feet and it's a little unnatural when you first start and your strides are a lot shorter and you take strides a lot faster i've got like a playlist of like 180 bpm music that i listen to when i run um but it it really does work and i have had basically zero leg pain since i started doing that and i do you know at one point i was doing like 100 kilometers a week um so yeah that's a lot all right well hey check out that book thank you for the recommendation yeah yeah have a beautiful weekend and uh hey everybody who's watching thanks for tuning in thank you so much happy coding everyone cheers bye