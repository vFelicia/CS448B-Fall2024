hey everybody welcome to live coding with jesse i'm jesse and i'm so sorry that i'm late getting started i'm five minutes late i haven't been this late and i can't even remember how long so really really sorry uh it was just crazy i had i don't know like less than 10 minutes before it was supposed to start um somebody called and i had to go meet them and when i was on my way back i um my boss came into my office and so anyway so i can go all day without anyone talking to me at work and then for whatever reason in the last 10 minutes i had two people have to talk to me so oh well that happens so hopefully it didn't annoy you you all too much um but uh today we're going to work on a a different component so we need i don't know if y'all remember we had a component that was a page for all the faculty profiles and i'll show you in a second uh what everything looks like and before we were pulling in all this markup that we had gotten from the old database just a bunch of html formatted like as is and we did our best with some regular expressions to change some of the markup and with css to make it look good but we had said we're just going to do this kind of hacky stuff because we don't have time to go back through each one of these pieces of content and actually change the markup well now that i have some student workers that are just flying through every task that i give them which is awesome i decided like all right well now i do have you know people that can do this so i'm gonna have them do this so i went through and i made custom fields for all the different pieces so like the title the person's name their title um their phone number their email uh their um like a pdf upload for their curriculum vitae so we have all these pieces broken out now so when you try to pull in that data it doesn't look right anymore so we need to grab those pieces individually and display them you know as we want so it's not going to look completely different from what we had before uh but it's definitely going to be nicer so that's what we're going to work on today and um i i think we got a good shot at getting it done i'd like to finish up before definitely before one because uh 1 pm we have that um alexa skills live stream starting so i don't want to stream during that in case i'm sure some of you all may want to watch that so i'm gonna try to end before then okay uh just gonna check the chat and say what's up before we get to the code all right stephen says thanks for messaging me back i have a lot to think about oh you know what no problem um yeah no problem steven um if y'all didn't see at the end of last the last stream from uh yesterday i showed off a bunch of uh stephen's websites that he's been working on and they're awesome really awesome so if you get a chance check out the last i don't know 10 minutes or so of yesterday's stream and um you know check out you see some i think really good examples of websites for uh this is like some hotels and apartments and things like that all right let's see um all right so we got a question about laptops for beginners i'm gonna answer questions after we do our first coding session so just hang in there and um and i'll talk about that i see in the chat some some others are giving you some good answers there as well so uh if you want to hear what i have to think um i'll i'll tell you later on in the in the stream but i may not have better advice than the other people in the stream though all right let me show the code there we go all right i just want to start out by thanking um chris brown for this pull request so in our documentation we just said to run npm dev and for some reason i thought with the newer versions of npm you could just do npm dev and you could leave out the run but maybe you can maybe i was mistaken i often use yarn and to tell you truth when i do use npm i always include the run just out of habit so i'm not sure either way it's good that we change this to say npm run dev in case somebody's running an older version of of um npm you know it'll still work for them so thank you for that i went ahead and merged that in and anyone else is interested in submitting pull requests if you see something that's messed up in one of the repositories we have a lot you can check them you know check them all out anything in this uh fus hyphen marcom uh you know feel free to go in here and check them out and you can open an issue if you just want to point out something that's wrong or you could actually you know submit a pull request and you know have a good chance of getting it pulled in you know it'll be something nice for your your github portfolio if you're interested uh also i do have my own github profile for some of my personal projects so feel free to browse through there a lot of my stuff's also you know open source and free for anybody to use so um sorry i got distracted by the live chat so anyway just putting that out there that um you know there's a lot more here and on my portfolio that that don't make it on on the streams that we've been doing lately uh so we have like electron apps uh react native stuff going on so a lot more stuff all right let's let's go over here well let's just say navigate here to the faculty so we have um our education faculty right and we will need we're actually going to need to change this as well now that we have the data displayed in a different way um but right now let's go let's go to dr susan poyo i know susan and her family and she's awesome so we're gonna go i'm gonna go here i actually helped maintain the website for her husband her husband's website so uh cool so what we have here actually i think i just figured out another tasks that i could give to the um the student workers uh it might not be a bad idea to get rid of these details sections so we'll see once they get through what i gave them earlier today then i'll give them that one but for now you can see it's missing a lot we used to have a photo here and some information um and a link to a pdf all gone but if we check out in wordpress let's go back to wordpress and let's find uh the same let's go the same professor look we can see that we have all these fields so we do we have an image now that's under the featured image oops i forgot to start my timer let's start that out um so we have a display name so this is um i guess small distinction but kind of important when the title of the post has the last name first which is good i think um for sorting things by alphabetical order and trying to find it that'll make it easier but the display name we want it to be nicer right and it's always nicer to have your name in the right order so we have this display name now and this allows for some customization if a certain professor prefers to have maybe like all their degrees or titles or something afterwards then that's changeable and it won't really affect you know the official name um or the slug because that's separate than i was displayed we have a feel for job title phone email and then we can upload that cv we also have this search field so this is uh going to help us out with our our search feature that we haven't quite finished yet one of the biggest problems that we hadn't fully solved was how do we know what page these pieces of content are going to because we have a lot of pieces of content in wordpress all these custom post types that don't necessarily equate to a single page on the site and not only that but since we have that that router function in our server.js file it's not always clear what the url should be just from getting the data from the post so the solution at least the solution that i came up with was every single post of all the custom post types is going to have this this field right so this search field and in that search field we'll put in what the url to the actual page is supposed to be so then when this piece of content comes up in a search and you click to go to the full page it will take you to this page so and that's also going to help for pieces of content that may not actually have their own page so those sample courses that we were working with yesterday those won't exist on their own pages right the the course schedules those will always exist mainly on the program page they could potentially exist elsewhere but primarily what we'll want to do with those is put the link to that that program page that major or graduate program or associate's degree something like that it'll link to there so this is going to make finishing up that search feature so much easier i mean that was that was the main issue that was left for us to solve there's still some other things that need to happen before that's ready to go but those are all things that i'm really confident that that we can solve all right so um the rest of it you can see is is just whatever was left over all the content is still in this uh large uh content editor spot and it looks like it's still a bit of a mess so i probably need to do a little video of me going through one of these and cleaning it up and then give that to my student workers so that they can watch the video learn how i want it done and then go through all the content and remove a lot of this junk so you know all the details tags all these you know spaces right uh between there so we're gonna assume we're not gonna mess with this stuff and styling this because we're gonna assume it's gonna be cleaned up probably get cleaned up today or by tomorrow morning so all we're going to worry about today is getting the stuff in here and this image displayed on the page properly and if we have time we'll go back through as well to that faculty list where we display the names of all the faculty of a particular department and we'll make sure that the correct info displays there as well all right enough talk let's code so let me first things first let's pull in that the latest updates get pool i recommend starting your day out or anytime you open a new project throughout the day with a get pool just to make sure that you have the latest changes if you're working off of a fork update your fork uh from whatever the uh original repo uh is that way uh it could be a mess if you start working and then later on find out there were updates then you're gonna have to fix merge conflicts and depending on how many conflicts you have that could just take up your whole day and uh that happened to me last night with the um the react native app that i'm working on and it was kind of disappointing that i didn't get very much done because i had to work through all these merge conflicts okay major we're not going to be working with that we need to work with faculty yep so faculty.js is what we're going to work with and if we have time we'll we'll also work with facultylist.js all right great so you can see right now not really a lot going on we just pulled things in as is but we can now get rid of a lot of this stuff so i'm going to leave for now this because it's possible that there are some images within the the body content of some of these profiles i haven't seen it but it's possible so let's leave that in for now we can take out the whole thing with our our cv and then for now the details page let's see uh the the details of it looks like we still should be taking this out to be honest with you that's that's kind of weird let's double check that so we do have oh you know what uh because we're doing a case sensitive i believe if we change this to case insensitive it'll actually change this so it'll just look nicer for now like i said i'm gonna have that that fixed uh but this should work so if we add that i it'll make it case insensitive um great and then in terms of you know this piece here that's that's totally fine what we need to do is add in a few things we can also remove this regular expression see if we can get rid of anything else i don't think so okay let's take a look in graphical what data we're going to get and uh how we can when get get to it so let's see instead of menus we're gonna go to faculty let's see if this will be enough to get us what we need great um faculty node id title link we don't need a link right now um id we don't really need the id either do we uh let's copy in what we're getting already so we should have a query queries where am i i'm missing these where is it data no lib there we go in the left folder okay so here's our queries so we can go to faculty are use in fact which which query are we using here profile okay so we're using the profile query um yeah so let's grab all of this just to get a realistic picture of what data we're bringing in there we go all right so this will show us what we're actually getting and this is it and let me you know let me get rid of content because it's just taking up a lot of space for me to get rid of content and then now we're going to add in what should the field names be might be able to just check here actually let's check faculty and then we can get a list yeah okay faculty edges node there we go now we're at the right place all right cool so we have our cv field so we'll definitely need that we need our cv field we need our all right we're gonna have subfields for this one so class field id value all right let's try value for this value okay move back all right um and this so for people who aren't familiar with graphql uh this is just a tool um graph graphical uh is just a tool to search through your graphql content so you just put in your end point up here and then you can actually just kind of step through your they call your schema so that's what we're stepping through to figure out what the what all our options are and it's a lot faster to do it in here than to try to put it in uh save it like in our code save it refresh everything maybe it's an error maybe it's not so this is a lot faster so once we get the data we want showing up here we can just copy and paste that into our project uh and we are going to be pretty sure that it's going to work okay so we had that let me go up again author display name there we go so we want display name and do all of these i bet all of these need value okay kind of annoying to have to do value for all of them but um it's uh it's not like we have to type it in anymore we type it in once we have it we'll copy and paste and we're done um nikki says graphical love that auto complete uh it rocks yeah for sure it's so useful so you see the autocomplete's actually finding the fields in the schema that work so if i start to type something and i don't see anything come up autocomplete i know that it's the wrong thing and it's not going to work all right so where do we just hit display name email so that email field and then featured image so we're actually going to be using the featured image now and i'm definitely going to have to go in let me throw a job title just walk before i forget value i think that's all we need so for the featured image let's go into media item all right there's a lot here source url uh we could do source url i was hoping that we could find some of the um how they they break in wordpress will automatically break an image down into multiple sizes so it's hoping we could take advantage of that i'm not seeing anything like that here and this is hmm okay so i'm guessing either source url or uri is going to be what we need so let's throw them both in here and see what we get all right okay so each one of these is going to represent a a faculty member so we have dr daniel kempton who's the dean here um okay so here's that featured image the source url okay so the source url is definitely what we want the uri is not helpful to us so let's get rid of that uri um i i definitely want to try to put in let's try this details i want to try media details okay and we have subfields here to see what that will give us sizes yes all right let's let's do that media details sizes and oh we have more so let's decide this might be what we need media sizes um yeah let's go with um source url for our sizes this might be exactly what we were looking for okay so all right check this out so here's our source url let me make this bigger hopefully y'all can see so our source url for our featured image is going to be the full size image as is like as it was uploaded so that's almost always going to be not what we want because it's going to be too big but then when you now this setting can be adjusted in wordpress right but usually by default depending on your theme it's going to be it's going as soon as you upload an image to wordpress it's going to take that image and break it down into multiple sizes so in this particular case this image has been broken down into three sizes so this is like your thumbnail like your small thumbnail 100 by 100 a little bit larger thumbnail 150 by 150 now of course this also involves some some cropping right because the original image is probably not square i don't remember what it is actually um but your thumbnail is always going to involve some cropping and then we have this this other source i'm assuming smaller than the original image 300 by 293 so depending on the original image you may have even more sizes so it could be that the original image here is just not that big so it only gave us three sizes uh but if you happen to have um a really large image you may get a bunch of sizes uh now what we can do here is let's see file with height reference size name let's let's throw a name in here as well because right now this doesn't really help us if we wanted to use that right how how do we know which one is the best size so i'm hoping that name will give us some insight if we add name in here there we go so it says thumbnail medium and then this one is the 2017 thumbnail avatar so this is that theme specific so wordpress themes can do a lot and in particular this 2017 theme that is the theme that we currently have activated we don't really need it so we may end up deactivating it at some point but for whatever reason the 2017 theme needed 100 by 100 images so it's adding in another automatic uh cropping resizing point for these images right so like i said this source file is probably not that big so it only gave us medium but potentially we could have lots of different ones a small medium large i'm not sure if there's one above that but i've seen a lot more and like i said these are customizable so we may end up going in at some point and making our own custom image sizes we don't really have a use for it right now but i can see that happening in the future but anyway this is perfect this is exactly what we need and what this will allow us to do then is look for our image sizes if we have an image size that would work better let's say like let's say we want medium we'll use medium and then probably end up using media queries for this let's see how this will work hmm yeah we'll see how this goes this is going to be interesting because normally i would use media queries for this no no no what am i thinking we're going to use source set for this source set why am i thinking media queries um okay i just saw a question here it's a good question uh michael cruz says did these new categories come automatically from wordpress or is it something that student workers did so all the student workers did was upload a featured image the breaking it down into these different sizes that happened automatically from wordpress okay so i can't i think there are some automatic sizes that happen with wordpress but then there are usually some that are custom that come with your theme and then you can customize it even further if you want uh usually there's it's not there's nothing in the ui of the admin panel that lets you do that unless you get a plugin so you it does involve some some php all right but this is awesome i think this is everything we need so i mean we'll find out if it's not everything we need but for now i'm going to copy this and add it here so right after our content whoa what's wrong with this here unexpected tab character all right so it's just a formatting thing i think we're fine all right cool so now that we have this let's test it out and try to grab uh one of these pieces of data oh you know what i didn't check that value for the cv okay cool that does work i just wanted to make sure that this value is giving us a url and it is so that's awesome and notice what our url is it's not pointing us to our wordpress site you know that's that's at wp.franciscan.university this url is pointing us to our google storage uh bucket right because we set that up i think we set that up on on the stream but anyway we set it up so that anything we upload to wordpress goes automatically to google storage and it is served from there so nothing stays on our currently our digitalocean droplet that houses that wordpress installation and we don't have a um a database on that droplet either so i may keep our wordpress installation on that droplet because right at this point it's so lightweight it may work we'll see the other option that i've thought about is hosting it with next michael says my beautiful query yeah yeah the query is quite a mess now right it's just yeah um we could work with query fragments if we wanted to to make it look a little bit cleaner but i'm okay with this for now uh one thing we may end up doing though is like this featured image this is a really good candidate to be a fragment because we're probably going to reuse this for other queries so at some point we'll probably do that if in graphql a query fragment is basically like pulling out a piece of a query making it a variable and then all we'd have to do is just pop that variable in instead of having all of this okay all right my timer is up for that pomodoro session so let's take a short break i'm doing a lot of explanations so we're not moving that fast for those of you who are pretty advanced apologies for that but i don't really i don't want to lose the beginners um and if you're a beginner and you're you're kind of lost here feel free to ask any questions you know i'm doing my best to try to explain but it's def i'm probably missing a lot of things all right all right so first question away from the the very beginning of the stream in the first minute here is uh kim kim chun says what laptop do you suggest for a beginner um it kind of depends on your budget so i really like my macbook pro i think it's a 2015 it was the last model that had the uh the full hdmi port uh so that was important for me because i didn't want to buy adapters for uh for hdmi stuff um i really like it i've heard that people aren't as happy with the newer models of the macbook pro so i don't know but i don't have personal experience with it my wife has um a regular macbook and um that's fine for her she does uh javascript ruby and um like blockchain development stuff on it uh so that works it does kind of depend too on what you're trying to run sorry for the yawn so i think you're good with with those options but they can be pricey there's so many different options with uh with pcs it's i mean i i don't even know where to begin uh to give you advice for that uh if you want to go the less expensive route you could try getting a chromebook and then setting up a cloud development environment like through something like like cloud9 and then you'd you'd have a really cheap operating system that doesn't get it doesn't get bugs or you know malware anything like that and you'd be able to log into your dev environment from anywhere i mean there are advantages too but so if you're looking to spend the least amount of money to get into it i would go with the chromebook uh and then you can always invest later on like i didn't get my macbook pro till i picked up a client and uh the cost of the macbook pro was only like 10 of what i was making on that project so i thought all right fine like this is gonna help me out uh with my with this project so i'm gonna go for it uh so if you're just starting out you don't have any high paying clients yet may not want to go straight for the macbook pro unless you have a lot of money lying around that's my advice steven says if you don't want to spend a ton of money uh you could go with a macbook air okay i forgot about the air so the macbook air is is less expensive but but still more expensive than you're gonna pay for a chromebook for most chromebooks sabin says um more ram and a solid state drive is good yeah that's true if you're gonna go like the pc route or linux and like really customize and like pick exactly what you want make sure the solid state drive is is really nice to have and more ram is always better than less ram all right benny says can someone give me an explicit description of what component did update does also i think i had a condition when i said that it kept running repeatedly all right you know what there's some of those life cycle methods that that they're kind of getting rid of um i want is component did update one of those i don't think component did update did is is one of the old ones so i think you can still use it i mean like it says and from what i remember without looking it up i i'd probably look it up myself um if i had that question um decided to explain it so i'm just saying i don't it's not fresh in my mind but component did update goes off whatever you put in there will run after the component updates so something changes in state rerender happens right if component needs updated it updates and then that that runs i mean that i don't know if that's uh an official sounding explanation there but i mean i would i would probably look it up um in the react documentation they do a good job of explaining usually uh what things mean okay so i'm gonna go back and do another pomodoro session after this session i'll answer all the questions that are left so we're just gonna do one more session today uh so that you all if you want to have a chance to catch that that next stream about uh alexa skills okay so we have our data we have what we need let's make sure that we can actually get that data and display it on the page um let's see i guess we can get that uh display name field yeah all right so let's look at what we already have because we we're already in um make sure i save that in faculty.js we're already bringing that data in so we don't have to go through that process but we're using the apollo query component and we pass it a query prop tell it what query we want to use and then we pass it the data in this case it's the type that we're pulling from from the url it goes through our routing function in server.js and it sends it here so down here currently all we're getting is content and we we so up here we have data this props type dot edges zero right so that's how we've gotten the data that we need let's see do this why do we have result here what are we using it for oh okay we're using it up here that's weird faculty oh okay i see why we're doing it like that so we're this is more like a universal code so we're not explicitly saying faculty here we're using the type uh so potentially this component could be reused for other stuff it's about to get really specific so probably won't be able to uh anymore um but let's go our content node.content so we're going to edges zero and we should be able to know about content uh so let's make um i'd say faculty equals trying to avoid having to type all this stuff in all right so now let's add in a div and let's do an h1 and say what do we have faculty dot can't remember what we called in a display name field dot value all right so if i've done this right this should tell us uh this should give us that that value of the display name field and what did i do i forgot my closing div okay all right let's check it out yay here we are dr susan poyo cool uh so now we know we can get the data pull it in so now it's just the time to build this component out and we'll build it out we'll style it a bit and hopefully it looks nice and you can see after i've added that that i in our regular expression to make it case insensitive it has now changed how this looks still looks pretty terrible um but at least we can see the content now so i'm definitely gonna have uh my my student workers clean up this this markup uh manually um it'll free up time for us to build out more components and things if we don't have to mess with trying to work around this this kind of really terrible markup all right so for right now let's just get the date on the page and then we'll style it so let's try this uh this image next this one's gonna be fun um i don't well let's see if material ui has anything to do with images do they not they have an image avatar so do they not have an image yeah this is not what we need okay that's fine just wanted to double check to see if they had something built out for uh for images so we're just going to use source set and it's been a while since i've i've actually typed out source set you know from scratch and not just copy and pasting so let's check out the uh the mdn uh article about this all right so we're gonna skip over the y responsive images we already know we want it uh so let's let's check this out here we go so here's sour said if you're not familiar with it it's really cool so you you put in like it looks like a normal image tag at first right starts out the same but then we instead of just our source and then you know our old or whatever we put in here we have more uh properties more attributes so we have the source set and in the source set we give it some more file names um or urls you know paths to our images so each one of these corresponds to a different size image and then we say what what width this should correspond to we have our sizes which these are like media queries right they look like media queries so now this uses w unit not pixel as you might expect to see this real size okay cool um if you want i'm going to paste this in the description if you want to read more about this uh it's it's super useful so you can check that out if you want i'm just kind of skimming through this just to give me a refresher so i make sure i use the right syntax basically the only thing i'm i'm taking from here is make sure that these are the the actual image widths and then space the width of the slot the image would take okay and then this number is the screen width but this number is the the width that the image will actually need to take up uh and i thought you could okay so you can do um viewport with so that's good to know because i don't always have set a certain number of pixels it's usually like a percentage of the page so we can use viewport with we can't use the percent symbol but we can use viewport with which represents you know it's it's a number between 0 and 100 right so that represents the same thing as percentage width you know basically so we're going to you probably use that instead of pixels here um but yeah uh this is so if you've never seen this in action hopefully i can get it working and it it's so cool it's just super useful uh last thing i want to check is i guess that's it okay all right cool so uh the nice thing is there's a fallback and we notice we still have this source so on older browsers i'm not usually worried about older browsers but it's nice to know on older browsers it'll just ignore this stuff and just load this right so by default here they're loading the largest version of the image so uh and i guess that's um that makes sense and then that way it'll be able to cover it'll still look good no matter what right it'll take a little bit longer to load but it'll it'll look good since it's the largest image all right let's just copy and paste this whole thing and edit it as as needed okay here's the tricky part we're not always going to have our images right so um if we have actually oh what is this john's saying react image will also take another component uh to do lazy loading along with using source set built in all right this is worth checking out because lazy loading is um it's actually on our issues list in github right now so uh maybe we can just add it in right now it's important it's just importing image from react image all right let's look it up quick let me see how much time i have all right you know what let's save lazy loading for another stream i i agree and i think lazy loading is a good idea but i don't think there's any way that i can uh do that and get the rest of these in so um yeah let's let's just wait um for this so here's what we'll do in first things first let's just replace uh some of these these image files let's look up our schema again so we know how to get there so what is this featured image media details so featured image source url is going to be our default and we're going to need to change these up to use um that's weird why is it doing this oh okay i know why it's doing that because i need trying to use template literals straight in html and that's not working we need to go to javascript land for template literals to work and down here i don't actually need a template literally all right so here's what we need faculty featured image right featured image source url right okay and for this one we're going to say and use our template literal syntax here to put in faculty featured feature image source is it featured yeah ed featured featured image source url okay so what what this is gonna do then is anything we put if you're not familiar with template literals we use this backtick instead of normal quotes and then we can put a dollar sign curly bracket and then anything in between this opening and closing curly bracket is now javascript and so it allows us to do cool things within strings without having to concatenate a lot of stuff together okay all right let's see yeah let's put in let me just copy and paste this really quick and um let's see factory feature mr oh so instead of source url we want to go to this media details sizes details sizes i'm probably going to want to take these out and make them variables at some point because this is going to get crazy in a second sizes dot filter and within our filter we're going to say um image dot name oops oops all right with this image.name equals thumbnail and then for this one we're going to say image.name equals medium what is this there you go okay and then for our widths uh we can actually go in here and say along with our name we're gonna to say oops that's not exactly what i want to return image name equals thumbnail and then if if we do have the image name equals thumbnail um then we want to return um image dot source url is that gonna work no it's not uh what am i doing wrong here all right help me out filter should automatically then return anything all right do i need to add a map onto here then is that my problem so filter is going to return anything that fits that so i need to put dot map and then dot map is going to be image and we'll return source url expected token michael says you really need to see how the images look on each screen with before doing this yeah yeah i know i just want to get it in here first we'll get some images in just to see uh what's going on and then we'll adjust it but what did i just do here that messes up all right our filter actually sizes filter images dot map should be image why can i not do that i'm pretty sure i have some weird some syntax error going on here but i'm not i don't know what's happening is it mad because i'm trying to do all this inside of a template literal yeah i mean this is a bit much let's just let's take this out and do const thumbnail equals are we still getting this oops you're right i put equals equals thank you actually that's this is a case where using this font actually was not helpful so johnson i think jesse likes to see how many lines of code he can get into one file before he breaks vs code yeah when i'm just doing things i definitely throw in like everything but uh this is this is gonna end up being much cleaner so i think it's fine that we we pulled this out and so now we can do the same thing for the next one and call this medium and go for the medium medium size here and then we can get rid of all this great and uh we put in let's go with let's see if we can get a width here and what value we get i'm hoping it's just a number yes all right just a number so this width will tell us how wide the image is so then here where we're supposed to say how wide the image is we can just pop in that that value for width so yeah we're going to want to this is going to end up getting a little bit complicated instead of source url we go image with and so then down here we can say um come there with and this is getting so crazy medium width all right excellent um for our source url we can also do this um let's see i believe media details with yep you do details with wow this is 400 widths it's not a really big image um so we can go in here and say image with equals and this is going to be faculty featured image media details this one will be a lot easier with okay wonderful oops image with okay i just want to see this on the page no syntax error no closing tag for the image all right i noticed that at first and then went through a lot of stuff no image is not defined where's the image not defined where am i using image oh oh you know what i just thought too i hope that susan foyo's profile actually does have a medium size in the thumbnail size yay it worked all right cool it worked and we should be able to get different images now maybe maybe maybe it's just falling back to the source let's see what we have oh i know what happened we actually need to put all of this stuff beforehand ah this is gonna make it just just a little bit more complicated okay so uh here's the problem it'll be easier to see over here so for the source url we're getting the full url so that's why that's still working but for these ones in the source url for our our smaller sizes we're not getting the full url not only that but we're not really getting enough to do this right so this part here is going to be different so it's not like we can just have this as a constant so this is going to be so tricky all right let's check out sizes again and see what we have to work with file all right let's see what file gives us ah same thing what else do we have name file with height ah we need the full url how can we get the full url okay we could do a a regular expression that gave us everything before the last slash could we could we not can we do that and then that's going to be our url that we use and we will prepend that onto here oh good idea nikki says see if a featured image lets you query for base url or something all right cool let's uh go back here i'll tell you guys okay yeah we don't have that so i think probably our best bet would be regular expression or something that would give us just what we need up to here and then we could use that down here um and and add that in right before our thumbnail file name okay um my timer went up and yeah we have about 15 minutes before the other stream starts so i'm gonna go back to the chat answer some questions so i definitely didn't get it finished this uh source uh this using these the source set on this image tag definitely took up a lot more time uh than i had hoped so we didn't get all the fields in but we definitely got through the most difficult of all the fields the rest are just text one of them is a download but we just need one url for that and not all these multiple things going on here so that's what we do we just go down through and add in this data and then style it so what i'm thinking for styles is on mobile it's going to be you know dr susan poyo um probably the image after and then it'll have the title phone number email and then a link to download the curriculum vitae the only change i might make is if i'm gonna have the title at the top maybe i'll have her if i'm gonna have her name at the top i may have her her title right beneath it i mean the other potential thing is you know what if we had the image first i don't know i'll have to see how it looks but that's my idea on a larger screen i'd like to have the image here and then all the information you know right on the side or flipped around i guess it doesn't really matter we could we could have the image aligned either side but otherwise it'll it'll be side by side so there'll be columns so let me know what you think about those i guess the layout options in the chat and now i'm going to go back to the live chat and i need to find where i where i left off i do not remember oh cool i found it okay michael uh creole's asking about uh how chrome auto formats json um says firefox um dev does it automatically does chrome have an extension it does um all right nikki says json formatter is the chrome extension that does that is that what i'm using yeah json formatter that's what i use so that's how we get um where's that this so this is json normally it would just be all together and nearly impossible to read this makes it look pretty uh stephen says gotta miss a stream have a creative meeting for the next hour i will come back and see if you're still on later oh well uh good luck with with your meeting and thanks for being here for for as long as you could oh michael mentioned using an id for the key in in the map yeah you know what i probably will need to use am i using map anywhere no actually i don't think i will need it i i mean i'm assuming you're talking about this maybe you talk about something else but uh since it's not actually html is that's coming out i don't think i'll need it it's just being saved to a variable uh just as a string all right so uh eric zorn says hey hey how's it going thanks for joining us harshit says hi hey harshit how's it going harsh it i did go ahead and uh i cancelled that zeit account we're using for javascript af uh so i think we have like 20 at least 20 more days of it if we need to do anything with it if the account's not completely canceled it just dropped down to the free the free tier instead of the whatever tier we were on john says what happens if one or more of those endpoints does not have an image url does graphql return an error uh or fail all right that's that's actually interesting what happens if we try to get data that it isn't there i'm gonna have to look into that i will i would hope it would just return the rest of the data but to tell you truth i i don't remember what happens it's hard to believe that i haven't had that situation come up yet but that's a really good question definitely need to test that out okay michael says i think you get a null value okay oh i should say they had had to go for uh dinner time see you har actually i'm super hungry right now i could go for something uh um it's lunchtime right now so for me and hardship recommends using react image as well uh gia says i'm here i'm new here and i want to ask is this project for work or is this a side project this one is for work okay cool so nikki saying that the if we try to get some data uh with a graphql query and that data doesn't exist it'll just return null for that piece of data uh it it won't throw an error unless we mark a field as required so that's that's very good to know but what we'll have to do is account for that in our in our react component so we'll need to set up a check for instance with image to say if image is not equal to null then try to render this you know otherwise don't don't render it uh because then we we could actually end up getting an error even if we don't get it from graphql we'll get it here in uh in our component so i had intended to put checks like that in uh but for the sake of time i thought oh we'll leave that off um and if we get an error at that point it would kind of almost be like it better for a better teaching moment to say okay let's fix this error uh on mpg says i'm a beginner and trying to follow all right awesome yeah definitely ask ask as many questions as you need to i'll do always uh try to do my best to explain things but i'm sure you you have other questions what i just explained about um handling null values uh you all just are talking about in the chat so you all know i don't have to tell you you all know how to how we handle that so oh okay nikki saying that we could have used array.fine that's yeah you know what i don't use dot fine often so it didn't even cross my mind um but that's a good idea so instead of uh doing the filter i'm interested uh would there be any um performance benefits to using find instead of filter if so you know i could definitely switch that up if not then i may just end up leaving it as filter because that works i see that nikki said you need to pass a callback function and then do the equality check and he nikki said that way earlier than i figured it out uh so here um so thanks nikki sorry i didn't look over in the chat the chat was pretty pretty busy today so it was it was tough for me to try to keep up when i was was coding i see a lot of you noticed my double equal sign in the arrow function which of course doesn't work thank you for letting me know phoenix says wouldn't it be better if the image is in the center yeah i um i just kind of wanted to get the image on the page there but you're right there there's definitely some uh some styling that could could happen there that would make it look better michael says can can you set up a constant base url and then append a file name to it well yeah that's what i'd like to do um the problem with the url is just that it's not so this part of it would remain the same no matter what for across the board for everything that ever gets uploaded but this part here this 2018 and then 06 these are folders and it's based on the year and the month that that particular piece of content was actually uploaded so these will change so i need some way to get these values so right now these values aren't here they're only on the source url so that's why i need some way to just get this and if i just get that then of course i would have it and i could just you know uh prepend it to the source url down here and everything should should work out so that's the thing so i'm thinking regular expression might be the way to go here to pull this this piece but i'm not sure uh michael says i know it's a design question but i'm wondering why the cv link needs to be in a prominent position it's like putting an employee's resume at the top of their company's link yeah you know what you're right i the cv in the current website is towards the top but you're right it doesn't need to be and we just left it there because we pulled in the markup as is but maybe it would be better at the bottom you know maybe we the first thing maybe we don't want to show users a link to download a pdf right away actually i kind of like that idea of putting it at the bottom because i'm i'm a big um proponent of of not using uh pdfs online if you can avoid it because you know if you'd make that html instead of in a pdf uh it would be i don't know how screen readers handle pdfs but i know they can handle html so be better for that it would also be better for search engine optimization uh for searching so you know whatever is in that pdf is not going to show up in our search on the site it's not going to show up in a google search right google search does not actually scan through pdfs unless they've started doing that now and i don't know about it right so that content is essentially locked away so if we can avoid using the pdf completely i'd be okay with that um but if we can't avoid it putting it down the bottom i guess would be okay and it's just it's a better user experience to be able to just go right to the page and get the info i can't stand especially when i'm on my phone i go to somebody's website usually like a restaurant website and i go to the menu page and it doesn't tell me the menu it just says here's a pdf then i have to download the pdf on my phone open it up and read it i may not even go to the restaurant i'm just trying to see what they have and then i've got this restaurant's pdf on my phone until one day when i i finally decided to go into my downloads folder and clean it out anyway all right sorry about my pdf rant let's go back to the last uh world says what's the benefit of using serverside rendering like next.js uh nikki says seo and performance so search engine optimization and performance yeah for sure uh that's i mean that that's the answer i don't there may be some other benefit but those to me are always the the big too okay nikki says find has better performance than filter so uh filter loops over everything in the array find stops after it finds a match all right okay that's definitely cool um what time is it i'm crossing over into the other one so i just want to see really quick um would i don't know what the syntax is for fine can i just replace find with with this it's worth a shot and i can't i can't do it alright i'll switch it back for now and then i'll just look up fine on mdn um i didn't think it would work but stuff like that's always worth a shot because if it works it saves you a lot of time nikki says for this use case the performance difference would be extremely small though uh just training that es6 array methods muscle yeah you're right i mean it's it's cool if i get it in there and it works then great but it's not it's probably not going to really make a difference a noticeable difference but it'd be good to use the the better of the two uh christopher brown says why not embed the pdf and have it like an accordion yeah um is there some type of i'm assuming there's some type of uh react um plugin that can easily help us embed a pdf i'd be open to that we do it elsewhere on the site for other types of content so uh we use this service to do it though called calameo um but if there was something in react that would work uh i'd be open to that still not quite as good as the um html is doing in html but it's it's better than having to download the pdf all right michael cruz said so everything before the last slash yeah for sure that's exactly right um so we just need yeah everything before the last slash we need to save that and use that as the base url oh okay nikki says you wouldn't need the additional map since find will return that element not an array oh okay cool so that'll actually clean things up quite a bit so i'm definitely going to try to use find because it's it's gonna have the added advantage of cleaning that up because it looks a mess right now all right michael creole says screen readers don't handle pdfs at all okay that's good to know and you know what if if i can try to push to have the professors put that content from the pdf into their profiles instead i can use that as a really good reason for screen readers right i mean who's going to argue against trying to make things accessible are you going to look like a terrible person if you don't care about you know people who are blind or vision impaired not being able to have your content so that's that's an automatic loss of the argument right the world says the menu pdf classic lol yeah i mean there are a lot of restaurant websites that are so so terrible especially when i travel i look up restaurants more often than i do when i'm at home and sometimes i just want to say like i'm just going to go to this restaurant and say like do you want me to make you a website right like um but then i i talked myself out of that because that would be a terrible idea i'd be doing these tiny websites for restaurants and probably not making that much money it would just be a big hassle but um i i just they're so bad i just want to do it sometimes oh okay cool so nikki's giving me some code here uh we may as well do it right now this would be pretty simple um so let's replace all these filters with find and then inside um the find i guess that would work but then we don't need map anymore so let's get rid of this whoa what just happened there we go so why is this not working all right cool let's see if i did that right this time definitely cut this down a bit so i really like that cool it worked and we can we can verify that actually let's see yep it works so we we have these here awesome um nikki thank you for that i like that that's a lot cleaner michael says christopher brown do you work for adobe so christopher's keeps on talking about the the pdf so um let's see chris is about to start going to uh boise code works because i couldn't get anyone to hire me having just done free code camp and a pro bonus i for my school all right cool um yeah good luck with uh uh with your your learning and with your job search all right cool got through everything in the live chat if i missed your question i'm really sorry please put it in the comments below this video or dm me on some social media platform um thank you for all the help definitely uh it was very helpful a lot of the suggestions that you had and i'll probably i don't know if i'll finish this component on tomorrow's stream or if i'll finish it up myself off stream we'll see but we'll probably still be working in react tomorrow uh probably stream again around the same time as we did today so thanks again for everything and thank you for watching i'll see y'all tomorrow and until then have a great day i got signed out of youtube somehow and so the stream keeps going all right how did this happen all right now i'm gonna stop streaming for real let's see if it works this time