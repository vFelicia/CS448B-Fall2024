maps are data structures that store key value pairs in javascript objects are maps maps provide rapid lookup of stored items based on key values and are very common in useful data structures in this video i will show you how to implement a map in javascript to give a better understanding of how they work however normally you would never need to write your own map data structure in javascript because objects provide a very efficient map structure also later in the video i will talk about the map object that was introduced in es6 this has some benefits over using a standard object as a map this is a visual representation of a map so you have these keys that in this case are all months and then you have the values which are what the keys correspond to when you're using a map first you would enter all these key and key value pairs and then later you may want to look up a value so you would look up the august key and it would give you out this value 37.3 now let's look at the code for how you could implement a map in javascript so we have my map equals function and you're going to keep track of two things the collection which is all the things in the map and then the count so the number of items that you have we have the size method where we'll return this.count to get the size of the the map then to set that means just that you're going to add something so you pass in a key and a value and then we're just going to set that key and the value into the collection and we're going to update the count and then for has that just means you're going to check if the map has that key and you're going to return key in this dot collection the in operator returns true if the specified property is in the specified object so now we have git where we're going to pass in the key and we're going to get the value we have a ternary operator here so if the key is in this dot collection if that's true we're going to return the key it's this first section and then else we are going to return null then we're going to be able to delete an item in the map you just pass in the key and if the key is in the collection again we're going to delete that key and you're going to decrement the count so we have one less and the values function here is where we're going to return an array of all the values in the map so we just have a for loop where we push each item into the array and then if there's more than zero items we're going to return that array or we're going to return null and then the clear method you are just going to clear all the items from the map and then we're going to set the item the account to zero okay let's see a quick example of using the map oh and let's change this to map here and we'll run that okay you can see we created a new map we added some items here we have the keys and the values key and value and then here we're going to get the value associated with that key and you can see on the console it's 10 and then we're gonna check the size it's four and then we're going to output all the values in the map to an array now i'm going to talk a little bit about the es6 map object objects are similar to maps in that they both let you set keys to values retrieve those values delete keys and detect whether something is stored at a key but there are some differences between objects and es6 maps an object has a prototype so there are default keys and a map that could collide with your keys if you're not careful the keys of an object can only be strings or symbols but keys for a map can be any value including functions objects numbers booleans or even not a number you can get the size of a map easily with the size property well the size of an object must be determined manually you're mainly going to want to use a map if you have a collection so let's see an example of using an es6 map now this map is going to have all the functions i showed below but it's also going to have a few more so we're going to be able to do map two map2.has to see if it that has a certain value in the map we're also going to be able to do the entries method this is going to return an array of all the keys in the map the the values method returns all the values in the map and the entries returns all the keys in the map okay and i just put in some more code here um just to show some of the things that you can do with the map object i'm creating two variables this key object is just an empty object key func is just an empty function and then down here you can see you can set strings to values we can also set these objects objects can be a key you can set that to a value this function can be a key you can set that to a value and you can even use not a number as a key and set that to a value we have the size that we showed before on the other map and then here we can get the values of what we added above oh but first this is actually such an equal sign not a minus sign so it should be let map2 equal new map and then the only other thing i need to change is that there should not be parentheses after the size here in my custom map function above i didn't need parentheses but here i don't besides is a is a property and not a method so let's try running that okay you can see i logged the size four we have four items here and then i was able to get all these values up here well that's map thanks for watching my name is beau carnes don't forget to subscribe and remember use your code for good