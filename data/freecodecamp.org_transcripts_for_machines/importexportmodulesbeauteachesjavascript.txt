the Import and Export statements allow you to break up your code in different files or modules though this is an official es6 feature it is not implemented in any browsers natively at this time but it is implemented in many transpilers such as Babel and webpack the export statement is used to export functions objects or Primitives from a given file or module you can have multiple named exports in one file like this so imagine this is all one file li. JS and these are all the exports we can export a constant we can export a function and see these all have different names then you can import the functions objects or Primitives in another file so here we're going to import part of this module in another file named main.js this can be done individually or alog together here we're importing the exports individually we're importing just square and diag so here we're not importing the square root constant up here however you can also import the complete module so this is how you would do that to import the complete module you just do import Aster as lib from lib so now instead of calling the functions directly with square and diag we're going to do lib do square li. diag but now we'll also be able to directly access the square root constant by doing lib do square root you can also import with different names so if you have a really long function name you just put import really really long module member name as short name now you can just access it by just typing short name instead of the much longer name that it was originally in the other file now what I've shown you so far are called named exports because we're exporting things with specific names square root export square there's another export syntax called export default usually you're going to use this syntax if only one value is being exported from a file it is also used to create a fallback value for a file or module with export default you can only have one value be a default export in each module or file at the beginning of your file we're saying this is my funk. Js you're going to put export default and then the function or you can put a class here and then the entire function or class you want to export go goes right in these curly braces so this is going to be your whole file with all the code right in here one thing to remember is that you don't put a semicolon at the end and then when you're importing it so we're imagining this is another file called main.js and when you import it's a little different because when you're importing a single default export there are no curly braces around the name so I'm going to import my funk and you can see that's different from up here where you put curly braces around the names of what you're importing also you can see the name my funk is not up here so we're actually giving it a name in this other file and then we can call that function here well thanks for watching my name is boars don't forget to subscribe and remember use your code for good