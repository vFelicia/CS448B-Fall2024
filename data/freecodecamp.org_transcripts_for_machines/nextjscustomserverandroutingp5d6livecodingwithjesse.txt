hey everybody welcome to live coding with jesse i'm jesse and today we have a lot to talk about and we have a lot to do we're going to set up custom routing for our react.js app so we use next and next comes built in with its own routing but we need to do a little bit more than that and you'll see what i mean as we go through it but we're going to need to set up our own server.js file and we're going to start out with the markup that they give in the next readme file so you'll be able to follow along if you check out the github repo for next js uh it'll be i don't remember what section it's in but i'll show you all in a minute so first let me tell you i don't know if everyone caught my tweet yesterday but i had a bunch of meetings and one of the meetings the last one of the day was about this project that we're working on so i just want to bring everybody up to speed on what what was decided what was was said uh at the meeting so i am hopefully soon i was hoping i'd get it today but i wasn't really realistic but i will have access uh to the the server where all the content for the the current main site franciscan.edu is so i should have access and then my colleague uh brian sizemore um who recently became our full stack developer uh will uh we'll both have access so we're going to check that out see what's going on because neither one of us really have any idea how things are structured so that should give us a much better idea of what we're dealing with and then we can go forward with the best way to handle that data so that's in the works and we're just waiting on our our accounts we're going to get as i said on the react side of things we're going to get our routing set up and then we'll set up some templates for the different page types that we'll have so they'll only be a few different let's say like templates if you were so uh to templates and it should make it should make things pretty simple if you were to look at the file structure but there's going to be a lot of different you know combinations of content that will be possible so the site to the user is going to look pretty big but we're gonna try to keep it as simple as possible uh in our our file structure for uh our react project the content management system will try to keep it as simple as possible as well but there's no way getting around the fact that there's going to be a ton of content we um oh another big part of this that i'd like us all to be thinking about because it's where i'd like to work on it it's something i've never done before so i was reading the article recently i'll bring it up alright so let me see apollo i can't remember all the the terminology okay so apollo um they're dev blog so apollo uh lets you work with graphql so we worked with it before i think on our last project um they're talking about what they call a uh a gateway uh graphql gateway so it seems like for them this is like a prepackaged kind of like product right i don't know that we'll actually use this or that it's ready for production yet but i i read the article a while ago so i'm not i'm going a bit from memory here so basically what it will do is it's gonna sit uh between our content management system so imagine i should have like drawn up a sketch of this hopefully you all understand let me know if i'm making no sense here and i need to just show you uh like a diagram but basically we have our content management system our database over here we have our user's way over here right our client right so the data is right now what we've been doing is the data goes from the content management system through graphql api that that's on the content management system right so we've done a wordpress plugin and it goes right to our react site so it goes to our servers we're running you know node on the servers and then it goes directly to the user what i want to do is to have a server in between so which would be this graphql gateway as as it's called in in this article from apollo so the gateway would stitch together different endpoints so like we could have the wordpress api and then we could have data from a bunch of other different places bring them all together and then piece them together on this gateway in whatever format we wanted so that we could make one api call back to the gateway and request resources from multiple sources right but it'll all come together and be sent as if it were just from one source and that gateway won't just stitch them together it will also cache a lot of the the calls as well so that's what i'd like to do i think it could simplify things a lot and really allow us to i mean let's let's say for example we're using one system to manage our events and we want to show the events on our page well we'll grab the data from the events through whatever api that this events thing comes with well what if we switch to a different system potentially we would have to go back and change how we're doing our api calls on our on the react side of things right right from our probably from our server.js file or so depending on how we have it we have to change it there well what if instead we had that gateway we don't have to change anything in our react apps all we have to do is just make sure in the gateway that it's calling to the right place uh i think that would we're adding another piece but i think ultimately it would simplify things and that we would we wouldn't have to touch our our react application which will be um reproduced you know to be copied among multiple servers and we'll be using load balancing so it wouldn't be just changing it on one it would be changing it on all those um you know in all those places i don't know let me know what you all think if you need more info uh i guess i could link let me put the link to the article in the live chat now and um if you're watching this later on and you want the link as well just put something in the comments and then i'll i'll put the link in i'm not going to bother with if nobody's interested but just let me know and um and you you can read a little bit about you know about how i want to do this it's not necessary for the project to work we've done it before you know where it's worked without that but i think it would be nice to have uh so i'm not gonna say it's it's not on the wish list you know wishlist things are like stuff that probably is not gonna happen unless we have a bunch of free time when does that ever happen right um so it's it's not at that level i would say it's a little bit more important to me than than wishlist right now so anyway if anybody's interested in that if you take a look at the uh the article and think like hey i've done that before or uh or you want to learn more about it you know let me know i'd love to uh to talk to you more about it and and see if you all think that that's a good idea or if i'm if i'm crazy and we don't need anything like that all right um i'm talking a lot at the beginning of the session but i haven't streamed for a long time so i need to make sure we we're all caught up a couple of pull requests just fix some bugs and things so um you could check that out i think we remember three pull requests this morning uh all from harshit so uh fix some bugs updated packages and uh updated the readme and our contributing dot md files so uh you can take a look at those if you want just the last three that have been have been been in there i think it's like 25 26 27 something like that for for the pr numbers uh the last thing i want to say is this will be my last stream of the week tomorrow is thanksgiving here in the united states so happy thanksgiving to everyone that will be celebrating that so i won't be streaming tomorrow i also have the next day off which is friday and then on sunday i fly down to nashville and i have the november conference on monday and tuesday wednesday i'll fly back sometime on wednesday so i won't stream wednesday either so i won't be back until thursday so i don't know what the internet's going to be like at the november conference it would be cool if i could do some sort of stream or video from there but i can't guarantee anything and you know until i see what the internet's like uh maybe i might be able to pull off some sort of like instagram live stream video those usually don't take you don't need as good a connection to do something like that it seems like um so i know a lot of you already follow me on instagram but if you're on there and you want to maybe i'll do some like live shots of the uh of the conference um but whatever i mean whatever you all think might be interesting uh for me to show you at the conference let me know and i'll do that also my talk is going to be about my live streams so i mean my talk's pretty much it's set it's done but if i'd like to get if i talk really fast and i get done with my talk early i think it would be cool to have some stories or like examples of cool things that have happened with with the the live coding sessions so i've been going back through some of the live chats and the comments and and trying to remember some of the cool things that have happened and i'm just going to have kind of a list of them ready to go uh so that i can share those with everyone so if you have anything memorable to say about these streams or if there's something especially something you you haven't told me before if they've impacted your life or your coding in in any type of way you know meaningful or trivial please let me know and then they say maybe if i have time uh i'll i'll bring it up in my in my talk and uh yeah so that i thought that that might be kind of cool i thought people might like to hear like some some actual stories of um of from you all from watching the um watching the stream so anyway enough with the talking i could see uh when i talk i usually uh lose viewers so let's get to the coding all right we will this whoops let me switch to the right view here almost started coding without showing the code all right so now you should be able to see the code um let's see okay uh blake is asking if we're using next js or gatsby we have switched to next js so we're using next um as in the for the foreseeable future we're using next uh maybe i mean we have time to switch to something else we got a couple of months for this project we're still early on so i'm not saying it's for sure 100 gonna be next but it's looking like that right now uh below us if i'm feeling better uh i am feeling better i'm not a hundred percent yet but i'm feeling a lot better so um i think maybe another day or two i'll be i'll be 100 back to normal uh which is glad i was not i did really didn't want to fly and have to give a talk at a conference if i was sick so it doesn't look like it's going to happen now that should be good all right so first thing we need to do is make a server.js file and let me uh uh too many folders open here all right this will simplify things all right so we want to add this new file server.js and i'm going to bring over so right now i'm just going to copy and paste what's in the next docs so just their example we'll definitely want to edit this but we can go through this now and see see what's going on so okay make sure syntax is you paddle with carrying the version you're running okay let's get rid of these we don't need these comments anymore um the part that we're really gonna edit a lot is gonna be this part down here it's been a few months since i've done this with next and as always i haven't really done that much with it before the stream so so we're going to be going through this um together this tells the first question all right so this actually looks a little bit different than i remember doing it before but we should still be good uh oh if you do want to follow along in the the next documentation uh the section is called custom server and routing so oh actually i think i found some different boilerplate code that may run better for us all right so we have two all right let me let me bring over this other code so i um we're going to bring in some other code that's basically just going to do some of the other things for us that we want to do it's going to speed things up quite a bit so this is basically the same as we had before but in addition this has our our caching so our server side render caching this should look familiar if you remember how we did this on um project one i think it was project one that we did this right so next does serverside rendering and in this case what we can do then is those pages it'll it'll keep the pages the actual html it'll save them in this case for an hour so that when a request comes in it doesn't have to redo everything right it's not rerendering everything it just sends it which is really nice uh it's going to be a lot faster right it doesn't have to make all the same api calls again to get the data it's there um so you can see it takes i mean it's just not a lot of code 70 lines total but you know it saves a lot of typing uh that we have that we've gotten that example code here okay and what it also has in here um is we're using a few things that we didn't have before right so express uh this lru cache right so we're gonna need to make sure that let's double check what we need to bring in in terms of packages yeah so i think we will need to bring in express and the lru cache let's double check our package json let's just see what we have yeah and we don't have that so first thing we need to do is bring that in oops there it is so let's go yarn add express and lru cash um so i did on what was it monday i did that kind of like quiet live uh coding session on my own channel because i was still feeling pretty sick uh let me know what you all think about that is that worth it to do those occasionally uh was it really boring was it useful i mean i did try to explain things a little bit so it wasn't completely quiet but um if if you found it helpful you know i could do some stuff like that for some of these other projects that i don't usually stream for this stream um you know let me know so i do work on some other things that i you know they're just not they're not really big projects so uh that might be a better format to um to live stream some of that okay so we have these now so this should work and let's see okay cool uh blake blake and rook liked it said maybe do this in the morning yeah that's what i was thinking maybe in the morning i can do that and um it's not really a lot of extra work for me i don't make thumbnails for those videos i i just um it's a lot less work to try to set it up and i can just kind of start it and and go it's it's pretty easy so um i like to be a little bit more professional for the free code cam channel on my own channel i don't i don't care as much okay all right here we go great i was looking for this part so i mentioned parameterized routing and that's so there were two main things that i wanted it from this custom server that we really needed you know otherwise it's like why bother we already have browning built into next but the two things are the server side caching which we just looked at and i guess we really didn't explain it all but we could go through that in just a minute uh and then also this parameterized routing which basically means we can go here and have if we have a route that says it will be franciscan.edu blog then whatever comes after the blog will be the id and that will actually get passed to our component we'll put we're not going to have a blog in here but let's just pretend like we are so in our in our pages file where that's where normally the routes would go right every page would be its own route it's still going to be like that but if you go to the blog page we'll grab that id and we'll be able to use that id to pull in the right data so think of like how we use the slugs in our last that bulletin project to get the the name of the post that we wanted uh from graphql so we'll be able to pull that data and then fill the page in with that data so the one page the blog page so the blog component will be able to be used for potentially hundreds of pages depending on how much content we have and we only need one component which is awesome uh so that's that's what we want and we'll have we won't just have blogs we'll have you know all different things i've done this before where we've had another page for search and depending on you know what came after that was essentially your search query um so there's a lot of different possibilities of what you could do for now we're going to keep it simple and we're just going to have a test component just to make sure it's working i'll probably change it from blog because we're not going to have a blog so um i'll have to just give it a minute and think about something that we're likely to have maybe maybe departments no not what are they not departments um faculty i for sure i'm pretty sure we're gonna have pages for each faculty member you know with like a picture and a little bit of text uh maybe like links to some videos we have of them or some publications that they've they've written um yeah let's change that now then so we're going to call this faculty you see ulti all right so we're going to have a component called faculty it's going to be super basic for now just to prove our point about what's going on uh so quickly and i totally forgot to start my timer let me do that now uh so quickly let's just go through we've gone through this already so we're fine um but basically what what'll happen is so we're rendering for so for each page so if if we get nothing just the slash right then that's obviously the home page that's still going to render index.js but it's going to render and cache right so let's go through the flow of when a user comes comes in so user goes to the homepage franciscan.edu it calls render and cache which i believe is down here so when it calls render and cache we're going to check to see if that key already exists if we already have the key then let's see if we have key return it's going to lock so we'll be able to see we're logging console logging cache hit right so it's just going to serve from the cache if not then it is actually going to render the page so we're going to render to html we're going to render that page but then we're going going to set the cache key and the html so that the next time we won't rerender so um that's it it's it's actually it's pretty simple you know to to go through it all that's our cash right we're going to have cashing at different levels we're going to run a cdn they'll be caching there we're probably going to do caching on the the cms side of things as well so the goal is to make things as fast as possible for the user and to reduce the load on our servers as much as possible and caching is going to be one way that we do that okay now let's say a user goes to a page that's faculty slash and let's just i'll use my name faculty slash you know jesse weigel they would be directed to um well for the user's perspective they would be directed to that page they'd see my picture and lots of awesome stuff about me but in the background what's happening is these query params are going to be used to grab the right data right from our our apis and then that page will either be rendered if it's not already in the cache or it will just be served right from from the cash so that's about it otherwise if the page is not the home page and it's not the faculty page if it's anything else it's just going to get handled like a normal page so it'll fall back to you know is it a page in here uh if not do we have a an error page set up i don't know if we do or not i'm not sure if we have an error page set up so um basically if it's not a valid route it'll throw it'll just have a you know a four foot error page we'll try to make it look as nice as possible um or it'll just fall back on you know this routing where whatever's in the pages folder will be there uh notice though it does not have the rendering cache set up so i have to see we may end up trying to set this up though i think i did set it up that it would render in cash on all the other routes as well um so i'll have to check on that i'll check back to a previous project and see if we set that up or not okay so that's that's it that's how our server is going to work we'll probably end up adding more to it uh as as things go on anything that should trigger me to change okay so let me show that saved and let's let's make a faculty component so let's grab yeah let's just grab page.js page.js and let's make a new file we'll call this faculty so now we're going to have faculty.js and what we're going to do is let's go with let's just print out um the id so how do we let me see is it this props should i think how we're we're setting these actually let me just save this for now and then i'll just uh use react inspector to figure out i can't remember how we grab the id uh for right now so all right all right so this should should work we don't have crazy errors right now so that's a good sign faculty slash jesse what should work faculty that's weird let's see i may have to go back and check to see what we did in uh project one yeah let me bring up i already have github open on my other screen so let me check on project one for a second i really need to upload an icon for our fus marcom github organization it still just has the default that it came with when i uh when i started it all right so that was the ci react repo so if anybody wants to follow along that's where i'm at so i need to check out the pages and our single event page should work i'll pull this over on on this screen um let me make this bigger how did we bring this in before oh now i remember okay so we were bringing in our um we're bringing it in this way okay uh so we're using get initial props which lets us make api calls and uh server or client side api calls and that's where we brought in our our query query id okay all right that makes a lot more sense okay so let's see let's just bring how am i gonna pull this in otherwise all right let me check my time okay actually did i yeah i'm gonna stick with this timer i know i started a bit late but let me just stick with that um all right let me check the docs for this um just quickly because i don't want to go through all of this with api calls right now so all right all right so i'm checking in the in the next js repo under examples the server side caching example and i'm going to check how they did their blog component okay good the example basically does exactly what i'm trying to do here so what i'm going to do i'm going to copy their example and let's see sticky knife oops no i don't want that where is uh there we go all right let's do this we'll bring in some of the markup and let's change this this div to layout okay this props id all right so here's what we're getting so we're still going to use our get initial props we're just not making any calls we're just going to you know return this so anything that's returned from get initial props goes into the props for that component so we can access it at this props dot id so what will happen i mean i'm just going to leave this text here even though we know it's not a blog post but what will happen then is we should be able to see whatever we type in after faculty should show up here and let's make sure export defaults uh i think i did not grab the rights i didn't grab enough uh semicolons here there we go there we go now i have the right amount um i need to take out this and we're already exporting here let's go um sorry i've too many windows open i'm trying to find the example code i was using yes all right i think i found it oops all right here's what i'm confused about um how am i going to incorporate this with root into this page let's see yes all right let's it should work um yeah that should work like that all right we'll give it a shot okay already an improvement here so that's good now let's try out no 404 oh you know what let's restart the server and actually i i'm probably gonna need to change i'm gonna need to change our um how we start this i think i'm forgetting an important part of this so yeah we're still getting the 404 uh because we're not um so we're not changing let's see so we need to bring in we need to change a little bit about how we're doing our our um starting everything up so for our dev instead of running next we're going to run node server.js so that's going to start our server then from our server from our server then next is going to start at some point next is gonna do its thing right we'll bring it in up here and there we go so our app is next okay yeah so that's where next is going to come into play so we're not just going to start it automatically uh it's going to start through the um through our server.js oops let's go to our package.json again we also have to change our start command so it's almost the same as our dev command now but what we need is to set the environment to production so we have that node and production and then nodeserver.js so back in our server.js file see it checks to make sure what the environment is right so there's certain things you you don't really want to do in a development environment that you would want to do in production so one of these things is i don't really care about caching in our development environment so i think what i've done before and so if it's not already built into this example uh which i have to double check what we'll do is we can disable the caching if if dev is true okay and i believe that's all we'll need to do for this to work so let me make sure i save this i'm going to save that and then now we will stop this and run yarn dev again and it should look a bit different there we go so there we go so we can see uh we have a cache hit now so this is my jesse blog post right so my free code can't blog post we can type in anything you want there uh so it works yay all right all right so since we got to that point and it works i'm just gonna start our short break which i can't believe i got it to work that fast i mean to be honest with you i usually expect i expect me to mess up more than i did uh all right so that's cool it did work so let me take my short break now i'll go through the live chat and uh see what you are saying and try to answer any questions you have and then let's decide if we want to do something else if we want to call it a day or or what and i do have a question for you as well let me ask this question i know i asked some questions earlier but um so to reiterate the one question if you have anything cool about this stream some good impact it's had on your coding or your life or anything like that or a good experience you had interacting with people in the stream or with me please let me know and i might incorporate it into my talk at the november conference the second question i have is a so there's a recruiter on linkedin that's trying to get me to for this react contract job so it's like six months uh to do this react project i don't have a lot of details but has anybody ever gotten any recruiting stuff from v dart incorporated i don't know if they're legit or not so let me know if you've ever gotten anything from vdart is it a good deal or what um because i wouldn't mind taking on another project now especially you know it's christmas time it'd be cool to have a little extra money buy some stuff for the kids so if it's legit maybe i'll maybe i'll say yes um i did get um i did get an uh an official rate like offer uh via email so i'm i'm okay with their the hourly rate um anyway so let's see all right so hey everybody there's a lot of people saying hi at the beginning oh cool satya said i actually started learning react after watching your live sessions that's really cool you know i've had a few people that uh that have said that and um i mean reacts already open source but if it wasn't and it was a paid product i would definitely try to get like a commission for everybody that's starting to learn it i officially make no money off of these live streams uh any any endorsements i give or it's my own and i'm not getting paid for it although if someone wants me to endorse their product for money let me know because i might be all right with that rook says have you used font ligatures and what do you think of them okay font ligatures that sounds familiar to me but i can you explain a little bit more um maybe jog my memory because i like yeah i need a little bit more info my answer is probably going to be i don't know enough about that to even answer that question um but it's possible that i'm just forgetting um so anyway let me know rook um rook also asked does next js get mixed with react router i think you can use react router with next i think i actually looked that up once i can't remember what i found on it um actually no maybe you can't and yeah don't don't take this as for sure but i'm i'm pretty sure when i looked it up the answer was no you don't use next and react react router together but like i said i don't remember for sure what answer i found and you know maybe there's a way but i have never used react router and next together at the same time hey inn is here and it says hey um also asks if i'm okay um yeah i'm okay i'm feeling a lot better i'm not back to back to normal yet but i'm so much better than i was but uh so thank you for asking um ajax says um yo jesse what is the free code cam beta page called so i can get all new practice exercises oh and blake posted the link in there okay so um hopefully that that link worked for you um oh shoot blake reminded me about the ngrok oh no all right let me start up ngrok right now so sorry so sorry i even had it i had it on the screen ready all right let's get this i can't believe i forgot that i was explaining to people in the meeting about this project yesterday what ngrok was and um how how we use it and then i just forgot all right cool the links in the live chat now so sorry about that um really though i mean it would have been weird to run it because we had to restart the servers and everything a few times so we would have only had to restart once if i had known what i was doing and hadn't forgotten to change the startup script okay you know i'm gonna have to check out that beta version of free code i i checked it out a long time ago but i'm sure it's come so far since then and blake even mentions an alpha version of free code camp's lesson so i need to do that i've always wanted to go through and finish my free code camp stuff i just been too busy to do it like skill wise i there's no doubt i could make it through the rest of the the front end portion i mean we do more complicated things here on the stream uh it'd be cool just to get the certificate you know uh and i could probably make it through a lot of the other stuff as well we'd be going into some uncharted territory for me but now i'm thinking should i try or should i just wait and do the new curriculum um so i don't know i think i might i might wait uh we'll see although my wife's doing the free code camp curriculum like the current curriculum right now if she passes me up i might have to start doing it again because i can't have her asking me for help and me not knowing what to do right she's actually going pretty fast through it so she just finished her um well she was working on her weather app so if any of you have done that project uh i get you you'll probably remember let's see i know my timer uh went off but i only have a few more things in the live chat so let me just get through them and then we'll figure out what we're doing next let's see okay rook i see that you're giving me the answer to my issue here with um with our component about setting our you know our export class and everything so sorry i didn't look over there i i asked about it and then didn't didn't look at the live chat so you're entirely right let's see andrew says hey jesse i always see the videos after live streams cool seeing it live awesome i'm glad that you're here live with us feel free to you know say comment or ask questions in in the live chat let's see oh cool rook said also started to learn react after watching your live streams it's great awesome uh let's see in goosemax says afternoon jesse good afternoon thanks for joining us and oh cool blake blake asks how my my wife is rebecca um she's doing all right some of you have if you've been watching a live stream you might know uh she's have been having a lot of health issues over the last year um so she still she she was just at the doctor's yesterday and i got to go pick up some medicine for her after this so i don't know hopefully that the doctors are on the right track and she'll be she'll be back to normal uh but it's been tough it's been a tough it's been a tough year for my wife uh so anyway i appreciate you asking about her but she really is is liking coding and uh she's getting excited about it and oh she actually met with so uh the woman who started and is in charge of um i think like women can code pittsburgh i think that's what it's called uh my wife went up to pittsburgh to meet with her uh today so they had that meeting this morning i haven't talked to her about it but that's cool so i was really happy about that she's getting involved and um you know with coding and with some some local coding groups so anyway i'm i'm happy for i'm i'm really excited and uh yes and i'm i'm hopeful about she's going to be on some new medication um so a couple of the one medication i'm going to pick up today and there's another medication i don't think will be ready until next week and then she has to have some more testing done as well uh so it's a lot but i have good health insurance so i'm really happy for that that's a good the university i work for does provide good health insurance um compared with other universities that are our size it's definitely better than most so anyway um yeah so thank you you know everybody for your concern and uh so i i really appreciate that and who knows you maybe um maybe she'll be doing her own project someday and i can uh i can give you guys a link to her videos oh blake says you retweet her on twitter i think yeah i do i retweet her um yeah so she's not she doesn't really have like uh as many followers on twitter build up so i'm trying to get her her stuff out there and kind of give her some encouragement when she does coding stuff and puts it on twitter so and that's how she met the she's been meeting and talking with a lot of other women who code on on twitter so uh something that's been good for uh let's see happy dave rob says happy day before turkey day yeah um ingo's matt says are you liking next js better than vanilla react slash create react app okay so um yeah that's a really good question so react um i started the first time i ever tried to use react i did use create react app and that was pretty early on um i didn't like it as much then then i built a couple of sites with next js and i love next it was really cool uh there were some issues that i found like somewhat annoying but a lot of them as i worked with it they updated next and took care of those issues so uh that was it was kind of nice that you know they were they updated frequently then i went back and used create react app on some things here on the stream and then as well in my my react nanodegree courses and i really liked it so now going back to next it's a little weird for me i'm having to like get used to the next way of doing things again so i like both but for different things so i'll say if i need serverside rendering i prefer next but if i don't need to worry about server side rendering i prefer create react app i prefer that uh also pairing that with react router and redux if necessary uh i actually like that better so it just depends on the use case uh but they're both really great i think if if you wanted to start out either way would be fine uh they're both pretty easy to use but create react app seems like i said if you don't need server side rendering to me it's it's just a little bit more simple and i like working with react router uh and redux redux was a pain to learn but it's really nice once you kind of get the hang of it and i'm no expert in redux but i know enough to build things that work with it and i really like it although you probably could use redux with neck so i don't want to make it seem like you can't use redux with next i just have never done it okay john hanson says jesse got me going on react uh learning a lot thanks jesse you you're welcome i didn't realize i had so many people uh learning react that's really cool uh rob says sorry to hear about your wife hope she gets well soon thanks rob i appreciate it um dimitar says hi jesse i'm learning node.js i was into java spring boot but now i am working and learning with node.js do you think that i will get on well with that cheers oh i mean i don't i i think node is is pretty easy to to learn it i mean it has been for me and and i'm not i haven't done a lot with node i've you know set up basic servers file upload things um you know handling forms um trying to think you know it's really kind of basic stuff but i don't think it's too hard so i mean i haven't really worked with you or seen your your work but um i think you you ought to do fine if you have experience with you know with other um uh frameworks or um other languages right saying like java spring boot right i think you'll be fine uh with node it's just gonna be concepts should be somewhat similar syntax will be a little bit different but no doubt i think anybody that's learned does some decent learning and any other type of programming would be fine to pick up node and and you know with a little work um you know become good with it let's see englishmen says redux confuses me it confused me so much at first so much um yeah actually i'm gonna do maybe i'll try to do it today i really want to do the uh the video review of the udacity nano react nanodegree um yeah and i want to explain about my experienced learning react in that or learning redux in that course um so i mean just a little preview of it there are three projects you have to do the first one does not involve redux the second one does and the third one redux is optional the second project took so much longer than either of the other projects because i had to learn redux and use it and i ended up using redux in the third project but because i had already learned it it was so easy to implement but i found project 2 to be so much harder than project three project three was with react native so i don't know how they can if they meant it to be like that or if there's some way they can kind of change things up but normally you would expect the last project to be the most difficult but that was not the case for me and i'm not sure if other people had a similar experience but um that was kind of the only surprising thing for me was that the final project just seemed a lot easier uh than than the redux the redux project okay so i've gotten to the bottom of the live chat so at this point let's see there's not a whole lot of viewers still still around we haven't been streaming for that long so i'm open to doing some more um but basically we've done we've completed everything that i wanted to do for this stream um and we've had a decent question and answer period um let me let me commit these uh i'm gonna commit them while we're on the stream all these changes so i don't forget and then if it'll be a nice example of how to commit your changes with get let's do a git status and then i think after that i'm just gonna you know finish up the stream even though it's a bit shorter of a video than normal oops it's status okay so let's see we've added we've modified package json yarn lock which is expected we've added this faculty.js and we've added server.js so this is exactly uh as expected so let's go ahead and do a git add and then a dot for all and then we'll do a git commit and then we'll use an m flag for message commit message and let's say ads add custom server yeah that's that's a good a decent commit message i guess so it's going to run all the tests now hopefully i didn't do things that would break uh my breaking the test link is defined but never used oh okay that's an easy one to fix let's just remove that uh and i am using all the other stuff okay let's try it again i'm a little worried about if it'll pass all the tests with the server set up differently i'm not sure though because harship did all the tests so cool it looks like it works right and we did not write a test for our faculty page so that's something that we will need to do if you notice we only tested index and page two so we'll need a test for that if anybody likes writing tests you know take a shot at it otherwise maybe we'll do it in a future stream and get push origin so we're gonna when we get push uh we've already set up our github repo in a earlier stream so um when we push it's it's going to our repo and that's our franciscan react repo the link to that is in the description if you're interested in checking it out all right uh so i'm gonna check the live chat just one more time see if there's any more questions um vasudev asks hey will there be any project on angular 2 using mongodb um i don't know so there's someone else on the free code cam channel is is currently doing um an angular video so they did one video i don't know how many other videos are going to come out so i don't know what's planned for that so i really i can't answer that um in terms of we are using our last project was it project four i think we're using for that uh is that the one yeah i think that's the one where we're doing some some user and we have some user credentials and things and we may be working more with with uh in the future and future streams as well i i can't say for sure though i'm definitely not working with angular anytime soon not because i don't like angular it's just generally for most the projects here where i work we use we use react it wouldn't really make much sense to throw in an angular project it'd just be a lot more to learn and maintain uh english matches are using mocha um let's see let me let me show the package json here and just so you can see how we have all our tests going so um so yeah so we actually have chai uh and mocha and we're using jest uh so we have um unit tests and we have endtoend tests so we have a lot going on here uh which is awesome um so here's kind of our dependencies right now and you can check this out in the repo as well yourself and then here's how we have our setting our test set up uh so we have them separated out and then you could also just run test and it'll do both of them and then it's it's mixed into our precommit so when you go to commit it runs all the tests as well yeah so if anybody's interested and if you like if you you use mocha or jess you know or whatever we're using and you want to you know contribute i'd really i'd appreciate that uh but i need to get to learn these more myself so uh if i need to write some tests that will probably be good for me as well um okay cool one last thing i think i saw and then we'll wrap things up john hanson says all the best at thanksgiving to you and your family uh thanks john uh to you you too as well um yeah and and um happy thanksgiving to everyone here who will be celebrating and um to those who aren't have a great week uh you probably probably won't hear back from me and probably won't have a live stream you know here uh working on this project till thursday till next thursday assuming that i don't have a million things to do when i get back uh i think i'll be able to stream thursday afternoon so see you then otherwise uh i'll try to put some stuff up maybe on instagram and twitter um from the conference uh from november i don't think my talk's gonna be live streams um i'm hoping that it will be recorded and at least put up on youtube at some point uh but if if not uh then maybe i'll uh i'll do turn it into my own youtube video at some point and then everyone can see it uh in case you you can't come to the conference all right let me i'm always searching for the button to stop streaming it's a big red button you think it'd be easier for me to find anyway have a great week you all thank you so much for all your help and happy thanksgiving