hello everybody and welcome to another video today i would like to show you with you how to create this game game of life with angularjs as you can see it randomly starts and it also has some buttons like a start stop and clear and the generations this game is from freecode.com there are several user cases or user stories and uh you'll see how to complete each one of these there is also a wikipedia link that gives you all the instructions and say rules there are several rules and actually it took me one or two days to read and understand everything so then i will be able to code it i'm not gonna get into a lot of details about the the rules right now but you will see me later that we will discuss some of them now i'm only using uh angularjs and it's not bootstrap as they usually do and i will create this project in codepen uh i will leave in the description box the code for uh the codepen and also i will share it on github too so if you can see very clear what am i typing or uh you know if you want to reread it you can also search it in my codeban or in github i will create writing the html and i've already written the div ng up game of life and ng controller game of life controller then i'm going to start writing a table and inside there i'm going to have an ng repeat roll in rows and after that an ng click and the ng click will be activate which will be a class and it will have the parameter rows dot index off row and index continue with a nenji repeats call in row.course call is for column and last but not least include an ng class i will name i will name my variable board call dot active equals one and call and old column dot active greater than one and that is my table uh you won't be able to see it right now we will first have to write some css code and then some javascript code to give it some functionality all right i think now you're good with the table yes so let's keep going with the patterns first i'm going to write a class components that you will style later in the css and then for the three buttons i'm going to create an ng click and inside there i'm going to have a function the first one will be stop with the name stop another one will be start with the parameter false and the third pattern will be clear with the name clear and another one thing that you are going to need is the generation and just give it a parameter generations all right we are done with the html and uh let's go to css we're going we're not going to write a lot of things just the basics and of course then you can style it however you like it we're going to have a table t htt with border one pixel solid black and border columns uh will be columns then the table i'm going to give it a margin audio and in this way it will be in the center of our screen you can add a background color in my case will be white smoke but you can adjust it to your preferences i'm also going to continue with the td and i'm going to give a width and a height all right just give the class new a background color of orange and then the old the background color of boring straights i think my last class will be components and it's about the buttons and the generation i'm just going to give the basic stylings and now you're ready to focus on the javascript so the javascript here is going to be a little bit longer than it usually is at least in the other africa pen uh sorry free code camp challenges because here there are many many rules i'm going to just read some of the tools from wikipedia the game of life is made by the by conway is a mathematician so let me give you a short description of what is that we are building right now um so far i created the grids with rows and columns and now i would like to mention that any live cell with fewer than two live neighbors dies as if it caused by antipopulation two any leave cell with two or three life neighbors lives in the next generation three any live cell with more than three life neighbors dies as if by overpopulation and for any dead cell with exactly three live neighbors becomes a live cell as if by reproduction the initial pattern constitutes the seed of the system the first generation is created by applying the above rule simultaneously to every self in the seeds births and deaths occur simultaneously and the discrete moment at which this happens is sometimes called a take the rules continue to be applied repeatedly to create further generations if you search over the internet uh you will see that there are a couple of algorithms that can um describe what we are trying to do here in javascript and it will be very helpful to take a look at some of these algorithms as i mentioned in the beginning of this video it took me a lot of hours to understand every rule and then figure out how exactly i was going to to write them all right some basic things about angular 2 the ng app that we used in the html is a directive that tells angularjs that this is the root element of the application and all angular applications must have a root element then the controller directive defines the controller of course so let's focus now clearly on the javascript part we're generating the seeds which means that that we're going to create a function with the name random seeds inside there i'm going to have a for loop ver i equals 0 i smaller than row marks called marks divided by 2 and i plus plus inside there i'm going to have another variable with the name row and now i'm going to have the math tote floor math.rondo and row max minus one i'm going to do the same for columns okay i started writing the function counts live live neighbors once again the name will be check neighbors the function will have two parameters row and co i'm going to have a variable count equals 0 then a 4 loop with var i equals rho minus 1 and i rho plus 1 i plus plus another for loop with the j for columns and inside there i'm going to have an if statement if i is different than rho or j is different than colu and and scope dot rows i plus sorry and scope dot rose i don't cause j then i'm going to need another if statement let me write everything here correctly and i'm going to continue with the if statement all right now you can see also the grid system so if scope to throws i don't calls j dot octave is greater or equal than one then count plus plus and in the end you wanna to return your count variable all right i'm just checking to make sure everything is works fine and i think that it's great so now i'm going to continue with some other functions uh all right scope dot stop game equals function and then inside there the only thing i want is the interval dot console in terrible all right that looks good i don't need anything else and let's continue with the activate scope.activate equals function and in the parenthesis write row and call scope dot rows row dot calls call dot active equals one and we are ready with this function also now var interval scope dot start game equals function random so now you start writing a random function which is really important maybe it's the most important uh function of this game scope to generation equals zero if random random seeds and tradum seeds is another function so interval equals dollar interval function and open brackets inside these brackets we're going to have scope dot generation plus plus and then we need two four loops the first one will be for the rows and the next one of course for columns adjust your parameters all right and inside there we're going to have a variable another variable i'm sorry for this so far know of neighbors equals check neighbors i j and then scope dodge rose i don't calls j dot neighbors equals no of neighbors all right we will continue one more time with two more four loops the parameters here are the same as above so you can just copy and paste them and of course we will have some if statements in the first if statement you will need a dollar scope dot rows high dot cos j dot active greater f1 and inside there open your brackets again and try if scope two throws i don't calls j dodge neighbors is greater or equal to four or scope to throws i dot calls j dodge neighbors is smaller than one then open brackets and write once again scope.chose i dot course j dot active equals zero now you need an else statement scope dot rows i dot course j dot active plus plus and another else statement which will include an if statement and i will and it will be scope dot choice i calls j neighbors equals equals three and scope dot rows i dot cos j dot octave equals one all right now i'm going to to finish this function and then we'll find uh the mistake but i think i know where it is but let's just be sure it must be a bracket that i forgot to close let me check it yes here it is uh the else statement should have uh also brackets that i that i forgot to read great now let's continue with the start game in the html code we write the start with the parameter false but now i'm going to do it scope.start equals true and then i'm going to have the clear function so we will need once again two for loops with our usual parameters of columns and of rows and columns and inside there just write scope dot rows i don't call j dot octave equals zero all right and that's it guys i hope that you like this game and i know that the rules are quite complicated that's why um i mentioned that you should go to wikipedia or to any other website and search for the algorithm algorithms some codes or some examples try to play this game and this will help you to better understand it so now we can see the generation we can use uh the board we can click on it then we have the three buttons the clear one that it clears everything and of course you can refresh the website and see one more time how this game is thank you very much for watching have a great day and if you like this video please share and subscribe thank you very much you