I'm Quincy Larson teacher and founder of freeo Camp each week we're talking to developers entrepreneurs and ambitious people who are getting into Tech and today we are thrilled to welcome PA borgan great to be here yeah and and uh we are so excited to have you here of course per is the founder of scrimba he is a software engineer turned Tech founder uh who's gone through like y combinator runs a very popular website uh that teaches coding we published many of those courses on the free code Camp YouTube channel and I'm just thrilled to sit down and talk with you because we've never had you on the on the podcast yet after more than 100 episodes so it feels like a bit of an Omission yeah also just note that I'm recovering from like a pretty serious cough that had me like completely debilitated for like a week so if I have a coughing fit or anything uh just know that I'm fine I'm just Echoes of my previous Illness but um per where where you are are are you over in Oslo right now yes we are based uh here out of Oslo where the founding team is from and and where yeah we all live awesome well I'm very interested as an American uh in you know I'm I'm from Scandinavia originally my family came over from Sweden which I know is different from Norway but uh I'm I'm always very interested in in that kind of region you know the land of Vikings and uh I know that Norway is a very small country but it's a it's a very influential country on the world stage and it has a ton of natural beauty so I have to ask what was it like growing up in Norway so uh I'm from the capital uh Oslo uh from the city so to be honest I don't I I I never really went to the the most beautiful places uh until I was uh an adult or not not not much at least but uh of course it's it's a great place to live uh good uh good good system uh welfare system but but with freedom as well and with uh skiing and nature and yeah great place you should you should come and visit us awesome it's definitely on my bucket list of places to visit uh so how would you compare like the Norwegian Tech scene uh with San Francisco in Silicon Valley where I know you've spent quite a bit of time over these past few years yeah so it's um much smaller of course and it's it's quite um it's less ambitious I would say or at least when I started out uh as a founder and like 10 years ago or so uh there was a lot fewer startups and every time we I've gone to San Francisco have been been coming back super pumped and and twice as ambitious uh which is a sometimes a good thing other other uh at other times it's uh you want to be a bit more frugal and care about the fundamentals and and the next step and not the big dream so um I think we've kind of with scrim bot tried to struck a balance between being inspired a little bit by the the American ambition and and also by by the like uh down toe uh way of running companies in Norway but it is changing it it's becoming more and more uh International startups out of scan or out of Norway Sweden has had many over the last decades but but Norway's been lagging a little bit behind but it it's it's getting better yeah yeah well Norway of course is like an economic Powerhouse like per capita GDP I think is maybe the highest in the world uh and a lot of that is because you all have all this abundant mineral wealth did uh did you hear about like the discovery of the massive phosphate reserves and some of these other Rare Earth minerals uh I think it was maybe off the coast so so I have this thing right now where I actually don't read the news it's kind of my my New Year's commitment where I try to stay away from the news because it just kills my productivity so I've heard a little bit about it but to be honest you probably know more about it than I do okay cool well that that's interesting so you completely cut the news out of your daytoday is that like a New Year's resolution yes that what I meant yeah resolution that's the word it is uh so because I just find that it's such a struggle to to stay productive with all the The Temptations out there H and and news and social media being the like the most important ones got to got to kind of make some rules for myself in order to stay away from it yeah I can definitely relate to that uh like I have kind of like tuned out a lot of the election related news here in the United States cuz I already know how I'm voting so it's not going to change anything so uh why spend a whole lot of time like going over the the Gory details of the you know Democratic process um I I realize that that may sound like a very privileged take but um I've got a lot of stuff to do and I can't be following the every uh the every unfolding of all these different uh you know drama that are that are going on I can just read about it in Wikipedia few years from now and figure out what the conclusion was without having to go along for the entire ride so yeah or like watch the evening news or something if a couple of times a week that's more that's what people did back in the good old days or good old it did like 20 years ago and that worked totally F pre social media days yes yeah so I'm very interested in delving into your background because you have a pretty unique background uh among Tech Founders and developers so you actually studied economics in college but then you went and you worked as a software developer for like five years maybe you can talk about how you got into coding and how you were able to get those those first few jobs as a developer maybe you can just kind of give us like an origin story if you will yeah so so I didn't work as a software developer for five years actually it was short than that it was like uh between one and two years after I I graduated from the boot camp and then um I've been coding at scrimba for like the last seven years here and there of course but but now now you go to a boot camp then yeah or it was a free peerto Paar driven boot camp in London so it was like no teachers and just a bunch of people thrown together uh who who um got a task every week like this week you're going to build a blog or an ecommerce site or whatever and it was our responsibility to learn from each other and help each other and kind of uh together build that that Weekly product it's called s like cool kind of what was it Founders and coders yeah I've heard Founders and coders yeah yeah and and that always like struck me because it's it's free and it's it's kind of peertopeer based it's very different from the conventional coding boot camp models that we had like in San Francisco for example um exactly so you hung out there with a bunch of other ambitious people who were trying to learn coding and essentially you kind of like selftaught in tandem yeah um I did that and that was kind of coming off the back of uh running a startup that failed uh with with the same cofounder that I started scrimba with a bit later but we we we tried to build like kids apps uh on iPhone and iPad and and books and old fairy tales and stuff like that we we did kids entertainment essentially um that failed um and I felt really almost at the time almost a bit stupid for not knowing how to code I felt like what am I doing in this tech industry and working with products if I really don't know how to like build uh anything or debug anything or fix anything so I just had a a strong urge to to learn to code H and that's so then I went uh to Founders and coders was fantastic and got a job at a startup when I came back to Oslo uh and worked there for uh a little over a year and then cindra and I kind of uh got the band back together and and and did another um startup attempt which just went uh went better yeah absolutely well that that's a really cool so it kind of like your your um I guess imposter syndrome as a Founder who couldn't code compelled you to like show that up so that you can code and of course now you code all the time and you've built out this skill set this developer mindset and actual kind of HandsOn understanding of implementation details of apps to the point that you even taught courses and things like that so uh yeah that's really cool maybe you can talk about your cofounder a little bit like how did you how did you two meet yeah so we met at um coworking space in Oslo when the the startup scene in Oslo was very small so it was a kind of the almost the only coworking space for Founders in OSA at the time and he was um he was working on his own project I was working with the kids books and we kind of realized that his skill set and um our and the business uh we me and we had a third Co cofounder that we had built at the time was very like complimentary so we kind of got together and and started that company and what's interesting is that he's he's a brilliant engineer like the best engineer I've worked with and he actually after uh the first company failed he went off and um worked on his own selfmade programming language and started Consulting with his own selfmade programming language which is like a terrible idea for the people he consults for because he was the only person who knew how to to write code in that language so he he then needed to um create documentation for that uh and started realizing that writing documentation is really boring so he started recording videos to teach people about this language which is called imba uh but just realizing or just trying to record videos he realized what a bad process it is for both the teachers and the students to record uh coding tutorials because as a teacher you have to like be really careful about setting up your system correctly about editing the video about making sure everything is polished about not talking yourself into a corner and there's tons of like uh adjacent skills that you need in addition to being like good at explaining things and uh once you've done all of that and spent like an hour creating like 10 minutes of of of a polish tutorial it ends up as a video which isn't interactive for the student either so it's it's kind of taken all the data and reduced it to dead pixels all the metadata so it's a bad experience for the student and for the teacher and that's what what made him like hm maybe we can make a coding tutorial in like video based coding tutorials in a better way and kind of rethink it from first principles and he did that and kind of invented the prototype for for scrimba which eventually then became yeah the company we are today yeah yeah and I I remember very early days like that I was just floored by this technology because it I mean at a fundamental level it wasn't anything technologically uh you know fancy it was just like what you said revisiting video from first principles and saying like hey why don't we you know sync up like this HTML with this audio essentially exactly and and for anybody out there who hasn't used scrimba you should go to scrimba and use it and just get a feel for how you press play sound starts playing you know slides can pop up and you can pause it at any point and and the actual Dom is being manipulated so that the code in the code edor editor is editable and you can just click play and it'll just keep going but you can pause it at any moment it it code is like unique in this perspective that like you couldn't do this if you were like having like uh maybe you could do it with like a video game system like where you like sync the video up uh like like speed demo archive like the old Quake demos they were literally coordinate data for where the person was like bunny hopping over and shoot rocket jumping and stuff and you could kind of pause it and you could you could like look around and stuff that's basically like what you did for coding in the sense that coding is just text and it's it's not that heavy and you can just render it in the Dom where it lives JavaScript is like the language of the web right so it's just like a web native I almost consider scrimba more of a dis a discovery than an invention in the sense that nobody thought to do it that way yeah but that's like cindra uh my cofounder he's he's the kind of guy who who really when he sees something broken he just like gets an urge to fix it and and then turn or rebuild it uh based on first principles and I think something you said there which is like the uh the weight of it h is key because a scrim is essentially just some tiny very very uh optimized pieces of data uh that uh kind of describe the changes that are happening in the Dom and makes it feel and look like a video H so so so kind of the bandwidth you need to watch a scrim compared to a video is like two orders of magnitude less which is part of the reason we've seen great success like all over the world in areas especially where the the internet internet access is slow yeah yeah because I I remember that was one of the big selling points of scrimber early on is like it's like 1% of a YouTube video in terms of bandwidth consumption and a lot of that is because video you're you're being very uh I guess uh imperative in the sense that you're telling every pixel what it's supposed to look like and yes there's like a compression algorithm and stuff like that but for the most part you're literally tracking like billions of pieces of data for like a short video right yeah um so it's inherently data intensive whereas yeah audio is a tiny fraction you know especially if you're using like uh like I think we use 96 kilobytes for our podcast for example 96 kilobit per second or something like that that's tiny that's like uh half a megabyte per minute uh video I mean once you add you and me on the screen and stuff it's probably like closer to I don't know 10 megabits per 10 megabytes per minute or something like that at least uh it just dramatically changes it so that was one of the huge killer uh I guess applications for scrimber early on was a lot of folks don't live in San Francisco where they have gigabit internet and it's trivial for them to like watch 4K video on YouTube or whatever right A lot of people are you know putting money onto a phone card on like a data plan so they can you know be able to text and and maybe read some textual articles like Wikipedia or something and make some phone calls and stuff and scrimba is something that is kind of within their budget like even if you are on one of those kinds of plans where where you're paying and and the data prices in some parts of the world are exorbitant but that's it is what they it is what it is right like you have to kind of adapt to that and so scrimba has represented like this huge windfall for people who don't have a lot of data yeah and and just as a final thing uh which we haven't actually leaned into but also which is very uh real is the the the computational power and the and the um the electricity that is used like the the carbon footprint essentially of um serving a scrim and sending it over the network is also a lot less I mean I would assume those two um graphs would scale like like the size uh and and the carbon footprint as well so but we haven't used we should probably have used that in our marketing a lot more but we haven't done that but that so so many so many I remember in the beginning cnra just explained all these benefits and the list goes on like with metadata and yeah the bandwidth the carbon footprint so much so was kind of even though I was a little bit scared for like jumping on a new startup at the time I remember that was kind of what convinced me when I realized that this is just like a fundamentally better way of doing it and if we don't build it someone else I I thought at least would eventually as you said discover this and build them themselves but but it is actually quite quite a lot of difficult technicalities in it like making um a prototype is perhaps not that hard but making it uh polished and work well with the cursor and responsiveness and all that is and bundling and running the projects has has shown to be quite a challenge we spent a lot of time and money U yeah making it work well yeah well I'm you know I'm kind of surprised that like a whole bunch of other companies didn't see this and immediately clone what you were doing uh but I'm not that surprised in the sense that like you think that like there's going to be this really intense competition when you have something that people want but like a lot of big companies and stuff they're just distracted they got all these other things going on and uh yeah like they're going for like I guess more mass market like the audience for people learning the code is relatively small there are only about 30 million professional developers in the world I'd estimate that there are another 30 million or so people that are trying to actively learn to code and um that's not like Facebook or Instagram type total addressable markets right so I think a lot of people just it doesn't occur to them as like a niche that's worth going after which is good you know for you and me because we we can serve those people without having to deal with like a whole lot of competition yeah I I think another thing there is it's very hard for us to expand our catalog because we have to add support for every single thing we we uh we want to create a course on as opposed to a video based platform where you can create courses on anything you can because you just record a video of it so so for that reason it's kind of been hard for us actually to go more into the to the B2B and the Enterprise Market where they have very wide requirements in terms of what kind of clippers and stuff like that we are the niche is kind of yeah protecting us a bit Yeah but to be fair what you're offering is very different from what they're offering because you know to some extent like video courses that have a teacher explaining a concept and maybe have some project that you Cod along home you could argue that that's somewhat commoditized in the sense that anybody can sit down and create a really killer tutorial and publish it on YouTube and get an audience right so but to actually build what you've built which is like very thoughtfully deliberately designed interactive pedagogy that is very difficult you need people that have thought a lot about that or who have like you know a lot of teaching experience and a lot of software development experience who can kind of figure out an optimal way to do that and that's something like to talk about fre go for a second that's something we're very proud of is our core interactive curriculum we we use YouTube as kind of like u a place where we can have videos on every topic but when it comes to the core topics that we think every developer should learn you know the git and the Linux and the SQL and the Python and the JavaScript HTML CSS like we can really take time to build like a deliberate curriculum that teaches those skills in an interactive way and so see in many ways what scrimba is doing is like a different form of interactive than what free C Camp is doing but it's incredibly valuable yeah and I mean free cold cam has been an inspiration for us uh ever since we started giving out courses so yeah the admiration goes uh both ways for sure yeah and I I should point out that that uh you have personally taught some of the courses on the Freo Camp YouTube channel and uh and some of your you know I think Bob zerol yeah is that his name yeah yes amazing teacher like so many so many great teachers coming out of the scrimba camp that are um hanging out and helping kind of essentially take the existing learning resources and Port them to kind of like almost backward compatibility you're back porting them to the old video format but it's still cool to have them in video because that reaches a whole lot of people that are on YouTube and then hopefully many of those people go and do the interactive versions of those courses on scrimba yeah yeah so I have so much I want to talk to you about I want to be mindful of your time but uh maybe you could just very quickly uh tell us like what are some of the the main advantages of learning on scrimba as opposed to watching like the video version of a scrimba video yeah so um the key point is that H you are forced to get your hands on the code uh yeah hands on the keyboard sorry um and write code we kind of have this internal rule where if the student hasn't coded the concept or the learning objective in mind for the scrim then we don't consider it to have been taught we haven't like forced them to like now you take over and do this Challenge and then I will come and show you the solution afterwards like don't skip over it because the only one you're fooling by doing that is yourself so it's kind of that which is the core benefit uh most people um um talk about when they when they try scrimba and and report back that they love but also as you said we put a lot of cont like a lot of effort into our courses into making them uh not like most other courses out there at least most other courses when we started out uh because we we never teach things just for the sake of of teaching the theory it's always an underlying purpose for why we're teaching something it's like it's like it's it's almost not like you're coming to us to learn JavaScript it's like you're coming to us and yes the course is called learn JavaScript but once you're into the course it's like hey how about how cool would it be to have this little blackjack game or this little app that actually solves a a use case in your business for tracking sales leads in your Chrome extension like imagine building something like and having something like that that would be valuable right okay what do we need to learn in order to do that well we need a list of leads how do we represent a list in programming well that's now we got to learn about a Race So it's always that way attacking it from the problem and then down to the what code you need to learn and never like you're going to learn JavaScript here are the five main data types Primitives and complex data types like we very like opinionated in that kind of way of teaching and I think it it's not for everyone but we have definitely found our kind of uh yeah niche in the market of people who like to learn that way yeah awesome well one thing that uh I'm very excited to talk with you about is the burgeoning field of AI engineering now yeah AI engineering of course my friend uh I guess our mutual friend Sean Wang recently had a big AI engineer Summit uh in San Francisco were were you there no froa our cofounder third cofounder he was there okay cool yeah I didn't I didn't get to make it but I did talk to him on a previous episode of the free cam podcast about AI engineering but you are teaching it and yeah you've made it a core focus of scrimba you know you're a a smaller company you have limited resources in terms of what topics you can teach and you decided this is what we're investing our scarce time energy teaching talent in and you've created an AI engineering uh curriculum yeah can you talk a little bit about what a AI engineering is yeah so I think most people who hear uh the phrase AI engineering uh thinks it's more like an AI researcher or machine learning researcher meaning a person who uh trains models and um writes algorithms for for for AI models and it deploys the models and like stuff like that that's not that at all uh it's much much easier than that it's all and it's much closer to a web developer role it is all about taking the these um AI apis that are out there these days or or or you could host them your the open source versions yourself but not like not train them uh yourself and not write the algorithms for them yourself it is about being that kind of top um final layer or final ux layer where you take this amazing new technology and build Next Generation apps with it using like text voice images everything that is popped up over the last few years in generative Ai and it's like it's just so exciting what you can do with it and and and it's a feels like a green field out there where you can just pick new business areas and and industries which haven't gotten AI properly applied um or there AI hasn't been applied to it yet H so so we we just see so many opportunities out there and and had I been a beginner and I today I would have jumped on it immediately uh cuz I think it's great for people's web developers careers these days so so that's why we're we're we're kind of going all in and we want to be the best place to learn that uh because while it isn't that hard to learn uh actually it is very overwhelming and easy to go into uh kind of RAB go down rabbit holes uh and get confused and get paralyzes by analysis and stuff like that yeah so we trying to yeah that that's why we're we're going all in yeah so maybe you could talk a little bit of about uh you said it's not that hard to learn uh but what to learn specifically and not yeah you know getting Hacker News syndrome where you're just looking at like the latest release of whatever oh I need to learn this you know focusing on the core skills the foundation upon which you can build out the rest of your skill set uh maybe you could talk about what those core skills of an AI engineer is and just to be completely clear AI engineer is somebody not necessarily a machine learning engineer as you said who's actually training models but other skills to be able to essentially create like good output from AI or or relevant out output I mean that's how I would very naively describe it does does that make sense uh please feel free to extend that definition no no it makes sense I but I would say not just create relevant output but create uh experiences from it because it I think I think it it one thing that was an epiphany for me was that chat GPT 3.5 uh when like when chat GPT came and it was like GPT 3.5 and not 3.0 yes it was better than 3.0 but I think the actual true um um Innovation there or or just as big of an innovation was the the ux the fact that you just chatted with it I mean if had you tried gpt3 in the playground or or a gpt3 based product two months before chat GPT was launched it or I at least got equally mind blown uh when I when I saw that so the techn take off the yeah the user experience uh so that is being able to have a discussion and be able to drill deeper into it because I also like used like the various playgrounds from the previous versions of GPT and I was like this is cool but this is not ready I don't see how I could really use this Beyond you know creating spam or something like that but but once I really sat down especially with GPT 4 in in the but but you're right chat GPT was the key Innovation and open AI didn't see it as the key Innovation they were just like oh this is just some tech demo essentially is is my understanding is kind of how they shipped it but once they saw the usefulness in terms of being able to have conversations is great I you know I use GPT I don't know 10 15 times a day to to ask about various things I use it all the time in language learning for example like full discussions with it in foreign languages and that's incredibly helpful it's like having like a language tutor for free right uh so but not to get too too deep into that but I I think what what you just said there that the chat interface and the ability to iterate on your initial prompt and to delve deeper and to branch and all that stuff that that was a huge Revelation for me personally it sounds like it was for you as well yeah it was H and um I think there's so many more discoveries in that application or ux layer uh to to be found over the next few years and and very often you also need uh in order to to make to get a great experience you also need the context of the product you're working in so yeah it works well to to use chat GPT uh alongside when you're for example coding but when you try copilot or or or any of these other uh tools coding tools that really put it in put the AI in context for you then you realize oh wow this is much better H and I think that goes for all Industries and professions uh that will be uh over the next few years um heavily changed uh as a consequence of this so and what does that mean well it means that there's a ton of work for developers to do in order to build these features and discover these features and especially now that multimodality with voice is is becoming more and more uh streamlined as well yeah just it's like being back in in like right after app store was launched I think and there just like so many opportunities out there yeah now one thing I'll push back on about the App Store is a lot of the best immediate applications that came out of the App Store were just folded back into iOS itself for example there was a time when you could publish a flashlight app and get millions of downloads and everybody be like oh this is amazing because all you're really doing is using like the the API to like turn on the LED on the back of the thing right and you create a cool you could have the coolest flashlight interface in the world but if you open up your phone and uh now you just swipe down and you can just hit the flashlight button and that's so much easier than trying to find a specific flashlight app and going to the trouble of installing it and all that like and GPT is already kind of like like like or I guess the GPT Company open AI has already kind of like demonstrated uh a willingness to quickly like grab some of the most killer apps and like fold them into chat GPT itself for example like do you think that um there's going to be like these obvious kind of applications that are going to get folded in but then if you look at the App Store obviously plenty of apps have prospered uh it's it's like a multi billion dollar a year ecosystem at this point you you think similar like that GPT specifically and and some of the other llms will have these big app ecosystems or are you thinking more like more like building Enterprise apps on top of these or both yeah so I mean probably both things will happen like open AI will take a lot of the use cases and just fold it into chat GPT and that'll kill a lot of startups that most likely they were already trying to do it it simultaneously I think as well like as I said with with the context being the product as well for example what I've used and I'm really impressed by is Loom if you've tried that um video service you easily create videos and uh they've just integrated AI in such a useful and good way where it automatically creates chapters and summaries and edits and like so many things it does and it it like chat GPT or or open AI couldn't have done that without building a full like Loom competitor and they can't build competitors for all companies in the world uh I think and and I think it's that that'll just be a losing game I think yeah awesome well I'm very excited to see what happens with the ecosystem I'm also excited to see what happens with open source models have you been following development of these open source foundational models yeah so I think it like was quite surprised at how quickly they kind of catched up to to chant GPT at least I mean it still is the gold standard with GPT 4 but um I wouldn't have thought straight straight out of like U 202 at the end of 2022 that uh llama for example that Facebook would come with with with such a good model just a few months after it feels like feels like they all knew this was coming and they were ready there someone just need to needed to take the first step and then all the others came with their own Foundation models but yeah so I've been following that and I think there's many interesting things uh with that and has for example the cost which turns out to be uh quite challenging when using open AI huge element uh of it uh having the control uh internally of the model yourself uh having being able to put your own guard rails around it to to a larger degree yeah and also running it on device I think is super interesting which I've been been checking out or experimenting with in the browser for for one I'll add one thing I'll just jump into ad being able to add your own proprietary data to it without worrying about it leaking uh and being extractable from you know gpc4 like like you can kind of like get it you can do tricks to get it to reveal it training data and stuff like that and if you could do that and your data that you've put it into GPT 4 GPT 5 or whatever is part of the training data or or that some of the information you've already used somehow made it into the next version proprietary you know Trade Secrets could essentially be extracted that way so it's a security consideration um sorry I didn't mean to derail but but no no but it's a great Point like so running on device your own data your own guard rails um so many reasons why having your own model that's potentially running on on your own servers is Superior in a lot of use cases and of course cost uh because gp4 it's expensive to run a model that massive uh it occurred to me that a lot of people may not even know what some of these terms that we're using like Foundation model mean so figured maybe we could do a quick uh question and answer session where you could quickly Define some of these terms that people are likely hearing when they hear about AI engineering let's start with Foundation model yeah so so that's the kind of uh models that can do not one thing not one narrow use case but they are kind of foundational they have some kind of generalized intelligence I would say h and they can do language uh they can talk as a human they can do generate code uh they can they are multimodal much of the or many times multim modals they can deal with images uh and stuff like that so kind of more general not the old kind of narrow classification AI that can just spot a cat in an image and just do that no a foundation model can do many different things okay and what is embedding yeah so an embedding is I think it's a ma mathematical expression which um means to take one object and put it into a new space just a bit abstract but um essentially what it means is that you take from for example one object a paragraph about uh dogs for example and you turn that into you transform that into just a long array of uh numbers of floating Point numbers and those numbers then are a representation of the underlying meaning of that sentence they are an embedding of that paragraph uh but they are of course in a different space since they're now numbers and not like text yeah so that they can essentially play a part in I guess the weightings and how the neural network decides what output to get um and oh go ahead no because then you can actually it's quite cool to see see visualizations of this which we have in our our embeddings course uh where you kind of see that it's very easy Once you have something in an array of numbers it's very easy to mathematically compare the two and the distance between the two so that's how the AI can know that once it has two array two embeddings one of dog and one of cat and one of Saturn it'll it'll see that mathematically dog and cat are closer to each other than Saturn and know that oh these two things make are somewhat semantically connected and what is r a rag as some as people sometimes refer to it quickly so it's one of these uh threel acronyms that scare beginners off but aren't really that complex I feel like developers sometimes like try to come up with with with threeletter acronyms that are uh just to make it hard for people to kind of to understand what they're doing it's not just developers the government loves to come up with threeletter acronyms in the military and yeah maybe maybe it's a human thing to the kind of uh Define The In Crowd and the out crowd anyway okay I'll get to the point so um rag retrieval augmented generation imagine that you have a company uh and you have a bunch of internal data that and you want to create a knowledge Bank where where employees can ask for example like uh what's the vacation policy or refund policy for receipts and blah blah blah that that's obviously data that don't live in chat gpt's uh model or live in their model it's data that lives in a vect or that lives um when you use rag in a vector database in the form of a embeddings so uh rag means that you when you ask the question about what's our vacation policy like the app heads over to a vector database and figures out through your your question and the embeddings that are there and the ma mathematical calculations for for for calculating distance between embeddings it it manages to find the the the information it needs to reply to your question with the the kind of close data that you have in your company uh and and then you then you use chat GPT to or or whatever AI API whatever Foundation model you use to to turn that into more of a conversational reply with the the the data that you fetched via the like the rag um approach if that made sense so rag is essentially a way that you can uh take your own data and get it uh where it can easily quickly interface as opposed to I mean GPT 4 for example can now go and searching with Bing and can pull stuff up too like if I ask like what's the vacation policy of fre C Camp uh or something like that uh then it could potentially scav the web and find that particular thing but it's so much faster if you've got retrieval augmented generation right um rag so it's just one of those things that speeds things up and and ultimately reduces cost because one thing that people may not realize when they're using chat GPT is every single query costs like I don't know like 20 cents or something it's it adds up very quickly like just sitting there talking about like HeMan or something or like the Doom Eternal like lore or something like that which I was I was talking with it about yesterday like that I I cost open AI probably like four or five bucks for my discussion there right and that's why they're taking so much money because it's very expensive but R offers a way to potentially dramatically reduce costs um when you're yeah and also less hallucination as you kind of as it's able to get the the right data uh in the prompt like so the result from from from querying the vector databases so then used in The Prompt so to make the prompt more uh specific and um yeah yeah so I mean you mentioned the term hallucination which is a fun way it we come up for like essentially returning misinformation uh yeah but uh models hallucinated all the time early on uh and yeah like GPT 4 has gotten way better about that by the way like and it may not just be that gp4 has gotten better but also subconsciously like I might just say oh I think that's wrong like I doubt it more so like as people use these models they're going to become more uh skeptical and they're going to give her intuition for like okay does it really know what it's talking about or is it just is it just uh you know spitballing here you know uh and yeah so there are so many things you can do do to reduce those hallucinations and if you're talking about like a customer facing app you don't want it to like hallucinate your price of some product or something like that that could potentially be very catastrophic uh or you don't you don't want us to like hallucinate like legally binding contracts or something like that right um so yeah that is something that well let's talk a little bit about like AI engineering and like what it is that AI Engineers seek to do because we already have you know chat GPT and and we have the open AI API obviously using AI apis like that are part of the AI engineer role but maybe you can talk about like what the main work to be done what the open roles are talk about the field of AI engineering and maybe give people who are watching this listening to this a pitch for why they should consider becoming AI Engineers if they're already working as a frontend developer a full stack developer yeah so why should they I think uh economically it's a good idea because there are just so many managers and uh business owners out there today who feel that uh the AI train is leaving the station and their company is not on it but maybe their competitors are so being a little bit cynical using that uh kind of uh anxiety uh that is in a lot of companies these days with good reason I would say h it will definitely help your career if you're the kind of person that can step up and say hey actually I know some really cool features and and Next Generation things we can build into our or at least experiment with uh in our product by using these API because I know all about rag I know how to create an AI agent I know the AI safety prompt injection uh risks we need to think about uh and I know how to do open source models for example I mean if you if you can come with a pitch like that to your to your boss or to to to a company you want to work for I think it's it's definitely going to open doors uh yeah and it's it's what I would do when I if I had been a beginner now and actually it's also what I would do hadn't I been uh running scrimba I would just probably spend all my time just experimenting with building new kinds of experiences so so that's a fun part I I think um it's it's a lot of fun and and uh it's good for good for your career that's um I think why why people should jump on it so how would you recommend somebody who's interested in breaking into Tech maybe they're learning the code how would you recommend they start using Ai and how do they what should they do to get on the fast track to understanding these tools and being able to leverage them yeah obviously I got to plug our scrimba AI engineering path that that'll kind of take you take you on the fast lane but uh all that aside assuming that you've actually uh learned it one way or another I think there's so many cool things you can do to get attention these days and and get get kind of a an edge on the rest of the um on the rest of the market or the rest of the job Seekers out there what I would have done today I would have actually found my ideal company that I wanted to work for and then I would have uh thought as an AI engineer a what does what what does the dream product or what's one one AI product that this company should have or that it will have in three years maybe it's you want to really want to work for for the biggest law firm in your uh your town right then then I would like okay what's what's an like Law plus AI there's just so many ideas so many things you can do to help lawyers draft documents or read through uh previous law uh law documents ments about um right yeah about um what's the word president uh pres president yeah for example like that or legal president so many things that can be done uh or or marketing tools like quickly help you with your your uh problem uh with your tax problem or just b a bot for that whatever there's so many ways you can go to companies these days and say hey look at this prototype I've built you should really have such a tool in house how about you just hire me and I'll start building these kinds of things for you that that's how I would would try to get my foot in the door in the tech industry today had I been a complete beginner wow okay so just a just a recapitulate what you just said instead of applying you know through web forms or or going to networking events you can do that too but like to build a prototype specifically for the company and say hey have you considered adding this this to this product and using that as a way to potentially get hired on to build precisely that so almost kind of like inventing your own job within that company and your own product or extension of an existing product exactly you could even I mean if you really want to go go the last mile you deploy it with their design on a URL that resembles theirs and like just send it over to them as if fully branded product as well and yeah just don't try that with so many doors cuz in software they created like a a version of Mario that ran on uh windows or or Doss I guess and and Nintendo was like don't distribute this or we'll sue you so it won't it may backfire in some situations but like if you're approaching like probably a big American tech company maybe they'll be more acceptive sorry that person's career though that did it I mean they went on to create great things and it bolstered their reputation uh for being the first you know company to essentially get sidescrolling games working on Doss so yeah yeah I mean it worked out fine for them obviously they're all who who was it did you say in software the the creators of Doom and oh oh oh yeah all those games yeah but but originally they were I read that book masters of Doom but uh forgot about that chapter amazing book so uh it's been an amazing time talking with you I've learned so much about a AI engineering and where you think things are heading we've also heard a whole lot of practical tips for how you can incorporate AI into your daily workflow and potentially learn these tools and go out and create a role for yourself at your dream company so uh per I just want to thank you again for coming on the free code Camp podcast it's been a pleasure man likewise and uh thank you so much for for having me and for being a scrimba supporter ever since uh day one yeah yeah again just I love the invention the discovery that is uh scriba so it's it's been amazing to follow your journey over the years and uh excited to talk with you again in the future um everybody watching this until next week happy coding happy coding