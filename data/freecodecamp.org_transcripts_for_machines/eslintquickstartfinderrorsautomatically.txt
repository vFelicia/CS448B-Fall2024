hello and welcome to console info these are some shows that i'm going to be making that go a little bit more in depth on how to improve your javascript skills on today's episode i'm going to talk about how to add eslint to your javascript project eslint is a great tool for making sure that your javascript code is healthy and free of any errors that a machine could otherwise catch for you the analogy that i like to make is that eslint provides nice guard rails while you walk along the tightrope that is javascript so to start things off i'm going to make a new project that we'll code together with so we're new mr uh eslint demo studio eslint demo and let's go into our code editor for that you're welcome to code along with me if you want or just let me do all the work the first thing that i'm going to do is initialize a new node project with npm init it's going to ask me some questions i'm going to say yes yes good great perfect love it yes sweet so the first thing i'm going to do we have in here let's just init or repo i would like to do this just so i can keep track of the progress that i've made in a product in a project so i get add dot get stash git commit we'll do init commit cool so let's uh make a uh file that we're going to actually code in we have this index.js file and what should we have it do i'm just going to have it say i like logs five times how about that so we're gonna say cons message equals i like logs and we are going to then what should we have it do how do we do this um uh just make a for loop i guess so for index let's do i is less than five and we're just going to say console.log message cool so if we run this node index great because i didn't save it cool i like logs let's actually make this show message we'll do this here sweet so cool so we have a simple project that we can use and everything looks fine but let's actually add some things a little bit weird so let's just make like you know did show message i'm going to say equals false okay and this looks fine but you'll see why i'm gonna add this in a second so this is cool let's commit this so you know initial work initial work that's a hard work to spell uh gotta add it cool uh so the first thing you can do when you're adding eslint this is the fun part of the demonstration is npm install save dev eslint and you're going to save eslint as a dev dependency because dependencies are things that are in your project that aren't required for production usages linting is an example of that where you can lint something but doesn't really need to be passing lin to actually work in production so for that case we're going to install eslint and there's the jeopardy theme song playing somewhere cool done and there's a little known fact that eslint actually comes with a builtin way of initializing itself so what we can actually do is go in and do init and here we're presented with some questions uh how would you like to configure es lens answer questions about your style use a popular style guide inspect your javascript files i'm actually just have it ask me some questions so am i using ecmascript 6 features yeah sure are using modules no because this is a common js project with node uh my nikola only ran in the in node not the browser so i can do that i do not use jsx i use spaces i use single unix yes what format do you want your config file to be in let's just do json sweet so now if you check here uh let's do git status you can see that my package.json file has been modified as well as my eslint rc file has been created if you hop in here you can see some basic things already in here this is really cool and this is this is the part that i find most beneficial is that by default eslint has builtin recommendation builtin recommended rules and here you can actually see them being extended so you get all those base rules for free and then here you have places that are being overwritten and this to begin a project is more than fine this is a great beginning to make sure that you have started linting your code that there's no erroneous errors that might be in there that are a little bit harder to catch so if you actually back into index you actually see that we have some things that are being yelled at so what is this expected indication of four spaces so this is a place where i'm like no eslint i actually want two spaces so if we go here indent we'll actually change this to two it and there we go that error went away and this is where i think the real power of eslint comes in because this is a pretty you know contrived example but what you see here is that did show message is assigned to value but never used and i've seen this a lot in my code or the people code where you are working on some software and you make some variables and you keep working on it and you forget that you made those variables and they just kind of stick around there and they're not needed in any way and eslint is because it can statically analyze your code tell you about these things and this is the example of that happening so let me actually delete that so it's no longer there and here's another one unexpected console statement and that's usually good usually you don't want to actually have console log statements in your code it's usually a sign that you're debugging you don't really want that but for our use cases i actually want to keep that so here's another little thing that you can do with eslint you actually just say as a comment to disable eslint for a rule eslint disable next line disabled and alter bet anymore however i'm not a big fan of these blanket disabling statements so what you should actually do my trick is like undo it and i see that the rule here is no console that is the eslence rule and that is the only rule that i want to disable for the next line so if i do no console that goes away because if i had just so now i had the semicolon you can see that the error comes back because this is now a different rule that it's complaining about semi if i had just done esl still next line like that that wouldn't have been caught which is why you want to actually explicitly call out the rules that you're disabling when you're doing these features let's go back do that save it cool and now let's add some command line usages for this as well so that you don't have to rely on just your editor for eslinting so we'll go to package.json we're going to say lint and we're going to say eslint where you can reference the node module from here directly you want to go into node modules for that and then i forgot the signature for this let's do npm run lint and i want it to be a file so if i just do that does that work let's go back and actually get this erroring out to make sure oh this is ah cool so now if i do npm run lens and there we go we have our error successfully being ran so if i add back that disable line save it then run this again i am lint free so that was a quick introduction to how to add eslint into your project this is probably the dead simple way to get started there are many more richer default esl configuration files you can use on the internet the big one is airbnb which you've probably heard of before they have a huge guide and styles that they try to follow but i think that might be a little bit too heavyhanded to get started having just the basic eslint recommended files then going on to the website for eslint to see things you want to change up will get you at least on a good solid foundation so that is eslint hopefully you'll learn something new it's very easy to get up and started with eslint and look forward to the next episode where i teach you something else that's new see you then