in this course you will learn how to build your own design system and improve your frontend development skills while building a space travel website with css guru kevin powell i am so excited to be presenting you this project our space tourism project that we'll be doing together here's an example or i mean we could look at this and just look at some screenshots and these are the different pages we're going to be looking at or of course we can just come here and see the actual page that we're going to be building and to see the different things and how they work and if you are in scrimba right now and you'd like to jump on in and actually come in and play with this code this is available to you you can see the finished result and play around with it of what we'll be doing and then when you're done you hit play and then i'll get back to introducing the course to you so yeah those are the pages that we'll be looking at of course it will be fully responsive and as we just saw there are some interactive elements as well with these tab type systems that we will be building out before i get any further into what we're going to be doing and how we're going to be doing it though i want to let you know that this course is a collaboration between frontend mentor scrimba as well as myself kevin powell and one thing before we do get started this course is not for people at the very beginning of their frontend journey having a good base in html is really going to help as well as experience having already created responsive layouts with css i'm not saying that you need to be an expert in creating layouts we're going to be breaking things down as much as we can but i am assuming previous knowledge of using css and html so i'll break it down as much as i can and i'll be challenging you along the way as well to help reinforce what we're learning to make sure you have a proper understanding of it but if you're new to html and css i do think you'd become a little bit lost along the way so this could be something fun to come back to later once you feel comfortable making a more complex page also if you do have a base in javascript or you're comfortable in javascript it will definitely be helpful but though it is not a prerequisite though when we do get into the javascript parts at least a basic understanding of it will go a really long way but you could build out this entire project with very little javascript if you wanted to and that's because there are a lot of different ways that you can actually approach this project you could build it only with html css and a touch of javascript or if you're more experienced or you've been learning something like react or vue or maybe even a static site generator you don't have to follow along exactly like i'm doing this i would actually encourage you not to follow along exactly as i'm doing things so if you've just learned a new framework or in the middle of learning a framework or a static site generator you can definitely use this as a really good project to help reinforce those skills and of course there is a whole middle ground to this as well which is more where i'm going to be focusing things where we're going to be using vanilla html css and javascript but we're going to be sort of going a little bit deeper than a touch of js to build in a little bit more interactivity into this project some of the main topics that we will be doing and one of the very very big topics of this entire course is building out a css design system and to do this we're going to be creating a lot of our own utility classes as well as using a lot of custom properties creating your own css design system it can seem like a lot of setup but it's one of those things that in the real world would be a really useful thing to have because then everything else can come together really fast i'm also going to talk about the balance between utility classes and component styles and things like that and the usefulness of custom properties in both of them so we're going to be diving pretty deep into that world at the beginning of the course for the layout we're going to be using both flexbox and grid for this neither one of them will be too complex but at least a basic understanding of both of them could really help you out and it's one of those things that if you don't have experience with grid it could be a nice introduction to it because we're not doing anything too complex but we are using some grid lines in some areas and we will also be using grid areas as well another really important thing for me in this course is to look at the accessibility of the site that we're going to be building so throughout the course i will be bringing up and mentioning accessibility we're going to be slowly adding in accessibility through the course so sometimes i might even do things in a less than ideal way and that are sort of the common ways that we see things done and then as we go through the course i'm going to be adding the accessibility into it and making small tweaks to what we've already created so this is going to include just writing proper semantic html as well as getting into role attributes and area and other things like that we won't be going in so deep that it's going to feel overwhelming i want to show you that proper accessibility can be added to a project without things having to be very complex all that out of the way it is time to get into the project itself i would really encourage you to head on over to front end mentor because this challenge as we've mentioned already is being provided by them and it is part of their new free plus category which means that everything you could need for this challenge is included for free including all the assets jpeg design files for both mobile and desktop and the sketch and figma design files so you can click on over and you can get access to all of that you can download the starter files and you can also get the sketch and figma files that you can download from here just really quick i use figma personally so throughout this course i might be saying you can reference this in the figma file of course if you're in sketch you can also reference it from the sketch file as well but i do say figma most of the time when i'm referring to them and if you do want to jump in and you can just click on this link that is right here in this slide and it should bring you to the challenge page where you can get the starter code and the sketch files you'll notice there's also a submit solution button right here which means when you're done with this challenge or any other challenges on front end mentor you can submit your solution you can also see other people's solutions and you can share the link of yours with others to get feedback on your solution that you've managed to come up with and so you can access these files on frontend mentor this link will bring you right to that challenge as well and i've also created a github repo that you can access the files for so if you're following along this course with files on your computer instead of following along with the files here on scrimba you can download everything from the github repo and it's also going to have the start and ending stage of every one of the lessons in this course because as i said i'm going to be offering challenges throughout the course so that way if you're not following my exact code you are doing things in a little bit of a different way you'll be able to get the exact code we have for that challenge at any given time through the github repo but now it is time to jump into the actual project itself and get started with it i'm really looking forward to this i hope you are as well let's go do this all right so as i mentioned in the introduction the first thing we are going to be doing is focusing on the design system itself and that design system has been provided to us from front end mentor we can see it here on this slide and this is what we're going to start by building because it gives us an overview of the styling we need for our entire project or at least most of it anyway so rather than trying to style everything page by page we can design this design system which is going to allow us to work really fast when we want to start working on the actual pages so how i'm going to be approaching this first of all is i'm going to be using a lot of custom properties because they're absolutely the best and allow us to work really well and i'm going to show you a few cool things that we can do with custom properties to sort of open up extra doors and things like that along the way we're also going to be using a lot of utility classes because even though it takes a little bit of time to set them up they allow us to save a lot of time in the long run the one thing this design system that front end mentor has provided us with is it has all the things we need other than the layout so i'm not going to worry too much about the layout even though we can make a few quick columns and other things like that along the way and lastly when we're finished with it like we won't have all the layout parts that we need we won't have everything completely done but we're really going to be off to a running start and it's going to enable us to work so much faster so we're almost ready to dive in the first thing we're going to do is create a general reset just because css as you might know comes with a few little things along the way that can be kind of annoying so before we even worry about the document itself we're going to create a general reset then we're going to create some generic utility classes that i just create on every single project then finally we're going to dive into creating the design system itself and we're going to break down everything into multiple lessons it's not going to be one big giant thing i'm going to have lots of challenges for you along the way to be taking steps and seeing what you can do and then i'll be giving solutions to those as well as we go through all this and one really important thing to start with is we're really starting with blank files we have nothing here to start with i haven't brought in the assets or anything like that yet because we don't need them we'll bring all of that in later in the project but one thing i have done just in case you want to make your life a little bit easier i have included this preview.html file in the design system so if you go into this one and you just hit run or hit save it should load it up and you can preview what the design system looks like here if you need to get font sizes or get other things from it because sometimes when you're looking at it in the slides my screenshots might be a little bit small but of course this is just a jpeg you can't copy and paste things or anything like that so if you want to be able to work a little bit faster copy and paste text you can do all of that from either the sketch or figma file which is being provided by front end mentor so you know that might be a little bit easier of a way to work but if ever you need to reference something really quickly you can reference this preview.html file if you just need to grab a few values or something like that i know i'm anxious to start writing some code so i'm sure you are too so in the next lesson we're going to be doing just that all right so it's time to work on our reset and so for that all of the css i'm writing now is going to go just in my index.css file because this is the one that will be controlling our entire site we're using this across all of our pages and if you don't already know what a reset is for it is something that just helps us make sure we're starting on a good base before we really get into anything and i'm going to write a few things here and then i'm actually going to encourage you to see if you can think of a few things you'd want to reset along the way as well and so the very first thing i am going to do though is create a comment here at the top so i can do that you can just write out the comment thing or you can use ctrl forward slash and that will set this up and i'm going to put a whole bunch of uh dots here because this is sort of our dashes i should say as this is going to create a section for us and here i'm just going to write reset if you're on a mac it's probably um command and forward slash will give you that as well and then we can create our reset section here this just makes it a little bit easier when we're going through our css file which might get a little bit big to keep track of everything we're doing and the first one i'm going to do and if you want to take a guess at what it might be before i start it's one of the things i do on absolutely every single site i ever work on which is my box sizing and that is setting my star and then as well as my star before we're going to be using quite a few pseudo elements in this so resetting the box sizing on the pseudoelements is important because it will even though we've selected everything with the star selector it does not select your pseudo elements when you use that so we want to come in here and just say box sizing border box if you don't already know this reset this is one of the most common things you'll see on any website these days it just makes calculating the widths and heights of things much much easier another one i'm going to do is reset margins reset margins and the one that you usually always see is the body but i'm also going to include all of my h2 my h3 which you could go down to h6 we won't have an h6 on this project i'm not even sure if we'll have an h5 to be honest but i'm going to include it just in case i'm also going to do my picture my picture my paragraphs as well as we will have picture elements which so we'll just throw all of these in there and we're just going to say that they all have a margin of zero and this is really handy we're actually going to be using different ways to reintroduce spacing and one of the most frustrating things with css is collapsing margins when everything has a margin top and bottom of it so we're gonna see it simple ways that we can sort of reintroduce spacing without having to worry about things like collapsing margins um and there's a few other things that i'm gonna bring in here in a second but i want you to try and think of a few things that you might reset or common resets that you do so throw them in here create a bit of a reset yourself you can see sort of the types of things i'm trying to bring css to something that is a nice place to start from so see if you can think of anything that you've seen or things that you commonly use in projects and then we can compare that to what i end up doing in mine so yeah you can go at it and in a few seconds i'll finish this up on my end all right so i'm going to keep on going here and i'm actually going to take a second before i do that just to come up here and in a comment i'm going to put this which um is andy bell's modern css reset and this is something that i use a variation of in all the projects so this is actually a variation of that um that i'll be using i won't use everything he has but this is a really nice starting point for resets if ever you just need something to copy and paste into your projects uh quickly you can't go wrong with this one there are other ones that you could use like just the the hard reset where we just strip everything down by eric meyer there's also things like normalize and sanitize as well those are also great places to work from but i sort of want to take advantage to explain a few of the things that i'm doing in here and there's not too much that comes into this so i think it's a few important things to address when we're starting to write our css and so now we can jump in and let's just say set up the body and i'm only going to do two things here i'm going to say that we want to do a line height and on most projects i do it's either a 1.5 or a 1.6 because the default for browsers is 1.4 which tends to be very very small so i'm going to go with the 1.5 and we can always adjust it from there and we're just going to do that as our quick reset for now and i'm also going to set a min height here of 100 vh and that just sets the stage to prevent any short pages from being an issue and especially in the designs that we're building for this project a lot of them there's no scrolling that's happening so this just sets the stage and makes life a little bit easier on that another one that we're going to want is make images easier to work with and if you don't already know images sometimes there's a few defaults on images and because we are using the picture element as well we'll select both of those and we're going to say a max width of 100 which just helps us make them nice and easy to work with as well as a display of block so this just helps us deal with the little spacing sometimes issues that you can get on images from time to time and the max width 100 here is a nice step to be taking and it just ensures that the images will shrink as the viewport gets narrower or the space they have to live in gets narrower we also want to come in and just you know make make forms make forms easier to work with and that's just because any or form element i guess um forum elements i should write because a lot of these and we're not we're going to be using buttons but it's just you know this is forward thinking if ever other stuff gets added so and select destroy font and do inherit and the nice thing with doing this uh because we will be using buttons on here by default buttons and all these form elements don't inherit the font properties which is a nightmare because font properties are inherited everywhere else so that just simplifies our life a little bit and this last one is a remove animations for people who've turned them off and this one i have copied so i'm going to paste it in and this is using the preferred reduced motion media query which means if somebody's taking the time to turn off animations within either their browser settings or at the os level that this is going to disable animations and transitions for them and this is a really important thing that we can do to deal with accessibility because there are a lot of people out there who motion causes problems and that motion could be parallax scrolling it could be constant movement on things as you're scrolling the scroll linked animations all these different things for a subset of the population it can make them nauseous it's going to make them leave your site it is an unpleasant experience for them it can cause nausea and it's just something that they don't want to have to deal with they've taken the time to turn it off in their browser or at the os level and we should respect that and we can do that really easily with this media query here there is also the option of a no preference here which we're not going to use because this means they haven't disabled it but that is a way that you can add animations in only if somebody is allowing them so there's the two different ways that you can work but just as a really quick solution here we're going to be throwing that in right there and that is it for my reset and everything we're going to be using as a hard reset there are other things that we often need resets for that i haven't included in here but we'll either be overwriting those ourselves with our own css or it's things that we don't actually need for this project so with that done in the next video we're going to start writing a few utility classes all right time to write some utility classes and in case you're not familiar with the term uh utility classes are something to do one thing and they do that one thing very well that means that often those only have one declaration and by declaration i just mean like it'd be color red so i'm declaring it's the property value pair is a declaration but sometimes they can have multiple when we need to as long as it's still just doing that one job and doing it really well we'll see an example of that in this video and this allows things to be much more modular and allow us to write a lot less code in the long run you might already be familiar with them if you know of something like tailwind we're not going all out and creating an entire library of utility classes for this finding a nice balance between utility classes and more component based classes is a really good way to work and we'll be exploring that more as we go through this but having a nice set of utility classes to start with can be very very useful so let's dive in and actually start setting up these and the first thing i'm going to do is actually go all the way to the top and copy the reset that i have here so i can bring this all the way down and make a new section of my css which is going to be my utility classes and now we can start working and so the first thing to do is create a flex utility class and we're going to do a display of flex on there and as you can guess that's that's one of those ones that i mentioned it's one declaration it does one thing it does it very well and we're also going to come in with a grid one and that one will set up a display of grid and this is one place though where we can actually take things a little bit of a step further and it's an interesting way where we can get utility classes to work with components and it's to take advantage of custom properties a little bit and if you're not familiar with this way of working with custom properties it is something i'm going to explain much more because we're going to be using this quite a lot through this and that is i'm going to come here and write gap and actually we can do this on both of them so i'm just going to hold down alt on my keyboard and select both sections right there so just by clicking and alt clicking in multiple places if you're on a mac that might be option or it might be alt i'm not sure because i'm on windows so i apologize for that and flex now has gap support this is a modern css approach which is really nice safari now has support for it which was the last major browser that we were waiting on for this and so i'm going to do a gap and you could do like a default of 1m but i don't want to do that what i'm going to do is a variable of gap we don't have a gap custom property and this is something again that is going to come back a little bit later and i'm going to explain more of how it works and i'm going to set a default of one rem for that it's going to allow us to use this custom property but really easily tweak it when we're setting up our different utilities like our navigation or a few of the other things as well where we need to use flex and grid and there's a few other things we could do with these um it is common to see things like fl align items justify items justify content and those types of other things set as utility classes and for this layout i don't personally see the need for it but if it is something where you see that being something that could be useful you could go ahead in your own version and add utility classes for some of those i'm only going to make two more generic utility classes in this lesson and then we're going to be going into ones that are more specific before now for these generic ones i only have two more and the first one is going to be a container and i'm sure you're familiar with either a container or a wrapper and if you are i want you to write your own and then i'm going to show you my own version of it and i want you to see if it's actually the same as what i would do don't just think it in your head take the time to write it out think of all the different properties you might need on something like this because this is one of those utility classes where you definitely need more than one declaration to really make it worthwhile as far as what width to use don't worry too much about the maximum width on it just as long as you have a value in there and then i'll show you my own solution in a few seconds all right so the very first thing i'm going to do is i'm going to write padding and very often you'll see something like padding 2m0 and i'll show another solution here that we could also use for this which means no padding on the top and then 2 on the left and the right which just prevents things from like touching the side of the page which can obviously be very useful another way that we can do this with more modern css is actually to use padding inline and then come in with qm scrimba is underlining this right now because this is a new css property it's called a logical property and what it's doing is looking at the inline axis of my container so it's gonna be the left and the right side and not the top and the bottom and even though scrimba is sort of complaining about this as well as gap here don't worry it's going to work even in the scrambler previewer that we're going to be using and it's also something that's supported in all the major browsers now so browser support as long as you're only worrying about newer browsers there's no issues with it at all and i'm going to come in and write a max width i said not to worry we're going to start with 80 ram and maybe we have to modify that and that could be somewhere where you actually use a custom property for this instead but we're going to stick with a set number just because i want to be consistent between all of my pages and the last thing i need is my margin auto to hold the content in the middle of the page i only need the margin on the left and the right side so can you guess and maybe write the line of code now similar to our padding that would work with our margin and so hopefully you thought of or wrote margin in line of auto which once again is going to be my margin left and my margin right and it just doesn't set any value to the top and the bottom even though you generally don't run into conflicts with these this could technically prevent conflicts and the last thing i'm going to include in my reset for now is an sr only class which are super super useful i'm going to paste it in because there's quite a bit in here this is a really common utility that you're going to see which is screen reader only and what that means is it's only for assistive technologies that are reading the page to somebody if they're visiting the page and you know they're visually impaired and let's say we have content on a page that might be say a button that doesn't have any text in it but visually it's very clear what that button does so somebody who is a sighted user can see it and know if i click this this is what's going to happen but if it's a screen reader who's reading through the content on a page it's just going to announce that there's a button there and the user is going to have no idea what that button does if there's no text in it so we can use this to visually hide content for sighted users but then keep that content in the page as something that's actually there so if a screen reader comes across it it can give that extra context to the users that are using those assistive technologies it's a very easy thing to do and we're going to be using it in several different places throughout this project so in the next lesson we're going to dive in and start creating our own utilities but first before that i want you to get a little bit of practice using these ones that we've created right here so i'm going to jump over to the html file and this is just sort of a standalone we'll delete everything that's in here once we're done uh but you can see i've created a few challenges for you and i want you to hold the content in the middle of the page wrap it either in a flex or grid we have our utility classes for that try changing the gap variable without modifying the original or gml utility class and to use the sr only class on a div to see what happens and by this one what i mean is find a way to modify this variable here without actually coming onto here and changing it see if you can find a different place you can change it and to get a different gap than the default one rem that's on there and you might be saying what content so i'm going to come and give you some really quickly so there's the content we're going to be working with really nothing too fancy but i will come down into the css and just give them a little bit of style and again we won't have any of these this i'll make sure all of this is cleared out before the next lesson but just a little bit of practice and this will help so i'm just going to give the dot box a background color of light blue so we can actually see something and i'll give them a padding of three rem just so we have something that we can work with and i'm going to click run over here just so we can see that we have some boxes that are coming in so why don't you go ahead and try following each one of these things here if you get stuck on any of them or you're not sure don't worry i'm going to give my own solution to all of this in just a second but i'd like you to try it out first all right so i hope that went well and some of these might have been easier than other international class container and we can just wrap all of this here and close div over here and let's just fix my quotation mark and by doing that and then we'll hit tab we should see now that my content is held in the middle of the page when we're at larger screen sizes and then as we go to these smaller sizes it's shrinking but we have that two rem gap on the side so our content is never touching the edge and 80 is a little bit big for scrimba so just to show you if you did run into this and you couldn't see it if you are using the scrimba editor i will drop this down to 60. just so we can see that we do hit a point where we get to that maximum size and then it holds it at that size right there so for this lesson i'll keep this at 60 but when i get back to the next one i'm gonna pump that back up to 80. the next thing that i wanted to do was to wrap the content in either a flex or the grid class so if you created a new div to put all of this in that's perfectly fine or because it is a utility class we could put it here it really depends on circumstances it's not too often that i end up doing something like this but it would work we need to have them set up in the flex or if i switch it over to grid we can see that it will be in a grid and the grid the default for it doesn't actually make columns or anything so we just have these guys stacking on top of each other but we can see that the gap property is working and again if we switch that back over to flex we can also see that the gap property is working there and it's creating these spaces in between them the next thing we want to do is try and change that gap variable without modifying the original utility class and there's two different approaches you can take to this one of them which is popular is actually using inline styles and within an inline style we can just say gap and change this to say five ram which would make it quite a lot bigger and now we get a bigger gap between them and this will also work if we had that as a grid and then you can see the spacing has increased vertically this is a popular one and the nice thing with this is it's easy just to create like a oneoff modification of that custom property that you created so if you had the same type of thing being used in multiple places and this is just one off you don't really want to create a different class for it you can have that set up and then we can have our smaller gaps that are appearing over here these two are stuck together because it's there's no gap between this big div and this div over here um but yeah it's just a quick way to make a oneoff style it's become actually quite popular and you'll see it used a lot some people don't like the idea of inline styling things just because then you know maybe you can't find what's actually controlling it or why those gaps are bigger than they were uh before so the other way that you can do it and let's just pretend instead of in this situation we're working on this little very simple grid but let's just say that this was actually a like a different component so we had a container a grid and then say this was like my call to action call to action and in that case what you could do is in your css you're writing all of your styles for your call to action so say you give it a background that's ping and the padding on it is to rem and it has a border radius of one ram and don't forget your semicolons and of course call to action i actually wrote it out uh so there we go we can see it's actually coming in and it's working so in a situation like this where you have something like that what you could do is come on here and actually say gap and change the property here and i can make it five rem and then it's going to actually modify it within that class so two different ways that we can modify it we'll be taking advantage of the inline style way of doing it especially within our design system since that's a lot more oneoff things and generally speaking i like working this way but both of them work perfectly well and are valid ways to work so just a fun cool way we can do that and one last thing before i let you go is i did want you to try and use the sr only class so let's get rid of our call to action here because that pink is not working and then i'm going to come on this a box and say sr only and if i hit save it is visually gone it's completely pulled out of the flow we don't see it anymore but if you were to look in the dom it would still be there and a screen reader would still be able to access it so it's not like a display none a display nun takes it out of the dom that is no longer part of your page this sr only class we've created leaves it in the dom it just fully visually hides it so there we go a quick little rundown on these ones we've created now we can jump on in to creating our colors and if you want to play around with things a little bit especially maybe this way of manipulating things just make sure that you're used to it if it's something new that you haven't seen before do that first play around with it get used to it and then i'll see you in the next lesson when you're ready all right so it's time to start working on the color section of our design system and this is what we're going to be setting up right here and just before we dive into it you'll notice that we have the values in hex as well as rgb and hsl and i'm going to recommend either that use rgb in hsl and i'm actually going to set things up in a very particular way when i do it and i'll explain why as as i go through it all but there the advantage of rgb and hsl values with hsl actually it's the easiest one to make modifications to but in this case we don't need to because we have all the colors that are being given to us but there is a trick in using custom properties with hsl or rgb that allows us really easy ways of tweaking the alpha value when needed which we're going to be using quite a bit in this project with how i'm going to be approaching it and so i'm going to leave the this slide up just because we're going to actually move away from having this jpeg here and what i would recommend that you do is actually go to the original design files at this point and instead of referencing this because instead of looking at this file i've created this design system.html which is where we're going to be working from so we have a nice blank page to start with and before we even get started with anything we do need a little bit of content in here which would help us out so i'm going to start things off by coming in and giving us that give class of container to hold everything that we need and i'm going to close my div and i'm not going to worry so much about the title let's just throw an h1 here at the top of design system i'm not going to worry about i know it has the logo and the design system on the right side in the actual design system but i'm just going to throw this here for now because the one i'm really worried about is our section which we'll call colors and i'm just going to use an id on here not that we really need it but you could include links somewhere if you want to easily get through between these different sections and so we can close our section there usually i always recommend writing the html for something first but in this case i'm actually going to recommend that we come in and do our css first and if you remember i said that i like having hsl or rgb so i would really recommend that and i am going to set everything up all the way at the top here we're going to create this custom properties section at the top here and if you're comfortable with custom properties what i want you to do is create the custom properties we need for the three colors we're going to be using and again choose either rgb or hsl for this because i do want to show you a trick that we'll be doing if you've never used custom properties before then you can wait for my solution in just a couple of seconds all right we only have three colors and when i do custom properties i do like prefixing if it's a color with color and if it's a font size with fs and other things and we'll see why as i work through this project um in this case we only have three colors and it sort of breaks from how i normally like to name things so i'm actually going to name them and then color white and it's really different from how i normally do things but we really only have three colors that we need to work with and then it's varying like alpha values on them and this is where it's very common to see something like hsl and then you come in with the numbers and this is again i'm looking at modern css so we're going to do it the modern way 35 where you don't need commas anymore and 7 um so we can write that without commas it's very it's perfectly valid with the new color syntax and again it is supported in all modern browsers and the advantage with writing it like this is you can come in and do a slash and like 0.5 and that would be your alpha value but the issue is if we store it like this in a custom property we lose the ability to manipulate that alpha value very easily and there are ways you could do it with another custom property and sort of play around with things and get clever with it but what i actually like doing is storing this value as my custom property instead which might look a little bit weird but i'll explain why in a second but first i'm just going to fill out these two really quickly all right so we have those there and now to explain how i'm going to use them when they're just values like that let's go down and create those custom property colors so i'm going to come here and we'll create a colors section just like that and i'm calling it a color section so here's our general classes and then underneath that we can have our colors which are all utility classes and you might also be wondering at this point like why would i make utility classes as well as custom properties and i'm going to explain as we go through the course why i would do that so let's start with a bg dark and i'm going to say that that means the background color is the value that i wanted but remember i'm using the hsl values so i'm actually going to write hsl like this and then inside of there i'm going to write my variable color dark and we can do that and what that means is and this will enable us to use it so just to show you that working i'm going to come over to my design system on the body here i'm going to give that a class is equal to bg dark i'm going to hit save and the background has changed over to that color and so what i'm going to do is challenge you now to create background class for the three different colors we have and another class that will set up the text color for the three different colors that we have as well all right so what i'm going to do is just copy this and paste it and paste it so we can work a little faster and you know what i'm actually going to paste it again here because i'm going to be doing my bg dark and what i'm going to do is actually change all three of these so again i'm holding alt down and i'm going to call these text dark what i actually like doing on something like this i'm going to select both of these and it's a little weird because i did do a color of light and here i'm going to call it color accent just because i'm funny that way and how i like to name things but um that's what i'm going to do and then this one we will do a color white and i'm just going to update these so they match everything that we have i almost left this here using background colors on all these and that would have been a little silly of me and while we have enough to get started in creating what we have on the screen right now before we do that i have a little bit of a challenge for you and we'll see that challenge in the next lesson so before we start building this out and give you a little bit of practice i want to give you a little bit of a challenge first that's also going to explore the alpha value thing that i was talking about with our custom properties so the first thing i want you to do is to give this first div here a light blue background and a dark text color this second one here we're going to give it a white background and we're going to give it a dark text color and this is only using the utility classes that we've created so far and this third one is going to be a little bit different in that we can't necessarily use one of our utility classes for it but i want you to give that third div a light blue background but with an alpha value of 20 and with a white text in there and so i already gave you a little bit of a hint for that third one and so i'm gonna recommend you dive in and see what you can do with it and if you haven't played with custom properties too much this last one might be a little bit tricky but see what you can do with it anyway and if you get stuck i'm going to be giving my solution here in just a few seconds all right so i'm going to come on this first guy we're going to give this one a class and we want to give it a class light blue background i call that bg accent so we can use that and then the dark text color we can just do a text dark and let's save and go take a look and we can see it's working right there then we can jump onto this next one right here and i'll give this one a bg of white and my text dark and we can see that one is also working fantastic and we have one more to do and this is the tricky one and so if you tried this if we use the i'll do the white text so text uh white and we can see that that text color has indeed changed but for the background color i can't use the bg white on this one for this one i will have to create my own class for it and so i'm just going to write example for now um and this is going to come in we're going to be using it for actual components and you'll see how this can actually really play into things really really well as we go through and build out actual components with this so maybe even example component might be a better name component and this can work whether it's a text color or whether it's a background color and it's going to be something that we use quite a lot actually through this project so i want to make sure you understand how it works so we're going to jump over here to my css and i'm going to do example component and on that example component we need to do something so i'm going to say that we have a background color that makes sense i think and obviously we have our hsl and i want it to be the light color and that's the the light blue and if i just do that right now let's hit save and go take a look and it has the regular light blue background on there and i mentioned that we can change the opacity on it so if you got stuck before and now you might have a little memory of how to do it why don't you try and do it and if not or if you don't remember i'll show you the solution in just a second and so before i show you the solution let's just go back up and look at what's happening here and to really grasp what we're doing so this is the value that i'm grabbing right there and i'm going to come down and so writing this is the same thing as writing that just like that these are doing the exact same thing i'm just going to change the number here to 150 just so we can see that it does change so we go look we can see that it's now that green color because i changed my degrees here and i mentioned that one thing we can do with hsl values is we can do a forward slash and then change the opacity of it so i can go take a look and now we can see we have the lighter color that's come through it's a lower opacity because we can see the blue color is now starting to come through i can drop that down to 0.1 and we can see that it's almost gone to the same color because it's so faded out so remember when i do the var color light what that's doing is it's just inputting these three values right here so it's the exact same thing as taking this deleting that and putting that in there so that means we could leave this here and delete this right here and i could leave this exactly like that but then i could do a forward slash and then choose an alpha value so dot 0.2 because we wanted a 20 alpha value and we can see that it's working just like that so if you want to play around with this experiment with it a little bit just to make sure that you're really understanding how it works go ahead and do that and then when you're ready i'll see you in the next lesson so we know how the utility classes are working and we're starting to get into that flow of things so what i'm actually going to do here is i'm going to create a div and on this div and we're going to do a closed div right here and i'm going to use this div to make one of these guys right here and one thing that is important with this is there's a few styles in here that are to if we want to match what this actually looks like that are important for this one place that would not be used in our actual page like these little color samples with the border that is on them because those borders don't exist there's extra padding on here and stuff like that so what i'm going to do is i'm going to start by coming in here with a div and i am going to give this a style so it's an inline style for my style i'm going to give it some padding of three ram on the top and one ram on both sides and one ram on the bottom and next up i'm also going to give this a border of one pixel solid and i'll put white even though i know uh or i'm pretty sure it's not actually white and actually let's close that div and let's go see what that looks like so i'll hit save and you can see a big box has come in and it's stretching all the way across the page which is perfectly fine and then here i would have two paragraphs so paragraph close paragraph and we need another one underneath that and i'll just bring the content in here really quickly so that content is all in place now but obviously we can't see anything that's on there and we need to make this come to life a little bit so what i would challenge you to do now is actually see what you can get done on this without seeing anything more for me but i will show you my solution to this one in a few seconds but hit pause try and get everything just the colors matching we have background color we have text colors on these and if you have the time you can also go through and do these other ones as well just don't worry about the numbered title here because i have a specific lesson on that as we're going to take a little bit of a different approach to it but i do think you can get this one done pretty easily so i'm going to leave this one for you and then in a few seconds i'll show you my solution all right so for my solution if you didn't take this approach is perfectly fine but i'm actually going to go up on my body and put a text white on there just so we can actually see our text everywhere which makes life a little bit easier and whenever i can apply something on the body and let that cascade down i'm always going to take advantage of that and so the next thing i want to do is to go on this div right here and we can give this a class and we don't need to give it the bg dark because we have abg dark on the body obviously so we don't see that difference but i'll throw it on there anyway and a text white so if i hit save i can see it's working and the text has changed and if i took off my text dark and we hit save you can see it's still working and i can still see that there so that's the main reason i just want to show if somebody's looking at my design system that they'll see those two classes that are on there down here we can come on and we don't need the text of light but we do need to put a span here so on both of these we can add an opening span and we can come on both of these and do a close span just like that and if you weren't sure you got stuck there and now you know what to do well we just have to come in and add our class of text accent and then i can do the same thing on that one hit save and we can see that the different color has come on that and that is pretty much what we needed to do for this one but my next challenge would be i'll copy this for you and paste it so if you didn't already do all of them we do want to get all three of these guys done and there's an extra challenge of getting them to go next to one another and i'm not going to give you the solution to that not in this video and not in the next one either because in the next one we're going to get into the typography so try your best at solving this getting it all set up getting used to using the utility classes and if you can't get things to go next to each other or there's an issue with something else you can always look at my finished code which will be available to you in that next lesson so when you're ready i'll see you over there all right so time to dive into the typography and things are going to move pretty quickly here where we're going to build out this section here not worrying too much about the spacing but we can get all of this set up and looking pretty good and pretty quickly once we have our utility classes created but one thing i really want to make sure when we're doing this is remember utility classes do one thing and one thing really well so we want to make sure that we break things up so everything is doing just one job and here we can see i have a font family i have a font size and on some of the styles we also have character space which is your letter spacing and everything becomes more plug and play if we actually separate these into their own classes rather than having them act as one thing and especially the font family and the pixel value you're going to see like that repeats itself over multiple ones so it becomes very easy just to create utility classes that make all of this very plug and play this also allows us to write more semantic html and by semantic html i mean our headings can actually do the job that a heading is meant to do rather than the heading styling something if your h5 like this one is linked to a very specific style that could actually cause for on semantic html later on because you might be using an h5 somewhere you shouldn't be using it or maybe you're using an h1 when you actually or maybe you're using an h2 on something that should be in h1 or you know there's a lot of different situations that come up like that so do not pay attention to the heading levels that are here we're going to break things up as much as we can and just like before we're going to start that up here in our custom properties and so i'm going to add colors here we don't really need it but we can add colors and then here i'm going to write fonts and what start with font sizes actually font sizes and there are a few important things one of them is i like doing fs as you might have guessed and setting things up with 400 being my base size and when i say base size what i mean is the body text size so this here it's not actually listed right here in this screenshot but it's actually size 18 and the font the font family for it's actually this barlow regular it's not a condensed version of it so that's sort of where i like starting my base and then as we go smaller i go like here is a 16 18 to 16 that would be my font size 300 my font size 200 so this is like font weights and the font weight system which goes the lighter you get the smaller the number and then the bolder you get the bigger the number so this would be my four my three my two and then my four then this is the next one up so five six seven eight nine and that works really well with the system i like because i really like going in with that type of idea and i've already have these ready and i don't think you want to watch me write them so i'm just going to plug them in and one thing you'll notice is i am using rems for these rather than using the pixel values that are given here and this is once again for accessibility reasons because if you were to use pixels it could potentially overwrite settings that the user has put into place to give themselves a bigger or potentially smaller default font size and if they've taken the time to do that we want to respect that they've played with their settings a little bit and if you use pixel values depending on how they've set things up zoom levels are different but if they've done other system settings or browser settings pixel values could potentially overwrite that and then their font sizes could be smaller than they want and then they leave your site so it's very easy to see whatever values you see on the slides and just divide by 16 to get the numbers that you have here and because we're using custom properties i feel no need to do that html 62.5 on the font size to reset things like a base 10 working from base 16 when you only have to worry about things once it doesn't make things that complicated because you're not remembering these strange values you're just remembering five six seven eight or nine hundred i'm also going to speed things up a little bit for you here by coming in and bringing in the font families as well just because again writing the custom properties here there's no you know i don't think you'd be learning a ton from it and we're going to be looking at how we can turn all of these into our utility classes and that's where the challenges are going to come so you can see here i've set up these three which is my font family serif which is my serif one my saw serif condensed barlow condensed and then my font family songs normal which is barlow's serif and all of this already i've also taken the time to go to google and get the links to everything that we need right here so the google fonts are linked in the design system they're not in their index but we're not there yet anyway and so we have everything that we need to get started and create some things and then start applying them in our page now you'll notice one thing i didn't do is turn the letter spacing ones into custom properties um this could be just if you think you would need them as a custom property by all means go ahead and set them as custom properties i think we can just set those as utility classes but just because i don't see those changing very much uh down the road i think they're very locked in values by the looks of it but if you prefer them as a custom property there's no issue with that whatsoever but having things like this that could potentially change as custom properties is always a good thing and you'll see what i mean shortly as we play with this site a little bit and instead of challenging you here to actually create all of these because once again we're going to have a whole bunch of them and they're just pretty much taking the custom properties i've done and switching them over i'm going to place them in here for you and then challenge you to actually use them so here's all of the utility classes for the typography that i think are going to be useful and so we have our different font families that we can control here we have our letter spacing ones that we can control here and so it's the biggest to the smallest then we have my uppercase which is something that's not actually listed but if we come and look a lot of these are uppercase but every now and then you might not want an upper case so i created an uppercase one just to make it easier to make changes because it sucks coming in and actually trying to like retype something in your html to get it to be uppercase so this is a very handy little utility class we have all the font sizes set here and i've also come in and changed the line height on these bigger font sizes just because uh the line height when the lines break gets really really ugly so i've taken the time to go and make that change right there and one thing we're going to do before actually starting to use these just to speed things up a little bit if you look through all the different pages that are supplied in the design there is one thing that we can do that's going to help a little bit and cut down on some extra stuff we're doing is when we set up our body here and so the first thing i'm going to do on here is set my font family and there are different ones we can do but the nice thing with this is i can do a dash dash and i know you can't see it on your screen so i'm going to get you to practice it or try this out in a second but as soon as i do that i see all of my custom properties and then i can put ff and it's only going to show me the ones i prefixed with that and in this case i'm going to choose the size normal just because that's the one that is on my body and that's you know my paragraphs and my regular body text so i'm going to put that on my body you could make a case on the site to put this as the condensed because you might actually have to use less utility classes along the way but i'm going to do it like this and then what i want you to do is try this out so we also have a font family another one we need is the font size and if you remember my font size is the 400 is the default so what i want you to do is pause the video now and do the double hyphen and see the whole list that comes up here in scrimba and this will be the same in text editors like vs code do the double hyphen you get the full list do your prefix fs for font size and then you only see the font sizes and then you can just choose the one that you want from there so i'll give you a second to try that out and then we'll look at a couple of other little adjustments we can make before we start using all of this great so i hope you saw how nice that is so that we have my font size and we said we want the 400 on there so i can do that it auto populates it just by selecting it and we're starting to be off and running there are two other properties that i'm actually going to add to here and that is it would be kind of annoying if we had to always come in and add this on every single one of them and these utility classes work great but setting that every time on the body is a little bit annoying so i'm actually going to remove them we're going to come back into here and we're going to add them here so if you want to do that to get a little bit more practice with the double hyphen just seeing how it populates making sure you're comfortable with it you can do that right now and in one second i'll add my own in alright and you might have had a little gotcha there along the way and that would mean that you would have had to have remembered that we actually need to because of how i've set things up wrap things in the hsl because i did things a little bit differently and so here on my color instead of just doing the custom prop i'm going to do my hsl and then i'm going to choose my color light just like that and then on my background oh i don't want light i want color white actually and then on the background color we can come and do the same thing hsl and choose my color dark and there we go that should set things up nicely there we go we can already see it's come back and it's starting to work so that's fantastic all right and with that set up we can come over and i'm going to do one thing really quickly because we're going to see there's one more problem that we're actually going to run into and before we get into that next section i can start using some of those classes up here and on here and i just want to highlight what the problem is going to be so actually here we have our design system i'm going to come on and give this a class is equal to font family serif and i know we don't need to do that but you might notice and maybe it looks okay for you but the rendering of things looks a little bizarre on my end and if we look here every single heading level is not using a bold which is the default and because i didn't include the bold from google fonts because we didn't need it for the serif font it actually renders things really bizarrely and so you can play with your font size a little bit if you want to highlight that a little bit but i don't want to have to come in on all my headings because by default they're all bold and have to reset them because this normally wouldn't be bold this wouldn't be all of the headings through here are not nowhere is using the bold so one last extra step that we can take is coming in and just saying that and i don't think we're gonna get to the h6 but i'm still gonna come in and say the font weight here is 400 and if you want to be even more explicit we could also say that my paragraph's default font weight is also 400. because we're not going to see a lot of bold in here but by doing that again the p we might not need but we're just sort of explicitly setting it and even that could be said on the body instead of the paragraph but just by doing that it's going to set us at a little bit of a better starting point as we come through and we can see things are already looking a little bit better so what i'm going to challenge you to do is actually set everything up properly here from our font sizes and our font families you can use the upper case where we need the upper case and in the next video we're going to continue on and look at this section and make sure we can set up everything there to make sure that we have all the utility classes we need and to give ourselves a little bit of practice using them as well all right so i've been very nice to you and i'm not going to make you type out everything we need for all of these different parts because it would just take you a little while and i don't think you'd be benefiting from it too much but i do want you to get some practice using what we've learned so far and i've also done a few things here just some inline styles just to style things and space them out a little bit the one thing i'm going to say now is don't worry about the spaces in between these guys we're just going to try and style this up to be matching what we see as a whole here as closely as possible in terms of font sizes colors and all of that but don't worry about the spacing we're going to come to that in a future lesson and so i'm going to do a couple of these and then get you to do the rest of them and so here we have all of these are actually the same so that speeds things up a little bit we can come on all of those and say that all of these have a class that is equal to uh the text accent and remember that's my color that's going to come on that and so we go and look that's looking pretty much what we need it to be i think and so those are looking pretty good and now the next thing we need to do is actually style these other ones up so here i'm going to do this one class is equal to and on that one it would be my font size 900 and what else we know in there we need an upper case and we need to set the font family so i'm going to come here and say font family of sarah and let's come and actually i'm going to copy this one here and just place it on the next one and then what we're going to do is i want to look at why i like having utility classes and custom properties and all of that set up so here this is going to go down to an 8 and we can see that they're both looking just like they should be looking and so one thing that's nice about this and we can even come and add this on this one and this is where i could have it styling up properly and then i can easily come and change the font size you can see how the same styles are working but things are becoming very plug and play with this approach because i can just plug in the different things that i need but it's also very plug and play because i can easily come on here and say that this should actually be my size condensed instead and in another situation maybe that's exactly what i need right there so the size condensed is coming in and it's working so that's really good and it just makes my life a little bit easier being able to make those changes here plug and play whatever i need and then it's updating and we're getting what we need there but also i could then come over to here and i could actually change what my font family is here and maybe instead of belfair at one point the brand gets updated this ends up becoming something else and let's just take off serif and let's just put this as uh cursive just so we can see then i can quickly update all of the places that were using that in one shot so that is why i like having utility class as well as a custom property it just makes it easier to make big changes or to plug and play and make little changes along the way and we're also going to see with the font sizes that there's even more magic that can happen by having the two of them separated and as i said before too one of the other advantages are we're not worried about the heading level here these are independent classes that can get plugged and played and used anywhere we want so i'm going to leave this like this for you and so i'm going to challenge you to go through and finish the rest of it now because we sort of get an idea of how the flow is and i'm you might be going kevin i can figure this out it's not too hard i really want you practicing to do it so when we get to the actual site itself you sort of remember a lot of these different properties you remember the font sizes you have a little bit of muscle memory built up and in a second i'll run through it and finish it myself as well all right so i already had my class copied so i can paste that in this one's becoming a 600 and in this case i think that's perfect then we can come down onto this one and in this case we want it to be a little bit different so we don't have the serif in this situation it's going to be my size condensed and the other thing is we have our letter spacing and this one is the biggest one and it is also uppercase so we're going to leave the uppercase and we can come in here with a letter spacing of one and that should give us exactly what we know except we have of course the wrong font size that should be a 500 and of course this one also has a different color on it so we can come here and say that this should actually be a text accent as well and let's hit save and take a look and there we go i think it's looking pretty good i know it's close to the bottom of the page but you can see that it is coming through and it is starting to work so let's quickly go through and style these ones up as well and there we go we finished all that up and if we go and take a look now everything is starting to come together and match the style that we had with our design system so we know that it is all working it's all looking pretty good now before we jump into the interactive elements which are going to be very fun to style up we are going to look at how we can to fix these titles up to be exactly like how we need them to be and then i'm also going to be looking at how we can add spacing to everything in a very simple easy way and then after that we'll get to the interactive elements all right so we're gonna go into the numbered titles now and those are these guys right here this is not from the design system but you know we recognize them from the design system i'm sure and these are the ones but these are the ones that we see on the actual pages and they're everywhere except for the homepage and i want to look at these in a way talking about how we can find the right balance when it comes to things like utility classes because utility classes definitely allow us to work very quickly as you would have seen when you did that last section we just added those classes in and really quickly we can style any piece of text to look any way we need it to be but when we have something like numbered titles that are always the same it can be a good idea to find a balance and so with these they always have the same font family they always have the same font size they always have the same letter spacing and they always have this number that's the same that's actually like faded out and looks a little different there's always this space here and this is where you'd end up you know having to come up with a new utility class potentially for these numbers and like every single time we do it it's always going to be literally exactly the same so i do think this is where having a little sort of utility class plus uh because it's not quite a component but maybe we could call it like a mini component where those things start to work really well just like we applied several styles to our body to allow us to work a little bit faster and it really depends on your workflow and how you like to work but i'm going to be setting up a specific class just for these numbered titles so it does a little bit more than what you might consider a normal utility class to do but let's just come and we're going to add it here and we'll call it numbered title because it describes exactly what it is and there's a few different things we're going to want to do and what i'm going to do before anything else is let's come up and add that class all the way on our first one that we had in our colors area which is right here i'm actually going to delete this uppercase and i'm going to call this numbered title just like that and i'm going to challenge you to style it up and make it look the way we want it to be uh you'll notice there is a span in here and so you know we want to take advantage of that do the best you can on it even if you're really not sure where to start we have all of our custom properties that you can rely on and if you get stuck at anything don't worry too much about it and do your best to style it up and i'll give you my solution in just a few seconds all right so for these we have a few different things we need to do one of them is going to be my font family which is going to be my size condensed so once again i'm just going to do that double ff and then i can find my songs condensed really nice and easily we also want to set our font size which always is the same one and in this case it's once again fs and it's right there i just have to choose the right one and it will be 500 in this case then we need to come in and set a text transform of uppercase and again you could mix and match a little bit with utility classes here as well and that there's nothing wrong with doing that so maybe you want to mix it with your letter spacing one but i'm just going to come in and do this and i just realized i didn't talk about why i set these in pixels and earlier i talked about setting font sizes with rems and if you know me i like m's and rams for most things when it comes to sizing things and here i left the pixels just it's just these like decimal points that are very specific and they're very small numbers so i thought it was fine to leave them as pixel values that's just the reason why i did that so there's nothing wrong with using pixels for very small things or very specific things every now and then and so if we go and look at what we have we can see it's coming together pretty good compared to the design of what we want it to look like i think it's actually very close the only issue is our numbers over here and this is one of those places that the custom properties for my colors that i set up are really going to shine so i'm going to create a number title span and you'll notice i'm not putting a different class here you might hear that you should use a class for absolutely everything but as we go through this we're going to see that sometimes maybe you don't want to and doing something like this and if you want to be very specific you could do something like that but when we have a span inside our number title i want to style it in a specific way and this sort of scopes the style of the span to the numbered title it can't escape out of there and we're going to see this as we work on some other things the first thing we do is add a margin to the right side and i'm going to try 0.5 m which is the if you don't know m it's going to be relative to this font size so that means if ever we had a different font size that would come on that spacing would adapt with it and there we go we got a nice healthy space right there we also need it to be bold a font weight of 700 and the last thing we need to do is to change the color of it because obviously it's not the right color and if you try the accent you'll also realize it's not the right color if you look in the figma file the opacity of it is 25 so if you haven't already done it or you weren't able to do that the only thing left is to do this color see if you can think of how to do it we looked at it briefly when i looked at how i set up my colors with the custom properties if you forget that's okay but pause think about it maybe even go back to that video when i set it all up to remind yourself so you can try it and do it now to see if you can get it to work or not and i'll give you the solution in just a few seconds all right so i hope you did it i hope you gave it a shot and hopefully you got it right but if not no big deal remember from now on and that's where i want to come in with an hsl value and then in here we can do my custom property so i want this custom property my color light or color white i should say because we want to keep it white but it's at 25 percent so what i can then do is the forward slash and 0.25 which sets the alpha value and if we go and take a look now look at that perfect it's exactly what we needed so there we go it's the numbered titles that are set up so we can then run through just take this numbered title class apply it anywhere we need it and in these cases it just so happens to be on an h2 but it could be something that it doesn't have to be on an h2 this could be on an h1 or it could be on a paragraph or it could be on anything it's a class that can be plug and played and used in any way that we need it to be and so with that done we can move on to adding the spacing that we need with a very convenient way to add spacing in my opinion and then after that we'll get into those interactive components all right so we're going to be looking now at how we can add the spacing in ways that is very adaptable and very easy to update depending on the type of spacing we need and we can do this with a utility class and there are also other common systems where you're using utility classes like m1 m2 m3 p1 p2 p3 to add margin or padding around elements then you have other utility classes like mx2 which would be only left and right and then m y2 which would only be top and bottom and so on and so forth you do it with borders as well and those can be very useful but in this case i don't think we need it for this design and i want to show you a very modern approach that we can take to doing it with just one utility class and a modern pseudo class that's recently been added to css which does have good browser support with the modern browsers because we don't need all those other utility classes and i think it's going to speed us up overall just by using the one so if we dive back into here i'm going to go to my css file and i'm actually going to come up back into this section here which is my general utility classes and here we're going to do is we're going to create one called dot flow and if you remember earlier when i talked about the reset i talked about somebody called andy bell and this is also where this idea originates from and where i picked it up and andy is a very smart css person so if you want to give them a follow i'd always recommend it and i'm going to start this off how andy does it and then i'm going to make a modified version of it of how i'm going to do it which i think makes it a little bit more readable and what i'm going to do right now is add a margin top of one rem we're going to modify this but i'm also going to put an outline just so we can actually see what this is doing one pixel solid red so maybe you've already seen this this is the lobotomized owl but if you haven't it can be kind of confusing so i want to take a quick look at how this is going to work if you've already seen it and you understand how it works you can skip ahead a little bit in the video because i will be modifying this and i will actually be modifying this right here so don't skip to the next lesson just skip ahead within this lesson to when i make these adjustments but i want to explain how this is working first it won't take me very long to do and we're going to come into this section here which is my typography and in here where i have this div class i'm going to add a or i have a div and i'm going to add a class at that class of flow and we're going to look at what it does and you'll notice now that we have earth doesn't have a box around it but these four do and if we look here the direct children of flow has my heading 1 and then we also have this div this div this div and they're all getting a red border around it except for this one and the way that this selector here which again this is it was hayden pickering who termed the coin the lobotomized owl the way that this is working is it's the plus here is an adjacent sibling combinator so it's looking for elements that have adjacent siblings that come before it so select everything that has an adjacent sibling before it or a sibling directly before it so if we look here we have this guy does he have a sibling before it he does does this one have a sibling before it he does does this one yes does this one yes and does this one no he doesn't have a sibling before it he doesn't have it he doesn't get any of those styles applied to him now the one complaint that i hear about this is it's it's hard to read if you didn't get the explanation that i just gave to you and you just stumbled across it it can be hard to understand you could come in with a comment to explain what it's actually doing or we can do it another way that a lot of people like which is the star and then not and then we can do a first child and this isn't the finished version we're going to modify this again from here but this is doing the exact same thing it's saying anything that's not the first child and if we come and take a look now we can see that it's exactly what we had before and if you're going why why are we not selecting the first child or you could also do this with last child as well some people like doing it with last child and doing this as a margin bottom instead so either way would work perfectly fine because you can see it's selecting all of them except for the last one and the reason we like doing that is just really fast let's come in here i'm going to come in on this guy right here where we have the flow and i'm going to add a background of pink and let's add padding of 1m just so we have something on there and notice the spacing on everything is nice and consistent the space on the top is one m padding the space on the bottom is one m of padding as well and i realize the contrast and that's really terrible with our text colors so we'll get rid of this in a second but if we did the same thing where we're just adding the padding on everything but we say we just did this instead where we're adding the margin bottom well now it's going to mess up my spacing here this space here is actually twice as big as the space on the top so what we're trying to do here is say the first element has no space on the top and the last element has no space on the bottom i'm very used to doing this with doing it on the margin top version of it with this being first child so i'm going to work this way you can in the future if ever you use this you could choose whichever way makes more sense to you but this is just what i've gotten used to and i use it basically in all my projects now so i'm gonna leave it like that and now we can go through and get rid of that pink background color all right and now what i'm going to do is uh i said i'm going to do one more modification to this and the reason that andy does it with the star plus star is this has no extra specificity to it the flow has the specificity which is important because on our paragraphs and all our headings we set a margin of zero so we need this to overwrite that to add a margin top on them but this doesn't actually add any specificity whereas when we do this this is a pseudo class which has the same specificity as a class selector and that does lead to potential problems where you can't overwrite something or you need an important somewhere which you probably don't want to have to do or worry about so one way that we can actually overcome that is with a very modern piece of css and it makes this a little bit more verbose but we can add a where and if you've never seen this uh where and is our new selectors that we have this if we didn't is it's not actually going to help at all it's the exact same situation and where and is are generally used as a different way to group things so before you might do a let's just say we had um a card and i know we don't have one but i would say you had a card and you wanted to style titles in it so you had card h1 card h2 card h3 and that can be kind of annoying to have to write out the same thing with your nested selector like that so what you can actually do now is card where and then say h1 h2 h3 and that would be exactly the same thing or you could also have an is here the difference between is and where is where has where is will take the highest specificity selector inside here and apply it to that entire rule where on the other hand and doesn't add any specificity so everything in here gets no added specificity so it just helps keep it a little bit lower this is actually used in the sanitize css reset now and i've started seeing it in other resets as well so it's a nice so it is sort of a new way that we can eliminate specificity from selectors to make it easier to overwrite in situations where we might have to i'm actually going to leave the outline on here just so it's easier to visualize what's happening but what i'm going to do is i'm going to change my margin top here to be a var of flow space and i don't want this float space it doesn't exist it's doing nothing now i'm going to do comma 1 rem and this could actually be another custom property if you wanted to have like a spacer custom property at the top and then you know all of these could actually use a spacer custom property but i won't get into that now we'll keep things a little simpler but just like i said these gaps up here and i said these could become very useful this is an undefined custom property so the one rem becomes the default so let's go back to our design system where we have our flow here and i'm going to come down onto this one and i'm also going to add the class equals flow on this one as well and we can see it's working in both of those sections the way it's intended to work but just to show you where the power of this comes from is i can come now on an inline style and one popular way to do this is with inline style and of course you could come in with an extra class and modify it on a class 2 which is something we'll see later in the course but what i can do on here is i can actually redefine my custom property so i can say that my flow space is four rem and if i do that you can see this spacing is now at four and this one over here on this side has stayed at one rem and you might be able to already see a little bit of the power that can come from something like this so just for now what i'm going to do is i'm going to come here and i'm going to add it here just so the two sections are actually consistent with one another and the spacing comes in might be a little big compared to the actual figma file but it's not terrible i'm going to leave the outline on here just so it makes it easier to visualize if changes are working and how things are working and i'm going to recommend that you go through on the color section here and you play with it that you come down here and play with this a little bit especially if you're not used to it to see how it could work how you can manipulate things you can try doing it with classes within your css as well instead of just applying it to is an inline style if you want to experiment a little bit with that and once you're done playing with that once you feel comfortable with it then i'll see you in the next video where we're going to be diving into the interactive elements all right so i'm sure you've been looking forward to this for a little bit getting into the more interactive things and we have all these different interactive elements that we have to build out and there are some similarities between some of them that we'll be able to take advantage of and just looking quickly at them we have different states for all of them right we have hover states neutral states and active states and we'll dive more into the ones that have three states shortly but we're going to start with this which only has the regular state as well as a hover state on there and it'd be a nice jumping off point i think before we get into some of these other ones that are a little bit more complex and so this explore button it's very unique to the entire site which is important because often buttons and i'm calling it a button it is a link but it's sort of this big buttony thing that we can click on and often buttons have a whole bunch of different versions of buttons throughout a site we don't have to have one with primary color secondary colored tertiary colors and all of that we just have to have this one guy right here and another thing that's interesting is we do have these two states but could we add some animations to it as well that is something when you get static designs that we can't always explore some teams will have people who animate them to show the dev what it should look like in this case we don't have that so we're gonna have to figure that out on our own and make some decisions so let's jump on over to the code and you can see i've actually set things up a little bit here in this interactive elements section that i've created and actually you know what we should also have a class is equal to flow on there just add a little bit of spacing and you can see i've set up a section for our navigation and right here i've set up a spot for our button and in this case because it is a link i am going to style it with a link it could be something that could be a link or a button so we could add extra styling to it but because i know it's going to be a regular link on a site that's just going to bring us to another page it's not something where we're opening a modal we're not interacting like that i'm going to be just doing it on a regular link here and then we're going to give this a class and i'm going to call it large button instead of explore button just because trying to forward think it might change the text inside of it might change one day it could also end up maybe the site gets bigger they need more large buttons on other pages so i just think it makes it a little bit more versatile and we'll write explorer in there close a and before i do anything else let's go take a look at what that actually looks like it's all the way down at the bottom it's this blue thing there and you know what i'm going to do um i'm going to add on this div right here i'm going to do a style is equal to margin bottom of 50 vh just so when we're working here i can actually scroll down and we can see what we're looking at and we have some margin down there at the bottom so we have an explore button that looks like this and what i want you to do is before we even do anything could we one thing we could think of is maybe we could style a lot of these things up with utility classes instead of styling everything specific to the large button so there are some things the large button will have to have so we can't make it a circle and we can't do the hover effects but we can add utility classes here to get us along all the way and i'm going to tell you why i think it could be a good idea in this situation compared to when we did our numbered titles here so add as many utility classes as we have they can get us closer and then we'll talk about it more in just a few seconds all right so i'm going to come in we're going to add an upper case on there we can add a font family of serif and we can add the text dark and a bg of white and it's not all the way there but look at that it's coming together pretty nicely and there's one more that we could also add on here actually which would be my font size of 600 just to give us the right font size and it's coming together and i know it's not all the way there uh but it is a decent start and one of the reasons i like that idea is maybe in the future it gets updated maybe we need a second button right so someone you know they add another design somewhere else where there's a second button that comes in it looks exactly the same but maybe this time it actually needs to be a bit smaller so it's going to be the small version of the same thing and we don't need to create a new class to be able to accommodate it we could just update the font size here and it's going to change it or maybe they decide that there's going to be two buttons that are next to each other an explorer and a different button and one of them is going to be a white background and another one is going to be the accent background and then so we can get the two different buttons very easily very quickly so setting these up with some utility classes and then finishing things up with my large button class that will add the finishing touches is one approach you could take and one that i'm going to stick with in this case you might say that we could do the same thing on the number title and 100 you could take the same approach there but i do want to show you different ways of working at the same time and one thing just very quickly if you are going to take this approach with utility classes and a component type class here is i would always start with this one and then add the utilities after or vice versa do all the utilities first and then add the more component based one after just to make it so it's very consistent every time you do it is i prefer having the component first and then all my utility classes just because of what i'm used to but if you think the other way around makes more sense it's up to you and so i'm gonna hit save on that we have my explore button there so let's come down into my css file and i'm actually gonna go all the way to the top just for one second to grab this guy and then we're gonna go all the way back down because now we're outside of the utilities and we're coming into the world of components and components are things that are a little bit bigger they have more pieces going on there's multiple things inside of them now this button it's it's not really multiple things it's just one thing but it still falls into that world of components but the other things in our design system like these these are definitely components where we have different pieces that are all part of one bigger thing so we're going to enter into the world of components for these interactive elements and we call this a large button so what i'm going to suggest now is style this up do what you can with it don't worry about the hover state yet though because i want to show you my solution to this before you go into the hover state because i'll give you another challenge uh once we finish this to do the hover state on the button there so start off right here go for it get it as close as possible as you can and then i'll come in and give you my solution all right so the very first thing i'm going to do is give this guy a bit of padding and i'm going to actually do padding of 0 on the top and bottom and a 2m on the left and the right and the reason i'm using m here is if ever the font size were to change the padding would grow or shrink with it so that is a little bit handy there and again this is to try and make it a little bit more robust and we can see that that is coming in and giving us a bit of size on the left and the right and because we do want to give it some height one thing i usually want buttons is i give them very often a display of inline block in this case i'm actually going to instead of that give it a display of grid and i'll explain why afterward and not too long just in a few seconds but uh it is important we change the display here because we are working with a link which is an inline element we can't really give that padding top and bottom you can but it doesn't work or a height wouldn't work on it and it would actually overlap with the content that's here if we can get the padding working so i'm doing a display grid often it would be a display inline block and then i do need to give it a height right and a lot of people would come in with a height of say 100 pixels and a width of 100 pixels and not have the padding instead so we can actually get an actual size but we have modern css solutions that we can use instead and i'm going to give this an aspect ratio and this is a really nice little bit of modern css it is supported in all modern browsers now and you can see it turns that into a perfect square isn't that cool uh and you could play around with aspect ratio i'm doing one which is the same as saying one over one but you could come in here and say it's a two over one so then it's twice as wide as it is high or you could come in and do the opposite with like a one uh with a one over two it's gonna be twice as tall as it is wide so it's always the width over the height now i'm just gonna put this back to a one so we have our nice perfect square but if you do feel like you wanna play around with that a little bit and have some fun with it go ahead and then when you're ready you can resume the lesson but what i'm going to do now is come in on here and right now there's two things one there's the underline on the text that we want to get rid of but we also need to get that text in the middle and this is why i use grid instead of a block or inline block because then i can just do a place items or place content i think would work here as well uh center and this is a shorthand for align items and justify items and we only have one thing in there it will put it right in the middle and just a nice easy way you could do the same thing with flexbox you just need an extra line so with grid we can do it with one right there so that works really well and then we do want to get rid of that text decoration so we can do text decoration of none and of course we want to have the border radius which i'm going to keep over here with the padding and a border radius of 50 to give us a nice perfect circle and there we go i think that's looking pretty good and we are gonna get that like the glowy bit that's going to be coming on this uh shortly so what i'm actually going to do is just in my inline styles here uh on this even i'm just going to do a style is equal to a margin top of 5 ram just to give us a little bit of space here so when we do that it doesn't clash with the text that we have on top of there but that's just for that because now i want to challenge you to create that glowing effect and if you can think of a way to do that and so i'm actually going to do that in the next video so i'm challenging you to do all of the work right now here in this scrim and then see my solution in the next one but if you do need a hint to get you started i will give you one at the beginning of the next video but i really would encourage you to try this out on your own see if you can get there and then if you need a few hints along the way then you can see my solution world i'm going to pause along the way a few times to give you a chance to give it your own try so good luck with it and i'll see you in the next video when you're ready all right so if you're here just for the hint i'm going to start with that where i'm going to start off with a large button and i'm going to use a pseudo element for this and there could be other ways to achieve this but pseudoelements are something that i really like and for decorative elements like this it's just really easy to do and it gives us a lot of possibilities on the types of animations and other things that we can do with it so if you weren't sure where to start and now this gives you a little bit of an idea you can take off from here and then in just a few seconds i'll give you the rest of my solution on animating this background glowy thing that we're going to add in here all right so the very first thing we need whenever we have a pseudo element is the content property because without it we won't have a pseudo element that's there and i know i'm going to want a position of absolute on here so we can add that right away and just to make sure that things don't get out of hand or you know out of the way i'm going to come up onto my large button and give this a position of relative just so this becomes the containing block for my absolute positioned element over here now i think a good thing to do so we can actually see it and position it i always like just giving them a background of red so we can see what's actually happening and well we could give it a top bottom left and right all of zero there's other solutions one of them you could use inset um of zero or you could just come in with a width and a height of 100 and that should work too and we can see my red box is showing up right there and the next thing is obviously we do want the shape of it to match so there's two choices here on the border radius we could either do a 50 here to make it a circle or if you wanted to you could actually make that inherit and then it would match the border radius of the parent but i think the 50 here is fine and now we can see that it has become a circle so we're on the right track but we can see that's given us the nice perfect circle here so that's going to work and we're on the right track but obviously there is a big problem now in that it's covering the text and we definitely don't want it to be doing that we need to see the explore text and one way we can do that is to come on here and i'm gonna go where i have my position and add a z index of negative one which is going to push it all the way back um the problem with this is it pushes it so far back if we have other elements like a background image or other things it could actually get lost behind them so even though we could technically get it visible right now just to prevent potential problems from happening in the future i will come up on the display here and add a z index of one and what this is doing is creating a new stacking context and that means that this negative one it is below everything so it's still a negative z index but it can't escape outside of my large button so if we go and take a look at it now you can actually see the text even though it's in front of the white background if i take this off you'll actually see that it's gone below my white background that i had on there and well that might be something that you're thinking well that's exactly what we want kevin we're going to be using white anyway so it doesn't really matter and again this i don't think we'd run into a problem with it on this site but whenever i have a absolutely positioned element within something else it's usually a good idea to force a new stacking context just to prevent weird problems from happening especially because you might end up doing an animation or transition that creates a new stacking context anyway and then all of a sudden things are changing when the animation's happening which could be an absolute nightmare so this is a nice fix of course this background actually won't be red like i just mentioned on this we can use my hsl and use our color white and i think we're going to try like a 0.15 and we'll see how that looks uh but we need to add the animation in now and if you didn't already do this part and you sort of wanted to follow along a little bit to set the stage now you could also try and just do the animation for it at this stage and we're not going to do anything too complex and if you're not too sure where to start i will give a small hint in just a second so if you need a little push in the right direction just wait around or if not hit pause right now and jump into it all right so the hint here is if you aren't used to using or animating sugar elements we want this to be on hover so we do have to choose our large button to hover and then choose the after here to be able to do the hover animation on it and uh because we are doing a hover we should also come in and add in a focus here as well so if somebody tabs onto it we still get the same type of effect going so if that was the little push you needed just to get you started you can go ahead and add your animation in now and i'll come in with my final solution in just a few seconds all right so uh with that working i'm actually going to move my background just because of how i like to organize my own css i'm going to move that right to here not that it changes anything in the big picture of things and then we can come on here and i'm going to here do a transform and do a scale of about 1.5 i think that's going to work out nicely and let's go take a look before i add the animation on that and we can see that there we go it's getting bigger and smaller which is exactly what we wanted now one thing that's really important with this instead of doing an animation on the width and the height which are actually kind of expensive for the browser to do if we do that it would actually even though we've positioned this absolute it could potentially lead to repaints and actually reflows of content on the page when you do animations or transitions on the transforms like scale translate or rotate then those don't actually cause any reflows on the page and they're also gpu accelerated so you get some nice smoother animations that way and it's a bit easier for the browser and so with that we just need to come up on here and we can add a transition so we can do transition and i want to do my transform let's say 500 milliseconds and i'll just do an ease in out and so if we go and take a look at it we can see that we get now a nice little animation that happens there and i think we can improve that just a touch so we can keep that like that but another thing i'm going to do is i'm actually going to change the opacity here to zero and on here we can then say that the opacity becomes one now this isn't actually going to be transitioning so you can link together multiple ones go ahead and do opacity 500 milliseconds and linear and you just come and separate them and you might be wondering well why do both of them and not just do an all again i want to choose the different ones that i'm doing i can choose different timing functions for them by doing it this way so that can be a nice little touch so now we should see see the opacity it just gives it a nice little the glow comes in as it's expanding and then it sort of fades out at the same time so i think that looks a little better and i said we can have different timing functions but we can also have different times as well and you can even have delays on some of them if you want and not on other ones so by separating out the different properties you're doing you're getting that extra level of control and you won't accidentally animate things that you're not meaning to do as well so i always like specifying the exact things that i want to actually be animating and now if we go take a look i just think that looks really great and the opacity being at a little bit of a different speed than the transition for me gives it a nice little extra effect and i think it looks pretty good now if you want to step your game up and experiment with this a little bit more i'd suggest going in and trying to play with these timing functions here and if you haven't done things with cubic beziers before this could be a nice opportunity to get it more to like snap into place or to do a little bounce or to come up with some interesting effects but this is my final solution so i'm going to encourage you to play with it some more and when you're ready i'll see you in the next lesson all right so we move on to the next element which is going to be our underline indicators and not specifically the navigation and that reason is you can see here i have an underline indicator here i have one over here we have some two and uh so these indicators we have a hover state and an active state for them and you'll notice even though this is the navigation and this one over here is some tabs it's just an underline so we have the navigation with an underline and over here we have the the tabs over here with the same type of underlying action going on the hover states the same and everything there's some spacing differences and some minor changes to them but overall they're very very similar to one another so we can tackle these both at the same time a little bit now this part will be broken up over multiple lessons because there is a few things we need to do to sort of set the stage and make sure that we're on the right track so let's go and start things off here and we'll come over to my design system once again and now we are going to build in the quick navigation as well as our tabs over here so for the navigation typically you'll see something like this and you know we just have our nav with the ul we have our allies with our links inside of it and it usually is not anything too special we start with something that looks like that and there are a few things we can do before we even get into styling anything specific for the primary navigation we've already created a few utility classes we could use here just to sort of get things off in the right foot so why don't you go ahead and do that and use some of the classes we've already created to try and get this as far along as you can without writing any extra css all right so i hope you're starting to see the benefits of having these utility classes if it's something that is newer to you so we're going to come in here and give these a class and we'll do equals and there's a few different things that we can put on these first we'll do an upper case and we'll also follow this up with having a text white and let's go and take a look and that already looks a lot better let's just go and take a look here i'm pretty happy with already the progress that that gave us and there is one other class that we can give these and that is the letter spacing q these are not outlined or given to us in the design spec anywhere but if you look in the figma file or if you just look closely you might notice that we have those we can give that on all of those and it just spaces the letters out a little bit for us and there's one other one maybe you've already done this when we did this but we can come over here and add our flex class on there right away and we can see it also spaces things out a little bit now i'm not going to stress too much on the actual big spaces that we see here just because the finished design does have a smaller one but once again we could come on here and say that we have a style and do the gap and make this bigger say we do four rem instead and that's gonna add to the spaces maybe you want bigger you can come in with an 8 ram or something like that and we can space things out more and more based on what we're putting here so that could be a way to get started with it and that's again one of the nice things with having that custom property here another option you could do instead of doing an inline style i've mentioned it but i haven't looked at it yet would be to over here we could actually create our primary navigation and on there we could come in and say the gap is a rem and that's going to have the exact same effect if we come back and take a look we can see the nice big spaces are there and if i knock that down to a one rem and we go and take a new look you can see that those spaces have gone down and it's much closer together so custom properties are amazing it is my big takeaway from that let's jump that back up to eight and of course there's a few other things that we need to do on this so we'll do a list style of none just so we don't have anything there and i will do a padding of zero at margin of zero just because it is a ul that we're placing all of this on and there's some default styling in there that i do want to get rid of so we can come and take a look and i think that's looking a little bit better now another thing we can do on our primary navigation is we can come in and say that we have our primary navigation and we can do our links that are in here and say that these links are a text declaration of none and this is our we're really in components here so i really don't see any issues with using descendant selectors like this where we're scoping the style of the link within a primary navigation and we're going to see more and more of this especially as we go into the tab system as well so we've done a nice job setting the stage there's one more thing i want to do before we worry about the underlines and that is adding those numbers in there because we did see you know we have the numbers here that we don't have down here and this is very similar to our numbered titles where i'm going to throw a span on this one and i'll do this really fast and there we go so i put a span on those and so with those there this is very similar to our numbered titles that we've created so i'll let you come in and add the styling on there that we need for them and then after that we'll look at adding those underlines all right so on there i'm going to come in with my primary navigation a and we could do the a and span like that we don't really need the direct descendant selector here but i'm going to do it anyway you could even come in like this but i just want to make sure if something weird were to happen maybe somehow a span gets put in that's not inside a link and i don't want this style to leak out necessarily so on here i'm just going to say the font weight is going to be 700 which is my bold weight and we're also going to add a little margin to the right side of like a 0.5 m that let's go and take a look and see how that looks and if we come and compare that to here it is looking pretty good i just realized i put the wrong numbers but for this it doesn't matter too much uh but for now let's focus on putting those underlines in there before i challenge you the one thing i'm going to do is because these underlines are sharing between two different elements and this is why i've called this whole thing underlined indicators is because they have that in common we don't want to do double the work because we could style it up for our navigation and then we could style it up again for our tabs over here and i really don't want to be doing that so instead of worrying about right now our primary navigation what i'm going to do is come on the same place where we have our primary navigation and i'm going to call this underline ndk tours and you could do this instead of having it here as almost a utility class that is being placed on each one of the links i'm going to put it here to create sort of this grouping it's part of a bigger component and it's going to allow it to work in both places and just have to put the class in one place instead of multiple but there are different ways to skin a cat so i don't think there'd be anything wrong i would just take the s off so it's underline indicator and put it on each one of the links this just is a little bit less work to do it this way and so we can come in here we can create the dot underline in the k doors and if you think you're able to dive in and start doing it and getting it to look like this where we have a normal state the hover state and then active state here just be very careful it doesn't mean active with the active pseudo class this is active in a different way if you'd like a little more information wait in a second and i'll give some on there but if you're ready and you think you could style this up go for it right now don't worry about the background color here let's just worry about getting these underlines coming on and so let's go and i'll you know you can jump in there right away or if you'd like a hint you can wait a few seconds and i'll give you a hint and i'll be giving the solution to this in the next video all right so i do have two hints for it one of them is about that active class so that would be on my li here i'm actually going to put a little class of active just like that and that's going to allow me to sort of hook into here to add it it could also be placed on the link but in this case i much prefer it on the li just because it's going to make it a little bit easier to share this between here and ship and here so i'm going to do it in this way so that could help you just you know get in so the dot active is going to be styled a little bit differently and with that i'm going to once again give you the reins and let you go but if you start and you get stuck i do have one more hint to give you um which i'll be giving in a couple of seconds all right and the last hint is that we don't want to be styling on our underline indicators class itself because that is all of these and i'd much rather place it on each individual one of my lis so to do that we could come in and say li here and it would choose my allies but once again i want this to be more robust to be able to be used in different situations so i'm going to do this instead which means we're selecting every direct child or direct descendant of my underline indicators and just to show you if i throw a background of red on there it should come in let's just make sure that this is also saved and there we go we have the red coming in on all of those so hopefully with that you have enough information to get this going and start styling it up and i'll see you in the next lesson with my solution so very quickly for anyone who didn't watch the hints in the last one i am selecting all of the direct descendants rather than the lis here just so it's more reusable in different situations and we'll talk more about that when we get over to our tabs over here but let's get this all working for us now i don't actually want to style anything here directly but i'm going to do it now just so i can see it on the page and then we're going to transfer that over to the hover and our active and so i'm going to use a border for this and it's not often we use borders but i'm going to do a border bottom and if you did this with a pseudo element instead then you're a person of my heart because i love suit elements and my first initial thought for this was to use suit elements but in this case i'm going to come in with a border bottom of 0.2 ram solid and we can use our variable of our color light right here with with our hsl on the outside so it's actually working just so i can make sure that it's actually showing up so let's go take a look and there we go it's working except i chose the wrong color color white not color like and there we go we can see that it is underlined just like we needed to but obviously uh the spacing is a little bit off and the easiest way in my opinion to fix that is to just come in and on these right here give them some padding so i'll do padding and we'll do a one m on the top and the bottom and a zero on the left and the right i am adding the padding on the top and the bottom um as you'll notice here and we can actually play with this a little bit as you'll see in a second but let's leave it like that for now and we can see that's looking pretty good the spacing maybe is not quite big enough for this section but it might be even too big for when we do the tabs so because of that can you think of a way that we could sort of customize things a little bit depending on their situation so set a default and then to have something that could change that default depending on the situation something we've looked at a couple of times already if you can think of it go ahead and do that now and if you'd like a hint i'll give one in a second and that hint is custom properties are amazing and so if that gives you a little bit of a clue as to how to do it maybe you have to look up at some of the other ones we've already set some default custom properties to so then you can go and replace this number with that and i'll give you my solution in just a second all right great so let's come in and change this padding right here to be a custom property so we're going to do var and we'll just call this underline gap i don't want to call it gap because i want it to be something that is unique and we do this is one of those undefined local custom properties so i will come in and give a default value that we can overwrite really easily and so if we look that's looking pretty good but as we know our primary navigation actually needs a different one so i can keep my gap there and i can come and say my underline gap is let's do maybe two rem in this case and because this is on the padding it will affect the padding top and bottom so there we go we have the bigger space just like we see in the design here where it's a much bigger space and that's going to give us the padding on the top here as well which is going to be very handy because that's going to sort of set the stage for this background that we'll be bringing in once we get to the actual pages because there's some interesting things with that background that we're going to have to do so i know that everything is looking good and what i'm actually going to do is change the opacity on here to be zero because then just by setting it up there and you don't have to do it this way if you just change the border bottom each time that would work perfectly fine but i'm just going to set the color to zero and then what we can do is say that my underline indicators cover and we can come in with the uh we don't need the whole border bottom actually all we need to do now is our border color and we can change that and say it's our hsl with our color white once again but come in with a bit of opacity on it and if we have a hover before i forget we should also have a focus state so we can come in and bring this right here with our focus as well and then we can also come in and i'll just copy this actually paste right there and instead of having all this we can just come in and say a dot active and if you left the star there he said start on active but we don't really need it so we're going to say that a dot active that is a direct descendant of our underlying indicator will come in and get this white with the solid one here and let's go and take a look at how that's looking so my active is perfect let's see hover is also working and there we go that's looking pretty great to me i think the underline is actually supposed to be a bit more and checking the figma file it is so i'm going to boost that up to a 0.5 instead of a 0.25 and there we go really really cool works really well the hover doesn't change on this one because the active here is overriding it and i think that is pretty awesome so in the next video we're going to look at how we can come in and get this tab component to come in instead and just get the same functionality in there and it should be easy breezy because we've already set up the component though there will be a few little tweaks and extra styling we'll have to do not so much on this one but just for the tabs themselves all right so we finished this one here with our underline indicators and we're going to come in and create some tab a similar tab system just to show you how easy it is to move things around and i'm going to be asking you to do most of the work here but i'm going to do set the stage a little bit and we're going to have a div class there and actually i'll leave that empty and we'll do a closed div and in here instead of using a list we're just going to be coming in with buttons because this will be an interactive section we're going to be doing and so we're going to have a button and there are several important things that are actually going to come up when we add the functionality here when it also comes to accessibility for this type of system but for now i'm only worried about the styling of it we can have our three buttons if we go and actually take a look at that we have these three buttons that are showing up and there there's nothing in them and in here right away we can add our text we can do our moon we can have our text right here of mars and we can do our text of europa and i think i've done a lot of what we need for you to actually be able to style this up and make it look the way we need it to so why don't you take what we've learned so far we'll have to add utility classes to a few different places here and maybe make a few extra tweaks so i'll let you do your best we might have to create a new class as well just as a little hint and i'll leave it to you to do your best on it and then i'll come in with my own solution very shortly all right so i hope you had some success and if you ran into any problems hopefully we can address what those might be so the first thing i'm actually going to do is on all these buttons here let's come in on these with a class is equal to and what do we need we need them to be uppercase we need them to be text and i'm actually going to do this on all of them and you'll see we'll sort of tweak things a little bit because i think it'll make life easier so on all of them i'm going to do the text accent and if you change that for the moon button because the moon one should be white whereas the other ones have the accent color perfectly fine and i'll just talk about in a minute why i'm making this difference or why i'm including it on all three i should say so we can have the text accent that's on all of those we also have some letter spacing so we can do our letter spacing too just like in the navigation it's the same letter spacing another thing we could do since we're here and we do need to set a background on them anyway to get rid of the default background so if you did a bg dark here that'd be fantastic we have the borders that are really ugly but at least the rest of it is working and the last thing we need to do is our font family so let's come right here on these and do our font family songs condensed and they're pretty much there but we need those underlying indicators ah that shouldn't be too hard we can come up to here and say underline indicator and we did a lot of work on that don't forget the s and it's sort of working though there's some weird border stuff going on with it so i hope that didn't trip you up too much uh and there's two other things that i can think of doing before we leave is even though they're next to one another we need some more spacing on them and we saw that we can add spacing quite easily by using a flex class and there we've got a bit of spacing and maybe we want to tweak that with the gap property that we can play with or that custom property that we have why don't we start there and one of the easy ways to do that is i'm going to call this my tab list as its own class just like up here we had our primary navigation and our underline indicators here i'm going to have my underlying indicators but also a tab list just because this does need a little bit of custom styling on it you could say could our underlying indicators set the stage for both of these and 100 we could definitely make that a little bit more robust by coming in and let's go find that um when we set our border bottom here we could come in first and say that there's a border of zero and that just means it doesn't matter if there wasn't one like with our links but if there was a border it would actually eliminate those right away and look at that it's already looking much much better um another thing that we could probably do on this is the cursor because on this it was links and we're getting the hand cursor and i realize you can't see it now while i'm doing this because the scrimba icon is the same but i'm getting a hand icon here and i'm getting the regular arrow on those so why don't we come in on here and also say that we have a cursor of pointer which just because of how i like to organize my css i'm going to move up to right here and again this is just making things more robust whether it's a link or whether it's a button so they will work no matter what and there we go that's working pretty good now i did add my tab list so we can come down and say that we have our tab list and in here i can change my gap so let's make it maybe three rem and if we go take a look there we go we have a better spacing on those maybe 2.5 would actually be or a 2 or 2.5 would actually be right in the ball house of what we need so that's looking pretty good and last but not least we do need to have the active one and i'm almost guaranteed use an active class when you did this which is perfectly fine and it works and it's what i've taught you to do and what you probably assumed would be the solution i am going to do things a little bit different for this one just because i was talking about accessibility um so i do want to come in on these guys right here and instead of using the active class i'm actually going to come on this first button and i'm going to write area selected is equal to true and we're going to take the same thing and we're going to put it on our other buttons but we're going to switch them to false and if you don't know what an area is it stands for accessible rich internet applications and basically it's something that we can use to give extra context once again to assistive technologies and because we're going to be turning this into a tab system it's a way to let them know that this is actually the selected tab that's very different than links because when you go to a different page we're going to have to manually move this class one to the next when we click on a link we're going to literally another html page whereas here we're staying on the same page and we're changing content around and we're going to have tabs that are related to each one of these buttons and this is going to let the assistive technology know which one of the tabs is actually open we're gonna have more area stuff that's gonna be coming into here area is something that can seem overwhelming if you first start getting into it because there's so many different properties but in general if you're using semantic html you don't need to worry about it too much but for something like a tab list it is going to really help us out and one way that we can sort of try and enforce people using these types of things is to come in and here we have our active another way that we could do the same thing is with our underlying indicators we could say that anything that has the attribute here you can actually put attribute selectors so anything with an area selected equals true and now if we go and take a look we can see it's added that underneath because that's the area selected equals true the one issue is obviously the text color so we can also come in and say that we can change the color of the entire thing as well so then the color will also become this one right here and paste that so it's the same in both spots and then the selected one will be white and then we can you know we have the hover effect once we add the functionality to this when we click on this it will switch which one is the area selected and the styling of it will update along with what we've done here so there we go that is our tabs nice and done all right so we're moving on into our dot indicators now which are these guys right here and there's really nothing too much complex or nothing new about these other than one little thing that i want to look at with you before i give you the challenge of completing them and that is if we come and we're going to jump over here and they're actually very very similar to our tab list right here so i'm actually going to copy that and paste it in but we obviously will change this over from a tab list to dot nbk tours and i think leaving the flex on here makes sense because it'll give us extra control on spacing them if we need that and then in here we don't really need these classes on here i don't think so let's get rid of these for you just to speed things up for when i give you the challenge and we get rid of that that and that and we want to keep these areas selected because it's going to work very similar to how our tabs are going to work and that when we switch between them we want them we're going to be switching between different tabs effectively just with a different type of visual indicator to show us what's happening but the problem is we're saying area selected equals true but then if we take the text out and we hit save and let's go and there they are and actually let's do one thing really really fast here uh on this div i'm going to come in with a class is equal to flow and then here in my style let's just say that my uh flow space is for ram or something like that just add the extra spacing so we can see those are the dot indicators right there and so this is where they're going to be but there's no context right so it knows the screenwriter will know which one is selected but it doesn't know what is actually selected if it's reading this out loud it's going to read button button button and it doesn't there's no context to what the buttons are or what the buttons are doing whereas this is our slide title or our tab title i'll put slide title but it's really a tab title uh but i've already started writing so there's no going back now slide title and now we have context for what they are just like here we know it's our moon our mars and our europa but we don't want that text there because visually this is what we need where we just want these visual icons instead but there is a solution to this and what we can do is come in on all of these and add a span class is equal to and this is something we created a long time ago and we haven't used yet our sr only which is short for screen reader only and there's other ways of adding context like this but i'm going to do it like this in this situation where now you can actually see it's hidden away the text that was in there and that's perfect it's exactly what we wanted and what this basically is if we go and find that in our css it's doing a whole bunch of things here to visually hide whatever is inside this class so those spans they're just hidden away they're not going to be visually seen but when an assistive technology like a screen reader gets to this and is reading out things it will read this and it gives the button context to what happens if the person happens to click and select that slide so we're just helping a bit with the accessibility and again we're going to be going deeper in as we make these functional but for now we're worried more about the visuals and we sort of have some ugly buttons that we want to turn into those little circle buttons so i'm going to come all the way down here and i'm just going to let you do it it's a little bit simpler i think than some of the other ones we've done so far i don't think you need a helping hand based on everything we've looked at so give it your best shot and in a few seconds i will give you my solution all right so just like before we have our dot indicators and we don't want to actually do anything on the dot indicators we want to select all of the direct children that are inside and there's a few things i'm going to do the cursor pointer once again so we have a nice pointer on there i'm going to come in with a border that is zero and we're going to throw in right away a border radius of 50 to make them nice perfect circles and hopefully it makes some perfect circles but we might go and look and find out oh they're just really flat now that's not what we want how could we fix that this is something we've looked at before how can we make a nice perfect square or circle in this case because we already have our border radius on there without setting a width and a height hopefully you said that we could set an aspect ratio of one so it's one over one which we can make just into one like that and by doing that we go and take a look look at that perfect little circles right there uh they do need to be a little bit bigger than that so why don't we just add a touch of padding so we can do padding of like .25 uh m or rem would probably be fine you know what that made them too small let's try 8.5 instead and go take a look and that's more in line with the actual size that we want on them and of course we need the now set the colors so we have very faded medium faded and not faded at all so we can come in and set first a background color background color right there and i'll do my hsl and choose the 0.25 as my starting point and then what i'm actually going to do just to speed things up let's copy that paste it and make this my hover and of course with my hover we also want to have a focus we're actually going to change the focus to something different a little bit later but we'll talk about that once we make it functional because that's where we'll see why we want to change it for this one the only thing we need to do is come in and change the color 2.5 and then we can also take advantage of this type of selector right here you know what let's just copy all that and change this over to our dot indicator with an area selected is true and in that case the background color will be our pure white and let's go and take a look and i think that's looking pretty good and there we go we get our hover seat that's looking good we have the active state that's looking good and i think i'm pretty happy with that i hope you are too and i'll see you in the next lesson so it's time for the last interactive element which is our numbered indicators and you before you started this you might have noticed that this lesson is actually a lot shorter than pretty much all the other ones we've done so far and that's because i'm not helping you with this one i'm leaving this one completely up to you i'm not providing any solutions i think you've learned enough along the way and yeah you've reached a point where you you know what to do here you don't need my help anymore you can pull this off all on your own and this is one of those things that's really important i've mentioned it before i've been challenging you throughout but i want to leave certain things in this not actually done to give you a real initiative to take them on and to try them because up until now if you were stuck you'd be able to just watch my solution a few seconds later or in the next lesson and at one point you need to take those training wheels off and put into practice what you're learning and maybe you haven't been doing the challenges knowing that i was coming up with the solutions and it's very different to watch someone else do it and to understand what they're doing and i'm sure you've done this before you've watched tutorials you've understood what they're doing and then you go to do something similar yourself a week later and you just have no idea where to start so it's really important we've done a lot of things there's a lot of similarities there's a few little things that are going to be different here and i want you to take what you've learned throughout all of this and put it into practice and if you get stuck along the way refer back to those previous lessons where you might remember i know kevin covered this i just don't remember exactly how to do it and then you can come and fix whatever you were stuck on and keep going forward until you're done because that's what's really going to reinforce everything that you're learning here you're in probably the most interactive way to learn code you just have to you know come in pause the video and start typing stuff take advantage of that and do as much coding as you can so yeah i'm not giving you a solution i'm leaving this one completely up to you i'll give you a little helping hand just by going over to here putting the indicator right here where you need to start and take as much time as you need with it don't feel rushed because i know you're going to be excited to get to the next lesson where we're going to be starting to get into the actual design the actual pages and making things come to life but please do take the time to complete this first and then i will see you in that next lesson when you're ready so we've finished working on our design system and now it is time to start working on the actual content of the pages and before we dive into writing some code i just want to look quickly at what we're starting with from friend and mentor because they do give us some resources to be starting with so first of all we do have the design of all the pages that we're going to be creating which we've already been using our design system fork we have our homepage we have a destination page we also have our crew page that we're going to have to build as well as a technology page and there's different ways that we might approach this and this is where you need to make some choices in how you're going to do that and this is just a screenshot we can see all the files are here as well in this scrim and if you download the files from frontend mentor this is in the starter code section where we have a lot of html files and this is where you're going to have to make a decision based on where your experience level is at with html css javascript any frameworks you might be using and all of that because if we look here we have all of these crew pages right here we have all these destination pages right here and we have all these technology pages that are right there and you might be going why do i have all of those and that's because when we're on any given one of those designs let's rewind just a second and if i look at this on my technologies one we have three pages because there's three different slides here so they're providing us the content for each one of those as a separate page and if you're newer in your frontend journey you might decide to take this on as actual links when you click one of these it just goes to another html page and then this one goes to another html page they're links they're not buttons and that's completely fine that's perfect you could do the same thing on our uh crew page you could do the same thing on this where each tab is actually just a different link that brings you to a new page if you're more comfortable with javascript then you can add some javascript functionality with just one page where we're changing the content or if you're further along in your journey what you might want to use is actually the data.json file which is right here and we can take a look at that where all of the information for all of the pages is available here as a json file so you could actually populate all the content using this instead of having to copy paste and have a whole bunch of divs and everything and add a bit of interactivity that way where you're pulling the information from here for this because i want it to be a little more vanilla in terms we're just gonna be using regular javascript and also because i'm targeting more of an intermediate level we're gonna find the middle ground i'm not going to have all of these pages here i'm only going to be having one page for technology one page for destination and one page for crew and i'm gonna have all the content on that page and just create a tab system using javascript to make it a little interactive so it's not pulling the information from here it's not going to be static individual pages for all of them it's a middle ground but based on your skill level if you want to challenge yourself and pull ahead of me which i really encourage that you do at this stage you can choose whichever direction you want to go in for these now if you and if you are going that route we can see that if you go in the destination all the content is here but there's no markup or anything so you are going to be writing your own html to actually organize the content that we can see in each one of these so that is an important thing to know and we are going to be starting with our index right here which is our homepage and for this one we don't have to worry too much because there's no different tabs or systems like that it's sort of the simplest page but at the same time we will have to do a bit more work to get our navigation working so at this stage we have a design system in place if you feel ready to start taking what we've done and applying it you can go ahead and do that or if you'd rather you could work with me as we go through the home page here see how i do it a little bit i'll be starting mobile first we'll get the whole homepage working the navigation the mobile version as well as the large version of it working and then from there we're going to work our way into the other pages so you can always see how i do this first page and then take what you've learned from here to push ahead of me to finish off the other pages before i look at my solutions for them all right so it's time to start our work on the homepage and i'm really excited for that and here is the design that we are going to be focused on we will have to do a little bit more work for the navigation to finally get things working here but we will be breaking this page up over multiple lessons we can focus on the mobile version as well as the large version of the navigation as we run through on this but before we write any markup let's look at what we're actually starting with here so we have some html that's done for us we have our head that has the meta viewport which is very important because this means that our media queries will work on mobile devices so that's always a good one and we have a favicon here that's being brought in and a title so we're missing the link to our css file and we're also missing the link to the google fonts we've already got those set up in the design system so we might as well steal them from there so we can just grab this right here and i'll take that comment with it go back to my index and let's go right here and paste them in we have my google fonts that's awesome and then here we might as well put another comment just saying that this is our custom css and we have our css coming let's hit save cross our fingers c and yes we did something right we already got a win we can see the colors and the fonts are coming through so that is awesome all right so the next stage is to start writing our html for this and one thing that people ask me a lot is mobile first or desktop first when i style i style based on mobile first but when i'm writing html i focus on the desktop first and the reason that i do that is because this is where the most complexity in the layout is if i focused on this everything's stacking i don't really need to do anything it just it will stack automatically so i will focus on this while i'm writing my html and i'll be using as many of the utility classes as i have already along the way and just really quickly for the images and all that they are in the assets folder you're going to see that there's different versions for each one of the pages and some of the images like our background we actually have multiple versions of which i'll be talking more about once we start styling things up at this stage though i do think that you're ready to start going and remember we have some of these things or at least this already done sort of in our design system so don't feel shy about going to copy and paste it from there and if you haven't already gone ahead and started trying this out on your own just come in and see if you can figure out what tags you'd be using where what utility classes that we've already set up and then i'll go through this and give you my own solution to it all right so what i'm going to do is i'm going to start up here and i'm going to create a header and i'm going to give this a class and we might need more classes on here but i'm going to call it primary header for now and this isn't saying that there will be secondary headers or any other headers but the header is an element that you can have multiple on a page this could be if you have sections or articles within a page that need a header so i do like giving a class that i could hook into just in case and again sites can grow and different things can happen and if you style everything on the header element it could potentially run into conflicts down the road then in here i'm going to put a div that is going to be used close div this div is going to be used for my logo and then we can put our navigation which we already had so let's go and grab that because as i said we've already done the hard work on creating a navigation so why do the hard work twice nav close nav it has our classes already on there everything we need so i can just come here and i can paste it in there are a few little things that we will have to change first let's just fix my tabs so things are sorted out a little bit better and obviously the names here need to be updated and we need a new one so i'll do that really quickly and there we go i can delete this and let's hit save and just see there we go look at that we have a navigation it's not going to go anywhere yet but at least it is working and we already have our index we can do an index.html here we know this one is going to go to my destination.html and there we go i have that set up and ready to go now as i mentioned this div i'm going to be using for my logo and the reason i put a div here instead of just putting an image is we are also we need flex on this because both in this version and in this version we always have two columns that are popping up here and if an image is a flex item there are some bugs that can come up with that that are well known um especially within chromium and pretty much all of that gets fixed if they're inside a div because the div is the flex item and then the image can just be a normal image so here i'll come in with my image src is going to be equal to we want to go to our assets and from our assets it is in shared and then we have logo.svg and i will give that alt is equal to space tourism logo and i'm also going to come and give that a class of logo just in case and we probably will need to add some styles to that just to control it a little bit better so let's hit save and go and there we go we have a logo now so it's not perfect yet but let's come in and give a flex here on the entire header so we have one child here and my nav is the other child here so the flex will make each one into a column and said save there we go they're next to one another it's not perfect but at least we're on the right track and actually realizing now when i set this up one thing that i missed from the design system is all of these should also have been the condensed font so we can come and add that in now which would be font family songs condensed and there we go that's looking a little bit more like the actual one so i realize the alignment's not perfect positioning is not perfect but i just want to use what we already have so let's go and look now we've got that done we want to come down to here and one thing we had created was a container class and just as a little heads up we will actually be changing what the container is doing but i want to leave it like this for now and then we'll come back and modify it a little bit later and how it's working not just in the size we're going to take a little bit of a different approach on what the container does but now at least we're holding our content in the middle of the page and that's working pretty well i can't get big enough on my small screen right now but if we could get bigger it would leave us some space on the sides there so the next thing that we can do now that that's all in our container is we have all of our text and this is right away a really good look at why i wanted classes for our typography rather than setting things up because so you want to travel to space to me is the h1 and we have two different styles that are coming in on there so what i'm going to do is take this entire thing and we're going to open our h1 here and we're going to close our h1 down here and so you want to travel too and we can throw a span on this one right here and we can close our span because it is one sentence this is not a heading five followed by and heading one of space the h1 should be the title of your page so you want to travel to space is one sentence that all goes together and it's just a visual difference for people that are visiting it so what we can do now is so you want to travel to space on my h1 we have some utility classes we can use so the color on there is my accent color so we can use text accent we have my font size and the font family size condensed as well as having the upper case and hit save it's looking good except obviously space needs to be changed a little bit right here so on space we can come here and give this a class is equal to and that would be my font size 900 my font family serif and my text white hit save and look at that we're getting there i know it's not on its own line and i'm not too stressed about that right now but look at the progress we've already started to make uh the last thing i just realized that we missed here would be my letter spacing so on here i'll do the letter spacing at the end letter spacing one just there we go now we're really rocking and rolling so now we can jump down into this paragraph that is down here and if we go and take a look to me that's just one big paragraph that we have so that's nice and simple we can just throw a p and close our paragraph right here and we shouldn't actually have to do anything else on that that i can think of so i'm going to leave that just like that so let's style this explore button and we'll look at that we've already done all that we don't have to do it again so we can go to our design system and right here we have my explore button so i can just copy that come back on over to here and paste that in and hit save and we get this giant explore button that's coming up and maybe going what's happening here why is my explorer it's working it's just if the browser is larger it's exploding and getting really big and it's an interesting reason why that happens so let's go to our css and look at what might have caused that it has to do with our display of grid large button we did a display grid so we could easily center the text in the middle of it the problem with this is when you do a display of grid it's actually making it into a the grid is an inner display value and the outer display value becomes block and because it's a block level element it's just growing to fit the page automatically i think however i'm going to end up setting this up in this two column section like this it's not really going to change too much along the way so what we can actually do to fix that is to come on here and actually say it's an inline grid and then it means it won't automatically expand to take up as much space as it can because it's more of an inline element on the outside and a grid element on the inside and even with how we're going to set this up i don't think it would be an issue but i will leave it like this for now because that does the job that we need it to and it could be good if ever we have to use it in a different place all right so our homepage it's not amazing but it's getting there and the next part i'm going to do is to fix the layout on here and then after we do the layout we can do a few little tiny touches before we get to the navigation itself so there's a few things let's first jump on over to my back to the index here because we're going to need a couple of things that are different one of them is on the body here i'm i'm going to give this a class it's equal to home because we do need to set background images on these pages and this is going to be one way that it opens the door for those another thing that we're going to want to do is play with this container a little bit and this is where i'm actually going to keep this utility class because it's something that's very useful but i'm going to change this to a second one which is grid container and the reason why i'm gonna do this is actually because of this page right here um if it wasn't for that all the other pages we have actually have like a very consistent spacing on everything but here we have this image that peels off the side and stretches off and sort of breaks out of the container and so by coming up with a grid container that's going to replace our regular one it's going to be the easiest way to achieve that type of effect and this is one of those important things that i know we created in our design system before you do want to keep an eye on what's happening on the other pages but just we didn't have to make a layout yet so i didn't want to dive into creating the grids and all of that at that time i really wanted to focus on all of those sort of more functional utility classes and now we're worrying a bit more about layout so we'll dive into here and how we can sort of set something up like this that will help when you get to this page here and so for the grid container i'm let's go back over to our index here and let's find that container class because we actually want to sort of replicate it but with grid in an interesting way so we have a regular one there so i'm going to come here and i'm going to do grid container and so this is going to be a display grid as the name sort of entails and i had a padding in line of 2m before for the spacing on the left and the right and i want to maintain that so one way we can maintain that is and all this will be with our grid template columns that i'm going to set up so we could do a 2m on that side something here and then a 2m on the other side and that means that we have like a grid column on the left that will be two a grid column on the right that will be two and then something in the middle that could be something looks something like this and that could sort of set the stage so if you have an idea of how we could do that to sort of set the stage with this 80 in the middle without it being locked in 80 because if i do 80 rem here and i hit save on that it's actually going to like break everything right because now we have this grid that's locked in at 80 pixels wide and you can see everything sort of went all wonky because of how the some stuff is actually going into those columns that are two ram on the two sides that we don't want to do right now but uh we can see that we have this sort of broken thing with a lot of over scroll going on so if you know how to fix that and you've used grid before and you can think of a solution you can come in and do that now and if you're not sure just wait a second and i'll give my solution all right so instead of doing an adram like that what we can do is a min max and with a min max value if you've never seen it it's let's set a minimum value and a maximum value and so we could say is zero pixels can actually literally be zero and then the largest it's allowed to get to is my adren and i'm gonna go with a bit smaller here just um so we can see it a little bit better in scrimba what's actually happening and let's hit save on that and go take a look and you can see that now things are there and you will see that it is actually still sort of breaking but that's just because the button is overflowing it has nothing to do with anything else it's really just the button overflowing out the side you can see that that middle area is actually shrinking and growing right now whereas if i switch this back to just being let's do 60 for the moment and i come back you can see that text in the middle it's not shrinking because it's locked in because this is what's in that middle column right now so by having the min max here instead it means the middle area is growing and shrinking the only thing is we don't have one column really in the middle we have two and we have two here and every page has two columns on it so for me the easier solution isn't only to have one column here it would be to have two columns instead if you can think of a way to do that go ahead right now and set that up all right so there's a couple of different ways we could do it we could actually just take this i'm going to drop that down to 30. i'll do 40 so we go back to our original 80 size that we had and we could just take this and put two of them and so we're saying we have one column is two rem one column is this one column is this and then that so now we actually have four columns you can see my layout has changed a little bit because everything is sort of just trying to squeeze into the spaces it has available and that works and that gives us our four columns if you want to make this a little bit shorter another way you could achieve the same thing is by doing a repeat here and then with repeat you can repeat things as the name sort of implies so we do repeat comma and then ha so repeat two times and this so we're getting two columns of our min max 040 and then a 2m on both sides now i am going to do one more step and then give you a little challenge to do so let's go and take a look at what we've created just really fast here where we have our grid container and we have all of this in our grid container so for this to really work and the easiest way i think just to make sure this is grouped on one side and that button is grouped over on the other side i'm going to wrap this and i'm literally i'm not even going to name this class i'm just going to do a div that ends right here close div and if you named it that's perfectly fine but we don't really need to name it uh for this purpose and then we open a div there and we're gonna close that div right here close div and let's just fix our spacing a little bit here okay so we have a grid container with one and two children in there and in every situation for the other pages we can do the same thing so here we could have one for this one and then one over here and the other pages well we can set these all up to have two columns effectively inside of them and even our button i don't know if it even needs to be in a div necessarily we could just leave that on its own but we'll leave this like this for now just because it makes it a bit more repeatable where you just throw whatever content you need into each one of the columns so what we can do for that is and again this wouldn't necessarily work for every possible site that you're doing in the future but in this one where it's very consistent how this grid container is going to work from page to page to page we could say the first child is a grid column of one over two and you could actually we could just say one and it's going to work and then we can take that same thing and you want to guess what i'm going to change this to that would be last child here and that would get a great column of two and i just realized this should actually be two and three now the one problem that we're running into if we go and take a look is well we have some overflow we're going to talk about that in a minute and there's actually two things i can think of that i think you could try and do one of them is something we've already looked at so if you're not familiar with grid i think you could still solve this problem and there's a second one where our content is actually stuck to the left of the page instead of being centered on the page and again we're trying to recreate this idea with a margin of zero auto or auto on the left and the right we're not doing that with our grid this is my auto feature or function right here so the first thing is i want some spacing in between them now we have overflow that's happening because of the the sizes on some of this and this text is actually overflowing because it's one word we're gonna solve that problem later um but i want like here you can see how close this text is getting to my button so think of something we've done before that has allowed us to add space so you can try doing that and if you're familiar with grid see if you can find a solution to these two m things on the side to actually have them act as a a buffer at small screens that will allow as much space as we need at big screens so let's start with one of them which is my gap and we can just come in and say a gap of say to ram and that's going to give us a space and i'm actually going to do this one only as a column gap not that we have any rows but just in case and so the column gap is in between these so you can just see now compared to before and if you want you can pause and comment the code out and play with it you'll just notice that this text here isn't getting as close to there delete the word space even if you want and it might give you a better illustration that we're getting now a gap in between my button and what we have on this side so you can give that a try if you want but we've also seen that we can come in and we can come in here and give this a ver and i'm going to call this one container gutter and it could be container or no with container gap just because it would be more consistent with the naming that we've had on other gaps throughout here and we could default that to to rem and that way if we need to change it for some of the different pages where we need less space or more space it becomes very easy to do and if we don't need to change it it just sticks at the to rem the other solution was that spacing thing on the sides where we don't want it to stay here so for this and this if you don't know grid you probably wouldn't know the solution to this but it would be a min max where the minimum is 2m and this could be rem 2. it wouldn't change anything in this situation and then the large is a 1fr and fr pretty much just means take as much space as you need or take the available space and use it so if both of this have a one fr and a one fr when we get to the larger sizes it will hold the content in the middle now the only issue is uh in my window right now in scrimba is a little bit small so i'm gonna bring this down to 30 just so we can really visualize what's happening but if you're on a larger screen you could leave that at 40 or you could choose a different number that you want for the total there and what we can do is come take a look now and we should see let's refresh our page and when it's at the small sizes we have our two columns ignoring the overflowing text but you can see that this text in this text is breaking so we have two columns right there and actually let's highlight those let's just come here and say uh outline one pixel solid red just so we can really see what's happening and this one can be a one pixel solid yellow and if we go and take a look we can see our two columns now and just that the space is overflowing out and they're gonna get bigger bigger bigger and then at one point there we go they lock in at that size and those two other ones those frs come in and save the day and just hold everything in the middle of the page and that's one of my favorite things to do with grid so we can see that that i think is looking really nice right now it's working great so if you want to play around with this experiment with that a little to really understand what's happening go ahead and do that and then i'll see you soon in the next lesson all right so we can continue on our homepage and start trying to get it a little bit closer to what we see on the page right now uh one of the things that we are going to do though is we're going to take advantage and you might remember a long time ago when we did our reset on the body itself i gave it a minimum height of 100 vh and this is really going to help us because if we come and look at our grid container right now and i look at here and i look at the height of it now let's do an outline of five pixels solid and we'll do lime green so it stands out compared to the other outlines we have and it's not stretching the entire space that we need and ideally it would just take up the rest of the available space on the page so one way we can take advantage of that minimum height we did on our body and this is going to help us on all these pages that we're creating right now is along with this we're going to add a little bit more we're actually going to throw a display of grid on here which is going to help all the items that are on here stretch out now when we go and take a look what's happened is now you can actually see it it is stretching out and we don't quite see the bottom of this but effectively they're stretching but there's this weird thing going on in the height as you can see which is that then it's sort of dividing the space somewhat equally and it's the leftover space underneath my navigation is the same as the leftover space here and it's dividing it between the two of them so to fix that i'm going to set up a grid template rose and we're going to do a min content for the top and an auto or one of our uh for the bottom and what that's going to give us now if we go back look at that we have the grid itself is stretching the outline's actually bleeding off the side of the page a little bit so maybe what we'll do is we'll find our grid container here and we'll just switch that outline that we had to a border so now we'll actually see there we go we can actually see the border uh on our screen and now we can see how that's sort of giving us a lot more room to play with so our entire page is a display grid which is allowing this to stretch and fit that minimum height that we have and now we also have the advantage within this of the because the green box our our grid container is a grid that we have the grid inside here and we can play with the positioning of our elements within that now obviously we've run into a few little things is small screens this is definitely not working so let's fix that and we're going to use a media query to do it so here where i have my grid container it's really nice and easy to do we can keep everything here exactly the same i'm just going to grab this take it out and put a media query so add media and i'm gonna do a min width and we'll talk about what my min width is going to be in a second but then we can choose our grid container once again and throw that right in there and the other thing i do want to do is actually grab these right here and also move them up into this media query because this is a display grid um and i you know we could move this grid down to here but it could come in and be useful for gaps and other things so i'm going to leave the grid on the grid container itself but that could be something we move off into the media query but um because this has a grid column two and a grid column of three even though we're not defining any grid columns here it will actually place them on a grid column two and three will create those columns for us because we're telling them they have to live there so if we do this now what it's going to do is actually it will only apply them when we've created our explicit columns here and i'm going to go with a 45 rem which comes out to i think it's about 760 pixels which is often where like these tablet layouts sort of reach that maximum size you want and things start looking ugly on them and we want to sort of go more into the desktop style layout so i'm going to do it like that and let's go and take a look at what that's given us so when we look at the smaller sizes now we can see that there we go it's breaking we have some overflow that's happening because of the navigation so why don't uh in the meantime until we get to that let's just take our navigation and comment it out so we can really focus on what's happening here so there we go we can see we have my two columns that are then turning into one column and everything is stacking and then we can go back to our two and that is pretty awesome now we're missing some things that are specific to the home page layout but as far as the functionality of the container itself i think it's working really well at this point and it should work for us uh well at on all of the pages we are running into a few different things that we clearly have this space thing that is you know the space is overflowing out the side which is a little bit problematic and ideally you know our container would probably be a little bit bigger than this as i mentioned but i set it to a smaller size but it would still run into this potential problem of some overflow happening and that is something that's actually going to affect us across multiple pages with the titles and i'll explore why that is in the next lesson okay so this space right here is causing us some issues where it's overflowing and as i mentioned this is going to happen on other pages as well and this is going to happen because we focused on the design system that was provided and actually all the font sizes there were based on the largest sizes available and not on the tablet or on the smallest one and if you go into your figma file you'll be able to do the inspecting and find all the font sizes you need and you'll see that some of them are only smaller at smallest screen sizes some of them at the tablet screen size they're a little bit bigger and then they get even bigger at the large one and our big space title here is one of those ones that does adjust between the different screen sizes and the different layouts and there are many other ones that do as well so if you want to go through and dive in and get them you can i don't mind if you do all the hard work there but this is going to be made a lot easier for us because of these utility classes and especially these custom properties that we created uh if you come from a background with sas variables and you haven't done a lot with custom properties you might remember a system where you'd have like a font size small 900 font size medium 900 font size large 900 and then you'd actually have media queries where you're changing what this is the font size every time so my 900 you have to redefine each one of these selectors within a media query every time luckily we don't have to do that anymore with custom properties because we can redefine custom properties within a media query and we've already made that executive decision that our larger screen sizes will kick in here at the 45 rem so i'm going to come up and use that over here i'm going to say that we're going to have our at media with a min width of 45 rem and in here we can do our route and if you're up to it and you want to redefine all the sizes these are as i mentioned the ones from our largest screen size so that would be the ones that go here if we want to sort of follow along with what the what's provided in the figma file we can have an app media min width of around 35 rem which would be our tablet sizes and this comes up to 560 pixels and actually i put ram on all of these i normally use m for my media queries and there is a reason for that and it's just safari treats media queries a little bit differently than the other browsers if you zoom in and out on them and if you use rem or pixels whereas if you have them set in m it actually treats it in a similar way so we'll go with m on these so everything sort of behaves the same between all the different browsers um and this is where the tablet one would come in as i said it's around 560 pixels so it's a little bit bigger than the tap the mobile design but we're getting into that tablet and then here we'd hit the larger sizes at this point so if you want to go through and dive in and try and redefine them all and get all of these and then see if it matches up with what i come up with by all means you can go for it and in just a few seconds i'll just come in and do it so if you just want to wait for that and then see the magic results of it all you can come in and we're going to do one more thing with our typography before i let you go all right so i'm going to start with the tablet layout and the tablet sizes which are going to be right here and these are at the smallest one so that that's going through all of the tablet ones just finding each one correlating it to the design system we had and these are the sizes that i found then what i want to do is i want to come in and get the ones for my uh right here just like that and you'll notice i'm not redefining all of them i'm only redefining the ones that are changing so my body font size went from this really small 15 pixels to a 16 so we can go to one rem and then at the larger sizes it goes up to the 18 so we can redefine each one of those along the way whereas the 300 it stays the same throughout all of them and the 200 also i believe stays the same throughout all of them except here actually we also have this one that would come in right there because that's where this one gets to the biggest size and then on this one again this we don't need here anymore this one so the 900 is at the same 800 they're not the same so we'd leave 800 700 is bigger 600 is bigger 500 is the same as we had in our original one so i don't need to redefine it 400 we want and then these two i also don't need because they're the same as our original declaration here so this is where we're starting we're changing them and then changing them again here so if we go and take a look we should see that space we're still going to have an overflow issue but we're going to see that when we get to a small enough size that it is redefining so we know the media query is working we can see that everything is working we can see those font sizes switching on the body as well as we go through on these and the body font size gets smaller and then it gets smaller again even though some of those changes are a little minor and hard to see they are happy or the button especially you can see the button gets smaller and smaller there and maybe we'll have to adjust that actually so it doesn't get too small at small screens but i did mention we're going to do one thing a little bit differently um and that is with these really big font sizes we can actually run into some problems with them as we can see here with our space and this is where sometimes executive decisions have to come in but we also have like this thing right where we have the tablet where we're here and everything maybe would be okay then we have the bigger font one and then like where do we get things to change um and so we know this is our smallest size we know that this is our biggest size so what i'm actually going to do is remove this completely and come in with a clamp value here instead and if you don't know about clamp clamp allows us to do is set a minimum size so we know the smallest we want it to ever get is 5 ram it allows us to set a middle value and it allows us to set a maximum and the maximum was our 9.375 rem and for the middle value we wanted something that's going to allow it to grow and to shrink so what we often see is viewport units and usually if you're using viewport units it's a good idea to also include a rem value as well just to uh viewport units won't react to zooming in and out so if somebody needs to zoom in and out it could lock things in so even though this is really big i'm still going to do it just for best practice and the you the one thing that can be really hard to figure out is this and it just takes experimentation you could try with 10 and then we could take a look at what it's looking like so we can see that that text is getting bigger and smaller as the screen is shrinking and we see it's not actually causing any issues so maybe you like 10 and you can see it here it's not shrinking anymore and we get big enough at one point if we had a bigger screen it would lock in and it wouldn't get any bigger and we're probably very close to where it's locking in and you could try doing this at a smaller growth factor so five would be much smaller so you can see the text is really small it's going to be harder for that to even start to grow because that five viewport unit's not even kicking in or you could come in with 50 viewport units and then it's basically always going to be the biggest size because 50 viewport units is so big and the viewport units is just based on the width of the screen so if you want to experiment play with this i'm going to go with around 8 but if you want to play with that experiment with this there's also a vmin and vmax that you can play around with and have some fun with it do a quick search on those if you haven't heard of them because they look at either the width or the height depending on the situation and they can be kind of interesting too and play with that if you want to try playing around with some of these other ones instead and replacing them with clamps as well go for it explore that and then when you're ready i'll see you in the next lesson all right so we've fixed some problems but we still have other ones that are left and one of those problems is our title going in a big string all the way across like this at certain screen sizes before it breaks back down like that and even here you can see like the word two is squeezing in next to it and it doesn't look very nice we have some layout issues as well but for this lesson i just want to focus on fixing this title so let's just quickly look at my markup where how we did that we have an h1 right there with our span inside of it and if you have a rough idea of maybe how we can fix that from happening why don't you jump in and tackle that right now and then in a second i will show you my own solution all right so there's a few different ways that you could solve this and one of them would be in your css doing something and i'm going to throw it at the bottom because we're actually going to delete this in a second but this is maybe an approach you took you did h1 span and then we said display of block or something like that and that would work 100 if we go and take a look we should actually see that it is working so if you thought of that there we go we can see that because now the word space here is always selected there is always a display of block nothing can go next to it so no matter what happens no matter what layout we come in with space is always going to be on its own line and this works but it's a little bit dangerous because we will have h1s on other pages and that could potentially and actually would run us into some trouble when we get to those so this is where a class would be better suited here it could be like home page homepage title maybe could be something that you could use to do the same thing and then over on your homepage you could do you know add that or for me this is doing one thing and it's only doing one thing we don't need it to do anything else when you have declarations like that go could this be a display block utility class instead i don't even know if we're going to need one anywhere else on our site but i'm just going to move it up here so it's within our utility classes my grid we have a display flex a display grid and now a display block and again if something's doing one thing and one thing only it's usually a good idea just to turn that into a utility class so you can use it in other places if you need to so then i could come over here and on that span we could just add the d block to it and there we go it solved that problem it's never going to be on more than one line all right so i'm going to give you a bit of a mini layout challenge now and what that's going to be is actually to see if you can accomplish the same layout right now with what we have and you might have to play around with things a little bit but without a grid container and instead switching this over to using flexbox and hopefully for you to be able to see why i chose grid to do this in the first place so i'm going to leave this here for you to tackle and do what you can with so i'll pop so i'll stop talking for a few seconds to let you hit pause and come in and try your best with it and see what you can do to get as close to the layout that we had you might have to add more divs or play with different classes go into the css do whatever you need to do to get it to work and then when you want you can hit play again and you can watch me take my own try at it all right so let's come in here and i'm just going to add we have the flex utility class so let's start by adding that and well there we go they go next to each one one another and that's what we sort of wanted in the first place so that's not bad except obviously being a little bit too wide and we want to be able to stop it and we were using our grid for that but luckily we also have a container class that we had created so i'm going to bring that on there the only issue right now is my container did have a max width of 80 rim versus the 60 where we're using and so just for now i will come in with a max width here of 60 of course i could go in the css and do the same thing but just to get a little bit closer to what we had before and there we go we're getting there it's a little bit better but it's definitely not matching the design where we have this big space in the middle and we're not limiting the length of things and it's not quite the same and right away this is one of the things that i really like about using grid in certain situations is i can create a grid and i can just sort of lock things into it now with the grid we didn't have a gigantic gap between them and here obviously we do but one of the things that we're going to see in the future lessons this is going to have a 50 of the room to play with but within that 50 we can easily align this in the bottom right side and so the cell is actually going to be taking up a lot of room and the content of it is moving over and it creates that space and then as things are shrinking down these both state 50 width but just this empty space here that from that 50 percent is a little bit less so things just sort of flow really nicely and that's one of the reasons for bigger layout pieces even though this is sort of like a 2d layout right we're just doing two columns like that i'm using i'm using grid more and more for that type of thing even if i just need two columns i find it a little bit easier to set up and so like one way we could go i'm going to create an even columns class here even columns and then we can come over into my css and here with my flex what we'll say is if it's flex with even columns and this is just to be really clear i'm deleting it anyway so i'm just going to leave it like this actually i don't want to do anything on that i want to select both children and then we can give both of these a width of 100 and there's other ways of doing this as well this isn't the only way to do it and let's just save here so i save my class with it and now we actually do get two even columns and just to show you that they are actually even columns let's also give these an outline of one pixel solid lime green just so we can see them and now we have two even columns in there and then i can take this explorer and actually push it over to the right side a little bit more um and there's different ways of doing that we could create a class for it we could come in and play around um one thing we could do is actually on this div we could give like here i'm just gonna we'll do an inline style again because we're gonna delete all this and so here i could do another display flex and then do an align uh not a line justify dust defy content flex and um and that should line things up over on that side or it can just break everything and it's doing that that's also going to need an align items start i think we'll fix it there we go and the reason that happened was just because by default it's stretch and because we have an aspect ratio of one so it's stretching that way and then the aspect ratio is just making it huge and it's actually overflowing out of the area that it has to live so this flex start means it has to live at the top and then the justify content pushes it all the way over to the right side and this is where with flex you're doing a display flex or something and then you have to do something like your even columns where you actually have to select the children and do different things like a flex one would work here flex basis 100 will work here i'm not going to go into those differences now it does create all these sort of little moving pieces and that's a nice thing with flex when you want something to flex like we're going to use in our navigation you sort of want these pieces to do their own thing to a certain extent whereas grid is much more structured and the parent has so much control over everything and we're going to see that we can sort of accomplish the similar thing that we just set up now but with grid and see that why i chose grid in the first place and for now i'm actually going to leave this here just in case you want to play around and experiment with it a little bit when you get to the next lesson it'll all be gone we'll go back to our grid solution and start setting things up to actually work the way we need them to to get the layout to look exactly like we have here so i'll see you over in that lesson when you are ready so right now our layout is looking like this and obviously we need it to look a little bit different ignoring the background image we need the placement of these to be very different from what the placement is now and because we're doing a mobile first approach i am going to start at the smaller screens and worry about these first and then we'll work our way up through the other ones so if we come over to here we can see that at the small screens it's not actually terrible but it's not perfect either and there's a couple of different approaches we could take to fixing this but the first thing that i want to do is just get everything centered within the space that we have so as a quick refresher we have a grid container we could do some stuff with potentially but remember this also would have to be something that can apply to other pages as well we also have a body class of home that maybe could be useful if we feel the need for that let's just go look at our page here and you'll notice all the text and everything is centered and if we go and look at the other layouts as well on the other layouts on the mobile and this is the tablet designs were provided everything is centered on them uh for each and every one of them no matter what ignoring the top but like these parts and don't worry about these titles but like the main text on all of them is centered until we get to the large screen sizes so it follows the same pattern throughout so that is something we can do more generically to make sure everything is centered and then we could worry more locally about pulling these down to the bottom because that's something that's a bit more unique on the homepage design so if you know how we can get everything centered like this then why don't you go ahead and do that based on what i just talked about i'll drop you right here i won't give you any hints and i'll let you go and then shortly i'll give my own solution all right so the very first thing i'm going to do is actually on my grid container here i am going to come and say a text align center uh the reason i'm doing it on the grid container and not on the body is there you know i don't want i don't think it would have any effect on my navigation anyway because of how i'm setting things up but it's very specific on all the pages that it's sort of like the main things here that it's happening with i think if you put it on the body it wouldn't actually cause any issues so it'd be perfectly fine and then we already have our media query set up here for it which also is kind of convenient because then i can put my text align here and switch it back to left so when we get to the large screen sizes uh we can go back and forth so for the text alignment that fixes that and it's already looking a little bit better i think and you'll also notice that some stuff doesn't look terrible but this is kind of stuck to the top a little bit and we can fix that and i'm going to we'll fix this button at the same time while we're here and then of course at the large screen sizes we need everything a lot closer to the bottom so let's again start here and why don't we actually fix that explore button and this is one of those times where the explore button was using if we go and take a look i did put the font size 600 and i'm actually going to take that off because we don't want that one changing it's the only thing that i found on the entire design that doesn't actually change font size uh that had the font size 600 sizing on it so we can just set that one manually which was to rem so if we come to here and we find my explore button which was my large button we can just do a search for that there and i can put a font size here so font size and i'm not even going to set it to my variable because again the variable is actually being redefined so i'm just going to put two ram here so it just stays at 2 ram all the time and this is something that i wouldn't actually do and i don't see very often but you know you have to make decisions and have to do these things every now and then and there we go i think that's looking a little bit more to how the design was actually meant to look when if you take a look at the the designs that were provided to us so we're making a bit of progress there now another thing we can do is i want to make sure that this text never actually gets this long and this is something that also comes up on every page if we go and take a look the text never gets too long on anything and there's a few different ways that we could tackle this i'm going to try and we could do it on a paragraph class and then do something to like center the paragraphs and stuff like that um which can actually become problematic when you get back up to these large screen sizes where this could actually become centered in a bigger space which could be a little bit annoying so uh what i'm actually going to do and this is a little bit different i won't lie compared to something i might do in other situations but on this grid container one solution that we could do is to say dot grid container and anything that's inside of it we're going to give it a max width of i'm going to go with 45 ch and we'll see what that does so 45 ch and if you don't know that's characters and it's equivalent the ch unit is equivalent to the zero character roughly the width of the zero character so there we go we can see it's limiting the length of our line and let's see what it looks like compared to here and i just realized the color i think is off on that too so uh we'll fix that in a second but it's not too bad maybe we could go a little bit bigger than that so i'll bump it up to 50. and we obviously run into the problem where it's stuck to the side and this is where we could try other things to try and solve this um but it's there's no problems here it's really just a problem here and it it's only a problem with the center aligned text you can see it's breaking everything everything is run into this a little bit of a mess right now but luckily it's not too hard to fix because we are using a display of grid on here and so what we can actually use on here is a place items of center and there's an align items center and a place items center they're a little bit different from each other one of them place item center is short for the justify items and align items whereas a place content would be short for align content and place content so we can compare the difference in a second but you can see that what it's done is it's actually pulled it's centering this is still and actually know what we'll do let's just take this i'm going to copy this i just it's going to help us visualize what's actually happening here so uh and let's delete these columns from here so you can see what it's done is it's actually it's centering this within like this top space and it's centering this within that bottom space that's right there um so as things get bigger and smaller it's distributing that space however we need and it's also centering them horizontally as well so it does a nice job of doing both of them if you used a place content rather than a place items so place content it's going to stick them together in the middle so now you can see that it's they're glued together there's no space it's putting all of the empty space on the top and all of the empty space on the bottom like that so that could also be useful if we want to go more with this approach because you feel that it matches with the design a little bit where we have a bit more space i do think the other one works better because of the large spacing that we could potentially get here on a tablet design right because we do have a lot of space we are using grid you could put this in as a gap value so we could keep it like that and then we could do a row gap and you could actually do this as a percentage so you could say like 10 uh or 20 or 50 and whatever that is we can see that it's putting that percentage here obviously it's causing overflows and other issues right now um so that is an option that you could do it could be viewport units as well but let's just say we did a 2 10 maybe um and the advantage with that is is if somebody's on a really small device where there's not a lot of vertical spacing it potentially works and then as that gets bigger that space increases so that could be something um to take into account or something to think about with this and how you want to set it up and create the spacing and then it does keep it off the top and the bottom or we go with the align the place items and then it puts more space here and it does leave us that cushion on the top and the bottom so things don't get too close so that's the solution i'm going to go with but both of them have their own merit and you might want to choose one over the other depending on what you need and the last thing is here at the small screen sizes we don't really want the text being able to touch the sides of the screen either that one's a nice easy one though there are multiple different ways we could do it but i'll let you give that a shot and then i'll be right back with my own solution okay so one of the solutions would actually be to do something very similar to this but to have only one column in the middle and keep that spacing on the sides if you want to do that by all means you could but it would it would involve um separate you know coming in and actually placing the items on the right um within the right spaces here because if not something could get sucked into those side little columns that we've created on the sides and i think a bit of a simpler solution than that is just to come in and add a bit of padding of zero on the top and bottom or we could do padding in line we've seen uh padding in line of say one ram on the left and the right and this could be a margin as well wouldn't make a difference but it just means that now when we get to there the content can never actually touch the side of the screen because we have a little bit of padding there and it just creates a little bit of a buffer and everything should still be fine we do technically have that padding here at the large screen sizes i don't think it would get in the way or cause any problems maybe then you want to drop these down to one just to make sure that it doesn't get too big at any of the screen sizes potentially and the very last thing we need to do now is to make sure that at larger screen sizes these sort of stick closer to the bottom than sticking to the top and we can sort of take advantage of some more grid behaviors uh along the way here so because again here i think everything is okay but here we need it much closer to the bottom but we do need some space which means we will have to do a few things all of this will have to happen in our grid container here i don't want to do it on all the grid containers though because it would have an effect on the other pages so there's two different approaches you could take to something like this one of them is we could come in on the index and we could actually add a different class here on the grid container and this is what i'm going to do just so it's more once again more of a utility class that we could use in other situations and we're going to have another little tweak as well so we could come in and add a new class here of like ho grid container home which is a modified version of our grid container this double slash is part of the bem naming convention which is sort of saying that we're modifying our grid container this could be something that could be also its own utility class of what i'm going to do or parts of this but because i'm not building out utility classes that can be changed within different media queries like you might see with something like tailwind i'm going to go with this approach if you have a different solution to getting the same thing that works and even we have our home class here so we can even choose like our good container from our home page only and select it that way as well so there's different ways we could select this and what we'll do with that is only within this media query because i want to make sure that it's only affecting at the largest screen sizes i am going to say that the grid container home is going to do two things one of them is it's going to have a padding bottom to create all that extra space on the bottom so i'm going to say that it's about six rem and why don't you try and figure out what it is to move within grid items all the way to the bottom if you're not familiar with grid you've seen a few things coming up now so maybe you have some ideas that you can test or just hit pause go into google and google that see research it see if you can find the solution before i give it to you in just a few seconds because that way you're reinforcing your learning you're going to remember a lot more so take the time to see if you can figure it out and as i said i will give you a solution i won't leave you hanging okay so i hope you did find that solution and i'm going to do an align items and put end on here which should move them all the way down to the bottom and with that i'm also going to save over here and look at that we have that they're lining up now on the bottom of the page and then as we get to the smaller screen size they stack back one on top of each other and we're okay and then we can go back to the bigger one and they're always going to be stuck on the bottom another solution that we can do that's kind of interesting with this bottom is we could actually put in a max function which would be six rem and we could put a percentage or viewport heights so say 20 viewport height and the advantage of this is if somebody was on a really big screen maybe you don't want it all the way stuck on the bottom and this max function it will take the bigger of the two values so it's bigger 20 viewport viewport height units or six rem and let's go and take a look i don't know if we can actually get it high enough to start influencing things right now i can't right now so all right i think it actually is changing so you can see that this is actually a little bit bigger um and then it's going to lock in at one point and it's going to get stuck to six rem and so i could even exaggerate this why don't we choose that at like 50 and you can see it's really big and now it's always going to be choosing the 51 and it's actually causing overflow because of it because it's always using the 50 viewport height or if i made this one now the six ram is bigger so the six rim will probably always be bigger and it's always going to lock in just at the six ram so something i think like a 10 or a 20 finds that nice balance where once it gets to a certain size that space is allowed to continue to grow so if you're on one of those ultra wide huge monitors that some people have these days at least things won't be like glued to the bottom of the page if for some reason they're actually on a full screen which i don't think many people do all right so there we go that's looking pretty good i think we can get rid of all of these borders now because we can see how things are fitting on the page and how everything is looking so when you get to the next lesson all of those will be turned off and we're going to be getting into the background images all right so with our background images here you can actually see the the image itself changes here we have it stuck to the bottom and then when the layout breaks and goes the other way we can see that things change and it goes on the side here instead of being stuck to the bottom and if we look in our assets we actually have three different images to use so let's go and take a look that's my home page and then we have a desktop a mobile and the tablet version that are all going to be coming in and then we can use all of them in our css and that is one of the reasons we have our home class right here that will enable us to select that so for that in my css i'm going to come all the way down to the bottom and we're going to create a new category called page specific we could take some of the container things that i created that were specific to this page and include them here if we wanted to and here i will put home for the home page because we will have some different ones that get changed for each of the different pages uh but overall we shouldn't have too much other than the background images uh actually and so here dot home let's start off with just putting a background image on here and seeing what happens so with the background image we need a url and we need in this case it's going to be from our root we're going into our assets and then assets it goes to home and then it goes to our background and i'm going to do home mobile mobile first dot jpeg because we're doing mobile first and there we go we can see a background image has come in and it's repeating itself like crazy but at least it's there and it's working and that's sort of as you'd expect at small screen you know at a big screen that that smaller image will repeat itself so let's do a few things here let's say that the background size is cover and we can don't need to bother with the background repeat no repeat because we do have the cover on there but the one thing that happens with the cover is it crops the image and i don't like how it crops it um because if we go if this for some reason we have a shorter page or whatever is happening the planet sort of disappears and i think there's a lot of visual interest with the planet so i'm also going to say background ground position of bottom center which is more or less where the interest lies in that so let's go take a look and now we're always keeping that planet bottom center of course it's getting too big here but that's okay because we're going to change it and then here too it's not looking good we can't read our text but we're going to be changing the image along the way so it shouldn't cause any problems as we go on to these bigger sizes now these shouldn't actually be on the home page so i'm going to take those off of here and i'm going to come body right here and place those here just to keep it a bit more organized i'm actually going to say backgrounds and this will just be for background images i think because i don't think we need any other page specific styling for anything and then it makes sense a little bit more having this body that's right there and what i want you to actually try and do now is to see if you can find a way to bring those other images in uh when we get to the different break points and just use the same breakpoints that i used above i think they should work perfectly fine for you all right so let's see how i would do that i would just come in here with a media query and on this media query we're going to give it a min width and the first one i used was my uh was a 35 rem so we can come in with that and then we can come and copy this right here paste it in fix the tabs and then change this over to tablet and i saw something change already so when we're at the smallest screen sizes it's looking like that we start going and you can actually see the image is switching there because you can see it's getting blurry and then the crop on the image actually change is and it's when that crop happens that we're switching over and then when we get to the biggest screen size we need to change it once again so if you didn't do it the first time you can go ahead and bring in your own background image now at the next breakpoint all right so i'm going to copy that we're going to change this one up to a45 and then we can come in here with the desktop and take a look at it so let's go and see if that worked and we're going to look at this in a little bit more detail but there we go perfect so we have it there for the smallest then we get to the next one and then it's going to break over and go to this and this is a situation where it's potentially possible that you'd want different media queries based on a landscape or portrait as well but because i'm really focused on screen width at the moment for when this is going from one column to two column when that happens and when it goes from one column here to two columns here i i really think it's important that we're switching from this image to this image because it's going to keep the text readable now we can see a little bit like something like this maybe this text is actually getting a little bit hard to read so maybe it's worth on this one actually changing the background position to the center center or to come in with a media query that's dealing with the orientation instead of the back uh instead of only the screen size but doing something like that will help fix the crop potentially so if where they're at a weird screen size it's not going to run in where the image is exploding at the top but if they're on a more of a tablet with a bigger screen everything should be perfect so i think that's a fine solution but if you'd rather play around and experiment with different media queries and see if you can get different effects i'd strongly encourage you to do that right now but i think for me and what i'm after this is actually working really well right now and i'm pretty happy with that and i'm pretty happy with this entire page and how it's looking right now with everything on it actually coming together really really nicely so now we need to be able to start working on our other pages and actually getting to other pages and well we can't do that because we don't have a navigation that's functioning so in the next lessons we're going to be diving in and fixing up our navigation alrighty time for the navigation which are always these little simple components that end up being more work than anything else on the entire page and this is we've already seen this version of it and so now we're going to be jumping into these ones instead with a hamburger menu that then has to open up and have this and then eventually at larger screen sizes turn into something that looks like that there's actually a middle ground as well that's a little bit different but for now we're just going to focus on setting up sort of the bare bones of everything we need in place then we'll focus on styling it for mobile and then we'll worry about what happens in the media queries after that so um if we go and look at what we already have and let's jump over to here we've already created some stuff and we already have some navigation stuff that's created in our css as well so we've done our primary navigation we have our underline indicators which are giving us those little underlying guides that we have here we have the numbers we have all of that set up but obviously and we also have this flex class on here just to give it a display of flex and then our active class that's on here we don't have to worry about that so much as we need to worry about getting them laid out properly here and you can see the active's not actually doing anything at mobile so there will be some changes that we do need to come in along the way on here so the very first thing i'm going to do before i even jump into the css and worry about styling things at all is we're going to make a few little changes here so in between my div and my nav here i am going to come in and add a button and this button is going to be what our hamburger menu is so close uh button and what we're going to put in the button we're going to write menu and this is a very standard type of thing to have in a button that is going to open and close a navigation menu is writing menu but we have a way to hide things that we've already seen we set up a class for that so if you can remember what it is to make that visually disappear you can go ahead and add that right now and so hopefully you remember there is a span class that is equal to sr only which we use when we set up our dot menus and then we can close that span right there so now we have a button that's there but it's visually hidden nobody can see the text inside but we can still access our button but for accessibility purposes that is a good thing we actually i'm doing small accessibility steps along the way right now we're going to have a future lesson that's going to go through the entire site later on and sort of fix up some of the other accessibility things such as the numbers that we have here but we'll worry about that a little bit later the other thing that we want to do with this button when you have something like this is you want to i think actually let's first give it a class because we need to you know be able to select it so we're going to call this my mobile nav toggle to just explain what it actually is and we're going to say that there it has an area controls and when you have a button like this that's controlling something else it's opening and closing my nav we want to say what it's doing for assistive technologies so this is a little bit more on the accessibility side and here i'm going to write primary navigation but if you do something like this so we're saying that this button is controlling my primary navigation it's not going to look at a class it's only going to look at an id so i am also going to add the id here on my ul right here and so when we click on this menu button it's going to control this it's going to open and close it and there's one more thing we can add on here as well which is area and we're gonna say area expanded equals false so right now we know that the menu is closed and if we push on the button then it will open and we're gonna have to use a bit of javascript to get that to actually work and now we've done everything we need to do to set the stage and to get things actually working so uh once again i'm gonna challenge you to go ahead and take as much as you you know go ahead and see if you can just get our navigation instead of it looking like what we see here to be horizontal to be positioned here and all of that take as much time as you want on it really work your way on it and then in the next video i'll come in and style it up so we can get it looking a little bit like this and then after that we'll look at adding the functionality of making it actually open and close alrighty so let's get this navigation actually working and we have our primary navigation we've already done a few things on it right here the first thing i'm going to do is actually delete this gap because it was big and it fit with our design system but it's way too big for what we want right now so i'm actually going to delete that from there and then we can come in and start doing a few things on it so the first thing i'm going to do is actually set the flex direction on here to be row instead of column um and actually it was row we want a column i always mix it up every single time there we go and now we can see that they're now stacking one on top of each other and look at my giant button but that's perfect they're stacking exactly what we want and actually it looks pretty close to what we need but obviously there's a few more changes that we want to do and another thing we're going to do on here as well is let's come in and give it a position a position of fixed just like that and when you do position fixed it's now like flowing outside of the flow so for the moment we'll give it a background that will change but we'll say background is uh let's do light green i think will not clash too much with this design and burn our eyes like coming in with a red or something might so there we go we can see that it's working but obviously we need it over here i'm going to show one of my favorite new new modern css properties which is inset which is a shorthand for top bottom left and right and it is a logical property and so i want it to be stuck to the top so zero offset on the so this is like saying top zero then i want to do my right of zero i want to say my bottom of zero and then we'll come in with like a twenty percent or so on this side now it looks gigantic but remember we're not going to have it there it's going to be mostly when we're at these screen sizes right here and it's going to then change after that so we can see that it's actually looking pretty good i think it's positioned where i want it to be but obviously it's going below the explore button there which does not look so good so one way that we can fix that is when we have a position we also have z indexes so we can use that and i'll come in with like just a big one that i'll probably never go above and usually a thousand for me is a very big z index so we can do that uh the next thing i'm going to do so we have position fixed we have a background let's add our let's change the padding we set padding in margin of zero uh three rem on the top and then two rem on the sides so if we go and take a look we can see it's given us our bigger space there no space on the sides and you know this light green is bothering me so let's change it to black just so we can actually read our text and see a little bit more of what's happening and there we go i think that's already pretty close to what we actually need this to be right here with a few obvious changes that need to happen so one of them is actually i think i'm going to increase my padding quite a bit on the top here and this is because i do want to come in with a big value but i don't want to risk any issues coming with overflows and stuff this could be a nice time to use another one we looked at how max could work but sometimes we want a minimum so let's say we do a minimum of six rem or if someone's on a really narrow say they're on a vertical display they've thrown it on their secondary monitor that's vertical and it's really tall you could also allow that margin or sorry that padding on the top to increase so here you could do like a 20vh and it's going to choose whichever of these two is the smaller value and actually i'm just now that i said that it's going to choose the smaller of the two so we can pump this one up to like a 20 and then this one may be down to a 10 and it's going to choose the smaller of them so if someone's on a really big big screen it's going to lock it and stop it from being more than 20 rem but it will allow it to grow and shrink with the viewport size so depending on it it's going to grow and shrink just a little bit it won't be a huge influence maybe we could pump that up to a 15 and take a bit of a design design decision on that so just depending on the screen real estate that's available there's a little bit of wiggle room if you want to play with that number with bigger numbers just you can see it working a little bit more go for it and then in a second i'll finish styling things up here so you could play around with that a little bit and then i'm gonna make one little tweak to the code i've written and then give you a challenge so i'll give you a second if you do want to play with that and for the challenge that i have for you um what i'm the one tweak that i mentioned i'm gonna do is i'm actually going to come and move most of this up into a media query media but i'm actually going to use a max max width instead of a min width which for me is very very rare but this is one of those types of situations where i actually think when you're doing navigations like this where you don't want to have to overwrite any of these things that you've done when you get to the larger screen size it makes a lot of sense for a lot of other things often you have less complexity that you're then adding complexity to when you get to bigger screen sizes so to me it makes a heck of a lot of sense in those situations to actually just be using a min width for everything but for something like this to me it makes a lot of sense to be using a max width so if we then we can take off this this this the background black uh the padding can come become zero again go back a little bit to my default and the flex direction can come off and of course if you do something like this don't leave your default selectors down here or they will overwrite your media query will come up keep your default styling first then come in with your media queries afterward and i'm actually going to boost this up to 30 from 20 just because i think that the number on that's going to look a little bit nicer um just gives us a little bit more space on the side there and so yeah i'm pretty happy with that i'm going to ask you to do two things for the challenge to finish this one off one of them is to get rid of this underline on the active and the other one is going to be to bring you know we don't need this hover state we don't need any of that and the other thing is going to be to smush these together because they're very far apart here and if you look at the actual design they should be much closer together so uh i keep pushing this x to close the slide um so i'll let you go and try your hand at that i'll give you my solution to it and then we'll move on to finishing the styling of this in the next lesson after that alrighty so i hope that went well for you the first thing i'm going to do is get rid of that underline and there's multiple different ways we can do it and the one thing we do have to be aware of though is if we got rid of our underlying indicators everywhere that could actually cause a problem because we have the tabs that are going to come in later on that are using these underline indicators so what i'm going to do is i'm going to focus here where we already have this media query and this is again the max with media query where i think this makes the most sense to be working and i'm going to select my primary navigation and i'm also going to say when it has the underlying indicator on it and we don't actually need this extra specificity on here we could just choose the primary navigation because if we look at our index.html we have our primary navigation here which is our underline indicator so it is both of these together but we do have the underline indicators coming lower down in our css so that could always cause a problem with how the cascade is working but the other reason i really like doing it this way is first of all the extra specificity in this case is actually a good thing as far as i'm concerned we do want to avoid conflicts of specificity when we can but understanding how specificity works and knowing that a boost in specificity might give you a desired outcome it's not necessarily a negative to work with that specificity and work with how css is meant to be working so it's going to ensure that plus i think it's really really obvious what this is doing uh in this case is i'm changing how the underline indicators are working when they're applied to the primary navigation within this media query and so on that we can choose then our dot active and we can just say that it has a border of zero so if it is the active one then we get no border on there if we do this it will actually keep the hover effect on the other ones which to me if you're in a mobile device you're not going to see the hover effect anyway so it keeps the hover effect for somebody who is just they put their screen really small on the side they're not using a full width screen and it happened to kick in their media query so i don't think that's a problem if you like the idea of just not having one you could actually put the star here because the border zero is going to just disable the border completely and now we won't have any sort of hover effect at all uh but i'm gonna stick with having one on there just so we have a little bit of a a little something for somebody who might be on a smaller screen who is on a desktop computer that just shrunk their browser window into the corner somewhere the other thing we want to do is change the spacing and you'll notice here i actually left the underline gap here as well as having it within here so i could actually come in and maybe set a 0 or a 1 ram or i think in this case about a point five will match the design pretty good so we still can keep our effect uh like that if you removed the border completely and you decided to go with having a zero here uh and not just with the active the spacing might be slightly different so maybe you'd want to tweak it but again a nice thing with these custom properties is you don't even have to remember how you made this gap originally we just know that we can very easily modify that underlying gap and that's one of the reasons i really think custom properties are absolutely amazing these locally scoped ones are something that people don't take enough advantage of so there we have it there is my solution if you took a different way and it worked that is perfectly fine as well but just i was trying to do it in a way that would make sure that it's only for the primary navigation underline indicators and not for everything that would be the most important thing here with whatever solution you did come up with all right so this background effect is really cool and it's actually pretty popular these days um it sort of exploded for a while and i think it's slowed down a bit but in this situation i think it just looks fantastic so hats off to front end mentor for her uh how good it looks and this is using something um the style is called glass morphism and it sort of gives you that look of looking through frosted glass and luckily we can do that with css now and it's actually pretty easy to do the browser support for it is increasing but it's not perfect as of the time of recording with the only major browser that doesn't currently support it is firefox and it is behind a flag there so it shouldn't be too long but we're going to look at how we can deal with that um when browsers don't support it so it won't be something that causes any issues and i think even i think i saw it working in nightly the other day so i think it should be not too long until firefox does support it anyway uh but the first thing and actually we can leave black but i'm gonna i want to lower the opacity on this so uh we have our our nice hsl's that we've already created and actually it's already it's going to be white um so i'm going to drop it down to like a really faded out white for the moment and we can take a look at what that's looking like so we have a faded out white background and um actually we need this background it's going to have to be on everything because this is going to be the same look whether we have it on the side here or you can see it's the same effect over here so what i want to do is come and put that background right here and now i want to challenge you to look it up i told you it's called glossomorphism i told you we can do it with css so if you already know how to do it or maybe you've heard about it you saw something a while ago try it out and if you've never heard of it before do a little google search see if you can find the solution and implement it before i show you how to do it and then if you get stuck or you just want to compare notes to how i do it i'll be showing my solution in just a few seconds alrighty so to get this to work we use a a property i was going to say function but it's a property called backdrop filter and with that we alter filter and with that we use the blur function and then we just have to come in and say how much we want to blur things and we have to put a value in so i'm going to say one rem and just see what it looks like you already see it third let's go look and hey you know what one ram looks pretty close to what we have there um so not too shabby and you i you know and we can see it's already working up here too and we have to finish styling that to make it look where it needs to go but the effect is working all around you can tweak the number here so like if you did a pure white background it's not going to do anything it really relies on you having a transparent background and then it shows you so i mean you could come in with zero you don't even need to have any color on here whatsoever and it will blur it so if you do come in with a color it does need to have like an opacity to it you can't have a pure color so just be careful with that i do think the point one was actually a little bit strong i'm going to come in with a 0.2 maybe a 0.5 something very minor to try and match theirs and maybe we could even increase this blur a little bit because they look like they really blurred things and it might not match the figma design perfectly but we can get awfully close to what um was provided for and you know what i think that's looking pretty much bang on it's such a cool effect it looks really good and again it's working here we just need to fix that but um yeah i think it's looking fantastic it's a really fun effect and you can play around with it tweak it try different color combinations just to see what it looks like and then when you're ready we'll go on to the next lesson where we'll look at how we can deal with browser support all right so this is looking good if you're in any browser that does support it and if you're in firefox it would instead of looking like that it's currently looking like this because backdrop filter is not supported and that means that the navigation actually is unreadable we can't see anything that's going on there with all this overlapping and everything so what i'm actually going to do is fix what here let's let's set this up as a default which is going to look good so i'm going to boost this up to like in maybe we'll try seven five on the opacity and let's change this to our dark so we still get sort of this transparent effect and actually maybe even go up to an eight five or even maybe a point nine uh could look really good so yeah we still get like this transparent effect coming in it doesn't look as nice but at least we're getting a workable experience we can read our text and all of that maybe even a 9.5 would be better because i'm really want to make sure that the contrast is high enough to make the menu really easy to read and then what we can do is come down here and do it at supports and if you want to give this a try i can do ad supports like this and you can go ahead and research it and see if you can get this working where if the browser supports backdrop filter blur then we get the effect with the background that we wanted and if it doesn't well then it's going to use this default that we've assigned right here so go ahead research that it's not too difficult to do and then once you figure that out i'll show you my solution all right so for add supports what you want to do is bring in a property value pair so i'm going to copy what we've already have here and drop it right there and it is very important to both the property and the value as well and the value here could be anything like we could even put zero ram as long as it's a valid value that we're putting here it will work and that's because it needs the property and the value because some browsers will support a property but may not support certain values or of course sometimes it just doesn't support the property at all before add supports to work you need to have both the property and the value if you only put the property it's not going to work and then we can come in with my primary navigation and just get what we had before so i'll copy this right here paste it in add the blur back in and and then come change this back to the point zero five i think i had it as and then change this back to my color white and if you're in chrome you should see it working nicely and again if the browser doesn't support it this whole thing comes out and at least they get a workable experience so this is a nice way to add in cool features and to provide a fallback and it works so well and it's really easy to do can you believe how long we've been at this and we haven't had to write a line of javascript yet uh but here we are we're going to have to get some to actually get our button working but not yet we still need a little bit of css uh to get our button in the right spot so what i'm going to do is just a little bit of styling then see if i can get you to get the the icon in there and then we'll go from there to add in the functionality of everything so if we go and take a look at our index we do have our button that is right here and i did give it the class of mobile nav toggle so what i'm going to do is actually say right here that my mobile nav toggle is a display of none so it disappears when we're well just disappears right now because i don't want it when we're at large screen sizes and display if none will pull it completely out of the dom so it's not something that like an assistive technology or anything like that will run into but when we're here we really need that button so then what we can do is within this media query we can come in and turn that mobile nav toggle back on by saying display block you can also then position it position absolute because we need it to be wherever we want it to be uh we're going to come in with a z index and i said a thousand is really big we're going to go with the 2000 now because we need it to be on top of our primary navigation and now we just need it to be in the right spot so i'm going to say what right of one rem and we'll do a top of two ram just so we can actually start seeing it come in we can see that it's actually in the right spot uh what we do want though is a background of you can put background none background transparent background zero they all work i'll use transparent just so it disappears it's a button so we also want to say it is a border of zero on here and now we need to actually see the icon and you know our button is there it actually exists but we can't see it and so i'm gonna you know what how how could we get the button to be in there without placing it in our html because we have our menu text here so we don't actually want to come and place the image here so bringing it in with our css rather than uh placing it in the html makes sense so go ahead place it there right now and then i'll come and take a look at that in a second all right so i'm gonna do it with a nice background image that's it background image and if you didn't get it you might have been overthinking things and so we're gonna go from our route into our assets into our shared into our icon hamburger.svg and if you just did that you would have seen it come in but we can't really see it um so what i'm going to do and i sort of want this to be a nice little square that people can click on so let's give this a width of 1.5 ram and give it a i won't give it a height i'm going to give it an aspect ratio of one which should give us the right sizing and we can see that it's come in but it looks kind of funky um and that could be because it's a background image so i'm going to try one thing here with a background in it a background repeat no repeat just to make sure there we go that's what it was it was the image was repeating itself downward and we were getting an extra thick bar on the bottom so we have that in place and now obviously what we want is this whole guy should actually be hidden away when we click that it slides in yeah so what we're going to do here on my primary navigation is add in a transform of a translate x and on my translate x we can say 100 and it's vanished and it's moved 100 of itself away off to the side and it actually i see we're getting an overflow when i hover i thought we'd actually get an overflow when i did that and i was waiting for this point to do an overflow of hidden so this is one on this site so we can come all the way up and just so when things start moving around and we start animating there is a good chance that there is some overflow that does happen so i'm going to go uh here on my body and we can just say that the overflow x is hidden uh because it is possible that some scrolling will come in uh when we click and it should slide our menu open and so that means we need to come in and start writing some javascript if you're not familiar with javascript don't worry i will be giving solutions to it but if you are familiar with javascript i would recommend you seeing if you can come in with a way to get it to slide in and slide out and if you're able to also get it to change the background image so you can come right here and start doing that you will have to go into your css potentially to add some extra classes and do some stuff in there and just to get the transitions working and all of that and when you're done with you might even need to go to the html maybe add a few little things there and when you're done with that you go to the next lesson to see how i complete this or if you don't know at all where to start with this and you want a few hints and tips along the way we'll be looking at that in the next lesson all right so we can start writing some javascript now so i'm going to delete this comment from here and before we even get started on this i'm going to go over to my index and i'm going to come up to the top and you might hear that you should keep your javascript at the bottom and i'm going to come here and what i'm going to do is link to our javascript um so it's script src is equal to and index.js and i'm just going to come in here with a differ um just like that and then click close script or not click but write close script and everything should be perfectly fine here um the deferred here just lets us keep our script at the top so we can have everything here but it will defer the loading of the javascript until the page has been loaded and now we can go in and start writing some javascript and so what do we want to do well we want when someone clicks the hamburger hamburger menu if the menu is closed open it if the menu is open close it and we need to with those also change the icons or the symbol you know we want to change it to the x and back and forth but for a very simple thing this is basically what we want to do so when someone clicks on the hamburger menu we want to the hamburger button i should say or the hamburger menu if the menu is closed open it if the menu is open closed all right so that means we need two things in our javascript we need our hamburger button i shouldn't write the hamburger button and we need to find our navigation so if the nav is open or closed instead of menu would probably be better so if we need those two things so first let's come in and say uh we'll get the nav itself so const nav and this is a name that i'm making up if you're not familiar with javascript uh const is just a way to store things so i'm gonna go into my document and do a query selector and we're going to select my primary navigation and we're also going to do a const for my nav toggle which is my button and so we need to find that one as well and now we have both of them that we can access and do something with so the first thing is when somebody clicks on the hamburger menu so how can we do that well the hamburger menu is my nav toggle so we're going to start there and we need to add an event listener and an event listener we're listening for an event that's going to happen and what are we looking for well we're looking for a click and if somebody clicks on it we want to do something and so this is an arrow function so we have our nav toggle which is our button and if somebody clicks on that we want to do something so now what we need to do is check if the nav is open or closed and the thing is we don't really have a way to check for that right now so there are different approaches to this sometimes you see a class nav opened or nav closed and you can check if that class is there toggle a class or something like that but when we're you writing javascript i prefer using data attributes which allow me to hook in and sort of be you know that i know that my classes are for styling and then i know that my data attributes are for javascript and it sort of just lets me hook in that way so we have my primary navigation right here which is what we've selected right here and this is what we want to check we want to see is it opened or is it closed so on that primary navigation that we have right here i'm going to add the data visible is equal to false because right now it's it's not visible we can't see it and if you haven't used data attributes before these are attributes that you get to invent they're your own ones you can write anything you want uh just it's prefixed with data and you could have like visible you know you could even have it like is this the z bowl if you wanted to but then you're you know we're just getting a little long so i'm just going to say data visible is equal to false so visible is equal to false then we can go back into here and we can use that now so what we can do is we can check for that visibility first so we can say visibility is equal to and now before i was doing a document query selector because i was looking through the whole document to find my primary navigation but now we already have my nav so i can choose my nav so i'm doing nav dot and i can look for things like the attribute so i can get the attribute that's on there and what attribute do we want well we want our data visible and why don't we see what that's going to give us by doing a console log so console.log and we can console.log our visibility that we just created so when we click on this we see false because every time we click on it we'll get a false or we can even open our console here and you can see all the falses that are coming in and every time i click on it we'll get another false that pops up because that's what our visibility is currently false so we know that's working all right so if the nat so we know now that it's working uh and that we're getting false so if it is closed we want to open it so the first thing we can do is we want to start with if so we can say if visibility is equal to uh false and i'm putting this in quotations because um the data when we're getting the data attributes it's not going to return a boolean it will return it as a string so if the visibility is equal to false what do we want to do well we want to do one thing which is going to be nav and we can actually change the attribute now so nav set attribute of that and we can change that over to true and now we can test to see if this is actually working because we have that set up so let's go over and click on it and it's false so now when i click it should say true and it does so we can see that it's working we're going back and forth between true and false or actually we're not going back and forth we set it to true and that's it and so yeah we need to be able to set it back so right now we're saying if it was if it was not visible so if the visibility is false we're going to set the visibility to true else we want to do the the opposite right so then we want to take this and set it to false so let's do false here and what that means is it should now go back and forth false true false true and now we can actually see it's rotating between them every time we click so that is perfect so i don't think we need our comments in here anymore i think it's pretty and we already got that the one issue now is we actually needed to open and close so there are different ways we could do this but we might as well we have our data visible here and the data visible is switching between true and false so that means we can come into our css and we can actually change that so then on here with my primary navigation we can add in primary nav irrigation and we can add an attribute on here and so we can check to see if the data visible is equal to is equal to true then we can do a transform of translate x and go back to zero and let's go and take a look and see if it's working and look at that it opens and closes just like that now what i'm going to do first is i'm going to delete this console log visibility because it's going to be a little bit annoying and then i'm going to give you a challenge because there's a few things that we need to tweak on it still so it's working but it doesn't look very nice when it opens and closes so i'm going to challenge you to get it to look a little nicer by sliding on out and sliding on back in and of course we need to change our our icon here from this hamburger over to an x so why don't you go in here do what you can to get those to work make it look a little bit nicer and then when you're ready you can go on to the next lesson where i'll be looking at my solution for both of those all right so we'll start with the easiest one first which is adding our animation so here where i had my transform i'm going to add in a nice little transition and transform 500 milliseconds ease in out and that's the nice easy one to do so if we come and take a look now we should see that it slides on out and slides on in and i think that looks pretty nice when that happens so i'm pretty happy with that and that was the easy part now is the little bit of a harder part because we want to change the icon on this one when it opens to the x and to do that we actually need to jump into our javascript and make an improvement there or maybe you came up and you might have added a something else but we need something on this that can inform it of when the menu is open and closed and if we come and look in our html here we have a button and on there we have our area expanded is equal to false and remember this area is for accessibility reasons so it's really important when that menu opens that this area expanded should equal to true so if you got stuck and you just weren't sure where to do it that doesn't mean the first thing we need to do is come into our javascript and make a change in here so we can toggle the area attribute and set it from true to false so if you're feeling confident you can jump in here if you're not confident but you want to give it a shot i'll give you a hint in just one second all right and that hint is we already did this with our nav and we were setting the attribute on it and here we have our nav toggle and on our nav toggle that is here in our html which is our button itself so this button has an attribute that we want to be changing so the same way we were changing an attribute for our nav i want you to take that and change the attribute for the nav toggle all right so nav toggle and we can say that we want to set the attribute and in this case it's not my data visible it's the area expanded and we want to set that to true and then i've been using semicolons so i'll keep using them and then here we'll come in and we can switch this over to be false and just to double check that it's actually working let's add a console log once again console.log of course if you're in a if you're not in scrimba but you're doing this in your own editor you can also just check in the dom to see if it's being changed in there and so here we'll do our nav toggle dot get attribute and we want to get our area expanded um yeah that's all we need so let's try that out and it's true because it's open and now it's false because it's closed so i know that it's working properly and i can delete my console log and now what i can do is use that and use the fact that that's toggling to hook into there in my css to get the icon to change so if you took a different approach before or if you were just completely stuck and unsure of the next steps to take now maybe you have a better idea why don't you try and get that icon to change and then i'll show you the solution in just one second alrighty so let's come in here and what i want to do is choose my mobile nav toggle and do the attribute selector just like before with my area expanded is equal to true and when that is true we want to change the background image right here so this doesn't mean there's no animation on it because you can't animate background images and this would be icon close i believe or is it closed oh it is closed there we go and we can see that it is working and that's pretty cool now there's one other tweak we can make in here um which is the outline that appears on this just because there's a little a thing that bothers me when we have buttons like this that we interact with and then it leaves the selector the sort of the weird blue outline even though the outlines have been changed recently but to do that what we'll do is let's just say down here we'll do mobile and i'm going to choose focus just to show you what this is going to do and then we're going to change the focus to something else and we're going to use this on a few other things throughout the site too and let's give this an outline and i'm going to say 5 pixels solid red and we're going to change it later solid red but the red will make it stand out for this demo and then we can see an outline offset of 5 pixels too just so it's not touching the button directly on it and so now when i click on it and we get that select you can see it's highlighting it which is that's fine one actually change really fast i'm going to make here is background position of center center or the center one time i had this so when i click on that it did the icon is actually perfectly in the center of the button so it looks a little better so you can see when i click on it it highlights it with the red and then the red is still there and i am in the scrimba editor so it's possible uh you're not seeing it so you can just pause the video and play with it a little bit to see that and see the red coming in on there and what i want instead of using focus is actually using focus visible and what the focus visible does it's sort of what you wanted focus to be the entire time so if i come in and i push tab it's actually going to highlight it and i'm going to get it and then i can push my button and i know that's what's selected so i'm pushing right so i'm using my keyboard to open and close it which is perfectly fine i can tab now onto these other guys and tab back through them and i can see that that's what's being selected but if i click on it i don't get the big red box uh it's so nice and makes me so happy and again you might not be seeing this as you're watching it through the scrimba replay that i have here so just hit pause and play with it yourself in your own editor whether it's the scribble editor or you're doing it in your own browser and you'll definitely see the difference between the two i just think it's a nice little touch that we can add so we still keep our focus state but we don't have it coming in when it doesn't look too fantastic and of course we can then change this over from being red to white just so it looks a little bit nicer than a red box that's just showing up on our site and yeah i think that is looking pretty good all right so it's time to finish up our navigation we've almost got it done here and then at the larger screen sizes we have some other styling differences that are going to come into it so you can actually see it the smallest one we have our numbers which then disappear at the next screen size up then we have our spacing here which that we have none of here but where we push things down a little bit at the larger screen size and then we also get this interesting line here which looks very simple and may prove not to be as a little bit of foreshadowing there so what i'm going to do is i'm going to start with my logo then i'm going to worry about this part here we'll get all of that done in this video and with a couple of challenges for you along the way and then in future videos we'll come and finish everything up at the largest screen sizes and the reason i want to start with my logo is just right now where our logo is stuck to the side here and we need to obviously move it off of there and it's something we haven't done yet so i'm going to scroll up a little bit here so here we have my primary navigation and what i'm actually going to do is create a comment here just to say these are all part of my primary primary header uh because we have our navigation we have our toggle and we have our logo here and so for the logo we can choose it if you remember we had a dot logo that we used so we need to move this down and off the left side of the page a little bit so if you want to give this a try you can go ahead and try it out and i'm going to say that the margin here is 2 rim and it's not exactly matching the design files that we have the margin at smaller screen sizes is actually smaller than this uh both the distance off the top and off to the side where it's actually 24 pixels instead of the 32 that i have it at now and then at the large screen size version and the space on the left side here actually gets as big as 55 and so my challenge to you is we've looked at a few modern css functions that let us do interesting things with sizes and so can you think of a way to set either a minimum a maximum maybe a minimum and maximum space on the sides for your margin here so i'm gonna actually delete that and let you give that a try and to play around with it a little bit and then i'll see you with my solution in just a few seconds all right so uh there's a few different things you could have used a min a max or a clamp for these i'm going to come in with a clamp for now uh just to explore this so it lets us set a minimum like i said so we know that the minimum we wanted was one point five the mat then we can have a middle value which i'll talk about in a second and the maximum that we want was 55 pixels which is a little bit smaller than 3.5 rem and so we can do something like that and then have the middle value here be something like 10 viewport width and then 10 might actually be a lot let's try 5 viewport width and then what that means is it can't get smaller than this it can it will grow by this much and then it maxes out at that space so if we take a look the space you can see it's actually moving down and across and then it's moving back in and uh not a huge fan of that the way it's working right now but at least we can see that it is working and what i'm actually going to do is split this up where my top and bottom values i'm just going to give them a solid 2 ram so they don't move up and down and i will allow it to grow left and right though and for me that works a lot better so you can see that it is growing left and right but the spacing on the top and the bottom isn't changing which just looks a lot nicer um so we'll bring that down to a 1.5 so it's the same as in the the mobile design just because now you can see it's up a little bit higher and we can fix that as we go um so that is with clamp if you did something instead with a min or a max that would be perfectly fine and you could experiment with those to get something that you want i'll stick with just this here because it works really well uh you'll also note i didn't do like a plus one rem here like i did for type my typography so with typography viewport units don't zoom if you're zooming in and out on your browser because they're linked to the size of the viewport and if somebody's zooming in it's probably because they want the text to be bigger for the layout itself and for the positioning of the logo i don't mind if it doesn't shift or move around if somebody's zooming in or out so here i'm leaving the middle value just like that the next thing i'm going to do is i'm before we even get into a media query now what i want to do is fix my layout at this point this shouldn't affect our layout at the smallest screen sizes that we'll double check to make sure but i'm going to choose my primary header and what i want to do now is i want to ensure that this is pushed all the way over to that side and then my logo is actually centered within this space here so with that selected uh one thing is we already have a display of flex on here we gave the primary header a flex class so we don't need to declare a display flex but i'll let you come in and try and space them out all right so hopefully that went well for you so i'm going to do a justify content space between on here which will space them out and i will do an align items of center and if we go to our small screen sizes you can see that the layout here hasn't been affected by it at all everything is working just fine and then we go up to our big screen size we can see that it's working the last thing that we need to do now is to fix the padding here and over here where we don't have any so for that one i am going to do it in a media query and let's come down we already have a max width of 35 rem here so i'm going to come all the way down outside of that and i'm actually going to move these two up here i'm just to keep the all the default styling for my primary navigation all together and then we can have our media queries where we're making changes to the different things that are in here and because we had a media query for a max width i'm going to do a min width of 35m but for this one i'm actually going to do and a max width of 35m as well and these just like a max width i don't actually use very often i don't often use these linked ones like this either but if we come and take a look there's a few important differences here so one of them is the numbers and one of them is the padding is different here and here so since the padding is different and i have to overwrite it anyway and because i do have to deal with this number thing where we have numbers at the smallest size then they disappear then they come back we're going to need a media query like this one anyway and this should be 45 not 35 and so i'm gonna let you try this out get it all working and i'll give you my solution in the next lesson all right i hope that went well for you and you're able to solve both of those problems uh so the first thing i'm going to do is choose my primary not my header but my primary navigation itself because this is where the padding is and that background color that we had so if we go and take a look at what we want we need this extra spacing on the left and the right which we currently do not have so if you didn't already do it come in try and add it on right now and with that it was some padding on the left and the right which if we want the shorthand version is padding inline and again this is a logical property it's part of more part of the modern css that we the that i am just in love with and i'm just going to throw a two ram on there and you know we'll make that a 3 ram and there we go we can see that it's looking pretty good our logo is currently bumping into there which isn't the prettiest thing in the world but we'll be able to fix that without any uh issues i think especially once we turn these numbers off and so let's go and turn those off now and to be able to do that i'm going to use the same approach that i took when i set all of those up in the first place which is my primary navigation a span so we can actually copy this selector if i'm modifying a selector i want to generally use the same thing unless it's like in that previous lesson where we actually went a bit more complicated where we came in with the like primary navigation dot underline indicators so as being even more specific but it's either just as specific or more specific i'm gonna go just as specific and nice and easy we can just throw a display of none on there and that's it so if we come and take a look now we have the numbers at our small screen sizes those numbers disappear at the tablet size and then those numbers come back in when we get to more of the desktop screen size so i don't think that was too bad at all i think it's looking pretty good and now there's one last change that i want to do is just to deal with the space in between my navigation items because they are very close together especially when we're at this size where we clearly could have a bit more room between them and so this is um i'm going to come all the way up and if you remember we did all of the the spacing on there through my primer on my primary navigation with the gap property and that's because we have the gap set up with the flex which we're using and so on here there's once again different approaches i could come in here and say gap and let's just make it really big so we can actually see that it's working and then we have a much bigger space between them i'm worried that we're going to run out of room just like we are there before we get into the different screen size so once again i think what we could do is come in and use a similar system to what we created when we did this so why don't you come and see a number that you could play with on that gap to set a minimum maximum and get it to respond nicely to the different screen sizes and then i'll come in and look at what type of thing i would set up here and you know what i'm going to start with this as my starting ground and let's go see what it looks like and this is where people always wonder what number to use where this 5vw is and truth be told you just sort of gotta play with it and see and look at that that actually worked out really well we have enough space between them that when we get to the this type of space then it's not smashing into our logo just as we run out of room it goes and stacks underneath instead so i'm actually really happy with that but it is a number that you do have to just sort of come and play with and maybe you want a little bit more spacing so you come and make that number a little bit bigger but you see now we're running into that clash so this i think at 5 works but you could also play with this maximum and this minimum number and see what works for you to make sure that the minimum maybe you make this growth factor maybe you play with the growth factor and you play with the minimum to make sure that they're not getting too close so this is where you could really play with this one as well as play with these two numbers here to see what it looks like at different screen sizes and play with it a little bit and yes you're making some design decisions when you're doing this so if this were you working on a team and you might have designers this could be a conversation that you have with them and that would also give the designers an idea of the types of things you can do as a developer and that helps in the long run when they are designing things they can think oh he has the ability to do this so i can design these things to take that into account this is where it can be really nice to have discussions but when you're doing projects like front end mentor i think it's a really nice way to have a really nice looking design that you already have so it's going to look good no matter what and then you can come and play with these little things to make these little tweaks and to make things work at the different screen sizes when you find like you're running into little problems along the way so if you want now you could take this and see if you can get it working at the larger screen size adding the space will go on top here and this line that is right here and if you get stuck or frustrated with any of them i'll be coming giving you a helping hand in the next lesson so we have this done and now we need to move on to these larger sizes right here so let's just go ahead and take a look at sort of where we want and we can see there that when our padding disappears that's where we need to make the changes and i'm going to start with the easy wins and then come in with the line afterwards because i had a lot of trouble with that line so if you did too and you got caught up along the way or had any struggles at all hopefully i can help you out and push you in the right direction uh for how we can solve this so the very first thing i'm going to do is come down to where we have my media query here we're going to create a new media query which is going to add media and we're going to say a min width of 45 m and we are actually going to see a an issue with our media queries here and here and we'll solve that as we go through but the first thing we do is a primary navigation and what will this do is add some margin to the top and the bottom and just like we can use padding inline for the left and the right we've been looking a lot at logical properties so we can come in and use one of those for the margin if you didn't do that you'd like to give it a try go for that right now and therefore that would be a margin block so my margin block i'm gonna go in with a two ram and let's go take a look there we go we can see we've added that so here it should disappear and then there it comes in so we have that little snap point there so it matches more closely with the design just like we can see here and all right so the next step we're going to do is add that padding that we need so once again we'll stick with right here and we can change our padding inline and you might be going well kevin do we really need to change the padding lines let's just say we come in here and save padding inline is going to go to a7 rem and let's go and take a look at what that looks like so here we have lots of padding and when we go to the smaller size right there it clicks over and makes that change and maybe that's actually a little bit big for what we have now because we're getting we're getting actually a little bit of overflow with that and so this is somewhere where maybe instead of taking this approach of changing the padding because you can clearly see the padding is bigger here and smaller over here we could actually remove this from here completely so i'm going to remove that from that media query and we can take this one off here as well and what we could do is actually have a media min width of 35 m but without a max width on it where we have our we throw this in there and we can actually change this and use either a min a max or what i will be doing in this situation is a clamp so why don't you come in and try that if this isn't the solution that you used when you did this on your own before to see how you can get it working choose the growth factor and all of that play around with a little bit and then i'll look at my solution after all right so i hope that went well for you so here i am going to come in with my clamp and we're going to give it the minimum which i'll do three i'm going to have to give it a middle value and we will have to come in with a maximum which could be around six or seven and then this is the growth factor and this just becomes a number that you have to play with and experiment a little bit with your design and see how things work so you can see that it's shrinking down here you can see you can see that padding getting bigger and smaller as i adjust here and then it maxes out at a maximum size and then the shrinking shrinking shrinking and then at one point we'll cross over and we go to the smaller size here so there we go i think that's actually looking pretty good and it's working well but we could always change this growth factor depending on how you want things to work so let's try 5 vw instead and that just means it's going to grow and shrink much slower so one advantage with that smaller number is our logo doesn't actually collide into there with the break points i used of course another solution would be to have different break points which would be a very valid solution as well and if ever you did want to change them you could just do a find and go through and change some of the breakpoints you have if you're wondering why we don't have custom properties as our breakpoints uh that is one thing we can't do is set custom properties here because that would make life very easy to make changes but that is something that they are looking to add to the css spec so with that in place i think it's looking pretty good i'm pretty happy with that it doesn't quite get as big as maybe i would like it at the larger screen sizes so again this could be a number that you play with and and have some fun with so maybe i bring it up to a seven and again it's a little bit of a fiddly number i won't lie to you and that actually looks pretty good and i'm pretty happy with where that's breaking and the last thing we need to do is add the line here and as i said the line is a little bit difficult and it took me a long time to come up with a solution that i was happy with and in the end my solution i think is a relatively simple one but it's not something i would normally try and implement and so if you found another solution please let me know either in the scrimba discord over on twitter just ping me and let me know what solution you might have come up with along the way and what i'm going to do is set the stage for you in how i'm going to solve this and then see if you can finish it and in the next video i'll give you my full solution and so to set the stage i will work within this media query and again we will have to probably make a small change with these but we'll talk about that in the next video as well and what i'm going to do is go on my primary header and we should probably move this primary header over to the top over here and on my primary header i don't need to necessarily select it but i do want to come in and select the a pseudo element and you could use it before or after it won't actually make a difference here i'll choose the before but again either one um it wouldn't change anything so for that we do need to give it some content for it to actually populate on the page and i'm going to give it a display of block and a position of relative because i normally i would come in with a position of absolute in which case you don't have to give it a display property and absolute which would mean that if i did that i would also need my primary header to have a position of relative and let's we'll do a quick thing here and show why this didn't work for me and so i had a height of one pixel here and a background of red width of 50 just for fun and see what that gives us and we should see there's a red line coming on and the issue with using an absolute positioned element is this number here and getting the right width and we're using left and right and all of that but we can come in and we can play with that number and actually it's probably gonna have to be let's try 10 and see what that gives us and now i'm going to give it a left and i'm going to give it a left value that sort of follows with my navi uh with where the logo is so my left of six rim and let's go and see what that actually looks like so there we go we can see and actually i guess that should have been eight and now that i think about it so we can give it the left of eight and it's getting in the right spot there but then how wide do i make it and the other issue is uh the size of this if we do this as a percentage so 10's too small so you come up to 20 and now 20 is sort of the right size but now it's too small and then actually now let's give it a zindex as well just so it goes on top and okay so now you can see how like it's ten percent it's way too big it's not working um and this i tried doing this also as a position as a pseudo element based on my navigation itself but again to get it to actually adapt to the space that we have available to sort of always fill in the space became something that was very hard to do and the percentages were always based on the wrong thing and i tried viewport units and i tried all sorts of stuff and so if you went down that route and you got stuck don't feel bad that's the same thing i did um so what i'm actually going to do is we can delete this because we won't need it and as i said i'm going to change this to a position of a relative instead and this does change a whole bunch of things we don't need our z index anymore and i am going to take off the width and because we're going to see you don't actually need it and i'm going to take off the left as well and let's go and just take a look and we should see uh or you know what let's give it a width of 100 because we do need something on there and now you can actually see there is a line there it's not causing overflow it's growing it's shrinking and because it is position relative it's actually in my dom right now it's actually interacting with my logo and with my header which is why the logo has moved over because i've done this as a before if i do it as an after it would switch over and go after my navigation now you can see that it's over here and this is where things get interesting because our line is a either before or after that is positioned within we have a logo we have this and this is another flex item in my header now with how this is working which we can then use to get it to go where we need it to go and play around with it a little bit so i'm going to leave this right here and challenge you to see if you can get it in the right place and then of course get the right color and all of that and then in the next lesson i'll give you my own solution so i hope you were able to figure that out but if not no big deal let's go get that red line where we want it to be and to do that first i'm going to go over to my index and take a look because we have to remember we have my header which has this display flex on there so this is one flex child this nav is another one because our button is a display none and then we have it now set as an after it could be a before and because it's on the header after it's getting positioned right here so this is my after is here if you did it as a before instead the before would come all the way up and be right here and that would be my before is here and that's because of how pseudoelements work whereas if i do a before on my primary header it was before the content that is here and if i do an after then it goes after it i'm going to leave mine as an after so we're just going to remember that my after is here and we have this div here then i have my nav and then i have my after and to get this to work now what i'm going to do is come over to here and on my after i'm going to add something which is going to be an order property so order is going to be a number one and if we go and take a look that shouldn't have actually changed anything it's right where we left it off but let's just say i came in and made this a negative one what would actually happen is it goes before everything else and order is a property that opens up when we're using css i would normally not recommend that you use order for many things but in this case because we're moving a decorative element around i think it's perfectly fine to be using order for something like this and again i'm going to put this as a number one just to keep track and make things a little bit easier for me and let's just go back to the html for a second because we want this to go before my nav we're going to do is select that nav and we can say that that has an order of two on it and now if we go and take a look like magic it's gone in between the two of them and because it is a flex item it will grow and shrink and there's no content that's actually in there there's only a width so we'll actually shrink down to zero if we do run out of room which is kind of cool the only issue is i do want it to go on top over here and right now we have these spaces that's a good question and if you were stuck before i'm getting it to be in the right spot and now you know how to do it but you want to do the final touches i'm going to leave this here for you to try out and then afterward i'll give you my solution on finishing this up all right so this is another one that i wouldn't normally use but what we're going to do is i'm going to come and give this a margin on the right side of negative let's try three rem and see where that positions it and go take a look and look at that it's pulling right on top there and it's going to grow and shrink now we do run into this strange little area here where right like where there's some weird stuff happening here we'll address that in a second but for the most part i find it's actually working really well i might drop this down to a 2.5 um instead just so i think it's i think it looks a little bit better there and i'm pretty happy with that let's lastly just come on and change this to our uh light white color like it is in the design instead of that bright red and there we go i think that's looking pretty good and i'm happy with that and that last thing that we want to address or that i mentioned where things get a little bit funky is right here you'll notice that we get this weird like middle ground that's happening where we're jumping all over the place for a little bit and that's just because of how the min widths and max widths work where there's this strange middle ground between our max width here and our min width right here and so what i'm actually going to do is change this one over to a 44.999 and it seems silly but it does help us solve this issue and in the future there is a new syntax coming to css which is uses like greater than and less than which is going to make our life so much better and easier to prevent these types of things from happening but for the time being we do have to work with that so now if i look at it when we hit that break point right here and that that just prevents that weird overlap where the numbers were disappearing before we switched to the other layout and so this just helps prevent that from happening the other thing that you need to look at when you're doing something like this also just to be aware of 99 of users don't actually actively resize the browser once they're open and they're on a site so us as devs we like to move things and play with things and see how things respond once a user is on a page like they're here that's what they're looking at it like or if it's here that's what they're looking at it like or if it's here that's what it looks like on their device especially mobile devices where you're not really resizing pages unless you change the orientation of your device so yeah with that i think i'm happy with that solution if you want to play around with it experiment with it a little bit or if you want to try and do alternate approaches to it that would be really really awesome and then once you're ready we'll move on to the next page so i know we said we'd be getting into the next pages but before we get there i want to make a few accessibility tweaks to this page and so the next two lessons are gonna be focused on that the first one is tweaking what we currently have now and the second one is going to be making a small addition to what we're working on that is a very important one for accessibility reasons which i'll explain once we get to that one but the two ones we're doing in this are really easy and simple ones so we're going to start with that these are the easy wins that you can make when you're working on a page and they're very common things that i see not done and one of those is right here with this which is the you know this is this content that's all there so we have this section at the top with our header which is great we have a nav so we're using our nice semantic html there but over here we're not doing it so much and there's one important change and again this is something that i see lots of sites not bothering with and so i wanted to make sure we had a specific lesson that would take a look at it because it is such a easy thing that you can change and a really big accessibility win so if you know what it is already go ahead and make that change and if you're not too sure you can wait just a second and i'll take a look at it and that one change is there's two ways we could do this we could come here and just take a main and wrap all of this within our main because this is main content and it's really important to have a main on your page and you should have only one main per page uh of course by doing this there is a small problem that has happened is our grid container home which was helping to set things up a little bit for us with aligning uh different things is now not working so everything is stuck to the top instead of being at the bottom where we'd taken all that hard work to do it so there's absolutely nothing wrong with taking what we have here and switching this over to our main and just making this our close main and you can definitely have classes and other things that are applied to here we will be adding something to it in the next lesson as well and the main axe is a landmark for assistive technologies uh just like our nav does as well and these can be used to quickly get to different areas within a site and for the screen reader to know that here is actually the navigation and here is our main content and if you have a footer which this design doesn't have any use for footers but we have our footers and our sides and articles and all of those different things and many of them are acting as landmarks to help navigate through a site and there is another thing we can do to really help out people who are using screen readers and let's go take a look at our page to understand how this is going to work let's just hit a refresh there we go so we can see it's working and that other thing is when you look here and you're looking at these you're not reading zero zero home zero one destination zero two crew zero three technology you're coming up and reading home destination crew technology and because we have bold text here and then the lighter text here visually there's a distinction between the decorative piece of information and the text itself because visually we can see that distinction between those two pieces of information we just zone out and we focus on the the important piece there the home the destination the crew the technology parts and the other part just acts as a nice little decoration on top of that but if you're on a screen reader who's reading this content it doesn't know it just reads zero zero home zero one destination zero two crew zero three technology and as you can imagine that could be very very frustrating so what we're going to do is i'm going to come on all of these spans and if you know what i'm going to do you can pause and go ahead and add it on now but if you're not too sure then just wait one second and i'll give my solution all right so what i'm going to do is add another area and in this case i'm using area hidden is equal to true and a little bit like how when we set up our button we used the sr only class on this and that s our only class was so a screen reader would still see this but a sighted user would not see it so visually hiding this but screen readers can still access it area hidden is a little bit of the opposite it is hiding it from screen readers but it is allowing it to still visually be on the page so we can use this to hide decorative elements or sometimes there's effects where you need to have double content so you have the same text two times in a row if you're on a screen reader that would drive somebody absolutely nuts you're steering the same words over and over again so using area hidden true allows us to keep the content on the page but to hide it from screen readers because really it is just decorative extra information so two very easy wins that we can get right here without very much work and in the next lesson we'll be looking at one more so in the last lesson we added our area hidden true and we also added the main an image and the main can act as a landmark and it's a very important element to have on a page always have a main and every page should only have one main and it just you know it's we're saying this is the main content of our page and while so far a lot of the accessibility things that i've been talking about are dealing with screen readers there's other types of disabilities as well and there's different ways that people navigate websites and imagine if you're a sighted user and you come on our page and you want to get to the explore button but you don't have the ability to use a mouse and you're just using keyboard navigation so what does that mean well you get to the page and you tab tab tab tab tab and then you can hit your explore button and then from there once again you have to tab through and eventually get to the content and then you're on the crew page you get the idea always having to cycle through the navigation to get to the main content can be very just extra time that we're wasting that somebody who's using a mouse doesn't have to do because you can just drag your mouse down to here and click and so it's super easy to make an accommodation for this it's incredibly easy so that's we're going to be focusing on in this lesson and i'm going to start by coming on to the main here and we're going to make one little difference we're going to add an id is equal to main and we want to do that because we want to make it easy to link to this content then we come all the way to the top up here and we can say a is equal to our main and by doing that and i'm going to put skip to main content and close a or you could even just have skip to content and then we are able to skip to the content in our page and just to see how that would work let's go and take a look i'm going to do an inline style that we'll take off here so style is going to be color white just to make it really easy to read for now and i'm doing it the oldfashioned way so color is white and if we go take a look there is my skippy content so if somebody lands on my page now if somebody lands on the page now and i hit tab the first thing that actually gets selected is that skip to content uh right there and so if you then click it with enter on the keyboard and then hit tab you can see i've already selected my explore button so i was able to skip going over all of these different things if you are on a bigger site that had a larger navigation or a big heading and you want to be able to skip to you would scroll down to that section and skip all of that extra stuff and bring you to the main content now obviously it's a little bit obtrusive having it like this you might be feeling like you should throw an sr only class on there but again this is not only for screen readers where they would have the ability to skip all of that and hit the main content which would be nice because this would be the first thing that is read to them but there are cited users who are going to use this as well so we're actually going to come on here and let's give this a class is equal to and i'm going to call it uh skip to content it's very descriptive of what it's doing we take our style off of here now and we're going to do a few things to style it up because we don't want a purple link sitting at the top of our page and one approach for this if you want to try it out i'll give you a second to do it but one approach is actually to use the sr only class but to not have it working when but when something comes in focus for this to go off if that makes sense so if you want to try that what i'll actually do is come on here and add the sr only and this is approach i've seen and i've used so it's visually hidden but when we gain focus you want that link to then become visible so i'll come right here and let you try that out to see if you can get it working and then in just a second i'll give you my solution all right so the solution uh there let's just come in and say skip to uh content not to main skip the content and i want when it is in focus so once it's come in focus we can say that it has a position of relative a width of 100 i'll actually do a max content on this if you don't know it we'll explain what that is in a little bit the height of auto and i'm sort of just coming through and overwriting some of these clip of zero and i'll also come in here and give this a background that is white and a color that is black just so we can visually see what's happening and with that in place let's go and see what happens and there it is skip the content is now visible so i can push enter and the next time i hit tab i am selecting this over here and i've skipped my navigation i've gone down to the main content and let's just we can reverse and shift tab goes backwards so i can shift tab bring it back in tab again and then go through my navigation if that's what i want to do and while that works i for me i'm i've sort of moved away from that now and i sort of style this up on its own because then we can do a little bit more with it and we're not fighting against this sr only class so much to for when things come into focus so what we can do instead let's delete all that and we're also going to take the focus off of here and i'm going to make it look a little bit better and then i have a small challenge for you so i'm gonna give it a background and come in with my actual color and then use my color dark uh we'll give it a little bit of padding so padding of 0.5 m and 1m and let's give it also a margin in line of uh i was in right center of auto to place it in the center and i'm just going to save over here to make sure that everything is done and there we go it's perfect and so we have this nice skip to content so if i tab onto that and then push enter and then tab it's still working everything is good and it looks a little bit nicer what i want to do though instead of having it um we don't want it obviously always visually there so another step that we will take is to come and give this a position of absolute absolute and that should actually leave it exactly the same everything will be the same as what was before the big difference is it's pulled it out of the flow so the other content isn't paying attention to it so it doesn't increase the size of the space that we have there normally and of course then we'll also come on here and give this a z index and we'll give it our nice big z index to make sure that it's on top of everything i don't think we'll run into problems with it but just to make sure we didn't we have a one thousand and two thousand this is like our ultimate winner every single time and there we can see that it's visually on top now there's one last step and this is where the challenge comes in is we want it to be visually hidden off the screen somehow and when someone focuses on it it can come into the screen and it could be nice if it was done with a nice little animation of some sorts or transition so i'll leave you to your own devices to see if you can come up with a solution to that and then in a few seconds i'll show you how i would do it all right so what i'm going to do is come on here and say transform and we'll do a translate of y which is the up and down axis and on the translate we can say a hundred percent and 100 we'll move it 100 of its own height now 100 we'll move it down so if we go look we can see it's moved down which we don't want to do we want to do negative 100 and just like that it's visually hidden from the screen because it's it's in no man's land somewhere we can't access because it's too high up so to fix that to content focus and on that one we can then change the transform of translate y and put it back down to zero so now if i'm on the page i hit tab it comes into focus and then when i keep going it goes away and then we can gain focus back in and as i said it'd be nice if there was a nice little animation or something for it to come in and visually make sure that it gets people's attention as it's coming in so if you haven't so if you didn't figure this out or if you tried a different solution and now you want to add the little animation in there yourself you can go ahead and do it and i'll add it in in just a second and for me that would just be a nice little transition of my transform we'll do 250 milliseconds ease in and so by doing that let's go save that take a look at what happens and now it will fade in and then slide back out so i think that's nice it's a using the animation in this way is also a nice way to make sure that people see um when it comes in because the animation of it will catch the eye and then if they want to use it they can use it and if not it disappears and they can keep going through the rest of the site and with that we now have all of this done and our accessibility is more up to scratch and if you've never seen the skipped content before i'd encourage you to go on to other sites and try it out and see if you can find it on other sites because it is all over the place and many people don't even know that it's there and you can get ideas on how people style them on the different ways they bring them in or hide them and go into your dev tools explore and see how they're hiding it and how they're showing it because there's always different approaches to it and so yeah that is it for this one maybe it would be a great time to take a break and then i will see you in the destination page when you are ready all right so we're moving on to the destination page and this is really where things are going to get a bit more interesting and you get to make those decisions that i talked about because we have multiple pages that all have to be built out and they could be done all as separate pages or they could all be done as a single page where we're bringing in the content in many different ways depending on how you would like to approach this as i mentioned earlier i'm going to be doing things where i'm doing it as a single page and will be using javascript to change the content that's visually seen on the screen and for me all of that content will actually be in the html here and we'll be using like a tab type of system but if you would like to take a different approach you can definitely do that where you keep each one of these as their own page and we just link between the different ones or of course there is this data.json that is available to you if you would rather go in that direction as i mentioned for me i'm having a single html page all of the content will be on that page and we're going to be using javascript to show and hide the content that we need to and that is the approach that i'm going to be taking the other thing i will be doing is we will be starting mobile first and working our way up and we've already started setting things up with grid and i will continue using grid because for what i see here i think it's going to work really really well for now going to be tackling this moon page and turning this into what we see here and i'll be focusing on that then i'm going to focus on the crew page i want to get all the layout things done and then after once everything is in place we're happy with everything we're going to circle back around and actually add the functionality to these two pages so if you want to take that same approach that i'll be taking you can do that or of course you just build everything out as much as you can here see if you can add the functionality and everything and eventually see how i do it when you get up to those next stages or if you'd rather just see how i get started with it and then take off from there and do some of the challenges that i'm giving you that's perfectly fine as well but do try and do as much coding on this as possible and not just sitting back and enjoying the ride because you're going to learn a lot more if you're actually implementing the different things on your own good luck with whatever approach you want and when you are ready i'll see you in the next lesson where we're going to be diving in and setting up our destination page all right so let's get started on this i'm excited for this and what i'm going to first do is grab from my header all the way up to my doctype so we have everything there just so we don't forget to bring and all of this our navigation is done our skip link is done we have all our google fonts and all of that so i'm going to bring that all over to this destination and moon and that was all of my head all the way up and i'm going to paste that in like that then the next thing we definitely need to do is change the body class to destination and we then can come down and after the header we want to come in and add our content here for this there is a few things i'm just going to go back over to the index just so we can get a refresher on what we did here where i have my main that has my grid container class on it and so i basically want that and nothing else that is in here and we can jump on over back to my destination moon paste that and just make sure that we close the main right there so we don't need this anymore but we can go and grab all of this cut it out and bring it up into the main and start working from here and one last thing we'll do is my main has the id of main which is good grid container and we have grid container home i'm going to do a grid container destination and because the links aren't actually going to the right spot right now for now i'm just going to click run here in scrimba so we can see our page and we can see that the content is starting to come in though everything is in the wrong spot right now but don't worry we'll be fixing that up pretty quickly for now what i will actually do i'm going to add an x here on my grid container uh we'll do like a bunch so we remind ourselves to turn it off just so we can start styling our content with all the utility classes we have see that it's all looking good without the grid getting in the way and then we can just delete this and then start placing things actually on our grid so if you didn't already build out the page on your own and you're waiting for some of my little challenges well now is the time to do that start adding all the utility classes and the different things that we've already created to style this up the way we need it to i have this here if you want to look at this example but i would really encourage you to either look at the figma or sketch files that are provided by frontend mentor there is a lot more information in those and it will be much easier to get everything that you need from them than looking here but it is completely up to you how you want to work so good luck with that and then when you're ready you can hit play and i'll see you with my own solution all right so we'll start right here and this is going to be my h1 and this is one of those reasons why i said i like having things that are agnostic of the heading levels and close h1 because this doesn't look like an h1 but it clearly is the heading of this page pick your destination and we can tab through moon mars europa titan and we have these sort of subheadings for pick your destination this is the title of the page and then we get information and sub you know that's the the next level down is this information here even though moon is visually the most important thing this really is my h1 so h1 is like that but we need to style it and make it look how we want it to and if you remember we actually took some time to do that in our design system numbered titles over here and we did all the hard work to already get that to work so we don't have to do very much and while we're here i do know that we're also going to need my tab list in a second so i am going to come and copy that and we'll bring it in when we need it the first thing we can do is come here and say class is equal to numbered title just like that and then we also want to come here and wrap this in a span and we can close our spam here hit save and look at that a lot of the work is already done for us there is one more improvement we can make here something we did not too long ago to help with accessibility reasons so if you can think of what that is just look up if you're not too sure you can add that into your code and that would be adding an area hidden on here area hidden is equal to true because once again this is much more of a decorative element you don't need the zero one right out loud to you we just want it to say pick your destination so there we go we can visually see it but the screen reader will not read the zero one out loud and we can keep on going at this layout right here the next thing we do have is our image and we're going to have another lesson that's going to focus more specifically on the image because we will switch this over to a picture element but i want to devote an entire lesson to that so for now we'll just use an image png we do have a webp that's available to us there as well but again i'll talk more about that when we switch this over to a picture element in an upcoming lesson and for this we do want to give an alt of the moon and this should not be an image of the moon they know it's an image already so the alt here can just be the moon and nice and simple we have an image that will come in so there we go it's a nice and pretty cool image of the moon right there i think it looks really awesome next up i will come in with the tabs and if you remember i already copied those when we were on our other page so we can paste those in and we have moon mars europa and we'll need one more of these guys just like that and so that this is finished we can delete all of that away and there we go these are already working they're looking just like they need to work and we can bring this down i guess to a smaller size since this is where we're focusing so there we go we do need to center things and all of that but all of this is going to come together very quickly so don't worry too much about that we can see that is working the next thing we want to do is this here and for this part because this bit of information about the moon and what's written in here with some of the you know the information on the average distance and the estimated time travel and all of this this is sort of a selfisolated bit of information so what i'm going to actually do is take all of this and wrap it in an article with the r key called that and come down and close article and you can use articles for lots of things and in this case i'm going to be using it for here and it's anything that's sort of like the selfcontained bit of information which is exactly what this is you might see sections used as well but i think that article is actually a bit more semantically correct with the type of information that is in here so now it's just a question of wrapping it all in the right elements and adding in the right utility classes so i'll add the elements quickly and then we'll go back through and add the utility classes all right there we go so i've started doing it there is a little bit more structure that will have to come to this uh but it's setting the stage at least in the right direction and you'll notice here i've used h3s so it's like moon is my category some information on the moon then we have the subcategory of average distance and then we say what the distance is and then estimated time and then the estimated time that goes along with that so i've put this and organized it this way one of the fun things with semantic html is it does come down to interpretation so i could actually see this as one paragraph with a span in it just to style them differently because you could say it's average distance 38 or you know whatever estimated travel time three days you could read that as a single sentence but i do see these a little bit more like headings and then the information below it so it makes these two categories within the document outline now if we look at how these are always organized they are always grouped together and even here they do make two columns and to be able to keep these as two columns it will be important to sort of wrap them or have some spacing around them so i will come on each one of these and add in a div and then come over to the end and just close the div so we can wrap the content properly so now we have these two that can be kept together but i know i'm going to need something to actually make this into two columns as well because here they stack then here they go next to one another which to me generally means flex so i might as well come right away and add a div class is equal to flex here and then we can close my div here and just space those out and hit save and if we go and take a look we now have our two columns on there even though a lot more styling is required and one thing you might notice here is i didn't give these classes we might need to add classes if we need to manipulate the middle but as long as i have my div class flex here we don't have to give divs classes if we don't need them they're doing their job of dividing our content into two blocks and they're just there to structurally organize our content so in cases like this don't feel like you need to give a div a class it does sometimes seem weird seeing divs without them but we don't always need them so there we go i think that's looking good if you haven't already taken the challenges that i've been giving you or you haven't styled things up go through all of this and now add in all the utility classes to set our font sizes and different things that you might need and then i'll share my own solution with you when you're done all right so let's come up on here and give this a class is equal to font size 800 because it's nice and super big but not the biggest one that we have we also will want this to be uppercase and to be my font family songs i'm not saying i should say sarah so we can see the larger and smaller font sizes so i think that's looking pretty good and that's coming together the paragraph i think is perfectly fine and we don't need to add any styling on that but these guys at the bottom we clearly do because there are some differences going on in there so let's come on this my two h3s are styled the same and so let's take a look perfection and then we can come on to these two paragraphs right here case on there so i'm going to add it there and we'll take a look and that's looking good what's it yeah you can see the km is uppercase there so there we go that's looking good i think it's looking pretty good here as well at the different sizes so it's looking pretty good except for this which is actually i'm looking at it going you know what that's supposed to be getting smaller and so let's go look really fast add our index.css go all the way up to our font sizes and that one is using our font size 500 which is our numbered title and what i think is that this should have actually changed at the different screen sizes so i'm going to take the font size 500 here and bring it into our largest media query and drop it right there which is where it should be and then we can come in and make these modifications so this would be a font size 500 which would go down to a 1.25 rem which comes out to 20 pixels and then here the font size 500 will actually go down to one ram just like that and if we hit save and then go take a look at it that is looking a little bit better and matching the design a bit more where we get these smaller font sizes when we're at that small screen size and i think we'll make a little bit easier to match the layout that we're going for so i do apologize for that ahead of time but i do think that should make things work a little bit better and now that we have that done it is time to take the layout and make it happen and since we already have a grid i'm going to be using it so we can come and delete that if you want right now and then go ahead and start making things happen i'm just letting you know that i will be using graded template areas quite heavily for this because it's just going to make life so easy to get everything to go where we want it to and those grid template areas will be placed on the grid container here if you have experience with grid and you want to play with this or if you want to take what you learned from when we did the home page and apply it here if you'd rather follow along with me and do more smaller challenges along the way i'll be starting in the next lesson with the mobile screen size of this and then over a few lessons we'll break down the different screen sizes and get everything working for this layout so whenever you're ready i'll see you in that next lesson all right so it's time to make the layout come to life which is always an exciting time i'm going to delete this that we have right here and then hit save to make our layout come to life and let's break things a little bit because things are trying to squeeze into columns they're not supposed to be living on and it actually causes a bit of overflow because of the max width that we've placed on items that are in our grid so our image is causing some issues right now but that's going to be fixed shortly just because we need to get it to be smaller anyway you can see that we have a lot of white space around that image so a lot of the problems that we're seeing now will be solved without too much work so let's go over to our css to fix things up and right now we had our grid container here with our good container home and i do think it's going to make things a little bit easier in the long run um depending on how we want to do it you can pull this whole grid container piece out and this is becoming much more of a component than it is a utility class so i think what i might do is actually take this entire thing here just to keep organization a little bit easier and bring it all the way down and create a new category down here so we're going to paste that back in and then i'll grab this here and we're going to put in layout and this is really more layout related things so we can write that right here layout and then we can come back down here and so we have our good container which is our main layout and then we do have these modifications that are going to be coming in so all of this is related to the different pieces and parts of everything and right here we will come in and say that this is my destination layout because we clearly need to make a few changes right now and these changes don't necessarily apply to all of the pages and so let's start with this one and we can come down and say this is my grid container sd nation and as i said i want to rely heavily on grid template areas for this we already have a display grid that's applied here so we can just come in right away and say our grid template areas and on these grid template areas i always like breaking them down onto a new line and then writing them because it makes life a lot easier and we don't actually really need to declare it at this point because it is um so straightforward but we i like doing it at this point and then redefining it just because i find that it's a little bit more clear what's actually happening so then we can do our tabs and then we can do the content itself so i'll call it content it could be body it could be different things but i'll say sort of content the main content area for this grid template areas and if we go back to our moon here that would be everything that is inside of this article right here and to make life easier let's come in and give this a class and we'll give this the class of destination so we just make it a little bit easier so we're not going to all the articles just in case that not that i think this will be the only article that is within our grid container destination but it just makes life a little bit easier to select it so uh yeah that's what we can do for the grid template areas and now what i'm going to do is let's jump in and start with our number title and say that this has a grid area of title and this could technically break things and you'll notice here it's in quotations and here it's not that's just how grid areas work with the number title i'm saying this assuming it's always living on the grid if ever you had a number title that was outside of the grid this would just be invalid and wouldn't work you could take like raise the raise this a little bit by saying this and then it's only gonna work if it's in the grid container but it's only gonna work anyway and with the scope of this project i feel safe with this and so we'll keep on going and i'm gonna go like this with grid destination img so i'm really just selecting my image that is inside of my grid destination and if you wanted to be very sure that you're getting the right thing just in case multiple images would come in we could do that or of course this could have a class but with the layout the wave here it's clearly just one image that's coming into this grid so i feel like once again comfortable with this and this scopes whatever styles i put on here to here so we can see that this has a grid area of image and along with that we can give this a max width of like 60 or something like that and i think that will actually look pretty good so let's go and see what that would look like where there we go we get our moon sitting right there in the middle and it's looking pretty nice and already you can see this is pretty close to what we need so that's kind of exciting and you know i'm pretty happy with that so let's keep on going with that though we have our grid destination image and we could even like you could have this here and that would work but this is going to be working for all of them so i actually you know what this number title with the grid area here i guess could actually come up we have this this we could place it here just because it becomes something that's very generic and is going to be applied to all of the grids that we're using so i'll leave it there just because this is destination layout only then the next one we have is our grid container destination and then we want to select our we'll start with the tab list and so that gets the grid area of tabs and then i'm just going to copy this to speed things up a little bit and then the last one that we have here is our uh hummingbird our deskt nation info here this class is going to be unique to this page whereas tab list could be in other pages which is why i like scoping it here and same with this so using a descendant selector which effectively scopes it to here is going to help us out uh in this case we don't want this to be tab so we want this to be in our content and so you know we're raising the specificity on that so i could do this because once again this is unique to here but it's not going to hurt anything to have this and it just makes it a little bit more clear that we're making sure that we're relying on this grid so that's why i'm doing it this way it does mean it's higher specificity if ever i wanted to overwrite it but if i wanted to overwrite it i wouldn't be doing it in my grid container destination and then placing it within there so this i think if somebody were to come along this code later on makes it a little bit more clear what's happening and the higher specificity really shouldn't get in the way so to me this makes a lot of sense um the last thing that is kind of important right now is if we look here we have this flex and they are actually going next to one one another which we don't want to happen so if we go and look at my markup here this was just a flex and what i'm actually going to add to this i'm going to call this planet meta because it's sort of or it could even be just it will stick with destination destination meta um just so we're consistent with our naming throughout so destination meta because it's like the meta information for the destination that we're going to and you know we could choose you we could be going along the whole like grid container destination and then choosing the flex class um but i do like having this is sort of like this little mini component so i do think having its own class on here is a little bit more useful than doing that and like here it's an image that's in here but then we have my tab list we have my destination info we're being very specific where is that dot flex like um i don't know to me it's a bridge too far but i won't nest this i'm just going to say that it's just dusty nation meta and you might be going well kevin all of this is nested on with this right we're using all these descendant selectors and then we're not doing it here and because this is nothing to do with how it's laying out on the grid i don't feel like nesting it achieves anything it's still very clear what's happening where it's my destination meta the description of this class is very telling and what it does i should easily be able to find it and these are very grid related things i'm placing this on my grid so i'm saying that this on my grid is doing this whereas here it says something where i'm going to change the flex direction and we're going to make that column which should make those rows and then there we go they're actually stacking one on top of each other which is fantastic the next thing up on my flex direction column that i'm going to do is let's come in with a border top and we'll say it's a 1 pixel solid and we'll use our hsl once again it is a little bit different in the design file but um i'm gonna come in with this because i think it's gonna be a little bit more consistent and give us pretty much the color that we want it to be so i'm happy with that maybe we could go down on here to like a point one uh and get exactly what we're after and then we can come in with some padding top on that of 2.5 rim and then we can also do a margin top of 2.5 rim so it's just equal distance on both sides of that and there we go we got our nice line that's coming in and i've also realized the font size on these is wrong but we'll address that in a future video because it is the right size at the large screen sizes it's just um the media queries we have for them it's getting too small at small sizes so we'll definitely address that as time is coming and one more thing i'm going to do is we definitely need some spacing on here and there's a few different ways that we could introduce that spacing so i'm going to give that to you as a little challenge to finish this one off and once you're happy with your own solution i'll come in and show you what mine would be all right so we have a few different ways that we could do this one of them would be to introduce a road gap and that would work but we've already done the hard work of creating our flow classes so here on my main we can come in and we can introduce a flow class on there and that right away is going to introduce some spacing which is a nice start and the next thing we could do is we could either come in with an inline style to increase it or because we've already taken the time and we have our destination here another thing we could do is come in and give our flow space and come in with a two rim to increase the total amount of spacing there and i think right away that looks much much better and much closer to what the design was looking for and i'm pretty happy with that overall the last thing that we have an issue with is just the space on the bottom over here and we never ran into that on the home page and to me the easiest way to handle that is to go on our grid container itself so it's all the grid containers and come in with a padding bottom because this won't affect the bottom on the um you know whatever number you want to come in here with it's just going to give us that breathing room that we need here at the bottom which is going to make life a lot better because we definitely need some there when people scroll down or else it's just really awkward and even on the index page that might solve a bit of a problem we had where when we were hovering before sometimes we were running into issues where that could actually cause an overflow uh and be kind of awkward where the scroll bar would jump in and out so that sort of helps us prevent that problem and even at bigger screen sizes having a little bit of padding at the bottom it's not going to greatly affect things and it still lets us keep the overall layout in everything that we're having so it's a little bit of a compromise there could be a way where we target more specific pages with this but i think it's the easiest way to tackle it myself but if you would rather see something that's more specific for certain pages you could approach this in a different way as well and with that i'm actually really happy because i think we've tackled our mobile layout really well the tablet layout is almost exactly the same so i think we can do the tablet layout and this one all in the next lesson if you want to go ahead and try those out before i get there and then when you're done with that you want to see my solution i'll be looking at that in the next lesson so our mobile layout is looking pretty good we want to move into this area here where there's not very many changes one of them is the title goes from center align to left align and another thing that happens is the area down here breaks from one column to two columns but other than that everything is basically the same thing that we have right here so there aren't a lot of adjustments that we have to do and let's come here and we're going to add in that middle breakpoint of an add media and we'd say a min width of 35 m and on that i am going to select my number title and the reason it's in the middle is because of the alignment of what's happening right now because this is on a grid and if you remember when we set it all up for smaller screen sizes and our mobile screen sizes we said everything should just be centered that was working and it still is working for most things but it's not working for the number title right now and so even if you tried a text a line left it's not actually going to change anything if we go and take a look it's still stuck right in the middle so how would you go about moving that over to the left side i'm going to leave that up to you to see if you can come up with a solution so because we are in grid and this is a lot like flex we said everything is justified a center and so we can't say justify itself and justify itself is not something we have in flex but it is something we have in grid and we need to say start and if we do that and we go take a look it's lined up all the way at the start so here it's looking pretty good then we get to the break point it's there and then it just stays left aligned which is perfect there is this awkward point there that's going to be fixed really easily as well the other thing though that i would like to address is just the um spacing that's happening here right now and if we go and look at the layouts here there is a bit of space and then that space does increase and already that space is increasing because we're adding a margin top and bottom here let's just take advantage of that extra spacing because we want it both times anyway and we just say that we have a margin top or if you do want to stay we've been doing margin block and margin inline you can do a margin block start which is just the top so if you do want to stay with the logical properties you can do that but just to stay consistent since we've been using top and bottom everywhere we'll add a two ram of margin here on the top so now these medium screen sizes we have that space that's good now we just have to address this problem down at the bottom which is very easy to do and you'll even see the alignment is just completely off and let's go look here hmm we might have some weird alignment issues that are happening and i know why those are happening we might see this across other pages too so we're going to address that shortly but for now let's just fix this so it does go across two columns so that is my destination meta so in this same media query we can come in we only need to do one thing we can delete most of these leave one of them and make a change here so what is that that we need to change i'll let you do that and then i'll take a look at it as well and that one thing that we needed to change is just coming in here and saying that this should be a row instead of course when we do that things sort of break a little bit but the row is working where they're going one next to each other and that is perfect so if we come and take a look they should be spaced out a lot more is there a way just with flexbox that we could sort of keep that with our spacing so i'll let you give that a try and then we'll take a look at how we can do that and i'm going to come in with a justify content and i will come in with a space evenly and space evenly was the last one that was added and it's the one that you have space between space around and space evenly uh space around sort of is very similar to space evenly but space evenly is usually the one that you want so with the small sizes i think it's looking alright everything is okay we get to this larger screen size it's looking pretty good we still need to fix these font sizes we'll get there don't worry and then we get to this larger size where now this is where the next adjustments have to happen so there's quite a bit of different things that are happening here so i'll let you try and solve all of those things and see if you can get things working and i'll see you in the next lesson all right so let's get our big layout going and we're going to be doing a lot of as i said with grid template areas so one thing we're going to have to pay a bit of attention to here is let's paste this in and delete this and then let's take a look at how our areas are even set up so if you remember we have the left and the right are set up with these which are sort of like the the extremities where nothing should live we want everything living in this area here so what we can say is we're going to actually come here and say dot and then title and title and then a dot and the dot is like a empty area so we have our empty area then we have title across one title across two and then going across into we have nothing over here so in all of these we're going to start them all with a dot and we can actually delete this last one because what we want is our title all the way across the top then we want our planet here and we have our tabs and we have this content so our planet is actually going to go across two of these so let's go and take a look at that we have our image and then our image right there and then after the image we can have our tabs and then the dot for the empty area that's left over and then here we have our image and we have our content and then the empty area that's left over and just by doing that let's go take a look at what that's done and oh my goodness it's looking pretty good my we did we barely did anything and i'm super happy with how that's looking so that's a really uh nice surprise i think this is one of the reasons i really love grid areas and then we come in with our justify and if you remember we'd originally a long time ago changed the justify items so we're going to come with the justify items until we start on that instead of center so then just here everything is centered then we want it all to go more left aligned so if we go and take a look that's working for almost everything except down here which is using flex but let's just see here we're pretty happy with that then we pop over to here and why is my title not actually working let's take a quick look at that and actually what's causing that is this here with our grid container first child and last child that we were doing to create those two columns there so we will come in and fix that just by saying that's only for our home layout and home and because we're doing that and fixing that only for our home because all the other ones we'll be using uh grid template areas on anyway we can come and fix that like that and now if we go and take a look we can see there we go that looks a little bit better where it's actually stretching across the top uh another thing we have to fix is our image so here we can say we want to use the same selector because we're overwriting what we've already set right here so i can use that same selector right here and then change the max width now to 100 to let that image actually grow and it does look a little bit big so maybe we'll actually come in with like an 80 uh or a 90 just to make sure that it doesn't get too large another way we could accomplish the same thing is by setting a bigger gap here down the middle and yeah i think that works out really nicely we can drop down to the tablet layout and it's looking good and then we get to here and i think that's working really really nicely now the last thing we sort of need to fix up is this guy right here and so to be able to do that let's go and take a look and we just need that one to be left aligned and to fix those font sizes at long last so to get those left aligned i'm going to leave it for you to see if you can figure out how to do that and then i'll take a look at it in a second all right so that is my destination meta if you remember properly so what i will do is just take this right here once again we'll drop it down here and the flex direction can stay like that but my justified content we're going to do is put a start on there just so it goes to the left alignment instead of spacing everything out but we'll also come in and we'll use our gap property here let's increase it after like a three rem to add that spacing in between those two elements and i think we could actually increase it more to about a six and there we go i'm super happy with that and that's looking really good and the last thing to do is the font size that's coming on here and i actually made a change early on uh on one of the elements also on the home page where we're having an issue with a font size which was our explore button and if you remember when we did the explore button we were just we took the font size property off because it wasn't giving us the size we needed and we just explicitly set it so i'm going to do the same thing here we're going to delete this and delete this one right there and in this case i'm going to use my destination meta and choose my paragraphs there could be if you want to create a class that just has a fixed font size that is something that we can do as well but for me it's a very unique case through the entire site so we'll grab that we'll come over to my index and so for my destination media paragraphs and not the one that's here we don't want to be working in a media query because the font size should always be the same so then we can come in with our dusty destination meta and say that a paragraph that is nested inside of there will have the font size of 1.75 rem and so let's go and take a look and there we go we have the proper font size that's on there and as the screen size gets smaller that font size is staying the same across the board one more change i do want to add here a very small thing we can't really see it here but if you're on a computer with a much larger screen than what i'm working with at the moment um if you got to these large sizes or the screen was much taller than what we have here everything would start sort of pulling away from each other a little bit so just to address that the easiest way is here on our justify items start i will come in here with an align content start which we won't see the difference as i said at all right now in within the editor that i'm using but if you're on a larger screen it's just going to keep all the content sort of together at the top instead of slowly stretching out as the page size increases so yeah i just think for bigger screens that will be an important change to make and lastly the thing we want to address is these alignment issues that can be cropping up where things are working super well there and as i mentioned earlier it has also found its way under the homepage with this right there and so you know that doesn't look very nice when that happens and it's just way off to the side so this could be a nice opportunity to dive in see if you can figure out what's actually causing that and see if you can fix it on your own before i show you my solution in the next video all right so i won't lie this was a little bit of a tricky one and the what's actually the culprit here is this grid container with our star with a max width of 50. and to be able to highlight what's happening i'm going to come on here and we're going to give this an outline and we're going to say 3 pixels solid lime green because that should really stand out on our background and if we go and take a look we can see all these boxes that have been drawn around everything because basically everything has an outline on it now and a few of these have very small font sizes on them and those small font sizes when we take a look at the smaller screen size right at oh look at that there's another problem there we'll solve that in this lesson as well but at these small screen sizes what's happening is you can actually see that the total distance here or the total width of this is less wide than the total width available to it because this has a max width on it a 50 ch and it's such a small font size and if we go and look at the home page and run that one again the same issue is happening here this font size is so small that 50 ch is actually smaller than this entire space that it has to live in and the reason we set this in the first place is because of this paragraph and other paragraphs to it whereas this is growing we're going to see we're getting this extra space on the sides here which is nice it's good that's what we want and if i come in here and i turn off this max width what happens is this now stretches the entire thing and it just it becomes a little bit harder to read if you're on a tablet and it was like this like it just doesn't look as fantastic as it could look so that's why we initially put that on there so now that you know what the issue was if you weren't able to solve it at the beginning see if you can find a way to make it work and only select those paragraphs i'm going to turn this max width back on so it's actually being applied and what i'm actually going to do is change this from a star selector to a p selector which is choosing all my paragraphs and in this case it's actually working on this page the only issue that can come up with that is if we go over to my other page it's selecting a few things that i might not want it to select and luckily that's actually pretty easy to do where we can add one more thing here which is going to be not and then in the knot we can put in a class on an attribute selector so it's saying any paragraph that does not have a class applied to it and if we go and take a look we can see that's only applying to this here so it's leaving our max width set perfectly on that and if we go back to our index the same thing it's only being applied on that one and so we can see that it's only being applied here and if we go back to our index page we can see that it's only being applied right there and this is one of those ones i don't use very often but it can every now and then really come in handy so we can turn off our lime green because we don't need that anymore but as we saw we are running into a bit of a problem with this text over here when we hit a certain screen size which is right around here and that's happening for a very interesting reason we're running into these little issues that sort of pop their head up as you're working on a site that's very normal to happen and so i really want you to see if you can troubleshoot this one right here that we've just run into and see if you can solve that one as well all right so that is happening purely from one selector all the way down to the bottom we had which is our destination meta and that is because we have a very big gap on here and it's just running out of room and so it has to break onto different lines and so one solution here is to change this from six we could just make it a smaller value of course but i'm going to choose a min function and in the min function let's come in with like 15 viewport width and we can do a six rem and what this means is choose whichever of these is smaller so if six if we're getting to a very big screen size then 15 viewport width will be really big and then it will choose the six because six will be smaller but if the screen size gets very small then the 15 viewport width will be smaller and it will choose this one instead so if we go and take a look it looks like 15 is already too big and that's not actually helping us maybe we need to drop that down let's try eight and just see what that looks like and uh there that looks already much better so we can see that it's shrinking down and ah that's actually working pretty good now i am thinking that on these other planets we might run into larger distances so maybe we actually want to drop this down to like a five or a six just to make sure that there is enough distance and we don't have to readjust it maybe we will we'll see when we get there and once all of these different numbers are brought into there but right away i think we've hit a nice zone there we've solved a couple of problems that have reared their head and as i said i'm not going to add the functionality to this yet we'll cycle through the pages we'll put the layout for the next page in place and then we'll come back through and go and add the functionality where we can actually use these tabs that we've created right here so if you want to make any adjustments look at any of the code in here take a break for a little while and whatever it is when you're ready i'll be waiting for you in the next lesson and this one is another fun one very similar to the last one that we worked on and of course we have multiple different ones and unlike the tab system this time we have the dots to be able to go through the different crew members and then of course we have all the different sizes to worry about as well where things clearly get moved around a little bit more than on the last one because here we have an image on the top the image goes to the bottom and then the image goes to the side instead of always staying in the same place which makes things a little bit more interesting so i'm going to start we can jump over here to the crew commander page and i think you can do a lot of this all on your own you might run into little problems here and there along the way and that's where i'll be coming in and helping out because in a few seconds i'll come through and add in a lot of the markup and the utility classes to this page to get us started before we get into the layouts all right so for this one i'm actually going to go over to the moon page to get a lot of what we're going to be doing it's like last time i'm actually going to start at the main so we can go from the main all the way up and hit copy on that and then we can come over into my crew commander page and we can do everything from we'll start right here and hit paste then of course this is opening my main so we just want to make sure that we do close the main and of course this time it's grid container and it will be crew instead and we'll come up up over to the body and make sure that is true as well and let's run that page and we should see things are starting to show up in there at least now the next thing is we need to bring in all of the different uh tags and utility classes on here so if you waited for me for this step you can go ahead and do that now i'm gonna go a little bit quicker for this because it's to be very similar to the last one that we looked at so i'm going to bring in all of the tags and utility classes at once instead of talking my way through it just because it is so similar to everything we've been doing up until now right so i have most of the things in place the last thing i'm going to do is just come up and go on over to the design system and we can grab this right here because we need our dot indicators and drop back up over to here and paste that in and we will need a couple of extra buttons so let's copy that button and paste it in and this time we do have these slide titles where i'm going to change this one to be the commander and there we go we have the commander mission specialist pilot and the crew engineer and so again these are in an sr only class so they will not be visible but for a screen reader that comes along when these tabs are there it's going to make it so they sort of have an idea of what they're clicking on so they'd get to meet your crew and then this is going to be the selected one so they're going to know they're on the commander and then we have the commander information here and then we get to the mission specialist the pilot the crew engineer one thing quickly before we get into the layout something that ideally i would want to do is actually to have this content and the image inside that article because this image is very related to what's happening here obviously but because of the layout differences that are happening where the dots are sort of we have the image then the dots then the content are then over on this one then the image is dropping below and we have the dots and then the content and then here things are breaking up it's always organized in very different ways be very difficult to be able to do that so i'm doing the image on its own over here i don't feel like it's an ideal situation but in the end it's one of those compromises i'm making to be able to actually execute the layout that we're trying to build so yeah that's why i'm excluding the image here is the same on the previous page why the images were the way they were and with all of this in place i do believe we're ready to work on the layout so i'll see you in the next lesson where we're going to do just that all right so before we were doing all of our work on the destination layout now let's come down right to here and come in with our crew layout and if you haven't already done it i'm going to challenge you to do as much of this as you can on your own and then just come to me for advice so i will move a little bit faster through this one than we did on the last one and we will be using a lot of grid template areas and a lot of very similar things to what we've already used um up until now so i'm going to leave this here for you i'll switch this over to crew for you and i'll see what you can do with this page and come in with your own solutions to this again i'm going to be going a little bit faster a little bit less explanation at this point because i think you should have these skills to be able to move forward and then if you do get stuck or there's small little things you can see how i do things a little bit differently hopefully to find the solutions to the problems that you've run into and so the first thing i'm going to do is actually also come up to here and take all of these and we have to make some changes to them but i'm going to grab these just to be able to work a little bit faster and drop them in here because once again we do want to have this could be my crew this one is going to be my crew and this will be my dot list and then we can come in with crew here and uh this is my crew info is what i believe i called it is it oh i put crew details okay we'll stick with for details maybe info would have been a better name but we'll stick with crew details on that one and the order of things is obviously a little bit different we have our title our image our tabs and actually maybe it is the same go ahead save here and let's go and take a look to see how things are looking comparatively to over here where hey it's not too bad actually uh so yeah not too bad at all we do have a color differences on a few things here that we need to fix we need to add a bit of flow i think and a bit of a border so i'm going to go ahead and do that um i did say on the previous one this is very related to grid content but i am going to stick here and just do a border bottom of one pixel solid and hsl with this one now because we are using a border in multiple cases where we had one previously on the meta description it was very similar even though i did this at the top this could be a utility class that you create and instead of doing it on here we could do it as a border top on this area over here so just to say there are different ways that we can skin a cat and approach these different things now the one issue with that is because i have a 60 on there it's not quite as long as we needed in the actual design but it's going to be close enough that i'm actually pretty happy with that but now we do have that issue where we get to here and the layout actually needs to change when we get to this tablet screen size so this is something we didn't have to do before but we can come in and take this guy right here and once again we don't have to really redefine other things we only have to redefine our grid template areas which is always so nice to have to only be able to do so title is still going to be first then we're going to have our content and everything else is going to follow so the image moves all the way down to the bottom so let's come in with our image so we're going to cut and then the content of course is going to get moved up so we can make this one content and make this one here tabs and of course i need this last one right there so at the small screen sizes everything is the way it should be we get to the medium screen size here and then that's working we're re reorganizing our content and then when we get to the larger screen size but we still need to do that uh there is one more thing i'm going to do if we take a look this should always be stuck to the bottom of the page i am a little concerned what this might look like at really big screen sizes so while it should be stuck to the bottom of the page and that does mean that maybe on this one we've added that padding that we want to get rid of because we want to have our content stuck to the bottom i am going to leave that border bottom that we have here just as a bit of a precaution because i think it really large screen sizes it's going to be a little bit awkward no one's going to notice it if it's stuck to the bottom of the page but if we get to a very large page then we won't have any issues where it looks like this weird floating corpse at least this line does provide us that separation that could actually go a really long way into making things look better so let's take this one now we can come down into this media query and paste it in and redefine things so remember in this one we need the dots on the two sides so we have our title across the top then on this one we now need to have our um it's going to be our content and image and i'll come bring the dots in in a second then it's going to be our then it will be our tabs and our image and we don't need this last one down here and as i said we can come through now and bring in those dots you just say that these grid areas of the extremities are blank so with all that in place we should be able to come over open things up and look at that it's working not perfectly and i think my dots are in the wrong spot so let's just make sure i have the right set up on that one uh dot list oh there it is top in the k tours i did the same thing twice much better and we can see that things are looking pretty good we have one other change that i'm going to make which is interesting because it's the same as this one so i'm actually going to do a comma and say grid container image and just so we can save a little bit of lines of code there so my image isn't getting too small now one difference that you will notice right away from the main design is the name here is going all the way across and my name here is breaking across two columns again normally i would increase maybe my media queries just a little bit and these would be set to 40 ram each instead of 30 rem as their maximum size so that could actually have a nice uh could actually fix that as an issue another thing we could do is come in with a clamp on this to try and fix that from breaking on two lines but that might be something we'll address later on seeing how things work out and if they don't look too good and i do have two challenges now for you just to sort of put the finishing touches and there's a few little things that i think could be improved overall on this but the two challenges i have for you first of all is getting this at the large screen sizes and just making sure it's aligned all the way on the left side and the other thing is to make sure that the image is stuck to the bottom instead of being stuck right here and so i'll leave those two challenges to you in just a few seconds i'll look at the solution so sticking with my min width of 45 m here what we can do is choose my grid container crew and on there we can say my dot indicators and on those we want to say that there are justify self start on there and that should help pull them over to the end just like we did on our destination meta on the last one and now we can see that it is lining up the way we want it to and then here everything becomes centered once again and then to get the image on the bottom there's two different things one of them is we do have padding that's down there that is preventing it from being stuck all the way on the bottom so if you remember that padding is coming on my grid container right here and the grid container destination is a modification of that class so we could say i'm going to not do this at the smallest screen size but i am going to introduce it at the medium screen sizes and up on this one we could say that the padding bottom is zero and if we go take a look we've eliminated that space and as you can see you can but that border that was there is basically nonvisible so that's looking pretty good and that's fixed that problem at this screen size but then when we get to this large screen size we still have it not actually touching the bottom and this is something that i did in the previous one because i didn't want to prevent the problem that could arise from this i actually think that maybe taking this step of keeping it like this could like at this screen size and the screen sizes we'll be looking at here while i'm previewing this i don't think we'll run into any issues with it but it's one of those things where at a very large screen size it could look a little bit strange so i think i would leave it like this personally but there is a way we could make sure that it's always stuck to the bottom so why don't you see if you can figure out what that is and then in a second i'll come and address that as well all right so for that one it would just be coming down and very similar to how we did this i can take the same thing change this over to just my image and then justify itself is left to right right now so we can do an image not an image and a line itself and throw an end on there and that means it's always going to be lined up to the bottom of the grid and so if we go and take a look you can see now it's stuck to the bottom uh no matter what and it should always be stuck to the bottom with how we set this up i'm just worried at very large screen sizes that some strange things might happen with how the layout is going to look on that one so i'll let you be the judge on that whether you want to keep it or not so i'm actually going to comment that out but if you would want to leave it then you could definitely leave it or if you want to find a way to make it not look too bad you could also take another approach on that one i wouldn't mind at all so i'll leave that one up to your own discretion and we have a few little finishing touches on the last two pages we've done just to make sure everything is looking good and then we'll be getting into the functionality in not too long all right so i just want to make a few very small little touches improvements before we add the functionality and one of those important ones i think we need to do that we haven't done yet is to come all the way up and to fix the backgrounds here so uh we have them all set up for the home page but i can copy this and do a paste and paste because we have two more pages that we need to set things up for and if you want to go ahead and switch them all you can now but this is pretty straightforward i think so i'm just going to jump right into it and i'm going to choose the home basically everywhere we have here and just switch that out for my destination page and then do the same thing for my group page so i'll see you in just a second and there we go we have my different backgrounds in place and so let's go start with our crew commander page and see i can already see how my background image has come in so that's looking pretty good and we should see the image is going to change it does so i'm pretty happy with that let's go next and look at our moon page that we have right here and we should see a nice background oh we have another mistake that's coming with these background colors which is i know why that happened i'm not sure if you remember because it was a long time ago that we'd set things up like this but why don't you see if you can find out why those background colors are there how they got there and if you can find a solution to fixing that little problem all right so this is one of those normal problems that sort of pops its head up as you're doing more and more work on a site so the reason that they did happen is when we made our design system we just had a solid background color on there and when you have buttons they have a default button color so this was an easy way to get rid of them but obviously we didn't want it so i'm going to remove that class from here in my design system even though we're finished with it just so i don't accidentally copy and paste it and run it into the same problem again in the future and then we can come over to my moon page here and take off all of these and there we go they're gone and if we take a look well now it's even worse so if you didn't find the solution before see if you can fix it now and then i'll look at the solution in just a second all right so that one was let's go up a little bit and we can find our underline indicators and basically all we have to say is background color that is transparent and if we do that it doesn't affect our navigation links at all because the navigation links didn't have a background color anyway and you can see it's fixed the problem that we had there so a nice little wind that didn't take very much work compared to the initial design i do feel like the gap that we put here was a little bit big i'm gonna see if you can remember how we made that gap and if you can fix it and this is not something i do specific to this page i would just do it for that component in general so i'll let leave you here and see if you can shrink that down a little bit so if you remember we did that using our padding right here and i said don't worry about doing it as like a general fix just do it on the element itself and that is on our navigation we actually increased that space by increasing our underlying gap in this case we don't actually have one if you did redefine your underlying gap somewhere else and that worked that's perfect but i'm actually going to come here and redefine it here as a 0.75 ram instead just to try and pull it a little bit closer and i think even a 0.5 ram would be exactly what we need there we go i think that looks a little bit better and as one last change that we're going to make before we move into the functionality is just the title here of commander if we go and look at the design we can see it's not actually using my accent color it's actually faded out and if you go into your design files in figma or sketch you'll see it's at about it's a white color but at about 50 opacity so see if you can find a nice way to be able to adjust that and in a second i'll look at fixing that last thing up so that is happening here on the crew details on the h2 and so we could give this a class but i think just choosing our h2 in crew details is good enough and so let's go and do that right now where we can jump on over here let's go down and find my layout and i even though this is more like typography related just because we do have these grid we have like a lot of things that are related we have my destination meta here then we get my crew layout i just think it makes sense to group it with all of this so this one was called my crew details and then i can choose my h2 that is in there and we can just on this one we could do two different things you could actually say the opacity is uh a 0.5 and that would work perfectly fine since it's all the text and it's just the text that you're fading out so if we did that it would work and you can see it's faded on out or of course you could change the color of it and use our hsl at 8.5 and that would have the exact same effect so if you did either one of those or you found another way to select it that would be perfectly fine but that's that last step that we needed to do just one really quick note i really don't mind doing these types of things with some descendant selectors it even forces people to take a certain approach if they needed to create a new one to make sure that they're following the a certain way of organizing your text that i think is important anyway so for me this works out really well again if you prefer a class on this instead of saying the h2 instead of crew details i completely understand that and there's a few different ways you could go about choosing the type of class you'd use there but i'm really happy with where we're at now i think the page is looking fantastic even though this is breaking on two lines to me that's not the end of the world even though in the design file it's not doing that we can always look later on once we add the functionality if we see that things are jumping around a little bit too much maybe we could come and tweak things a little bit more but for now i'm going to leave it though there is one last thing is everything is really crunched together and smooshed right now and if we come and take a look here we can see we have a lot more spacing coming on our elements and over here too the spacing is a little bit more on everything and this is something that we did earlier but i want to again increase the spacing a little bit more and so if you can think of a way that we can sort of space things out there within here within a class that we already have you can go ahead and add that in that one is just by coming on and adding our flow class here and this is actually going to cause a problem when we do this because now we get a really big space here and here if we look at the design the spacing here is a lot smaller than our spacing there and from a design standpoint that makes sense this information is related to each other so there's a little bit less spacing on it and that does create a little bit of an issue with our flow class here and in a way you could think this could cause a problem and then you could come in and have to add individual margins and everything here another way you could adapt around that is to wrap this content in something and one thing you could do if this was different types of content you could come in here and use a div to do that just so what happens now is the flow class will add spacing around this and this item here so when i hit save we can see that now this is grouped together and then we got our space so that is one solution for short in this case because we are in an article i mentioned this earlier and it's why on my header when i created it we have a class of primary header and i said it's very you know sometimes you can have multiple headers in different places and one place that you can have a header is within an article and you can say that this is the header and close header of my article and this is my heading so that h2 is like the title of my article and this paragraph is effectively now a subtitle and one thing you definitely don't want to do is use another heading level like an h3 as a subtitle a subtitle should be a paragraph and a nice way to sort of distinguish it as a subtitle is actually by wrapping them within a header like this so this is the heading of my article the main title is commander then we get the subtitle of commander is douglas hurley and then we get into the content itself and what we can do on here as well because we do need a little bit of spacing is to come in with a class is equal to flow on here and then you may be going well okay but that once again reintroduces too much space and one way we can solve that is to change the flow spacing that we have on this header right here and i do want to be able to bring this also onto the moon page potentially or you might also need this for the third page so to make it a little bit more generic we could just come in and say flow space small as a reusable utility class so we're saying that we're using our float space and then we're modifying it or you could also do something that's more of like a scope style using a descendant selector or you might say grid container article just because of how it's always being used or you could come in with another way but i want this to be something that can be reused in different places so i will take this approach but again you can follow with multiple different ways to accomplish the same thing so let's come on over to my index go find my utility classes and right here what we could do is we could add that in flow space small and i guess actually this would actually make more sense we're taking that and modifying it that just makes more sense because we're modifying flow so flow space small you can do small space if you prefer and on that one we can just come in and then say that my flow space and change it so we're modifying what this variable is and we could come in with a 0.5 rem instead and we'll just have to then come back over to here just to modify this to fix it there as well and let's hit save and now you can see that that space is a lot smaller than what it used to be so let's just bring this back up to one or remove it i should say maybe and we'll go and take a look and it's a big space and then we can come in and say that it should be a 0.5 rim and we'll hit save and then you have a smaller space that is there to match closer to our design and if you really wanted a more robust system like this you could even have like a split space 1 a flow space 2 a flow space 3 and have different spacing available for each one so then you'd be able to sort of have a whole range of utility classes that you could use to modify things but for now i'm just going to stick with the small and i think i'm actually going to bring it up to 8.75 just because i think that matches the design a little bit more and if we go and take a look at the moon page and hit run on that we we do already have a flow class that is giving us some space so that would be all the way up on my main we do have this flow so if i took that off and we hit save everything is sort of you can see there's less spacing here so i'm going to put that flow space back on and i think that's better but i do think we should have a little bit more space in between the text of moon and this right here so i'm also going to come on the same way we did before on my article and just add a flow up here we won't need our small spacing and i do think that is a bit sure to the design itself so i'm going to leave it like that and in the next lesson we're going to see an improvement that we can make with our image that is right here and do something a little bit more with it because we do have web ps that are available to us as well so one of the things that was provided to us from frontend mentor was when we look at our images we have a moon.png and we also have a moon.webp and there's other image formats that are also becoming very popular such as avif and there's probably going to be more and more in the future and one issue with them is browser support and while webp actually has excellent browser support at this stage and avif is getting better when we do have these it is a good idea to provide fallbacks just in case the browser that is trying to load that image can't load the webp and webp is a very interesting format it can replace both jpeg and png because it can support transparency if there's transparency in the image and both cases for png and for jpeg it's just much much better at compression compared to those older formats and so you're getting very crisp good quality images at much smaller file sizes and so just to compare between the moon.png and the web p here the png version is 71 kilobytes whereas the web p1 is 28 and for all of the different images there is quite substantial savings anywhere from 50 and much much higher and to be able to support these we will be using the picture element and it's pretty easy to use the picture element i'm going to come here and write picture and then just come down here and we're going to close picture and there's a little bit more to it but this is the very beginning where you actually do keep your image inside of the picture here you can do a lot more with the picture element than what we're going to be using for it here you can have it bring in different images based on the density of the screen so if you want to bring in a lower res image so it's lighter weight a higher version image for larger ones you can also use it for art direction where you can add a media attribute within here as well so you can do art direction where you're coming in with different images depending on the space that that image has available to it but we're going to keep things really simple just as an introduction to the picture element here where i'm going to write source and source is a lot like the source we have right here so we have a picture then we have our source and in this source what we're going to do is write source set and then we want to get the exact same image so i'm going to take this one and put it right there but we can switch that out for my web p and you do need to give the browser a little bit of context about what the source is and so it can know if it's able to use it or not so i'm going to come in with a type is equal to we're going to say image slash web p and if you're familiar with video this might look very familiar to you uh one of the things that's a bit different is where you can provide it to these here and we don't have an avif but if you say we did have an avid version you could come in here and have the avif and then over here just do it like that and what this is doing is this is setting the png as our default but the browser is going to look through these and it's going to see which one it wants to use does it support webp oh you could use that does it support this nope okay i'm going to use this and the image it's really important you do have an image here because it's actually going to replace this with what we see here so we don't have this version so i'm going to delete that but just to show you how you could provide multiple different versions of the same image and just really fast the reason it is source set is because you could provide multiple different ones here as well and this is where if you had uh different ones with different resolutions so this could be your 1x and then you'd put a comma and do mid path here image dot web p and this could be your one 1.5 x version and then you could also have a 2x version and you just comma separate the different ones that you'd want to be bringing in with a source set uh and that's why it's a source set and not just an src because you can provide a set of different sources here but in this case we only have these two to pick from and if you've never seen the picture element or used it before this could be a nice little note to take down as something you could explore more going forward we will notice that things have broken a little bit because this image is now because it's floating on over here instead of being over here and that's a really simple reason that that's happening and will be a very very easy fix so we can go over to my index dot css and i'm just going to scroll all the way down and the reason that's happening is if you remember when we set things up we did them all with grid container destination image because that's what we had so we can just change that out now for our picture element instead picture and this could actually be a good argument for putting a class because then if it was on a class instead of an element then it could be agnostic of either one but we can just do picture here because we're going to be using a picture in all of them and that just means we do want to come down and change it over the picture anywhere we were using that and there are a few more spots where that was here is another one and i will even though this is commented out just in case in the future we'll switch that one out right there and that means everything should be working fine on this page but we do need to also go and fix that on our crew commander page because if we look now the crew commander has shifted over and everything has broken there because this one is still an image so i'd encourage you to go and just try switching out the image we have here for using the picture element with the webp in the source and then leaving this one just like that and just so you can get a little bit of practice writing it all in and building up some muscle memory there and in just a second i'll go through and do it myself as well all right so we can come in with our picture over here we close our picture and then here we just need to add in our source and we need the source set is equal to and now everything should be good we'll hit save and we've fixed all of our problems and everything is working beautifully right now and with all of that in place i do believe it is time to start adding the functionality or at least uh in the next lesson we won't be adding the functionality itself but we'll be setting the stage so we're able to add the functionality very very soon so if you've been at this for a little while i'd really encourage you to take a nice break right now before we get into this next section just to give yourself time to digest everything you've been learning and then when you're ready to keep on going i'll see you in the next lesson how the fun begins and we want to add some interactivity to our site where when someone clicks on mars it brings them to the mars tab or the europa tab or the titan tab and make it easy to go back and forth between them all so as i've mentioned a few times now one a very simple way would actually to make these links instead of buttons and each one is just its own page which would just involve taking what we've already created on say our moon page and then copy paste everything in place but then just change out the content for the next planet and do the same thing for each one of the planets and that would work very well but we want to make things a little bit more interesting in here so we're going to be using javascript to be able to do it again if you want to just step things up and level up even more than what i'm doing here the data.json file is there and everything could be populated from there instead in this case what i'm going to be doing is the middle ground which will require having duplicate content on the page and cycling through that content so we're gonna have all of that html content only on this page and then when somebody comes and clicks on mars it will just change we'll hide the moon content and we'll bring in that mars content and the same for each one of these other ones so to be able to do that we need to set the stage so we have that content to be able to cycle through so because this destination page for me is going to be acting as my only destination page and not through those other ones i am going to rename this page and we're just going to call it destination instead of destination moon but i will leave those other ones for now because we still need them to get the content that will populate all of our text and everything and one thing we're going to want to do now is to actually create all of this extra content so i'm going to come and take this and we're going to put in four images three four and you can maybe guess what i'm going to do is this first one will get changed to image mars this one here will get changed from image moon over to europa and if i spelled everything right all of the images and actually we shouldn't actually see all of the images we should only see one image if i did everything right here and actually we'll have to hit the run and not save and we should only have one image which should be titan and yeah there we have it we only have titan that is showing up because all of these images are actually there they're just overlapping each other because they're all living in the same place so there's the next one underneath it and now this isn't what we want to do we don't want them all visible at the same time and overlapping each other so there is something we can do to hide them and your first instinct might be to come on and use that class of sr only because that visually hides things we don't want to visually hide them only though because if somebody is using an assistive technology and the screen reader is reading through it it will read all of these and i just realized i didn't change these out either so we do want to make sure all descriptions are good so those are better and if an assistive technology was going through here now we have the proper alts in place we don't want the screen reader to be able to see them and we don't want people to visually be able to see them either so what we can do for that is to actually come on here and use the hidden attribute and the hidden attribute hides it from both screen readers and assistive technologies as well as from visually hiding the content on the page so if i hit save now we can see we only see the moon and if i add the hidden here hidden and then we take this one off and hit save we will only see mars so that is what we're going to use to hide and show the planets we're actually going to be using the same thing for all of our content as well and so if we come down we have our articles that are here and if you have a guess at how i'm going to do this it's very similar to what i did for all the images you can go ahead and set it all up now as i said very similar to what i did from images let's just come down and for this i am going to use some comments because there is a lot of content that is here that is very similar so this last one will be titan this one up here will be europa this one here whoops not the wrong spot this one here will be mars and then this one here is the moon and this just makes our life a lot easier when we're scrolling up and down and looking at our html to know which one we're on and so uh with that i'm gonna quickly go through and actually change all the content just copying and pasting it from these other pages and then we'll talk a little bit more about how this is going to work maybe a while though anyone's able to visit yeah titan considering it would be a seven year trip wow uh they're already worried about the radiation in getting to mars which is just a few months so imagine trying to get over to there anyway uh with all of those in place if i hit save we just have a mess of content because everything is just overlapping each other and it is a complete disaster as you can see there so we want to come onto each one of these in the moon i will leave alone but then on mars we want to add in hidden on the next one we want to come in and add our hidden class or attribute i should say it's an attribute not a class and then hidden here as well hit save and there we go we're back on it just being the moon so now we need to make it so when we click on them things move around and we also want to be doing this in as accessible as a way as possible so in the next lessons we'll be handling javascript we'll also be jumping back into our html to making some changes in here as we go as well just to make sure that everything is as accessible as possible all right so here we are in a nice blank javascript file and you'll notice one thing i have changed just really quickly is i've created this navigation.js this was just the index.js that we'd started with originally just for development purposes i find it much easier to separate the concerns into separate files and then you can use input when you go to production you can have something minify that all into one uh all into one file if needed or for something like this tabs it is on every page except the home page but if you had this only needed on one page it might be fine just to have it as something that you're only including in that one page so let's go and do that now we'll go to my destination and here we can just copy that script and add this in so this will be set as my tabs.js so it's linked and we can make sure it's working when we're actually going to be using it and now what do we want to do well the first thing is we need to be able to access my tabs list itself so let's go and do that so we can say tab we can select my tab list and i will do my document.queryselector and for this there's you could select the class because we have a class that is available to us but to ensure that somebody who is implementing a tab system say there was another page that got added that needed it to ensure that they're taking we spent all that time setting things up to make sure that things were accessible so if you create your tablets this way making sure that the person's actually used the role when creating it it reinforces that accessibility because the whatever they put in place if they haven't used the proper roles on everything it will be one way to ensure that it doesn't actually work so we sort of make sure that the right steps are being taken and we can hear we've found our tab list and our tabs live in there so just to make it a little bit easier for the browser we can look inside our tab list for our uh for the different tabs and for this i will use a query selector all because we have multiple tabs defined and so in there we can then once again reinforce the accessibility a little bit by coming in and saying that the role is equal to tab and now we are ready to start rocking and rolling uh there we will need to get the images as well but we'll come back to that stage a little bit later and for now in this lesson what i want to be focused on is the keyboard navigation to be able to go between the different tabs that we have here so to do that let's just start with our tab list and add an event listener add event listener on there and normally we'd be listening for clicks it's something very often but in this case i want to listen for a key down and that just means if somebody pushes a key we want something to happen so we can come in with a function and once again using an arrow function there and i am going to come and put e here for you know we could write event as well if you wanted to but i'm going to put e what we want to do is when and in this unlike our navigation it's really important that we track where what the event is happening on so when that key down happens we need information from that so let's just do a console log of e and see what that tells us what's what's the browser getting from that so browser list is not defined tab list oh i put tab lists sorry we'll do tab list here as well it should be a singular list and not multiple lists so i'm going to tab on to moon and now what i'm going to do is just push a key on my keyboard and you can see we're getting a keyboard event so what that e is getting is it saying it's giving us the keyboard event saying an event has just happened and it is a keyboard event which makes sense because we're looking for key down and then with the keyboard event you can actually get a key code so let's go check with that keycode is so we'll select moon again and i can start pushing buttons on my keyboard and you see numbers coming up and these numbers correspond to the key that i'm pushing and i can push basically any key on my keyboard and get the key that is associated with it and the only two that we care about right now are my left key which is 37 and my right key which is 39. so let's go and make sure we don't forget those so i'm going to create two new cons we're going to say const d down left down left is going to be equal to 37 and a const t down right is equal to 39 just because it's going to make our life a little bit easier and as we build everything out here and now we can do different things based on those key down numbers so at this stage there's a few different things that need to be done so we know we can now we're looking for a left key down or a right key down and this just leaves a few different things to be done so if we go back over to our destination and look at how things were done first of all we have this tab index of zero that's here and then a tab index of one negative one on this which means it's not selectable so if ever we push it it means that we need to change this to a negative one and make the new one be an actual one and the easiest way to do that is first by uh just coming in on here and just saying uh when we have the key down we want to change the tab index of the current uh tab to negative one so it doesn't matter which key it is that's something that needs to happen and then we want to say if the right key is pushed move move to the next tab on the right or if the left key is pushed move to the next tab on on the left and so if you do have javascript experience and you're feeling comfortable being able to do all of this there's a few little other things that will have have to happen for this to work also in here so i didn't break this down as much as we could but if you're feeling comfortable and you just want to run with it and see if you can get this working then definitely go for it right now if you're learning javascript you're a little bit not sure what the next steps should be still try it out see what you can do but i will be giving you some hints and push you in the right direction at the start of the next lesson or if you're completely new to javascript or it's something you've just started with and you're feeling a little bit lost right now in the next video we'll try and break things down as much as possible let's focus on this one first even though it's gonna give us some some difficulty but let's say if the e key code is equal to our key down left or our e dot key code is equal to our key down right we want to do something and that's because we want to make sure that we remove or we change the current um we want to be able to change the current button to get rid of the tab index that's on there so let's go and see if this is even going to work let's just say we console log test for now and i'm going to hit save on that and so i'm on the moon that's selected i can push to the right or left and either when i'm pushing it's saying test if i push on any other key nothing is happening so if the key is equal my left or right we're console logging our test which we don't want to do obviously we want to do something else so let's console log and i'm actually going to console log tabs for now which is all of our tabs and hit save on there again and now when i select it you can see that it's coming up with a node list because our query selector all creates a node list and actually if we go and look in the actual console and we have one two three four and that would be my one two three four buttons and if you're newer to javascript uh javascript does start counting at zero so the first button in our node list is number zero then number one then number two so if we want to be able to select just the first one which is the currently selected one we want to select zero so we can just put a zero like that right there and now if we test it and we hit tab and we go and select the moon and i push to the right we can see that we're only getting the first one that's coming up i know it's the first one because if i look here we can actually see that area controls is my moon tab so i know i'm getting the first button the only issue is we actually need to be able to cycle through the buttons as things are changing and so right now our tab focus is equal to zero so i can actually come here and switch this out to say tab focus so if i save now it's gonna be the exact same thing left or right it's giving me the same thing we had before because our tab focus here is our zero that's right here so we know that if we select this one we are getting our first button for now and what we want to do on there is similar to what we did on our navigation when we would change an attribute we could use set attribute to do that and i want to set the attribute of my tab index to be negative one because if you remember when we set all of this up what we did was we said moon is zero because we want people to tab onto it and these ones have the negative one but if i push to the right or the left this one shouldn't be focusable anymore so i'm going to change this to negative one in javascript and then we need to change one of these other ones back over to zero so we'll see how we can do that in a second but i'll put zero back on this just so it is still selectable so in doing that we're enabling it so we can remove the attribute when that key down does happen now what's important is we need to change our tab focus to select the next button and we need to make sure that we're selecting the correct one so to make sure that we're doing that let's say we'll start with the right functionality and then we'll do the same thing but the other way around for the the backwards so here we can say that if our e dot key code is equal to our key down right so if we click to move to the right we want something to happen and the first thing i'm going to say is tab focus plus plus and have focus is the same as actuating tab focus is equal to tab focus plus one so we're saying let's add one to here and then save that number back into here so if this is at zero it becomes one if this is at one we do one plus one is two and then tab focus becomes two and so on and so forth and we can just say that that is a plus plus right there so let's do that and let's console log our tab focus to make sure this is actually working so we'll hit save we'll select my moon and push to the right we get one two three four five oh no we got past five because there's no more tabs to actually go through and actually we can test one more thing before i do anything else if i come back to my page now i can actually not select my moon tab anymore because this has been set to negative one now let's save the page so just make sure everything's refreshed we've selected moon i push to the right and i can start cycling through but then if i push tab again and then i do a shift tab to go backwards it jumps up to my navigation because it can't select my moon anymore because this has a negative one on it so i know this is also working at the stage so we know this is working and our tab focus is going up every time we push to the right so that's a good sign there is one thing that we could go too far that we don't want to happen but for now what we'll do is let's just leave that like that uh there is more to do in here but just to make sure we can go up and down why don't you take what we've created here and see if you can get it to subtract when we go the other way so if i push left on the keyboard it subtracts and makes tab focus go down instead of going up all right so i'll grab that paste it in there and we just want to make sure this is my key down left not my key down right and we have a plus plus we can do a minus minus instead so now we go on my moon push to the right one two three push to the left to one so now by pushing that the keys on here we can cycle through those different numbers and that is super super good and we're actually getting pretty close to being done so let's just take these comments out because i think they you know this is saying what we're doing so with that in place now what we want to do is when we tab into and have moon selected if i push to the right or left i actually want it to switch to i want the focus to switch to that tab i don't want it to change the content that's here yet i want it to be if they they can shift the focus over to the next one and then if they choose that tab then it will change the content that's inside of it and to choose the tab once it's selected you can just push space on the keyboard and it will select that button so when someone pushes left or right i want the focus to move to that next tab and to be able to do that there's two important things one of them is we want the focus to actually move to that tab and we also want to change the tab index on that one as well to set it to zero so if you feel like you have a little idea in your head about how we could accomplish that go ahead and do that now if you'd like a little hint i'm going to give one in the next lesson and if you just want to follow along a little bit with me as well we'll be continuing off here in the next lesson and i'll leave this for you as we have it at the moment all right so if you tried that out i hope that it went well and you were able to get it to work and if you ran into any issues let's see if we can help you with them right now so what we're going to do is choose my tabs with my tab focus here and on here what we do is then say set attribute and it's kind of the opposite of what we did when we went here where we set it to negative one we actually want to set this one to zero which makes it so we can actually select it and three with zero there and what this means is that next tab actually becomes something that can be focused on what it doesn't do is focus that tab immediately and we want to make sure that the focus switches at the same time so to be able to do that we can come in and say tab tab focus and then we can say that we want to set the focus on here and do it just like that we could string these together but doing it like this is nice and clear so i'm going to leave it like this and to test and just double make sure that it's working i'm going to go to my css file and let's just come down and say role is equal to tab focus and we'll say the color is lime green and with that in place make sure this is saved and let's go and take a look if it's working so i should be able to tab onto moon and then push to the right and look at that we've changed and change and we can go back and forth between them now but we do run into a problem and that problem is if i go to the right and then what happens if i push right again now we get an error because there's nothing to set the attribute on it's trying to go to a fifth element here and there is no fifth element and now i've completely broken it and the same problem could happen i'm going to refresh my page get onto my moon we can go that way but then if i go back to my moon and i push to the left we get an error there because there's nothing to go to and that breaks everything so if you know how to fix this you can go ahead and come up with a solution to it now and if not i'll be showing a solution in just a few seconds so what we want to do is if somebody pushes the right and they get all the way to titan and then they push right again there's two options one of them is we just don't let it happen or we cycle back and bring it back to moon and that's what i'm going to do but if you chose one where it just stopped going and then you got to hear and it stopped going that way i think that'd be okay but i just like being able to cycle through things and i just think that's a little bit easier if somebody is using keyboard navigation to move between these um and if it's especially if it's a screen reader and you push to the right and it just does nothing you might be a little bit confused and not know why nothing's happening and again then you'd probably figure it out but let's lower the friction as much as possible here so on the tab focus we want to do a plus plus but we don't want it to go any higher than what it's doing so if we get to the end we want to go back to the start so if tab focus is um we want to say if it's greater than or equal to tabs.length let's let's find out what tabs.length even is before before i say that so we can say tabs so let's say console log tabs.length now anytime i push to the right we see four come up so it's basically just counting how many items we have in this list even though we're starting counting at zero it knows you know it's zero one two three it counts for all four items that are in there so if let's so let's bring back that if statement that i just had is so if tab focus is greater than or equal to tab's length so if it becomes four or bigger we want to do something and as i said i want to cycle it back to moon over here so either if you weren't sure how to do this at all or if you created something that worked but it stopped when it got to titan and you want to try and get it to go back there why don't you see if you can figure out what the solution to this would be to get it to go back to the beginning all right so for that one it's not too tricky we just have to say tab focus is now equal to zero if tab focus happens to get to a number that's too big it just goes back to zero and so let's try that out and i should be able to go to my moon go that way go that way and now fingers crossed it goes back to moon and i can just keep cycling around that way but if i go the other way it breaks again so we need to bring that same type of functionality down to this one so if you've been following up until now because you weren't too sure why don't you go to see if you can reverse this to get it to go the other way around right here all right so i hope you were able to do that and you might have had to think about it a little bit if you especially if you're not used to javascript so i'm going to say the same thing before tab focus but in this case we don't have to be equal to anything we just want to say that if it's less than zero and this is where if you're newer to javascript maybe you got tripped up a little bit when we're going bigger we want to stop when we get to the end of our list but when we're going the other way our first item is zero so if we go lower than zero we want to change our tab focus and so what you might have done or what sometimes people will do in something like this is they'll say tab focus is equal to four i don't want to do that because if i say uh three even it shouldn't be four because we're starting count at zero so zero one two three would be titan uh the issue with that and this is the same reason i use tabs length here instead of just putting in a hardcoded number is because what happens if they end up adding another destination or if we're reusing this on one of the other pages later on we obviously don't want this to cause any issues along the way so that's where we can come here and say tabs dot length this once again will cause a little bit of an issue because if we do that um let's just go look and see what happens where whoops i forgot this so let's go and fix that and go take a look and now if i go there and i go from here and i go to the left it gives me an error because it's trying to find something that doesn't exist yet because tab length is 4 but we have zero one two three right here so if ever you do something like this this does need to be a negative one right there so it's the full length because we have four items but because we start counting at zero we have to subtract one from the counting we were doing so a little bit tricky not so straightforward so if you did get stuck if you were newer to all of this no problem at all now let's go test it out now so we can go this way we knew that was working and now we can go that way as well and we can cycle through in both directions so i'm super happy with that and one thing that we can actually do here just to clean things up a little bit instead of having all of this here is to grab this and take all of it out just like this and i'm going to come over here instead and we're going to say that we're going to have a function called change tab focus and the advantage of doing this is it's just going to help us sort of clean things up and make it a little bit more clear what's actually happening so we can change tab focus and we're saving all of those things that we did and i'll just grab this tab focus and sort of keep it with that function just because they're related this does need to be kept in um this does need to be kept outside this function or just the numbering is going to go off and then what we can do to simplify this even is when we have the key down we want to do something and we want to change the focus uh the tab focus right there so we can actually delete most of this just like that and just say change tab focus just like this so when somebody so we're listening for a key down and when a key down happens we're going to change the tab focus then we want to know what is that we can look down here and find that function and see everything that it's doing right there so let's hit save and just double check that it's still working there we go we can see that we can still cycle through our tabs and everything there is working perfectly fine so this just makes it a little bit easier because we're gonna have another function that's going to activate this so we're going to be able to select the tab and then activate the tab so we're just sort of making it a little bit easier to read so we know what's happening and then if we need to make changes to our tab focus we can do that and if you're comfortable or feeling up for a bit of a challenge in activating the content itself when a tab is clicked on then why don't you go ahead and add that functionality now and if you want to see how i get started with it i'll be doing that at the start of the next lesson all right so i hope that went well for you if you took the challenge on and if you weren't too sure about where to get started with it we're going to do that now and we're going to do something very similar to what we did here but this one will have to be a little bit different because i need to be going onto each individual tab instead of looking at the entire tab list all at once and to do that i'm going to say tabs got four each so we can cycle through and loop through the different tabs that we have and then with this for each that means we can do something with each one of the individual tabs so we're pretty much saying for each thing that's in here we want to run a function i'm putting the word tab here you can call this literally anything you want it to be it's just we have tabs so tabs for each tab that is inside of there we want to do something so i think that you know that's a very common uh naming convention to have your plural here and then the singular one here and then for each one of these we can add our event listener so then we can say tab dot add event listener and in this case we don't want a key down we want to look listen for a click and then if somebody clicks we want to do something and let's just say for now we'll come in with a really quick function to see what even this is doing and i'm just going to say console.log tab itself just so we can see what we're getting so if i come on to moon and i click on it you can see the area controls moon or my mars or my euro bus so when i'm clicking on them it's working interestingly enough if i use my mouse to navigate through here and then i push spacebar it's also going to act as a click so it means that it's also very easy to keyboard and navigate through here which is very good and so there we go that's how this is working and how we can get an event listener on each tab and it knows what we're doing on each of them but we're going to take a similar approach than we did here so for each one of those we can delete all of this and delete that and we can say here that we just want to say change tab panel and that's what our function will be called so before we were changing the tab focus and cycling through our tabs now we're going to be looking at the indiv the entire tab panel that we have there as well and so that's all we're going to be doing and i just need to close that so we're closing everything off and now we actually have to create this tab panel function so let's go all the way down to here and then we can say function we can then come in and create something so there's a few different things we're going to have to do this time and if you weren't too sure where to get started and this sort of pushed you in the right direction you can take off from right here and obviously if you'd like a little bit of help i'm going to keep on going so what we're going to do is a const target button it's equal to e dot target and target and let's see what that even is so console log of my target button and let's go take a look whoops i'm missing a and here i'm just missing uh closing parentheses sorry about that and so now if we go and take a look uh if i click on one of them we are getting our target buttons this is the same console log i was doing before so we're getting the button that we've clicked on or the tab i guess this could actually be target tab would make more sense so there we go we're selecting the our target tab the tab that we've clicked on then the next thing we want to do is get our const target panel target tab and on here what i'm going to do is i get attribute and this is a and if you can think of if you want to go look in the destination and how we set everything up what attribute do we have that is on there that we'd be able to use and find out what panel we want to be getting so remember the target tab we're going to see the button and we have an attribute on the button that is linking it to a panel so i really encourage you if you haven't already built this out on your own to go and dive into that and see if you can find out which attribute that would be so i hope you found it maybe even got that in there and got a little bit more working so let's go look at our destination page and this is here when we have a button we have our area controls the moon tab and that is going to bring us to here and i just realized we actually forgot the role that we needed on these so i'm going to bring those over in a little bit but right now we don't need them yet um so we have our area controls of our moon tab so this is the one that we need at the moment so let's go back to our tabs.js and that means here we can get our area controls let's go and do a console log again console log target panel just like that let's go see if this works if i click on moon moon tab if i click on mars mars tab so we're getting the attribute and it's telling us the name of the panel that we wanted to activate so that is perfect i'll leave the console log there because we're going to keep on console logging stuff as we're going through so now we want to show that selected panel we know which one we want we want to be able to show it and this is where things are actually a little bit tricky because when we're looking at our tabs here and what we're cycling through in this this target panel is really just like a a string we're not actually finding the the piece in there that we need to show and so if we go back to our destination page we look at how this tabs are set up right now we're inside of this div so we're living here right now and we don't actually really want to be living here right now we don't even want to be in the parent we're sort of on this individual button thing here if we jumped up to the parent we'd be over here and what we need to do is move from here to like this bigger to this entire main really and we need to look at everything that's in here on the main so we can do that not too difficultly but it is a little bit strange and if you got this might be something that sort of caught you off guard and you're unsure of how we can find the right article and so we need to do is take a step back to here to do a few things that we're going to do a little bit later on and then we need to do that further step back to be able to get into like the entire parent to be able to do some different manipulations on there so i'm actually going to create another const here so this is going to be const tab container and we want to say target tab and then from here we can say the parent node and that just means select the parent so let's take my tab container and console log that to make sure it's working so if i click on any of these it should show us my entire tab list so tab list tab list tab list it's showing up for each and every one of them so we've select every time we click on that it is identifying which one the parent is but as i said we also need to be able to take a step up from there so we can do one more step here of saying const main container and equal tab container dot parent node parent node and you you might be saying this is a weird way to be like stepping backwards but it's safer to do it this way to then to be doing a specific query selector to try and find the parent because you could be saying well kevin it's always in the you know my parent in this case is my main but you might drop it into a situation where you don't want to be looking in the main you have a different setup maybe it's in an aside all of a sudden and then the main doesn't help or it's in a footer for some reason or it's you know nested in a completely different way where it's three levels deeper so the important thing is you just want to have a div here that's your tab list and then a list of articles all the articles individually placed outside and then as long as these guys are all siblings with each other this is always going to work no matter what situation you're being put into and wherever your plugin playing thing so it just makes it a little bit more robust even though it might seem a little contrived to like step back a little bit so now if we come in when we click we should always get our main in this case but again if you plugged and played this you could use it in different places and it would still work perfectly fine so now that we know which one the main container is we can go in in my main container and do a query selector we want my my query selector to be anything that has the attribute the the query that has this attribute on it now to be able to do that we so we want an attribute selector so we can come in with our query selector with our attribute selector and what we want to do is actually use something called a template literal where we're going to use a set of backticks and inside the backpicks we can then call we're going to do this guy right here our pound symbol and then use this guy right here so we can go in and get our target panel and so we can say target panel and when we do that we want to do something on this target panel which is to remove remove the attribute of which attribute you want to remove the hidden one because that is why we can't see it on the screen so if we do that let's see i'm going to comment this out because we don't need that and let's try this out and see what happens so i'm going to get on to let's go and select europa and push spacebar and it shows up but we have a problem which is our old content is still there so if you want to try and solve that problem right now and i'll be looking at the solution to that in the next lesson so obviously that's a little bit of a disaster where we can hide and overlap content like that because it just doesn't look nice and we can just we can keep on going and get all of them there and we don't want that to happen so before this happens we want to be able to hide the current panel that we're already on and one thing that we're not looking at right now is what the current tab actually is so one way you could solve this is find what the current one is and then add the attribute of hidden on there and another way that simplifies things a little bit is it doesn't really matter which one we're on we can just hide everything and then activate this afterward where we're removing the hidden from the one that we need to see so that just means we can do a little bit less work so to do that we can just say that our main container and on the main container we can then do a query selector and i want to actually we need to find all of them and currently they're articles so i will just come in here and write find every article that is in there and as you've seen before and let's put a bit of space here you've seen before that when we do have a query selector all we can then do and we've just used this recently we can loop through all of them and so let's do that let's say our query selector all every article we can loop through them all so we can run a for each and so for each and we can say rtcol what do we want to do we want to for each article we can then say set at tribute and we can just set a hidden is equal to true on all of them now this is making one really long line so one way that this can actually be made a little bit simpler is you could um break this up over multiple lines so we could actually say main container query selector and then just put a space there and it knows what to do with that um and then even here we could break things up onto multiple lines here if we wanted to as well um i'm gonna leave it just like this though and we're gonna hit save and if we click here you can see now it's actually working now we have a little jumping content that's happening there which is kind of interesting and it's happening because the text here is shorter here and longer here and it's actually causing even the image to move which i'm surprised the image is moving so we'll take a look at that in um once we sort of clean things up because we might have to play with the things a little bit more but also just to check things should still be working at this one as well where we can see our content is um behaving properly and there we go so we can see things are working nicely and we're able to go between the different pieces of content and so again we're saying here that everything is becoming hidden and then we're turning on the one that we wanted instead of having to try and find which one we were doing now the problem with this is this is an article and just like before i was saying that we want this to be able to be used anywhere and if maybe you're doing a tab system that isn't using articles that should be fine we shouldn't be forced to be using articles necessarily because you could be tabbing through other pieces of information that maybe aren't you know and articles not the right co the right semantic code to be using here what i'm going to do is we're going to jump back over into my destination and on each one of the articles i am going to add a role so we can come over here and i'm going write role is equal to tab panel and this and for the rules you can't invent your own and i might have maybe should have mentioned this earlier but since we're here roles are very specific things that come from area so i'm not inventing these these are existing things that i'm using and it adds as i said it adds context to things like divs and so before in the old days this would be a lot more useful now we have our nav our header our main so we don't need to use roles as much as we used to but there are certain things where we do and again they're very they're predefined these aren't things that i'm creating on my own and for each one of these we can come in and add a role of tab panel and last but not least we have this one right there on titan so i've saved that and let's go back to my tabs here and it just means instead of selecting my article for each one we can come in and change this to save for each and then in here we can say the role is equal to and put my tab panel and just make sure that if you have single quotes use double quotes or vice versa and this should be lowercase there we go and then here i can change this to say panel and panel so it's a little bit more consistent so for each tab panel so we get all of my tab panels for and then for each uh panel we go through and set that panel's attribute to hidden so same functionality let's just go and see make sure that i didn't break anything and it looks like it is still working so i'm happy with that we can go through and also do it with our keyboard navigation and i'm happy with that except it seems to have broken something right there with my moon title and so let's go over there and see i probably just took off one too many um closing brackets and that's exactly what it was we just have to make sure that we close that right there and we fixed it good okay uh and now we can cycle through and select the one we want and there we go it's working just like it should uh of course no we have another problem which is our image isn't changing so why don't we look at how we can do that in the next lesson and as usual if you want to take your own stab at it first you can go for it and then i'll be taking a look at it over there in the next lesson and if you did get stuck at all you should be able to take a lot of what we've already done here but to make it work for our images and as i actually said in a previous lesson when we were setting everything up ideally the images would be part of our tab system but because of the way the layout was working um i couldn't actually fit it into like the tab panel and just with the the way the layout broke especially on the destination page but with the tabs like with the image let's get to this screen size with the image being up here then the tabs and that down there i couldn't find a good solution to include the image within the article here so that's why we are separating them out but we should be able to change them so the first thing we'll do is we saw that we need to hide things so as i said we can do things very similar to what we did here to hide the image so why don't we copy that and then just break things down and see how we can use that to also hide the image so my main container query selector all but this time we want to select all of my images or in this case it is the picture element and i was saying before how i didn't like using article up higher for that like it doesn't i like that it could work in an environment where maybe the the article isn't an article it's just a div or it's something or it could be something else and i think that could actually make sense depending on different contexts here if we have an image ideally it would always be a picture element uh if you wanted to make this a little bit more robust you could make it and look for either a picture or an image and only use whatever it comes across we don't run it into any problems but i feel pretty safe saying we're doing a query selector all for the pictures and then we could say for each image and remember this here and i could say like for each pick if we wanted just so it's sort of keeping the same um the same thing or even picture so we're doing we're looking for all the pictures and then for each picture we can then set the attribute of hidden to true and of course if this becomes picture this one will also have to become a picture and let's hit save and go and check that out and ideally that would just mean the image would vanish and it does look at that there we go perfect and then the next thing we need to do is get the new image to come in and now we actually need to do something very similar to how we did this to be able to get the image to work but there is a bit more work than has to be done than is super obvious right now so if you want to give it a try you might run into a few issues along the way that could trip you up a little bit but if you want to give it a try i'd really encourage you to do it but it's not as simple as taking this and switching this out so that's the first thing i'm going to say if you'd like another hint i'm going to give one in a few seconds and then after that hint i'll wait another few seconds before i give the actual solution all right so for this you will need to use as i said something very similar here but the target panel here we could change this to say target image first off though my target panel is something that we've already defined up here so that means we need to define what our target image actually is and to be able to find the image that we want to target we will have to make a few little additions and changes in our html and i'm just going to leave it there that's the one thing i'm going to say just to make sort of a link the same way that we linked our panels to our tabs to our panels we're going to create a different type of link from our tabs to our images i'll leave that hint there for you try it out and again if you get stuck don't feel bad i'll wait a few seconds now to let you take on this challenge and then i'll go through and show you my solution all right so as i said we need to come up here and let's say const target image is going to be equal to and how do we find out so let's let's just keep on going target tab dot get attributes and if you remember area controls goes to an id so we can't use the area control so we do have to use something else here and so let's before we do that let's come back to my destination and just take a look here so here we have my area controls moon tab and then if we look down here that's linking to my id and well an id is a good way to hook into something because you know there's only one of them so we could come up and add the ids to these pictures up here i'm i think that actually makes a lot of sense so i'm going to come into each one of these and i'll add an id to them and i'll see you in just one a second all right so there we go i have a moon image by mars image my europa image and my id of titan image on that picture and now how can we hook into those what can we do and one way that we can do that is on their buttons that we have here we get to add more attributes to here and i'm going to come in with data image and remember data attributes are ones that are your own attribute unlike an area or on like our roles and other things like that this is something you can define and you can do anything you want with it so my moon would just be my moon image and so on and so forth so i'm going to just quickly place this on all of them and then we'll go back into getting everything working all right so all of those data attributes are in place and let's go over to my tabs now and if you can think of how to finish this off if you haven't already done it go ahead and do that and then i'll take over and do it myself so here we can say our get attribute of data image and that means that if we hit save now that should be it look at that our image is also changing so cool and so fun so just like that we've created most of the functionality that we need but there's one more thing that we need to do with all of this which i'll be addressing in the next lesson plus i think we can clean this up a little bit as well and so if we go over back to my destination page and we look at my buttons one thing that you need to remember is we had our area selected here and we're saying this one is currently selected and again this is for assistive technologies to know which tab is currently the active tab and if you remember when we styled things up like we go to my page now and i click on these it's not actually switching which one is the active tab and that's because we used our area selected to help us with that and so we can take that and take advantage of that by actually moving that around so that is how we're going to get this to move from one to the next instead of needing a css class or something like we did on our navigation which we still haven't actually changed but we'll do that when we sort of clean up all the loose ends at the very end and so with this we need to switch it to the active tab so to be able to do this we need to do two things we want to first make sure that the current tab isn't area selected we need to switch that to false and then the new tab that we've selected we want to switch it to true and for this it's actually a little bit simpler because in these we had to do a query selector all to loop through all of them and apply the hidden class uh in this case we don't need to do that it's a little bit easier because we only have one that actually has we only have one tab that currently has the area selected of true on it and whenever we switch there should always only be one so for this instead of looping through all of them to find the one that has the false we don't need to do that you can just find the one that has an area selected of true on it switch it to false and then go through and choose the one that we need to be choosing like sort of like we did down here but there's an easier way to do that as well to add the area selected of true on there so if you want to try that out go ahead again it's a lot simpler than what we did here um so if you can sort of use this for inspiration but simplify things a little bit and so for this we're going to start with my tab container and we just do a query selector on here and i'm doing the tab container rather than the main container both would work but we're only looking at our tabs so i might as well just stick with our tab container i want to select and again there should only be one so i can do my area selected is equal to true on here if ever you do a query selector query selector is always going even if there's a 10 of these that were true it would stop at the first one whereas all will get every possible one so here we can't use a query selector on roll tab panel because it would stop and only get the first one in this case there should only be one and if there were multiple there's a problem so we shouldn't run into any issues but we can say select the one that is true and then set the attribute of area of the area selected to false and that means that it's no longer selected so let's actually try that out and see what happens so if i move over to mars and i select that one there you go it actually removed my selected from there because you can see our css styling got removed from it but now nothing is actually showing up as selected so what we can do and actually i'm just going to break this down onto another line just again to make it a little bit easier to read instead of having these really long um you know stretching off too long doesn't look too fantastic uh and then on this one what we can say is this one's a little bit easier because we want to get my target tab and we're just dealing with the tab itself we're not looking anywhere else so we can just say that my target tab has a we can actually just copy this paste it there and make this true and if we did this properly so when we whatever our target tab is we'll then get the area selected of true to show that is now activated so let's save that and let's click on mars and look at that it moved over and then we can choose europa and it moved over and so on and so forth and if i come through and use my arrows and then use my space bar same thing is still working so super super cool and i'm really happy with that one thing i'm going to do is go to my css and i think we can get rid of my lime green that i had on the focus date and i think the last thing we want to do on here is actually clean this up a little bit um it's getting a little bit long as a function just because there's lots of different things that are happening in here and there's a lot of repeated things that are going on that i think we can sort of simplify and make it into you know less less of what's going on here and simplify things a little bit so we'll look at that one in the next lesson so if we look in here right now when i say we can fix things up like right now this and this are almost the same and this here and this here are almost the same there's very very small differences between them and when you're doing things that are almost the same you can usually make a function out of them they can sort of make things a little bit easier and it's also going to make things a lot easier to read as well and so we're going to do is create a function down here so we're going to say function hide content and we're actually going to have a function of hide content and we're also going to have another one of function show content if something all right we want to do both of these things and so let's grab all of this and then see what we need to do with this to actually abstract it away and there's two important things here we have my main container and we have the content itself that we want to hide away so what i'm going to do is we want to be able to and like ideally this i guess could be plug and play and be used in different places what i'm going to say here is the parent because the because my main container is the parent of this so i'm saying the parent is i'm being able to select the parent so i could do this and use this in different ways and then i'm going to put the content itself here so first i'm selecting the parent and then i'm selecting the content within that parent that i want to be able to hide so that means my anywhere that this main container will become parent and anywhere that says the this will then become and when i'm saying anywhere it's just going to become content and because that's content panel doesn't make much sense so i will put item and item here as well so what that means is any i for we're going to loop through each item that is part of my content and it just abstracts everything that we've written here into what we have right here so then what we can do is we could take all of this and i'll comment it out for now instead of deleting it and see why don't you try and fill this out and see if you can get it to work all right so that would just be coming here and we would just have to write hide content the parent is my main container like that and then comma and my content is the tab panel exactly like i have it right here you can put it just like that and to double check if it's actually really working i'm also going to turn this one off because that's showing the next one i just want things to disappear to get a really visual and if it worked here we go it's hidden it away so that means we can delete this and we can turn this one back on for now so now we can go through and it is functioning so with that done we can also do the same thing for this one right here so here we can come and say hide content and in this case the parent is my main container once again main container and then what i'm trying to hide is my picture element so we can just grab a picture drop a picture in there we should be able to delete all that and once again let's turn this off and if this works the image should just disappear and there we go it is gone amazing so that means that we can turn this one back on so i think that's pretty cool and you saw how i did that to abstract away for hiding content so why don't you take your hand at making that work for the show content all right so i hope that went well for you and we're going to just take the show content which was this guy right here i'm going to copy him paste it and once again we'll just throw a parent here and the content here so the parent so the content that i want to show and that content's parent and then that just means that right here instead of having all this this becomes content and instead of main container i can write parent right there and we can get rid of my square bracket and i think that is good to go so then we can come over to here and instead of all of that we can say show content once again it's on my main container and in this case it will be this one right here paste that in we can delete that and if everything is going well we should also be able to do my show content here my main container and this time around it would be my target image that i want to put there and we can paste that right there and delete that and let's go and take a look everything should still be working fabulous so i'm super happy with that we can see it's all working and the advantage with doing something like this is first we're not repeating basically the same code two times we just have it once here and then we can reuse it as many times as we want and if we needed to use this in other ways and bring it into other functions where we're hiding things or showing things it becomes very easy to do and the main container here can also be switched out so it doesn't have to be something in these very specific circumstances and there we go i'm very happy with that and if ever the markup got changed and we changed a little bit of how the system is here we need to change the main container to something else it becomes fairly easy to do as well or if you need to use this in a different tab system where maybe the main container is different it becomes a little bit more robust it also becomes a little bit easier to read we have our function of change tab panel that's doing the area things right here and it's hiding in my main container my tab panels and then it's showing my target panel which is my target panel up here and then doing the same thing with my images and we can read it and then you want to know how that's working and you can come a little bit further down so it's a little bit less repeated code and a little bit more obvious that we're just hiding and showing and one other thing we could do is actually to come up and fix up things a little bit here just because these if statements we have a lot going on and i think we can make this also a little bit easier and the first thing is we're getting this we're saying if it's a key left or key right we want to do this and then we're saying if it's a key right to do this and then if it's the key left to do this and we have this going on as well and really all of these things we only want to be happening if it's a key left or key right and if not we can ignore all of this code here and it doesn't have to check those statements again so we can actually bring all of that up inside of here and let's just fix the formatting on this a little bit we can tab all that over tab all of this over like that and so now we're saying if it's a key left or key right we want to change the focus and then we can check was it out of these two was it actually a key right if not we can keep on going was it actually a key left if not we can keep on going and then even with this one we could do is bring this up and do an else if if it's a key down then we do this else if it's a cue left we can do this and technically you could even bring all of this off and just make it a complete like else statement so if it's a key right else do this one because we're checking is it cue right we're looking for either a key left or a key right and then is it a key right yes then do this else do that one because the only other option is a key left i'm personally going to leave it like this because i think it's a little bit if somewhere someone were to come into this code right away i think it's a little bit more clear that we're saying is it key right do this is it key left do this so even though it accomplishes the same thing with more code it's also more obvious what's happening so i don't think that's a bad thing and then as long as this was true we still want to run through this so it's all included in this one if statement instead of having a whole bunch of different ones so this entire block here won't be evaluated unless these are true instead of having to say is it a key left and then it's going to check again was it a key left so this just simplifies things a little bit and it won't have to check multiple things every time a key is pushed so let's hit save and let's just go check that's still working my keyboard navigation is still working and so with that we are good to go and we're ready to move on to the crew page okay so we finished that other tab system and now we have to come on to this crew page and set this one up and while things look a little bit different because we have these dots down here instead of it being that other system it's actually going to be super super similar to do and we don't have to reinvent the wheel which is obviously really nice and so what we're going to do is we're going to drop down to here and the first thing we need to do is on this i'm going to do it really fast let's rename this just to my regular crew.html because everything will be living in that one page and then you saw how i set everything up on the previous one so we do need to make a few changes to how this is set up right here and we also need to come through and sort of build this system out a little bit more so i'm just going to go ahead and let you tackle all of that and build everything out if you're not too sure about some of those roles or some of those other things you can refer back to when i set all of those up in the previous lessons or just the finished code right from the last one just to see if you're on the right page and i'm not going to give the solution in this one because i really do want you to tackle this in the next one i will do it but i will be moving a little bit faster but i really think you have everything you need to be able to at least get the stage set if not add the functionality as well because there's not too much we need to do just don't forget to link the javascript file because it's not currently linked to this one so yeah that's it for now i'm going to see you in the next one with my solution all right so for my solution i'm doing this so the first thing to do is actually give this an id of commander tab uh commander tab and with that what i can do is come over to my button right away and say that my area controls equals my commander tab so we've linked those two together like that and i'll copy and paste this onto these other buttons really fast and there we go we have a link between those and once again the other thing that we needed to do to link things together was to come on and create a data image and we'll do that really fast once again commander image and i'll change all of the other ones and i'll see you in just a second and so i'll start off this just by putting my id down here on my image as well before i forget to do that so that one was my commander image and we'll bring in the rest of the content after but i want to have everything in place so when i copy and paste i don't i can just make these little changes and i won't forget anything along the way uh the next thing that's really important on here is on this div itself and give this a rule of tab list as we that was something that was really really important and if you remember with that it's sort of useful to have a title that goes along with it so we can give that the title by giving that an area label and that will be my crew member list and so again the area label here means that when it gets to this even though there's no actual heading on here there's no you know that we don't have an h2 in h3 or something like that but the area label here will be read out crew member list and then we have these buttons and once again we have these sr only is where it's gonna be crew member list the commander the mission specialist the pilot the crew engineer even though when we go and look at this page none of that is actually here we don't see that but visually we can click through and do it but for a screen reader it just gives them a lot more context to be able to work now we added i added the role of tab list there so i'm going to come on to each one of these buttons and also add in the role that i need on here which is just the role of tab so role is equal to tab and that also means down here i will give this a roll of tab panel and there we go those are all in place now another thing that you might remember from our button list here that we were creating last time is we want these all to have tab indexes on them so this first one is selected so my tab index on this one will be equal to zero and then on all of my other buttons we want to come in and give each one of those ones a tab index is equal to negative one to negative one so it can't actually be selected and we're gonna have to use our keyboard navigation to go between the different tabs not only do we need to do that but we also need to give this a tab index a tab index of zero because it's important that we can then jump from the the different tab that we're on and then when we hit tab it's actually going to select the content that we have here um and for a screen reader it's gonna just help for to make it so they can actually access and read the content that's there without having to go through each tab so they get the tab they want they hit tab they select it then they can push tab and get the content related to the one that they've just selected again if you're making changes to tab indexes be very very careful and make sure there's a very good reason to be doing it the next thing i'm going to do is just bring in all of my other articles and images so i'll fast forward as i do that all right so with all that in place i make sure that all of these have the id that is linked with what i'd set up above same with these all the ids that are the right ids that we need so everything is properly linked with our buttons that are here the one issue is everything is overlapping so we do don't forget that we need the hidden attribute on every single one of these except for the very first one because we want to make sure that we have some content on the screen before it all starts so we know throw our head in there and then we can come down onto our pictures here as well and throw the hidden on there and what's beautiful about all that is even though it's so visually different we're here it's this tab these like dot systems whereas that other page was very different in how it looked where we had like a real tab system going on if we come up to here and we throw on our tabs.js and i hit save it all went well there we go look at that it's working we don't have to do anything else it's it's just functioning um there are a few little things where you can see the page is actually jumping and changing in height because of the different images that are coming in and because of how the the whole system is is really set up and so that could be a little thing that throws people off a little bit especially this image seems much taller than the other ones so it is um throwing a little bit of a wrench in the works on that but if you notice how we set all this up on this is very similar to we spent a lot of time on our design system and it took us quite a while to set up and then we got to the home page and we had more layout stuff to do but things started coming together pretty fast as we were doing this one and then from there we went and started styling up our destination page and that one the styling on it went quite a bit faster and there was a few little things on getting stuff where we needed to but it came together pretty quickly and then finally we made it on over to our crew page and that one the styling of it went even faster than that because so much was already done and in place and now even though visually things are very different they are coming together so quickly with the javascript because we've heard it once and we just need to set everything up properly and it's working exactly like we need it to here so in the next few lessons i'm going to just address on cleaning up some of the loose ends making sure our pages are linked together fixing up any weird things that might be happening and making sure everything is good and then i'll talk to you a little bit about the final page all right so i thought we had a little bit of an issue with the linking of the pages but it's actually working since we changed the names before but there is the issue if it's not highlighting the right page and this one here is not actually going anywhere so to me explorer should go to destination so let's start there just by making sure that my do do do explore we can change this over to my destination.html um the next thing we want to do is make sure that when we're going to all these different pages like i said that white line is actually going with us and with how i've set things up there's no dynamic way to do it um i often get asked about things like this it's really just where this class is now there's dynamic ways of doing it if you're using a javascript framework maybe you've already set things up so it's working by itself and it can handle that without you having to do any work or even a static site generator can handle that but i did this just with static html and css so that just does mean when i go to my destination page i do need to find my index take the active class off of here and just stick it on right there where i need it there so now if we go and take a look it's going to be on the destination and it follows me from page to page and now we want the same thing for the crew page so let's jump on over there i would give this to you as a challenge but it's not really much of a challenge at this point so i'll do it without you needing to take over for me and there we go that is working and so now if we go over to my crew page we can see that it is working over there as well so i think that's really cool i'm really happy with that um one of the things that is bugging me a little bit is here how uh the text difference here is actually causing the actually it depends on the screen size because here it's not doing it we go a little bit bigger though the mars text is shorter than this one and it's it's not actually bothering me that the text is different because whatever uh so that's going to happen and it doesn't really matter but what bothers me is that the image is actually moving a little bit and i believe the reason that's happening is because of the alignment on the picture that we have here so let's go in into my css.index over here and we're going to go and find that image and this one is really on the destination page is the only one that i'm really worried about where this is going to happen so we have our destination grid container with our picture so we're selecting it there and for this if you want to think of a line of css that might fix this go ahead and do it right now and then i'll look at a solution in just a second so we are on a grid and with grid items are becoming stretched by default and the way the picture works is the pictures and so what i think all we need to do actually here is an align uh self of start and i'm pretty sure if we do that and they're all lined up at the start now the image doesn't jump even if the content becomes shorter and it was just an issue of the grid getting too short and because the grid was short because the grid here has less lines like this was stretching before and sort of trying to fit into that space and now it just lines up across the top on all the pages so we don't get that jumping on we can shrink our page down everything's looking good we can still use our tab system and everything's working fine we can keep on going down and then we get to the mobile sizes where everything is still working so i think that looks pretty awesome one thing you might notice here is if we're at a smaller screen size and it's going to be when it's really on the border so maybe right around here notice how here between mars and the moon it does jump a little bit because there's with a scroll bar and without a scroll bar if that drives you nuts and you want to try and fix that there is a new css property that has come out which enables pages even when there is no scroll bar to have some space that is available on the sides to try and prevent that type of content jumping from going on and it's called scroll bar gutter so actually it's just right here really fast it would be on your html um so it's called so it's a scroll bar gutter like that that's the name of the property i'd encourage you to look it up and play with it and see if you can get that to solve this but this is one of those types of things with dynamic content that can happen where some pages are longer and some are shorter and the scroll bar gutter right now does not have wide browser support um it wouldn't break anything if you added it just because browsers that do support it which is chrome it would work and then browsers that don't support it it just wouldn't work so they would get the old they would just get this experience anyway so it's not like it would just all of a sudden cause the site to break so if you want to look into scroll bar gutter you could do that the only other thing though that i do want to fix is on this one with the image that gets way too long which is this one and it's kind of interesting why that's happening and it just has to come down to the native sizes of these images being a little bit different and ideally the grid would actually be a little bit different because in front end mentor you'll notice here he has a lot less space he has a lot less space than say these other guys so she's actually pushed off a little bit more he's taking up less space and this is taking up way more than 50 of my grid like i have it set up now like on these other ones that doesn't really work if you wanted to you could actually come up with a unique grid for each one that where the grid spacing becomes a little bit different for this to work or you might be able to find other solutions including the potential of overlapping content with the name where the name would be allowed to sort of overlap but i think you might run into more problems than that could help but one thing we can definitely do for something like this is on our another destination page we want to find our crew grid and we could redefine what the grid was but actually you want to be really careful with that if you want to if we want to make that change just because we'd want to first go into our media query so let's find our original one here where we're setting up this grid of having these different columns i'm going to copy that same one and make sure that i'm changing it based on this and it's not my destination but it's going to be my crew and i could come in and change it here and instead of a repeat and having the same thing for both of them so we get rid of this in the middle so we can come in with a a min max here and we'll do a second one min max here and for these they'll both start with zero just like we had before but before we had them both they were adding up to 60 and we did a 30 30 we can do a 40 ram on that side and a 20 ram on this side so we're just giving this side a lot less space this one more space and i do think that's actually more true to what the design was in the beginning anyway and so with that our image has less room and our text has more room so we have got the bonus of the names actually not breaking and going at large screen sizes at least not breaking and going all the way across now some of the images are getting a little bit tiny so i do have a nice little thing here but you'll also notice that the text doesn't actually have enough room and its alignment is a little bit off so the same way that we did a justify items and an align content start here on our destination we could use the same justify item start over on this one here as well so right there we can throw that and that would fix that issue and that means we wouldn't need this one anymore so i'll delete that from there and we can go take a look and now we see everything is lined up nice and square on that side but the image is definitely looking like it's a little bit too small because it is smaller maybe we'd be comfortable bringing this back on and maybe we wouldn't run into those issues at larger screen sizes so i'll throw that back on just in case we end up wanting it but the image definitely looks like it's getting too small so one thing we could do is maybe this could be like a 23 and this could be a 37 or you could find a nice balance between them that would give you enough space for your text but there is one more thing that'd be a little bit fun and it's something that you could potentially use when you get to your next pages because you can see this guy is not looking too bad maybe he could be a little bit bigger and i will do two things because they're a little bit smaller than i thought they would be i'm going to take this crew one off from here and we'll just leave this one by itself and then i'll actually we'll copy that whole thing and right here it will work so here we can just do the max width of 100 and that will help uh increase it a little bit so we're working with a little bit more space and the destination i think the 90 worked really well but here i think you can agree that this is working better but they're still they're still not as big maybe as you'd want them to be so i am going to show you and again this is being limited by the width that they have available to them so this is something you could use on the final page as well and actually you'd have to use it on the final page so it's a little bit of a hint that on here we could say the grid column even though it's on the grid area image we can sort of cheat a little bit and say there's a span too and what that means is it's allowed to break into the right side and it's allowed to break into that final column that we had and by doing that the images are allowed to get a little bit bigger than they were before and things start coming together a little bit nicer and i think that looks a little bit better um maybe then we'd actually limit this down back down to an 80 or a 90. pop that back down to the 90 that we had but you could find like a nice balance to try and get it on and i don't think you'd ever really run into any issues at larger screen sizes uh that that could pop up i think that would actually work pretty well just letting it bleed off into the right side a little bit and so i'm actually pretty happy with that i think it's a nice little way we can cheat a little bit and it's definitely something we could use when we do our technology page which i'll be talking about in the next lesson all right so it's time for the technology page which is an interesting page there's a few little differences with how the layout is working we have a different type of component to do the the tab system that we had before obviously we have these images that bleed out which i sort of talked about a little bit in the last lesson and of course we have the different ways of laying it all out through the different screen sizes but very importantly you are on your own for this one i am not holding your hand i'm not walking you through the process anymore while there are a few differences with certain things that we just saw and there's some new parts that you'll have to build out outer style you have learned everything you need to get this done i've been trying to challenge you along the way up until now as much as possible a lot of you i'm sure we're killing it and doing those challenges whether it was the really big things or just the little questions i had here or there but at one point i do need to let go and let you figure things out on your own if you really want to reinforce everything you've learned and whether you've been doing all those little challenges take all of what you've learned and apply it now and if you haven't been doing them it's even doubly important because watching something and understanding it is very different from being able to apply it yourself so i really hope you enjoyed following along with me up until now i've really enjoyed it but now it is your turn to go and make those pages happen once you finish the page make sure that you post it and let us know about it if you're posting over on twitter make sure you mention me scrimba and frontend mentor to show us how you finish things up i really hope that you've enjoyed this course i've really enjoyed giving it i really enjoyed building out this layout it was a lot of fun and so i'm looking forward to seeing how you finish it up and the improvements you can make to it from where i've left you right here