all right we're live hello everyone hi welcome to another episode of connecting the dots today on the show i have tara z manixek thank you so much for hanging out with us today uh so tara i'm very happy to be here i mean i and i'm just like i'm pumped because i i have joked many times that you are like the most interesting person in tech um because it seems like every time i mention anything like i'll be like oh yeah i'm working on like a part of my kitchen you're like oh yeah back when i was a plumber um and so you just you kind of have like this incredibly diverse background in terms of where you what you've done for jobs what you've done for work um so i guess to start maybe we can we can um tee it off with where you are now what's your current role i am um at this company called netlify i'm not sure if you've heard of it uh nice to meet you by the way i am on the the dx team uh mostly working with angular and then a bunch of really fun internal products like uh jam stack explorers so that's where i currently am absolutely um and so this uh to me this is like this is the perfect show for you because i feel like sorry hold on let me just take a second to congratulate myself on the brilliance of my name is jason i made this show and it's perfect let me tell you more but to so let me qualify that what i mean by this is that this show is actually um it's the result of a conversation that you and i had which was um we were talking about how the skills that we build when we work in different jobs translate so well into tech in really unexpected ways and so in the past you know you and i have both had non nontraditional like we're not you you don't have a cs degree right i do you do oh my god you get more and more interesting okay all right well maybe i should let you tell your own story then [Laughter] isn't that isn't that ridiculous though i mean it's uh it's it's funny because it's actually from the harvard extension school uh and i i got it because i met so i'm a business school dropout i tried to go to business school i failed so miserably that they were because i was like oh these business classes aren't fun i'm just going to go to my math classes and ceramics and classical guitar classes and they're like yeah you can't do that and i was like oh um so i dropped out of there and then ended up working um at harvard and so i uh got they have this tap program tuition assistance program so you can take courses for twenty dollars at their extension school as long as you can like get in and uh i just kept being like i started with there's like a physical and screen based computing class that was actually through mit uh but we were allowed to take it and i liked it so much i they used processing with java it was when processing was like kind of new ish so it was only used with java and so i was like oh i want to be better at making silly designs i should learn java and so that's how i learned java and from there they were like well you could be better at this if you learn data structures and i was like okay in order to make my really stupid silly electronics video games i am going to continue to learn data structures and it just went from there and eventually i had a cs degree jeez yeah okay uh every time we talk i learned something new um but so uh so what are some of the other jobs that you've held uh in addition to being a coder so i was actually looking back and i haven't had a break from the okay so i've started working in 1995 and the longest break i've ever had without a job was the maternity leave that i took about two years ago so and sometimes i've like overlapped jobs um and it's funny because thinking about like my first office job was when i sound so ridiculous when i was 12 years old um because you can't work until you're 14 in ohio but i or is is i don't know is that everywhere i think it's different from state to state okay so i but i had a taste of it because i had started my own wagon business obviously um and which first i was which i took pumpkin rolls around to business districts and sold them inside of the little you know where it's like a brick log building and there's like 18 businesses in there so i did that um and so you know doortodoor pumpkin roll sales as one does when they're that old uh and then i painted curbs and stuff and this was all because i wanted to buy a flute okay so i so at that point i was just like learned okay i need money to get things therefore i like sell goods um and then from there i was just like you know this isn't enough i need more money [Laughter] but then so my grandmother was like well come to barberlin foods and you can be my payroll assistant you really like math so um you can do payroll for everybody and the funniest thing is like i learned really good people skills there because my grandma is such a little schmoozer uh she used to be yeah so she like did she did a lot of office management work for a while and then when she retired she became a bartender at the vfw as grandmas do um and so she was like the thing that you have to understand is people just want you to listen to them if you listen to them and you genuinely find something to care about like of them then they'll they'll warm up to you faster and they'll give you the better benefit of the doubt um and it's funny because she's uh known as being quite a like cold sarcastic woman and she was doing that to her own advantage but when i learned that i learned it as such a like real genuine trait that i really have when i meet people i want to hear more about them and then i just like even if they're people that aren't the most likable people i always try to find at least one thing that i find uh either like very intriguing or it's something i like about them and always try to keep that in mind at the forefront uh which has helped me a lot in the tech industry i can imagine um so so that's fascinating so that was like that takes us up to what you were 13. [Laughter] so uh this is this is a fivehour episode right um but so so along the way you you so you started out you you had you know your your pumpkin roll business um you you work doing the books and then you you've like you ended up at some point doing like you were driving a forklift right so that's actually like 13 years later or is that right maybe maybe like 12 or something um so i've had a lot of uh retail experience and um through a lot of different uh companies like like looking through the list it's been like a lot of like food and retail things uh i worked at subway target texas roadhouse panera bridge chipotle pacific summer urban outfitters and bigs this is the one where i was doing the forklift because i was working in um the garden center okay so i would get all of the pallets uh back and forth of mulch and stone and everything but i think like one of the things that i learned the most from those jobs that has helped me a lot is like from the retail jobs in particular is that uh customer service and common sense go hand in hand and i think that uh there you just have to have the only emotion that you should have in customer service is empathy because if you get angry if you if you just say if you feel attacked if you get defensive that's going to take you nowhere fast and it's funny because i think like especially with working with open source software that has really helped me a ton because it's so easy for me to get defensive about my code but when somebody is saying like this isn't working for me and why did you write it this way and i have to remember how frustrated i get when i use libraries and i say why did they do it this way this does not work this api is so it's bonkers it's backwards whatever um and so when i see things coming my way i know i don't want an author of a plugin to be like i'm not gonna help you because uh you know you're a jerk or you know there's a and it's like so it's like i don't want to be a jerk and i don't want to be a jerk to you and there's been multiple times um especially in issues and stuff where people are like your product sucks this is stupid what are you doing this is awful and so i just come back and i think about it and i try it like but keep my best to like um take myself out of that situation like like i did when i was like doing target returns and they're like your stupid store said that i had to bring this back and i'm like okay i see this is really frustrating because you need this thing to work and you know i just you know i'm here oneonone with you how can we make this work and just drop all that drama part of it to see if we can get to a solution and that like writing back to people's angry issues like that i've had so many times where people come back and they go oh you know i was really upset sorry for the things that i said yeah here's my problem here's the code what can we do yeah but that's hard there's a lot of emotion in code we write and and like what you're talking about too it um it kind of reminds me of like you know they say that uh like the laws of thermodynamics like every every action has an equal and opposite reaction right what i've found though is that in human interactions that's not true human interactions tend to mirror each other which is why when somebody comes at you hard and you get defensive if you go back it will get really contentious but if somebody comes at you hard and you don't you you like just let the the anger wash over you and you just respond as measured as you can and and like nothing comes back so it's really hard for them to stay mad like it's really hard you know what i mean it's that whole idea of like it's so hard to like attack somebody who's peaceful like peaceful resistance kind of thing like so if somebody's coming at you you know and you just say i understand and i want to help uh no you don't know the person who's coming at you um oh sorry i think i had a little delay you're fine you're back okay bye am i here um so i was just gonna say that i think we talk about this or we don't talk about this enough but just like understanding that our jobs aren't our whole lives and so when people come at you angry you don't know where they're coming from and so i did americorps national civilian community court and we did katrina disaster relief so right right after all the floods we went down and we like gutted houses um and you know worked at different volunteer bases and basically like just entrenched ourselves in these areas that were just demolished and uh you had it was hard to because you would get so desensitized from living in these areas it was hard to remember what people were going through so we would have like i remember having a situation where i was uh in one of the volunteer camps and this guy came in and he was like just went off on us uh because our truck was parked in front of his driveway and we didn't even know anybody was there so we were just like huh and he was screaming and i don't do well with people screaming uh but i had at first we were all just like what how dare you like sorry that's my dog um but then you realize like oh yeah this guy doesn't have a place to live anymore he's coming home to his house being completely and you can't even get in the driveway now and so i think about that kind of mindset when you know people come at you already at a level 10 and you're just like dude all it was is that you know that part of the module needed installed like why are you yelling already and then you're just like oh yeah your boss is yelling at you to get this done immediately and their boss is yelling at them and like there's a whole trickle down and you just know that yelling is happening and you should be yelling too and i also think like in open source there's this this tendency where like in the early days of open source it's really fun because when you're a maintainer everybody who's coming to your library is they're voluntarily there they want to try something out there they're there to learn and to like be part of a community later as something gets popular like you know if you're a webpack maintainer right now most of the people in the webpack issues they're not there because they wanted to learn webpack they're there because they inherited a project and they're on a deadline and something is broken and they don't understand it and they didn't write this code to begin with and they're furious that they have to deal with this problem because they don't feel like it should be their problem and unfortunately you as the maintainer are the person standing right in front of them when they're having this realization and uh i think yeah i mean i i love i love that way of framing it though because if you think about the fact that people don't exist in a vacuum you know if you if you assume that people exist when they're outside of your your field of view they've got whole stories they've got whole lives going on and and the thing that's happening to you right now has very little to do with you if this isn't somebody you know exactly exactly and it's funny because you know like they say software is easy people are hard and i think i think that a lot that a lot that i learned from getting my cs degree is um and i i so i was really lucky my mom taught electronics at the local community college and so when i would get out of school i would go to her cl like her electronics lab and just fiddle around with breadboards and stuff so i got taught the mindset of logical thinking uh thanks to that really uh analog procedure of like this thing is feeding this thing and it can only get these instructions it can only be on or off and where is that on or off going and who is it telling us what's on and off so i was really lucky to have that kind of like logical mindset pretty early on and then that got really reinforced once i started going through uh all my cs courses and it's kind of like which i think you can learn from not even just classes but doing uh development work in general um but i definitely saw when the switch flipped you know when you're like you're making dinner after coating something out and you're like pot turn boil water boil when water boils pasta [Laughter] what's happened to my brain and it's just like i remember just thinking of like my dog's different methods and i was just like oh what's happening but that is such a that's a factor in a development job the human communication that has to go to make a functioning team and a functioning product is something that like you don't have to have 38 jobs like i have had but it definitely helps to have such a mixture of one like working or dealing with both people that you need to manage people that are on your all people that you need to manage people that are on your team and people that are managing you and i think i learned a ton from the different kinds of jobs i had and the different responsibilities i had in each of those jobs um so i i'm gonna make one quick comment which is that when you when you're talking about your your uh like writing the code for making pasta the italians in chat are very grateful that you said when water then pasta which i also uh well done um but uh another question so there was a question earlier you talked about getting your css your cs degree and when you were learning data structures and pranav asks uh how is your experience learning data structures and and like what of that do you find has been important in your in your roles or in your career i guess it's funny because it was definitely a lot of you know now i didn't it wasn't that long ago that i went to school but now they have so many hilarious resources like uh like bubble sort square dancing videos and i saw that and i'm like oh yeah that would make i had a real i had a really great teacher um and and so he did a lot of things like the whole tearing of the notebook uh to kind of show you different kinds of ways to like sort uh that class was by far one of my hardest because i had only done like intro to java before then so that like logical mindset wasn't completely ingrained in me it's funny to think how i use it now because i'm not anytime i need to do a data structure or some kind of like principle along those lines i go back to reference constantly so there's nothing in my head that i'm yeah then i'm this like oh well it's obviously this because of that um that's cassidy cassidy is the one that does that um it's cassidy williams that we're referring to obviously um but uh i do i do have that mindset though of like yeah we're we're setting um we have to have these different markers to understand what is the best process to make this faster and like we were talking about this in um on remotely interesting a podcast we do uh skype weird guy jason's on there too and we talked about rendering in this one episode and it's funny because in everything we have these markers so like we have uh like you know time to first contentful paint and like time like we're all we're marking everything so that we have a system to understand what how it's going to be better for our users and so it's more that i'm not bringing any data structures with me on a daily basis but it's more that mindset of like our there is an algorithm to figure out how to make this best for our users and that mentality has definitely stuck through and through the rest of that class though i mean i so i i don't have a cs degree but what i what i have found about things like algorithms data structures that type of study is i very rarely am looking at that information and saying that's exactly what i'm going to do to solve this problem but what i what i found is that having that around in the back of my mind when i look at a problem i at least have a list of things to like thumb through and go is that kind of like this is that kind of like this and then i can go i at least know what to google right and i think that's been probably the most beneficial part of any of that more academic learning for me has been it it gives me vocabulary that lets me google more effectively yeah yeah which is i mean it's it's hilarious to me when i try to tell people just how much googling is part of our job like and it's funny because that's another one that i've learned through so many different jobs is to ask for help not just like searching things on the web but it's like it takes a lot of humility to one admit you did something wrong and then on top of it ask for help um but it's just it's totally clutch like you nobody's perfect and uh if you are turns out you're wrong so uh but but it's definitely like through the years i've definitely had to like tell myself remind myself that it's just like okay you even about things that don't have like a specific right answer just knowing that you may think this is the best way to go about doing something but you're not working in a silo so you have to like i remember the first time our uh our the vp of development experience at netlify sarah drazner said to disagree and commit i just remember being like oh what and then it's just like oh yeah because team like company business it's like yeah it makes sense like you've got to do that in your daily life i've also been in a relationship for like too long what 12 years or something oh 14. um and i mean half at least three quarters of the relationship is disagreeing commit so you learn from everywhere in your life yeah well and actually i think that's kind of a so you mentioned one thing that i think is really hard to start because especially when you're new in your career the idea of of admitting that you don't know something that can feel like it's gonna be the giveaway that gets you like thrown out you know it's like oh they're gonna realize that i don't know what i'm doing for for you how like how was that experience and like how did what experiences did you have that helped you overcome that fear of saying like hey i don't know how to do this who who can help me i've always liked to learn um and having having the having the craving to learn has over compensated that whole pride thing um and but it was definitely something that i learned i realized that i made a better uh team member in in the develop in the dev world because i had uh i had learned a lot so much from all the other jobs that i've been on like i didn't know how to like um so i like renovated a house recently and like i didn't know the proper way to like cut and install drywall how to do plumbing how the different angles matter if you actually want your poop to go down um so so it's definitely a lot of being like there's something like i had the the overseer of of doing a lot of the construction work uh i i worked with habitat for humanity for a little while and we actually built houses on the um on the uh mall in dc okay so it was like this really cool event where they had 12 houses and we built them on the mall and then they got on trucks and moved them out to different places around like anacostia and the area that was so cool and uh the foreman on the project was so mean and you don't really expect it for like these programs that are like let's all work together um and he just expected you to know everything and so we would be putting things together and i'm like i don't know how to do this but the last thing you want to go is like go up to the bully and be like i'm dumb because he just was like what do you mean you don't know how to frame a house and i'm like i'm i don't know i also had like 16 jello shots last night so let's work together um but i feel like when when you have that experience of just like okay this is the boss right like the boss in a video game but like his defense is like being a jerk to you and then how you're gonna or like his attack is being a jerk to you and then your defense is just like taking it and knowing that he has not doesn't know anything about you he can't really change your life in any horrible way so the only thing that can happen here is that i can just let those things slide off me and learn what i need to learn and that's an extreme situation like hopefully not a lot of people are like having insults thrown at them as they're trying to hammer two by fours together but uh it made me even be better at like the first dev job i had um i kind i like i knew what i was doing but i had always worked with uh i was like switching to do more back end work and i was also unfamiliar with infrastructure and so it would look like i knew what i was doing so my managers would be like yeah that's right just keep doing what you're doing i'm like it looks like i know what i'm doing but i don't so explain this to me on this selection and this section is if i don't know what i'm doing right and i felt like that was a really good thing that i'm glad i had in my toolbox um to even say like yeah sure you think i'm doing it right but i'm not i i don't know what i'm doing um because that's hard it's hard one to just say you don't know what you're doing and especially when you're new and you're like they could they just brought me on like they could get rid of me if they wanted but it's also it's really good to remember i'm gonna take a breath talking after this point it's good to remember with both um like many things in life but development and definitely speaking like doing talks especially technical talks people don't want to see you fail like 97.63 people don't want to see you fail it's extremely awkward as an audience member it's very uh it's not it's not what managers want to see so they're rooting for you when it comes down to it so if they can find a way to help you succeed as a manager the audience can't if they can find a way to help you succeed as one of their employees that's what they want to do so if you can give them what they need to let them know what you need to succeed right like it's making everybody happier nobody yeah nobody wants to see you fail so yeah well and really like if somebody hired you it's gonna look really bad on them if the person they hired is like not equipped to do the job so it's in there like even just selfishly it's in your manager your your employer's best interest to train you so you know and if they do want to see you fail you don't want to work there yeah fair enough right um but so so we've been kind of talking like this is this is a lot of abstract stuff that i think is really really helpful but um for a lot of folks watching this stream um they're in free code camp and a lot of those folks are looking for their first role so when you are like i know that you do a decent amount of mentorship i know that you work with a lot of communities um you you've been in the industry for a while so i don't i mean i have a hard time remembering how i got my first role outside of like i did a thing and then i had a job but um but what advice do you have like the industry is flooded right now there are a lot of people looking for their first job there's also a little bit of constriction due to the pandemic companies are looking for it seems like everybody's only hiring senior devs or they're saying entry level but they're putting three years experience into the into the job description so for someone who's looking for that first break for someone who is looking to stand out in a large sea of applicants for a very limited number of entry level roles what advice do you have that can help somebody you know get that first chance i think the biggest thing is um people are afraid to put their work on get to have it somewhere online because they're like well i don't really know what i'm doing i think so i don't want to you know like have have evidence online that i did something wrong but like if you look at jason's old code he did tons of things wrong absolutely and jason's brilliant so well it's like you know case study right there um but i think uh it's especially for people who are i work with a lot of women in tech um organizations and just like actual women who are doing development and especially when i was i started at the branch of women who code in cincinnati and the biggest thing i got was a lot of people reentering the field and it's it's daunting to go in and talk to people who are also looking at applicants that are coming straight out of cs courses and they're young and they've you know we've been working with computers since they were three months old and you know it's like well i've been out of the industry you know do i know what i'm doing and one of your kindest audiences are the people who aren't paying you so especially right now when brick and mortars are really hurting and there's an opportunity for a lot of companies to go online but they can't afford it they need that help look into those projects even if it's like working with one person from your community and saying okay i'm gonna have to take the knowledge that i've learned through boot camps through doing things on my own and uh put that into an actual product because one you're going to learn so much from that not only just how hard customers are work are to work with but also like um you know how do you want to set up your infrastructure you know how are you going to have it so that people can use it on mobile like there are so many things that you're going to learn from just doing one actual small project like i do a side project with uh the uh i cannot get this acronym right um but it's basically the asian american association of cincinnati and so we've put a site together um actually using like gatsby and netlify and strappy to uh basically get all of these different asian business owners um onto one site it's uh asianati uh dot com and that way uh it's hard for restaurants right now to just like you're not gonna walk by a restaurant and be like oh i'm gonna go in there and eat because we're all inside in front of our team our tv is watching queen's gambit and so like this gives them a way to be in front of an audience um all in one central location but i'm doing it for free uh but i'm learning so much uh and and then you have an actual physical working thing that you can show employers so if you know you're more of an introvert or like like me you hate saying anything uh good about yourself to anybody but yourself then it's nice because you can just let your work speak for you and uh i i find that i find it really rewarding because you also if you can find a nonprofit like that you get to work with a team but also um if you're doing it by yourself just to help out a company uh one it's great you help out somebody in your neighborhood or a small business and two you can make all the decisions yourself which is also really fun yeah well and the other thing that that does when you work with nonprofits or groups like that is you you start building a network um because i know like for me i i got my first job in montana and in montana there are no jobs like it's not not well there are now i guess but at the time there just wasn't a lot of technology companies there and i hadn't been introduced to the idea of remote work so i was like okay well i gotta find a job in missoula montana that's my option and the only way that i was able to do that was by hanging out at a developer's meetup and finding people who were working at different companies and one of them got a lead on a client but they didn't have time so they passed it to me and that was my first paying client so those types of jobs are are really like that now that's on my resume where it was on my resume at the time you know it was like now i've got a real paying client look i'm a professional and not i'm not looking for my first break i'm looking for my second job and it changed the whole narrative it changed the discussion all the way from like hey please give me my first break to hey i've been doing this professionally i'm looking for something new and it immediately changed the way that things worked and that was all due to a network um so i think like getting involved in those projects getting finding ways where you can work with other people in the industry just long enough to be on a first name basis with them you know like have have like that idea of friends in high places it's not it's not what you know it's who you know all those things are cliches for a reason they it's they're cliches because they work um and so you know in now that everything's remote right like you know i how how do you feel that's changed for you how is your your social network changed in the the age of like remote everything was funny because i also got my first tech job out of school through a meetup um and that was like the big the big thing to me was i just kept finding things that i liked to do and so uh this company was uh they had a meetup and i was i was like kind of trying to choose between if i wanted to do um if i wanted to work more with like ruby ruby on rails and stuff or go into the node uh side of things and so there was a tesl meetup so tessel is an open source uh microcontroller library and uh it's all run on node and i was i love i love just like tinking or tinkering around with electronics still like soldering is one of my favorite pastime because of the fumes and so we we went into this meetup and i didn't know anybody there and so i just uh kind of talked to people and one person i just like hit it off with he had a 40 in a brown bag and i was like is that king cobra and he was like how did you know that and i was like no um and but then he was like talking he was like oh here's my card and i was like oh pragmatic or he's like a software craftsman and i was like oh like pragmatic programmer um which is a really great book and uh then he was like are you looking for a job and i was like oh yeah i am and he i ended up working for this uh platform as a service company and i loved everybody there and i was like you can't do that now like it's hard to get you know you can't go in person and just chat about whatever is going on but that's kind of really great for introverts because now there are different ways to communicate um and virtual tech conferences a lot of them are free right now like jamsatconf was all free and they're different like networking things that you can do inside there but also people are more inclined to be online and in front of their computers so one of the biggest things that i always push people to do who are coming back into the industry is to email any contact in a department that they were interested in uh in the company like just shoot out a cold email just try uh because job descriptions are and job listings are horrible like netlifies i highly recommend checking those out if like you want to see what it should look like obviously i'm super biased but it's like i i remember when i first started looking for jobs it would be like oh you should know um you should know every single backend language would be listed and i'm just like why why and it's because whoever was in that department to make the job description was like oh uh software languages okay i'll list those okay what else like and so there's so much there like that doesn't make sense so i think especially like in these times where nobody's really meeting up and talking you have uh there could be a slight advantage to being able to reach out to people and it's like it makes sense even to the people you're reaching out to like oh yeah i can't see this person in person so communicating online you can ask questions and then you don't have that pressure of like oneonone being like oh what is job you know you can reread and definitely proofread everything that you send out um and that's a really nice thing because it lets you think like really think about things uh through before words out your mouth are bad [Laughter] i i mean i like i'm laughing but that is excellent advice like i really do think that you know having more spaces being created where people can be slow and be considered and not necessarily have to immediately rapid fire think on your feet to respond because that is a whole different skill set that you do have to practice and and something that not all of us are ever going to be comfortable with um but so i have a couple questions from the chat one um have you worked with software testing professionally i'm not sure if that question is is directly at like were you a test engineer or like have you written tests as an engineer i think the answer will be the way that answer goes is slightly different based on context but i'll let you take it whichever way you want yes to all of those but because [Laughter] yes so i um i i because like the platform is a service that i worked for uh we were pretty small i was like the uh besides the manager like the third engineer hired on and so we were touching everything so definitely wrote a lot of tests and i actually like test writing i it's like i tend to make uh like once i switched over to more uh developer um what's the one that's not developer experience i don't know and i had to make a lot of demos um devrel is that what you're thinking yeah thank you yes um so when i switched over to that i had to make a lot of demos fast and so at first in the beginning i would write a lot more tests because i enjoyed it um but then that fell to the wayside when it was like oh my talks tomorrow and i need a demo not that i ever do that um but then actual testing uh we had to do a lot of that for our product uh at the platform as a service so yes yes um another question that i think is uh is very relevant is we were talking a little bit earlier about just building projects putting those out in public and vivek is asking will the pet projects help in cracking an interview for a developer role 100 because that's again i really liked the company that i was working at the hiring manager like the engineering managers are really good about having the interview be about uh like what you know based on talking to you so i did no whiteboarding in that first interview um which is good because any time i go in front of a whiteboard i immediately draw funny dinosaurs but um they were like what is something you learned um on a project that you were doing and you know tell me the code behind it uh and that doesn't it you know everybody's different but that didn't feel very daunting to me because it was like oh my gosh yeah when i had to do this thing with this array and you know this wasn't the right way to sort through it so i had to go through this way and i thought that would work but then this thing was wrong and so you're basically like venting about a project that you're working on but in in that you're able to show that like you had you could talk through the code that you wrote and you understood what things were right what things were wrong and you've actually coded before yeah like which sounds ridiculous but um it's it's a way to know too how frustrated people get on what problems and how much excitement they find in coding so um and you know what you they try to stay if they if they're if you're i've had this before where you're hiring somebody who's supposed to mostly be working on back end work and all they want to talk about through the whole interview is the frontend stuff or you know stuff that is not right connected to what you're hiring them for and not that that's always a downfall but it says like you're not really as excited about the aspect that we're hiring for so but that i think is such a good point because like if if we're writing a job description for a very specific role and you are a great developer who's not interested in that specific role it's not it's going to work out poorly for both of us because you're you're not going to be super passionate about the work we are asking you to do and you'll instead be trying to do work that is you know not what we were hiring for so it's better like actually that you reminded me of the way we were interviewing on my team at ibm where one of the things that we would do is we did a take home work project and we just it was like okay you've got two hours build a website and the things that we wanted you to do for the website were like you could build a front end you could build the the kind of like data business layer of like how you load stuff in or you could build it back in to store that data and then we would look at what people focused on because two hours is not enough time to do the whole thing so we said you know do do whatever you would do and then at two hours just cut off and then we'll talk about you know what you would do next and all that and if somebody spent the whole time on the ui we knew that that was where their passion was if they spent the whole time setting up a back end we knew that was where their passion was um and you could hear in the way they talked about it because you would see like well in some i'd have to figure out how to build the data stuff and you can tell like that's not the thing they're comfortable with it's not the thing they're interested in but they would just bubble and bubble and bubble about how much fun it was to write this front end and you're like perfect that we needed a ui engineer this is exactly who we should hire um and so i and but you can see that in projects too like you said like if if somebody is putting out a lot of pet projects then you get like a really good insight into what they're excited about what their what they're building and what they're publishing that's a window you know you're you're telegraphing as a developer when you build something you're sending out a message that this is what i like to build and so if you've got a bunch of ui projects and you're applying for a ui role that sends a signal to me as a hiring manager oh this person's doing exactly what we want i'd like to see more and like if we're hiring for juniors we're not looking for people who are perfect we're looking for people who are excited because we're going to teach you the skills but we can't teach you to be excited about it um yeah sorry you were going to say something i also i oh no i was going to say there's a lot of resiliency to be showcased in doing side projects or pet projects and don't let don't let the lack of an idea stumble you make you stumble because um one thing that we were talking about i think this is also unremotely interesting um and i think you actually brought up this point of almost like every profession we're copying each other and we're totally totally do that in tech all the time um and that's one of the best ways to learn like when you're playing a musical instrument you're just playing the same thing that someone's played over and over and over and so you know if you want to you know try to make a buzzfeed you know make a buzzfeed it's showing that you can take a concept and put it onto the screen into actually working data and working files and so if you don't have an idea don't worry about it if you think that your idea is dumb that's fine most ideas we have are dumb it's just doing something yeah well and realistically speaking like when you get a job as an engineer it won't be your idea that you're building so so rebuilding another thing is a great example of like what it's like to work for another company you're going to get handed a mockup you're going to get handed a business goal and told to build something and and sent loose to do that um and so that you know that's that's not like that is not cheating by any means that's actually closer to what you would do on the daytoday than if you were to come up with something completely on your own yeah and just like so i know this idea i said it before but again if you'd go to a small business and you're like let me uh make your website for you it's gonna be quite a journey i'm not gonna like sugarcoat it like they're gonna be so grateful and do ins had like whatever you like but that's gonna be part of a really great learning process is like knowing because this happens on teams constantly where you're like here i made this thing that you asked for and they're like that's not exactly what i asked for change all of it okay cool so it's i mean i i can't i can't stress enough how like trying to find that in your community or small business somewhere it's like it'll help you in the long run yeah um okay so we have time for probably one more question and i think there's a really good one because we were just talking about projects um but there's a whole school of thought and a lot of emphasis especially in technical interviews on the idea of like the things that you would see in whiteboarding so leak code algorithmic uh you know being able to write your own bubble sort by hand and all that kind of stuff um what it seems the messaging that's being sent is that doing those types of programming puzzles is a more it's going to have more of an advantage when looking for a job versus building projects do you do you agree with that or kind of what's your take on that it's so this is such a loaded question because there are definitely benefits in someone being able to make those mental maps and show it in code uh but i am i i lose it in interviews i forget like i remember i had an interview and they were like what other frameworks are there for node and that is like like koa and they're like yeah i like those and it's like oh there are other ones in my github i have every single a project made with every single node framework i because i found it interesting to try every single one out but in the interview i was like my name's tara [Laughter] so i mean that in itself is like you know white boarding stuff can be actually really fun when you're comfortable and you're on a team and like you are just part of like your work day like i've definitely done it a lot and in jobs that i've already chosen to hire me um but i just think that there are other techniques to to glean a lot more from candidates that you will probably not be literally whiteboarding with in their position whatsoever right um but there there are like you know they're they're way it's like trying to say that a problem is black and white um because it's a copout it's a copout to just be like well they've been whiteboarding these problems for so long we're just gonna keep doing it if you want a good candidate put as much effort into getting that candidate as you want them to put into getting your job right um so try harder i guess well and for the candidates too like i think you know the as much as this sucks to say the algorithm stuff the the training for coding interviews that is like studying for the sats it will help you score better in the technical interview it will likely have very little impact on your ability to succeed in your job so make sure that while you're studying for technical interviews you're also doing real world type of work and the projects are that real world type of work so what like my my preference if if i was gonna give advice is to spend most of your time building real world projects and then if you are going into a round of technical interviews cram on technical interview stuff in the meantime like for the couple weeks leading up to it like don't don't make don't become an expert at taking tests that doesn't serve you in the in the job market uh become an expert at doing the work that the the test will get you to um and and you know honestly there's a lot of pressure on tech companies to revise the way that we're doing technical interviews and you know for example netlify we've dropped like algorithmic whiteboarding as a thing that we do we we've moved to instead doing like code samples you will you will implement a feature you will do it you know you'll do something that's closer to real word world we're not going to remove your access to google and make you write down code on a whiteboard that's it's not realistic that's not how you would do your job so instead we want to see how you think about things what would you google how do you you know do you have the the requisite context to break this problem down into things that you can search for to find the information that would let you solve it because that to me is a sign of a good developer not whether or not you've memorized a bunch of code um yeah if if i were to go on a job interview right now which i'm not no really not um but i would i would definitely like make a place that was easy for uh prospective employers to find my work and just like one or two clicks be able to go and look at my code go look at projects i've made like make it very accessible for them to get to because if it's not part of their hiring process you know it you want them to see this work so it's stuff that you're putting your time into make it easy for them to find it and to see it and make sure you get it to them and then like jason said there was a cake walk there are a few there's so many different resources out there that can like give you a bunch of problem examples i know cassidy williams newsletter she has like interview questions in each newsletter right um and she breaks down the solution too so like you can you can do it with a group which i think is a great way to learn 100 um and yeah and then also like uh well you're like washing dishes they're you know doing something in your house you can put on uh like all these free videos from conferences where they talk about new like newer breaking strategies and like most things that are like cutting edge to just like absorb the different things going around in the community because not only are you hearing the jargon but you're keeping abreast of all the new things going on so those are three things that i would definitely keep in mind absolutely and i think that is a great place to wrap up because we are unfortunately out of time i feel like i could talk about this with you all day so with that i will say tara thank you so so much for for hanging out with us today um where should people go if they want to follow up with you um i think quincy dropped your twitter maybe i live yeah i live in winnick woods no yeah twitter my dms are open i'm so bad at social media but uh i will i'll get back eventually but my dns are open um and then yeah and then um yeah that's the that's probably the best way besides coming to visit me terrace park ohio excellent um so thank you to free code camp for for letting me take over the stream uh this has been so much fun i really enjoy everybody thank you to everybody in the chat who asked great questions um keep in mind we do these on fridays so we'll be back again next friday uh with i believe april spite is going to be on next week which i'm super excited about uh so mark your calendars make sure that you go and uh and you know get the i think quincy will post the article here shortly to for everyone to go follow up if you want to do more live coding um i run a live coding stream every week on tuesdays and thursdays it's called learn with jason it's on twitch learnwithjason.dev is where the schedule is where past episodes are and you can come learn something with me in 90 minutes and on that note i think we're going to call this one in the can tara thank you again chat thank you again we'll see