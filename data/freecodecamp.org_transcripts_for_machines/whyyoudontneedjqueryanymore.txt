awesome thanks pj anyone have any other job announcements or anyone looking for a job that wants to come say hi awesome well this has been a lot of fun to um to start presenting here's the part where i say i'm definitely going to post the slides on my blog tonight and you go check tonight and they're not there and you check tomorrow and they're not there next week next month in three months you're gonna get tired of waiting you're gonna email me in six months i'm gonna reply and say no i'm definitely gonna post them on my blog tonight and i will never post them on my blog which is why you can go to robrich.org right now and click on presentations right here scroll down to our meetup right here post jquery and you can pop open the slides that we're going to look at right now feel free to get ahead all of these blue links are links that will click you off into the details about that which is really cool so while you're here on my blog click on about me and you'll get to this page and this talks a little bit about things that i've done i'm a microsoft mvp i'm a friend of red gate az gift camp is really exciting az gift camp brings volunteer developers together with charities who otherwise couldn't afford software services we sell form teams friday after work sunday afternoon we deliver completed projects sleep is optional caffeine provided if you're ever in phoenix come look us up because easy gift camp is really really cool uh i worked on sql server source control basics that's a lot of fun um mine is chapter eight it's a cool book i was a core contributor um to gulp in version two and version three so that's kind of where i cut my teeth in javascript which is pretty fun some of the user groups that i'm familiar with associated with um i help with the phoenix angular meetup and also the southeast valley.net user group i said southeast valley.net user group earlier and somebody said is that by hollywood southeast valley in phoenix it's actually in chandler arizona so that's pretty cool so one of the things i'm particularly proud of is i replied to an episode of the.net rocks podcast they read my comment on the air they sent me a mug i got a mug so enough about me let's talk about jquery so we talked about this guy jquery jquery the write more do less javascript library jquery was invented in a in a time when the web was really hard to use and jquery was great in paving over the differences between browsers making javascript much more approachable and it was great in its day so jquery came out in january 2006 and i i grant that you know some of us learned it yesterday but um it started in january 2006. so in january 2006 the the browsers of choice were internet explorer 7 netscape 8 firefox 2 we're up to like firefox 50 something right safari 2 those are kind of the browsers of the day does anyone still support ie7 this is the era that jquery was built for so what else happened in uh 2006 well youtube is one year old um yelp is two years old myspace is three awesome way to go buy space some other websites that were really popular in 2006. um apparently shockwave games were all the rage tailrank.com was a great news aggregator uh deadspin.com was a great sports has anyone ever heard of any of these zipcar yeah i think i've heard a shockwave yeah this was 2006. so the state of the web in 2006 we had this really inconsistent browser experience each browser implemented the dom differently javascript the engine was cloned in great detail and very carefully and although the javascript engines were very consistent across the browsers but the dom the way that we interacted with the page was very very different so javascript is hard well javascript wasn't hard the dom was hard but javascript was hard and so what jquery brought us was this really elegant simple paradigm of how to deal with javascript in the browser it paved over all of these browser inconsistencies and it gave us a really really simple experience to be able to target any browser which is wonderful that's a great and uh noble goal it did a great job it's on you know 90 some odd percent of the websites and you know now we've gotten to that point where it did a great job and browsers have caught up well 2006 what's the state of the web today today we have evergreen browsers we have html5 which arguably now is more of a marketing term than a technical term but it's really hard to not upgrade chrome when you restart it it's really hard to not have the latest version of firefox or safari or edge in all of the places where we use browsers as soon as they finish inventing the thing within the next six weeks we're going to have that on every browser that we're working with yeah safari for windows is dead um ie 4.5 for mac was awesome and painful yeah safari is the new ie6 so you know that'll be kind of interesting but these browsers update automatically html5 html is now a living standard and so all of these features come in automatically javascript is a living standard and so we move forward we can take advantage of the features that come today almost universally across every browser experience so here's my pitch jquery was great but jquery is old the web is different now jquery solved the problem that we had yesterday the problem that we have today is different probably we have muscle memory built up where we're like i need to solve a problem i need to oh let me just pull in jquery and let me do you know dollar dot paren and um now we're into jquery land that's interesting but we probably don't need jquery just to be able to grab dollar open print probably we can do these things with native browser tools any questions so far i'm totally gonna make vj dizzy this is gonna be fun okay so let's dig into what is jquery jquery is for the most part these four main functional groups we have ajax dom manipulation event handling and animation are there any things that you do with jquery that aren't these four uh yeah i printed out on toilet paper and i use it no i'm just kidding ajax dom manipulation event handling and animation it made these really easy for us back in 2006 and it gave us a really elegant experience on these four topics today all of these are much easier in other places let's look at each one ajax can we build it well with anything that we look at here there's that obvious argument of build versus buy should i pull in jquery should i write my own should i pull in a different library i love this micro js site because there's all kinds of really really tiny libraries to do interesting things jquery is two megs gzipped and compressed so competing with two megs let's look for an ajax library and see if we can get something smaller than two megs 1.8 k 4.2 k 3.5 k 0.6 k one of the things that makes jquery wonderful is it's that great user experience one of the things that makes it painful is it's two megs that's big so you might want to just cruise through looking for the feature that you want here on microjs.com go grab the micro library pull in that library and you might get to that goal a lot sooner so as you grab these slides later click on micro js.com and you'll get straight there so ajax ajax is built on top of xml http request that's kind of the object that makes this happen and xml http request now is built into every browser let's pull up can i use and let's talk about xml http request can i use is a great site that will that will highlight the particular feature and what browser versions it's supported in so along the main line is the current version of that particular browser and if there are older versions or newer versions that are also released you know canary versions or beta builds then they'll be listed here too so i can just kind of walk across this chart and i can see oh yeah xml http request is supported everywhere except for upper mini does anyone use opera mini so it'll even show ie 11 that's the last version supported by microsoft and so you can see you know all of the things xml http request is supported everywhere xml http request is great and xml http request actually has a library that a newer api called fetch and fetch is promise based and fetch is also built into all the browsers um if you're supporting ie11 there's a quick polyfill that'll give you a fetch api that just falls back to xml http request and you know makes that happen which is really elegant so xml http request is baked in back in the day we used to need to try and figure out if xml http request was defined and if it wasn't defined we had to go instantiate the activex control that was xml http request 2 and maybe sometimes that was defined so we had to look at xml http request for and we don't need to do that xml http request is now baked in we don't need to do all of that gyration to get to it so xml http request the ajax library that we can pull off now fits on a slide and it's hard to you know kind of digest all of this code at once but it fits on a slide i pass in the method i pass in the url i might pass in a post data and i pass in a callback it's going to go create a new xml http request pass in that url and method it may post data i'm making the assumption here that it's json data that i'm sending off and so i'm also setting the json accept and content type headers then once i'm done if i'm um ready state four whatever that means and i've succeeded then i'm going to call the callback with my response text if all you're doing is reaching for jquery so you can do dollar.ajax do this what's really interesting is i have this ajax method and i'll just pull this into visual studio code if i want to for example add my authentication header i can just customize that to add my authorization details because this code now sits in my library instead of jqueries i don't have to figure out how to hack into their api to add additional headers i may want to add additional error handling here that's not a great api surface but we understand now i can reach into this and do all kinds of interesting things to make that work for my business logic i now have control over the ajax function any questions on ajax so far this json library yes let's go back to canius.com and let's ask for json there's json it is built into every library everywhere we used to pull in json2 just in case we don't need to do that anymore that was a great question thank you so that's just javascript this is just straight javascript yes yep stick it in the js file and run it stick it in chrome developer tools ah stick it in chrome developer tools right here and you can run it that way too i'm not actually gonna run it because that would be kind of interesting but yeah exactly it's just javascript exactly what if i want to consider not just 200 of success but anything less than 400 to be a success oh that's not code i can type in anything less than 400 is success so 201 um 301 302 you know ideally the xml http request has already resolved the 201s and the are the 301s and the 302s but yes i can reach into all kinds of interesting things and do interesting logic there i control this code yeah stick it in your utility library somewhere and you're all set so ajax we've kind of solved ajax let's talk about dom manipulation well the first part of dom manipulation is dom selection and we can pull up can i use again and look at document.getelementbyid and see that that's been in the native browser spec for quite some time all html5 browsers support document.getelementbyid and what's really cool jquery kind of invented this of passing in css selectors into a selection engine to be able to get the results there too we now have document.queryselector where we can do exactly that i can do really funky css selectors i can pass them to document query selectoral and it will return to me an array of matching dom elements so if you're reaching for jquery just so you can select stuff just use document.queryselectorall so one could do something like this for dollar sign equals document dot query selector all now i can do stuff like that does that look familiar is that life familiar document.queryselectorall and document.elementbyd are baked into the browser and we can leverage them we no longer need to reach for jquery just to pick things so when we're doing this we're not just picking things but we're also modifying things we really like add class and remove class you know that's one of the ones that i reach for all the time we have dot dot class list on all the things in addition to class name which is that full string we have class list which is an array of those things so now i can add and remove into this array in the way that i would add and remove any other array so i just add some class over the top of this thing and it just concatenates that to the list not duplicating it if it already exists i can do the same thing to remove it and it will remove it out of that list sticking it back on that dom element we always go for that text method and that dot html method which is really cool we have inner html and text content that can do exactly that as well and it's just a property so we can go grab the content out of an element or we can set the content into an element to to be able to manipulate the html and the text in this way any questions so far about dom multiplication yep what has changed in the browser to make this happen this was uh the focus of this was html5 when they said html5 is a thing they said all browsers must have these minimum features and going forward html has kind of become this living standard and so browsers are kind of pushing that edge but any browser that was html5 compliant had these all of them are and therefore we have that we have it in all the browsers now that was a great question yep so it's all standardized now there's not a trick trick word for edge versus firefox it's all inner html or text content yes all of these property names are the same in every browser where we used to have some that used this name and some that use that name they've all standardized there's now a html consortium that also validates this and you know as proposals come into place they have various levels of these proposals getting accepted that give us you know validation in one browser or validation in two browsers or you know a complete set across all of them yeah what about the other jquery method like select the closest discipline and also a gbs next all those kind of handy utility not utility other methods that is a great question what about all of those other methods sibling and closest and next and previous this site is you might not need jquery.com and i love this site because you start out by picking your internet explorer version i wish there was a none button here because i'm like totally don't care but then given an internet explorer version which is you know the oldest browser i can now flip through this and i can look for the thing that i want to do so closest sibling so in jquery we say dot next the next element sibling is that thing that we can use in every browser so i can go for oh is is pretty nice that's cool is this class we can do this matches function which is pretty cool usually when i'm reaching for a jquery function and i'm like but but i just need this jquery thing to to work i'll pull up you you might not need jquery.com and i'll search for that javascript that jquery function and i'll go find the javascript that makes that happen i really love this site any other questions here yep um i thought there was a bit of a security issue where people could start inserting script tags into your values and so we were told to use dot text but both of those being the equivalent to the value is there a way to get around that with the new without using that is a great question so i have something like this and that's the script that i have now that's great shame on the guy who typed that but still this is a crossside scripting attack i'm trying to get this into the dom so that i can do something and i'm probably not going to just alert i'm probably going to i don't know swipe your session cookie or post data to your bank on your behalf and transfer transfer all your money off or log in to use facebook and post some interesting posts to all your friends so i have this string that is supposed to do malicious stuff so i could do something like this string template equals i want to say div class equals make it pretty plus some string plus end div and so my goal here is to you know add that text together with my other stuff and and that becomes my template and i'm not going to show this and and now my ui looks awesome if my string said hello bob because my string doesn't say hello bob because my string says go execute this javascript what i'm going to do when i say var div equals document.get by id my div so i'm going to go grab that div and i'm going to say div dot inner html equals template now what happened boom i want to not do that i want to say make this not execute that javascript i want i don't want it to treat it like markup i want it to treat it like text so what i'm going to do is i'm going to say i'm not going to get my div i'm going to go get the make it pretty id so i'm going to presume that this is already in my page somewhere i may need to show it that's okay but that markup is already in my page and so because of that i'm not going to use template anymore and i'm going to say because i'm using the text property then the browser will correctly html encode that and now i'll just have a bunch of you know angle brackets on my page where that you know hello name piece used to be i've chosen to use this as text to guard myself against that crossside scripting attack jquery makes it something like this to say here's a function that may take in some some stuff and basically what they're doing is they're saying that we just built the text method in jquery that's cool maybe i need that text method maybe i can just call inner text directly now they're also going to do something like this so that i can do you know get the text back out if i don't pass it in you might not need jquery that was a great question what other questions do you have right here dot inner text on uh so prediv dot your text it's assigning some string to it how do we get what the text is at that point like whereas jquery right there it returns it great question how do i get the text back out i just read the property your teacher's gonna be so mad at me tomorrow sorry okay so we've gotten content we've manipulated it we've added classes and removed classes um yep go ahead what's the difference between inner text and text content somebody did a typo and should have used this property everywhere um shame on that guy good thing that we have a peer review thank you it's not called inner text it's called text content good catch text content i think let me go ask can i use yup text content yes text is definitely a gentler method to get into this text content yeah inner html and text content it's like can you like at the very least capitalize it consistently yeah either do uppercase or camel case or um you know do we do dashes or do we not do dashes or we can go like this and we can um do both of them yes because standards are xml in the awesome because you would never want to do an http request if it wasn't for xml oh of course why is it xml instead of just http request well because when microsoft put together the thing to make outlook web access the html part of the thing had already been code frozen but the xml part wasn't so if they called it xml http request then they could get it into the browser yeah oops okay so we've changed the content and so we could for example start looking at something like this and we already coded this which was really interesting if we just set document.queryselectorall to dollar sign and then we can do something like dollar.go grab the thing and then go loop through each of these doing interesting things let's add a class let's remove a class let's set some text content into each one we're starting to do that same thing that we do with jquery.each instead of jquery we have an actual array and we just you know for reach through that array so the next thing that we want to do is we like that click event you know dollar dot dollar paren dot click well it turns out there's this browser event called add event listener where we can pass in the thing that we want to listen to like click and so we can go do exactly what we wanted to do before so we really like that click methodology let's build a click function and i'm going to take in an element and a function element dot add event listener i just built myself a click function well let's do that so i have this click function and it's just going to take in some element and some function and by wire up the click event handler and so now it's not quite the same experience as jquery because i'm passing in that get element by id result that actual element but i'm getting that same kind of you know jqueryish kind of feel without that 2meg download so i've got the events and that's interesting but i really like this i really like how jquery binds this in an interesting way and i really want this this this this as opposed to the other this is so i like this so the way we we accomplish this in jquery in javascript is we call function.bind and pass in to bind what this should be so the only difference then in my click event handler is i create this click function and i pass in function.bind element and now the element is this and now i can do this dot id and this dot attra and you know all those interesting things this dot class name rather than just taking the function we're calling function.bind to set this correctly so let's go rebuild jquery we've kind of got enough of these tools that we could do interesting things and try try to see if those five or eight features that we definitely reach for jquery for because it you know kind of makes sense for us let's see if we can do those well we really like that document.queryselectorall setting that to the dollar sign and then we like that click event handler so i'm just going to stick that click onto that dollar sign as well so i go i go stick this in the top of my utility class and then i'll say hey let me go grab the things results dot for each item and now i want to do item.click but that's not the way i built this i want to say click item and now i'm doing the the content that i i just wired up a click event handler i selected all the things and that feels very jqueryish i could do a similar thing if i only want one i can say go grab the thing i only want one result and i'm going to wire that up into my click event handler not quite jquery but really close and the code to pull that off was four lines compared to two megs that's interesting so the next step is we may want to stick on that ajax function so you know i'm just going to take that dollar.ajax and i'm going to assign it to that function that we built method url data callback now i kind of like that i take in an argument instead so i'm going to take this ajax function and i'm going to stick it in our library and i'm going to say instead of just calling it method url data and callback i'll just take in args and so args.url args.method and i may say and if you don't pass it in it's get args.body and then this is args.success so now we've got ajax in our library any questions so far but but i i really want it to be this dollar dot and then go click and do the things okay so let's take it to the next level so here's that function that will take in a selection and we're going to go wire up some cool events to this selection so that jquery can do some things auto magically so let's go first grab our matches and we'll do the 4h around those matches and we'll say for each thing let's wire up an on method let's wire up a click method an add class method a remove class method here we've got the text and html method and so ultimately what we're returning down here at the bottom is this array of all of the things that are wired up to do all of this stuff and in our application if we also need on blur and on focus then we can you know rig up focus and blur events or the interesting thing with this on event is it's just going to get passed in whatever event you want it to so you could use on click and then wire up click event handlers that way if all you need is that much that's jquery and it has an identical look and feel here's our ajax library and we did all of the things that we you know just sticking out on dollar.ajax and we've kind of built up this ajax clone any questions so far yep they just condense their library why don't they just condense their library good call yes exactly it supports really really old browsers jquery 1 supports ie6 and if ever they stopped supporting ie6 that would be a breaking change jquery 2 drops support for ie6 but supports ie8 jquery 3 hopefully they'll take it a bit farther i hear they're specking out jquery 4 maybe they'll move more modern and you know drop support for all things and at that point maybe it could be as simple as the library we built here right now it's still two megs though and that's after getting rid of ie6 so you know they've got a ways yep determine um browser what's the color of line for the browser support go back all the way to 98 so that will affect your decision good call how do i know what browsers i need to support and because of those browsers how do i know what features i can use ideally you look to something like google analytics or a similar platform where it can tell you the browsers of your users and based on those browser selections you know that hey if we stop supporting ie6 we're going to lose 0.5 percent of our users 0.5 percent of our users relates to this much of our sales and so we're going to lose 20 000 in sales next year if we stop supporting ie6 maybe our business can handle that maybe it can't maybe we look at the analytics and we go 0.02 percent of our users use ie6 if we stop supporting ie6 we will lose 20 what's our development costs in supporting ie6 well it's definitely more than twenty dollars it's probably more than twenty thousand dollars let's stop supporting ie6 google analytics is great because google analytics very specifically targets your market in a really elegant way if you want kind of more broad versions let me see if i can find it in 28 seconds or less can i use has a really interesting table of usage statistics and this is you know them harvesting usage statistics across the world and there are interesting npm packages that are based on this can i use that that will pull in interesting things and i'm completely browser list there we go so i can say inside browser list i would like to support the last one version and browsers that are more than one percent of the global market and that will cap that off at that version and so i can you know do some really interesting things there um uh browser list is cool and there's another site that lets me explore what browsers um relate to this that the name has escaped me i'm gonna remember it on the way home today though so ultimately what browsers can i support ideally that's less of a technical decision and more of a business decision let's look at our market share and the impact to our customer base if we stop supporting that browser so if i stop supporting the browser what features can i use now or what features do i need to not use and that's where we go look at can i use we've been using var today which is es5 can i use let and const yet yep well how about fetch can i use fetch and so i'll do exactly this i'll come poke into all of these as i find a new api that i like i'll come to can i use and i'll plug that feature in and i'll say so based on my usage statistics and what browsers that i think that i'll support can i use this feature yet can i use sv svn svg yep can i use canvas can i use for each can i use array.sort come ask can i use and that will help you make that determination what other questions do you have so far i think you're doing a pretty good job explaining it awesome so jquery is four things jquery is dom manipulation jquery is ajax jquery is and animation and we haven't talked about animation yet what's up with animation post jquery i have this show and this hide thing going and i have this you know open and it's a nice fade and animation animation is cool back in 2006 when we wanted to do this the way we did this is we set up a timer and we said okay every 100 milliseconds move it a little bit more 100 seconds more move it well now it's a little bit jacky well how about every 10 milliseconds oh i'll make it really smooth how about every one millisecond well how does that relate to my screen's refresh rate well it doesn't so am i calculating frames that the browser is just ignoring or am i not calculating enough frames and now my animation looks choppy so now we have a new api that is request animation frame and this is baked into all browsers as well let's go check can i use because you know it's a thing so request animation frame is even in ie 11 which is wonderful whenever the browser is ready to display another frame it will call request animation frame i'll do my calculation i'll be able to show it what happened and at that point now it's showing the animation as fast as i can possibly see it jquery doesn't use request animation frame under the hood jquery 3 may but you know for backwards compatibility it couldn't if i want to do animation and i want to make it performant request animation frame is definitely the way to go and so we should move away from using jquery for those types of things and use request animation frame well i really like show and hide well here's a css class that gives me show and hide and it just happens to have a transition so i've got css3 animations here which is really cool keyframe animation so i just add the show class and i remove the hide class and i get that fade in effect that's cool if you just want to hide hide is just setting the style.display to none show is removing the none and it goes back to wherever you need it to be so you could set it to block you could set it to inline inline block and that will show it so if you want to take animation a bit farther probably you want to look for a framework green sock and animate.css are great css animation libraries that will give you access to really rich javascript apis as well where i can say kick off this css animation and when it finishes call my callback or let me interrupt it or let me do interesting things both of them are great apis they definitely have a very different api surface than jquery but they'll give you modern really smooth animations ultimately as we look towards these animation things we're also looking towards other frameworks and will land on something like this angular react vue or aurelia we're probably fighting over reactant view right now angular 6 is definitely a thing and aurelia is really awesome they really embrace web standards and really try to get the framework to fade away from you which is wonderful if you're leveraging one of these component libraries you probably have an animation system built into that as well you probably also have a text templating engine and so you don't need to do that you know raw inner html and text content thing as you're leveraging these libraries you may also have an ajax library angular has very specifically leaned on rxjs for this react has one built in and vue has one built in aurelia says hey there's this king thing in browsers called fetch go fetch and so that's really cool too as you're moving in this direction these libraries probably will have a lot more interesting things for you a highlevel yep on uh angular versus uh framework if you going to build and touch on which one would you choose good question so we have some javascript frameworks here which one is the best what size is the perfect coffee mug each of these libraries has different preferences different opinions different strengths and weaknesses and i would invite you to try out many of them and find which one best matches your needs and your skills and best matches the problem that you have if you don't have the problem that angular solves don't use angular if you don't have the problem that react solves don't use react ultimately compare angular in react and view and get comfortable with the one that you like the best or walk into your team and say angular view and react and somebody's going to talk to you for an hour and a half about why that's exactly their favorite tool and i agree for your team that one is the perfect choice what is the best framework the best framework is the one that makes you happy the one that makes you productive my best framework may or may not be your best framework and that's okay does that unanswer your question what other questions do you have so far yep promises good question can i use promises can i use promise yes i can into all evergreen browsers promises are built in what's really cool is promises then become the foundation for things like service workers and the fetch api and so anything that supports fetch api and service workers which by the way is all of them will support promises as well so how about async and await all of them you can use async and await in production on your real site today unless you're selling to those guys in china that use xp with internet explorer that's not 8. joke yep i wish i was win kidding yes a year ago yeah you can do some really cool things in niche markets where they have very specific and eclectic browser habits i've been dissing on opera mini a little bit but in some markets opera mini is perfect because what opera mini does is it downloads the content to their servers minifies it and then sends it to your browser that can be wonderful if you have a 2g connection and you pump your own water the next billion users may use opera mini and if that's the market you're catering for exactly go after opera mini and understand both the cost of development involved and also the benefits to your business if you're building a platform as a service a modern cloud app probably that's less important what other questions do you have so far yep that's kind of an interesting rule of thumb i like that if the project lasts more than a few weeks then jquery may not be a great choice and maybe you want to lean on one of these frameworks i like that where's that magic cut off i look at the durability of the project you know is the goal to like deliver fast and throw it away in a week you know a really quick marketing site or is the goal for this application to sit in an enterprise for a few years what's the skill level of the team that i'm working on also what's the complexity of the thing do i just need that submit button to work or do i need to do a whole lot of animation around making that submit button turn into this animation and and reload the page in interesting ways and ultimately you'll get a feel for this and you'll go you know this was hard let's find an easier way to do that let's lean on one of these frameworks that will do a lot of that for us or wow we have a lot of frameworks involved let's see if we can simplify it by removing some of these frameworks did that unanswer your question yeah that's cool complexity is kind of an interesting thing to poke at there so we've got yep go ahead good question so this guy told us to get rid of jquery when is this a bad idea when do i not want to do that thing well if i've got a site that it has you know five or eight ten years of labor built into building this and it's built on jquery you probably don't want to spend five or eight or ten years rebuilding that without jquery if your base framework depends on jquery then probably you don't want to rip out jquery angularjs angular 1 depends on jquery bootstrap 3 depends on jquery underscore depends on jquery but angular 2 does not angular 6 doesn't bootstrap 4 doesn't um underscore unfortunately is no longer a thing so as you kind of upgrade your stack then you can probably get away from these what is underscore no why is underscore did you say underscore is not a thing underscore isn't one of the popular frameworks right now underscore was great in getting us past jquery's nested wing into kind of a more frameworky approach and then angular came out and underscore kind of fell off as a as a framework if i've got a modern thing with bootstrap 4 and angular material i probably don't need jquery so if we're in a highly regulated environment and our code base is you know a little bit crusty probably removing jquery isn't a good option as well you know there are some industries where it's like we need to ship exactly this stuff um we need very specific validation of our application we need to be able to prove that it works in all the ways so the moment that you touch that thing is the moment that we have to retest everything don't rip that jquery out of that but the new content that you build today you might be able to get away with just a helper library maybe dollar sign isn't the variable that you craft for it or a few of these little helper methods like click and text and you know those types of things might make your life a little bit easier and you're moving in the right direction to get to a more modern stack if you're focusing on the wordpress type of thing like i just need a marketing site and your wordpress template uses jquery yeah it's probably not a good idea to rip out jquery out of your template maybe it makes sense but probably it doesn't look towards that cost benefit analysis how much time is involved in yanking jquery out of my project versus how much revenue will i gain from doing so if seo is really the killer feature of your business and you really want to rank high in google having really fast page load times and really light pages will definitely help you and so maybe removing jquery will really help maybe you'll get that much cost savings by telling the boss that that hero image in the top left corner that's you know five megs optimizing that image to be 500k or 50k might gain you that much seo benefit as well that was a great question thanks what other questions do we have so far so jquery was really elegant in solving our problems in 2006. today's browsers are different and we might not need jquery we looked at you might not need jquery.com already that's the site where i pick the ie version and i can scroll down to the features i'll frequently use that site to go say but my muscle memory is doing this what's the uh regular javascript way to do that which one is my favorite yes i do like working with them and that's definitely my framework of choice ultimately i walk down through a couple of things as i'm looking at which framework i want to choose i look at what are the cultural implications in my business you know some people are like i definitely won't use microsoft or i must use microsoft i'll look at the team that may take over for me and you know what skills do they have do they have more skills in this particular framework or that particular framework i'll look at what are the problems that i'm trying to solve and which tools best match those problems and then if all else is equal in all of those then my preferences start to take choice but ultimately usually i'll hit one of these business or technical answers before the preference piece comes into play we have a.net shop and so we're going to use net or we have an angular shop and we really like typescript okay let's build this in angular or if i'm given a problem where it's like just solve this business problem now i can go look at all the things and i can pick and that's really fun too which one's my favorite the one that accomplishes the job that delivers value to my customers the fastest so you know this is kind of an interesting meme in that direction what if drivers were hired like programmers i love this blog post that's really cool job requirements professional skills in driving normal and heavy freight cars buses and trucks trolley buses trains subways tractors shovel diggers contemporary light and heavy tanks currently in use by nato countries skills and rally and extreme driving are obligatory formula one driving experience is a plus knowledge and experience and repairing of piston and rotor winkle engines automatic and manual transmissions ignition ignition systems board computers abs abd gps and car audio systems by world known manufacturers obligatory experience with car painting and tin smithing tasks is a plus the applicants must have certifications by bmw general motors and bosch but not older than two years compensation 15 to 20 an hour depending on the interview result which basically is every job posting everywhere yeah education requirements bachelor's degree of engineering at 20 an hour so that is my pitch if the only reach reason that you are reaching for jquery is because it was familiar you might do better and you can save yourself the 2 meg download ultimately look to the framework that makes you happy and really enjoy coding this is a lot of fun to do thanks for coming everybody