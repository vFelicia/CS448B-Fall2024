hey everybody welcome to live coding with jesse i'm jesse today we're going to work with a tool that i've never worked with before and we're going to do some database stuff which is not really common for us on this stream usually we handle front end work but microsoft has come out with and i don't know when this came out but i just found out about it yesterday sql operation studio and when when we see it in a minute you'll see it looks a lot like visual studio code it's an electron app which is cool to look at another electron app since we started building one yesterday um but i finally got access to a database so if you've been watching for a while you know i've been talking about this for at least a few weeks now probably longer and so i had uh some some of the people over in it made a copy of the database that the main site for for this university runs on so uh franciscan.edu which runs on a really old uh content management system that we want to migrate away from but we want to try to get the data out of that database and put it in another database in a format that will be better for whatever cms we decide to use most likely wordpress but i'm still open to other options so i'll give you we're going to look at the database in just a minute but so far i think it's good but i'd like you all to you know check it out as well and then we're going to decide what the best way to transfer this this is and then maybe we'll you know we'll try to do some some tests to see you know what would work i also have a lot of updates that need to be done for our project one our catechetical institute site and i'll talk about that at the end of the stream when we do the question and i answered portion so i had a meeting yesterday afternoon about that which is why i didn't stream and i'll probably be making all of those into issues on the github repo but i'd like to kind of talk through them first uh in today's stream at the end all right so let's let me switch my view here all right so this is uh this is it this is the i keep forgetting the name of it it's microsoft's sql studio no sql operation studio yeah yeah that's it um yep all right so basically let's see is that big enough let me know if it's not big enough i can make it bigger so i don't know how many of you work with databases but this this query gets everything from from content right so we have a table called content we actually have quite a few tables here um content will be the most important that's where we'll get getting majority of all the data so you see right now every piece of content has an id but what i'm really worried about here is the content title and then the content html so this is good news that i think pretty much all the content on the site has this this title and content html we can grab that that's that's all we need really we don't really need to keep the ids the only other piece of data that's going to be useful is content there's a content type which i can't find now but somewhere in here it's a content type now it's just they're just numbers so content type one two three four so i need to figure out what those numbers correspond to but this should help us because the different content types will probably end up being different custom post types in our new cms so we need to make sure we bring them in uh as that so we're not just going to bring all this in and have it be one giant table like it is now but it depends it really depends on the format that we need for our new cms but this is good news so far let me pull this up and we can see more of it at a time and i'll bring that down so there's a couple things that i think we we really need to get out of the way just right off the bat number one we got to change this color theme right we can't have this this bright white stuff so let's check let's try uh what do we see this one looks good monica or we could do default dark that looks nice we'll go with default dark now i'm not sure if we can get a package for this and bring in a new theme oh actually it's it's letting us bring in the um seti icon thing very cool all right so now that we have the background color set now we can really get started so all right so i guess first off what i want to do is open it up to anybody out there that has experience with databases if you have any ideas to throw out let me know i'm going to throw out a few my ideas to what i think the best course of action will be and let's try to decide on one and maybe try something out in today's stream so i don't really have that much of a goal other than just testing some things out i've never done this before so i don't really know what to expect in terms of difficulty and time so if you have an idea go ahead and throw it in the live chat i'll check back in there in a minute or so uh otherwise let me share with you uh some of my thoughts so let's see i'm thinking what we potentially could do is just export a lot of this data how you know whatever format that we would like and then pull that data in basically to wherever uh so one of the difficulties here i guess i should mention this i can only log in to this uh database from this computer um on on this network so i believe that i i'm granted access uh based on my ip address i'll have to verify that with the people over in it but when i was trying to log on yesterday and then earlier today someone from it had to come over and it was a lot of troubleshooting to try to get give me access to this so i have to be on a certain network here on campus so that's going to limit us right so we couldn't just um you know pull data you know somewhere else right uh it has to be here on this computer so that may or may not be an issue but what um what i'm thinking and maybe there is already like a sequel way of doing this i assume there might be but in terms of what i'm familiar with we could potentially pull this data out and then get rid of all the um all the data that we don't need so that's going to include a lot of these a lot of these columns that we just won't need at all um but then also some of this data we don't need to transfer over so some of this stuff isn't even live on the site anymore it's obviously still here but it's marked i believe one of these columns will say whether or not something is is actually live so we need to get rid of all those as well and at that point once we get it narrowed down to what we want then then we could see about transferring that so here's my basic probably don't have to look anything up way of doing this let me know if it's ridiculous so we we could potentially and i think this sounds kind of silly but i i'm pretty sure it'll work we could potentially just export this in excel or as a csv or json right but if we did that we could just go in delete rows and we'd have all that data there in a format that wouldn't be too difficult to pull out and put pretty much anywhere we wanted okay so that's my option i guess the benefit of that would be we we could very easily get a good idea of just how much of this we actually need we could do some filtering which could be useful just to see now umberto in the live chat has some ideas as well so umberto says if we use um sql server management studio um we can generate the sql scripts for create table and search statements logins users etc it says let's see that might cause issues uh with the column with the html um let's see i'm wondering all right so i'm going to ask you all if somebody has um okay so the exporting to a csv or excel um umberto is saying it might um it might cause some issues all right good to know so let's go on to plan b right um nicholas asks what happened to electron i'm really excited for project six um nicholas we'll be going back to project six we're gonna kind of be jumping around a bit um so i'll project six will receive updates periodically and we'll keep checking in on it and we will do some streams that will be dedicated entirely to it uh but i don't really have a timeline for though that needs to be done so uh i guess you know you can always check in and you know when you get the notification if you're subscribed to the channel you get the notification of the title check if it's project six if you're really only interested in that then you know check that out otherwise um you know then you could skip the other stuff i guess uh let's see okay so here's my my other idea we could let's see how do we do this so for this database it's a copy but i only have read access i can't change anything within this database um but what we could do i suppose is create another database and we could even use uh this tool uh it's a sql operation studio we could even use this tool to start to create some you know some tables and things and pull some of this stuff over what i'm not sure about is you know could we pull things directly from here and then insert them in another table you know all within uh sql operation studio so as i mentioned earlier right just started using this uh this morning i downloaded it yesterday couldn't connect to the database and so i didn't really get a chance to use it till this morning so that's something that i'm not sure if that would work but if it did work that would be great i guess that's worth a shot because the next step would be i'd i don't even know the next step i guess would be let's just try to pull this data out put it somewhere else where we have read and write access maybe we can manipulate it i guess if we even just pulled it out somewhere uh that would be more accessible so i didn't have to be here on my machine that might be useful we could try to create some sort of api to get info if we wanted to because to be honest with you i'm not really that familiar with the sql queries but if we could make a really basic api to do things then we could use javascript to do a lot so anyway let's just let's just mess around a little bit and try some things so let's disconnect i'm going to create i know that there's a way to create a database actually you know what are we still that may not work i'm not exactly sure um if i'm still connected to this server i guess suppose i have to do everything on this server hmm okay well let's pull i i just want to go through this and see what we're dealing with in terms of how ridiculously long this would be okay so obviously this is super long wow there's definitely going to be some editing that needs to take place here as i'm looking at some of this html there's a lot of extra stuff in here that we're not going to use that's unfortunate but at least we can get some of the data okay hey john uh john hanson just came into live chat how's it going all right so let's you know what let's let's go back here and let's run a different query because i definitely don't want to bother bringing in anything that's not currently live on the site so let's check out our our headings here this is content status i'm not sure what these stand for on the database okay so we do have publish which i'm assuming xero is not published and one is published so we can rule out anything i guess that's not published oh okay cool um so pat my uncle pat is in the live chat and he said active is in active and inactive is for the status so awesome that makes a lot of sense thank you um okay cool so the i'm then assuming we don't need to bother with the inactive let's see yeah i'm not even sure why these are in here these sound like uh blog posts we don't even host the blogs here any uh in the system hmm and a lot of these wow let's check out the dates on some of these and we were talking events from 2015 yeah we definitely don't need a lot of this stuff all right here's what i'm going to do too right now this will help us out not right now but later on this would be fun uh let me save this i'm gonna save this as an excel file it's gonna be insane and huge but i'm not gonna open it i'm gonna send it to my boss so because my boss is in charge of all this content and he's been here since before this site was even developed at all so he's overseeing everything that's gone into here so he'll be able to tell much more quickly than i can um what what content in here is should be kept and what should not be kept so i will i'll i'll you know i'm not going to send that to him right now because that's not really going to be fun on the stream uh but then that way he can take a look at some of it maybe even tell me you know hopefully there's some identifier in here that would help us out at the very least i suppose he may be able to say you know any you know any content types that are content type three before that were put in there before a certain date we can get rid of that would be helpful uh john hanson says who would and how would that html be uh imputed slash and we're from wordpress um we're going to probably wordpress um but yeah so this data will be put in to a different database and then yeah the content uh would then be could be editable uh through that cms but we're still gonna use the api to bring it in and pull them into our react site yeah so the excel trying to open this in excel has not crashed my computer yet but it is taking forever uh it it's letting me do other stuff while i'm waiting on that so i'll just wait on that uh over here on the side i won't bother with it anymore i'll look at it after the stream all right so umberto is saying we could try to create database database name let's see create create database and i don't know let's just call this no all right what's going on connection all right so it's asking me to put in a different address so i just want to go into here let's see what happens no is the password not in dude i didn't hit remember password um what was the password i think that was it let me remember this time so i don't have to remember it again no hmm all right let's cancel that so that's not it's not working right now so for some reason i still have this in here which i'm not going to mess with this now i'll be assuming that you know maybe i'm i'm not connected really but it's just still showing me this because i i did the query when i was still connected so i am getting the login that i used for this was not the login that i will get hopefully soon so if i can't remember this password i'm not worried about it because i should be getting a new one soon uh i mean i guess i could just open up the help page oops no results found for create database let me start a documentation um all right so we have uh umberto asks if we'll be sticking with microsoft sql server for your database no i will not be sticking with that from my database um so i guess we it doesn't really matter we shouldn't create it through here anyway um also says you might not have grant permission for create database yeah i don't think i can i can change or do anything uh i think i can just read data okay so embarrassing the other option i use in dev is local db but i'm on windows i don't know if that works for mac doubt it does okay let's um all right so let's let's think about this then um for sure if we're going to go with wordpress uh mysql will be the database that we go with if we go with a different system i have no idea what we'll be using so should we just try to do something then with my sequel that might be the best bet right now i guess that's kind of the only the only thing that we would kind of know about for sure that we want to use all right so let's see if we can just get a local mysql database going so hmm all right it looks like can you not do this on a mac has anybody installed uh my sequel on a mac because there are no instructions for it that i'm seeing on on the left the oracle website i guess we could just create a droplet on digitalocean all right let's see if we can just create hmm yes we could um we could just create really quickly um a wordpress installation i mean maybe maybe that would just kind of really easily uh show us what like what would happen if we imported things in a certain way let's see all right let's let's do that so let me show let me show you all this so this is assuming that we're going to go with wordpress this is the structure that we need so if we install wordpress first and we'll just do we're not going to go through the whole installation process like we've done before we'll just do the digitalocean one click uh install and we'll just spin up the droplet just to test we'll do a really basic droplet and then um we'll just get rid of it when we don't need it anymore uh but the only thing that we really need to worry about changing right now is this wp posts so actually a lot of these fields match up pretty well with what we already have okay all right i think that'll work all right uh i'll bring this over so we can see um so it's just digitalocean i'm just going to go with this wordpress one click install we can do a five dollar droplet if if you do the install um you know if you start out just with like a linux distro uh and do it install wordpress on your own you can actually get away with running it on the five dollar an hour droplet uh which is nice and it it actually works it it'll run everything uh i have wordpress sites i'm just using the headless uh wordpress installs on five dollar droplets that have been running for months and months and have been doing fine uh but for for now just for speed we'll we'll be all right with the 10. uh i don't think we really don't need anything special uh just for testing so yeah i don't let's monitor at least um and droplet okay through pdb tests all right that works right yeah that looks good all right let's create that oh cool so michael is is here and michael knows sql or sql actually let me know in the live chat what do you prefer to say or what do you think is the correct way to say it sql or sql um i i think sql is easier to say and so i go with that but i do hear a lot of people saying sql alright so this is almost done great so we should be able i think we should be able to go here oh this ip probably won't do anything i wonder if you can do okay so i have to ssh in enable my wordpress installation okay um not a problem let's copy that and we've got the terminal open already let me make this bigger so you all can see and uh i know i have completely forgotten about the pomodoro timer for this one but there's not a whole lot going on in the live chat so i'm just gonna not do that for now if i notice a lot of activity then maybe we'll go back to it but i've been able to keep up with with the chat as we're going so if i can keep doing that we should be all right okay got some some votes here for uh for sql all right cool uh also um kundan nanji uh sorry if i mispronounced that uh says what happened to setting up an electron project we're gonna go back with to the electron project uh so we're going to kind of bounce around between projects but we will go back to the electron project at some point uh the repo on github is there so feel free to check out what we have so far it's it's set up pretty nicely so it can certainly be uh forked at this point cloned you could you know work on it for your own projects or contribute uh if you'd like but we'll get back to it all right john hanson's asking about why uh the microsoft sequel over my sequel and isn't my sequel easy yeah we're um so what we're going to do is take that data out of that uh sql server database and we're going to put it in to the my sequel that's running with our wordpress install so we are moving away from that uh from that microsoft uh server okay i think this should get us in yep all right cool we are in and wordpress has been enabled wonderful all right so hopefully i can get into this wordpress install just with an ip address if not it wouldn't be a problem to make a sub domain you know quickly okay so it looks like i can use the ip so let's try that out okay cool username sorry i can't show you the password uh let's go um let me move this over and then do the password so i'll change what was there and copy phil wonderful i have to put in i think sometimes for my work email uh these these emails from wordpress get blocked um so i'm putting in my my personal email for that okay let's log in lennon says can you give me hints on this question uh yeah sure what is your question all right awesome so we have a wordpress install we may as well just update this now before we do anything i'd hate to actually do something and then update and have it mess up what we've done so if you've never used wordpress before this is what the admin panel looks like wordpress updates are super fast and easy you see that it's already done i couldn't even say what a wordpress update was in before it finished so you hit the update normally it's a good idea to back up a site first but since we have nothing in the site we didn't need to and now it tells us all about you know what happened uh when we update it we can also go down here check out our plugins this can be updated now uh we're not even using it right now but just to show you how easy it is to update that literally a few seconds so what we'll do now is we'll go to i guess we'll go in through here uh how we're gonna get in oh sorry uh so here's my idea wordpress already comes with its wordpress api should we or could we use the api to put the data into the database instead of directly manipulating the database let me know what you all think so if we were to directly manipulate the database i would need to i guess be able to open up some type of tool to where i could read that database uh because doing it all from the terminal i think would be somewhat more difficult but at least if we use the api it should put the data in uh properly so i guess i guess i could try it um yeah let's try it the problem with the wordpress api is you really have to make sure you get a new tutorial or even make sure you're on the right set of documentation because it's changed so much since it you know they first were working on it uh there we go this one looks pretty new so hopefully this will work let me bring this over on the other screen so you all can see what i'm doing um let's see uh nick asks why am i not using sql server management um probably because i'm not exactly sure what that is uh so if i should be using it um let me know uh you know send me a link or point me in the right direction i'll check it out uh i'm not i guess i didn't say this yet i'm really really inexperienced when it comes to database stuff so that's why i'm kind of relying on on help from you all so i know there's some of you that have a lot more experience with databases so um if you came here to learn a lot from me you will be disappointed but the other people that are watching the stream and and talking in the live chat will probably be able to teach me and everyone else a lot so i'm going to do my best to take their advice and read that out and then try to act on that and i'm going to keep an eye on the clock just to make sure all right so we haven't even been going for an hour yet so this is not too bad uh let's see i want to api reference let's go to our posts all right i don't want to list pose create a post here's what we want okay just gonna create a post do we need um i suppose we need all of these uh i guess they don't need to be no there's no way we need all of it because some of these can certainly be blank and they'll still be opposed so let's um all right so we need to send a post request to this endpoint with this data all right not too bad all right so here's what i'm thinking uh let me let me check in the live chat for a second here to see if someone else has a better idea before i share what i'm about to do uh oh lennon has a question about specifying how fonts should degrade um you should be able to just put font family and then whatever font you want to display first will be first and then put a comma and then put in the next font and a comma in the next font um so you it could be something like um the first font would be uh roboto uh you would you need to put that i don't you wouldn't need to put roboto in quotes uh it's just one word uh so it'd be font family colon space roboto assuming you've already brought in that font uh and then comma space sans serif comma space um i don't know whatever i see you probably sans serif would be your second one if you wanted something else to fall back on in between there you certainly could put that in there but that's generally how you do it and that's with css uh so if you know you put that on you know whatever you know selector that that you want for those fonts to degrade so anyway lennon let me know if you need more info or something like that i can certainly uh address it again later on in the stream or you know send me a message on twitter uh you know show me a little bit of what you have that you're working with and maybe i can help you you know more specifically uh let's see so take a look on uh julian says take a look on docker and docker compose save you ten dollars on droplet and run everything locally you know what docker is a good idea i probably maybe we at some point should end up doing things with docker i'm just going to keep going with what i'm doing right now just to to save time but i think that is actually a great idea uh to use docker for something like this uh if you don't know what docker is uh it's a way to to set up um i guess you'd maybe call it something like a virtual server that can run on your machine it can be copied and so basically you have this um identical environment anywhere you put that that docker container so on the server on your local machine on someone else's local machine no matter what whether you're running uh linux mac windows no matter what type of server uh you would have an identical environment within that container so it's really cool but i don't i really don't want to try to set it up here um during the stream at least not during this stream maybe in the future one okay uh john boyce says i'll be interested in seeing how to use an api to import data into a new database okay so that's basically my idea now um so we did we x we did export the data so let's do this so we exported that data where's it at oh over here and let's go over yeah so we've exported all our data into this gigantic json file so what i was thinking was let's do um so i lost my train of thought i was reading something in the live chat apologies um vazquin says hello from spain hey how's it going thanks for joining us uh john hanson says in order to have consistent html content do you have to keep the styles simplified would it not be best to build a template in wordpress that all users need to use to submit with um yeah it'll be well i mean we'll you'll see when we get to that part it'll be similar to the way we've done things with pulling data from the wordpress api and that will give users um fields certain fields to fill out with um like validation on those fields so they will only be able to put in certain things that we want them to put in and they'll probably it'll most likely be some sort of approval process as well so we'll have you know student workers doing this but uh unless they're experienced they won't just be able to you know directly publish anything so there'll be some checks on what you know what kind of goes through there all right so here's what i'm thinking we create a and i'll probably do this i suppose in node because that's what i where i would know how to do this with let me know if there's a better way to do this if we could do it like you know straight from the command line or like a bash script or something maybe that'll be faster but what we would what we would do is we would grab all the sorry i think i just went off camera so lean back uh we'll we would grab just like we were hitting an api endpoint right we would grab data from this json file pull it in we'd iterate over that and each time we'd iterate over that we would call this api endpoint and we would post it because i'm it i don't know if there's a way to bulk do post yeah so unless we find some way to do bulk edition of posts with the api we will have to do it one by one but it would iterate through that and then using this it would send a post request to our site so that's how the flow of data would go um from sql server to json um pull the json into node send it as a post request to the wordpress api and then the wordpress api would insert that into a my sql database underneath the wp post table the nice thing that i like about this is that potentially like we're going to have differences between the the fields that we have here and what we have in our other other database so um for instance you know when we have you know not all these match up properly i don't even know if these dates are in the right format right but what we could do is when we do that iteration every time we pull in data from the json file we could have you know some mutations of the data going on uh so we could have something that like and this is a prime example our column where it has content type which i can't find right now here we go content type i don't want the post type to be one in wordpress right it needs to be a string a name of that post type so we could have something in there that would check if content type is one then make the field post type i'm assuming there's a field called post type in here somewhere um i don't know what to find it um either have to find it or we may have to modify the api yeah we may have to modify the api not a problem we don't need to do that right now so what we either do is download a readymade plugin that can handle that or we can just write a plugin ourselves probably depends on i don't know does anybody really want to go through writing a php plugin not today but in the future um a future stream let me know i'll think about it uh maybe we'll do that uh anyway it would change that data so anytime let's say the content type was one instead it would make the the post type for wordpress i don't know um let's say faculty members right because we would have a post type for faculty members so we could display their bios and stuff on on the page so right does that make sense um i don't know uh let me know if it doesn't make any sense at all it'll probably make sense once we do it um so let's let me think where should we run this suppose we could run this right on our local machine right is there any reason why we couldn't we have node on this machine we could most certainly make a node a javascript file run it in node and it could handle all that uh the only thing i'm worried about slightly is i mean let's say we add like 9000 posts can the wordpress api handle that much all at once especially on a 10 droplet i don't know we could maybe set a timeout and um just let it go for a long time uh or i'm sorry uh you know what i mean like an interval right so it would only try to send a post i don't know every 10 seconds or something right that should be enough time all right so let me catch up here on the live chat quickly and make sure i'm on the right track here okay so nick has clarified sql server management studio is an integrated environment for managing any sql infrastructure you can use it to access configure manage administer and develop all components of uh sql server okay that's cool i may uh look into that then at some point maybe after the stream today or sometime tomorrow if i can okay alberto says it sounds pretty easy to use the api since we already have the json file yeah as soon as i saw that i could export it to json in one click that was immediately what i thought about was just use the api um console snippets okay nick says but if you're focused on t sequel um microsoft um sql operation studio is better for some good code snippets customizable server and database dashboards okay um ein bishn says uh what are you using to call and store uh in the database um this so this is what i'm using i i assume this is what you're asking about correct me if i'm wrong this is microsoft's sql operations studio and i just found out about it yesterday but it's an electron uh app so it runs as a desktop app and i like it so far i don't really have much to compare it to the only other thing even remotely like this that i've used is like php my admin or whatever it's called uh and so far i like this a lot better okay so post types is on the left column oh okay cool thank you um daniel notice post types on the left column here interesting so example requests i don't get em list types retrieve a type oh you know what here's what i think we can do i'm not 100 sure that we could do this by default we still may need a plugin but potentially we could as long as we create the post type yeah we should be able to do this so i don't know how many of you were watched the last time we created a custom wordpress plugin but we with that plugin we created custom post types and then we enabled them to use the wordpress api and that's how we got data from them i'm assuming that if we enable the api we enable all of it so we can also pass data in so what we would end up doing is let me zoom in instead of for those types that aren't posts which most of them won't actually be post because we're not even going to have a blog on the site there'll be something else so it would be wp v2 and then here we would say right and that would be the name of the type so it wouldn't be post and then a type over here it would be an entirely different uh word right here so i'm i'm almost positive that that will work and great all right great and uh so uh daniel thank you so much for mentioning that because now once i saw it it all came back to me it has been a little while since we've worked with the wordpress api let's see uh um says it the alternative uh i'm paraphrasing some uh hope you don't mind alberto see the alternative to uh doing it through the api like i just described would be generating uh the table uh and inserting data scripts and then potentially modifying the file to match the mysql syntax so umberto yeah for me trying to think about doing that i have no idea i'd have to look up every step of the way but i am very familiar uh with the wordpress api so even if the wordpress api wouldn't be the ideal way to do it for our purposes right now and for my capabilities it's probably gonna end up being the shortest way to do it let's see uh mike wes if all the data was in that one table yeah pretty much yeah um so this table a lot of rows i don't want if this number down here is the correct numbers 9683 rows so this is it the the content table i mean as it seems has all the content for the site uh we can check out some of the other tables as well let's see oops where was it at there we go um so there are quite a lot of tables here so let's just check it out quickly uh that way you know some of you who maybe are um more familiar there we go i'll make this obscenely big for a minute just so you all can see um so a lot of these tables i imagine are are pretty much empty because we don't actually use any of those features on the on the site right so we have uh request template we don't have to worry about any of the template stuff because that's not being carried over any user stuff we don't have to worry about most a lot of the users aren't even working here anymore because they're student workers and they've graduated uh status same way like approval things assets i don't think we'll worry about assets events i might have to check out this content events because we have used some of their event things but the thing with the events is once the event happens it expires and we don't really need it anymore so we may not even bother pulling in events because we don't really need the old events why i take that back we might just export the um the json for the events but we won't while they're putting it in uh the wordpress installation because we won't need them it might be nice to have them all right cool so my um the uh the accountant here that's franciscan university of steubenville that just uh came into live chat i'm pretty sure that's um brian who works here with me he's a full stack developer so uh brian says the he knows a lot more about the content than i do so uh it seems that we don't need to worry about the events um rook asks how big the entire database uh is i don't really know but um the database uh guy from it who's really nice guy and came over and helped me this morning he said that 80 of the size of the database is in the um the versions so like the archive which i think is it it saves a history of all the changes which we don't need any of that so we could we don't have to worry about 80 percent of the stuff in here for sure and then of the twenty percent that's left over most of it is in this content um table here so like i said the content table is really the vast majority of all we need to worry about let's see calendar i don't think we yet we use the calendar we only use member subscriptions yeah this kind of thing device configuration stuff we won't need i don't know that we use the categories extensively enough they'll change we don't need that this is the content uh table that we have open right now and so this is just some some stats and things we don't need any of that is it content history maybe it's content history that's that's quite large as well so coupon currency customers we don't do any ecommerce yeah i think we are we're not going to need these uh most of these sorry i'm scrolling through pretty quickly i'm not sure if y'all can even see i'll definitely run this by i'll have um uh brian take a look at it since he knows more about the site and probably my boss as well just to scan through and see if there's anything else that looks like it might be something we need but it does not look like it okay let's see uh immission says is your data stored in wordpress and that's why you need to use the wordpress api now i want to put it into wordpress so that's why we're using the wordpress api uh michael asks is it an archive uh or a backup um yeah it's it it's a copy of the current database that's in use with you know we just have readonly access to it daniel says not like eight gigabytes in a comments table so you're good yeah we don't have comments enabled anywhere so we don't have to worry about it okay all right so i think we're good michael s how often do you do the backup i have no idea because we don't we don't handle the backups um i t if there are backups it handles them so i i don't really know this backup was made uh very recently i think within the last few days okay let me check the time and then see what we can accomplish okay let's just take a look let's take a look what we need you know what we could maybe uh start to write some of the node uh code but we can't run it because i can't remember the password that i used to log in here uh so it's not it's not going to work unless i can can remember this password um it's possible that it just wouldn't let me log in because i was trying to create something so i guess we can make some of the uh yeah we can do some of the code we can test it out with the password as i think it is and then if it doesn't work it doesn't work we'll um i'll wait till i get my other account we'll go back to it see michael says are you hiring i have to work remotely though unfortunately we're not uh we don't hire remote workers uh if we did i'd probably be sitting at my house right now um but uh yeah if we ever i hope that we can start to hire remote at some point uh at least for developers and if we do start that i will definitely let all of you know uh in the stream uh julian says i recommend to look on the wpcli put the content of each post into a file then create posts from the content wp post create post context first category and do it in bulk okay that's actually that's not a bad idea uh my question then would be though uh assuming that we have to manipulate some of the data and change it would it be i'm just at some point we'll have to do that right so would it make it easier to do it like that um i'll have to look into it more i suppose i think right now it is worth it to um do do a little bit of stuff in node just right now uh just to get an idea of you know is is this even possible all right so let's go to one of our editors here since we're dealing with microsoft stuff let's let's bring up uh let's use visual studio code and i have our electron project up but for now i'm just going to open a new file and let's pull in let's yeah let's save this and in projects and let's call this let's do a new folder tv migration create and then within here we'll just call this um migrate.js okay great what message am i getting here whoa excellent for single drops and globally okay i'm not really worried about eslant right now um let's see uh nick s does the database have any kind of uh mapping tables i i don't really know to be entirely honest i'm not even sure what the mapping tables are envision says isn't it isn't it great that you can broadcast at work how boring would it be otherwise yeah it does make things a little bit more exciting when everybody can see me mess up all right so actually let me take i could probably pull some of our our node code that we've used earlier let me think if we used now i'm thinking we need to import and use uh i'd like to use node fetch to somebody being more complicated than i'd hoped um all right well i can at the very least plan out what we're gonna do and then we can go from there see if we can code anything out so we need to this um we should probably um try again okay um so this is my basic plan uh we'll get the data uh we'll probably can run a filter if we really wanted to which it may end up being useful to just to run the filter we could either filter here or we could go over here and when we actually do our query we could try to only select things that we want we'll get a much smaller file so i'm thinking of things that you know inactive content um you know content that's expired or just content that we have no intention to to bring over to the new site so however we do it here or here whatever we want to do we do need to filter out the stuff we don't need no sense in making those posts if we don't want them anymore and then we'll go through uh make the changes like we talked about so that the data is in the correct format that we need to send it so then we'll send that post request and the last part here i think it'd be a good idea obviously to check for errors right we'll get a message back saying whether or not we succeeded in our request to um to make a new post so if it fails you know possibly we would we could try again you know wait a certain amount of time try again uh and then you know if it fails twice at that point we can just log log the id that way we can we have a record then of you know what didn't go over i'm hoping that the list of stuff that didn't work will be small if it's a long list that's going to be a pain okay so umberto is saying uh so i think it's better to modify that in in the node uh code so here uh with javascript uh doing it in one place uh rather than find and replace in a text file that's cool i agree and i'm i'm much more comfortable editing it you know through uh through note i mean think about how many times we've done the same thing you know in our react components when we've made an api call and change things in the data before we rendered it right so this will be very familiar to us let's see next thing get the data from the json with bulk and uh open row set all right nick i'm interested in hearing more about that because i'm not exactly sure what what the benefit is from that or or anything but uh if you could explain it a little bit more to me since i'm my knowledge of this kind of thing is very limited i would i would appreciate it now daniel says unless you've got that client that says i need everything yeah luckily my boss is perfectly fine with getting rid of all the stuff that we don't need like i said i think it's worthwhile to save everything in at the very least save it in json format and then you know keep backups of that so that at some point if we ever really need to find a piece of content it wouldn't be that hard to just search for it um i don't want to keep these databases alive you know as is anywhere because that takes up you know the this website these databases are hosted physically on campus by the it department so it would save them time and money they'll be able to reuse those servers for other things if we could just completely get rid of it all so that's the plan so any backups that we want i guess at first we could do a test yeah let's do a test all right let me see what time first let's see i'm going to bring in node fetch because i like to use fetch i'm not really interested in doing it any other way let's see uh i guess i'll have to um init this project then with all right let's go in in the console this is kind of why i i'm wondering whether or not i should uh i should do this there we go um let's see the immigration there we go what if i could just type yarn will it in it all right there we go question name db yeah that's good that's good that's good issue whatever all this stuff i guess doesn't even really matter yep true right there we go okay so now let's do yarn add npm i mean node okay wonderful oops let's go with okay um let's pull in that um that file and put it in the right spot so right now we just have that in documents and i want it in a project so sorry this is really small probably hard to see but let's just pull this over here we called it results dot json yes so let's pull that over and i'm not even going to make folders this is so this is basic we don't even need folders for this i am going to make it lower case because it bothers me um there it is we have our results json great all right so let's go edge no you like look at an example it's been so long since i've actually wrote one of these from scratch all right let's check this out trying to get the last project where we did this i think we've used this in pretty much every project yeah um we've done this with the bulletin the react version of the bulletin so let's check that out and we're using node fetch there all right cool i'm going to copy and paste this over here we've got quite a lot going on here so um we need let's do all right i'll explain a little bit of this so do you even need this no we don't need all of this so let's get rid of this uh we can get rid of that i don't like the semicolons so let's get rid of this fetch okay this should be what we need um no it's should just be actually we don't even need most of this all right yeah i think we're doing we're doing very different things uh okay um now obviously we can't use async await unless i i put in let me check back here and make sure i'm not doing something ridiculous okay yeah let's put back in this and we'll take this out there we go um leave that on another line right now and then let's return let's go with actually you know what i think we did this exact thing in a previous project which project was it it's the resource center let's check it out it's really nice to have all these projects that we've done uh to just be able to go back to and say oh we've we've done that all right so it wasn't we weren't doing it in node but it should still work the same all right let's do this oops imports just call this data from there we go now i don't even need to worry about any of this stuff yet um let's get rid of it but then let's set it down here because we will be using fetch for our post request but for now we can just grab the data let's see tabs okay all right so let's just go just to make sure that we're actually getting the data let's console blog and let's go data where's my format okay all right i'm not sure if this will work but it's worth a shot let's go back to our terminal wherever that is okay um so we're in here let's go node whoa let me make this bigger sorry everybody all right syntax error import unexpected imports oh shoot maybe i can't use that syntax in here let's do ah it's automatically is it automatically putting in semicolons i thought i keep kept taking it out of there i need to change my settings um okay let's try this now nope can i find modular results oh shoot it's not a module okay we got to change this and make it a module so where's our all right i if i just double click it in here it should work language results it's gonna be a huge file wow wow oh did everyone just see that speed i'm really impressed i mean this is gigantic file wow good job visual studio code why do i why is this not highlighted properly it should be um interesting okay um so let's do data and let's change this because now it's going to be a javascript file and we're going to change i need to rename it why can i not rename this thing all right let's just rename it from here then great deleted from disk great there we go let's do i don't know if i'm not getting highlighting because the file's just too big and it's taking forever i don't know all right let me check back here for a second okay cool all right nick i see uh nick explained a lot more about what he's talking thanks nick i'm definitely gonna look into um more of what you're talking about okay thanks umberto i i understand so umberto was explaining a little bit more about he's talking about us i appreciate that i'm not even sure if this is correct syntax and will work but i'll give it a shot if it's not if it doesn't work out then i'll double check actually what am i thinking i can definitely double check right now because i have a data file that has the same thing on my other screen that we used for project what was it was it project i can't remember i think project three whatever the resource center react project was uh yep that's it that is the correct syntax see i should have just tried it and then i would have looked uh more intelligent i suppose all right so let's let's do this though uh let's go back into here oops nope that wasn't it we'll go into here and you know we really need what happened before i tried to all right let's just see if this if this actually will work this is not exactly how i was bringing in bringing it in no it shouldn't this is probably not gonna work but it'll only take a second to run it again yeah it doesn't work so since yes let's see cannot find results that you have now should i throw in a dot slash is it could it be that easy whoa yes all right cool export costs all right so now it's upset that i'm exporting it all right all right can you use can i use import in node i don't know let's just try it oops not required all right let's try that out let's switch the token import okay i guess i can't i can't use that with node um all right so cool so rook saying module exports and node not x okay cool um let's see i don't know i just suck so uh christian um said you might also have some fun coming up with uh the fact that all the numbers seem to have been parsed to strings didn't notice that before but you are correct all right module dot exports and node not export all right so let's switch it up then um so um rook is this what you're saying to do it more like this module exports and then what i have to do module import i should just look up the syntax i don't know what i'm that's really important oh okay so i got the uh all right let's see also import this is not letting me no that's not all right i'm gonna have to look this up uh moto exports in the results cs file and then dot require in the migrate okay so i do have to do require all right so let's just jump back here oops there we go all right require and then module exports all right let's see see what this is done oops exports okay thank you rook so much this is super helpful so rook is actually typing in the correct syntax that i need whoops i'm in the wrong file so i don't need all this i can just do module exports and then that should work awesome thanks again rook that was like super helpful whoa yeah check it out yes okay that part is working oh my goodness there's so much okay so i'm trying to scroll up so we can see the top okay so here's what we did if you remember our migrate people the wrong way or migraine.js file all it was doing was grabbing this the data from our json data which now is is in a javascript file so it's just an array of objects right and i just wanted to console log the first uh object in that array and it has done that right we could double check this in fact is that that object so we we have all of this right awesome awesome and we could potentially to take it a step further um just to test out some of the things that we want to do let's go with let's just see if this works so i want to grab this content id and let's try this i still want to do a console log but first i want to do data.filter and we want to do object and we're going to do object dots what was that field called content id content id equals let's go whoops i already copied that there we go no that's not it huh it's just not gonna work for me here i'm gonna have to do it like this man i've been reviewing other people's code for way too long instead of writing it from scratch i've been spoiled by you all i can't remember any syntax all right let's just say that the goal is i should get back the same result as i had before but what we're doing now is making sure that we can filter this stuff out so it's basic it should work assuming i got the syntax right which is i don't know we'll see this should okay um so we didn't pass this i'm doing wrong i need uh all right let's do it like this post post all right see if that works yeah that worked okay i always get confused with filter and and how to access what it returns but i know if i use filter and map together it always works um okay sorry rick i just saw that now so um i did not have to do it that way but it it it proved the point of at that point what we've done there is we're actually able to filter out and just get one of those now we obviously wouldn't want to filter by content id right but we would want to filter by some of those other fields that we had talked about before um such as uh like post type or whatever the equivalent is called i think it's called content type or something yeah we might oh sorry you might want to filter by date you know different things like that i'm going to have to give so i'm not going to code out the rest of this because it's about time for me to leave and go home um so i'm not going to code the rest but you can see basically how it's how it's going to work right so this part here should not be an issue we just follow the instructions on the api documentation and that should you know it should work this is basically we've already done everything that we want to do for the most part it's just a matter of making it a bit more complex doing more filtering uh and then you know mutating you know the data somewhat um yeah so we actually didn't need to get the data so that part for whatever crazy reason i was attempting to use fetch to get local data that was just going to be in a static file so thank you for bearing patiently with me i really need to change this i can't stand these semicolons but anyway thank you for being patiently with me as i shrugged through that very basic node file there um but it's it it basically works and i was really worried about that size of that that json file like what the heck is going to happen when i run this and you saw it it didn't take very long so i i'm i have a lot more confidence now it may not seem like it but we've come very very far uh in terms of having a clear idea now of how exactly we can transfer the data and you know at least into wordpress so it still remains to be seen whether or not we will go with wordpress but right now it's definitely the front runner for the cms and i can't really can't afford to wait too much longer to make a decision so wordpress might end up being just the default because i haven't found anything else that's that i like to use so i'd say it's a pretty good possibility that we're going to be doing we're going with wordpress at this point and now we know at least from the first part you know we can be pretty confident that this is going to work um yeah so anyway i definitely got a lot done there's a lot i can go tell my boss now that has been tested and that works and uh he he will be very happy with that as well as you know a lot of the other people here involved in the project will be very relieved because this was the big question it was always you know i can definitely get this done by february assuming that we can get the data transferred over that was always the big if that was the caveat so now it looks like that'll work out so i'm very confident we can get this project delivered on time okay cool brian says keystone.js is a js based cms i have looked at keystone before i need to look at it a little bit more in depth and maybe actually install it and play with it the last time i checked it was i'll have to double check it's been a while it's been a while since i've used it i'll have to check it out again i'm sure it's been updated since the last time i i really kind of dug into it so um i will definitely check that out very soon because we need to make a decision on this but anyway thank you so much for sticking around there's actually not that many people left in the stream um it seems that databases is not a popular topic for videos based on the amount of people that came in uh lower than normal but you know to all 16 of you who have stuck around to the end thank you very much i should be back tomorrow i i haven't really checked my schedule for tomorrow so hopefully i can stream at my normal time uh thank you so much again uh i'm i'm probably look tired right now but i am actually really happy this is a big relief that we figured so much of this out and i i don't think i couldn't have could have got this far this fast without your help so most likely i'll i'll be back tomorrow and um until then have a wonderful day