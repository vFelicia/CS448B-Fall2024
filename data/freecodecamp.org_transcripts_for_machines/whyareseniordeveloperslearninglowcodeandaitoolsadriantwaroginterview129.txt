we had like a a brand new son in the world I wasn't sleeping we had a huge mortgage there was so many debts it was a very very stressful time and I was just thinking like one day I have to tell my son like what do I do as a job and I thought well I want to tell him that I followed my passions and I did something I was really excited about and so that's one of the reasons as well that I decided to take the risk leave what I knew for like 10 years of doing it and jump into web that I've never done before welcome back to the freec Cod Camp podcast I'm Quincy Larson teacher and founder of freecodecamp.org each week we're bringing you Insight from developers Founders and ambitious people getting into Tech and this week we are talking with none of other than Adrien torog developer designer and teacher of some of the most popular courses on using low code tools no code tools AI tools again he's a software engineer who's gone out of his way to learn these new kind of like contemporary power tools and apply them to get things done faster and he's going to be able to share some insight into how he does that Adrien welcome to the podcast hey Quincy uh thanks for having me on I'm really excited to do this cuz I'm working on some really cool stuff so I can't wait to share it but uh yeah let's get into it yeah man well uh you and I have known each other since really like I'm always proud of like scouting the talent as it's emerging you know like I saw very early on like wow this guy the production value of his courses the caliber of his teaching skills and his communication ability and just the charm of your courses like really struck me and so we are proud to have published several of your courses over the years on the Freo Camp YouTube channel and and I am proud to have learned quite a bit from you just like you know reading your articles and watching your videos and stuff so that's I wanted to take an opportunity yeah I wanted to take an opportunity to learn a little bit more about you in like your developer origin story uh I know you have like a computer science degree and everything but so many things about you are very unconventional like the way you approach technology you're you're like the extreme pragmatist in terms of like I just want to get stuff done you like all the talk about out the window all the you know um all the sacred rules are uh you know thrown onto the Altar and like set of Blaze yeah maybe you could talk about just and also another cool thing about you you grew up in Perth right Australia like yeah probably most isolated geog place in the whole world right yeah it's I mean geographically I don't think you could get farther from Silicon Valley yeah it's rough it's rough so got to be on the cloud essentially but uh YouTube's been a great place to be able to connect and meet people like you for example so it's been great yeah man well uh I'm excited to learn a little bit about your kind of developer origin story and how you guys started like do you remember as a kid like your first interactions with computers all right yeah I do um so when I was in Primary School my first uh use of computers was there was only one computer in the entire School and me being myself like I I was always on there using it and playing around in I think it was like uh Doss back then and just trying to like run commands or like unzip things and show them to my classmates so I was already like across all of that and I I I can see myself from a young kid enjoying that and so as I was in uh High School obviously information Tech was like kind of my favorite subject I scored 100% for everything and as I went to high school like that's pretty much what I was doing as well I was just enjoying that kind of stuff going to the library researching about it and at one point I have to design um decide a career path uh cuz I was going to college but my parents actually said don't do programming or web or anything there's no jobs in there it was still early days internet wasn't really that popular and they said I should do security because you know everyone will be all about computer security the money will be there and I was wasn't too sure but I did computer security and computer science at college and so I left webdev on the side and programming on the side and instead of doing the traditional route where people go to college and they learn about it I kind of treated it more like a hobby something I did on the side so like when Wikipedia came out I made my own Wikipedia clone I learned how to like code in PHP and I was learning all those Basics HTML CSS all the way back then like 10 15 years ago and and it was great it was really fun because it wasn't something I was studying it wasn't something I was going to work in cuz I was still learning to do computer science and I slowly pivoted towards it like doing it help desk installing Windows and servers and stuff like that and so web and programming was still always a hobby and I kept playing around with it I I kept learning like the latest JavaScript U methodologies and latest um implementations of esm or whatever it was called back then but um and then B Babel came across as well or Babel I think people call it Babble I was just reading I was just reading because I was an Enthusiast on that I just loved it and I had studied so much of programming that when I was in it and I wasn't enjoying it for um because I had I had graduated by that point and I got into the workplace I was working in it I didn't really like it cuz I was always dealing with problems always trying to like oh my computer doesn't turn on or this doesn't work and people were always grumpy and at one point I left that job cuz I was made redundant and I joined a marketing company when you were made redundant you were like laid off essentially or how does that uh well not really what ended up happening was um there was a downturn in the economy and people were asking for voluntary redundancies and so I asked I had been there for like five or six years already so I asked for a volunt redundancy so I had a bit of a pay um like a bit of a surplus like a safety net of cash there so I could try out webd and I felt like I'm going to have to start at the very beginning because I've got no experience whatsoever I have no idea what I'm doing I've never worked in web dev Dev before and strangely enough the passion of working at as a hobby for so many years actually meant that when I went into doing web dev doing like basic web websites from the ground up just coding them I was kind of good at it and I also still enjoyed doing it it was still like mentally it's like a hobby for me and so I found it amazing and not only that like within half a year of working at that marketing company they asked me to be one of the directors and buy into the company to be a shareholder and own a third of the company which I did like a partner and yeah I I became a partner exactly and so so suddenly this pivot of like swapping from it to web became amazing like I I felt like I was doing what I enjoyed every single day so for me I didn't traditionally study anything it was more like a hobbying hobby kind of thing where I was just following up on the latest news and so yeah I worked in that company for a few years and uh Co happened so when Co happened um I I'm want to stop you there because I just want to unpack some of the things that uh you shared cuz Co like I don't know anybody who made better use of that uh time than you uh and I've talked to a lot of people who were very busy including myself during that period making the most of the lockdowns and of the sudden surge in online like the interest in online learning and things like that uh we were very well positioned when we went into that I want to absolutely talk about that I do want to share a couple quick things about what you just said first of all um it's so cool how you were able to get out of you know it uh internet things and no it's not really internet things that's that's a joke if you've ever seen the IT Crowd I have I have yeah Information Technology like you were able to get out of like that kind of like help desk type uh you know often like looked at as is kind of like the I mean I don't want to slight anybody who's in it currently but many people are probably listening to this wanting to get into actual software development and things like that and and they're familiar with the uh you know the lack of respect that people generally have like you're the guy who fixes my computer do it you know yeah that's how it was really yeah yeah so you you worked you worked doing that for did you say six years uh six years in that company and then two years in Consulting beforehand and then another two years in the schooling system before that so probably like a decade 10 years fixing people's computers basically and setting up networks and stuff like that right did you have any of those certifications like the all of them micros ones and the VMware ones and the um Cisco ones yeah all of those back in the day the mcps and um Cisco asserts and whatnot okay wow so you like you were like a literal it guy so to speak like that I Grew From like to level two network engineer to level three system engineer to the senior Sy engineer yeah I did all of that so it wasn't how accurate go yeah how accurate to your daytoday life was the show the IT Crowd the the British comedy did you ever watch that yeah yeah yeah I did it's um when you're talking with people it definitely feels like that kind of an experience where like they don't pluck in a cable and that's why something's not working and 90% of problems are fixed when you just turn something on and off even now today my camera wasn't working and so I rebooted my computer and then my camera's working working so it's like that that's so cool so for sure uh uh you talked about dos and I have to share this because I just learned this did you know that dos didn't originally stand for dis operating system okay it was originally called qos when Microsoft bought it and that stood for quick and dirty operating system oh because it was created it was just like thrown together very quickly and of course it became like this integral part of like you know I guess personal computers in general like pretty much every computer who that had Windows which was built on top of Dos but it was originally just some software that Microsoft purchased from this developer solo Dev who just built it because they were in a hurry to get an operating system together it was called quick and dirty dos and they thought we're not going to be able to sell something with dirty to the uh you know Enterprises of the world they don't want dirty software they want of course so they just remove the quick and dirty and they yeah they changed the uh quick and dirty operating system to Disk Operating System just to make it sound very generic kind of IBM like but uh yeah I just learned that and I wanted to share that with uh everybody listening because it's it's kind of a cool story TI but uh your company did like probably one of the dumbest things any company can do and that's basically like hey we don't have enough you know money to keep everybody on the staff if you voluntarily leave we'll give you like a onetime payout or something like that right yeah think about what is going to happen when you do that uh like any managers in the audience are probably like you know their hair is standing up on their arms thinking about like uh any company well this was a big company though it had like hundreds and hundreds of employees if I left it didn't really matter is likely to happen what is likely to happen sorry I hope I'm not interrupting we have a huge time difference between the two of us uh like again you're like as far geographically there's probably at least like you know half a second of latency between you and me right now um so think about what happens when you say hey uh anybody who wants to can leave and you'll get like a onetime payout like who is going to leave your company is it going to be the weakest people on the team who phoned in every day and like they're not going to want to go get on the job market they're not going to be confident in their skills who's going to take the payout and leave the Adrien twarog of the world who are like you know uh 10x developers like rock stars you know whatever you want to call them basically but people who get things done and are like passionate about what they're doing and are constantly expanding their skills and stuff those are the people that are going to walk out the door if you essentially bribe them to leave just so you can reduce your uh your headcount and your payroll and stuff so uh that is like basically the dumbest HR decision you can make like in my opinion as a manager if we ever got in a situation where we needed to do layoffs and you know knock on wood free C Camp's never had to do that and we we've like structured the entire thing like where we just save a ton of money and we keep costs as low as possible so we can keep all our instructional staff all our uh um you know all of our uh engineering team like in place uh but we would never do that we would just have those hard conversations and choose people and let them go because yeah like what your company basically did was they ensured that only the weakest people stay at the company and what happened to that company are they are they still yeah they're a huge organization so like they're a chamber of commerce essentially and so every single business in Perth is pretty much a member of them so they can wether like the Australian chamber like we have American Chamber of Commerce the West Australian Chamber of Commerce ah okay cool well I'm glad they're still around and that this wasn't like a fatal mistake but I do believe just extremely limited knowledge of the situation I think this is always a mistake and if your management ever offers you money to like leave the company you should take that money should run cuz that sign of like uh first of all ineptitude in the management and it's also uh you've got you can absolutely go out and get better opportunities right um so and to add to that story as well it wasn't as easy as I make it sound at that point in time like I had no savings whatsoever um my wife and I had just gave birth to oh my wife gave birth to our son and so we had like a a brand new son in the world I was wasn't sleeping we had a huge mortgage there was so many debts it was a very very stressful time and I was just thinking like one day I have to tell my son like what do I do as a job and I thought well I want to tell him that I followed my passions and I did something I was really excited about and so that's one of the reasons as well that I decided to take the risk leave what I knew for like 10 years of doing it and jump into web that I've never done before so it yeah it was a very tough decision but like I'm really happy I did it yeah you followed your dreams man uh and I I want to like dig in a little bit more into those dreams cuz we just like you know got into your 30s basically very quickly probably uh maybe we can talk about um what those dreams were early on like you uh just inputting commands into Doss being kind of delighted and enthralled by just the most fundamental aspects of working with computers uh what were your dreams do you do you remember so I always like building ideas um whether they were little projects or little startups um I think the very first thing that I couldn't do was get some really cool games that were being released in Japan and so I figured out a way to get a like go to a Japanese website manually translated download their emulator and ROM and then run those games locally at my school computers and I'm like all right I figured out this like really complex solution and these games are still in Japanese but they're still fun to play and then after that I thought when I'm going to high school I wanted to build a little system that keeps all my notes for me basically OTE or one note today and later after that Wikipedia came out as well and then um after that I'm like all right what other ideas can I build so I always was kind of building ideas and I built them in private and sometimes I built the whole thing and I didn't know how to release it sometimes I built half of them but I was always this is the hobby side of things where I always was enjoying that process of creating things and programming let me do that so your passion for games LED you to like find these kind of cool workarounds with emulation and stuff like that uh I'm I'm obviously like like I can tell from your your background by the way I just want to compliment your background that's a real background that is not a green screen uh you can reach out and touch that YouTube uh 100,000 subscriber award you can touch that Pikachu yeah that is anybody who's listening to the audio version uh if you get a chance to check out the video version you can see his background but uh you know we we keep this like I intentionally keep the visuals to a minimum here so everybody who's listening to the audio version gets the full basically The Full Experience other than looking at me and whatever video game I've got like one of those three kingdom arcade games uh in the background right going so you don't have to just look at my face you can look at the cool video game in the background if you get tired of looking at my face uh but you've got a really rocking background so um I'm excited to hear that like you were into games early on and that kind of further fueled your passion for technology that is definitely a Common Thread among a lot of the people that we have on the free podcast is uh yeah like that's that I used to say that like the way that like most of the developers I talked to got into software development was through like a passion for games right doing something like uh just learning how to like you know do like a route on um like a like Super Nintendo uh SNES mini or something like that or learning how to uh sideload stuff onto like an Android phone and like be able to have hundreds of thousand of when I was in primary school no sorry High School I bought myself a pal like I worked a day job and bought myself one of the original like touch device Palms that HP released and so like I would load different software on yeah the PD I was like the only person in the entire school with one so that's pretty you they must have thought you were like a drug dealer or something what may expensive consumer electronics thing exactly exactly yeah but but you P you uh prioritize getting these kinds of tools because you enjoy technology exactly so even now like I love down um grabbing like the latest Oculus Rift or VR and seeing like how can I play around with it what can I do inside of there that isn't otherwise available um I like playing around with Raspberry Pi is or even just getting a projector and seeing if I can like connect up the Raspberry Pi to a projector and then just like run it on a solar panel or something like that it's just fun putting different ideas together like that so you have kind of like a recombinative uh approach to like technology like taking a bunch of offtheshelf things like almost modules and putting them together and uh we're going to talk a lot about that during this interview because you are a huge staunch advocate of using like low code tools no code tools AI tools to get things done and kind of like glue your custom code together or your custom code is rather gluing these powerful tools together um and building applications but it's like you're you're playing with power tools instead of you know Hammers and and saws um and that that is definitely the vibe I've gotten from you and a lot of what I know about lood I've learned from you oh thanks yeah no um look like when I used to so I love drones as well flying drones and everything and so like 5 10 years ago before DJI made prebuilt drones they would just sell you the kit and the flight computer and everything you'd have to Pro I would program my own flight computer connect it up to a controller configure the controller um solder all the components together and then learn to fly it right and so one of the things that I learned Lear early on is I learned a lot by doing that that it was a lot of fun but now it's so much easier when the Drone is built for you and everything set up and so if you think about npm and npm packages that's kind of the same thing they kind of solve problems for you and they're me ready for you to use and one step further from that is like the no code tools and low code tools they're ready for you to use so you don't have to rebuild the same thing from the ground up and that's why I've kind of always been at that bleeding edge of technology so whether it was back in the day like the programming whether it was the low code and whether it is AI now that's kind of like the Horizon I like to be across and the kind of content I like to do as well yeah and uh before we get too much into that like I I do want to talk about a little bit about your career progression after you left it uh again taking a big risk you said you had a mortgage you had a newborn son uh and wife wasn't working either it's just all on my shoulders for the for the salary so it was yeah aough decision entire fam's putting you know putting food on the table was down to you and your ability security if you work at a job for six years you have security there right and if you have a mortgage you know the bank looks at how long you've been working at a job if I just jump jobs to a new job from that job I go into a career I've never gone into so I'm at the very bottom and I take a salary cut where my salary basically gets cut in half from what I was working at so like before I was working on a about 80,000 and I dropped down to 40,000 a year so it was like a huge cut in salary so yeah it was a scary thing to do yeah I can only imagine uh and it sounds like you started at the bottom like can you describe what it was like arriving some guy uh you were probably in your late 20s early 30s at this point like showing up at the developer Bullpen like uh what was that what were those first few months like working as a developer um it was interesting cuz I was coming into this company replacing one of the other developers right and so he would normally spend one month to build a website and then I would come in now and I would build that entire website in a week same kind of website and I'm just like all right why did it take him a month to make it and so it was the very first time I had ever done it working properly in a job so then the next time I built the website built it in 5 days then the next time I build it in 4 days and the other guy was still building it he was now subcontracting for the company cuz he wanted to work somewhere else um he was still taking a month to do it and I was now taking 4 days to do it and so slowly over time I realized that like programming is a bit of a skill if you don't upskill you're always going to stay at the same time um place and I think this guy was set in his ways he wasn't developing his skill sets he was just kind of reusing what he knew and it was taking him a long time whereas I was always upskilling and that upskilling had a huge benefit over time and so that's why I was was a lot further ahead than him even though it was the very first job I ever worked at it was the very first few websites I have ever ever created just my hobbying and learning and always staying up to um base with what's happening in programming had me further ahead than him who had been working in it for 10 years yeah wow and it sounds like uh you you very much have like a growth mindset so to speak and uh you just proactively are out there absorbing I mean you use the term bleeding Edge earlier uh you like to stay right at at the at the for Forefront it's ahead of The Cutting Edge it's the bleeding edge C things might die or they might come to fruition like I remember when react came out for for the very first time and nobody was using it at all it was like so new that there wasn't even like a a release it was just like a thing on Facebook and I was already using it then and node came out and I'm like all right this is going to you sometimes you can just tell these are going to be the technologies that stay I was already at node at like 0.02 or whatever the release was early early on um and yeah building tools with it so it was it was great fun and it just meant that as I saw them progress and as each new change log came in I was reading every single line that was being released every new feature that was there um kind of like how bun is out there now and um Deno like as soon as that got released like I'm always there essentially yeah awesome shout out to the Deno subreddit which I'm the sole moderator of because I it's happened so many times I I may have told this story before like some new technology comes out and some big Corporation comes in and like squats the subreddit essentially so I was like I'll show them I'm going to get the D subredit so that no no bad actor can get it I I should probably do that more frequently when they announce new technologies go find the and I mean it wasn't just like I didn't just go and like oh I'd like the dental sub like any four character combination or something like that is probably going to be taken I had to go through this lengthy process with like the Reddit you know overlords to get it but I was able to get it um getting a domain essentially our nonprofits I have that one although I haven't really done anything with it uh because there most people just use r nonprofit but um sorry total tangent but so what you're saying is it's almost like you're you're like the venture capitalist of learning in terms of you know you're taking risky speculative you you're investing risky speculative amounts of time in learning these new tools which may or may not become mainstream uh you know for every for every uh nodejs there are like you know 20 different technologies that just like do you remember you know gulp well guess guess who yeah I do I was using that and guess who was using open AI two years before chat GPT came out this guy awesome I did use it a little bit with gpt2 uh like the public Edition the the the playground I think they called it back in the day and I was like just but it was a spectacle I wasn't actually using it to do any work I was just like isn't this cool you know but but you were you actually using it to get work done it and I would I would build applications on there for my marketing company to do things like generate ads that now like every company is trying to do that but back then there wasn't the appetite for that and in order to use their API for like one task you had to go through a safety checklist of like 20 Questions showing examples and your code to go through andove the use of something that's only 20 tokens 20 tokens was the limit which if you think about it that's like one or two sentences yeah was saying back then so limited and you can't have like it doesn't store stuff in memory like what gbt and these newer tools uh like I think Claude can hold like 100,000 tokens or something and it's context window uh so you were working with the most primordial primitive versions of these tools and you were still finding ways to use them yeah one of the cool ideas I had was um and this is something I built out and then sold was a micro auto complete and so because the context window was so small what I would do is I would grab the last um five paragraphs you wrote and then it would guess the next two words you're right and so it's almost like the auto complete you have in vs code but because it's only um guessing the next two words you have it's really quick it's like when you go on Gmail sometimes and you go hello and it just fill out hello you know Quincy and sometimes just fills out those two words but when you're writing a document sometimes that's useful and you could just hit tab tab tab tab tab tab tab and it wres out a sentence for you so I had to be creative in the ways that I would like utilize open AI back then yeah so getting in early with the tools I I want to get back to your uh your office like how did your bosses react seeing like wow this new kid is really fast at building stuff like what were your first uh how can we make more money for for this right so for them um they thought all right one they can do more sales so their sales pipeline increased but two it unfortunately it meant we can sell websites cheaper now because rather than 40 hours to make a website it only takes Adrian 8 hours to make a website and so instead of charging $10,000 for a webs it now will charge $2,000 for the for a website and so what ended up happening is the company doesn't actually makes more money I just get more busy with more work for the same amount of money and that was one of the issues I had I suppose working at the marketing company like it ended up being just me working a whole lot like I enjoyed programming but I didn't end up making any more money nor did the company make any more money so that's where I started thinking I need to think of other ways to to make money whether it is startup ideas or creative Endeavors or something I I was thinking what can I do and so that was always in the back of my uh mind and I started you know reaching out to friends and trying to see where can I get ideas for doing that yeah so how long were you with this company ultimately uh probably five years where you were now a partner for five years okay yeah so so five years and when do you remember when you left did you leave before the pandemic uh no aftera after um so go on you've got a question that I can hear it yeah yeah yeah like like we're getting we're ramping up to the the main course of the Adrien toog Saga which is the pandemic but uh like so during this time you're you're kind of feeling I mean it sounds like they probably could have found some happy medium between charging $10,000 of or a website in charging 2,000 and maybe it was closer to like 5,000 that the market would have borne I don't know but it it feels like just be you know they should have adjusted the rates to reflect the increased productivity uh that you were doing and were you teaching anybody else or were you like the sole developer at this company so first year I was working with them um and they saw you know I'm a pretty good person to work with second year I became a partner um and I owned a portion of the business third year um we started hiring stuff we grew the team to 10 people um then the fourth year the pandemic happened so like the third year I had like I actually hired two or three developers at that point in time so I was actually mentoring people um and then the fourth year Co happened so we had to let go of those stuff because we didn't have the money for it and when Co hit and we're were all working from home and that's when I started YouTube yeah and again as I said earlier like nobody that I know made better use of that time than you did in terms of just establish yourself as a teacher yeah tell me and I decided I watched everyone on YouTube and they're all making tutorials so the way I decided to make my content was how about I show people real websites which I'm working at my company and since I'm director I can you know decide what I'm going to publish or not how about I show them real websites I'm building for clients and they can get an idea of this and I'll also turn them into templates so that they can download themselves and utilize for their own clients and so every every day I was working and every day I was recording myself work and so I had videos every day come out um I think I made about 300 videos in the year of Co which is absolutely insane um but that was pretty much just me every day going to work doing my work recording myself and then collecting whatever the gold nuggets are from that and then publishing it and then I finish my workday and then I'd do the next work day and I'd record myself while I'm doing my work and publish a video so I would not only get my work done but I'd also have video content out there and grow that YouTube channel which was a great time to do yeah man 301 year so basically like pretty much every day uh and and this is while you had you know a youngish child exactly it still meant like I was still doing my um Family responsibility still playing with my son going out to family events and then at the end of the day everyone's asleep at 700 p.m. I'm like all right well I've got an hour or two I'm going to record a tutorial and then I'm going to publish it and so even Saturdays and Sundays I would knock those out as well wow and just to let everybody know who's watching this again you're in Perth here in Texas it is 946 a.m. when we're recording this like what time is it over there uh it's closing into 1100 p.m. yeah so you it sounds like you're a night ow or you've acclimated to being able to you know work late at night um in a way that most are not able to a lot of coffee but um a r what time do you stop drinking coffee just out of curiosity oh um I usually like to break it up between meals so like one before breakfast one um one after lunch and then one after dinner so interesting so you're like literally drinking coffee after dinner 6 p.m. you're drinking coffee yeah yeah what time do you usually go to bed um around 11 or 12 oh okay so so like we're we're cring up against your your bedtime so you're yeah uh so if I reach to the screen and kind of like shake your shoulder to this is the time for lighting cuz I don't have any sun or anything coming through no harsh lights I can like set up the scene really well for the backdrop and everything like that man your lighting approach is totally different like I'm in front of like big you know Windows basically and I just use all natural lighting uh I don't know I I just like like having through 1 two three four five six seven eight nine 10 10 lights that I control wow so it's like a like a moon landing over there you it looks like a complete mess outside of the frame but inside of the frame it looks great yeah man I also have a fog machine as well to add like a little bit of that Haze in the background yeah really you have you so you're you're actually like adding texture to the background with it also this low Rand the lights which is nice so you'll find that a lot of people that do cinematic scene setups that's they always have a hazer a hazer that sounds like something that only a fraternity would have Okay so let's talk about um let's talk let's talk about like your daytoday workflow during Co because I mean you establish that at night you're I mean you're drinking coffee all day you're you're doing normal family stuff but you're you're also you know excusing yourself from dinner with your thing of coffee going into your your workshop and you're recording tutorials you're publishing them and you're not just like when you publish on YouTube YouTube is not just like oh I'll just upload the video like you got to do some editing probably you have to like come up with a fun thumbnail uh thumbnail is very important uh you'll see a lot of experimentation with the thumbnails uh on uh YouTube and thanks to Bo KS uh who runs the free cocain YouTube for for coming up with some of these silly thumbnails um but uh yeah the getting people to actually click through and watch your video that's important so originally like everybody starts up uploading and maybe YouTube will throw you like three or five views or something like that right like I frequently watch videos that have like no views that sounds weird but like sometimes I'll be like the first person to watch a video and I'll be like wow it's like so cool it's it's cool to be like in the ground floor but um yeah like like what was your early YouTube growth like so it it's a tricky thing because when I came in it felt like the whole scene was so saturated there are so many people doing content there was like this deved guy which was like funny and this like web def simplified guy with like beautiful hair and like I I'm just like how do I get into this scene and so I thought it was impossible but I thought all right what I'm good at is um like breaking things down and improving them like I'm always at the Forefront of that and so when I made videos say I wanted to do one on CSS animation and I had to do one better than um Kevin um what I would do is the Cs the king of CSS exactly and so I would look at his video like I would search something like U for example CSS animations right I would look at his video I would then have a look at every other video in search I would go through the video and see every topic he covered then I would research CSS animation and I would write up a script that covers everything he did plus extra in a shorter and more succinct amount of time with a better thumbnail and a better title better tags better description more um uh timestamps even though time stamps weren't even a thing back then as well as rather than 1080p which was thing I was already on 4K back then I was like having a look at every single thing I can do to create a video that is better than whatever was ly there on search so whether it was a video about CSS animation whether it was about react and its implementations whether it was about bootstrap every video I researched I had to look at how can I improve on all the videos that are out there and make a better video and that's kind of how I did it every single day day down by day and I tried to improve by 1% every time as well so each time I had a little bit more budget I'd get a better microphone I'd get you know I started off with no backdrop and then I got you know a bookshelf and I filled it out with stuff and I got a better um lighting setup so bit by bit it eventuated to where I am now essentially yeah wow so one thing to note like uh first of all I love the way that you just kind of incrementally upgraded stuff as your budget could provide um and you know you can make money on YouTube which we can talk about in a little bit uh but it's not like you know Scrooge McDuck jumping into the Vault and swimming around in the coins by the way if you actually ever have a vault filled with like gold coins and stuff don't attempt to dive into it um but that might hurt yeah yeah it might hurt might leave it in um so you uh it sounds like you were able to focus on like different production considerations and stuff but it is worth noting that you are a skilled teacher those years you spent at the agency training other developers in different cont you know Concepts and stuff spent in it explaining things right but but like that time it sounds like you did learn a lot about like how to communicate knowledge how to impart knowledge um because no I didn't actually that's that's the thing that I think a lot of people skip out on that that's not where I learned I learned it from watching People's videos as I said and doing the research researching how they're delivering their topics and then also going and researching how um the details are on like CSS animation on different websites and then putting that into a for formula script that has no fluff so like one of the things that I don't do very well on my videos is there's not much personality I don't add many jokes there's not much like um stuff like that it's just pure like what's the pure essence of how I can teach a concept in as little words as possible so you really optimize for tness and uh man you're like the first person I think that's ever actually like said no I'm not a great teacher you know like like has deflected deflected my uh attempt at at uh edifying you uh but but I mean that makes sense so you you really took like a clinical approach to this dissecting what makes things work uh as opposed to like like almost like like uh a Quant might tear apart like a baseball team and figure out like why are we actually losing these games like completely uh like passionless and just very uh well yeah exactly you to have a look like where is the wind resistance coming from the B what's the better Tire you can use how can you make the frame a little bit um less heavy like every bit by bit by bit by bit um because like the cyclist is going to cycle he's going to like move his wheels but it's all the other things that goes behind the scenes that if you're cycling 40 kilm these 1% gains they have a lot of traction interesting so it's a very marginal kind of um approach to gradually just teching up different aspects of your videos I wouldn't say that my videos suddenly made me successful it was definitely a linear path of success that might have had a little bit of a escalation um ju to those 1% but like uh what did they say about interest there was a saying for that I mean it compound over 300 videos a 1% increase is you're going to have the best videos on in the universe if you can actually do 100 1% for 300 iterations in a row um yeah that's pretty phenomenal I actually I might be incorrect uh I would have to pull up my uh calculator CU I can't do that sort of stuff in my head figure out like what what is the total Improvement that would be experienced if you were to improve 1% for 300 days ask GPT that real quick I think it's 37.5 times over a year if it's 1% per day MH you would get if you improved 1% each day for 300 days yeah and it's going to do some python here probably so just yeah it shows me the it's just a compound interest formula um yeah and so it's it's calculating it with python I'm just dictating what what GPD is is doing essentially uh it's is 20.99 times the initial amount uh yeah it's pretty good it's like a you know 2,000 and I can see that I can show you like my old videos and you'll see that it's very clear and obvious how much of an improvement that there is and that's why any of my advice to people that want to be creatives and do content on YouTube is do 100 videos it's the same thing Jimmy slm Beast says do 100 videos that'll help you improve the most and then after that figure out what topics you want to do yeah yeah or as I was told uh by the uh writer at Denny's where I was drinking coffee who saw me like working on a draft uh was like throw your first million words away just keep writing and uh it's gonna take time quality takes time and it sounds like uh you you just incrementally improved each facet of these videos and that's how you arrived at your current level of quality which you know when we say current level of quality it's probably still climbing right are you still finding little ways to improve always always yeah so what I like to do go oh go ahead go ahead I still like to research other verticals when I say verticals I mean like channels in say photography or channels in um design or channels in um lifestyle and have a look at like what kind of things are they doing that I can Implement into the coding space to make programming videos a little bit more enjoyable yeah because you're so passionate about programming technology but not everybody's just born trying different commands in Doss right like a lot of people uh they need something to like ignite that passion you need to hold their attention long enough for them to really cultivate an interest in going deeper with technology yeah that's true so it sounds like importing a lot of those uh I mean like there are a lot more accessible Fields than programming You could argue that programming is one of the least accessible fields and that you have to have some baseline understanding of like computer science how computers work probably have to some basic understanding of mathematics you you need to understand like a lot of different concepts before you can really even like attempt to program without just being completely you know befuddled and frustrated right uh so whereas if you show somebody like hey here's a cooking tutorial let's crack the eggs let's you know mix them let's add you know a teaspoon of uh yeah that I can't get into that's that's beyond me you know cooking tutorials but but it is like a physical thing like it's a it's a procedure that probably anybody can watch and like if if you put them in some situation where like you're going to go to jail for 10 years unless you can make me an alet right now here the people could probably do like an OM right whereas if you if you gave somebody the same proposition you're going to uh unless you do rot 13 in the next 20 minutes you're going to go to jail for 10 years like they they would probably you know not be able to do that the typical lay person right just because it it is like it's not a dark art programming is something that can be learned obviously like we're teaching millions of people to learn each month through free Cod camp and you're teaching probably at least hundreds of thousands of people how to use these different tools each month um maybe you can talk a little bit about what it is the you're teaching and what has because I look at your YouTube videos um and you've got some very popular videos like 5 million views um on some of your different project videos and most of your most popular videos are around GPT because you rode that wave and you were like one of the first people you were on the ground floor you were already ready you already understood how to wield these tools when suddenly GPT chat GPT kind of kicked off this chain reaction and got everybody talking about Ai and stuff y so it's the question the question what are your videos about like these days like what are the what would you say the main focus uh if people were like going to your YouTube channel like what would they go there to learn primarily and what are you I had the two channels I've got my Adrian Taro Channel and I like to these days think that that's kind of about programming and AI then I've got a second Channel called codex community and that channel is about design no code and a little bit of AI because AI is pretty much everywhere these days but more about design and no code so it kind of one is more about programmers and one is more about those people that don't want to program but they still want to build websites right so you could like there's this term like Technical and nontechnical right like so Semite technical people uh who may know a little bit about coding but don't want to spend all day in vs code like wiring things together they might use low code tools or no code tools or AI Tools in order to get things done instead so codex is kind of like catering toward those people whereas like the main Adrian toog channel is like the the super user like the person who does know how to program and also wants to indeed harvest the utility of these tools I guess like the Adrian twarog one is more also personalized cuz it's me working sometimes on Creative projects I like to work on and so that's why like some of my videos are like me building an RPG as a website so rather than having a fitness tracker or a food tracker you have your life covered as an RPG and you can see your strength and endurance and health and stuff like that I just like to see at like how can I make a creative topic or how can I make a programming thing more interesting than it otherwise is rather than just creating a todo list cuz you know that doesn't really excite me that much yeah those those standard uh projects that people do like portfolio projects um yeah there's always like a todo list there's usually some sort of like you know currency exchange calculator like um calorie counter you stuff like that that are they're cool good projects to get you started but you could also do something that nobody's ever done before right uh you you could you can follow your Flights of Fancy and create like uh I I don't know like a Pokedex for um for you know KPop singers or something like that you know what whatever wherever your passions like overlap you could you could build something in that space and so you built this it's a pretty cool project uh I watched the video last night just to re refresh I'd seen it before but basically you do build an RPG that like tracks different aspects of of your life that you're you're trying to Monitor and improve and kind of gamifies your actual real life and not just Gam like you might use run keeper or straa or one of those tools to like track your runs or something but this is like an allencompassing like you are the role playing character and you have stats and you want to buff those stats right exactly it's just a different mindset of like how you track your life rather than just like the traditional way you want to gamify it essentially CU everything that's gamified is a little bit more fun these days yeah and I'm going to link to the video in the show notes but uh the funny thing about that video is like it's one of my most popular videos but it doesn't really teach anyone anything there's no programming in there it's more like a storytelling video I bring people along the Journey of me trying to solve how I'm going to build this thing and I kind of give them the summary of the problems I encountered when I was coding it and then just show them the solution so if you want to learn code you're not going to learn anything from that video but if you're going in there to get some motivation some inspiration to have a look at a cool creative idea and even if you want to download the code and build it up yourself you can jump into the description I've put it on GitHub so you can actually run it up yourself so that's the kind of video I like to make a lot of yeah yeah and one of the cool things about that video in a lot of your videos is you don't just start open up vs code all right let's you know get this you know these libraries in place or anything like that no you start with sketching things out um you you are kind of like a designer at least in how you approach different things and of course you've got like mad design chops which we'll talk about a little bit like you've like published an entire book about design uh but uh you like to actually start out with like paper and pencil or in this video you use like an iPad and like one of those apple pencils that cost like 50 bucks I don't know if they're actually worth it but but like you use that thing and you start like drawing out a UI uh and yeah maybe you can talk a little about your workflow when you approach building a project and do you still start that way do you still start with like a blank canvas and start you know hashing out UI details right there with a pen so um funny enough I still use that same iPad and I still use that same pencil apple pencil and so yes I still do it that way it's one of the ways that I like to create like any idea where I actually just sketch it out like what am I trying to solve how can I brainstorm this what are the key elements and then I can kind of map them map out and then when I map them out I like to then visually map them out so rather than creating a design I just sketch it out like little squares and whatnot to like visualize what will this actually look like when it's working and so that kind of makes the whole process of building it a lot easier it's like saying oh the the recent idea I'm building is a Pokédex it's a Pokédex for real life and so you know Pokemon 20 years ago had this cool AI thing that you take a photo of any animal and it tells you what it is with an AI generated voice and it just can use vision and it detect what that thing is and now we have chat GPT so like Pokemon already knew about this thing 20 years ago in the Pokédex and now I'm just thinking how can I build my own Pokedex so a pokedex essentially I can break it down into steps like one is you take a photo number two is you send that photo to an AI and it tells you a description of what that item is three you save that photo in the description four you generate a voice or you use an AI voice model to describe what that is in audio form rather than in just text and then five you like save it to a database and so that's kind of like a Pokedex for real life but it's mapping out those steps and then creating visuals for each one of those steps you can break down a complex problem and just make it happen essentially and it's kind of the mindset I bring towards programming I guess yeah and do you use any like formal system like Universal modeling language uml or anything like that when you're like trying to diagram these things out or how do you uh how do you actually like wire everything together in your mind and on paper before you actually start building do you and do you do all that before you actually start building yeah know I I don't know like I I never learned any of these paradigms or these Frameworks so I just I just brainstorm it out and then I just draw it and then I just build it yeah but um visually like that seems to work really well and I can oh I think my camera's going there there we go um okay like from my point of view from working on early concepts of ideas I've had to working in business to now making content on YouTube that's always worked really well the only one thing I haven't done is worked in large teams of like maybe 50 to 100 developers working on like a huge repo I don't know if you would need some sort of um proper Frameworks in mind for that kind of stuff but for the kind of stuff I'm working on it's always worked perfectly fine yeah and so collaborating with teams in my opinion like that is a completely different skill set than just being like a solo developer and like being your own product manager and uh being your own developer your own designer like you the most efficient number of people to have on a team is always going to be one because there's like none of that communication overhead you don't need to formalize everything the way that it can be Community yeah yeah quick and dirty as you said yeah exactly uh so so like people take for granted like how difficult it is to get an entire team on the same page and convey an idea that like the Visionary person on the team who has this vision for the product like but when you're doing things yourself whatever system works for you works for you right like you don't need to feel like oh damn I don't knowl I'm not a real you know developer if I don't knowl uh because I can't actually do all the fancy like squares and stuff like they do in the movies you know um but but the reality is um yeah whatever works works and it sounds like your you know your brutal pragmatism is on Full display in terms of how you kind of mock these projects up y before building them out and um I'd say the same thing happens to a lot of things in real life um so my wife for example start up a nail salon and so you'd normally for a business to get you know a loan from the bank they want like a business plan and all this stuff and we just did it step by step oh my camera's gone again there s yeah don't worry about okay it's back it's out that's mindset that I have where I'm building a application I said let's do the same for the nail salon let's just map up all right we need a location we need nail stock we need you know some equipment to get it up and running and then we just start advertising and getting people to come in and anything along the way we just buy as we need and so we're able to do that and build a nail salon from scratch so um I'd say a lot of things in life even like when I had my son like there is no plan for that sometimes like you have to kind of learn as you go yeah absolutely like there's no book how to be a great parent I'm sure there are tons of books by way I'm sure there are books for it but but like I mean really it's like an experiential thing it's like there's like there is no book I would have learned to code and and get a developer job except there is that I wrote yay um just Google learn to code book but like that's just my opinion man like like yeah correct in practice there's going to be so many different things so many different like things that are specific to your circumstances and everything like that and they're going to be similar like with building a nail salon or building you know a PO pokeddex for real life uh whatever your project may be you know to some extent you have to rely on your instincts and you have to uh just accept that like hey if I was able to accomplish something there is some validity in how I accomplished it even if looking back it seems like I was just flying by the seat of my pants and had no idea what I was doing the proof is in the pudding right like yeah or the proof the proof of the pudding is in the eating right if the if the pudding is edible you must have done something right right it's not like radioactive you know sludge that is like making people throw up and stuff it's pudding right so you know you kind of have to feel through but but I just want to say like love yourself love respect yourself respect what you've accomplished and don't feel like oh I'm just like a dirty hack who just like you know slaps things together with no Grace or Elegance um you know you'd be amazed at how many of the projects out there are kind of tacked together like famously since we talked about Microsoft and Doss earlier okay yeah have you ever uh have you ever wondered why they jump straight from Windows 8 to Windows 10 and why there's no Windows 9 um I thought nine just didn't seem like a good number so they skipped it what I heard was because they had like Windows 95 Windows 98 Windows you know they had like all these different parts of the Microsoft codebase referenced Windows 95 because they didn't imagine like oh we'll just do a full rewrite when we create some future version but no they just keep piling more and more code so if you use like Windows 11 it probably has a whole lot of Windows 95 code in there uh that's what I've heard I haven't actually inspected the code base and I don't think it's open source so I don't think I can maybe they've open sourced some of the old versions but um they didn't want to risk having references to Windows 9x because they might have used like regular expressions or any number of things and it would just add all this complexity so like hey I have an idea let's just skip to Windows 10 and uh maybe people won't notice that we skip Windows 9 because we don't want to spend you know developer years hunting through this massive codebase trying to identify all the situations where having a Windows 9 could clash with Windows 95 or Windows 98 you know so yeah remember that they said they would yeah I remember they said they would never stop after like they would stop after 10 and there would just be updates after that but then there was 11 and yeah you know but you're right like I think sometimes you don't know what's happening behind the scenes and some things are made with duct tape and sticky tape but they're held together and they somehow work and on the front end everything looks pretty exactly yeah nobody get nobody goes and sees what like how the sausage is made so to speak they just see the uh result in you know if you're not a vegetarian the resulting sauce is just you know very delicious right so um yeah it sounds like to some extent you're just you and your wife are just feeling your way through building this nail salon and you similarly are feeling your way through becoming a prominent YouTube Creator uh becoming a developer uh I mean it sounds like your first day is on the job you know where you were like using all these tools and figuring out all these new things and you know bringing your your own curiosity to the Forefront and applying it to find inventive ways of Saving Time and getting things done faster it sounds like that that you you I mean the vibe I get from you is that you're just you're unashamed of the hackness yeah no I'm not I I think it's part of the process that a lot of people need to see that you know things aren't written perfectly in code every single time and those early videos I did had old the mistakes and how I problem solve those mistakes along the way as well and so I think that was an important an part of it then on top of that I don't think I've ever personally had impostor syndrome cuz I suppose I started at the very bottom and I just I assumed I don't know anything and so I very upfront that I don't know anything and then even when I'm teaching Concepts it's me not knowing about something and discovering it and showing that journey and so for me it's always been a very natural part of how I present I guess yeah and I am similar and that I did have some imposter syndrome but I just assumed like I knew nothing and that like I'm you know some 30yearold guy who's waiting into this field that people have already been coding for like 20 years because they started when they were kids and they were in like high school programming club and Robotics club and stuff like that and uh I just assumed that I was surrounded by people that were more experienced more capable than me and like okay let's take as a given that those people are you know more capable than me what can I do is there still a place for me to get things done and so you know just finding things that I can practically do to help yeah so I have a lot of questions that we haven't even gotten to because we've had so many exciting things to talk about uh you you have like of course uh you know your YouTube channels um code code x x yeah like codex like a like a book as opposed to a scroll a book that has like binding early open AI model for coding codex yeah oh okay so um one of the things you do is you are an AI evangelist which sounds like almost like an apocalyptic role maybe you can talk about what you do as an AI evangelist um I'd say it's less about um playing around with all the AI tools and more just thinking like what Cool Tools should devs know about like what are cool AI things that are going to make your life a bit easier if you're coding if you're making websites if you're designing because it's kind of like suddenly a year skipped by and there's dozens and dozens of new tools out there that compete with Adobe and figma and they compete with Photoshop to generate stuff that wasn't capable like the most recent one I've seen and um I can't really say it'll help developers but it helps me is like there's music generation with AI now and these songs that it generates means that I don't have to worry about you know um having copyright music or anything it's a beautiful song made in two seconds from a single prompt in two seconds you get anything you want you if you want like instrumentals if you want Loi if you want um synth it's all there and you just describe what you want like I want um a song about the Roman Empire and you can even have lyrics in there and the lyrics sound like a real person you can even specify what the lyrics say and it turns it into the song so it's it's amazing and that's just like one tool out of many my friend sent me one of those the other day it was like taking about using the restroom on the clock it wasn't exactly like that but like the best 45 minutes of my life you know like getting paid to use the restroom basically and I'm not saying exactly what the lyrics are very crass song but uh yeah it was I I was like wow like did a human really not play a part in writing the lyrics of this I mean you could tell there was artifacts and if you're a musician you can listen and you can be like okay like this is like the most generic you know chord progression or this is like the most generic like drum Tempo or it sounds like they it's just like you threw a bunch of stuff in a blender it doesn't seem original but it is technically original in the way that like a string of text coming from GPT technically if you plug that into Google uh it's extremely improbable that that exact sentence will have occurred before even though you know it's trained on you know but I could see as a Creator just not wanting to worry about copyright strikes that was a huge headache uh anytime you're using any sort of recorded music unless you're doing a Channel about music where you need to like actually use excerpts from music to talk about it uh which should be fair use but even like Rick biato and a lot of the big uh YouTube creators that are in the music space complained about like let Zeppelin I can't even play the the first three notes from cop yeah it's crazy but um it it is a thing and so now ai is coming and solving a lot of problems like even there's an AI website called reloom Ai and what it does is it makes wireframes using Ai and all you do is type in a prompt I I want a website for a nail salon and it creates all the wireframes it creates all the text and sometimes it can even do the visuals for you and it takes like 5 Seconds to create you the concept out for different websites and you can regenerate them so like they're just making the process of building a website a lot faster yeah and um what are some of the other types of AI tools you use and and I do want to get more into like your formal job as an AI like that's on your LinkedIn AI evangelist like is it I didn't even know that I think so I mean I just looked at your LinkedIn a minute ago and I saw that it like jumped out of me you been like I didn't even know yeah yeah well it's it's not your job to like stay on top of LinkedIn when you're m mostly it sounds like you're just working on your own yeah working with like uh you do sponsorships and stuff with uh one um so that Ai and uh version you're talking about was there's a company in West Australia that does um they're called generative and um they do AI project so as I was getting requests for Consulting in AI I would forward them on to these guys ah okay so basically like people come to you all the time probably asking you about AI I had hundreds of emails yeah it was insane especially you basically just like help kind of triage those and steer those to people that actually do contract work in the space correct yes okay that that makes sense so that was what I was referring to when I said AI it's literally originally I I didn't know where to send people and you know that like you don't want to recommend someone when you don't know if that company is any good um you want to actually like meet a few people and actually recommend someone who you trust and know will do the thing properly so like in this case I finally found someone in Australia that does it and so that's why I've been recommending people to that company yeah so that that is like a a heartening note if for any of you out there listening that are really interested in like a specific kind of vertical of technology or something like that eventually you may become so authoritative in that space that you're turning away work and you can get paid to send that work to somebody else who actually has the bandwidth to do that work um yeah it sounds like an enviable position that you've uh established for yourself so um you in addition to being like the the AI guy the low code guy um on YouTube like the one of the serious creators in the space who has a computer science degree and has worked as a developer and as an IT guy for like you know nearly two decades it sounds like like you're somebody who actually uh you know has built out that expertise and that reputation over the years um but in addition to that you also have as I said earlier like serious design skills um and you you've created like a web design road map for example can you talk about your relationship with design yeah sure um when I was doing a lot of the websites to begin with um obviously I didn't have a designer so I had to design them myself so while I was staying ahead of all the programming stuff that was happening I was always staying ahead with all the design stuff that was happening because I was just designing my own ideas so I was always very ahead of the bleeding edge almost of design and over time I learned all the concepts that make a good website look good I was always having a look at like redesigned Concepts for like Facebook or Google or Reddit even and making my own variations on that just as a hobby and over time when I did my YouTube channel I thought well why not like I I started my YouTube channel doing like just websites doing some basic HTML then I grew it out to like other things in programming to react and node and then I thought why not grow it out to design as well but I noticed YouTube punished me when I created content for programming and design cuz they're almost two completely different subjects it's why I created that separate Channel called codex for design and kept programming separate on um on my Adan TW Channel but I did like in um teaching those Design Concepts and I never had any courses or anything like that and I S thought to myself one of the best things I can do is create a course for design so I have my own course that people can learn these fundamentals what especially developers who never learn any design so I made a course called um enhance UI or teach me um design which was specifically designed for developers coming in because I knew the developer mindset I thought I would go through all those fundamentals of like topography and color theory and stuff that I learned over the years but more in a Programming type fashion so I started doing this course and I thought it would take me like a month to do then I thought it would take me half a year to do then I thought it would take me a year to do and I continued to make it and make it and make it and then I teamed up with a guy called George um and we continued to build it and end up being like over 400 pages is long because there's obviously just so many concepts for design but I ended up releasing it almost a year and a half down the track and design is luckily one of those things that never changes like color theory has been around for 100 years good topography will never change while different fonts will be popular the fundamentals for that will always be the same I thought if I do it properly and do it once well it'll always be there so unlike react or nextjs every year there's a new version you have to relearn the course or something like that even JavaScript new modules out there design is one of those things that I can make it right the first time and everyone will benefit forever essentially if you learn that course it'll benefit forever into the future from doing it and so I built that course it's called enhance UI um if you go to enhance ui.com right now you can visit it and um and yeah it's doing really well I did like a um I also did a video on every single chapter of that book um so it's like a full on book full on video video course and now I've got exercises and workshops in there and I'm continuously building it out and improving it every year now that I've got it out yeah it's really cool that you it's like a living document and there's like a community around it uh you you have a Discord for it that people join so yeah I've created a Discord I've called that um Discord merge um and I just thought I need to have a different name from codex so I'm slowly creating a new channel called merge as well um on YouTube I third Channel um cuz merge sounds more like a um a thing where I'm talking about design because you're merging code with design so that was my mindset behind it um and yeah if you had to merge I've got a huge community on there and what I do is also I do free design reviews so if you have a website I review it I go over like what you can do to improve it um I'm sharing all these things like the AI tools about how you can create wireframe designs um so that's kind of like the the mindset behind that Community anyway yeah and uh I think it's so cool that you're like so committed to this field of design that you just kind of stumbled into as a developer like as you said you just had to kind of like learn this stuff to in order to be able to do a better job as a developer working on different contracts you know uh obviously like the usability and things like that uh are are important in the functionality but what it looks like the actual Aesthetics are important and you know people care about Aesthetics and what is a Aesthetics what is good typography what is you know like design hierarchy what are a lot of these different concepts well a lot of that stuff was cemented in the kind of like advertising age of like the you know 30s 40s 50s 60s if you've seen Mad Men like one of my favorite shows of all time like they're they're just constantly talking about these things and they're like steeped in that culture of uh what is going to catch the eye what's going to hold attention what's going to be legible if you read uh there's a book uh gosh who is the guy that the big Advertiser guy that uh Ogie Ogie on Ogie his book and he talks about how like they have like this ad for like Volkswagen bug that they've used for like 30 years and they never changed it because it just it works it converts like and why does it work you know and and like trying to understand strip that down to the nuts and bolts and understand the actual design considerations um so just like with like free C Camp and Mathematics where huge Advocates of learning mathematics and Mathematics doesn't really change it's been like more or less the same for the last 2,000 years and then people have layered some additional stuff on it it's one of those skills that if you like really learn it properly you don't have to keep coming back to it right uh you could you just for the rest of your life you have that toolbox for uh you know understanding what is good design and being able to create things on the Fly and being able to recognize good design in other things uh so this this sounds like a really cool book and and a really cool course yeah um and a while back you sent me like a book that was like one of the most beautiful I guess selfpublished books like it I'd never seen a book where every page looked so you know deliberated upon uh yeah can you tell me a little bit about that book is that the same book yeah it is it's um originally I got inspired by someone called um Chris doe he runs a channel called the future it's a Design Channel and so he wrote a book and it was just like his own kind of personal book about himself but what he did in that book was every page on its opposite side had a beautiful visual he had created in his you know life and it was like a design image and so I thought if I'm going to create this book for developers and I want to teach a a concept about color theory how about I create a beautiful visual for every single one of these Pages it's one of the reason the book is like 400 Pages um plus it's because 200 pages is the content and the other 200 pages are the beautiful visuals that explain or represent that Visual and so if you've ever followed uh George mher on Twitter you might have also seen he's done a lot of those visuals as well on like things like react and stuff if you can visually show someone like a folder structure in a beautiful way it's a lot more appealing than if you just see a snapshot of vs code and so that's the mindset I brought into creating the book so that I wanted the experience of reading it to be almost like a very nice one I've got like motiv quotes in there from aspiring artists to like beautiful visuals that represent um things like the topography itself so that you can see as well as read the content yeah yeah that's so cool and I'm just curious like how much time does it take like what tools do you use to lay that out by the way you so I actually got the proper in design from Adobe and I build that up properly as a published book that can be then later on printed and I've done a dark version and a light version I just haven't gone through the process of seeing if I can get it printed on Amazon yet but that is like one of the steps I want to do in the future too yeah I mean you you can basically take any book and put it on Amazon and they can print it now whether it's going to be like this fancy bound kind of like coffee table book like there are books that cost 50 bucks 100 bucks right like Getty Lee put out a book about the electric bass right and I was like oh man that'd be amazing but I'm not spending like I don't know much the book is it's like 100 bucks Getty Lee book base if you don't know who Getty Lee is he's the uh the Bas player for Rush and he's yeah it's it's a $50 Hefty book probably weigh several pounds I may get one I may get a copy I love bass um but like if if you wanted to print like an actual like thick uh 400 page like nice paper quality book that's going to sit on somebody's coffee table or going to sit on a bookshelf behind somebody like me me wink nudge nudge wink wink if you do print one and you ship it to me I will put it on the the bookshelf behind me I've been looking for good books to put on there um you may need to go to a special publisher for that uh or you may be able to do like I don't know if anybody still does kickstarters but something like that to to get the publication of it uh but I'd be very interested in having a physical copy at some point um and I think a lot of people listening for this would be too because I love design and I've spent so much time at bookstores just flipping through different books on like Design Concepts and things like that that are just very beautifully crafted and uh like a lot of times they'll be like really weird shapes like they'll be really giant or really small and you like flip through them and they find all these creative ways to illustrate the different concepts and and I had lots of friends uh when I was in college who were designers as well so like yeah it's it's a field of personal interest for me even though like if you look at free C Camp we have like an extremely like almost brutalist if you're familiar with like the brutalist movement of Architecture is like bare concrete you know like it it's free C Camp is very much uh simple and like we don't we don't do anything fancy like we we just like exactly what you know uh inspired by that kind of pragmatic like practical like we I I call it command line Chic uh because I was trying to like recreate the feel of being in a command line like uh maybe like MS DOS era whenever you're like doing a Bo or something I said let's let's redesign your website cuz I could make it you know look good but you're like you like it to be that brutalist style cuz I've actually redone um like I've even done Jesse or code stacker like a design course on sorry no I think he has a vs course super code superhero like I've done a few designs for for a couple of the creators but uh if you ever want a free code C freesign you should do a course like like let's redesign free Coke camp like maybe we can incorporate some of the ideas uh yeah like a lot of the the reason free C Camp looks the way it is is because we have a lot of people accessing us with like very limited data everything has to be really high performance we we use very few images um but here's where like you use a little bit of smarts of like can we do a super fast speed test on their connection within the very first 2 point seconds of the um load and if it's a slow connection you give them a l slow lowy version of the website if they got B connection bu so those are that's how I think I'm like how can I revent this to give them that and you you find that that's what the news websites do right they actually have a lowfi and a highf five version and the LOI is actually for their SEO so when Google and crawlers hit their website they get a very fast Snappy website with have all the article you go on there and you have a 100 videos and ads everywhere and you can't even read the article so it's like how how are they even indexing it so yeah there's tricks around that interesting yeah I had even thought about that but yeah if you because everything you do is like slightly adding to the time but if you can do it fast enough everybody can have a decent experience and and people who have you know I've got like 500 megabits here in Texas like we're we're spoiled here in the United States and so I could easily go to like the most multimedia intensive website and I probably wouldn't even notice the load time uh and I I imagine a lot of people listening are in like South Korea or some place like that that has ridiculously fast internet too um okay so uh I am really interested in talking about the the pandemic a little bit just because you made such heavy use of that uh what were some things that you did to really capitalize on the fact that so many people are getting online all at the same time like Freo camp we experienced a dramatic surge in usage which unfortunately it's kind of like tapered off because you know people uh a lot of people uh their ambition was bigger their eyes were bigger than their stomach and once they actually started coding and like getting into it they're like I can't do this for the rest of my life uh but a lot of people state of course so like I think most websites I know like learning websites and then down but like the Baseline is like twice as high as it was before the pandemic maybe you can talk about uh yeah what yeah um what you did I didn't particularly tackle the pandemic from a business point of view to like get the YouTube channel working really well I think at that point in time was when I started YouTube and I saw some small guy called Flor and Pop um and he he published this blog saying that he's going to make 30 videos in 30 days and I'm like that's easy I'll make 300 video or 365 videos in a year and so that's where I had that idea to to make a video every single day and while I didn't make 365 videos I think 300 is a pretty good success rate um for videos in the year and I suppose that was the mindset I went into it like I I kind of treated it as as as a challenge but whether I got subscribers or not wasn't the goal my goal was like can I make a better video than what's online right now and that's a good goal because that's measurable you can't control how many people subscribe to your video like I see people all the time make the mistake like I'm just going to get to a thousand followers on like Instagram or on on YouTube or wherever and they make the goal some sort of number that's completely outside of their control but what you did is you like every video is going to be 1% better and that's subjective but like you did have the concrete goal of I'm going to publish a video every day for 300 days that is something control that I contr control making a good video I couldn't control if it gets views or subscribers and that didn't matter to me at all yeah so to some extent it was just like brute forcing your way to Brilliance like spending a lot of time and energy yeah creating videos and and that process was where you were honed so to speak correct so let's say hypothetically somebody was starting today knowing what you know today if you had like zero we presence and maybe you didn't even have the skills that you have currently would you do the same thing would you just dive in and just start building would and if you have a look at like one of the popular people out there Josh tried coding that's what he did and if you have a look he's having a lot of success but if you watch his early videos that's quite him learning how to code and then sharing what he's learned step by step by step and while it was very raw at the beginning you can see his improvement over time and it's very personal and very genuine yeah so um one of the things that you've said that uh is that even with AI tools you still need to know the fundamentals uh that that like you know tooling is never a replacement for actual comprehension of what's going on under the hood and like being a fundamentals what are the fundamentals that you would encourage web developers to learn in 2024 I think and this is what I recommend still to anyone who ask me they want to start coding I actually do Point them to a free code count and I say learn the responsive web design course where you learn HTML CSS in JavaScript because that is the best um way to enter into learning to code it's got like really good tests and examples and it really teaches you that kind of stuff so like I think that's one of the like the the easiest most like there isn't a pay wall behind it either so yes I funny enough you have put together a really good resource for that one yeah uh so so is there any like other big skills like would you consider design a skill that's got to have or would you consider like a i' Sayce to design is something you can look at after you start building websites once you're in there and you're building content um for yourself or for companies then you can start looking at design so I wouldn't say oh do my design calls first and then learn to code because that's not going to serve you as well learning to code will probably serve you really well if that's what you want to do obviously if you don't want to be a coder and you just want to learn design do my design course of course yeah awesome and let's talk about low code and no code so a lot of people a lot of developers especially are like ah they Gran every time you they hear low code or no code just like people might have grown when they heard Microsoft front page when they were building their own websites uh back in or Dream Weaver or something like that that like tries to simplify this you know more like high touch uh process of artisanally crafting a website rather than just you know throwing a bunch of templates together right um how would you describe no code how is it different from low code and then like maybe give me like an idea of for whom those are useful so I would hope that most people that are developers have used figma before because often developers and programmers are converting figma designs into code and figma is a full design piece of software it's almost like Photoshop and I think no code is getting to the point where you can drag and drop and create a visual design and it's already coded that's B basically it you don't have to worry about writing any boxes you don't have to worry about any alignment you just drag it into place and it's right there and I've seen the Stepping Stones of these where like originally you could drag an element um in um with Elementor or weo and then you still have to code out like the padding and everything like that you have to understand those principles of like how HTML works and how sections work and how divs work and it's slowly move like the no code movement is slowly moving away to that to quite literally you do not have to know what's happening under the hood you just drag the elements into how you want them to look and it just it just works so that's what I find really interesting because I wonder like how much coding will be involved in the future besides building the functionality under the hood and this is where like the low code no code will be like visuals are built by designers and then fun functionality built is built by programmers and there's almost going to be a separation between the two at some stage I think interesting so you think that like right now like a lot of web developers do their own design work as well but you do think that things are going to become more Specialized or do you think that like low code tools will allow a mediocre designer to do design work so they can focus on the development work and vice versa for like a mediocre developer I do think that program focus on yeah I do think that programmers and designers will be using no code tools in the future for any marketing company or um web company because it's just easier faster and um better in all manner like you can build a where I used to build websites in two weeks down to like a week down to four days you can use no code to do that in four hours so if it it takes you four hours and you have a website that's secure and looks exactly the same and it's responsive and now you can update it in seconds rather than hours it's a nobrainer for any business in that point of view right and so that's where like a lot of the industry for business is moving that way so if you want to do that of course there's still functionality in businesses that build applications that integrate with AI or do different things with cameras or whatever it is and so for that programmers need to understand the fundamentals you can't particularly have no code tools jump in that easily you usually have to build web web apps and that's where a lot of the programmers will probably be going in that that regard yeah yeah that's definitely like uh I've seen a lot of programmers who are resistant to using those tools almost like like John Henry like I can drive spikes faster than this damn machine you know like that kind of like mentality but at the same time like a lot of them are like well I I use it for this or I use it for that and the number of things they use it for may be slowly growing and it's not necessarily going to replace that developer instinct or the designer eye or things like that but it does you know provide additional leverage so that you can use what you know and your your expertise to get things done faster right I like to think of it as farming right a farmer might go to you and say I can use my hands to scoop out a hole and put a seed in there and pack the Earth in perfectly so why I not always use my hands the next farmer might go oh I have a tool to plow and then a tool to like throw the seeds in there and a tool to compress it so why not use those tools then the next farmer might go I have a machine that does a thousand of these and the seeds for a thousand things and does the um articulations for a thousand of these and then the next farmer goes well I have an AI that does an entire acre for me and all I click is start and it does all the seeding all the watering and everything so at each stage a farmer still needs to understand the um fundamentals but it doesn't mean that the farmer who's manually digging out the soil and putting one seed in there is doing it any better or worse it just means the tools now are kind of Greater and if you want to use ize them sure you can you might have more success and from a business point of view it makes sense but it doesn't take away from the fact that you know how to do that either yeah let's talk about AI tools because sure obviously you're an AI evangelist and you know a lot about AI tooling and you've been working with these since before before it was cool right uh back when you were like one of the few people who who cared to use these you know at the time very limited tools um what AI tools do you use kind of like currently like uh can you maybe rattle off some tools that you use maybe every week I think my dayto day the most I use is obviously GitHub copilot it allows me to autocomplete any programming code that I'm trying to figure out which is it's useful it's very useful I do use chat GPT for uh brainstorming so if I have like questions or I'm trying to almost treated like a psychologist where I'm trying to figure out what I'm trying to say or do it helps me kind of brainstorm in that regard um and then I also use um I have 11 Labs it's not really programming but it replicates my voice to such a degree that people can't recognize when I use the AI voice in my own voice and sometimes in videos or in content I can just use that right up a script and suddenly I've already said the script which is great yeah and I've talked with like Andrew Brown in a previous episode Andrew Brown exam Pro creator of many uh tutorials and he actually has like a degenerative voice condition so he makes heavy use of AI uh Speech synthesis tools and Freo Camp has a course coming up soon that will teach you how to uh to like kind of wrap your voice around like a you know a like a newscast or whatever other piece of audio to make it sound like you're saying it or you can speak different languages it's very cool without having actually put in the time to actually learn that's cool call me old school but I really enjoy learning languages and I will continue to do that though I'll probably never have time to like learn German for example so uh this will be a convenient tool if I need to like you know ever pretend that I can speak German or or Just Dub videos into German uh so it sounds like you're do you actively like follow what what is your information diet like how do you stay up on all the development in AI this very fast moving field I don't know I just think my feed tells me whether it is on Tik Tok or Google news or um YouTube or Reddit like just seem to stumble across these things and um if they're not getting much traction of his ability I like to create video content on it too so yeah yeah that's very cool so you're just out there you're just like consuming and reading you don't have like some carefully curated like RSS feed uh like that that is like exactly what you want to be learning uh I mean do you listen to like particular podcasts or anything like that to stay up on things no no podcasts I technically like I don't read the newspaper I don't really check out Reddit um like for the most part it's just somehow the algorithms on Google News tell me the Google News algorithms are pretty good in that regard yeah that's very cool so um I guess there's like you know in terms of productivity and something like just not taking the time to try to curate an information diet and just relying on algorithms to serve up good stuff it seems to be working for you yeah yeah for sure for sure awesome and just like a final kind of like question about like AI tool Tooling in general uh let's say you had a new client like maybe you can talk about how developing like a you know a marketing website for like somebody's got like some pharmaceutical product or something they want to create a website for that what would that process look like when you were first starting and what would that process look like today maybe you can just walk us through from memory what it used to be like and now what you would do if you had suddenly a job like that it's a good question I guess uh in the past um I would actually have a graphics designer so like the salesperson would kind of um make the sale their Graphics designer would put together all the assets in Adobe XD and then I would sit down and using Wordpress I would spend two weeks almost or like a week just writing out every template file for the homepage for all the subpages the headers the Footers writing out all the HTML writing out all the CSS I think I'd have like 5 to 10,000 lines of CSS maybe 5 to 10,000 lines of HTML and then I would spend a week like I would spend days doing all the responsive design and I would spend days um testing for all the bugs that would happen and eventually I'd pass that back to the designer there'd be new mockups I'd have to revise that design um and finally ship it to you know back to the sales guy who would present it to the client whereas now like I can sit down in a day and build it with the client in front of him just Dragon droing elements or premade templates and moving the about and putting his con um his work straight in there in front of him and even show him how to do that so that if he needs to make changes I don't have to do them every single time either so it's a completely different process wow that's dramatic so going from something that might take like an entire month of going back and forth have lots of parties involved to you literally being able to interface directly with the client right in front of them and build it out how would that affect billing if they're like oh this only took you like you know a few hours to build this website like how much do you think you could charge versus how much you used to be able to charge well if someone said they can build you a house rather than in a year they can do it for you in a month does that make the house more valuable or less valuable now that you don't have to pay for your mortgage for the rest of the year and you can move in objectively that doesn't that doesn't have any sort of I mean it makes the house more valuable for sure but traditionally have looked at work is like like there's that that old uh anecdote about Picasso right so Picasso is sitting in a cafe and uh This Woman's like oh Picasso can you draw something for me and he he takes out a you know pen and a piece of paper he's like does like one of his beautiful like oneline paintings like where he draws like the Wiener Dog with a single line from a pen and it takes it's just a few quick strokes and it takes a few seconds and she's like this is amazing thank you and he says that'll be $5,000 and she's like what $5,000 it only took you a few minutes and and he's like yes but it took me 60 years to become Picasso yeah right that's exactly it that's how things work and that's how value is created in the world but that's not how people are used to thinking it most people would be like that lady and they'd be like shocked like really you want thousands of dollars for what took you that much time but you as a developer as a designer uh as you know essentially a product manager uh have uh built this skill set you've learned how to use all these tools um like how much would you charge like in theory if somebody wanted like I'm not sure if anybody in the audience actually would want to pay your hourly or whatever but like if you were to sit down with somebody and build something right in front of them to their specifications what would that cost now versus what what might it have cost to have that entire mon as I said before it used to cost about $2,000 to do in a week or two now it cost about $20,000 but I can get it done in a day and if you think about it I I always like to get the metaphor of like imagine you have a problem with your tooth it's a pain you know like a business pain right it's a pain in your tooth and you need a root canal now imagine having a to wait two months for a root canal and you have to come in five times for five surgeries for a root canal and by the end of it you spend half a year and $10,000 for a root canal I give you a procedure that takes a day and gets rid of that root canal for like you know about the same cost and it doesn't cause you any pain whatsoever would that not be more valuable to you than going through all that dentist pain and so that's the business mindset that uh business owners think about because for them their website means they're getting less conversions every day it's not working is that pain of a tooth essentially yeah that's a great way of framing it um and like what advice would you give to somebody who's doing like freelance development work and doing design work and potentially learning these tools so they can do what you do or they can sit down with the client like what advice would you give to them as as far as broaching that with a client who might already have it in their mind but it would only took you a few hours like I mean the ruk canal analogy of course something like yeah I would say go on YouTube search up Chris do Chris Doo um from the future and he has thousands of videos on how to talk with clients on exactly this subject to showcase the value of what you're building rather than just the hours that you're working yeah awesome man well that that is a great advice and I will look him up and I'll include a link to him in the show notes Adrian it's been so amazing catching up with you thanks for staying up late uh and just uh sharing your many insights with the community I hope everybody tuning in has learned a great deal from Adrien I hope you'll uh check out his his book hope you'll check out some of his you know free Cod Camp courses he's got a epic you know wire Framing and like development I think you use figma you may use some other tools in that video course that we published a while back uh are we going to get some new videos from you in the future yeah I think so I've got um some plugs in the roots oh sorry in the works and I've got some video content that I'm doing for the enhanced UI book so I'll see if I can maybe turn that into like a five hour long course for you guys cuz the minimum amount of time usually for a video of yours well I again I've learned so much from you over time uh and I'm continuing to learn like just over the past hour and a half I've learned a tremendous amount from you and it it's so refreshing to hear your perspective because I don't think you're a contrarian and you're like thinking differently from everybody else just to stand out I think you just have the most kind of pragmatic perspective on getting things done and it's so refreshing it's like you're like the least dogmatic person I've ever talked to in this field probably like all right well that's good to hear yeah it's great so um yeah well thank you again and for everybody uh listening to this I hope you enjoyed learning from Adrien and uh until next week happy coding thanks say yeah