hey everybody welcome to live coding with jesse i'm jesse and today i have a really exciting pull request that we're going to review and hopefully merge so i i just started looking at it but i'm i'm excited there's a lot of awesome things that are done in this pool request but i think i'm probably most excited about the use of react hooks so if you don't know what hooks are hopefully you'll know a little bit more about them by the end of this stream this is going to be kind of a short stream i just want to try to get through this pull request and merge it test it out and um and then we'll probably finish up with some question and answer got started a little bit later this morning um so let's let's get right into it so the first thing we're going to do is read a little bit about pull requests like i mean i'm i'm not gonna read it out loud but we're just gonna kind of review uh shout out to chrisbrownie55 for this amazing pull request so let's just do a quick overview we'll check out what's changing the files and then we'll pull it down as a separate branch test it out locally a little bit okay so some of some of the changes here like i said i just started to look at this so this is all going to be fresh we're going to be looking at this together um so he put in a use reducer so we're not going to clutter the component with a lot of state so that's that's cool um is now in the reducer and it's in a separate file um okay we got some um stuff in here to avoid rerendering which is good is performance uh oh cool so we got rid of that switch statement i mean i love switch statements but they they are quite long sometimes so that's cool i'm excited to see what that looks like uh another replace switch statement very cool random number generator okay cool so we could set a minimum maximum number awesome uh let's make the values of this you should experiment with reactive tools okay cool so all right so hooks has changed some stuff in devtools and chris is recommending that we switch to this experimental version of devtools that does look really cool so i'll probably do that i don't know if i'll get to that in this stream but uh thank you for the for the advice there uh also a prettier config i love this so i i usually do something like this uh in all my projects and i have auto formatting i hadn't gotten around to setting it up so i'm i'm super excited about this at some point we'll probably set up like husky to do some automated formatting on commit but uh this is this is really awesome so thank you for that all right now let's check out the files uh in case you don't know how i got to this point um i just went to the battle math repository on github the links in the description and i um i just clicked on pull requests and then this was the the first pull request in there right so we also have an issue that i think i made that issue i think it was just a readme or something um so now first thing you see is this now i'm going to go to the actual files changed so we can see the changes actually let me switch it to um split okay so i like viewing it like a split so on the left hand side it will show you your files now as they are and on the right hand side it will show you what the files will be like if you merge this pull request right um so there was no prettier config before that's why there's nothing here so now we have this it has right no semicolons i use single quotes a tab with two which is awesome that's that's how i roll we have oh significant reduction in the amount of code here look at that i love that so all the red is stuff that's going away so it's been deleted and green is stuff that's been added so um look at that so so much is going to be gone out of that app.js file it's going to be much easier to figure out what's going on like in terms of like layout so now we do have use reducer use callback use effect these are those hooks right or i mean this is not all the hooks but like this is uh coming from the react hooks which we'll talk about more all right and we also have this app reducer component now and um we're pulling in state a reducer and types from there so that's awesome let's uh let's scroll down i love that okay um okay so we have some additions now too right so let's go through this and try to uh figure out what's going on it's always good to try to figure out what's going on before you attempt to merge a pull request right you never want to merge a pull request that that you don't understand number one like it somebody could be trying to mess with you and mess up your project which i've never ever had happen but it's possible number two you still have to be responsible for maintaining your own project and if you don't understand how your project works then how are you going to maintain it right so also notice i did move the uh the view of my face up so we had some people say that it was being blocked by a watermark free code kit watermark so hopefully that's better let me know what you think about that is it does this work for you is it blocking too much let me know so all right so inside of our our app um have we moved to a functional component here i believe we have um so number one we moved to a functional component which is awesome i keep saying like number one number two and stuff i don't know i don't know what's wrong with me today it's just talking enlist um so use reducer okay so we're pulling out and certain number of enemies so this is all our state right um so we're making our state available from our uh reducer all right so this is what chris was talking about when we're preventing rendering right so that's awesome these are very helpful um uh comments so thank you chris uh so memorization if you're not familiar with memoization uh basically it's i think of it almost like uh caching for like a function right hopefully that makes sense right so it's not not memorization which it kind of sounds like but memoization so it'll basically save us in this case it saves us from rendering something if the result is going to be exactly the same anyway right why rerender it um let's see handle mode picker use callback just finish cool and notice like all these are not right we we need to set which we need to do all of our state changes and everything in our um reducer file right so now we're not directly doing like set state or anything like that we're all using this um this dispatch right so we're gonna look at the next file that we'll see is that dispatch file so hopefully this will make more sense but right when we handle answer change it's going to dispatch uh basically everything we're doing now is going to dispatch same way with submit we now have a theme um actually we had that before i put that in last time didn't i okay sorry i forgot about that um okay this is cool so this is the equivalent of component did mount for a functional component so it's use effect awesome that's going to give us a new a new problem on on component uh the component loading component did mount right okay so this should probably be pretty much the same uh i do i think chris added a key so i think i remember a mention of that so that's awesome you do get a warning in the console if there's no key on um uh like iterated elements and all right cool now here is the new stuff like a lot of the most of the new stuff this appreducer.js file uh so every time we see this export that means like we we can basically have access to that so you see it matches up with that random number generator that we had access to in app.js we have access to the types a reducer right so anytime you see that like we can basically use that in other files and import it alright so now we have this random number generator that allows us to have a min and a max which is awesome uh so this will come in handy too like if we want to add modes where you could do double digit numbers then we want to set the minimum to a double digit number right so that's that's pretty sweet all right so now we have our our types which let's see these look like they're all our kind of actions right um thanks for function here's our reducer right so we do have our types this this is actually uh very reminiscent of like uh redux style so if you've done redux this this is very similar all right so if we want to set an answer right then we're returning the state so this is uh this means when you see this dot dot state that means we're going to take the current state as it is and merge it with this so the rest of the state will remain unchanged except for answer right and then our action payload which is whatever we've passed it into passed into that meaning the the answer that's been typed in is going to come in here so that's cool and it's the same way for for like add an enemy um so you can see still some familiar right like we're we're not gonna add any more than six enemies right but you see this is basically just changing your state right all right so let's get down because some of these are pretty much the same i'm going to check the answer um okay so we're using eval here which normally you don't want to use eval but chris is explaining that eval is safe because we control the input okay so that's that's cool um let's see listen to see cool this is really cool update problem so i'm just looking at this i'll point out some stuff that's like really different you can see here we're still just taking our our actions and just basically updating state all right like we were before all right but now this has all been abstracted out right and now it's it's in uh our reduce appreducer component the same way set mode invalid action time oh cool and now we have an error so this is a big switch statement right and the default case for the switch is what happens when something is a value is passed that doesn't need any of the other cases right so now we have an error invalid action which that's pretty cool okay and then here's our initial state which looks just like our state did look right all right here's our our operators so that is really awesome so next step is let's pull this down verify that everything works and then maybe we'll merge it so uh let's see i want to make sure i stay on top of the chat here so let me uh now that we've kind of gone through the step one i'm going to go to the chat just for a minute here and answer a few questions and then we'll we'll pull this down and test it out rabbit works javascript says are hooks available in react native as a production feature i didn't think they were mature enough yet yes so as of react native version 0.59.0 hooks are available in react native so the current latest version as of yesterday was uh 0.5 9.1 so if you update react native to the latest version you can use hooks that's a good question uh it did take a little a little while for hooks to come out for react native after they had come out for regular react um but i think it wasn't too long to wait i i just kept checking like i was watching the thread the github um i guess issue that was talking about it so i knew exactly when they were coming out i was pretty excited about it all right gaming with us uh underscore yt says i am just 11 years old and learned complete html php and sql that's awesome uh keep up the good work you're gonna be by the time you get to be my age you're gonna be uh a genius in um web development let's see all right i'm skipping over some stuff um there are some good comments in there and of course anybody watching can read read along with the chat but i'm just looking for questions right now just to kind of keep things going quickly uh what language okay what language do you think is better for server side php or go um i've used php before i've never used go to be honest with you if you're gonna ask me what my favorite server side language is i'm going to say node so javascript but but that's because i'm i'm most comfortable coding with that right so that's not that's a very like uh that response is very much um based on my experience and not anything objective let's see all right cool i think i got through the uh the questions if i missed your question like go ahead and repost it and i'll try to get to it on the next round through um let's let me make note of where i left off at 8 48 48 okay um let's go back to this and i'm gonna double check the syntax it's been a little while since i've actually had to pull down a pull request from github so let me think um locally let's see if that comes up checking out pull requests locally see if this this is what i want there we go get fetch origin pool idea okay okay so let's do get fetch origin pool i already forget the rest of it give fetch origin pool okay there's slash slash id slash head branch name slash id slash oops not slash two slash oops head and uh we can name the branch whatever we wanted to it doesn't have to be the name of the branch currently for that pool request so i'm just going to name this one chris hooks okay since chris uh submitted a pull request and the most exciting thing to me out of here is the hook so let's see yay all right awesome now we can do a git checkout and we have the chris hooks branch let's do yarn just to make sure okay so sorry that was hard to see right so always do yarn um just to make sure you have all the packages right it it stinks if you forget to do that and you're testing stuff out and there are errors and things don't work and then you realize you forgot to pull in any new packages so in this case there weren't any new packages but it's just a good habit to get into so you can see we have our new files um where's uh let's see there we go there's our app producer all right so let's actually get to the to the testing here's our app right and we have addition yay subtraction multiplication division right let's do some of these so we'll do one we'll get it right i still never put in the uh being able to use the enter key so i definitely need to do that quit for getting that um let's see cool let's just try try this one what is that 27 i think so yay cool all right which one of these do you think looks the best i think i'll leave it on that whatever it looks the best i'm not sure i'll leave it on this pink for now right that's is prob maybe like the least jarring on the eyes right now okay so that looks good it looks like everything works i mean i could probably get out the console and see we had no errors the whole time which is awesome um yeah so what do y'all think are there any objections to merging this pull request if anybody has any objections let me know now within the next minute or so otherwise let's let's merge this pull request so i'm going to give you all just like is it probably just a minute or less to uh to let me know if there's anything uh in this pool request that you think absolutely should not be merged all right we do have a question of why is it called hooks um i think it's like there's there's precedent set already like in other frameworks for having these like hooks into um life cycle methods and stuff so um i think that's why why they went with hooks right so it's a familiar term for for what they're doing so i don't it's not like react came up with the name hooks out of nowhere right there are hooks and like uh i used to do wordpress dev back in the day and so like there are hooks in wordpress right so they uh it's like a familiar design pattern i guess you'd call it nikki says that visual studio code github pull request extension is great for this oh okay cool yeah i've never i never used any of the um like get extension stuff before um maybe i'll have to try that out uh creepy says is atom code editor good enough for the web for what yeah yeah i like adam all right so it looks like there are no um objections to merging this pull request so let's merge it so first thing i'm going to do is you git merge master so this is going to merge anything from master into put into this one now i already know that there's nothing that i've updated in master but i like to do this to first see like have i updated anything for in master since this pull request was submitted so i merge it there that way if there are any merge conflicts or anything if it really messes stuff up i'm messing up the the branch and not master right otherwise if i were to do it the other way around and try to first merge this branch into master i could potentially mess up my master branch and if i were to need to make a change like an emergency change and push that out really quick that could be bad right so this in my mind is much safer here let me make this bigger so we can actually see what's going on okay so everything's up to date like just like i assumed it would be all right now let's do a get checkout master and we'll do git merge and we'll merge the hooks yay okay and it's all i'm just always in a habit of doing that yarn you know after we do anything like that just to be sure okay so now everything's merged in that was an easy merge sometimes you have merge conflicts and when that happens uh you'll actually have to go into the files that have let's say that the same line of code was edited uh you know at this at the same time right like somebody made the pull request they edited their line and then afterwards i did something on master where i edited the same line and then i tried to merge we'd have to decide whose edits are going to stay so you would manually go in there and either get rid of completely of one of the edits or the other or have a combination of the two all right so thankfully we didn't have to do that if you stay on top of your pull request um and get them in there like as they come in you can decrease the chance of having to do uh having to deal with merge conflicts also if you make sure that you recommend that when people do a pull request they only change like very small things that can help as well definitely i don't think we have a contributing.md file yet no but you know you can explain it in there to like remind people you know hey make sure you have everything up to date like frequently merge in what's going on in master into your pr i even like to say like hey before you submit a pull request do one last merge from master to make sure your stuff's up to date and then the person doing the pull request handles any merge conflicts and then and that that can greatly increase your chances of getting your pull request merged not just in this project but in any other project so it's kind of like the polite way uh to do a pull request but all right so that's that's cool and we'll just just to prove like everything still works all right here we go it works and let's just put in um right so that should give us let's just like verify right we're not getting any more than six right hey that's the right one okay so it still works and now cool so i have a few minutes left before i have to start doing um work stuff let me double check my calendar really quick to just see exactly when my first meeting is okay all right we're good so let me go back to the live chat and answer some you know any of the remaining questions um also let me push this i forgot to push this up to get up so let's do git push okay so now that we've pushed that let's check out our repo so i forgot about this so look it's already changed to say merged so i don't have to come back in here and do anything um you know github detects that i've merged this these changes in and it automatically says it's merged so if we go to pull request now there's no more open ones there's a closed one and if we go back to our code let's check contributors this should be yep so now there are two contributors right and uh chris is actually the number one contributor on this this repository right now so uh congratulations on that uh and this is going by commits right so um yeah so if anybody wants to get on this contributors board uh submit a pull request okay so that's it for the code portion now let me finish up with the questions and um then i'll have to get to work sorry i'm trying to find my place all right creepy says how much can i really make as a web developer because i really love web developing and i want to be a frontend developer um okay that's a hard question to answer because it depends on where you're where you live um like what part of the world or even what part of the country you live in and there's a huge range of um salary right which is going to depend a lot upon like your years of experience you know in your company and stuff so um i've seen jobs you know people offering even in the united states offering as low as like uh like fifty thousand dollars for front end developer right and then i've seen jobs offering over a hundred thousand dollars for uh developer for front end developer it's somewhat rare to be over a hundred thousand dollars unless you're in a bigger city if you kind of switch over to full stack or become a software engineer those salaries can get higher than that but it's it's quite a large range salary range in the united states oh creepy says in india yeah honestly i have no idea what the salary range is in india but i know we have a lot of viewers from india so if anybody has any insight into that please let creepy know in the uh in the live chat um nikki says how do you handle merge conflicts in your lock file i delete both and do a fresh install actually that's a great idea to just do fresh install and delete i i never directly edit the lock file and i recommend never delet directly editing your lock file if you don't know what we're talking about it's this yarn lock right here so like this this thing is just kind of like pretty crazy right this is you're not meant to directly edit this this is created by yarn based on your package json and it keeps you know track of all the the packages that are installed all the node modules and all the individual versions uh so yeah if there happens to be a conflict i i think nikki's uh advice is is perfect just delete do a fresh install let's see uh creepy says but would i need a cs degree to be a web developer and can i get higher chances in the future in the united states you definitely don't need a computer science degree i don't know what it's like in india though so i i don't want to give you advice there because i i don't really have knowledge of that uh troll master says web developer doesn't even need a brain these days that is like so perfect for the name troll master so you're staying on brand there hd movies pakistan says dear sir please send your email um you can reach out my email is out there i have a lot of contact info in the description of this video so you know reach out to me on social media and stuff like my my contact info for like every part of my life is out there and freely available uh online so it's not hard to get uh troll master says hmm so a web developer is not a software engineer all right here's when it comes to titles like web developers software engineer front end back end they are so mixed up these days like from company to company it's it's different those will be defined differently right so you could be labeled a front end developer at one job doing the same thing as a software engineer is doing at a different job or a full stack engineer is doing a different job it's it's really so like there are companies that just don't understand the differences um so don't don't take titles like that seriously uh like let's say if you don't think you're a full stack if you think you're just mostly front end don't be afraid to apply to a full stack job because or a software engineering job because the titles really don't mean that much in terms of what you'll be doing at your job at least that's been been my experience i applied for a lot of different jobs um a few months ago and got a lot of interviews and it was like every job had a different title but they pretty much all were doing exactly the same thing uh music license how to become the best coder without a degree um i would say code a little bit every day uh keep trying to code like actual websites and learn you know that's the best thing right like people with a computer science degree don't necessarily code like real things every day right so if you code somebody goes to school for four years for computer science degree but you code every day for four years like real projects you both come out you're gonna have a really good portfolio and you're gonna have a lot of real world experience you probably will be a better coder at that point given everything else being equal right like let's say you both have the same iq and all that you know um right so there's actually coding is the best way to become better at coding right practice just keep practicing and that's what creepy said practice in online courses yeah for sure jacob evans says i don't have a computer science degree and i work as a react developer at discover see that's awesome yeah like i do not have a computer science degree now i have a business degree so i have a college degree but i don't have a computer science degree and i'm a senior software engineer for dick's sporting goods so i do react development for react native development for them right now music glasses how to become a developer and how to earn money online um well i think it goes along with your earlier question like just take online courses and practice um hd movies pakistan says okay sir thanks yeah so let me know if you if you really need to get a hold of me for something you know just send me a message uh on probably twitter would be the best way um yeah that would probably be the best let's see um let's see all right troll master i just deleted that message it wasn't like too bad but i want to keep this safe for children so um that's just to let you know why i deleted that one i'm sorry i probably messed up the pronunciation your name says i'm trying to learn advanced react and redux any recommendations tutorials books etc um let me think what did i see um there are some advanced react training courses i think it's called there's a of course called advanced react training so try to search for that uh i believe there are like online courses that you can do um so i would yeah definitely check that out i'm mad sorry i lost my place uh moshiko says how do you keep motivated with programming um i really like it so it's not that hard to stay motivated um and i don't know there's just like no i want to say like there's there's no choice but to not be motivated really like i work fulltime i have a family i have bills to pay like i do i do the work right and i like the work so it's like even if i start to get like where i'm not motivated i still have to go in and do the work every day and once i start to program i i get into it i get motivated so it's not hard for me uh i guess but like what really motivates me like working with new stuff you know working on like cool projects like that that is kind of motivating um so you know learning new things motivates me uh creepy says is it necessary for a full stack developer to learn other backend languages than javascript like php or go it's not necessary unless you're the job that you want says it's necessary right so so much of what you're going to learn is going to be dependent on what you have to learn to do whatever you're getting paid to do let's see uh w3 develop says should i learn javascript php uh with python simultaneously as my first language i don't know why you would want to learn php and python simultaneously um they're both backend languages unless there's a good reason i then i don't know i don't know why you would need to learn both you certainly could though i mean javascript with one of those other languages makes sense if you want to just do javascript front end and pair them with a python or php backend there's no reason why you couldn't do it it's just i don't understand um that particular combination uh suraj says nowadays which language is used more for development for game and webs okay so javascript is where it's at for web development uh no doubt for game development that's a whole different story i don't know that much about game development so i'm i'm gonna have to defer if anybody else knows more about game development then you know um please let us know but uh you can definitely make web games with javascript but like serious game development like the games that are making millions of dollars like i don't to be honest with you i have no idea what programming languages or frameworks they're using i hear like unity unity i know is a tool i guess that a lot of games use i don't know what the underlying language though is uh ling yini tv says can you share how much you earn as a developer for dicks uh i don't know i'm not exactly sure what dick's sporting goods uh what their opinion is on sharing salary stuff so in general i'm i think sharing salaries is a good thing but seeing as how i just started out there i don't want to do anything um that they would not like right away so um maybe at some point i'll share that but maybe just not right now like i want to be a little bit more careful about it right now so um hopefully hopefully you understand all right i think i've gotten through all the questions and that's good because i definitely have to get to my job my regular job now uh thank you all so much for watching had a lot of good questions so i love that and um i will be back next week probably wednesday morning of next week um i'm still hoping to do something either like a live stream or a video about graphql on my channel the link to my personal channel is in the description um just haven't had time so maybe this weekend will be the weekend that i get to that so if you're interested in that uh be looking out for that um otherwise yeah thanks again for watching and uh for all your help a big thank you to to chris for the amazing pull request and yeah so i'll see you next week and have a great weekend