hello hello hi thank you for the lovely introduction and thank you to the sponsors as well um so yeah uh i can click that's not my slides um yeah so my name is nikki i'm a technical manager at a company called futurelearn we're transforming access to education online and before i was a technical manager i've been a web developer for a long long time more than a decade as saren said i don't want to tell you how many how much more um but i'm definitely on the developer end of the sort of designer developer skill set i've got an appreciation for design i don't think you can work very long in this industry and without having that but i'm not a designer so i have to work really closely with designers to ship the products that we build i can't do it on my own so i've sort of developed this really keen interest in understanding and helping developers and designers work together more closely and effectively so this talk is about one way of doing that so today i want to talk to you about developers and designers who want to push their imaginations to the limit and push the web to its limits i'm going to talk about how one of our most used solutions this grid full sort of layout that we always fall back to has served us really well for a really long time but the world has also moved on and so can we so this is what we're going to cover web design is getting boring i always feel a bit like i'm putting myself out there when i say that um it's a bold statement and i always like to say as well hashtag not all websites the js oxford website is really good uh really usable i love the little timeline of the events that are happening today um so we're just going to look at a bit of the history and a bit of a context to look back to look forward and then some final things that uh oh practical tips of course sorry the reason you're all here you skipped over the middle bit uh and there's some finally some sort of uh things that i stumbled upon when i was doing some of this work and things to look out for so let's start by going back why even grids what is the point of them we've all been using grids and building them for some time online and offline so why are they the goto tool for sort of page layout to answer that question we need to go way back this is the pyramid texts it's dated to around 2300 bc and it's the first example of human writing like human communication i could find online it still kind of blows my mind that uh humans existed 3 000 years ago and we were trying to communicate with each other when we wrote this stuff down and i can find it on the internet and show it to you uh we can see what they wrote this is so cool but i would like you to know i think this is a one column layout a lot of columns but it's all one one column a few thousand years later five six eight a d this is the birmingham birmingham curan manuscript again like beautiful stunning i can't believe we have access to this kind of stuff still one column this is page one this is page two finally 808 a.d we finally get three thousand years after sort of chipping away on those stone walls we get to the two column layout well done humans and i think the benefit that you can see immediately here is that there's a lot more information on this page it's a lot more dense this is a medieval manuscript text and you can see the benefit already um this is the sort of marginalia that came a lot later than the original text of the book and somebody's been able to sort of start relating um sort of arranging related concepts next to each other they can be separate but they can still be connected to the main text that they refer to in the early 20th century the art movement exploded the grid system itself was named uh this is a book called grid systems in graphic design and that movement sort of exploded and flourished and this starts to look a lot more similar to the kind of modular component systems that we use today massimo vignelli designed this uni grid in 1970 something for exactly that purpose so that the output the products that this grid was used to create were more consistent but easier to create and easier to reproduce and quicker and this still helps the national park cartographers today they use the unigrid to design the maps for the park keep their layouts readable make sure that one element is not over balancing another and this has a practical benefit as well looking at this it just looks really good that's useful because it helps it make sure that people when they're looking at the maps around the park they're more likely to stay looking at the maps for a longer time and hopefully absorb more of the information they need to stay safe and have a good time it helps get their message across but there are some bad examples of using grids too like this so this tweet is from more than two years ago now i don't think a huge amount has changed um i'm really sorry to kind of keep bringing up this example because it is a little bit snarky i know and but i think it just does show that you know you can take without relying on this grid too far this can be a problem and i'm not knocking it the reason we do this is because on many levels it works it's modular it's easy to reproduce if you use the uni grid it makes the maps really look really good and you know make sure that you take that information and stay safe in the park but it's also really boring you look at this and you can see the clues in the name it's called the css box model you can have the margin on the inside or the outside but it makes boxes you know they're they're all the same shape communication and design is this kind of human impulse we've been trying to do it for 3000 years it has this kind of long and rich history and i think it's a shame that we don't make more use of it and then things like this no problem it's really good that you can go on squarespace and get yourself a website now anyone can do that fantastic but again we're starting to lose the benefits of this kind of 3 000 year old history of communication and design when everything starts looking so samey and sort of off the shelf and you run the risk of not getting your message across as effectively as you could so the only reason i'm really even giving this talk is that um through like many conversations over many years with friends designer friends and developer friends of mine at work and they say hey we've got this box we've made this layout you know what can you do to make it look a bit more interesting and for the last 10 years all i've been able to really say is well i could put rounded corners on it it's not very satisfying nobody's really pleased with that answer and the only reason we even have the ability to put images and um use css in browsers is because designers got frustrated and they wanted to add color and they wanted to use layout and use fonts and not be restricted it doesn't have to be just rounded corners let's think of it bigger so i'm not the only one who thinks this this is jen simmons she's amazing she's like one of my heroes she said this during a video discussion at ballista park last year she's one of the people who's doing really amazing work in kind of improving graphic design on the web and improving typographical design on the web she just she's a designer and developer advocate at mozilla and a member of the css working group and she's really pushing this idea um not just by doing talks and by sort of telling people about it but actually working with the people who are kind of implementing this stuff to make the web better then she said this we're copying each other's work too much too many things look like medium too many things look like web design out of 2007 ah that's 10 years ago too many things look like copies of each other everybody's bored so there is a way to make design better on the web it's that way apparently so once i started thinking about this it was in my mind i just started seeing it everywhere these are examples of graphic designers sort of pushing the boundaries of their layouts and you can do really interesting things like this kind of the line of text following the dress all this really striking art direction that kind of really draws you in and makes you want to read the article i know we don't need enough of that with like clickbait headlines and stuff but you know i think this is much nicer these were all from the same issue of one magazine somebody there really likes this style but the point of all these examples is that like print can do this and for decades we've been saying you know the web is not print and that's true it isn't we shouldn't try and make things all exactly the same but if we have the technological ability now to do it in a sort of inclusive accessible practical scalable way then i think that we should be taking advantage of that so if we did want to do something a bit more interesting like this and we didn't have css shapes how could we do it have we done it in the past well i'm sure you're familiar with this you could go super old school just blind all the text in an image i'm sure you know all the reasons why this is a terrible idea um i think that a lot of web comics are still published like this uh which i think is a real opportunity for somebody out there a really interesting industry that would really benefit it would be really great if someone came along and sort of gave publishers more options for doing this kind of stuff and make them available to a much wider audience if you didn't want to put all your text in just one image you could have every line of text kind of positioned you know manually with spans and paragraphs with javascript is still not particularly maintainable or scalable or accessible maybe performant there's probably lots of other ways that you can think of as well that aren't great so that's kind of where we're at before css shapes like the kind of current state of the art i think you can tell where i'm going with this let's get away from these boring rectangles we're stuck in our old ways are stuck on these grids but actually there's something that can make things a lot more interesting for us and a lot better grids are great for all those reasons like legibility white balance space you don't have to lose any of that but once you understand those rules and you've put the time in to learn how and why they work and you have the foundations and you know why it's like this then you can break the rules so you can break out of the grid and there is a way to do that hurry so we're on to the practical tips section and the first thing i'd like to talk to you about is shape outside shape outside applied to an element makes the text flow around that element in the shape that you've chosen hopefully quite obviously named we're going to get into some examples in a minute the caveat on this at the moment the shape the element your shape floating around must be shaped the element must have must be floated so apparently just by that today that might change they may be like fixing that up in the spec don't know when random rumors in gossip and the element must also have shape height and width so it must have layout so we're just going to be covering the top three values today i couldn't i had to sort of play around with it and i couldn't do anything with insert that you can't already do with floats so i don't think that's particularly interesting if you want to have a go and have a play then you should an ellipse i think is like a type of circle i told you i wasn't a designer i got some raised eyebrows with my when i was doing this work with a runty of my designer sort of colleague but i'm sticking to it um so let's have a look at shape outside circle hopefully this is unsurprising to you but it aligns text around a circle these properties are all very wrong seal they do what they say on the tin so this is what it looks like um this is a very simple example if you want to have this kind of red dot layout you can do it however you like and then you just have this kind of one liner to get for things are lining around the the shape it's really nice really simple really easy and if shape outside is not supported you just get your standard sort of rectangle boxy text that you always had before you haven't impacted your accessibility or your readability that's circles easy right polygons so the simplest example of a polygon is a triangle this is what it looks like again this is like really simple examples you can set this up however you like i've done it like this and you just have this one liner again to add the shape to the property to kind of get this nice alignment um but you can see that this is like a little bit more complicated you actually have to plot your points now we can't just say oh it's a circle or it's a square i guess if it was insert or whatever it's getting a little bit more complicated again if it's not supported doesn't matter it just falls back great easy another example of a polygon this is um got the corner cut off and again you can see when i'm starting to make this shape i've had to sort of plot an extra point to kind of figure out like where i want the text to kind of go so it's starting to look a little bit more complicated now like oh i've got to keep all these numbers in my head if i want a more complicated shape than a square with a corner curve like what do i do i guess worse right so i didn't have the space to put all of the points on but it like basically goes like over the other side of the room um polygons can have infinite points i think uh so it starts to look a bit more scary and it starts to look like a bit of a pain in the ass and a bit of a barrier to entry like if i have to do all this work i might not be bothered like how can i convince my designer colleagues to help me with this so we're very lucky that a whole bunch of people have done a whole bunch of good work to make this a lot easier and there are some tools to help us make these shapes so i have a video i don't have any sound for this hopefully this is okay um this is firefox nightly but this tool has just landed in firefox i think so everybody has access to this now so i've got my dev tools open and i'm going to go and select the element that has the vape applied to it which is the cat and then when i do that i'm sorry it's so small um you start getting these kind of rules out here and there's a tiny little button next to the shape outside and if i click on it i can see the points that i've got oh my god this blew my mind when i first saw it look mom i'm a designer amazing so the lovely thing about this is that everything updates in real time here so once you've kind of sat and played about that and made it how you want you can just copy those over and straight into your code these tools also are not just for shape outside i think there's like a grid editor in there as well if you want to do css grid um and i think yeah this is just from flatfox so yeah go and have a play with that because it's amazing the power of the browser now is just phenomenal uh if you don't like firefox there's an editor for chrome as well it works in very similar way um i don't know if this one has grid i think it might be just shapes but yeah it does kind of the same sort of thing and you can kind of pick your points up and move them around so that's it for css shape polygon shape outside polygons but i found when i was doing this and sort of playing and making up some examples even with these tools um i was still finding there's like a little bit of extra work that sometimes i don't know if i can really be bothered to do so there's one last value i wanted to tell you about was shape outside which again like completely blew my mind when i found out about it it's just the cleverest thing i've ever seen um and that is the url value so this is a kind of similar layout to the one we had before with the cat um same effect as before but way less code this time we're not going to set all of our points out directly or play in a browser with it or anything like that but we're still going to get this oh no double click but we're still going to get the same effect oh the magic is rude uh you use a transparent image and it picks up on the alpha channel so you need a transparent png or a transparent svg it also works with both of those and you just pop your url to your image in there and there's this new property the shape image threshold uh so 0.5 there means all the pixels that are more than 50 transparent are the ones that it will kind of pick up on and flow around so i found this this is a way more common use case i think in my experience anyway that you'll be aligning text around an image rather than just a random shape so you may as well have the browser do all the work for you i think um especially because you've already had to do the work to like prepare the image right somebody's had to go transparent out the bits they don't want or what have you so you've already done that work you may as well use it rather than duplicate it all in your points um so that's all about shape outside let's have a look at browser support how real is this like when can i actually use it so okay it's not too bad uh just coming in firefox which is great i'm very excited about that edge under consideration good okay um never gonna be an ie okay well like over time that's not gonna become less of a problem um so yeah it's not supported in all the browsers so we do have to be a little bit careful about how we're using it and sort of think about our progressive enhancement and uh sort of consider our fallbacks but i say only you know consider the fallbacks the great thing about this is that this is fine you know um it's a oneliner it doesn't impact your performance to add it it looks really good if you don't have it it still looks really good this is the sort of thing to watch out for just kind of thinking through all the cases and what might happen if things aren't supported so that's it for css shapes we have some friends who also want to come and play css clipping so you might be familiar with some of this it works i think the kind of same way that it does like photoshop or sketch or one of those editors using a path to draw a shape and then the things inside the path are visible and the things outside aren't let's look at some examples um before we go on to those the syntax is exactly the same as cnss shapes i love that they've done this i think this is really clever barrier to entry again um these names these shapes are called the basic shapes uh in the sort of geometry spec of browsers slightly confusing css shapes basic shapes but you know once you've got your head around it it's great you can just use them for everything um very helpful so this is the kind of thing that you can do and again like i did this in the browser tools i'm just kind of playing and dragging things around worth noting before we dive in i think as well um the clip path works on svgs as well as html elements so i'm just using it on an image here or any other element you could do but they do work on svg as well so i'm sure you can imagine the kind of things that you could do with this all kinds of you know different shapes this is really simple again and you don't have to prepare your images you just do it all in the browser a lot of times when i've been doing this kind of thing with designers it's been like quite a round trip and a lot of back and forth like they'll make an image and then i upload it and then we look at it and it's not quite right and then they say okay well give me another image and then i upload it and then look it's still not quite right so but with this you just like sit and play with the points in the browser and it's just so much quicker giving designers a lot more control over the sort of end result i think a lot quicker as well um so this is a real world example of clip path this is the website that i work for futurelearn um this is what the amazing learner growth team used to build a new module for the home page which is that top kind of banner aspect and they wanted the uh steps we call them the future length steps to kind of wiggle down between those images sometimes also reflected on our branding although not apparently on this slide um so that's nice we like that um this is how it looks on mobile um all of this stuff like css clip path and also css shapes uses any css unit so it can be responsive i think they use calc and percentages to make this work rems m's whatever you like whatever works for your sort of situation and again it's a oneliner you have to kind of work out your points and we have this sort of slightly complicated design so we did that and we were happy to do that i think we did a mockup in like codepen or something to kind of prove the concept but because we did the shaping the code we didn't have to go back and forth with the images constantly it's quite nice time saver and again we were quite happy with this fallback of just the straight line so this is like edge something that it doesn't have so that's click path on html elements i'm sure you're going to see more of this later but it gets really exciting when you start putting svg into the mix with clip path um svg is just xml right so you can put text nodes in it you can start doing stuff like this that's an image behind the text i just think this is very exciting i'd love to see people kind of doing more kind of interesting layouts and interesting headers and interesting text with this kind of stuff um because it's svg as well you could have multiple nodes inside so you could have um you know multiple kind of windows onto one image i sort of had this idea that you that might be quite performing if you have like a big image with different windows on it into different areas i'm not entirely sure if that would work but it sounds like a good idea um let's look at browser support for clipbar a lot better this is good um worth noting again this is for html uh clip path on svg works pretty much anywhere that svg is supported so pretty much everywhere but again you know looking through your fallbacks making sure that your progressive enhancement is you know you've thought about all the cases so that's it for practical tips there's a few final thoughts that i had while i was working on this stuff and while the team were working on the homepage module things that i think are just important takeaways to kind of remember so the first thing i think is really important is that all of this stuff not just css shapes and clip paths but like anything that you're using that isn't supported everywhere it's like it's not all or nothing just because some of this stuff is not supported in every browser it doesn't mean you can't use it it just means that you can be a bit cleverer about how you design it and how how we build it and there's a nice tool that can help us do this so what do you do if you've made a really nice design but it's a little bit more complicated than this these are really simple examples on purpose to sort of help build up our understanding um how these things work yeah i did that on purpose triangles and circles yeah they look really good but actually you know in my team in my production website uh it's going to be a little bit more complicated um so going back to the example that i showed you earlier this is what we wanted to build and we were quite happy with this fallback when i showed you this example before actually i was again simplifying it um there's something wrong with this picture uh very subtly wrong but we were not happy with this fallback as it stands if you um if you look at it in the browser or you have the eye for it you can see that it's not perfectly symmetrical and this is a problem we weren't actually happy with this the first time that we did it so we added some margin so that they do actually line up great but now we don't want the margin if the clip path is applied oh like i'm starting to get really confused it's okay we can get back to this we just reset the margin inside a feature query so there's a new thing you might have heard about it the supports keyword we say if click path is supported then we take away that margin that we added for when it isn't supported and again like it's really simple it's like two lines um it works a lot like the media query syntax is very similar um and i just wanted to reiterate as well after saying all of that you don't have to do this um if you're happy with a sort of slightly if unsymmetrical fallback then that's completely fine if you need to do some shenanigans and resetting and overriding then you can just include those in that supports block and that's fine too your fallback won't be affected the important thing to note here is that yeah in all those other examples the circle the triangle it was fine we don't have to do it it just defaults back to a rectangle the supports keyword is for more when you're in a slightly more like complicated real life situation and you want to finesse the detail you only have to use support so the natural fallback you know is something you're not happy with so next up building on that i suppose is to say like this can be a bold statement and a bold layout on something like you're thinking really big or it can just be a really small enhancement but the important thing to remember with all of these things is to remember those kind of inclusive design patterns so this is from a real website an example in the world and one thing i wanted to highlight here is that all of the sort of real world examples that i've seen have the ragged edge of the text on the right hand side and not the left and that's really important in left to right languages reading from ragged edges on the starting end of the line is really difficult your eye can't like sort of go back to the line and find it even more difficult if you have dyslexia or anything else that sort of makes it harder for you to read but it's difficult for anybody so don't do that the final thing i wanted to say was this kind of yeah use it or lose it i guess um this looks a bit dry and it is this is the spec for css shapes i'm not really recommending that you like go and read it um but i think it is kind of important to keep an eye on stuff like this i guess that's why we're all here tonight um follow jem simmons follow rachel andrews who's also writing about css grid and other shape stuff at the moment follow a few other people who are writing about this kind of stuff because if we don't use it the browser implementers will just think that we don't want it and they'll take it away you know that's actually happened with a css shape inside um nobody used it slightly more complicated than they kind of expected it to be it's gone away until we say that you know actually we do really want this they do look to us for feedback and we should let them know what we want lastly some other ideas if uh this has inspired you and you want to find out more about css shapes or any of these other things these are some other sort of interesting typographical design tweaks that are coming to the web hopefully soon i've linked everything up here so i'll put the slides up later and you can just click through so that's kind of it really mainly i just wanted to be to ask you to be inspired go away make stuff tell me about how you're getting on i'm really interested in your shapes what you make and some more people for inspiration thank you very much everybody