closures a closure is the combination of a function and the environment within which that function was declared the environment consists of any local variables that were in scope at the time that the closure was created in JavaScript all functions form closures in other languages without closures the local variables within a function only exist for the duration of that function's execution let's look at an example so we have this function make Funk and we have the our name equals JS nuggets and then we have another function within the function display name where we're going to console.log the name and this function make Funk is going to return the display name the other function so down here we're going to create um the my funk equals make Funk which is we're making a variable that's this function and we're going to run my funk now it's going to return display name now if we run that it's going to display JS nuggets so it's returning this function inside that function there is no name but because of closures this function that's been that's being returned and run here has access to the environment with that was created in which means it has access to this JS nuggets the name variable even though this the name isn't even in here so that's basically what a closure is so the function has access to any variable that's within the scope or the environment that was created in now let's look at some more some more practical examples a closure lets you associate some data which is the environment with a function that operates on that data one way to use a closure is to emulate private methods private methods can only be called by other methods in the same class but JavaScript does not have a native way of doing this it is possible to emulate private methods with closures okay let's look at this we have a our counter and this is assigned to an anonymous function and here's the anonymous function right here and as soon as the anonymous function is assigned it's executed as soon as it's been defined these two parentheses at the end is are going to execute that function and put the execution of that function into the variable counter and the so it's going to return when it executes the function it's going to return this into the aable counter so this is actually first going to create a shared environment and then it's going to um send out some things into the variable counter so the Shar environment involves the private our private counter zero and the function change by value which is private counter and then it's going to add the value and then assign the the added value to private counter it's going to increase private counter by the value so then we're going to return these functions and um because these functions have been returned into the counter you are only going to be able to access these functions from outside of the counter so these are going to be private and these are going to be the the public methods so we're returning the increment function change by one it calls change by one and see this increment method that's being created can access the change by method because it's in the environment that it was created in this decrement can access the change by because it's in the environment that was created in and this value can return the private counter variable because that's within the the environment it was created in so neither of the private items can be accessed directly from outside of the anonymous function but they can just be accessed by the three public functions that are returned from the anonymous rapper these are the public functions thanks to javascript's Lux School scoping that each have access to the private counter variable and the change by function so let's see this in action we're going to console doog counter. value counter. value and then we're going to increment it we're going to increment it again then we're going to counter. log count console. log it again then we're going to decrement and then console.log so let me run this and see the first time the counter is zero after two increments it's two and then we decrement it's one well thanks for watching I hope this gave you a good introduction to closures my name is boars and if you check the description you can look for some links that where you can get some more information about closures including a link where I got a lot of the information for this video please subscribe and remember use your code for good