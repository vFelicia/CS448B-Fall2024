hey everybody welcome to live coding with jesse this is jesse and today we're going to work on uh routing and maybe bringing over some data and we're going to start out with uh figuring out a solution to a feature that i know that we've needed for a long time i've just kind of been doing other things so figure you know why not try it today i have an idea of how to make it work but i haven't tested it yet so we'll work on that together i'd like to get at least one pomodoro session in uh today and then maybe uh maybe another one or maybe we'll just go right to questions it depends on whether or not we figure this out so i already put in four pomodoro sessions of just data migration uh so my brain is ready to switch it up a little bit and uh and work on this so let me wait there we are i had to wait a second for the analytics data to update it was showing i had zero viewers uh which i know wasn't true because some of you were waiting before the stream even started all right just a heads up to everybody i'll probably remind you again at the end but i will not be streaming tomorrow i will be at the google i o extension conference in pittsburgh so if anybody's around uh the pittsburgh area and will be there let me let me know um let's see otherwise let me switch over so you can see the screen we'll get started i'm gonna start my pomodoro clock i'll just explain to you very quickly what we're trying to accomplish uh and and then we'll get to it if you all have any ideas on how to make this happen please let me know um but i'll say what we're gonna do then i'll explain to you what my idea is and then we'll we'll get to coding so this page this faculty page the url is education faculty so when we have slash education is the url that takes us to our it displays what's under the post type of majors but on this particular page we don't want to hard code this list what we want to do since we already have a post type for faculty members and you can see well you can't see it's too small but when you go to a faculty member page the url is slash faculty slash and then the faculty member's name uh so totally different post type but we have the category of the the program uh so what we should be able to do is say something like uh if if you go to this page to a faculty page within a certain program a certain major then grab also grab the the data from the the faculty post type but only those pieces of data that have the category that matches uh the um the program here from the url in this case education so it'll be a little bit different than what we're used to and we'll definitely have to um we'll have to iterate over that data so we're going to map over that data so first steps first is let's get a route into the router so we have something to look at on a page and then we'll get to the rest of it okay so here's our router and let's make sure we we have the english route let's just all right cool so we do have english so if we have english slash classes it goes to here we have senior thesis in your portfolio so let's go here and add a faculty as a route and if we're going to add faculty um then we'll pass in the slug or i'm sorry we'll pass in the id maybe here if the router's faculty will pass in maybe english let's try this so if if we have the route of faculty we'll pass in english but here's what i'm going to try to do i'm going to add in some extra stuff here and i'm going to see if our router can handle that so let me type it out and then i'll go back and explain what i'm what i'm doing default type is going to be um um equity list okay all right so i'm gonna save that i don't think it'll work right away we're gonna have to do some more work on our router but here's here's what i've done here's what i hope will will happen at some point hey everyone i see a few you saying hi uh in the chat so welcome hey anna john matthew and harshit oh harshit that's great uh harshit um and i have been working on a side project as well as nikki's been working on it in javascript i should say i've been doing not that much work at all harsh just been knowing horsham and the others have been doing all the work but just wanted to say hi and uh that that's actually gonna come out today the beta version so uh maybe harsha could let you know the url in the chat uh if it's if it's ready soon all right so here's what i think is gonna happen what i hope will happen is so we have when someone goes to the route english uh what will happen is by default we'll do the same thing as we normally do is that we're going to go to the the page the components of major and the default post type to get the data from is going to be majors and then the id which is that last part of the url by default will just be english to display the home page for the english department but then depending on what goes in here it may display something else but if we get faculty instead of you know anything else as that last part of the url i wanted to display a component that we're going to create called faculty list and i wanted to use the post type faculty because that's we're going to get the data from then i wanted to pass in as an id to graphql english so that we can use that to grab the category english and have those particular post type show up so there are a few things that might need to change i don't know if we can select uh categories by slug or we need to use an id not 100 sure so you might have to switch this to the id number for english also i don't know if we've built this functionality into the router yet to handle all of this i know it works for the ids but i don't know if it works for pages and types so first things first i guess we just navigate to it and see what kind of errors we get so first let's make sure i didn't mess up the normal routes so we're going to go straight to english and see if anything happens okay i did not mess up these routes which is awesome and i want to make sure let's see english classes let's see if this route works tell you the truth i'm not sure if this route ever worked because i don't know if i set up the data for it i'm guessing it's not going to work because nothing's happening all right let's look at another i see we can try something on the senior thesis then you pull it out all right enough with that let's just go to the faculty see if we we're going to get an error i just want to see what the error is did i mess this up a lot i'm just going to restart that server actually i don't know if i ever did a get pool to start things out no all right um let's just stash these for now yeah always start out your day with the get pool so otherwise you'll have weird stuff happen so how do i unstash something now i'm gonna have to look this up if anybody knows how to unstash what i just stashed uh offhand let me know in the live chat now otherwise i'm gonna look it up you can just get stash pop but once that's your changes okay sweet all right get stash pop so i did look it up but i see uh vishal you you put that in the chat you probably would have had it in faster if it wasn't for the delay uh in the in the stream itself so thank you thank you for that i never needed to unstash anything before that's crazy i've known this for years i've never actually had to unstash something that's one of the cool things i think about doing this kind of work you learn new stuff constantly okay and i'm not sure if there are any questions yet in the chat but uh just to let you know uh in case this is your first time watching uh i will get to the questions in the chat i'm just going to do a bit of code first and then i'll get to the chat later on so if you can just hang in there for a little bit your question will get answered hopefully i can answer it all right so now that we have the changes in here where they should be let's go back over here and see the site cannot be reached oh because i restarted it let's see if we can get this to load enough to give us some sort of error message otherwise i guess we can just start making our component you know i should be able to go down to the the routing function and just see if this would even work so let's let me just stop that for now let's go down to our routing function and walk through step by step what will happen if we give the routing function this this data all right so what i'm going to do is uh i'm actually going to open wait is this i may already have this open in both places no maybe i don't keep open i just i just want to open it up in two places that's all i want to do i want you all to be able to see uh what what we have at the top versus what we have at the bottom of this this uh page let's see if it'll let me all right cool so now we have the same file open in both sides let's shrink this down we don't need it and what i'd like to do is i'm going to leave this here so we can see exactly what data we're we're passing into our routing function and we're going to scroll down here to the routing function and step through what will happen with this data and that way even though we're not getting an error message to help us we should be able to catch the errors and adjust the um the routing function like that so i'm going to do my best to try to explain this as i go along uh if you if you'd like to look at this on your own computer check out the link to the repository it's in the description to this video or on the server.js file on the master branch okay so here's what happens when the browser would navigate to that slash english slash faculty route so it's going to look at this first one is going to be slash english the second will be faculty we will have no third all right so that first param english second param faculty all right let's continue on all right all this we don't need to worry about so the type is going to be first param the page equal page type first frame pages wait a second okay so this is not really going to be an issue because we're telling it what the type is so this is like kind of a default backup if we don't say that so we can keep on going through here so if the length of the params are one it's going to do this we can skip that because we have two right english and faculty so let's go all the way down to here we're going to go to this else if all right and this is what we want where it's there's two parts to the url okay so we're logging these defaults so if i didn't include the page and the type by default it would just go to the component called page and render that component and then it would use the post type which is whatever the first param is in this case it would be english it would say english pages that post type doesn't exist but it doesn't matter that's why we're explicitly saying what the post type is that we want here so we're going to look now if the first parameter is found in our translation object so our translation object is this huge object we can't even see all of it but we would find the first parameter here english okay so then if english.page exists which it does we're going to go in here and let's see if this equals an object which it does then we're going to say page equals translation object first param page standard okay we need we need to change it so this is where the the error is going to occur we don't have standard okay so what would normally happen is is we would put default as one key and then standard as the other key and then we would tell it but that's not going to work for us because if i were to type in english senior thesis that won't work for what we're trying to do here with our faculty or faculty list component here so we need to adjust this to check to see if standard is there um let's change the first param equals type so what will then happen oops down here pages your first room page so the else here is if it's not an object so what needs to happen is if it is an object we're going to look to standard would then have to be the fallback default yeah this i'm going to adjust this function in a way so that we can use custom values for page but if there isn't a custom value that matches then then we'll use standard okay all right so that's what we'll do then so in this case we're passing in let's see the page type okay so id so here's what we need to do so we're going to say if translation object from page dot pay page let me think so if this exists right if translation object first param dot page and then id which would be the second parameter which in this case is faculty if that exists as a key in this object which it does in this case then we're going to want to set page equal to this translation object first frame page id okay so which in this case page would get set to faculty list which is what we want uh we're gonna add an else in here and uh let's move this up a line just to clean it up so it'll try to find that id if for some reason this id isn't explicitly set here it will try to fall back and use standard let me think if that'll be enough no that won't be enough it won't be enough okay so we don't want we need another fallback any other fallback um this is getting a mess but we need another if statement here because we're not actually going to add a standard in so what happens if somebody puts in slash english slash senior thesis it's going to go through it's going to get to this point it's going to say okay that id doesn't exist so let's just use page.standard well page.standard doesn't exist either but we're not checking for that we're just assuming it exists so that's going to give us an error so we need to do first is check to see if this exists and that that needs to be an else if so else if this uh then our page can be set to standard and then we'll need to add one more else else we're just gonna go for the default so page is just going to equal our defaults oh okay let's save that let me check my time okay about two minutes that's not bad because then that'll give me some time to answer questions in case anyone's confused and then the next step will be which we probably won't get through the next step so i'm just going to tell you what it's going to be we need to find the type so first thing that's going to happen if the type exists as a parameter which it does and if it is the object which it is then we're going to go for this standard right our standard does not exist so basically what we're going to have to do right now is the same thing we did up here we're just going to replace type we're going to replace page with type so we can copy and paste this so let's go with from here down to here and you should be able to do this right okay and then in here oops yeah let's replace every instance of page with type with t y p e find type okay and then with id okay i think id will actually work so my timer is up but we we may be at a point where we could at least get an error hey yes we got some type of error let's see if we got more info no let's see if we have more info here nothing no one more refresh 404 okay we'll come back to this and i'm gonna scroll up i'm gonna set a five minute timer now answer some questions and then we'll do another 25 minute pomodoro session okay so all right trying to find a lot of hellos i'm trying to find a uh a question here i'm scrolling down i'm almost to the bottom and there are no questions yet i'll just hellos and you all talking to each other which i think is awesome here we go john hanson says would async promises work cleaner than all of those if statements yet honestly there's got to be there's got to be a better way to do this i know when we first did this and i believe it was nikki that did a lot of the original work it was a much smaller function i've added a lot more to this as i came across different parts of the site the old site that i needed to bring over and make sure the urls work so what we originally thought would work didn't work for every use case so we just kind of added this stuff on i'm definitely open to refactoring at this point i if this is working the way we're doing it i gotta go with it for now because we're gonna launch in less than a month so i can't i just don't think i have enough time to refactor this and make it work and make sure it works in all our use cases but i think it's a worthwhile thing to do at some point because this is getting quite large there are a ton of nested if statements so at the very least it's just a mess to read and think through uh i mean i'm able to think through it right now but i've seen it a lot so yeah it's not ideal nikki says yeah i feel shame when i see that code it made sense at the time but boy does that look messy well nikki it's not your fault like i just said like a lot of the mess is things that i've had to add in so i think the the original when i saw the original function nikki i my immediate thought was nikki is a genius like this is amazing this works but then as i dug through the data on the site and the content i realize like oh this won't work for everything which has it's not your fault at all based on the information i gave you it worked perfectly but uh i just didn't have complete information at that time michael was volunteered to make the chain refactoring changes and he says i would but i think jesse wants the site to work hey if anybody wants to tackle refactoring feel free to to um fork the repo make a branch and try it out you know it it won't break the main site you know of course and if i were to try to redo this i would most definitely do it on a separate branch i'm not i'm not even going to attempt to untangle this this massive if statements uh on the master branch here oh cool phoenix is here it says uh sorry late i was doing my 30 days 30 sites challenge submission that's awesome so uh you're still keeping up with that that's that's amazing doing 30 sites in 30 days so i did i just think that's awesome so keep me up to date on on the stuff you're you're putting out there i'd love to check it out matthew says thanks for doing these live streams jesse you learned a lot from watching your workflow oh you're welcome thank you for saying that hey frankie's here nice to see you here frankie all right i think my timer is beeping yep let's start another pomodoro session and let's get this to work okay let's look at where we potentially could have some problems one is that this faculty listing it doesn't it doesn't exist so let's make this and then we'll go from there the best thing would probably be you clone an existing component and then adapt it i think we can get things done more quickly like that so i was hoping i'd have a good one already open but i don't all right so let's just go in here to our pages and oops that was css i just stopped because it had the right names there we are so the faculty.js component is probably going to be the closest to what we're actually going to use no will it yeah you know what it it might okay and it it is using the new the new way to do it all right let's grab this we're gonna copy this we're gonna make a new page what called it i don't remember what we called the new page faculty list all right new page all right faculty list dot js uh let's change what we need to oops let's go faculty list go down here faculty list and i'm going to pass the id we're going to have to make a separate query for this because it's going to be a little different than what we normally have i think at least we can save that let's just refresh see if we get anything different not expecting it but oh nice we got an error message happy about that all right cool so this is great news it may not look like great news but this is really great news so if you can see let's see if we let me zoom in so check that out so it says cannot read property node of undefined and it's giving us this error from facultylist.js line 34. that means that our router worked and it directed the user directed the flow of our data i guess to that faculty list component not only that but it seems that something came through for id and we're getting because it's actually like attempting to make that um that graphql query right so that error tells us that i think we did what we were supposed to do now what we need to do is adjust our query to get the data that we need from this all right so here's what we need the type is correct we can leave it as is because it's going to go to the faculty post type the id needs to change though so what query are we using we're using profile query yeah we need a different one we need i guess we'll make a faculty list query let's check out our queries i'm going to see if there's one that would work news i don't know that we've used any queries yet that return exactly what we need so let's just look first at this profile where's our there we go profile okay let's move it over here so we can look at both at the same time all right so what we're look what we're searching for now is so our type is here and that's that's fine that doesn't need to change but where we're saying name uh we're looking for name name so that's that id and the name ends up being our slug or our wordpress slug but we don't care about that what we want is we want to search by category by faculty departments hmm i wonder uh hold on i don't want to do it to this one um i don't think that's going to work i'm just kind of trying it now because if it does end up working it'll save us a ton of time i don't really have hopes for that i think we're going to have to look up exactly how to do this with wp graphql which is the plugin that we're using i need to make a new query and we'll call this faculty list okay so let's just refresh the page see what we're getting no we could use there i have it all right let's see i changed this to is that not it what's my wordpress url wp franciscan dot university yeah that's it all right let's try to bring our query over all right we don't we don't actually need all that let's go from here all right the type is going to be okay all right let's just start from hold on faculty yeah let's look let me look over here at the live chat to see if anybody is giving any suggestions okay suggestions let's let's just look up the documentation uh let me move here every single okay id hmm i'm not getting exactly the same thing uh so what i want to see is in this case i guess we can do we're doing education wait can i pass this as a string sorry i thought that's what it just said i could do right episode okay i need to put the variable in there all right that makes sense where am i category all right i don't know what i'm doing let's take this out i don't need that faculty where i don't want it to be named though faculty department departments ali equals who is this i'll leave this right now right hmm i do need that but what's wrong with this all right let me check the chat again all right michael says shouldn't id be faculty department id um id is the graphql id i'm not sure okay the truth and i don't know why i'm not getting like what i should i should be able to get some schema stuff about there we go let me see faculty so hmm all right let me see let's see if there's any more data on this part of it list of posts list of posts with offer info list of users advance ah there's nothing for advanced queries no advanced topics all right hmm let me take care all right let me look michael says underneath faculty departments okay let me let me look back here yeah so under faculty departments oh you know what if i was going to do it like that i would need to put let me go back here faculty departments i don't need name like that i need faculty departments edges node name let's see if i can get anything from that no all right let's let me just copy this over so i don't i think i've thoroughly messed up what i was trying to do over over here actually let me just do what just happened all right okay it does not like that what were you working with originally let's see michael says why don't you try hardcoding the variable into the query yeah actually let me all right so we we are actually getting some stuff in here uh let's try this first there we go right maybe we could use category name but it's it's a custom taxonomy all right i mean let's let's try it category name is education double oh i gotta use double quotes okay name variable never used yeah do i need this man it's been so long since i made graphql queries i don't remember this the right syntax for this do i even need this um there we go all right let's see okay to return nothing um uh doesn't think i can do and i know um i can do a search but i have a feeling the word education is going to be in all of these all right um my timer went off so let me take a little break oops a short break and uh answer some questions i i have one more idea all right ah so it looks like oh [ __ ] have you found any bugs or need some feature on pompom i just never looked at it in six months uh no i mean it's it's working great so i don't know what i would um what i would need um i yeah the only thing i would say on there is the uh the beeping the beefing can get a little annoying uh like it's just a long enough amount of beeping it's good because i never miss the beep but if i like hear the beep right away and i'm like okay it's beeping and it just keeps beeping and beeping and beeping so i don't know maybe like a warning beep and then some silence and then the ending beep instead of like constant beeps other than that though i really like it and uh in case you're you're wondering pompom is this pomodoro timer that uh harshit built that so it's really cool okay oh my spotify quit playing okay all right some some comments got hidden so uh i just unhid a few comments so if your comment got hidden before it's it's up now phoenix says i just wanted to ask when looking for a remote job what documents are mandatory to be submitted like if i work remotely for a company in the u.s what documents do i need you know what i'm i'm not entirely sure i don't know what's what's required like if you were to actually come here and work in the united states that would require documentation i don't really know if you're doing remote work i don't know because it i guess it depends too like if you're going to be a fulltime remote employee for a company there's probably going to be some tax documents and things that need to be set up if you're like a freelancer doing remote work for a company then that that probably is a little bit easier all right michael has put in uh a query let's try this i'm gonna copy and paste this and and we're tr we're gonna try it this is cool this is like a totally reverse way of doing it but if it works this is gonna be awesome i just wouldn't have thought of that at all ah no okay let's try to um it's missing less curlies yeah i just say let's let's try to um separate this out so we get what we need here so education edges node name oops let me start up another pomodoro timer difficulty title slug two three four five all right so one two three four five six seven one two three four five six seven whoa michael ah michael thank you so much i'm so happy i'm sorry this is awesome let me enjoy it for a second and then i'll try to explain what's going on this is really cool so cool all right so michael has figured this out and here's what's happening instead of searching for faculty and then trying to somehow sort by faculty departments which there was no option to do that it wasn't let me do this so michael has the idea like okay why not try to find faculty departments where the name equals education which makes complete sense that's that we should be able to find those and then faculty you can get back to the faculty through that which i i never even thought was possible that's amazing amazing that's that's awesome so let's let's make sure okay yeah so we all we need then is the name and the title and i guess the [ __ ] we need the slug to be able to construct the url so what are we getting now so title uh slug shoot how are you gonna get this we don't have that yet when we brought the data over that was contained in the content as one big block so that data is not going to be available until we can make a custom field and put it in the custom field which is something i was planning on doing anyway that maybe something needs to get done sooner than i anticipated okay all right but this works so let's take this and move it over here um yeah let's see you know what am i gonna pass the type in i really don't need to pass the type in we're not going to reuse this query at least not now not right now so i think we're fine i just hope it doesn't give us an error because we're bringing in type and not using it and let's change this name faculty list query let's save that let's go over here and we're going to use um oh you know what no wonder any none of my tests earlier worked i never connected this to the component so i mean not that they would have worked anyway because i didn't get it right but i really didn't get it right uh so this query is called faculty list and this is actually let's find this elsewhere faculty list query save it all right now let's see what we're getting there we go all right can't read edges of undefined so this makes sense because we're going to need to redo all of this how we're getting this data so we don't need all this kind of stuff here content data oh we can leave it for now we just we don't really need it so we don't want content we want then in the div we want to map over i you know what if we take our search page we should be able to copy and paste some things that will be helpful to us so let's check out our search page oops search.js uh because we're getting data here that's uh you know what we're using graphql for this so it may not be as helpful as i thought um yeah it won't be shoot okay that's all right we can see what data we're getting from here so the data will be in this format so we can just use this uh to figure out how we're gonna do things oh nikki uh reminding me delete that globalx where's that at there we go all right so we're not even getting content really so yeah let's get rid of this we don't want content what we want is node what are we getting faculty node faculty edges all right so we're going to say we're going to call this faculty data and then down here let's just start with what we're going to do here so we're going to say uh we're going to have a container div and then within that let's map let's go faculty data dot map and i'm gonna say data oops let's say faculty and then within here let's just for right now do an h3 and we'll put in what's it called title yeah let's just put in title h3 is going to be faculty dot title okay and then here am i gonna have any problems with this i don't think i'll need to set this uh dangerously set enter html for the title i think we should be fine what is all this oh indentation all right fine now what is this uh key prop okay key is gonna equal faculty slug because that'll be unique now let's try this factory list we're going to map over let's see what we get here no what happened edges can i read edges oh did i mess it up and not account for the edges in the faculty no i didn't i didn't account for node though so we got node faculty edges in the node again let's see oh i know so it needs to be our query is putting in the type faculty list or something yeah what do we have going on here we're passing in faculty that's so that's not what we want we want data faculty departments faculty departments let's try that i'm getting a bunch of messages on my phone let me check to make sure it's not work oh har [ __ ] harsh is sending me messages on twitter at the same time okay let's see what we have now oh nice we didn't get an error right away each shot actually key prop another method of query oh i know what else i messed up faculty um hey there we are awesome why are we still getting needing this iterator thing i thought we had a key problem key yeah the h3 has a key why all right i'm not worried about that right now i'll figure that out but all right cool so we got the data displayed on the page still need we we need to do work on the data itself in wordpress to to get the data that that we need uh so like you notice we don't have a picture we don't have the title we don't have a link we can actually make the the link to their page we have enough data for that but those are things that are going to be really boring that need to happen in wordpress and it's just going to be a lot of i create the custom fields and then a lot of copy and paste work hopefully i can maybe get a student worker to do that so that i can keep working on uh on other things but actually not not too bad this is a mission accomplished thanks to michael says thank you again uh let me yeah i'm gonna end this i have 10 minutes left in this pomodoro session but i'm just going to end it and go to the chat now and let me let me look all right so i found where i left off in the chat if you have any questions please let me know now and as soon as i get to the bottom of the chat i'm gonna end the stream oh yeah i got a meeting soon so definitely gonna end the stream soon and uh harshit i got your messages on twitter i'm not sure if you also sent a message in the chat but i'm giving you access right now on my other screen i'm not sure why you're appreciated i'm not sure i made you an admin so i don't know why but oh um i guess i'll make you project owner as well okay so now you should have full access um to the the project since you're the project owner just don't don't run up a bill on my credit card though and other than that you're good to do whatever oh hershey says use prettify button in the the graphq graphql thing oh yeah so that would have saved me a minute wish i would have looked over thanks harsha so i manually put all those those breaks in oh well glad i learned it now though see you gotta close out of it michael's saying you gotta close that other div all right what did i mess up with all right i must have closed it then i don't i don't know what i was doing and uh michael said michael has got a scholarship for nanodegree for udacity michael you may have already told me this but just in case i haven't done so already uh congratulations i'd like to congratulate you for that okay for the mobile web specialist cool all right all right rohan verma says i already did the machine learning nanodegree the basic and advanced six months long course oh awesome congratulations um roland how was that course would it if you had to give advice on whether the course was worth it for someone to take what would you say oh harshit asks if i'm going to run a wordpress cluster in production or we'll add more power to the droplet uh what i'd like to do is uh maybe run a cluster if i don't have time i will just add more power to the droplet i've been looking into actually taking the the database and hosting that like on aws or google or something on one of their um managed database services uh to just kind of take that they'll handle backups and scaling and things like that and i won't have to worry about it and then still i would have to host wordpress on a droplet or something so that's my plan and in which case if i do that i i still wanted to i would like it to be on multiple droplets because there is going to be a lot of traffic uh rowan says there's no js suitable for hpc i don't know what hpc is uh if you let me know what that stands for maybe i can answer oh michael says jesse had an issue on what info you need so i can take a look you know what michael it's not the the the info isn't even there so that's the problem is that we we can't get it from graphql because it doesn't exist so the data needs to be entered into wordpress first like even the the fields itself don't even exist oh okay harshit uh has done what he needed to do and i can he doesn't need to be project owner anymore so i'll drop you back down horseshoe just let me know if you need it again uh it's not really a big deal i trust you all right rohan says i would say machine learning nanodegree program for udacity is awesome for those who are migrating from some other field to machine learning but a course from coursera deep learning ai specialization is better than udacity oh okay that's good to know because i've i've considered knowing the udacity course uh but it's it's definitely not it doesn't have anything to do with what i'm working with right now uh so it probably wouldn't help me that much my daytoday work it would be a big commitment of money and time so maybe i don't know maybe i'll check out that other course and see if that's would be less of a time commitment let's see how it's set up okay rowan says high performance computing um is what hp he's talking about with hpc tell the truth i i don't really know i don't have enough knowledge about that uh to say one way or another so apologies on that if anybody else has a better insight than i do into that please let rohan know in the chat and you know what i yeah i got a meeting coming up soon and i've gone through everything in the chat so tomorrow i will not be streaming i will be at the google i o extension uh conference in pittsburgh so please let me know if you're going to be in pittsburgh especially if you're going to be at the conference i'd love to be able to say hello in real life and also please check out uh jsaf so um that's a website that i've been working on with with a few other with harsh it with nikki uh with javascript who's in there sometimes uh in the live chat and it's just a place where you can share your github repos share a little bit of info with that it can help you search for other people's repos uh i think in potentially a better way than you can on github uh totally built with a lot of the technologies that we've been working with here it's open source you can check out you know the project on github and contribute but definitely check it out harshit let me see i don't know if it's down or up now harsh it's working on it but maybe i'll um i'm going to paste the link in here i pasted the link in there now you may have to copy and paste it sometimes links are weird in the youtube chat um are we using the beta.javascript.af are we using just straight up javascript.afrishit all right it looks like all right yeah javascript af redirects anyway oh there we go yeah so you can you don't have to add in the beta it redirects um if you just use javascript.af but anyway please check it out if you find some weird stuff going on or if you have ideas for it open up an issue on github and let us know like i said we'd love to have a lot of ideas and contributors we think this could be a cool resource for the community and um and and we're not we like we don't have funding we're just doing this as a as a side project right now you know we haven't been getting paid um harsh just been doing a ton of work i've been paying for the domain and servers and everything so um yeah so any help that you could give would be would be awesome and i don't mean like just financially i mean like in terms of your ideas uh you know advice pull requests things like that so uh anyway i will probably be streaming on wednesday and i'm gonna try to maybe do some updates on instagram from the google i o conference i don't know if i'll be able to get any updates on youtube but if i do they won't be on the free code camp channel they'll be on my own youtube channel so the link to my youtube channel is in the description you can also i think find a link to my instagram on my youtube channel so uh if i happen to be able to do any updates on on youtube or instagram uh if you follow me or subscribe then uh you'll probably get notified um let's see i think that's it so i'll see all wednesday have a great day today and uh and tomorrow and let's see sorry i couldn't find the button to leave so try to do my usual outro and then i couldn't find the button i was on the wrong page all right anyway thank you all so much uh and i'll see you on wednesday