the graph data structure is not the same as a graph you may have learned about in math class graphs are collections of things and the relationships or connections between them the data in a graph are called nodes or vertices the connections between the nodes are called edges one example of graphs is a social network where the nodes are you and other people and the edges are whether two people are friends with each other there are two major types of graphs directed and undirected undirected graphs are graphs without any direction on the edges between nodes directed graphs are graphs with a direction in its edges an example of an undirected graph could be a social network uh the nodes are people and the edges are friendships an example of a directed graph could be the internet and web page links the nodes are web pages and the directed edges are links to other Pages which might not necessarily point the other way I'm going to show you three ways to represent a graph the first way is called an adjacency list this representation for a graph Associates each vertex in the graph with the collection of its neighboring vertices or edges in this image a is connected to b b is connected to a and C and C is connected to B this is how you could show a a relationship with text and and here is how you could show this adjacency list with JavaScript this is an undirected graph because it does not show the direction of the edges this can also be more simply represented as an array where the nodes just have numbers rather than string labels another way to represent a graph is to put it in an adjacency Matrix an adjacency Matrix is a twodimensional array where each nested aray has the same number of elements as the outer array so it's basically a matrix of numbers where the numbers represent the edges zeros means there's no Edge or relationship and ones means there is a relationship this table shows an adjacency Matrix to represent the image you can see that the labels for the nodes are on the top and left now here's a JavaScript representation of the same thing unlike an adjacent list each row of the Matrix has to have the same number of elements as nodes in the graph here we have a 3X3 Matrix which means we have three nodes in our graph an adjacency Matrix can be used to represent a directed graph here's a graph where the second node has an edge pointing toward the first node and then the third node has an edge pointing to the first node notice how the numbers in the array change there are only ones where a node is pointing toward another node and since there are only two points there are only two nodes the final way I will show to represent a graph is an incidence Matrix like the adjacency Matrix an incidence Matrix is a twodimensional array however the rows and columns mean something else here the adjacency Matrix use both rows and columns to represent nodes an incidence Matrix uses rows rows to represent nodes and the columns to represent edges this means that we can have an uneven number of rows and columns each column will represent a Unique Edge also each Edge connects two nodes to show that there is an edge between two nodes you will put a one in the two rows of a particular column as you can see in the diagram Edge one is connected to nodes A and B now look at the column for Edge one in the incidence Matrix table you will see a one in both the a row and the B row this shows that edge one connects to nodes A and B here is a directed graph for a directed graph use negative one for an edge leaving a particular node and one for an edge entering a node and here is a JavaScript implementation of the incident Matrix graphs can also have weights on their edges so far we have unweighted edges where just the presence and lack of edge is binary zero one you can have different weights to depending on your application a different weight is represented as a number greater than one well now you know about different types of graphs and how to represent them in JavaScript in my next video about graphs I will cover graph traversal algorithms thanks for watching my name is Bo KS don't forget to subscribe and remember use your code for good