foreign all right hi everyone looks like i'm live welcome to this free code camp live stream on vue.js i'm so excited that they're letting me live stream from this platform if you don't know me my name is gwen and i live stream on my own channel which is faraday academy um which is in the description below so for this series um what i'm going to be doing on fridays on free code camp is build the front end free code camp projects in vue.js and it's going to start with the random quote machine you can see that i made this repo here free codecamp dash projects.view i'm actually going to post this in the chat so you have a link to it i basically only did some readme files and stuff so far all right there you go if anyone wants a link and so in each in this repo i'm going to make a folder for each um project as i go along and today like i said before will be this random quote machine now what i'm going to be doing with vue is actually starting off with the most basic projects so i'm going to start off uh or the most basic view so if you don't know what vue.js is it's a javascript framework and it's called progressive because you can use it as a very lightweight kind of jqueryesque cdn import and just import it into your html or you can you know generate a whole big view project and use it more as a fullfledged framework so today i'm just going to be importing it via cdn into the html so yeah feel free to post in the chat this chat is a little bit different than the one i do on my channel so i'll try to keep up and check the chat every so many minutes and yeah otherwise i'm just going to go ahead and get started coding so from the vue.js website i want to i'm going to click get started so i can grab the cdn import development version includes helpful console warnings this is exactly what i want and it's just one import the cool thing about vue is that uh there's you don't have to use jsx or anything it uses html by default so you don't need to import babel or transpile or do anything else you can just import view and start using it so i have my code on this screen this is the same github repo that i just showed you so just a few files i do have some quotes already ready for this they're just bob ross quotes um if you don't know bob ross he's a famous tv painter back in the 80s and 90s he was the most popular one in the us i think and then he has kind of a cult following online now because of his voice and the things he painted and stuff like that anyway i really like him and there are some quotes so now in my quote machine folder i'm going to create an index dot html file let me zoom in a little bit yeah let me know if you can see that all right so now i am going to just create that as a regular html file so html oh yeah and let me just be totally correct and set the doctype is is that correct i don't know um let me actually copy paste um a basic html oh they don't have one here all right so i'm going to leave this out for now and just do html and then set a head tag and then man it's been so long since i made an html file and then set a body tag okay and okay and now i'm going to close my html okay and now i'm going to do set a title and i'm going to call this random quote machine and so i'm using vs code right now and i think for next time i'm going to have a plugin or get an html plugin because i don't think i even have syntax highlighting for html or maybe i'll just go ahead and do that now let me see html and css support okay install and now it's available globally i'm not sure if i have to reset to get the features or maybe i just need to reset the file let's hope that's the case okay so now i have a title so let me do just a plain div here and close div and now i'll just put hello inside all right okay now let me open this in the browser so what i'm going to do is copy or right click on the index.html file and i can say copy path so i copied the path that's the path to this file on my local machine and then all i have to do is go in my browser and paste that path and now i see hello okay cool so now on my um oh yeah so i meant to show this first but this is just the quote machine from free code camp and then this is the demo one and i'm going to be creating something really similar there's not a lot you can do with a quote machine just you know a random quote machine just a button that gets a new quote basically okay so um let me get started so let me go into my github repo if i look in the readme for the quote machine i have this mockup this is what i want it to look like so basically i have one card that's going to contain the quotes and then i have a new quote button underneath so let's see so first i need to create a card in here and i'm gonna basically i'm gonna import bootstrap create the card and the button and then i'm gonna hook it up into view to show you how to do that so first let me go to bootstrap this is version 4.5 and then i'm going to just get the css import i'm not going to need javascript the javascript import for anything and now in my index.html file and right below the title i'll just paste that bootstrap css import okay so now i have bootstrap and now i'm going to search bootstrap for a card and this looks okay so basically you have a class of card and then inside you have a card body class and then you can put title and text and stuff like that all right so i'm gonna do that i'm gonna get rid of hello and i'm saving this div because this is going to be where i reference view from this outer div so in this inner div i'm going to do let's say class equals card and then oops div and then here inside i'll do oops div and then class equals card body and then one more div and i'll do div class equals card text and that's where the quotes are going to be inside so i'll put a placeholder here and just say this is a quote and let me put quotes around it okay that's fine let me see what this looks like okay cool so i do see that i don't know if you can see it there's a gray line here and some spacing it added so this is a quote or this is a card but i want it just to be centered on the page so i'm going to go ahead and add bootstrap classes for that and i'm going to add in here i'm going to use their grid system so i'll do another div and this one with a class of um let's see i think it's container but let's see if it is so in bootstrap i'm gonna look for grid their grid system and here i'm just going to copy this actually so i'm going to copy this bootstrap one so i can get to the view part so let me all right oops let me do a div and close all these divs div and is there one more there's one more div for the container i know that's a lot of html nesting all right so oh wait i messed up so i put one extra div because i had started that before i copy pasted these okay so i have container row and column and here what i'm going to do is column small and let's say 6 and then i'm going to do column offset so let me search for offset real quick offsetting columns so it's offset and then the break point so like offset small of 3 is what i want so let me do offset small of 3 and see if that works okay um that looks oh i see what i did somehow i lost the card in here so i have to recreate that card div that's why there's no outline around the card so i need a div of class card indent this again and then close that div okay and then i want to put some margin on top of the card bootstrap has a bunch of spacing classes that are abbreviated so for margin i can do margin top of i think i can do five it goes up to five maybe and that should be something i can't remember how they calculate it but it's something like 15 pixels or something okay so see now i have my quote box that's good um and now below the box i need a button so i'm going to create that let's see where's my card my card's here so i'm going to create it after the card so i'll do but still inside the row in the column so i'll do button and then i'll say new quote and button all right so class equals uh wait i think it's btn all right so in the new bootstrap let me just search for button because it might be a different class now okay so it's btn and then btn whatever i want so btn let me just do btn primary um okay so btn primary let's see if that works cool awesome so now there's a button and now there's a quote box so now on to view and for view i think i or is it here is the script tag that i want to import view with so i'm going to put that at the bottom right above my closing body tag and put the view script tag okay so now i have view imported and accessible in my project so now i need to create another view or a script here so i need to put script create a script tag so i can write my javascript inside so i created a script tag and now i need to declare a new view instance so i basically have access to this view variable right now and so i can create a new view instance by using the new keyword which is just a javascript keyword which creates objects so i can say new view and then i pass it in object which is called the options object um so if you if you've heard about view two and view three a lot of people are thinking oh i don't wanna learn view yet because uh view three is coming out well actually this same options object that we're doing right now you're going to be using the same api in view 3. there are more advanced features and things that you can use in view 3 but none of this is going away so if you're thinking about using view or learning view you might as well start now because you can use the same api even when they upgrade the version let me just check the chat real quick what application we're using oh balsamic balsamic mockups i've been using them for i don't know maybe five years it's just really easy to do outlines this company so real quick they have in online some kind of online one but i have their desktop app and i basically create easy wireframes in this because it's so simple they give you a bunch of like browsers and phones and stuff and um you can easily add text and move things around uh so that's a great way to do quick wireframes mockups that kind of stuff okay so now i have a view instance created so now how do i use view well it needs to attach to the dom to i need to give it an html element um where it's going to live so vue knows where to do its magic kind of um so let's say element and let's create an html element with the id of app this is pretty standard so this empty div that i left on the outside i'm actually going to give it an id of app so now view will be able to operate anywhere inside of this div but not outside like if i made divs below this view wouldn't be able to know about them because i told it only to look inside of this app all right so you can do a lot of things with view you can basically on a most basic level you can make this dynamic in view so i could do let's see data and right now i'm using a data object so what data means is basically anything you put inside of here will be available as variables inside of your html where view is inside of your html so i could put name is gwen gwen and then um so vue uses this double curly brace syntax it's called a double mustache syntax and now i can just put my variable inside of here name okay so something is wrong here so good thing i'm doing this so i can debug it first so i'm referencing the element of id app and then i'm creating data and i have name yeah so this should work let me see oh it is working it just took a second to update all right let me refresh okay good so there was no debugging needed all right so yeah no problem okay so um cool so i was just showing you how to do that so basically um this html is connected to our view instance so we can do lots of cool things with events and and variables and all kinds of stuff um so let's see what do we want to do next we need to make these quotes dynamic and then we need to make them random and then we need to hook up this button to actually generate a new quote every time we click it so we're going to have to create some kind of function to work when we click the button so for right now load let's import the quotes and try to display them so let me see i have this quotes array so i think what i can do is um uh so i can't maybe i can just do let's see let me create a variable here so var quotes equals this array and now if i import this quotes.js file into my html it should be able to access that variable so source equals quotes.js and then ah script all right okay so now i have i should have access to quotes so let me see if i can let me now try to put quotes on my um oh wait let me see if i have access to quotes here so let me do uh console.log quotes and open my console let me see oh it's complaining about my html document um obviously my head head tag and html are lacking a few things that they should have um let me okay so it does print out this array so i do have it here and should i fix yeah i should really should fix my html there um let's let's just search for basic html um page i don't know what this blog is nope how about mdn mdn is good all right well here's what i'm missing too oh i need this so yeah these are the two tags i need so just one second i'll put a doctype and now let me put this made a tag okay so good now it should stop complaining sweet if i refresh this is just warning me views in development mode but i already know that because i imported the development version of view so that's what i wanted okay so now this array is available on quotes so let's do something with it let me go into data and say quotes um yeah quotes is quotes basically can i use that shorthand in the browser maybe let's see i'm going to check it out so vue also has these vue.js dev tools unfortunately in firefox i can't zoom in even though i can zoom in on the console here and every single other tab i can't zoom in on the view dev tools but i'm gonna try oh no that doesn't work um okay well i'll fix i'll fix zooming figure out something to zoom in by next time anyway so i can see in view in these view dev tools it shows me what data i have inside my view instance what data i have available so it's showing me i have this quotes array so that's a good way review dev tools is really useful to check and kind of debug and kind of look around your data and methods and stuff okay so i have quotes available now so what do i want to do i want to select a quote and display it here so i'm going to just create i'm going to say quote is or let me call it current quote the one i'm going to display on the screen so current quote is quotes and then at index 0. oh yeah and then i need to display this on the screen so now that i have current quote available as a variable inside my template i'm going to get rid of this boilerplate and use the double curly brace syntax and put current quote there and let me see sweet we don't make mistakes just happy little accidents famous famous bob ross quote let me put quotes on the outside of that make it more quote like oh wait okay sweet i like it it's not random because it's just taking the first one in the array but still a step forward okay so now um oh yeah i'll need to put the author or the quote sayer here the person who said that um whatever it's called so um uh but let me do that in a second let me first hook up this button new quote that's the fun part so now in my view instance i can also have methods i have a object of methods so basically functions that i can use inside my view in my template here or in this case my html um so uh let me just create a new quote method here and so it'll be a function called new quote i don't need to pass any arguments into this function so i won't define any parameters and i'm going to be updating current quote though so i can access anything on this view instance it's just an object so i can access it with this um okay so actually sorry i have this backwards i was looking at it i was like man my something wrong with this syntax okay so the key has to be the name which is new quote and then actually i'm going to make this an arrow function um oh no wait i think because the view instance does some stuff i can just make this a regular function we'll see how this works okay so i'm going to be updating current quote here and i can mutate state what's in data here is called the component state so i can mutate that just by accessing current quote off of the this object and setting it equal to whatever i want but i want a random quote so i'm going to need to find choose a random number and then access that random quote in the array so i'm actually going to look this up so um generate random number in javascript oh yeah sorry i didn't see that bruce doctype yeah isn't that what i have i think that's what i copied off of mdn um yeah it is okay so random number how to generate random numbers in javascript math.random um get random integer so math.random so math.random generates let me zoom in here so math.random generates a random number between zero and one and then you can times that uh so i think if i times that by the max number that i want and then floor it because i don't have a minimum my minimum is just zero so let me give this a shot and figure it out so uh i have the math object because that's just available in javascript so i can do math.random and then i'll do times the max number that i want so that will be let's see between or the max number is the length of the quotes array so i'll do quotes dot length um and actually quotes dot length minus one because it's zero indexed okay so i'll wrap this in parentheses and then i think let me just console.log this somewhere else real quick so i can figure it out okay so let me get rid of that and let's see what that is okay yeah so it's uh 2.897 whatever if i refresh it's another random number so what i'm going to do to make this random or to make it an integer i'll do math.floor and then wrap this so math.floor just rounds down since i have a number with decimals now it'll become an integer by rounding cool so i got 2 0 3 3 2 0 uh there's no four um will i ever get four i'm not sure let me uh get rid of this minus one or maybe it just doesn't like force it's it keeps i don't know if you can see it's like zero one one one two four yes four okay all right so if it breaks later we'll fix it all right so let me uh copy that and paste it here get rid of this line okay so i'm going to say number equals that whole thing that we just did math.floor math.random quotes.length oh i don't need the parentheses around that anymore because i'm not minusing one all right let me check the comments do you need to floor the whole thing yes because if i didn't so if i just floored this math.random then it would come out as zero every time and then when i multiply quotes.length it would always be zero so i wouldn't be getting a random number anymore so i have to floor after i multiply basically okay so now i have this random number from should be from zero to four we're hoping uh let's see uh current quote okay and now we need to get a random quote out of the quotes array so we can pass in that random index or we can access it via random index and then set current quote to that random quote and let's see if this works it's not changing something's wrong oh what's going on we don't make mistakes just happy little accidents so we're setting current quote equals quotes and the number okay oh you know what we're not doing we're never calling this function wow okay we're never calling this function so we're setting the first quote as the zeroth index but we're never calling the function no quote or new quote so we have to hook up this button to man to actually call the function okay um let's see and okay so new quote and so here view js lets us hook up methods using the at click so this is actually shorthand for v dash on and then v dash on needs to be followed by an event you'll see this pattern a lot in view these directives it gives you v dash something like v model or um what else there's a bunch of them oh yeah v4 for looping v if for conditionals so v on and then i'll say on click when someone clicks this button i'm gonna run a function which i put the name of the function inside of the quotes um the name of the function is new quote so i'm going to put a new quote in there and basically v dash on can just be written as an at sign so that's what i always use anyway so at click meaning now vue is watching for this click event and going to run this function when that click event occurs so let me refresh in the browser click sweet it's changing do you see that okay awesome so now we're getting random quotes so this is actually uh or this actually fits the requirements i think generate random quotes but there's some more things that we're going to do with this so no new chat messages so i guess everyone's following along okay let me just check one second this is set up a little bit differently than my regular live streams so i'm just making sure i'm not missing anything all right so let's see um generate new quotes uh let me look at my mockup yeah so i can style this a little bit more like i have i i mean all these quotes are bob ross so i don't need i can just hard code the author here and then the new quote button i'll style that a little bit so here i don't like this right at the box or the card so i'm going to center the button and add a margin top so let's see this button i can add a class to the button let's say i'm adding a class of margin top of 2 which is that something like 8 pixels okay that's good and now if i do um let me see if this works so margin oh i zoomed in again uh so wait wait okay so let me add a margin y so on the y axis of auto so that should be margin left and margin right of auto and no that doesn't work at all um wait what i really want is the xaxis right yeah the xaxis okay that didn't work so i'm gonna try flexbox then all right so i'll leave the margin top there and i'm going to zoom out one i think this is good that was too close okay so i had the card and this column here i'm going to set this as um flex i think no wait wait i think there's something else i can do so i have this column that's wrapping the button too but i could put the button in its own row um let me try that so let me try putting a new row here so div class equals row and then close that all right so and now inside of that row i need to make a column so it's going to have the same layout as this card so i'll make a column let me just leave it at column for right now okay now close that div and now okay now i pasted the button in here and let me see how this looks not very good so i need the same column offsets and stuff that i have above so i'll do column small six and then offset small of three all right and uh apparently i still need the margin top because it's not giving me extra margin i thought it was going to give me that but it seems like i need the margin top still all right so for the button um maybe i'll just create a block button so it'll go no that's not going to look good i need to center this button so here i'm going to say display flex and then justify justify content center but let me see let me look at bootstrap and make sure i have that correct so let me look at their flex utilities which are basically a bunch of flexbox classes so you don't have to go and create your own css it gives you these classes to implement flexbox and i'm going to look at justify because that's horizontal in this case so i can do justify content center so let me try that class um justify content center okay sweet now i have my quote button in the middle awesome thanks all right so oh cool this actually is pretty good it's not too bad okay let me add bob ross here because i need to um i don't know cite him yeah cite him because he was the one who said the quote okay so i think here i could do i mean bootstrap has their own like block quote styles but since i'm inside of a card i don't think i want those here i just want like regular um oops bob ross yeah i just want regular paragraph tags and okay that's pretty good all right i like that for now okay of course with view and since this is a view stream i'm trying to focus on view this is really simple in fact this is almost uh nothing but i could still put this in another file to kind of clean it up so let me create a new javascript file to put my view inside so i'll create a new file and call it um i can't call it view let's call it i don't know main.js and now i'm going to uh wait copy everything out of everything out of my script tag here so i'm gonna get rid of that paste it here and okay so now i have this view instance in a separate file so if i import that file in a script tag let's see source equals main.js and close the script tag oh wait there so this should work the same way yep cool all right so now i can yeah basically do whatever i want in here now one of the things about view is that i can also like i don't have to write all of this html inside of the html here i can insert it so i can insert the html through view um by creating something called uh view component so view dot component and then defining a component here and where it will live inside of view um so i don't know uh i figure i might as well do that since i'm not starting the next project until next friday so let me take let's let's take this card actually so let me take um the card i'm going to call this quote card and you're going to see why it's called quote card or the importance of calling it quote card in a second so i'm defining a view component and um yeah let's see i think i can take uh where does it start i think it's star oh yeah it starts here so i could take this section and put it inside of a template here so i'm just using back ticks so i can oh wait wait wait undo undo there we go um so it will so i can do it on multiple lines and save the formatting okay i will have to change this though a little bit but now the thing about quote card is i can now reference it because it's a component i can reference it as if it was an html tag kind of so i can say quote card um and let me i don't like the highlighting for that let me make that all one word so let me say quote card and then close it so quote card see what happens there yeah so the quote card is displaying you can see because it still has the card there but it's not um or i guess the it's not seeing the variable because this is over here on the data and methods over here so what i could do is add these data and methods over to the component i could add let's see after template i could add a data object and then i could add methods also if i wanted to and move these over to this component so each component would kind of take care of the piece of the page that it's supposed to be at like i could have one component for this i could have another component for a nav menu and one for the sidebar but this is such a simple thing i just wanted to show components here but i'm gonna get rid of this oops not that okay i'm going to keep that part and then undo that all right does anyone have any questions about view or anything you want to know about vue um one thing we can do is actually add transitions so because animations are so common in web development vue has some animation features built into it which is nice and i think that would add a nice feature to this app as well let me make sure yeah it's still working okay um let's see let's go to view and look at animations and transitioning um yeah this is it okay so if you so when we right now we click new quote and there's really like no transition animation but we could actually make the quote animate in like fade in fade out fly in fly out stuff like that so let's do a transition animation for the quote um so let's see emitting prefix css rule okay so they're toggling this okay so they're toggling this element basically conditionally conditionally showing this element with a v if and when it appears it i believe they're setting okay they're setting some kind of bounce in so okay so it leaves to the right and comes from the right it fades in and fades out um oh that one's really um extreme all right so i'm gonna add a basic animation here let's see so basically whatever i want to animate in and out i can use a transition between it so let me try to do this for the quotes and see i mean this is just showing and hiding show hide based off of a boolean so let me see how this is going to work for the quotes because i don't know so let's see transition name slide fade um let me wrap the the actually it would be this i guess i would be wrapping by the way this transition tag and the um template tags transition tags that you see in view they don't render to the dom they're just there for functionality so they don't add any kind of overhead or and you can't see them in the dom after it's just an easy way to add certain things all right so let's try to animate this uh transition oops okay this is kind of interesting because i'm so used to using the view cli and you know i just go in there and generate a new view application so it's interesting you know going back to html and really starting from scratch with vue this is kind of fun okay so now i'm wrapping actually this i want to move here yeah so now i'm just wrapping the current quote um i wonder if i want it directly around my um what's coming in and out a quote instead of the p tag i'm not sure let's see so now i need css styles so what this transition is doing is giving me a bunch of classes that i can style in css and make these transitions so let's see this is a slide fade that's fine it's easier to see so i'm going to copy their styles here because they're basically using you know default css properties and you can see that because the transition is slide fade view gives you the class slide fade interactive when it's leaving the screen leave active and enter and leave to the states for those okay so now i need some css so let me um i guess i'll just add style tag here so let me add a style tag style and all right no highlighting at all that's fine all right so now i should have all of these classes active on the dom and let me see what the transition is looks like no there's definitely no transition so i think this would work uh let me try something so if i had a conditional element let me do what it said in the docs so let's make a p tag here and this would be if show and i'm going to make this variable in a second so oh wait it's v if so it's a the v if directive the conditional directive and view and then if show i'm gonna say hello close the p tag okay and now in my view instance let me create a boolean called show so i have access to that in my html so now i have show and let's say false and since v if since this is this show variable's false it shouldn't show up right now yeah it doesn't show up and now if i set it to oh true it should be there okay good so now let me set it back to false and since i already have this button and method i'm going to add that extra here so i'm going to say this dot show i'm going to toggle it so this dot show equals the opposite of what it currently is so if it's true it's going to be full so if it's false it's going to be true um okay so all right so it does animate in and out cool so that's working um but how do i do that when it's um when the new quote is coming in so actually uh my opinion view or react so i did use react for i don't know several years at least and i do i still use it a little bit for work um but i mean i just so there are some things that i like a lot better about vue and why i prefer view um and i don't want to say anything bad about react in fact learning react really helped me careerwise to get a job and to work on lots of different cool projects vue i think is a bit i guess easier to use in in that they have um a lot of conventions that where they implement them using this human first approach so even their naming conventions this is a simple example so let's look at life cycle hooks in view so they have these life cycle hooks let me see if they list them all at the top nope nope okay where are we in their api all right so life cycle hooks they have created when the components created before create before mount mounted um when you compare this to some other frameworks like let's say react you have on i can't even remember every time i try to remember them i have to think about it but with view it's like just one word it's exactly what it does mounted okay that means it's past tense and mounted before update means before it happened and then updated so after the component updated and you run these life cycle hooks why can't i remember the react ones right now i was just using them yesterday uh anyway so it's much they made it much simpler from the naming to the documentation to how to start a view project i have to eject um view the view team like preaching view right now so the view team made a really smart decision um so back in 2015 in 2014 whenever i started react it was really hard to create a react project i i became a webpack expert i learned webpack i learned babble i learned react redux all of those different pieces vue chose to make it simpler and make all of these different packages under the core of the view umbrella so the view core team has its own state management so vue x their own router view router um they have their own um the create view create which is kind of like create react app view has it built in um to the views they have their own view cli so it's just i think the ecosystem is much easier to work with um than react and i like some of their design decisions now bear in mind vue had the benefit of coming after angular and after react so even they admit that they took a lot of things from angular and react and tried to improve upon them so it's not like vue just made up everything on its own no it learned from other frameworks so yeah anyways i really like view i think it's a breath of fresh air in the wild world of frontend javascript where there's so much going on all the time and views just really nice to use i guess um okay anyway so i have this transition so i think i'm not sure so what i would normally do so if i had built a regular application um here would i would basically be going to a route like quotes and then slash the quote id and when you do that view routing when it routes to the new route you can make a transition like this but honestly i don't know how to do it without routing and without you know showing and hiding so this would be an interesting thing to figure out maybe how to animate the quotes um as they change i guess as state updates um oh wait so we did talk about life cycle hooks so we could do a life cycle hook like updated and this is a function oh wait this needs uh comma um so we have this updated lifecycle hook so every time the component updates which it updates every time we call this new quote function because it's doing or updating the current quote let me get rid of this show stuff that was just temporary okay so it updates the current quote and so this will call the update function every single time so i can console.log let's see i'll just say updated and we can see this in the terminal by the way i'm not saying don't use react because we actually teach react at our coding school because there are so many jobs in react so i'm not trying to say it's bad or anything okay i have an error here um show yeah so basically don't miss misquote me there all right just because i prefer view doesn't mean that other people shouldn't use react okay um yeah this is good oh yeah so i was like why isn't it showing up so i have to hit new quote and you can see it calls the updated function every time oh my face is in the way all right so it calls this updated function um down here every time okay so um because i was thinking maybe there's some way in the updated function to call an animation what you could do here is set new classes animation classes so this is this would be interesting um so here i could put a variable um i could say you know i i don't know so here i would have to put in animating and then animated variables so i would have to do a set timeout i think i don't know is that something you guys want to see uh animation i basically finished a little bit early on this i thought this was going to take up a longer period of time to make the quilt machine so i'm going to try to make it a little bit better so yeah let me try to make this updated lifecycle hook work and i'll do um let's see updated uh how am i gonna do this yeah i'm gonna have to use a set timeout to add the class and then remove the class when that's over so before the class i'm gonna let me say animating is true okay so i have this animating boolean right now and i'm going to set this dot animating equals true oh no this should be false by default because it's not always animating but when it is animating whenever it updates this.animating is true and then let's see and then set timeout needs a function so i'll pass it a function and then at the end here i'll say after one second run the function and this function will say this dot animating equals false okay and now this css um this dot animating needs to be hooked up to a css to css somehow so i'm going to do that inside my html i'm going to get rid of transition and here inside the paragraph tag i'm going to put a css class but i'm going to bind this class to a variable so i'm going to instead of just a string here i'm going to actually do v bind and that sets it up to where i can use um view syntax inside of my or inside of the class string so i'm actually going to bind that boolean so that animating animating boolean i'm basically going to say if this animating boolean is true then i'm going to add this class called animate okay and now this animate class i think i'm just gonna copy what they did here i'm not that great with css animations um but let's see um what would i need i'm not going to do a leave animation right now so let me get rid of that and let's do the animate class here so basically what would it do it would move 10 pixels in and set okay the opacity would be zero and then it would ease in over 0.3 seconds let me change this to 0.5 or 0.8 yeah so we can see it um let's see animate all right property or method animate is not defined on the instance preferenced during render um i think what i need to do here is actually put this inside of a string okay okay it seems to like that all right so when i click new quote i don't see anything but let me look inside of here so it has the class animating okay so i think what i'm doing is let me look at um class class and style bindings yeah there's a couple different syntaxes you can use this array syntax and object syntax so what i'm doing here is doing v bind class equals active is active um text chain oh i got them backwards that's what i did so let me do this animate um oh i guess you just need quotes if you have a hyphen in there so i can do animate and then this should be animating okay so it sets the animate class or it it will have the animate class if animating is true okay so this should work let's see um wait let me inspect this all right so right now there's no class and if i change it okay and it has an animate class and it still has an animate class all right well it's getting closer anyway let me see i'm gonna check the chat um just wondering if this webinar will be made available after yeah so this should be up on youtube in perpetuity um this is just a regular youtube video i just happen to be live and you're seeing me probably five seconds after i speak every time yeah so this will be always on youtube and next time actually uh we'll be using the vue cli to create this this is more of a basic introduction so i wanted to kind of step through getting more and more advanced with vue.js as we create more projects uh let me see okay so i'm gonna just finish up this animation and then uh yeah and then i'll be updating the github repo after this so i have animate which is bound to the animating class or the animating boolean and let's see um set timeout this dot animating is false um i can see this in my view dev tools actually maybe that would be the better thing so let me go into my view dev tools and i'm going to refresh real quick all right so here if you can see it says animating is false now when i click new quote it says animating is true and oh okay i think what it's doing is it's not um it's not waiting for this to finish in the update function basically so maybe i'll just make an intro animation um and let me see so oh wait this isn't proper syntax so maybe that's why it's not working okay let me refresh it one more time refresh some reasons not wanting to refresh okay yeah i'm not sure what happened why it locked up there huh i don't know i guess my browser's mad right now all right so let me check one thing real quick let me see waiting for that to go and i'll say code or quote machine code from live stream and now i'm going to push it to the github repo okay so that worked i'm not sure why my random quote machine isn't coming up anymore but now when i refresh my github repo the browser is not happy um i'm actually going to try to open a different browser let me try a chromium browser right now let me try brave all right let's see if it loads cool so that's loading oh good so we have that animation which only leaves the screen and never comes back sweet all right because we're animating from uh what do we do we're animating from visible to invisible basically because we have um opacity zero so it's going from opacity of one where you can see the word to opacity of zero we can't see it at all okay so i think what i want to do is actually replace the opacity instead of zero i want it to be visible and that's the animate class so before the animate class is there um huh before it's there let me card text card text p so let me add a class or just styles based off of the card text p and i'm gonna say opacity um wait that'll that'll access both of these p or paragraph tags though um let's see okay chrome is locked up right now or not chrome firefox so let's see let me look at css first child so the first child selector okay i can do colon first child so in card text i'm going to try that so i only want to affect this first paragraph so i'm gonna do first child and then set the opacity as zero here okay let's see if that works oh wait go back to brave okay opacity is zero no well the quotes are changing but you can't see any of them i wonder yeah they're not okay so opacity is zero and then the animate class is opacity of one so i wonder if it's just because of specificity css let me add an important statement here okay i feel like there's going to be so many things after the stream that i want to fix okay that's still not working so let me see so i had let me just transition something else not the opacity let me say color is red here all right okay cool it transitioned into color red all right it would be kind of interesting to also do i guess random colors with the random text so they all changed um yeah so does anyone oh it's locked up too all right so a couple things um the code is available on github so if you go let me pull it up in um brave so if you go to my github account you can see all of the code and actually all of the free code camp projects are going to be here this is just the first one done in vue.js feel free to raise an issue to open an issue if you have any anything to add to this repo or even if you just want to practice contributing to open source this is a good place to do it if you have any questions about vue then you can post them in the comments below and you can also check out my channel faraday academy i do lots of view content on there and feel free to reach out to me alright thanks so much for the live stream in the next live stream we're going to be working on the next free code camp project which is a little bit more in depth so i think it's going to take maybe the full two hours because we're planning on doing from 10 a.m to noon so it should be or that's on my time zone anyway it's probably different for you because i'm on eastern daylight time right now so it should be a two hour live stream next time we're gonna add in some more features do view from the command line and a few other things so yeah thanks for thanks for tuning in uh and have a great day everyone