hey everybody welcome to live coding with jesse i'm jesse and today we're going to um today we're going to work with react native web um so i got a new setup if anybody saw the last live stream i did for free code cam technically uh it was just a disaster uh the audio was fine with the video caps freezing constantly so i'm gonna backtrack a little bit and go over some of the steps that we did last time that way you'll be able to see it as well as hear it and i'm still getting used to this new setup so i'm going to do try my best to keep track of what's going on with the stream and in terms of quality and then also the the chat so let me know now if you can see this if you can hear me if everything if everything looks good then we'll go ahead and get started i'm going to say hi to everybody in the chat hey um uh umberto says hey hey how's it going um yeah the time the time is weird so it is 8 a.m and my time zone which is eastern time so everybody's saying what time it is let's see uh rabbit works javascript says they do live streaming as well so that's awesome yeah um maybe i'll try to check that out if i if i can alright cool we got people from all over here um everybody's kind of shouting out their location that's awesome we got the last few argentina india poland um awesome okay so nepal really cool all right so here's what we're gonna do um i'm going to start out by uh just like installing um or starting like a create react app project and then we're going to just kind of switch it over to be to use react native web if you don't know about react native web i'll explain it briefly here i think i go i explain it more in the last stream so you can check that out this is project seven so if you check out uh the stream labeled project seven day one you can get more info but basically react native web is going to allow us to use react native so all the syntax is going to look like react native but we will be able to run that same code on the web in ios and android we could run it as a desktop app on windows linux or mac by using electron or something similar and then potentially you know react native does have the capability of running on other things as well for now we're just going to go with with those so the first thing we're going to design for the primary thing is as a web app i've decided to go the web app first route because i'm going to be able to display that while streaming easier than anything else we can run a simulator for like for mobile apps but it takes a lot more out kind of out of the computer in terms of like ram and cpu so i don't want to slow down the stream for that so at some point we're probably going to want to test this on mobile like we'll definitely do that but in terms of like our daytoday development we're going to develop um as if we were developing like a normal web app all right so we'll basically spend a lot of time in chrome and that's cool it gives us access to all the dev tools we normally would uh it's the development process is a lot easier then let's say like using the simulator or using expo and having like your device hooked up to the computer so i mean expo certainly makes that really easy um but definitely not as easy as just like a straight straight web app okay so uh rabbitworks says visor is nice yeah so i have used visor before so that's also nice but you just like you can't beat the ease of of the web app in in chrome uh we can come close but uh but for now we'll go with web app so uh first things first let me let me open this up and i'm just gonna we're gonna go to the react native web github repo so you all can check it out see see what it is you can read about it you know as we're streaming or later on i'm probably going to mess up on typing a lot because this is a new keyboard that i'm not really used to yet alright so this is react native web i'm gonna put the link to this in the chat right now and i see there's a lot of activity in the chat i'll try to keep up with that but about when we get to about the halfway point in the stream uh i'll maybe stop double check like what's going on in the chat and then at the very end of the stream i'll check the chat again so if you're asking questions or anything just hang in there for a little bit and i will uh i'll get to them soon okay so that link is in the uh the live chat and we're gonna go through here we go that's what i want the getting started guide so we are going to yeah we're going to go through this for create react app and this is what we did last time so we're just going to do it again and i'm not exactly sure what i want to do with this project yet um my thought is this uh i i years ago i made a game to help my oldest son learn math and i thought kind of like i could redo that as an app with react native web so maybe that's it i don't really have any other good ideas for what the project could be so let's let's do that so um let's go with create react app and make sure i actually have create react app on here this is a new computer so the reason the stream is working now and it wasn't working last time is because i bought a new pc for streaming um let's make sure yeah this should work all right bring it back up and let's name it um actually i'm gonna name it like this uh battle math all lower case all one word that's gonna be a bigger deal later on um but there's some rules about what projects can be named that are different depending on the platform so if we just stick with all lowercase altogether no hyphens that should cover every case we should be fine so this is doing the create react app you notice that was way faster than than the last time we tried to do this um so much faster i tried to do it on a 2015 macbook pro last time and you know that's a good machine but it just can't handle streaming and doing stuff like this at the same time all right so this should only take a few more seconds and then we'll be able to go back and add in uh react native uh web support which let's see basically what we're gonna need to do is add in uh react native web because we already have the other stuff oops there we go okay cool so let's cd into our battle math directory i don't know i didn't put this i'll have to i'll move this at some point but i actually put this in the wrong directory yeah shoot all right it's okay for now i i always like to put things in my projects directory um i didn't realize i wasn't already in projects but we're in here um and now let's just open this we're going to open this all in code i'm going to get rid of this one and just to show we have we have our our basic file structure that you that you normally get when you use create react app uh here's our package json right just all normal stuff so far and then now at this point let's add in uh we'll do yarn add react native web to bring in that package let's show our terminal we are okay if you want to know how i set up any of this stuff like on on windows i did a couple of tutorial videos on my youtube channel the link to my youtube channel i think is in the description of this video so you can check that out i show you how to set up um node and git and vs code uh on um on windows so that's this should be like just the last like three three videos or something on my on my channel all right so we have react native web here we can see it's now in our package json and we're gonna need to let's see we're gonna need to add some stuff in here so you can see hopefully let me make this just a little bigger and make sure everybody can see it after we we do this i'm going to go back to the chat okay so we're not doing a custom webpack configuration right because create react app is already doing that for us okay um yeah we're not gonna worry about jest or flow for right now um we're gonna have to do babel we may not have to do babel right now though we'll see we might be able to hold off okay yeah we might be able to hold off on it but basically what we can do to test and we'll see if if i can get away with not configuring anything else at this point then that'll be great just to keep the stream moving along um what we're going to do to test this out is go into our our app dot js file so you see this is if you're not familiar with react or react native right like everything is a javascript file and we use this syntax that's called jsx that looks kind of like html but it's it's not um kind of behind the scenes it's actually all javascript functions um so we are going to come in here and get rid of most basically all of this stuff right we don't want any of this stuff we're going to do our own thing here and so we're getting rid of logo uh for right now i guess we can keep the app.css let me let me go back here i think we can get a just some boilerplate here um that's what we're doing no i just want some like basic boilerplate um all right let's check out the code sandblocks template they have just so we can grab it uh grab their boilerplate i just want to be able to show you this this actually running first um so let me check out the package json for a second here okay all right we're good the only thing we didn't bring over uh react art which we may need to at some point but i don't think we'll need to for now so uh let's grab i'm gonna just grab this real quick so i don't have to type it all out and now we'll go back here okay and i actually don't want i don't think i need this right now uh we'll do text view and then we'll use style sheet as well so what i'm going to do in here is put in a view to start with right and then inside the view i'm going to add text let me make this bigger i want to make sure everyone can see all right hopefully that's easier to see um so we're gonna add in text and then inside the text you know we'll just let's put the title right we're gonna say this battle math okay and um if you didn't catch it earlier like i built a game for my son when he was learning basic math we're going to try to recreate that game using react native web and hopefully make it better as well and then maybe my other kids can can use it to uh to learn math okay so we have that and then um we can add our style sheet in easiest way is just to copy and paste some of the boilerplate for this so let's grab this and then go back over here we're gonna put in our styles stuff here let's get rid of basically a bunch of this stuff we don't really need any of that stuff uh but our main view we're gonna say styles uh i'm sorry style equals and we're gonna say styles dot i'm gonna say root since this is basically our root um component at least technically it is uh i guess for our purposes here um so let's go root and we'll just give it a uh let's see how i want to do this flex um i'm trying to i want to center the text in the middle of the page so let's go with um justify content center and align items ah this keyboard sorry it's a new keyboard and we're going to go center as well on the root and let's just see if that works now before we go any further with our styling now by default react native uses flexbox so that's why we're using normally you use this with flexbox i don't need to say that this that we're using flexbox because that's that's the default all right now let's get another terminal going um we can see back in our package json that if we want to run this if we want to test this we can use let's actually let's double check that now i think about it uh package json react scripts yep we can just use react scripts okay so if we do yarn start we'll get a nice little test version here just like a normal create react app app so we're gonna hit yarn start see if everything works whoa node server what allow access i guess it's the first time i try to do that oops and it looks like i do need that that um other package that i neglected so let's do everybody just saw all my emails um pretty much don't have anything crazy in there so i'm not worried about that okay so let's yarn add um what was that called react art i think that's what it was called let's double check yep react to art and get that in there and then it should work all right and let's restart that if you're ever running a process in the command line and you want to quit you can just press ctrl c and that usually does the trick so that's what i just did right there just quit it and restart it yay check it out all right so i don't know if you can see that but it says battle math really really small up here okay now notice it's not vertically centered so um i'm guessing that's because our container uh has no height right so this is our our root our root has no height um so we need to give that height of like full width if we really want that to be centered but basically the the important thing here the cool thing here is with very little work we've just used react native syntax right these views and text we've used that you can see we're we're pulling it from react native right which we we get this by bringing in react native web okay we didn't actually bring in react native or by by itself in our package json but via react native web we have access to all these react native primitives and we've just used them here and then we have them running in chrome and if you check it out i'm try to make this as big as i can why is this not dark you can see this computer is i've done almost nothing with it yet because it doesn't have my normal settings but you can see like i'll click on this uh this div here that says battle math in the text it's it's a div right uh so those react native primitives have been converted into dom primitives right so we have divs instead of view and text it's now been transformed into divs and then those styles that through the um react native uh style sheet those styles have now been added to these through like all these classes right um but like let's let's check on our root component here and see uh where's our there we go actually this is gonna be blocked by my my picture here so you probably won't be able to see it um let's see phone display oops all right so we have our okay yeah you can see that justify content center align item center so you can see those are are actually on that that div all right i'm going to go back to the chat right now and i'm going to try to answer as much as i can from the chat in the next few minutes before we go back and maybe do a little bit more with this project maybe we'll actually push this to github too before we end so that the the code is available for you to check out uh i'm gonna have to scroll up quite a bit there's a lot in the chat uh let's just i'm gonna try to get to as much as i can and let me give myself uh a time limit here of about five minutes okay uh we had a couple of people asked if this was for beginners i would say yes it definitely can be for beginners i'll do my best to explain things and certainly ask as many questions as you want it there probably be some things that are going to be hard to understand if you're a beginner but you know just check it out and see if it's too much that you don't understand you know that's that's fine ask a lot of questions i i want to be open to beginners but i also you know i want to build out a project so some of the stuff is going to be advanced let's see someone asks if i read comments i do read comments uh let's see a lot of people are just saying hey so i'm gonna say hi hi to everybody oh efforts for says saying hi from south africa hey how's it going oh alex from argentina minnesota hey so rabbit works you're in minnesota i'm going to be speaking at ndc minnesota this year so if you end up going to that conference or around there uh let me know benjamin from kenya says hi newton from nairobi awesome got mario from houston kamal from uganda amid from singapore you have seen from turkey wow we have people from all over say it's 9pm in china liberia bangladesh wow that's really cool it's so cool um goshu guide says i want to ask you can you read from files on javascript as fast as c plus plus to be totally honest with you i'm i don't have the answer to that so yeah i just don't know if i had to guess i would say c plus plus would be faster uh but i really don't know and by faster when we're talking about the different languages it's usually like a few milliseconds of difference fractions of milliseconds right so um in terms of performance like only in very few situations would that ever really be a big deal for performance but that's a good question does anybody actually know any like real numbers on that in terms of um you know is is javascript or c plus plus more performant yeah east africa india brazil philippines okay korea japan uh rydo says could you make an api calling app just for getting tweets or movies um yeah i mean that's certainly possible are you asking me if it's possible or are you asking me if i could build it like right now in the stream uh we definitely could do something like that on the stream probably not for this project but for a future project um ramune says nice video thank you i appreciate that the fellow from amsterdam hey how's it going okay so rabbitworks says talk about what you're using uh npx versus npm okay i'm going to be 100 honest with you i don't know that much about npx okay the only time i ever use npx is when i'm installing create react app okay so at some point the official docs for create react app started recommending using npx to install new apps with create react app so it wasn't always like that like you can even see there's a link to the instructions for older versions but this seems to be the quickest and recommended way to do it so that's why i do it that way so i've never really taken the time to to look into it um do you see there are alternatives right we could do npm init uh oops you want to create rig we do yarn so uh there's definitely uh multiple ways of of doing this but npx is kind of a newer thing uh if anybody else has any experience with that like more experience technically with that then uh please let me know uh hector says hello from columbia hey how's it going uh limitless says what is npx why not use npm okay so i mean basically the same same thing the only reason i'm using npx instead of npm is because that's the recommended way to use create react app uh rabbitworks says mpx gives you the ability to run package scripts and stuff without having to install them uh as as in create react app all right that's a great answer so like um if you notice in the beginning of stream we never actually installed create react app we just we just ran this right and this was a new setup on a new machine that i've never really built anything on yet so i i never installed it even before the stream so um yeah so i would say that alone makes using npx worth it like taking away that step of having to install something else and thanks rabbitworks mr smith asks a question i'm not i'm not exactly sure what your question means there may be maybe it's a translation thing like i yeah so mr smith uh if you get it like ask your question again maybe like explain it then i'll answer it otherwise i'm not exactly sure what you're trying to ask all right michael creole says if you're using npx you are sure to get the latest version all right so that's that's awesome uh ratto says not scripted yeah this is not not scripted at all um abby says how long have you been practicing um let me think uh like six years so i've been a developer for like six years i think looks like there's a conversation going on in another language um so i don't know if y'all are just talking to each other or whatever um if we have time i can go back and use google translate to see what's going on but i want to get at least a little bit more done with this with this app so i'm going to skip over it for now i'm almost to the bottom of the chat and then we'll go back uh and do a little bit more code uh limitless asking about what it what are the bundlers uh rabbit works says webpack yeah so webpack would be your almost always when you're using react you will also use webpack as your bundler i've seen people use other stuff with react but i've never used anything other than webpack okay rabbit works is recommending using react snippets to be able to generate component boilerplate right away that's that's a really that's good advice uh and then react snippets would is a um like a package uh extension for visual studio code they probably have the same stuff for other editors as well uh i'm not sure how to pronounce the name but the question is uh what's the difference between create react app and react native web okay so create react app is just a tool that lets you build out like the the basics the bare bones for a react uh app really quickly right so we just ran create react app and then we got we got all these files and stuff and folders so it automatically created a lot of the stuff for us that would have taken a while to do on our own but it you need you need it for every project it's almost always the same for every project so that just handles it for us react native web it basic it just allows you to use react native syntax to build web apps so that that would be the the difference um hopefully that answers your question let me know if it didn't edward asks about what what is react native web you code in browser and then build for mobile yeah you you definitely can do it that way but um basically react like i said rack native web just lets you take the react native primitives and turn them into dom primitives so they can run on the web ass why did i use root um to be honest with you i kind of like the idea of using whatever the outermost container is of a component and just saying root here i don't remember where i first saw that but i saw somebody else doing that and thought like okay that's that's not a bad idea uh it saves me from having to come up with names for stuff um and then i i know like whatever's in this route those this applies to the outermost container in every component this is just the outermost container for me so that's that's what i use this for let's see uh are there any examples of react native website uh i believe twitter lite is is used uh they use react native web for twitter lite and they use react native web for um one of the major league soccer websites so just off top my head that's that's it so i'm going to go back to the code right now i know i didn't get through all the comments but i'll get back to the comments uh in about i don't know 10 15 minutes something like that all right cool so let's get back in here and do just a little bit more um okay so here's the basic idea of what this this app is gonna do in terms of just like very very basic uh what we're gonna do is uh the app is going to have a text input and a button to submit it needs that on like every screen it's going to generate a math problem randomly right and then when you input the value in the text input it's it will check to make sure that that's the correct answer right and that's how the game will progress what will happen is on the screen will appear a certain amount of like enemies if you get it right then one of the enemies disappears if you get the question wrong a new enemy appears so you can you can get as many questions wrong as you want without the game like saying game over but it's just going to take even longer for you to get past it so basically to get past the level you will have had to like master that type of of math problem right we're just going to start out with addition it's going to be very basic it's going to be geared towards young children so we're not going to do anything like crazy in terms of graphics definitely nothing super violent or anything like that we want to keep it like appropriate for for young young children okay so for now i'm not going to worry about graphics everything is just going to be a bit of text but we can build this out so react native comes with a text input already built in so we're bit we're going to build stuff out at first just in app.js and as it gets bigger we'll break stuff off into separate components okay so let's put this text input here and let's go to the react native documentation react native text input react native docs are great you can see all the info you need so we'll just take this let's just copy and paste this this basic example that they have so that we can kind of get started as quickly as possible let's throw this in here and you know what let's grab their their state as well ah no i'm not going to let's let's create our own state right because i don't we don't need to use the constructor right we'll grab uh what do they call it text okay so they called their state text text and at first let's just leave this blank for now so what's happening here is we have our text input right they've they've given it some style we'll just keep that for now and then on change text so this is a little bit different than normal react right we have this on change text and that's every time the user types in that that input this is going to be called we got a little arrow function here so we're passing in the actual text the value of that text input right and then we're running this which is we're just setting the state of text to text right since the value we're passing in and the key have the same name we can just do it like this and then the value of the input is actually the the state right so it's kind of a circular you type in there it changes the state and then a change in state causes a rerender which then changes the value that's what's called a controlled input controlled component okay there are other ways to do this but this is the like standard way to to handle an input in react all right so let's save that and just just verify that it works oops get rid of that one okay cool so let's type something hey it works and we can go in here to react and let's check our states see where our state for this component is there we go so our state for our app component here is will change as we type see all right cool so that is working so let's go to uh back here to our react documentation and let's go to button and we're gonna add a button so react native comes with this button like prebuilt if you use button it will automatically style it differently depending on the platform right so according to the docs like we're just targeting either android or ios right and this will give it an android style and this will give it an ios style right we're going to stick with that for now we may want to put our own styles on the button if that's the case we'll we'll stop using button and instead we'll use touchable opacity which is the primitive that button is built on right and that lets us do a lot more in terms of styling right but for now just to get this the functionality you know going quickly we're just going to do this so i'm going to copy their example and put it in here for now this button and we've got to make sure we're pull actually pulling button in button and for now the we're not on press we're not going to do anything because we don't we don't have anything set up so we're just going to console log oops console.log and this states text right okay and let's change this from learn more to submit okay oops now let's check our app hey we got a big purple submit button let's type something and then hit that and that's weird on presses mark just required a button so i use undefined all right so we've got an error let's check that out okay so maybe let me just put that in the arrow function see if that does anything there we go okay so i i should have put it in an arrow function but basically we can see we type we hit submit and we can get the value in uh in the console right so if you're not like familiar with react at all and you've done some web development before you know this is kind of really different than you would normally handle text inputs like um it is a little bit different instead of grabbing values directly from the text input we're grabbing everything from state okay it it may seem a little weird on this scale but uh after you get used to it and you start having more complex uh like use cases you you see like actually saving the value of everything in state ends up being a lot more easy to deal with than needing to grab values from the dom from multiple inputs so it's it is a lot nicer uh it it may not seem like it with just one text input but when you start to get more and more on a page this this does end up being a much easier way of handling uh form inputs okay let me check the time all right we're running i only want the stream to last for about an hour so uh we're we're getting down to about like 10 minutes left let me check the chat just to see how much is in there uh and then yeah thanks there's a lot of chat how about let's let's go ahead and uh create a git repository for this and push this to github uh and then i'll go back to the the questions so let's do get status so this is already like just started out as a git repository when we use create react app it does that so we've changed our package json remember when we added some packages we've changed our app.js and then the yarn lock file comes with us using yarn so that will change automatically every time we update our packages so i'm going to do a git commit with the m flag or i'm sorry with with the am flags we're gonna add an atom and commit and add a message all in one line and let's just say i'm just gonna say init for now because this will be our first commit and yeah that's fine okay so locally we have this repository but we don't actually have it anywhere on github so let's go to github oops if you don't already have a github account i highly recommend getting a github account if if you'd like to become a developer of any sort um you know just sign up as long as you have it that's good and then you know as we go through this and you see the process of committing things to github you'll you'll kind of get a better understanding of what you would use it for so i'm going to create a new repository right now going to name it battle math okay i'm going to skip the description for now i'm going to keep it public i don't want to initialize it with a readme a get ignore or a license okay we can add those in later now i'm going to use the ssh version because i've already set up my ssh keys if you want to know how to do that check out the video about setting up get on on my personal youtube channel links in the description but since i'm doing that i can skip down here we're pushing an existing repository from the command line so i'm going to copy that i'm going to take it one step at a time here we're going to paste that okay so this is we're adding our remote right which is going to be the the ssh path to that repository in github and then we're going to push to that remote so we're pushing our master branch right to that remote great now if we go back here to github and we check our repository you could see hey here it is here's here's all our our files right um if we go to the source in our app.js you can see hey look there's our our title um battle math and here's our text input and our button right so now this is on github and i will give you the url in the chat right now and then from now on i will uh if i remember i'll put this url in the description to the video so everyone you can you can check it out you could submit a pull request if you want um you'll you'll always be able to see what's going on in this project from there so i'm going to scroll up right now and try to get through as many questions as i can in the next like seven minutes or so and then i gotta end this stream and do my my real job uh as a software engineer um i'm trying to i forgot to take note of where i left off at so it might take me a second to figure out where i left off all right i think i found it um always the legend said mission failed we'll get him next time i do not know what that was referring to so not sure what's going on limitless says keep going perfect explain all right thanks um limitless asks if i can talk more about flexbox for a bit okay flexbox is a newer thing in css that allows you to position elements on on the page of of a website or a web app so traditionally this has been done in different ways at one point tables were used people also used floats to create layouts in css flexbox is the default in react native and then there's a newer way that's css grid although you can combine css grid and flexbox so basically flexbox is a technique to position elements on a page uh and it's it's just css so if you check out flexbox there are a lot of cool tutorials online like gamified tutorials flexbox froggy is one that comes to mind that's kind of a nice gamified flexbox tutorial so you can go through that just to learn a little bit more the only thing i will say in react native for for mobile the the axis is flipped so if you know if you don't know anything about flexbox this is going to make sense but if you know a little bit about it just know the the axis is flipped so everything is usually like the opposite of what you think it would be um so by default on web i believe the flex direction is row the default flex direction on mobile if with react native is a column so i think that's way it's either that or the other way around but basically the flex direction is the opposite of what you'd be used to if you learned flexbox for web it's a little bit tricky to learn at first but once you learn it it's really nice uh for positioning um fur khan asks if someone can explain the difference between react and react native uh we got some some answers there as well so um mario says react native lets you build apps that can run on android ios and yeah that's it so like react is um a javascript library or framework depending on who you're talking to that allows you to build web apps react native allows you to build mobile apps uh it but it's expanded into more so you can build for more than just mobile with react native but basically like at its core what it was designed to do at first was to build android and ios apps using um using react uh always the legend says why not just write math problems on paper for the kid well that's how we started i actually like i created this game on a whiteboard with markers playing and then at some point i realized like hey like i could um make this a game like a a computer game right so i just kind of did it as a side project oh sorry i did it as a side project just to help me learn a long time ago but i found the project and ran it like a couple days ago and it just it just occurred to me like hey we could we could just redo this uh michael creole says no pomodoro yeah i did i just forgot to bring up the pomodoro clock so we'll we'll use it in future streams uh sabik says what course should i take in college to be a web developer i would say don't worry about it in college take whatever you want there are plenty of online courses a lot of them are free to learn how to be a web developer so go with that basically plan on learning web development on your own outside of what's offered in your your college fatima says hello from libya hey how's it going uh we have a hello from ghana we have hello from egypt nigeria india ukraine nepal awesome ivory coast new delhi australia uh saudi uh saudi arabia um gosh you guys says does javascript does javascript use the internet to read files uh or cpu um i'm i'm not 100 sure what you're asking there so like um when you're you're running javascript in your browser right like that's using your your cpu your ram you know everything like that so like the javascript files will come to you over the internet but what runs in your browser will use your cpu now like there could be some of that work happening server side so not on your cpu and then the results of that would be sent back to you all right so in a situation let's say where there's a lot of calculation or work that needs to be done maybe it would make sense to do that server side and just send back some sort of visual indication back all right but mostly like running javascript in the browser that that is actually running on your machine all right rados from bosnia hey how's it going hello from kenya from russia um what's your opinion about razer page's web app with uh net core uh actually um so i i just recently worked with a web app like that if your team is like heavy into dotnet and doesn't really know anything else i think that's definitely a way to go if you want like um a client side web app like a true progressive web app experience you probably can't get that with razer pages so you you are somewhat limited in that uh but if you just wanted like an mvc type of web app razer pages is a legitimate way uh i wouldn't go out of my way to learn it but if you already know net that's probably a the quickest way to get a web app up and running uh monica says uh you are too good thank you uh rasheed says you explain very well thanks i appreciate it uh dave asks if these shows are recorded yeah they're recorded it'll be available on the free code camp youtube channel shortly after the stream ends uh sabik asked the question earlier about what course to take in college to get a job so i had recommended you got to learn on your own uh sabik says i know but i want a degree to get a job well then uh do computer science then like if you know you want a job in web development computer science is probably going to look the most impressive uh for for that right like i mean my degrees in business uh but realistically like if i had a degree in computer science it would probably help me more in my career as a software engineer all right i'm going to skip through and find just some questions uh wait uh wahreru says uh why do you use windows instead of linux or mac i use mac at work for the most part i use linux on servers but i needed a machine that could handle streaming and it was a lot cheaper to go with a pc than a mac so that's why i end up doing a pc uh john hanson says jesse why no react hooks i so react hooks are not yet available for react native but the react native 0.5 9.0 release is going to come out soon and when that happens react hooks will be available so we will definitely update and switch to react hooks when that happens all right i'm gonna have to end soon because i'm gonna have i have a stand up for uh for work coming soon but let me try to get through these last few questions uh rados asks about doing a live session together um where writers can create a php api and i could implement interact app that actually sounds really cool yeah we could talk about that um rados if you don't already follow me on twitter follow me on twitter i think the link to my twitter account is in the description um if it's not then just click the link to my uh youtube channel and i have links to my twitter there so like add me on twitter and send me a dm about it and maybe we could try to work that out uh rabbitworks says have to head to work but i hope people can check out my live coding session this evening 5 p.m cst all right so check that out i'll see if hopefully if i can if i don't have a meeting or something then i can i can check it out as well and i'm going to show let's see let's see all right so uh thiago says uh does this mean we can create native apps and websites with the same almost base uh like ionic framework uh yeah yeah basically let's see pablo says do you recommend those beginner developer about react um i'm not so i'm i i think you're asking do i recommend react for beginning developers probably you don't want your very first thing to be jump into react first learn html css and some basic javascript before you go into react but like if if you know html css in basic javascript then for sure like i think react is a good it's easy to learn enough to make some basic web apps in um you know if you want to get really advanced that does take some time but yeah i think it's good for let's say the beginner who's just trying to get into their first framework after learning the basics uh akash says what are your opinions on mobx for state management i've never used mobx i've heard good things about it so you know i think it's definitely a good option although with the react context api uh i think it's less necessary to bring in a third party state management library uh powell says what's the difference uh between node.js express.js versus react to create a web app okay so react is just going to be your your front end of your app like your clientside stuff although it can run serverside but if you want to do anything serverside you need node.js so node.js is javascript running on a server now express is like a live a library that runs with node.js that makes it easier to do server things with node.js so you would use node.js on your server with express to make things easier and then on your client side you're going to use react you could potentially also render react server side as well all right for let's say for like search engine optimization purposes right but they it wouldn't be one versus the other it would be you'd use them together depending on your use case you might want to use them all together or just some of them right if you're building just an api you just need node and then probably express to help with that if you just want clientside you need only react but if you want like both together a client and serverside app if you're handling like form data and things like that then you're going to want to use them all together and on previous live streams if you go back and watch previous live streams we've done just that and used react node and express altogether michael says you need g fuel i'm guessing you said that right when i had that biggie on um game explorer says do you use solo learn uh i don't think i ever use solo learn i've heard about it but i i don't think i've ever used it myself uh we have a hello from georgia hey how's it going um anton says what's your opinion on web assembly uh i think web assembly is awesome and it's going to be very useful um i have not used it yet uh if you don't know webassembly is basically a way to use like other you can use other programming languages on on the web right normally like javascript is your only web programming language but uh it's a way to use without getting too into it like you could potentially use like let's say i don't know like c sharp on the web and things like that right so really cool it's going to present a lot of opportunities for other types of developers to get involved in the web and it's going to be a good opportunity for websites and web apps to be able to do more so i think it's cool um make me proud keeps asking react native for web uh yeah yeah so it's react native that runs on the web as a web app uh ramos says what language is good for webbased project javascript javascript is where it's at for the web cyberpunk says is this thing live or recorded it's live right now uh and then the recording will be available afterwards um let's see uh i think i've gotten all the questions okay cool uh so yeah i definitely have to go now i gotta get to work uh at my my day job as a software engineer for uh dick sporting goods um i'm actually working with react native web there so i'm gonna quit the react native web stuff here and go right back to my other project and use it again thank you all so much for watching i hope that i can start to do these live streams on a more regular basis now that i have my new computer set up so we have reliable a reliable way to stream uh i'm hoping that i can maybe on like wednesdays and fridays in in the morning in my time so right around the same time we did today do some live streams um if i have time maybe even on the weekends do some live streams but if i can get at least once a week and be consistent with that i'll be happy for now love to be able to do it more but um you know there's just with a new job and things going on it's just been tough uh to find time so anyway i really appreciate uh hanging out with you all and um i'm looking forward to the next stream uh hey feel free to message me you know you can follow me on twitter or instagram i'm pretty um active on those you can message me with any questions or anything you know check out the github repo put issues up there pull requests whatever you want um check out my youtube channel i go more in depth into a lot of things that i've used today and i talk more about it so yeah until next time have a great day have a great weekend i'll see you you