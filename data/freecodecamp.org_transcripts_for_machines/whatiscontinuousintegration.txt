Hi folks. My name is Alex Sharma. I'm a developer advocate at CircleCI and I am here today to talk to you about Continuous Integration. Which is a software development practice where everyone on the engineering team is continuously integrating these small code changes back into the codebase. After each change that they're making, there's a suite of tests that runs automatically that checks the code for any bugs or errors or anything like that. So what does that look like in practice? I've drawn this beautiful flow chart up here for you. Step one is you make a change. And this is something maybe on Github. You make a future branch, you push it up, submit a pull request. That's the change that I'm talking about here. Push that up, then you run your tests automatically, and that's that's pretty important The tests need to be run in a consistent way so that everyone on your team has full confidence that they're running the tests in the same way. You don't really have a guarantee that your machine is the same as your neighbor's machine. That's really hard to to lock down. So those tests are running automatically somewhere else. If they pass, you're good to go and you can just keep making changes. You go right back around, submit another pull request. Go wild. If the tests fail, you need to make sure. It's your responsibility to fix the code. Fix the code until your tests pass and then you can continue developing. So it's this wonderful cycle. The idea being that you want to catch these bugs as soon as you can. So they're not lingering over a long period of time. So that's what Continuous Integration is and next time, we'll talk about why you would be doing this. We'll dig into that. Thanks!