so um for starters i want to thank you all for joining in today and i'm really looking forward to uh going through this with you this is the first of a five day um stream uh course if uh if you've seen the the course that i did earlier uh i'm gonna try to not follow that exactly so i'm gonna go i guess a little bit off script and it's still a beginner intro to developing skills so if you haven't built any skills before no worries hopefully we'll be able to uh to walk you through that um per the the earlier question yeah we're going to be working with node.js and javascript but i'm going to go through it hopefully in a way that if if you're not a javascript person it will still uh make sense to you um for starters uh any um i'm gonna try to look at the the comments i've i've been building skills for a little while but the streaming live streaming this is totally new to me so like this is literally the second time i've ever streamed anything and the first time was like this morning so uh so if i screw anything up let me know and i'll try to fix it put it in the comments i've i've been on a lot of live streams like on the other end of it so i'm trying to follow some best practices or some things that i've seen on other streams that seem to work so what i'm going to do is i'm going to talk for a little bit and then i'm gonna pause and look at the comments to try to answer any questions so as i'm going just ask questions and i'll try to uh from time to time uh look back and forth so i want this to to not be a lecture where you're just sitting there watching my screen i do want to try to make it interactive but at the same time i want to cover a lot of ground in a pretty short period so try to balance that um like i said earlier this is going to be a a fiveday live stream so we're going to start at 1 p.m eastern every day for the next five days and it's about 30 to 45 minutes is what i'm planning i've got an hour booked mostly that is for mistakes and questions so a little bit of buffer there but probably 30 to 45 minutes per day and the goal is hopefully by the end of this to have a completed skill built while talking through what's happening along the way so again so you're not just watching me uh code i want to talk through it and make it make sense and answer questions as we as we go so um is if you can like just make a a a quick comment are you i'm sure there's probably a way to do like a poll or something but i don't know how to do that so i'm gonna just ask um do you uh how many of you are building skills right now have built a skill or just like completely brand new uh to it we're uh if you and if you are that's fine i mean that's if you're brand new and never done any of this before that's cool if you've built some skills before that's great too um if you've got any specific questions just trying to get a a tally of where everybody is so i can adjust the the topic hopefully accordingly to that so um just read quickly through the the questions uh store variable persistence okay um all right so um let me let me uh let me start at the beginning so to to follow along with this minimally you're going to need two things you're going to need a an aws and amazon web services account and if you don't have one of those you can get one at aws.amazon.com and this is a paid service in case you know that but they do have a free tier and the free tier is pretty generous there's um i think you get like i want to say like a million requests yeah like a million requests for lambda and that's what we're going to be using the lambda service so um you'll if you want to follow along or do what i'm going to be doing at your own pace you'll need to have an aws account you also need an amazon developer account so to get that you go to developer.amazon.com and i'm logged in but so from here you would just sign in or if you don't have an amazon developer account you just sign up and if you have an amazon echo you don't need one to do development but if you have one you want to use when you sign up for your amazon developer account you want to use the same email address that you used when you set up your echo because that will let you test your skills in development mode without really jumping through any hoops and it just makes things easier so use whatever email address that you use for your echo when you sign up for your developer account if you're doing that so with those two things um you're ready to uh you're ready to get going building a skill you can do everything from the web browser which i'm going to walk through really quick first just as uh is kind of a reference point for where to get started but as we get into building our skill over the next few days i'm going to transition from the browser stuff into uh doing the um the development with some local tools so ide and the alexa skills kit cli turn a lex off here sorry i don't know and uh and i'll talk about what those are and um the the advantages pros and cons and uh using one versus the other and all that good stuff so for starters the starting point the jumping on point would be the developer portal for sure so developer.amazon.com and uh if you go to the alexa section of the portal the um the documents we're gonna be there's sort of two areas when you're building skills there's the um the alexa voice service and the alexa skills kit so the skills kit is for building skills which is what we're going to be talking about over the next few days so building skills is um kind of analogous to building an app so skills make give alexa capabilities that uh are not there right now so i guess effectively making her smarter or it's smarter depending on your your preference for that um and the alexa voice service is for alexa enabling devices or software so if you wanted to uh to put alexa into um some smart device you could do that which incidentally like you you hear on the smart device you hear uh referenced like smart speakers and i'm going to take just a second to just talk about how it all works it's actually the the device itself is really not all that smart all the smarts are in the cloud in the alexa service and so the the device itself is really just kind of a terminal that um will listen for the wake word which is alexa and then stream what it hears when it hears the wake word back to the the back end service and then from there the alexa service is going to convert the voice stream to text and then we're going to set up an interaction model which i'll talk about more a little bit later that is going to hopefully um tell the alexa service what the user wants and then we can handle what the user wants in our skills service which is uh something else that we're going to talk about a little bit later but let's start here so um to to create it i'm going to walk through creating a skill just really really quickly like super basic and then um talk about the the steps so i'm going to hold off on answering any questions for just one second here while i walk through and just kind of show you high level what um what goes on when you're creating a skill so uh after you've signed up and logged in to the alexa developer portal you would go to your alexa council and then your skills and then um here i'm using a fresh account so that you can see everything from the beginning and you would just go create a skill and give your skill a name and i'm going to call this one free code cam and create skill and these uh we're going to be creating a custom skill there's a few different types of skills there's like flash briefing skills and video skills and audio player skills but the the custom skill really gives you the most control and that's what we're going to be going through in the uh in this live stream and over the next um few live streams so once i've created a skill it pulls me into the skill configuration area and from here so this is where i'm going to configure everything that's basically going to allow the alexa service to recognize when a user is invoking the skill or starting the skill up and then requesting functionality that the skill should provide and that's all going to be done through creating something that's referred to as an interaction model which is uh really at the end of the day a json document you know so or this is the uh this is the very starting point so we can do this um graphically and it's going to create the the json for us or we can just write the uh the the javascript object notation of the json um syntax in here but um we'll we'll get into this in a little bit i'm just going to step through like i said a really simple example so um right here is the the first thing which is the uh invocation name and the invocation name is the name that the user is going to use to start the skill up or to invoke the skill so this is different than the skill name the skill name is what users are going to use to find the skill when they're searching through the skills store and it they're often the same generally the same they don't have to be though the invocation name can be different the invocation name during development can be pretty much whatever you want it to be uh however um and we'll we will i'm gonna try to submit a skill for and i'm gonna try to do this tomorrow i you know try to get a skill done that we can send to uh through the approval process and and hopefully it'll be back by friday it's usually pretty quick but maybe it'll get kicked back and that'll give us an opportunity to talk about that but the invocation name is important especially when you're submitting the skill for certification so that it can be available to the world and there's lots of guidelines around what you can and can't do with regard to the invocation name and so you can read about those down here like you can't use uh single words and you know words that are used as a part of alexa's native functionality and and some other things but uh we'll we'll uh see that i'm gonna just for right now call this free code camp so i'm going to use the same invocation name as the as the skill name so now to to start this up we would go like alexa open free code camp and that would start it up or alexa ask free code camp something so the um the interaction model is made up of a few things it's made up of intents which are uh intense or a reference to functionality that the skill provides so and it's pretty granular it's kind of analogous to um like a a function in in code but not exactly so if for example if you had a skill that was for ordering pizza you might have an intent called order pizza and then the purpose of that intent would be to take the order and confirm the order with the user but to fulfill the intent you might need to collect a whole lot of information from the user so in that example of a pizza delivery you would also need to ask them what size they want ask them what toppings they want maybe get their address their payment information and that back and forth is uh referred to as a multitern dialogue and so there's also dialogue management that happens or is defined inside the interaction model and then what you're trying to get to process or fulfill the intent is the information that you need so in the case of ordering a pizza the topping you might need the value for topping which would be maybe pepperoni or onions or olives or whatever and the the the parameter values the variables i i suppose those are referred to as slots and so we've got in the interaction model three things we've got intents we've got um slots and we've got dialogues and we'll we'll dive into this um in more detail when we get further into building our skill but you can do this all graphically so you don't need to um you don't need to write code to do this you can do this through the the web interface so if you wanted to create a custom intent like um hello intent i would do something like that and then attempt intents are recognized so that when a user's asking alexa to invoke your skill and then to have your skill do something you provide sample utterances to let the alexa service know what the user might be asking for and so i'll say hey hello hi and you provide some examples like that the alexa service is pretty smart so with a handful of examples it will start also or be able to start also inferring some things so you don't need to provide every possible scenario but you want to provide enough where the alexa service can learn generally what it is that uh that you're doing so in this case here this intent if we go look at the json editor how am i doing on time 16 after this intent is you can see now written here to the json i've got my hello intent there right now it doesn't have any slots but it's got some sample utterances so what this is telling the alexa service is that when a user says hi hello or hey that um the intent that is going to be tied to code that's going to provide functionality later is the hello intent okay so um hopefully that makes sense i'm going to come back to this if it if it doesn't but i want to move through this stuff pretty quick so we can get into the coding part so like i was saying earlier when a request comes in it happens the user makes or talks to the device says the wake word the alexa service is going to identify based on the invocation name which skill the user is wanting functionality from and then based on the utterance what intent they are trying to get done and all of that information is um then sent to a service for processing so like a backend service an api and that's something that is developers we've got to create and that is referred to in the uh the developer portal here as the um endpoint so the endpoint the alexa service is going to collect the request and then send the request off to our service for processing and then our service is going to respond back with uh the information that the the user is looking for hopefully so there's two different um two different ways you can go at this you can use an amazon uh or aws lambda function or you can use uh any http endpoint so it really um it really doesn't matter how you process the requests as long as you're sending back jason in a format that the alexa service can understand and as long as your service is able to understand and process the request that's coming in and the request and response formats the um the documentation is really pretty good i think anyway for um for the uh the alexa development stuff the the confusing part is probably more in the the sdk which i'll talk about later because it's kind of a wrapper for what's really happening under the hood under the hood it's all pretty simple the alexa service is going to send a a request to your skill service in a format that is going to be json like this and your skill service needs to take that in read what's happening in there and determine based on that how to respond and it's going to respond with a json response also so um it's just a conversation that's going back and forth between the alexa service and your skill service that is uh that is pretty much all that's going on it can get complicated as you get into the development or not complicated but uh involved i suppose but let me uh let me continue on here and i'm going to try to like get in about five minutes pause to uh to look at the questions um so the uh like i said you could use anything we're gonna we're gonna use a lambda function for this and that's definitely the easier way to do it or at least in my opinion and uh the recommended way to do it is lambda functions also so i'm gonna on the endpoint here i'm going to select the aws lambda arn and arn is the um it's an acronym for amazon resource name you copy that to the clipboard and then i'm going to head over to aws and i'm going to sign in and go to lambda and so the first time you go in here you would just go create a function and this has changed a little bit there's actually a a couple of different ways to do this just for getting started so you can create a uh a lambda function from scratch and um that's fine except for in most of the examples that you see out there when you go to uh to github and or the a lot of the documentation the examples the code examples are going to be using an sdk and that is something that you can find at github.com alexa and the the there's a new one for python i think i saw recently i know there's one for java but the javascript one is the most popular one right now and it's been out um for a little while so there's lots of code examples although it was recently updated from version one to version two and version two is significantly different than version one and so um if you're if you're doing development and you've already gotten into this i'm sure you you've seen that i've got a lot of other tutorials if you go to my um the dabble lab youtube channel channel and incidentally there's a couple other people from dab lab on here so if you have any questions they can uh try to ask to ken and our peta are on the the chat as well but the um the the dabble lab youtube channel is youtube.com dabilab and so some of the uh as i'm going through this i might reference some tutorials that i've already uh done just to uh to to save us time and get through it quicker but the the change from the 1.0 to the 2.0 sdk everything that we're going to be doing this week is going to be with the the later sdk 2.0 and so um yeah where i was going with this was if you create a function from scratch it's not going to include the the sdk and so you would literally need to be writing back from that function with you would just need to manually write code to write back the the the json response and um you can i mean that works for a really simple skill like a very very very very basic skill actually let me just show that and show you that um so i'm gonna do a simple example and um you just give your your lambda function a name like this and then um choose a role i can't remember if i set this up or not uh yeah so um if you have an existing role yeah i do a lot so let me see if i can create a custom role this is what happens the first time if if you're just getting into this like it'll pop you through uh this process like create a lambda basic execution role it's probably gonna scream at me and say i've already got this i know here we go okay so um so you create a role and a role is basically permissions to allow the function to run and then you go create function but before i do that the blueprints and service serverless application repository the blueprints are like the name implies kind of ready to go templates of sorts that you can use and they're not just blueprints for alexa there's blueprints for all kinds of stuff but the 10 the the trend now is that everything seems to be moving over to this serverless application repository templates and these are um cloud formation if you're if you're familiar with that but basically um templates that define how the back end should be set up and and i'll i'll show this a little bit later because it's kind of useful for um for some things but just for our very first one we'll just start from scratch and then um create a function and then in here uh lambda functions are they're really i i like them a lot um they're great in that they let you just focus on writing code without having to worry about configuring the server and all that stuff and they work differently if you're used to building web apps and maybe using nginx or whatever web server apache you prefer where you set it up and it's sitting there waiting for somebody to make a request that's not how lambda works the way that lambda works is it's sitting there doing nothing not running at all which is good news for you because you don't pay if there is nothing happening it's just sitting there uh waiting and it's waiting for a trigger so for an event and the uh there's different amazon services that you can use to uh to trigger a lambda function in our case we're going to be using the alexa skills kit and the alexa skills kit is or adding this trigger to the lambda function is what's going to allow us to use this lambda function in as the end point for our for our skill if you don't see uh the that option the alexa skills kit over here for some reason uh it might be because you're in the um a region that doesn't support it and so you just go up here and change to a region that does support and i'm not sure which ones do and don't honestly uh i think all of the us ones do i'm pretty sure but um if you're you're not sure i know us east does so you can just select that one if you want to go through it and then um this isn't required but it's good practice the the configuration required here so uh the skill id verification basically prevents any other skill from using this lambda function so uh you basically paste in the skill id if you guys remember when i set the skill up in the developer console i copied that to the click uh the clipboard so that was from right over here and um and you paste it in there and you choose add and then save and then the way that i'm going to tie this to the skill is with this arn so this amazon resource name up here and this is the kind of the unique identifier for the endpoint and then i'm going to go back over here i'm going to paste that in here and and then i'm gonna save this so and um let's see so now save the endpoint all right let's save the model and um build the model so building the uh the model this is gonna take uh a minute so while this is building i'm gonna go um work on the uh the the code over here just to to show you so the um what's happening right now when you're building the model it's basically using the information from our interaction model to train the the alexa service the machine learning behind the alexa service on what to do and so we'll let that continue but over here like right now if i uh if i run a test on this the response format like i mentioned earlier needs to be in a format that the alexa service can uh can understand and so i'm going to do one like without using the sdk let's see if i can just uh i was talking about the request and response oh wait there it is so i think like the simplest possible alexa skill would be something like i don't even need all this but uh um actually let me get out i think they i thought i saw one in here yeah here's one i'm gonna just hack this up real real quick just to make it respond with something and i'm gonna get rid of all this directives and reprompt so you can see it is just json i don't even need this i think this is probably like the most basic possible skill service we'll see if it works no guarantees but i think it will um open speech plain text say hello yeah so this will give you an example of just kind of what's happening under the hood if it works i haven't messed anything up uh so this is all built so now if i go test this what i call this free code cam you just enable testing here i'm back in the developer console and i can just say like um open free code cam and i get null so there is a problem with the skills response and that is because i am i've got syntax error which i think is where oh wait that looks that looks good hmm all right let me see what's going on here okay i am missing something simple okay let me see just paste all this in here oh you know what i i forgot to return this yeah so this is why um this is why you use the sdk then i can get rid of all this okay let's save that and try this again okay so now i'm getting a response back this is the simplest skill service ever so save that and this is returning like the most basic response that the alexa service is going to uh to understand and so i can play it here although i've got my sound turned off but let me turn on the my echo um alexa open free code camp hello there all right so i'm gonna i'm gonna pause here it is um 30 135 and just look at the the questions so um real quick to recap we set up the skill service in the developer portal and then uh i set up a really or the the skill set up the skill in the developer portal and then set up a really simple skill service that is just responding with a minimal response that the alexa service understands and in this case all of this skill is going to ever do is just say hello there no matter what the the user passes over but this this kind of shows you what's happening uh under the hood so this is the request that's going out from the alexa service to my skill service which is the lambda function and then that little bit of code there is just responding with uh with this here which is what's getting sent back to uh to the user okay let me um let me take a look at the questions here uh okay did i'll ask you all a question does that does that make sense sort of uh the the back and forth between the alexa service and the skill service is just start there someone said what's an amazon alexa skill development um building skills for uh amazon alexa which or the the alexa service can you let me know uh let me see yeah maria the um the the video will stay up so you can watch it another time yeah nicholas i was i was just not even returning the um the jason at all in that lambda function so i made it i made it harder than it needed to be uh familiar with node that's good congrats ryan you got your first job offer that's awesome yeah wayne as we um as we get into building the skill so that the skill that i'm i was thinking of for uh for the rest of this stream so not just today again i'm gonna be streaming for the next five days and it'll be about um 30 30 minutes to an hour starting at 1 00 p.m eastern and over the five days we're gonna build a skill and the uh the skill that i was thinking of is like a uh and ask me anything skill so this is the the idea that i had was a skill where you could basically have a list of faqs that a user could go ask questions and get answers to but i was also thinking it would be really cool if there was a way for the user to ask a question that hasn't already been asked and um so how i was thinking we could go about that maybe is the user would ask a question and then the question would be saved to a database and i'm thinking like dynamodb and then somebody could review those and answer the questions and make that a part of the the faq or the ask me anything so sort of a voice version of and ask me anything if you've seen those on github where they're just basically a repository for questions that have gotten asked and answered so that is the skill that i think we will be building yeah or i'm planning on building so what else we got okay um i'm gonna so so that is a the that is a a really that's a really simple uh skill without using any of the the sdk stuff let me show you a another way to go at it and this is i'm going to go back and i'm going to create a different uh function different lambda function and i'm going to call this one sdk example and yeah choose an existing role that lambda basic execution role and this time i'm going to use a blueprint and the blueprints the blueprints are like boilerplate code or example code that amazon provides and there's one i'm gonna use this one here this node.js alexa skills kit and this one is space facts and you can see this one provides um some code that we can edit here and this is a skill that is provides well space facts so these are you can ask give me a fact and it provides like a random fact about space and same thing here remember we've got to add the trigger the alexa skills kit trigger and let me go back over here and we're going to change this skill service to point to this new lambda function so i need to get the um the skill id again to do that coming back over here and go to the endpoint and then copy the skill id again to the clipboard and then the configuration information down here i'm going to paste it in and then add that save this and now i need this new arn so i'm going to copy that and just replace this with that and then save the endpoint and then if i go test again now um i'm going to turn on my sound so you can hear this and then save the engine that's gonna just play that so okay so now um you see i do i'm testing in here and you could have i'm also i've got the uh the video plan just to monitor it for the comments so i don't want to turn on the sound that's picking up on the uh the mic it'll just loop but you can see here here's your fact the milky way galaxy will collide with the andromeda galaxy in about 5 billion years let me try it alexa open free code camp here's your fact the sun contains 99.86 of the mass in the solar system okay so same same thing happening behind the scenes that the big difference between uh between this and the last lambda function is this lambda function is using um the alexa skills kit and it's using the alexa skills kit 2.0 which you can see in here if um and i'll talk through this as we get into it more but the it's requiring this alexa sdk and so a lot of the um creating the response back to the alexa service and and more specifically creating the uh the json that gets sent back is handled by the skills kit so it just makes writing the code a lot simpler and but still the same things happening so if i uh if this is the request that's coming over and this is the response coming back if i were to go over here and test this i could do i could paste in so i just this i just copied from the test console in the developer the developer console and then launch request naming it here and then create and then i can test here and i can see the response back down here so this is this is at the end of the day what we need to do we need to generate a json response and that's what the skills kit's going to help us out with but when you when you look at a lot of the the code examples out there like i was mentioning earlier there's a lot of a lot of examples that use the 1.0 sdk and the the code is um is quite a bit different uh with the the 2.0 sdk still javascript so if you're familiar with javascript it's not super hard to uh to work through but if you're just getting started with uh with javascript just be aware of the difference between the 1.0 and the 2.0 code so when you're looking at code examples you'll you'll know if it's one or two so any any questions about that up to this point i think um we're gonna probably call it a day on the coding side uh the first goal was just for today to to walk through the the high level steps which i think we've done and tomorrow we're going to get into talking about planning the skill that we're going to be building and get kind of a rough framework of that skill built tomorrow and maybe even enough to submit it for certification and then we'll add functionality to it on wednesday thursday and friday and hopefully finish up on friday but any questions about what we've what we've covered to this point uh let's see how do you add utterances uh from a json file to the alexa developer portal or is there a tool to deploy that from code yeah there is um uh parmo there's the uh the ask s uh the ask cli so uh i'll get into this later in the week but when you um when you start building skills that are a little bit more involved or actually not even a lot more involved you'll probably want to use the alexa skills kit cli in the alexa skills kit cli and i'll i'll show you real quickly ask new this is the cli doing this lets me create um code that i can deploy from my local computer so this example skill this is called a um a skill project and then the code for our lambda function is in here also and i can modify this code and you can start with templates i've got some other tutorials on the dabilab youtube channel that use templates from skilltumplets.com which is a site that that we set up at dab lab mostly for ourselves because when we start new still projects we start from code that is um kind of boilerplate code and so we've got some basic skill templates out there all right let's see i see karthik's got a lot of these questions here that's good yeah if you make changes to the interaction model you do need to rebuild the interaction model so anytime you make a change to the interaction model you do need to rebuild it so i know it's hard to debug lambda functions yes so um so on debugging um it depends on where you are in the testing so you can debug using just regular unit testing so mocha or chai if you're familiar with those with with javascript or node uh to do a lot of the debugging and then the cli also provides a simulate interface that you can use to uh to test the skill but when it actually gets to um to voice testing that's uh yeah you'll have to walk through that but most of most of the testing can be uh automated and there's um uh and i'll uh get into this later on but there's some good tools out there bespoking tools uh to help with testing and test automation and i'll i'll mention those later on in the stream on another day any other uh questions before we wrap it up for today let me see okay okay i think that's um i think that's got most of the uh the questions there so we're gonna we're gonna make this our stopping point for today and then tomorrow what we'll do is we'll pick up by talking in more detail about the skill that we're gonna build for the next uh four days and start working on that code so hopefully i'll see you guys back tomorrow if you have any questions um you can go ahead and post them here i'll i'll keep an eye out on this for uh the next few minutes to answer any questions if you have those but if not i will catch you again tomorrow and thanks thanks so much you