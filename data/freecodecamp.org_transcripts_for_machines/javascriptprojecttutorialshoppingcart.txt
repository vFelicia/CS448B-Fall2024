in the shopping cart project we're going to look at how we can add a javascript functionality to add items to the cart as you can see first we have the button that will kind of show the cart so we're going to add first the functionality to show the card itself and here you can see that we have heart coded items and here would be a total so notice what we have we have two items and then 49 again hard coded and then we would have ten dollars which obviously doesn't match the items that we have now if we're going to scroll down and we're going to see the items then we're going to have the little icon that's going to be showing up when once we're going to click the cart icon we're going to have a alert that's going to say the item has added to the card now let's add one more just so we can see that it's for sure working so again we have a item added to the card and if we're going to scroll up first you're going to notice that we'll have four items right now because we're counting all the items even the hardcoded ones but obviously later on once you're done with the project you can just delete the hardcoded ones and also we have the value so it's counting all the dollars that we have for the items and if you notice that we have the exactly two items that we selected from our store items list and they have been added to the cart the project setup files are located on my github so you can either go directly and just find by the project's name or you can follow the link that i have left in the description of the video once we get a hold of the source files we have the folder and within the folder as always we have all the images the css that's necessary for the bootstrap and also the font awesome so here we can just check it out first what we have in the index.html and so far since there is no functionality we can click all day long and the cart itself is not going to be showing and also the items are not going to be added to the cart as we're clicking on the icon because obviously this is the purpose of the project so now let's open up the same folder in our favorite text editor and as you can see that i'm sitting in my index.html now i'm not going to show right now each and every id or class that we're looking for because there's going to be quite a few of them so as we're going along i'm just going to switch back and forth and i'm going to show you where exactly i'm finding the either the id or the class so now let's right away switch to mjs here let's make a comment that this is going to be a show card so first let's start with showing the card and also as always we're going to do everything in the immediately involved function expressions because in this case you'll show that we're going to separate the issues so first we're going to work in our first immediately invoked function expression where we're going to deal with the card and then we're going to create another one which is going to hold the items added to the card so we're going to make sure that we're not sharing the global scope with our variables so let's start with declaring a immediately invoked function expression which is going to have the syntax of parentheses then the function keyword then again another set of parentheses and then the curly braces for the block of code were all going to be working now here i'm going to invoke the immediately invoked function expression and now we're ready to start working now like i said first we would want to select the cart info which is going to show our card so if we're going to switch back we are targeting this button and after that we're targeting the actual card so if we're going to switch back to index.html and we can either use the command f so that way we can find and if we type cart info we're going to see that we're looking for the id of card info so this would be the button which we would want to target now i cannot see this in a smaller screen this is why during this tutorial we're going to switch back and forth to a bigger screen and also we would want to show the cart so the card itself is right here so this is below the header and here the card is sitting now we're using the position absolute this is why we cannot see the card right now and the way we're going to do this we're going to target the cart info we're going to attach the event listener and then we're going to use this class of show card because if you notice we have for the card for the actual card that we're going to be showing the width right now is zero and once we click the button we're going to add this class of show a cart to the cart and then we're going to be showing because notice that with the show of card class the width is 18 rems so right now the width is zero and overflow is hidden this is why we cannot see the card also and then we're gonna attach this class with a javascript so let's go back to the mjs first let's name our variable this is going to be cart info because this is the same thing as we're going to be targeting so here we'll have a document then we would want to use document get element by id and like i said the id was cart info so cart dash info and now once we have our object back since we know that once we're targeting something we're getting back return as an object we can do event listener now before we do an event listener let's right away select the card itself so for the cart we're gonna have the element by id of cart so the card is gonna be again the same thing document get element by id and we're going to be selecting the card so the name of the id is going to be the card like i said right now we would want to attach the event listener to a cart info button so let's do a cart info since that is the name of the variable then since we have the object we can use the method of add event listener and the first parameter we are expecting what kind of event we're listening to which is going to be the click event and the second one is going to be the callback function which will be executed once the event fires and like i said we're going to do a very simple thing we're going to select the cart that we have targeted before then we're going to use the class list property and then we're going to have a toggle now for the toggle we're going to specifically write what kind of class we're going to toggle so instead of checking whether the cart has the class of show card or doesn't have we have an option of using a toggle now for the toggle we're going to have to write what class we are looking for and then javascript is going to decide if the cart has the class of show card then we're going to remove the clasp once we're clicking the icon and then if it's the opposite then obviously we're going to be hiding so once we save it and once we're going to go again to the bigger screen because this is where we're going to be able to see this once i click it notice now the cart is showing and now we're hiding the card now i added few things in the css it's not just the width now i also see that we're rotating a little bit and some other things and obviously if you like to you can go ahead over here and explore what we're doing but now that we have the card this would be our first thing that we would like to achieve and the second one is going to be working within items now items we're going to have a little bit more code and maybe in order again to avoid naming the same variables and them colliding who's going to create another immediately invoked function expression so here let's call add items to the cart so this is going to be our comment and then we're going to do the same thing where we have parentheses then we have another set of parentheses then the code where we're going to be placing our code and then we're going to invoke it right away so again we can close it out and we can start writing whatever functionality we would like now first let's select store item icon now what is store item icon well first i can show you in the html this would be this icon you notice here we have the cart and it's showing only as i'm hovering over the image of the store item so let's go to index.html let's write the name so this would be store item and we have the icon now this this would be the store item like i said that is within the column then here we have the card then this would be the image then i'm sorry this would be actually the image container then this would be the image that's sitting within the image container and then here still within the container we're going to have this pan and the span is going to hold the value of font awesome icon which would be the shopping cart so what we're doing is we're targeting all of these spans with the class of store item icon and we would want to attach the event listener to them so here let's do a const we're going to call this a cart btn and let's set it equal to document then we're going to do query selector all because there's going to be more than one cart icon and then we're going to target again the class of store icon and we're gonna have the store item icon sorry store item icon so quite a long name with a two dashes we obviously could have maybe named it with a camel case but let's just go along with it like it is right now so once we have selected the store item icons then we would want to attach the event listener now before we do that let's open up the google developer tools just so we can see that everything is working and since we're going to be traversing a dom a lot we will going to be using console.log today a lot now before we start typing all the functionality i just want to let you know right away that in general there is a way better way how to do this than what we were going to do it now the reason for this is this is a javascript dom project so therefore we're going to be traversing a dom more than we would want to just so we can get a practice in general we're going to add some kind of attribute over here that gets hold the of the id that's showing and then instead of just getting all the items with traversing the dom which we will going to do in this project you're just going to get an id and you're just going to contact the database and get all the information and then place it in the card so this is not technically the best way how to do it but again like i said since this is a javascript dom project we're going to do it a little bit long way so let's go back over here to app.js and let's start working with a cart button now like i said for the cart button we would want to add a for each because we are getting back a known list so we would want to attach this event listener to all of them so we're going to do for each so we're going to loop through all of them and here for each and one of them we're going to have a callback function whereas a parameter we're passing the button that we're looping through so each and every element of this card button node list and here we would want to first figure out what we're getting at so why am i saying is what we're getting at well i would want to figure out what i'm actually clicking on so instead of event listener first let's do a btn add event listener and let's do btn and event listener so now i'm targeting the exact button each and every time as i'm looking through there right and now i would want to hatch attach a click event so for all of them we would attach the click event and here we're going to write a callback function which will fire as the click event happens so if we're going to click on any of these card icons then the event is going to fire and the callback function is going to be the call so here let's do a code block and now let's decide what we're working on now we passed in here the event as the object because we were going to use this to traverse it down and let's start very simple let's do console.log and let's do event target now we have the event object and we also have the property of target now the property of target is going to let us know what element we're clicking on so once i save it and once i'm going to go back in smaller screen notice if i click it you see that i'm clicking on the i which would be the font awesome icon however i also have the option of clicking on the span of the store item icon and what we would want to do is we would want to set up that we are reading only when we're clicking on the actual icon on the little font awesome icon over here because it's going to be easier for us to set up the if statement that way because we only need to care about one thing now once we know this we know that if i would want to set up for the icon i would need to somehow check that the event target has the parent element that has this class so we know that we have the event target however also we can use the property of parent element which is going to look for a parent element and then we're going to look for the parent element that has the class of store item icon so that way i'm just making sure that only the event fires if i click on the actual card icon instead of somewhere here in the span so let's do again the event target and then maybe let's comment it out so we still have it just in case we want to look at it and then let's do an if statement and then like i said we're going to target event target so whatever element we're clicking on then we're looking for a parent element and we're making sure that this parent element has a class list of store item icon so again this way we're making sure that the event fires only once we click it on the icon so the class list we're going to be looking for the class over here now we can either grab it from here or we can just write it so let's write a parenthesis and we have store item and icon so now we're going to be firing the event only if we're clicking on the icon now once we have selected the icon now the interesting part starts and like i said this is going to be a little bit a long way but this will going to make us practice a traversing to them so first things first again let's start looking what we would need well i would need to get somehow the source of the image that i have right now so if we're going to go back to index.html we notice that i have my span so this pan has the phantasm icon now the next element right next to the span is going to be the image so then we need to start traversing the dom where once we click the icon then we would want to look for a parent element and then we would want to look for previous elements sibling so then we're looking for the sibling what is in the dom because if you notice the image and the span are both children of image container the image container has two children and once we know that we can select the parent element of my phantasm icon i know that i can select a previous element sibling which would be sibling right next to it and previous is obviously because this is the first child and this is the second one and then we can select the source but it's going to be maybe a little bit easier if we do a console log that way we can see everything that we're doing so let me do again a log now within this console.log we're going to do event then we're going to have a target so whatever we're clicking on then we're going to have a parent element and then let's have a look what we have in the parent element so let's save this once i click on the icon notice that it says well parent element class list is not actually defined so let's go back over here and let's figure out where is the problem now the problem is that we have a class list but we need to make sure that this class list contains so we're using a property of classlist and then we're checking with a contains so my apologies i had a little little bug so once i click it and again it says contains is not a function and over here again the problem is because i misspelled it so the name actually is contains and hopefully with a third time this is going to be the charm and sure enough now i'm getting back the span so now i'm getting back to span however i know that there is a sibling for this pen which would be the image now let me show you by attaching one more time the property of parent element and now let's see what we have so we click the icon and then you notice i'm getting the image container and the reason for that is this is a parent container for our span so once i open it up notice i have the image and i have the span now i know how to get to the span using event target parent element now i would need to decide how i can get to this image and grab the source so let's do a previous element sibling which would be another property so previous previous let me make sure that i'm actually spelling this correctly because this is not going to work if it's not written correctly so element and then we're going to have sibling so this would be a property name and here since i know that this is the image all right right away can do a source now maybe let's before we do the source let me just check that this property is written correctly and once we click it we have you see we have the image so this would be previous element sibling now like i said i would be interested in the source so let me click a source and i should be getting back the source so once we click it we should have the undefined because obviously again very clever from my part and let me save this and let me click it and sure enough now i'm getting back to source so if i'm going to scroll down let's say the suite item again run it and this is showing us the sweets too so we know we're getting back the different source so now i would want to set it up equal to some kind of element so some kind of variable so first let's say that this is going to be let and we're going to call this full path so this is going to be my variable let me delete the parentheses over here because now i'm just setting equal to whatever getting back to a full path now once we have the full path there is a little bit of an issue because you notice i'm going to open up a sidebar i have the image but i have the image card what is the reason for this image card well you see when we're going to be opening up the cart i have a smaller images i have images that are only 50x50 there's no point for me to grab this massive image and place it in the card so i have two sets of images one is going to be the big image that's showing within my items and the second one is the small one that's displayed in the card so this full path right now is not good enough for me i would need only the part where it says what kind of image it is in here because i'm going to change this first part you notice i have sweets too and cupcake one this is what i'm interested so let me close the sidebar and let me start manipulating with a string that i have back so here let's set up a new variable and i'm going to call this position and now i'm going to use the variable that i have for the full path and i'm going to find the position of the image of this string of image so i'm going to have a full path this would be the name of my string then i'm going to use the index of a method and this method is going to help me to find what is the position of the image so if i'm going to go back and if i'm going to say image now i should be getting back the image so let's do again a console log just so we can always see what is happening so if i'm going to go back and click it on the item i should be getting back a 22. so i know that in the full path i'm getting back the index of 22. so index of image is going to be 22. now i'm going to use another method which would be slice so here we're going to use the image that we're getting back and we would be slicing however before we slice the idea is that i would want to take off all the text that is including the image and before the image because if you remember the full path and maybe again let's comment this out just so it's a little bit easier to see so if we're going to go back refresh the page and once i click it you notice i would want to do a slice which would be a method that i can use on a string and i would want to take off all this text starting from this forward slash so i want to take everything off and then i'm going to switch this instead of image you notice that if we have a cart image this is the folder that i would want to set it up for so image card now if we see in the index.html right now we're having image suites one now in this case we're just going to flip it so in the cart it's going to be image cart instead of this folder so let's go back again to app.js and let's change this and the reason why i added three these three characters because this image is three strings long so this string is three characters long so since i would wanna remove everything then in this case i know that i'm just gonna use these three characters so i'm adding them over here and once we have the position now let's do the slice method and we're going to have the slice method of partial path so we're going to name another variable so partial path and we're going to set it equal to again a full path this time then we're going to use the slice and a slice would need a index so where we would want to start removing and then the second parameter is how many characters however if i don't add any characters i'm going to be taking off everything till the end of the string so i think it's going to be a little bit easier to show you so let's do again partial path and now let's have it as a console log and partial path just so we can see for sure what's happening now once again we can't log it if i click it i should be getting back the image now here it says partial path is not defined and here you can see that i added h so let me fix that and now everything should be working so once i click it notice i'm only getting back the sweets or i'm only getting back the kick now again the point for this number of three was if i would remove it notice what would happen so i'm going to save it and now once we again refresh and once we click notice i'm getting back the image so i'm getting the index of the position and i can still do the slice however i'm including the image but since i'm going to use the image cart folder then in this case i would want to get rid of the image also so it's going to add again three and then i'm just going to be getting the name of the image that i have so let me close the sidebar and now we have the full path well the partial path after we have gotten a full path now over here again let's just delete this console log because we have been console logging and then now let's set up a object that we're going to be placing in my card because if we're going to go back and if we notice in the card i have the image which we just got the image so we we good with an image however also i have the cart name and here we'll have a price so i'm going to set up a object that's going to hold all these values so first let's just call this item and we're going to set it up to a empty object so the object literal syntax would be just a curly braces and once we create a object with a object literal we're just going to add a properties to it now obviously we can write the properties right away as we're making this object literal but since there is no right or wrong way of doing it we can just add the properties later so in our case we're just going to have the properties later now i'm going to call my first property an image now this image is going to be equal to a template string then i'm going to use the folder where i'm be getting the images from and now i'm going to use again the variable since i'm using a template string we're going to use a dollar sign and then we're going to look for this partial path because this is going to be the image that we're getting back each and every time on a different icon where we're clicking so here let's do a partial and we're going to call this path now again just to make sure that everything is working correctly let's do a console log only in this case let's do the item since there's going to be other things that we're going to be looking at so let me save it and once we're going to click on the cart notice i'm getting the image and now this would be the path that i'm looking for so we flipped around with an image now we have the image card now image would be one thing now next i would be looking for a element the name and then over here for the price and again we're going to have to do a little bit of dom traversing to get there so here we have the console.log item and let's just keep this item because we're going to be adding the properties later on anyway so we might as well have it right now so let's have it first as a name and we're going to set it equal to let name now name is going to be equal to what well first we're going to start again with a event target then we're going to have the parent element so we're first looking for a parent element which would be what which would be spam so we have a parent element then we're going to look for another parent element so we're going to have another parent element and then we're going to have a next element sibling and let me show you why we're doing it this way so we have a another parent element and then we'll have a next element sibling sibling over here and for now let's just put a semicolon and let's cancel luggage so we can see again what's happening so we have the name and if i'm going to click it notice what i'm getting back so here i'm getting back the card body now what is in the card body well in the card body we have the name and the dollar sign so if we're going to go back to index html notice what happened so we started traversing from the font awesome icon then we got to the span which was the parent element then we got to a parent element which was image container now the image container is a child of the card now the card has also a child of card body so i have two of them i have image container and card body so the same way how previously we were looking for the image we used instead of previous element sibling now we're using next element sibling so now i got a hold of this card body now in the card body again we're going to be looking for children because this text is sitting where it is sitting within the first child so we're going to be looking for a children and then within a first child we also have the first child of cupcake item so store item name and like i said let me repeat this is why we would use a different way when we're doing this normally but again this is a project on javascript dom so we'll have to traverse it down so like i said now we have next element sibling then we're going to be looking for a children now children is going to return in our case an array and i know that this is going to be the first child well in fact this is going to be the only chat we're still going to have a note list so in this case let's do zero so now we're selecting the card text and then since this card text also has a child we're looking for a first child notice over here the cupcake item so let's do a dot then again let's do children and then let's have it as a zero and here let's set it equal to text content so that text text content now the text content should return us the property now if everything goes correctly i'm going to save it and let's notice what we have so if i'm going to click it what do i have i have the cupcake item then if we're going to scroll down again we're going to have the donut item so i'm getting back the name so everything is working fine now what's left well i would want to set up again the item dot name so the property and i would add it i would want to add it to the item so again let me do the same way where we have the item and then we're going to have the name so item name this would be the property and we're going to set it equal to name so both of the properties now once we cancel log the item and maybe we can just comment out a log of name once we click it sure enough now we have not only the image card we also have the name now after that there's going to be the price which is going to have a very very very similar way so we can might as well copy and paste it now the only difference we're going to be changing the children because remember this card body had first a child and then let me maybe show you in the index.html notice we had card body which we got with a next sibling then we went to children which would be the first child with the a index of zero and then since we're looking for a text with a children zero so first child of card text then we were gonna look here for a children one so this would be the second in the note list and therefore we're gonna access it with the children one so let's go back and let me just change this so let me grab this let me just copy and paste this however let's change around a little bit and here first of all this is going to be the price so we're going to be looking for a price and second we're not going to be looking for children one we're going to be looking for a second child so we're going to flip this around and let's do again a council log just so we can see what's happening and let's council lock the price so again scroll down maybe to a different item and let's see what we have so far so as i click it now i'm getting back the value of 15. so if i'm going to go somewhere where's 10 again let's click and here we're going to have it 10. so we know that everything is working however we have this dollar sign over here and also you notice that i have the space now i don't want a space and i wouldn't want a dollar sign so there's a couple of things that i would need to fix around so let's do again maybe let's do another variable now the variable name is going to be final final price so final price and this is going to be equal again to a few methods we can use on the strings well first we're going to be selecting the string so what string we would want well we would want a price string where we have the value of fifteen dollars or ten dollars in our case then we're gonna gonna do again the slice so now we're gonna be slicing now since i know that a dollar sign is going to be the character of zero then the space over here is going to be the character one i would want to use the slice and if i'm saying that starting from the first one so i want to get back everything that i have starting from the index of one now index of one is going to be the space and then i'm going to be getting back to 15. now just to make sure that i have no white spaces also we're going to add another method which would be trim which we're going to remove all the extra white space so instead of price let's console log the final price so final price let's save this let's maybe i don't know scroll up and down somewhere where we have our famous cart and sure enough now i'm getting back to that so now everything is working i have the 10. now the last thing again let's do the same thing where we have the item and instead of a price we're going to have a final price so we can do item then price and the price is going to be equal to a final price so again we can do the same thing where we comment out the final price in the console log and now we're going to be getting back what we have the then item so again let's scroll somewhere where is the first cake we're going to click it now i have the image the name and the price now the price is still going to be the strength but don't worry about it we're going to fix it later we don't need to worry about it right now now next on our agenda is going to be creating an element that we're inserting in our cart so notice we have a structure over here and this is the hard coded part but we're going to use this so we have the element we have the name then we have the price and then we have the icon that's going to be used later on not in this tutorial but later on to delete this so let's go back and let's figure out what we're doing well first of all we need to see what's happening well we have the log so log is fine maybe we can just comment it out so it's not in our way and now we would want to create a new item now what kind of item we're going to be creating well if i'm going to go back and i'm going to look in the nav bar where i have my items then i should notice that first i have the card info which was a button and then i'm going to look i have to look for the card now notice here i have the card so we selected the card and this would be the card item now this is the div that we would be creating now we're going to be using a template string so we don't have to recreate everything that's the good thing of coding this in the html that now with the template strings we can just reuse a lot of things and just change the values over here but i would first need to create that div so let me go back in the app.js and let me first create a div so const then we're going to have cart item so this would be the name of our item and we're going to do a document create element so we're going to be creating an element and we're going to be creating a div now since you noticed that within a div i have what i have few of the classes over here so first let me just grab this whole div with a whole comments and everything now we're going to be deleting them later but for now we should just have it and here let's do a template string so let's set it up over here like a template string and then let me just copy and paste this because we will going to be reusing this so now like i said i have the div i'm going to be creating a class list so i'm going to select the same thing card item then we're going to use a class list since i would want to add these classes because even though i'm creating a div i still want to add these classes now for the class list we can just rewrite the same thing so if i would want a cart item let me write over here that i would want card item then we can do comma then the next one is going to be d flex and after that we're going to have a justify content and between them i'm just making sure that i'm not misspelling something because it's going to be painful to look for mistakes text capitalize and as you already know if you're watching my tutorials i'm quite infamous for making mistakes like that with a misspelling and the last one is going to be my3 so these are the classes that we're adding now again like i said we were going to be using template strings ourselves so we don't need to retype everything i can just delete these comments because i don't need them in the template string and now i can just use a inner html and i can set this to to the inner html so first let me close this and now i can say that i would want for the cart item and i would want to set it to in inner html so we're going to have the dot of inner html and we're going to set it equal to the same template string so again maybe let me just save this so that way it's going to be a little bit better formatted so notice now i created a card item i added all the classes that i had in my div they already hard coded in my html and next i just use dnr html and everything that was already in my html i just applied in my app.js because i can use the template string i can directly place whatever html i have so now the last thing that i would want is just change the values because obviously i don't want the hardcoded values we're going to have a dollar sign then remember the item that we created the object that's holding all the values every time that's changing as we're clicking on a different item now we're going to use that item so first we're going to do item image since we're looking for the image then we're going to look for the name so where's the name so here's the price and we should have somewhere a name so we have again i cannot find it name for some reason okay because it's sitting so sneakily over here so let's delete this and again let's use a dollar sign in this case let's do item and this would be the item name and the last one is going to be the item price so again dollar sign and we're going to be targeting the item and the price so now we have created this car item now the last thing that's left is to target the cart remember we have the card so the items are sitting within the card and then i would want to insert this in the card however we're not going to do the up end and the reason for that is notice i have the item i have the item and then i have the total so if we're going to use the method of appending the child then these items are going to be somewhere here in the bottom so instead we need to use the insert before so let's go back again and let's figure out what we have so we have the app.js and like i said we have the inner html now once we're done with the inner html maybe let's do a comma where we have a select cart and now we would want to select the card so let's create a variable this is going to be cart document get element by id the id is going to be the cart then we're going to have another variable with a name of total so we're going to have const total and here we're going to use a query selector so document query selector and then the the i the id no not the id the class is going to be cart total container and i'm going to show you in a second where i'm getting this from container and once i have selected like i said we're going to use the method of insert before so we're going to use cart since we're selecting the cart then the method name is going to be insert before so let's go down and let's use insert before now insert before is going to use two parameters first is going to be what item we would want to insert so we would want to insert the cart item and then we would want to say where we would want to insert before which item so here we're going to use the total now let me save this and let me show you where i'm getting back to total now if i'm going to go down we have the card item card item now notice we have the card total so the point of this i want to insert before the card total so the card total is going to be all the way in the bottom now maybe the last thing just to show the customer that everything has happened correctly we can just do add the alert now obviously we could probably name something here better within the html it would be nicer if we would have some kind of element showing up over here but for the sake of this exercise let's just do alert and if some of you are annoyed by alert you can obviously go ahead and create your own element over here and show it and let's do item added to the cart so we're just going to use one of those alert boxes so if everything works correctly if we're going to go back we will going to have items in our cart so let's go back let's refresh and let's scroll down so we're going to have a suite item now the suite item has the cart now once i click it something is wrong something is not working because i don't have my alert so again let's figure out where is an issue so either we're targeting something wrong or there is some kind of mistake somewhere so again let's check it out what we have in the console and let's check it out on the smaller screen because and here it says cart item class list is not a function so let's figure out where we have the issue so we have a cart item class list and this is not a function and here instead of class list we'll just need to have add so again my apologies we have the classlist property and then i'm going to be using the method of add so we would want to add these classes over here and you see this is the nice thing about consoling log so we know for sure what we're getting back because we can do all this code and then start scrambling for the answers where is an issue so again my apologies i should have added a method of add and then here the para parameters are all the classes that we're adding to the card item so let's go back let's refresh and hopefully everything works fine this time so once i click it it says the item has been added to the cart okay let's scroll down let's maybe do the sweets again let's click it it says that it's added to the card now let's scroll up and the moment of truth sure enough we have the sweet item which was five bucks and then we have the another sweet item which was 15. well that'd be a little bit suspicious so again maybe let's do a cake maybe let's do not another cake maybe let's do a doughnut this time so now i have all these items so let's go up and everything is working fine so once we have figured out how to work within items there's one more thing that we would want and we would want to display what is the total so the money total that we have and then we would want to display how many items we have over here so let's go back again to our app.js let's scroll down and after the alert let's call this function let's say that this function's name is going to be show totals however i'm not going to write this function right now i'm not going to write it within this event listener so here we're just going to call this function once we have added the items however we're going to go all the way in the bottom so still within our immediately invoked function expression however all the way in the bottom so after the event listener and let's write the function so let's write that we would want to add totals so show totals and let's maybe start very simple let's say it has a function then show totals and let's just cancel log and just for sure we know that everything is working because again we don't want to spend another 10 minutes writing something and then scrambling for the answers so hello and once we save it if everything is correct we should have a console log of hello so once we open it up and it says the alert you see the alert runs we're adding item to the card and here would be hello so now we know that we have the function so now we just need to figure out the functionality of the function then let's start first by creating an array that's going to hold the total of my values and how we're going to do this well we're going to set up again a query selector hall so i'm going to be looking for all these prices you notice i have the price price and all these prices now we will going to be still counting whatever we hardcoded over here because this just makes sense now obviously if you want you can just go ahead and delete them for now since you already have all the items you have all the structure and everything but we're going to be still counting them so each and every time we're going to be still counting them now we're not going to count them as we refresh the page because we haven't set up anything in the local storage but as we add the item we're all going to be getting the correct total and the way we're going to do this we're going to create an empty array then we're going to select all these prices and then we're going to loop through them and then we're going to add them to an array and then we're going to use the reduce function to get one value and then we're going to do the same thing for this value so let's go back again and let's like i said first create an empty array so const total now this is going to be empty over here but it's going to be an array then let's look for the items so the items and the items like i said is going to be document then here we're going to be looking for a query selector all since there's going to be more than one we know that we might be getting i don't know 20 values and the class name is going to be cart item price now again let me show you where we're getting back and let me make sure that i have the dot so that way i know that everything is working so let's save this let's look at index.html notice we have the id of card item price and the class notice this is the item and here this would be the price so we're using the query selector all to get all the prices so let's go back to the app.js now once i have the items then i would want to loop through them so items for each so as i'm looping in the callback function we're going to write what we would want to do with each and every item so the item is going to be passed as a parameter and now we're going to say total so the array that we have and we can use the push method and we can add the item text content now why we're getting the text content because the text content is going to be holding the value now obviously this is the hardcoded value as we're inserting them with our own javascript this is that happening dynamically so i cannot show you right now you can just see it here so this is what we're looking for now let's go back but the problem is that this is a text value whatever we're getting back from text one content is going to be the string so we also would need to use a method of parse float which is going to take a string and set it as a math operation basically it's going to set it as a number now first let's do text item text content that we're getting back on and let's just cancel log it just so you can see that what i'm saying makes sense so log and let's do total just so we can see what we have in a total so once i'm going to refresh it if we'll scroll down and once again click on the item we're going to say you see we have 1099 1099 so hard coded values and the value that we added but you notice we have quotation marks so it is a string so now let's do a parsed float so that way we're making sure that this is going to be the number so parse and float and since this is a method we're going to add this item context content in parentheses and now in our case if we're going to scroll down again we're going to look for the value i'm going to click it again we're going to add it and now we have the numbers so this is what we want so everything is working correctly now here we can again maybe comment out a total and let's keep on working now let's get a total money so let's do a cons so new variable total money now for the total money this is going to be equal to a total so the name of our array and we're going to have it as a total reduce and we're going to use the reduce function now for the i'm sorry method so for the reduced method we are looking for a callback function this is going to be called however the reduce method callback function requires two parameters so the first one is going to be the total or accumulator and the second one is going to be the current or in our case it's going to be the item so the total is going to be what we are returning at the end of the reduce and the item is each and every item as we're looping through because even though this is a reduce we're still looping through all the items that we have in total so let's go back and let's just add a curly braces and remember that with a reduce we need to have an initial value so since i'm going to be using numbers we're going to set it as a 0. now what we're going to write in a cold block well first we always need to remember that we need to return the total otherwise we're not going to get our accumulated value and once we have returned a total now let's just do what we're doing each and every time as we're looping through well it's going to be very simple we're going to say total so total whatever we have and just plus equals so we're adding we're not rewriting each time and then we're just going to say item and then once we have the total money again we can just find out what is happening so in our case let's do a console log and let's call this total money since this is a name of our variable and notice that something is wrong i have one mon i not money so let's save this and if everything is working correctly let's add one value and let's add another value i'm getting the totals however there is an issue you notice we're using the floats and using the floats is nice we could have used the parse integer and then we wouldn't get these however let's imagine that whatever store we're going to be using they're all going to be using some kind of sense not every store is going to have the even numbers so we could have used the parse int instead of float but it is better if we're using the flow i purposely use the float now we need to fix this somehow we don't want to show in a card these kind of ridiculous numbers and the way we do that and again we're going to do the new variable so const final money and we're going to set it equal to a total money so the variable that we have right now and we're going to use another method and the method is going to be 2 fixed now for the fixed we need to pass the parameter so how many numbers after the dot so in my case i'm going to use two and then we just can do instead of total money let's have it as a final money let's save this and now let's add again a few items over here let's add one to the card and notice i have 31.98 instead of these ridiculous 10 numbers behind the dot and now we have 36. so everything is working now the last thing what's left is just insert these values so if i'm going to go back what i'm trying it to do is insert the value over here in the total and insert the value on the top and we're also going to use the items and here this is going to be very simple we're just going to get the length of an array so it's going to see how many items we have and then these would be the items that are displayed now let's go back and let's just target these and then once we have targeted them we just would want to insert the final money so here it's going to be very simple let's do a document and there's going to be document by id document query selector and another id so let's last thing document get element by id now i'm looking for the cart total and i'm going to show you all these values right now let's just type them first and then we're going to see where they're at so text content is going to be equal to a final money so the final money i would want to show like i said we're going to copy and paste this because a lot of things are going to be the same then we can do the item count so this is going to be another id that we're looking for and here the text content we're just going to use like i said the array length so if we want to show how many items we have the only thing we need to show we we know that we have the array that's holding all the values so let's do total length since i know that this is going to be referencing how many items i have the an array and last thing the final money text content however here we're going to be looking for item total so the class of item total and since i'm using the class i would need to change this to query selector and now let's go in the index.html i'm going to show you where i'm getting all this let me just show let me just fix this query selector let's save this now if we're going to go back to index.html now first things first let's scroll down to a total so card total so what i'm looking for you notice i have a clear card and a checkout however the cart total is the one that's holding the total so this is why in app.js we were targeting the element by a d of cartoon now the second one is going to be where we go up and this is going to be the info so again we're going to scroll somewhere this would be the cart we are too low notice we have the cart info and then again we have the item total and like i said this would be the class this why we have the class and therefore we're using the id now let me see item total i'm using the class so everything is correct however for the item count there has to be an id so let me just check that it is id so item count item yeah the id is item count so now we know where we're getting all the values now the last thing is just to go and refresh and hopefully everything works fine like i said these are hardcoded values now obviously we would be probably putting zero and zero but i just wanted to put something like two items in 1049 or whatever now let's scroll down and again let's maybe add like six items just so we know that everything is working correct another this guy another this guy and let's do another this guy now everything is working fine let's go up and sure enough we have the value of 56. do we have six items yes we do so one two three four five six and i'm not gonna take my calculator out but i think that this should be a correct value if not obviously correct me