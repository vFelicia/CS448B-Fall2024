there are a few different ways to copy or clone an array let's look at some here we start with this original array true true undefined false null these are all items in the array so the a common way to copy arrays is with the slice method now the slice method is usually used to break AP part an array into two different parts but we can also use it to copy an entire array just that will copy the entire array and you can also use use the spread operator to copy an array and that just copied the array again these three dots are the spread operator and that just spreads out this original array into wherever we're putting it so it's going to spread out the original array into the new array let's do a test here to see if that worked and you can see there's I just logged it's going to log the C copy one and it's going to log copy two and both of them are the same as the original copy now this does not always work if you have an array or an object within your array uh whenever you have an array or an object in your array you need to do deep copying let me show you an example now in this array there's an array within the array so you can see there's the two sets of brackets each array only has one item so in one array there's the item free code camp in the other array is the array that has the item free Cod Camp so if we just try the normal method of coping if we just use slice here now we're going to actually try to modify that shallow copi it we went to the array at index zero which is the first array so I'm trying to push something on to that first array within the array I'm trying to push is great so let's console.log then and see what happens huh well look at this I loged the Deep array and I loged the shallow copy array and so the Deep array free Cod Camp the shallow copy should actually uh be a completely other array because we've copied it into a shallow copy and then we're just going to push is great to the shallow copy just so you know we are just logging the index zero so we're we're not trying to log the whole array we're just trying to log the array within the array that's why we put index zero here but after adding is great it's actually if you see this up here it's adding is great to the Deep array and the shallow copy you can see that it's Lo both of them are the same now the reason for that is because anytime you have an array within an array in JavaScript or if you have an object within an array in JavaScript in the original array is just a pointer to an array or a pointer to an object inside that original array so when we are doing a copy of the array we're just copying the pointers to this original array so when we push is great we're not pushing is great to the shall copy directly we're pushing is great to the pointer to the other array and since both of them are pointing to the same second array it's going to add the is great to to basically both copies the Deep array and the shallow copy if you have an array that has other arrays or other objects within the array you really need to do a deep copy if you want to make sure everything's copied as you would expect so let me show you how to do that some people have fancy for loops and and a lot of code to do it but there is actually a trick it's a secret way that makes it a lot easier let me show you that so so this is it um so basically we're going to pass in this deep array to the json. string IFI method and this is going to create a string of the whole array including arrays within the array and objects within the array and then we're going to call the json.parse method which is going to convert this string back into a JavaScript object or a JavaScript array and then we're going to assign the whole thing to that deep copy variable let's try what we did before I'm just going to copy this code up here we're going to CH change shallow copy to deep copy we're going to push is great we're going to console that log deep array and deep copy and just to make this more clear I'm going to take this out and take this out and now let's run that okay now it behaves how you would expect it to behave in a copy so we're going to console.log the array within the Deep array and then the array within the Deep copy and the first one is going to be free code camp and then because we push the is great the second one is going to be free code Camp is great well that was a few ways to copy a raise thanks for watching my name is Bo KS don't forget to subscribe and remember use your code for good