hello free code campers my name is jennifer bland i have created for you a series of videos that will help you get your very first job as a developer these videos cover a process that's called the whiteboard exercise this is an exercise that you will experience when interviewing for a job as a developer it's where a company will evaluate your skill sets and your abilities to determine whether or not to hire you for that open position i've shown you exact questions that i have been asked in the past when interviewing for jobs so that you can learn from what i have my experiences and be able to use that to your benefit when you interview for your very first job as a developer i have a series of videos that i've created for you these videos and cover topics such as html they cover css i have several videos on javascript and also videos on jquery these will help you as you start to interview for your very first job as a developer if you have any questions or if you need to reach out to me my website is www.jenniferbland.com hopefully these movies these movies will be beneficial to you and will help you get your very first job as a developer thank you very much for watching write a function that takes a string as parameter and returns the frequency of each letter of the alphabet that's found in that string okay that might be a question that you might be asked in a white boarding exercising always when you're doing a whiteboard exercising ask questions to potential employers so that you understand exactly what they're expecting from you and what you actually want to bring to the table in terms of the functionality of your functions you're going to create so one of the first questions that i might ask is okay if you're given a string what about case is case important is an uppercase a counted as 1 and a lowercase a counted as 1 for the lowercase or is that counted as 2 for a since they're both a's and it doesn't matter if it's uppercase and lowercase so that would be one of the first questions that i would ask so i'm just going to show you how to handle this whether they ask you to treat uppercase or lowercase either the same or as separate letters so let's get started and let's start working on our function that we're going to be creating for this potential employer so we're going to start off we're going to create a function and i'm just going to call my function count and my function very simple is called count and it's going to have the string as the input that they are giving me um and what they want to do is to go through and look through every character that's in the string and get count the number of times that that letter appears in the string and it returns that information out of the function so the first thing that i want to do is well what about case is case important to you at all and you need to find out if it is or not so let's say that case isn't important um an uppercase a and a lowercase a are treated exactly the same so what we can do is the first thing we can do is we can take our string and we're going to convert our string to lower case so that makes everything in the string all lowercase so anything that was previously uppercase will now be lowercase and therefore we can actually be able to count what was previously in uppercase a as a lower and a lowercase a as exactly the same since they're now all the same case so that's the first thing that i want to do now i need something some type of container to to hold the count of each individual characters so one of the things that you can use is you can use a number you can use an array if you want or you can use an object in this case i'm going to actually solve this by using an object so i need to define my object that i'm going to use so i'm just going to create an object so i have an empty object right here and that's going to have my count that's going to be returned back out of this function so the next thing that i need to do is loop through every single character that's found in that string so i will need a for loop all right so now i have a for loop this will will go through every single character that's found in that string um and what i'm going to do is actually put that into my object now what i can do is in order to do a account i'm going to take advantage of the functionality that's built into an object in javascript an object is basically a key value pair what i'm going to use as a key is the letter the value is the count of how many times that letter has appeared within that string so that's what i'm going to be using so what i'm going to do is i'm going to first check to see if that character is in my object that i'm going to be using as my placeholder so if if i'm going to check so what this will do this will either return um the um the actual character if it's in the object right now and if not this will actually return is undefined because it doesn't exist in the object itself so what i want to do is if it doesn't exist then what i want to do is go through and add it to the object if it does exist in this case this is asking does it exist and if it does exist then i want to increase that value in that key value pair by one because it now has one more character found in that string so in order to do that what i can do is i come in and i basically take the the current character which is found in this key and i'm going to and set its value to its current value plus one so therefore i'm going to basically increase it by one all right then i'm going to have an else in here and this is if the obj if the character doesn't currently exist in my object placeholder so i'm going to now add it in there and i'm going to set its value to 1 because it's the first time that this character exists so what i have is i can put object all right so now what i've done is i've gone in and i've added that letter to my placeholder object and i've set its value equal to one and it will go through and it will loop through everything that's in there now the last requirement that the potential employer asked me when they asked me to write this function was to actually go through and return the count of each letter that's found within the string so the last thing that i want to do in my function is i actually want to return my object and therefore i've gone through and i've given them everything that they've asked me to do so when you're going through this is something that you might have asked as part of a coding challenge and this is how you would actually go through and resolve that that coding challenge now when you start looking at this there are couple of things that you can actually do to this to make it a little bit better make it run a little bit um cleaner and so forth that comes in there so one of the other things that you might ask is well what if the string has spaces in it what if it has a period at the end of a sentence what if it has a question mark or an exclamation mark or numbers that are in there what do i want to do in that case um and you you need to ask that question and it's something that you should ask because it tells the potential employer that you're thinking about scenarios that you might encounter in real world applications and that shows them that you have that ability to think about what might happen so that you can account for it within your code so if they come back and they ask you i only want to worry about letters only the letters a through z i don't care about numbers i don't care about punctuation marks i don't care about anything else like that so what we need to do is take our string that we've converted to uppercase and now what we need to do is we actually need to strip out anything that's not a character and so we can actually go in and change this so i'm going to add a line in here and i'm going to use a reg x expression and a regex expression would basically go through it says here's my criteria anything that doesn't match it i'm going to basically strip it out of the string so in my match what i'm going to be looking for is for anything that's not a through z or a through z uppercase and if it's if it's in there i'm going to replace it with quote quotes which basically means it's going to strip it out so if you had a string that was hello apple how are you today and there was an exclamation mark at the end of hello apple and a how are you today there was a question mark at the end and then maybe one two three after the question mark this would basically pull out basically this would go through and pull out all of the spaces the exclamation marks the periods anything that's not a letter and the letter is anything a through z so it's going to remove that so that's one of the first things that i can do as an improvement to the first iteration that i did on my function another thing that i can do is if i look at this if else that's in here um that's you start to see some repetition that you have in here that it's basically taking this it's setting this this key and it's either adding an one to the current value or setting the value to equal to one where you can actually take that and combine that into a single statement using a ternary operation so if we come in i'm going to actually erase this if statement and what we're going to do is we can replace that and what we're replacing is object so this is what i'm setting and i'm going to either set it equal to 1 or i'm going to take its current value and increase it by one so i'm going to set it equal to here and i'm going to do a ternary operation where i'm going to do i'm going to check to see if it's currently there and if it is there um if it is true then i'm going to increment so what the ternary operation is going to do is i'm setting this value and what i'm doing is i'm doing a comparison i'm going to check to see if the current letter is in my placeholder object if it is then what i'm going to do is i'm going to take its current value and i'm doing a plus plus on it which means i'm going to increment it by 1. then if it's not there then you have the fault statement and it's going to be setting it equal to 1 so that we actually see that and this information that whole for loop all that if else that was in here can be replaced with this one line um so that we have it in here and then this information gets returned back to you so that is a way of actually going through and implementing a whiteboarding exercise for doing things some of the things that you might also see this implementation of this function in some other variations and some of the other most common variations that you might find on that is instead of returning the the frequency of every character that's found in the string they might ask you to return the character that has the most frequent um iteration in the string itself so what you would do is once you've got everything into your object in here before you do the return that what you're going to have to do is to basically look through that object um and then check to see how many times each each character occurs and you find the one character that has the most occurrences and then you actually return just the character and the amount of times that it actually occurs in there so that's one thing that you would see as a variation um to basically this simple question that you're using in an object another way of asking this variation of this function is it comes back and they might say i'm going to give you a code snippet you tell me if it is correct or not and what their meaning is they're going to give you something in the string that comes in is going to be like programming code kind of like this function and what they want to do is to check to make sure that you have an equal number of like if you have an open parenthesis you have a closing parenthesis if you have a open curly brace you have a closed curly brace open parenthesis close parentheses open square bracket close square bracket and make sure that they all line up evenly on there and the way that they should line up in here i have two sets of brackets this one is open this one's open this is closed and then this is this closes the first one that's in there so you should always have um they should always pair up along that line um so that's one of the things you can compare and the way that you can go in and modify this in your object is you would actually put in if it has braces so you might have one of your keys might be braces and in there you put in all of the open braces that you have curly braces and when you find a closed curly braces you should remove the open one from the object itself so that when i come in here i'm like okay i have a open curly braid i mean open parenthesis so i put that into my object then i'll keep breathing through my my string and then when i get the closed curly brace i will go to my object and if there's an open curly brace in there i remove it from the object and then i'll go along same thing here i'll put an open curly brace in i mean open parentheses in then i'll immediately take it out because i've reached the close and if we were following along in our object our object would have it would have an open parenthesis then it would have nothing in it because now that open parenthesis has been removed it would have an open curly brace and that would be the only thing currently in the object then we come around to this line now our object will have two things in it it would have this open curly brace this open parenthesis when it sees this it's going to remove this open parenthesis from the object leaving nothing but this open curly brace and as you work your way through when you get to the very end of your code you should at the end of the string should have an object that has nothing in it if there's nothing in the object that means that the code snippet is valid so that's one of the things that you can do as a variation for answering this question so hopefully this information will help you out the goal is to help you prepare for your white boarding interview that you're going to have for your software engineering positions and this is how you would actually go about and answer these questions when you're presented with that information previously i have gone through and just did the exercises directly on the board instead i'm going to convert over to my computer and i'm actually going to walk through a series of questions that you might have as part of a whiteboard exercise on html and css here are a series of potential questions that you might be asked as part of your whiteboarding exercise on html and css let's go through each of the questions the first question is to write a css selector to select only the inner two list items in the markup below we have list items for one 2 3 8 3 b and 4 and what they're asking is for us to get a css selector that would only access 3a and 3b there are multiple ways that you can go about doing this so let's go through different ways that you can access just 3a and 3b the first one is to start from the class that we have at the top then we go down to the unordered list and then to the list item itself and that would give us 3a and 3b we can skip the class and just go from the unordered list to the list item to the unordered list and then to the list item itself and that would give us access to it also and then another way of getting access to it would be to go to the list item unordered list and then list item and that tells us to go directly to the children of the unordered list and that would give us three different ways that we can get access to the inner two list items 3a and 3b it's possible that you will be asked a followup question on that and that question number two is to write a css selector to select only the first list item of the two list items in the markup above so what we want to do is to get access to just 3a and not 3b that we were doing previously so we can go through and we can start out with going to the unordered list the list item the unordered list the list item which would have given us both and what we want to do is select the first child which would give us 3a and that is the difference between the first question and the second question all right the third question is what is the difference between an id and a class an id has to be unique it can be assigned to only one dom element at a time a class can be assigned to multiple elements on the dom page in terms of specificity and id will have a higher value than a class because it has to be unique an element can be assigned both an id and a class and an element can also be assigned more than one class that is in general terms the difference between an id and a class the next question is is it possible to change the location of an element on a page via css and the answer is yes we actually have two methods available to us and that is position and float that would give us the ability to look at things on the page the one things that you want to do is explain what is the difference between position and float if you're going to use them both of them take the element out of the page flow position requires a parent element to have a position set to relative or absolute in order for it to work a float requires a parent element to have a clear fix applied overflow hidden applied or to be floated itself in order for it to work question number five what does the box model refer to in css and the answer is it refers to how elements size including its borders margins and padding is calculated question number six is there a way to change the box model and the answer is yes because the default for the box model is content box what content box does is it adds the borders margins and padding to the set width and height of the element to determine its size if you use box sizing border box then for an element its size will take the size the height and width that it's been aside and the borders margins and paddings will be subtracted from that so that the element will fit directly into the height and width that's been specified for that particular item number number seven what is the difference between these three selectors and we have three different css selectors the first one div refers to an element that has um the name of dib and it's assigning its background color to be red the second one is dot div this refers to an element that's been assigned a class called div and it sets its background to blue the last one pound sign div refers to an id and it's setting the background on that element to green number eight given this css what would this html look like when it's rendered and the css that we're given is div span has a color of red and div greater than span has a background of green and what they're asking is do you understand what this background greater than span does compared to just doing div span the first one div span what it does is it refers to any span within a div so here we have a span all work and no play that's contained within a div so this div span would be color red so this text all work and no play would have red text also we have down here a span that's directly inside of div makes jack a dull boy and that would make its color red so this first element this first css would make all of the text in this html to be color red now we have another css that is div greater than span and we set its background to green and what this does is refer to a span that is a direct child of a div in here we have a div a paragraph and a span the span isn't a direct child of the div it's a direct child of the paragraph so this would not apply the bottom one the span is a direct child of the div so this background green would apply and so makes jack a dull boy would be red text and it would have a green background i want you to write a function that will take a string as an input and it will return whether or not that string is a palindrome and if you're not familiar with what a palindrome is a palindrome is a word that's written the same way but forward as it is backwards radar pop because when you think a d a radarradar it's written the same way both forwards and backwards the word hello on the other hand is not a palindrome so what you want to do is write a function that determines if a string is a palindrome once you've been given the exercise by the potential employer always ask questions that allows you to show that you're questioning what is that you want to accomplish how you're going to be able to accomplish it and it provides feedback to the potential employers so if i was given that question one of the first questions i would ask would be what type of return do you want to come out of this function if it's a palindrome do you want me just to give you the string back or give you a empty string if it's not a palindrome or do you want me to return a boolean that would be true or false based on whether or not the word that i've been given as a palindrome so that would be one of the first questions that i would ask and most likely the answer they would be given is that they want the function to return true or false as to whether or not the string is a palindrome so now that i've got some basic information i can start working on my function so what i do is i'll come over here and i'm just going to say i'm going to create a function i'm going to call my function palindrome and it's going to take in one parameter which is a string so now what i have is the beginning of what i'm going to show the potential employment in terms of my um coding skills for solving this this function now there are multiple ways that you can go about solving this function and one of the most common ways that i've see people try to solve it is they will take a for loop and they will loop through each character in the string and they will compare the that first character to the last character in the string and if they're the same they continue on then they compare the next character from the front and from the back and they will see are they the same and then they will keep doing it until they meet in the middle and if they meet at that point and every character matches then you know that you have a palindrome um that's one way of doing it um but i think one of the things that they're really wanting to accomplish and that asking you that interview question is how well do you know the native data types in javascript well a string is a data type one of the native data types that are in javascript another data type that you have is an object a string the native data type on string does not have a method to do a reverse of the string but the an array which is a type of an object in javascript does have a builtin method called reverse that you can use to reverse things well you're thinking well i'm asked to reverse a string not an array but one of the things that you can do is show that you have knowledge of all the primitive data types within javascript and also how you can move between them to be able to accomplish what you want in this function so if you want to use that builtin reverse and not have to rewrite everything by doing a for loop i can use what's given to me natively within javascript on an array and use that reverse function so now i need to figure out how i can get my string and convert it into an array well the string method natively has a method on it that's called split and split will actually convert a string into an array so this is the first step that i'm going to do in my function so i'm going to go in and i'm going to create a new variable i'm just going to call it string2 and i'm going to set it equal to string dot split and the split method actually requires you to put in a parameter into the method that tells it on what it is going to be splitting the actual string itself so i'm using quote quote which basically means after every single letter in the string it's going to split it out into an individual element into the array now that i have it out into an array what i can do is basically now i can reverse it so i can do string two dot reverse so now i have my string is now reversed so it is reversed so now i've got to figure out what do i need to do to convert it from an array back into an extreme and this there is a method that's called join that will actually convert it back into a string so um so i'm going to use the split method i'm going to use the same quote quote that basically says i'm just going to convert it all into a single string with nothing some to separate them out and i now have my string as a reverse so string two now is an exact reverse of string so what i want to do is then compare these and return them so one of the things that i can do is i can just check to see if string is equal to string two and if it is i can return true else i'm going to return false and there i have my function that i have written that will actually go out and compare to see if something is a true palindrome or not now there's some things that i can do to actually make this a little bit better one of the things i can do is i can take my if statement and take all of this code that's down here and i can refactor that and i can refactor it to where it just returns whether or not string is equal to string two so this one line is equivalent to what i had in my if statement before so i make things a little bit easier um because this is going to be either a true or false and that's what i'm going to be returning out of my function now there's also this thing that i can do because in javascript you can actually chain methods together so i can actually take all these three lines and convert them into a single line so i'm going to change this so i have my var and i'm going to have var string 2 is equal to string dot split dot now it's an array so now i'm going to reverse and now i'm going to join it back together so now i have string two in one line where i've converted to array i've built use the builtin reverse function that's built into an array to reverse it and then i've converted back to a string so now string two is an exact reverse and i now can compare it between the two of them to see what's going on so what i can do is as i'm going through and i'm actually working on my function i can actually write it and then completely refactor it and while i'm refactoring it actually explain it to the potential employer so they can follow my thought process so i can tell them why i put this into one line because it's easier because i know everything that i want to do in that string is on one line it's easy to follow it's easy to understand i do a single line of return on it to compare it now another question i might need to ask the potential employer because technically my function as it is written will work there's some problems that this might have on here that you need to ask as part of your interview in your whiteboarding exam and one of the questions that you might need to ask would be well do i need to worry about upper and lower case you know because radar with a capital r is the first letter and then adar technically isn't a paleo drum if you worry about case because a capital r and a lower case r are not equivalent so in that case this would not would fail this would not return as a palindrome because of that case differential that you have in there so you have to ask about that well what about these outliers what about these exceptions that i need to worry about and they're like oh well i don't worry about about case so uppercase r lowercase a d a r would return true as a palindrome just would the lower case r a d a r would return true well if that is the case then i need to convert my original string to lowercase or to uppercase it doesn't matter so that it's consistent so what i can do in here and i'm just going to convert it to lowercase um and so in here i've converted it to lowercase so now that outlier of well what about case does that matter um so that would be a question that you might need to ask on there another thing would be well what do i do if what i'm passed in is an empty string do i need to return true or false for an empty string so you need to ask for that so if you've asked that question so you would need to put in a line up here in the very beginning that would check to test to see if your string is a string or not and that would be another test that you would have would be what if somebody put into um the passed into the function the number one two three well that's not a string so you're not comparing that so might you that would be another thing that you would um basically ask the potential employer what do i need to do if this string isn't a string um so somebody passed me in a number or a boolean or a function or something else how do i account for that so that you need to be able to ask these questions because just writing a simple twoline function yes it does work will it work 100 of the time no is what the employer paying you to do is to write code that's will work 100 of time yes are you meeting that criteria by just putting in two lines and the answer is really no so what i've done is i've put in the thing where i convert it to lowercase to handle um whether or not upper and lower case counts um another thing would be what if um there's pronunciation that's in there like a space do we account for space or do we need to remove um a space that's in there so that would be another question that you have in there if if they tell you to remove all punctuation like a space a comma a period an exclamation mark a question mark before running your test you can do that up here just like you converted it to lower string you can remove all pronoun pronunciation by using a regex expression that takes all pronunciation marks and removes them from the string and then you can then reverse it and compare it so that would be something else that you need to ask the potential employer um you know before you actually you know finish up your your test that that you have on there um so that just gives you some examples of things that are going on on here because basically in asking this very simple question write a function that determines if a string is a palindrome what the employer like i said earlier is basically wanting to see is how well do you know javascript how do well do you know the native data types that are in javascript and the methods that are provided with them we know that there is a reverse that's on an array it's not there on a string so is there a way that i can use that even though i'm originally starting with the string and yes you can by knowing that you can split a string into an array convert it back to a spring and then you can compare them that's in there and as you're going through and you're writing it make sure that you communicate your work as you're going along so that they can understand that and i think it's important to ask questions especially about the outliers about does this case count what if they don't pass me in a string what do i do in that case what if the parameter they pass into me isn't a string what if it's some other data type like a number how do you want me to handle something along that lines you know do i need to remove pronunciation marks so ads start asking questions like that because these are real things that you're going to get in a daytoday environment as a programmer and what you're showing to that potential employer is that when you're faced with those on your day job you're able to handle them successfully and that's what they want in a potential employee i'm going to convert over to my computer and i'm going to give you a series of questions that you might be asked as part of a whiteboard exercising covering the topic of jquery so watch below and i will show you these questions here are a half dozen questions that you might be asked on jquery as part of your whiteboard exercising when interviewing for a developer position so let's go through each of these questions question number one what is the difference between dollar document.ready and window.onload well the main difference is that document.ready is the earliest possible time that you can actually use javascript or jquery to change the dom in your browser the window.onload event actually loads after document.ready document.readyloads as soon as the html is loaded but not when all of the content has been loaded on the page window.low on load occurs later and it mainly occurs when things like the images that have have already been loaded on the page itself with window.onload you're limited to only being able to attach one listener to it but you can attach as many as you want to the dollar document.ready method so that is the difference between document.ready and window.onload number two can you delay the execution of dollar document dot ready and the answer is yes you can the jquery dot hold ready where you pass in the hold to the method will hold or release execution of jquery's ready event the in order to make this work this method must be called very early in the document so what i recommend doing is that you put it in the head of your html and you should put it as the very first line after your script tag which loads jquery if you happen to call this method after the ready event has already fired then it will have no effect that's why you want to load it early on um so that you can actually pause the execution of the dollar document.ready number three what is the difference between jquery's detach hide and remove functions well let's take them one at a time the hide function sets the element's css display property to none so it's still there but you just can't see it the remove function actually removes it from the dom so it's no longer there at all detach is kind of like remove it removes it from the dom but it keeps all the stored data and events associated with the the matched elements you can actually reinsert an item that was detached into the dom and the way that you do that is that when you detach an element you actually assign it to a variable then when you want to reattach it then you can take that variable and then just like append it back into the body or someplace else so that it's now available and that's the difference between the detach hide and remove functions so question number four what is the difference between jquery's ajax get and post functions or methods and the main difference is the jquery ajax that is kind of the umbrella um method that is that is used the dollar get and the dollar post are subsets of the ajax method itself the biggest difference between the implementation standpoint between those two is that you pass an object into jquery's ajax method in order to get all the necessary parameters that you need to make that call but for the dot get and the dot post method you actually pass in arguments and not an object and that is the big difference between those three the next question number five what is the difference between dot get and dot post the dot get method has data that's encoded in the url by the browser and it's visible in the url and it's stored also in the web history the dot post uses name value pairs submitted in the body that is being sent and it's part of the http request and it cannot be seen in the browser bar so it has a little bit more anonymity to it so that's the main difference between get and dot pose and then the last question is how can we change the class of an element using jquery so jquery actually provides three different methods that we can use to change the class of an element we have the add class method we have the remove class method and we have the toggle class method add class as its name applies is it will actually add a class to an element remove class will remove the class from the element and type class what it does is is a combination of add and remove class working together you give it the name of the class if the element doesn't have the class it will add it to the element if the element does have the class then it removes it from the element and that is the three different ways that you can add a class to an element in jquery hopefully these um these episodes have been um beneficial to you if they are feel free to leave a comment below feel free to to like this um video share it with your friends my name again is jennifer bland my website is jenniferbland.com thank you very much for watching