hey this is steve with dabble lab welcome to uh where are we day three of five on the live stream for building alexa skills for uh for anybody that was here uh the first couple of days welcome back for anybody who's new welcome we are going today to let me uh over here we're going to first we're going to just start with a a recap of what we talked about yesterday where am i uh here we go so um quick recap yesterday we uh we did an intro to the alexa skills kit cli and we also looked at the alexa skills kit sdk 2.0 2.0 and we talked to okay and we talked about um coding intent handlers and uh we created a couple of handlers in our example application that we started building which is our example skill rather which is a skill for free code camp that we're hoping to use as a live example but we'll uh we'll see how it goes and then toward the end of yesterday we started working on wiring up some code to call an external api and specifically what i was trying to do was to get a list of the articles that are posted on the free code camp median site and ran into an issue so we didn't finish that up but that's a good segue into what we're going to do today because we're going to talk about debugging so i'm going to just pick up where i left off yesterday bugs and all and and try to continue on uh from there so today uh we're gonna do a uh an intro to debugging to to start it out and then we're going to um talk about the uh the skill manifest and we're gonna end today with a discussion on beta testing and hopefully uh provide anybody that wants to do this an opportunity to uh to test the skill in test mode on their end and i am also i didn't do this but i meant to set up a github repo for this stuff today uh so i'll uh i'll do that before tomorrow so anybody that wants to uh to pull the code will be able to uh to do that so let's um let's get into let's get into it if uh let me let me go back to where we left off exactly yesterday so if you recall from yesterday if you were on if you if you weren't on let me just walk through what we did quickly yesterday and then i'm going to start with the testing the skill and we're going to get the same error and then i'm going to go through how we would go about debugging that error so yesterday we created uh let's see where we left off was um this recent articles intent handler and uh this is where i was getting the the error so i was trying to use this npm module to uh to pull a json feed from medium and was getting an error uh so let's let's just uh let me just get over back over here and we'll start where we left off so let's see i did um so i'm going to redeploy the lambda function and let's see so alexa open free code camp alexa open free code camp okay hello welcome to the free code camp skill i can tell you about recent medium articles or scheduled live streams what would you like medium articles sorry i can't understand the command let's say again okay so this is the error that we are getting alexa stop and um i'm gonna i can't understand the command please say again alexa stop goodbye so um i want to show you uh a couple of different ways we could do a whole well maybe not a week maybe a week on just debugging and and error working through errors so i'm going to just touch on a couple of the uh the the easiest or the most straightforward ways to go at it so with the the new sdk when an error is thrown like i'm using in this here using uh promises and when an error occurs somewhere in here it triggers this there's like an error handler this error handler down here and by default with this template that we used it just says um this sorry i can't understand the command please try again um what i do sometimes i mean it's just kind of a cheat but while i'm developing you wouldn't want to do this on a live skill but i'll just do something like this and this way i'm going to redeploy the lambda function this way when the error occurs it's going to uh i'm going to be able to hear what the error message was and this can be a quick hack to quickly figure out without digging through the logs what's going on but alexa open free code camp hello welcome to the free code camp skill i can tell you about recent medium articles or scheduled live streams what would you like media articles the error is could not find handler that can handle the request type intent request requested amazon one dot echo api dot request dot one a seventy one sixty two d six a fifty nine d forty six alexa stop so he got that um so let me so that wasn't actually the error that i thought we were getting but let me um let me try something else alexa open free code camp that error just didn't find the utterance i can tell you about recent medium articles or scheduled live streams what would you like medium posts the error is assignment to constant variable okay alexa stop so from that i alexa stop goodbye from that i can i i can guess what the uh the problem is but i want to show you how else you would get to it um so you can go through and look at the logs for the lambda function and you can you can also see in the code here let's see in the error function you see um by default it uh logs to the console and so if you go into your lambda function and then go to monitoring and then from here jump out to the logs and this is loading taking a second while it's loading i'm gonna read some of the comments which ide i'm using the ide i'm using is visual studio code you can go to code.visualstudio.com to grab that it's open source and i like it a lot why does it always say free code camp skill um i'm i'm not sure i understand that question uh can you karthik can you um can you uh try to clarify that let's see okay um back to back to this and i'll come back to that uh so in here a lot of times what i'll do is just go to text because it's easier uh to read but um in here i can see that error that got written out the error handled here and then assignment to constant variable so i've got a an error it's a javascript error i'm trying to reassign a value to a constant so i should have declared the variable with something other than const and um if you're if you're not familiar with uh with with javascript there's actually if you go to um well there's a lot of tutorials on free code camps youtube channel and then i did one also that's sort of in the context of doing alexa development and if you go to youtube.com dabble lab there's a node.js intro to node.js for developing alexa skills and the first video or first or second video i think talks about um variables and so let's go see where that problem is uh so in this handler here yeah so here's the problem so i declared this speech text as a constant and i'm trying to reset the value of that constant down here and that i think is probably what's causing the uh the issue but let's see so right now just um for for testing what i'm doing here is grabbing uh the the very first record so it's an array that comes back of of um posts medium posts and i'm just trying to grab the title from the first one so let's redeploy this and see if that fixes it yeah yeah that's um i i see what you're asking now about why it keeps saying free code camp that's just this here this could be anything yeah in fact you had some um you i'll say phoenix you had some really good suggestions for content tomorrow or yesterday so i think we're gonna grab uh some of those and use them to clean this up in a little bit so let's um let's test this now that that's all deployed so alexa open free code camp sorry i'm not sure about that alexa open free code camp hello welcome to the free code camp skill i can tell you about recent medium articles or scheduled live streams what would you like medium articles how i built a job scraping web app using node.js okay so now it's working now we we got the uh we got the array from medium and we got the first item in the array and we got the title so we'll need to clean this up and respond with something a little more meaningful to the user but we've got at least the um the the bones of the code working so i'm gonna leave that for right now and um transition to i want to try to by the end of the day today and i jumped around in my plan um i recapped what we talked about yesterday but i knew i didn't really get into everything that i want to talk about today so um so today i want to get into like i said debugging which we just started talking about and the skill manifest in beta testing but i'd like to also clean this the skill up a little bit so um it's less uh hacked together and a little more polished so we'll do that today as well um coming back over here the uh the last point i want to make on debugging and this is like super simple uh debugging is you can um debug in the uh uh in the the console through developer.amazon.com also and let me show you that so well actually through the um aws console but i'm going to get the request um i'm going to get the request from inside the alexa developer console let me just grab that real quick and i'll show you here okay so in here and i'm not go although you can test we talked about this on the the first day you can test in here uh but what i'm doing right now is i'm not really going in here to test as much as i'm going in here to uh to get the example of a request and then i'm going to use that to test while my internet is running really slow or something here okay uh so now i didn't get the error here because we fixed it but what i'm what i'm doing is i'm just copying this request json here the other way that i could test is i could go over here to the function and i think i talked about this on the first day actually too so this might be a uh this might be a review but um just in case so uh here in the lambda function you can go test and then paste the json in here and i'm going to create that as a test and then i can run the test here which right now it's going to succeed so no nothing's going wrong but if i change this back and recreate that um that error which was where was it show you the last piece of testing here so okay so i'm redeploying the lambda now but i'm really just redeploying it to recreate that error and like i said i mean there's better ways we could do a whole course on testing than what i'm showing you right now but this is the quickest way to uh to get started with it so so if i run the test now um i get the response back um but i can also go down here and i can see that council log info here so without having to dig through the uh the log files so that's just another way to uh to to quickly um figure out what's going on if you're getting errors as you're doing developing so so three different ways you can go through the the cloud watch log files for the lambda function you can use a simulated test like use an example request or you can the third way in the first way that we talked about is in the error intent handler you can just wire this up to read back the uh the message the error message that's coming you can usually figure out what's going on from that again you don't want to leave that in there when the skill goes live with three different ways to go at it all right any um any questions at this point before i move on let me read real quick here yeah so it looks like karthik's got the questions covered thank you cardig okay all right well let's um let's keep uh let's keep rolling let's keep moving on so the next thing i want to do is um i want to clean this up a little bit we're doing fine on time we're just at 20 minutes into it so we've got got some time yesterday we had um a lot of really good suggestions that you guys provided for some things that we could add to it and i uh tried to make some notes from the uh the log and some of the things that uh some of the ideas that that came back were i think just just clean up the the intro all together so i'm going to use um this was provided by phoenix who's on right now so i think we um want to include this you know something that says what is free code cam and then a lot of these ideas i think we could boil into just sort of faq kind of functionality and so um i think that's probably the way to handle all of the not all of them but most of them some of them though like how many hours of content are on youtube um this one the the answer is variable because that'll be changing so we'll probably want to figure out how to get that from an api if we did that and the multiturn dialogue we're gonna do this uh i am thinking that we will probably get to uh to that on here's here's my plan for the rest of the week so um a day four we'll uh we'll get into using slots and custom slots and and we'll we'll do that in an entity resolution so i'm gonna save the faq adding the faq for tomorrow because i think we can do a whole day on that and then day five um which will be friday this friday will talk about using multiturn dialogues and then also i think talking about saving information to dynamodb is something that we ought to cover and then this certification process if we have the skill ready and it's okay with free code camp maybe we can actually submit it for certification um i thought maybe we could do that today i don't think we're going to be able to do that but what we can do is the beta test and so we'll go through that process right now actually so we talked about debugging the skill manifest is the the next thing that we're gonna talk about right now so in the um in the developer council when we went through this on day one we talked through creating the interaction model and providing all of the skill configuration information through the web browser but all of this can be configured as part of your skill project and it is all of the details are in this file here for the well most of them are the like we talked about the invocation name and the model stuff is is in here but the um the the details for the skill are in here and um the the example that is provided with the default template the greeter template that is uh what we started with um doesn't provide everything that you would need to um to to complete the the submission if you were going to submit it for um certification but the uh i've got that in well actually any one of the if you use one of the templates from skilltemplates.com i've uh we've added those in there so the skill.json so for example um the icon urls uh and i'll just grab these for right now just to show you and we'll also we'll also need just as an example so um in the documentation you can get an example of all of the different options that are available here for the manifest file the configuration stuff or you can use most of what's required at least for custom skills is in actually all of what's required for custom skills is in the startup template examples so you can use those as well and the repo will be on github i i meant to put it out there today for this code but i'll uh i'll definitely have it out by tomorrow um let's see in this privacy and compliance stuff here we need which isn't included i guess for obvious reasons you need your own privacy policy and everything um but uh so now and then of course we would want to go through here and finish up the uh the summary short description and let's say skill for free code camp i'm sure somebody can come up with something better than this and then for the example phrases uh we want to update this too and i'll say would we ask free code camp code camp for recent uh recent medium posts and ask free code camp for what was the other one we were gonna do let's see let's go back to our dialogue notes from yesterday um what the most as free code camp what the most recent videos are and uh yeah then we would want a more detailed description all of this stuff is what is going to show up in the um the public skills store so so when the when a user goes and searches for skills in the alexa companion app or in the skills store they're going to show up here so well let me just grab jeopardy to show you so this is the uh the skill name here you can see and then the example phrases are what's showing up uh here and then the longer description is is this here all right that is what we're setting up in here so once um once this is all uh configured and keywords are in here too so there's there's more than what i'm going to do but just for uh for time today i'm i'm not going to go out and or i'm not going to fill all this out but you would want to before you publish it live but we're going to go ahead and deploy this and this time i'm not going to use the um the dash t because i do want to deploy the changes to the skill and rebuild the interaction model so let me use the full deploy yeah any ideas for what we ought to include in the skill keep those keep those coming out um go through tomorrow and pull out new ideas and we'll try to get as much of this in as we can and that'll be maybe maybe there will be a little bit of time today i don't want to spend time just updating content because i want to save as much time as we can for actually doing uh some some coding stuff but what i'm going to do next is um i'm going to show you how to set up beta testing for a skill and then for anybody that has an echo that would like to uh to beta test this i have a let's see had a um a url to a google form let me grab that real quick and i'll post that in the uh in the comments so if you want to you can just uh provide your uh your email address and i'll invite you to uh to beta test it so that you can test it on your echo if you want to do that okay so now that it's all uh deployed let's go back over here and take a look at the changes okay so we're gonna go over here to certification and in the certification process we're not going to go live yet but what we are going to do is and this has changed just a little bit so this functional test looks new okay so this is uh this is different that isn't what i wanted that isn't what i wanted let me withdraw that what i wanted was the okay that's perfect okay so i'm gonna have to um i'm gonna have to figure out what's going on there alexa open free code camp hello welcome to the free code camp skill i can tell you about recent medium articles or scheduled live streams what would you like median articles the error is assignment to constant variable alexa stop goodbye okay yeah so this is this stuff was set with the manifest in here and used to be that like very recently okay looks like this is letting me with draw it uh let's see hmm um all right we're gonna i'm gonna come back to this because something's changed here it used to be that you could uh send it through beta test and i'm not seeing that now so i need to figure out why so let's um here's our icons came through this time which is good all right i'm going to come back to that let's um let's keep keep going here i'm not sure where that went i'm guessing it's probably been uh probably been moved but i'll have to figure that out um okay the um so i guess we can we've still got time so we're why don't we just go ahead and move into uh some of what i wanted to talk about on day four and we will talk about using uh slots how about we do that all right the distribution tab all right let me actually let me go back to this oh i see i didn't finish this up okay here here's what i was looking for all right so the beta test here is where you would enter your email address as the admin and then down here you would add the email addresses of anybody that you wanted to have as a tester as a beta tester and so the email address that you um that you provide here needs to be an email address that they're using with their amazon echo so it needs to be an amazon account but i will do as an example going to karthik and uh add him but anybody else i'll post uh in the i'll post in the uh the the chat a link like i said to the here we go google form and then if you want to be a beta tester i'll add you to this so there is uh there's the link so anybody that wants to uh get a beta test invite i'll i'll do that after the the stream today but you'll be able to uh enable the skill and you'll just see how that whole process works so if you haven't done it before you'll see what it looks like on the the beta test side of it so that um yeah that thank you ken for that direction i was lost appreciate that okay um yeah we've still got we still got 20 minutes so let's uh let's let's keep going let me look to see if there's any questions for a second and then we will move on okay all right uh yeah let's keep going let's go into let's go into using slots so i'm going to i'm going to use because we've got a lot of what the ideas that we had a lot of the functionality is um kind of faq ish i thought like we could maybe just set up an faq within this skill and actually there is a new uh skill template that we had been working on let's see if it is out there i think it is that has some really similar functionality so i'm going to grab that remember from yesterday ask new template url skill templates dot com slash templates jason and it's this one here this knowledge base starter and this one has this is this is basically an faq skill so um i'll show you the the code and then we'll um grab we'll grab some of the uh the code here and merge it into our free code camp skill um so what uh what's going on here there's two things i want to show you um the model first of all so when we talked quickly day one about um slots i mentioned that slots are kind of parameters so during a uh dialogue between the user and the skill um the oftentimes the um the the intent is going to need information from the user to fulfill whatever it is that you want to do and so um the the information or the parameters that the skill is going to use are called slots and there's basically two different types of slots there's builtin slots and then there's custom slot types so builtin slots actually let me go over here and we're going to do this using the ask cli i'm not going to change anything in here but i'm just going to show you in here so in here we've got our intents and we'll just actually no i said i'm not gonna do that uh uh and then there there's also slots and there's if i create a slot here well let me go down here and choose add that way i won't have to add it so there's two different kinds of slots there's custom slots and then there is builtin slots and the builtin slots there's uh slot types there's a lot of them that that amazon provides that will do things like uh provide you with dates and times and uh and numbers so um if it's a common type of information data that you're trying to get to chances are that there's a slot type for it so you you want to look at what slots are available built in first before you go creating your own and the one that we're going to use for the q a example is going to be a custom one and the reason that we're going to use a custom one is because the we don't know what the the values are that the user is going to provide or what type and so in this knowledge base starter i've got a custom type that is called question values and this is what we're gonna use for uh for our example but let's um let's do this ah let's see okay let's um how can we keep this simple as an example why don't we just why don't we just start with a simple example and then we'll make it more meaningful just to uh just to show you so i'm gonna go into here and i'm gonna create a new handler um called let's see we'll say hello handler just to show the slots and we're going to create a new intent called hello intent and remember we need to when we add a new handler we need to register it so down here or export it and so there's that and now um what else do we want to do here so now what we want to do is we want to set up in our model we want to set up this intent and in that intent we're going to let me copy this we're going to have a slot and we're going to prompt the person for their name so let's do that here we'll call this hello intent and we'll give it some examples utterances and just i'll stub it out first and then we'll put a slot in there get rid of this say hello what is your name and let's build that and push it out and we'll test it oops okay all right well that's building i'm gonna look at the uh the questions if anybody has any questions or thoughts karthik looks like you got them all okay well we'll let that uh let that build here for a second we're how are we doing on time we've got about 10 minutes so that should give us plenty of time okay all right so that's all built so let's um let's test it out just to see if we're getting this uh this hello intent to fire alexa open free code cam sorry i don't know that one alexa open free code camp hello welcome to the free code camp skill i can tell you about recent medium articles or scheduled live streams what would you like hello hello what is your name my name's steve and you can see it's not doing anything now because there's uh no it's not waiting for a response and um it is not got a slot in it so that's what we're going to do now is we're going to add a slot that is going to collect the name and this will be um this will be an example of a we'll use there's one built in for first names and i'm going to use that one for this example so go in here into my model and now i'm going to uh whoops copying the right one okay all right so now i've added a slot and um the slot is named name the parameter so now i can say hello something like hello my name is steve well name like that or hi i'm name or maybe just name like that and what i want to do is well let's oh no let me add the code so what i want to do uh is when the user response um i want to respond with something let's see how i'm going to do this let's go back over here and what i want to do is i want to grab the value of their name so i'm going to get that from the handler input and let's see so um let's get rid of this now and so what's going on here is the uh i'm setting up this variable name slot here and setting it to the value of the um the the the value that's coming over in the json which is in the request that's sent from the alexa service and um i'll i'll show you that in a second here uh and then i'm including that or using that as part of my response back so now i'm just gonna say something like um to test this let's deploy it to test it i'll do something like alexa ask well alexa stop okay i've got a an error here let me go back and fix that all right let that finish deploying and then we'll test it out and i think that is probably as far as we're going to go today but let me know while this is building if anybody has any questions up to this point um um on your question about using uh or generating code through skillinator io i think that's a really good tool i haven't used it in a little while but for creating like just a a an endpoint that you can use for testing i think it's pretty awesome i'm pretty sure it's been updated for the uh the 2.0 sdk but i haven't looked at it recently um i've used it before though with the 1.0 sdk and it was a super helpful tool and there is also i saw a question from somebody yesterday about generating i i tried to find it i'll look again before the course is over but there is a tool out there for um generating like utterance patterns it's uh like a script and i can't i've got the link somewhere i'll find that but um and and post it but there is one out there uh let's see so i think we can try this now we'll see alexa tell free code camp my name is steve hello welcome to the free code camp skill i can tell you about recent medium articles or scheduled live streams what would you like alexa stop goodbye alexa tell free code camp hello my name is steve welcome to the free code camp skill i can tell you about recent medium articles or scheduled live streams what would you like hello my name is steve hello steve it's nice to meet you okay so the the dialogue flow on that's not super smooth we've got to go back and and clean this up so that it makes sense you wouldn't have somebody just going into the launch and uh knowing you know that they could say that their name is steve but we'll we'll clean all of that up and um again i'll push this code out to a github repo tonight so that for anybody that wants it you can get it and tomorrow we're going to uh let's see what we're going to talk about tomorrow we're going to um talk a little bit more about using slots uh just because i kind of crammed it in at the end here and i want to spend a little bit more time on it and um and then we'll get into using custom slots and entity resolution and this is where i'm going to get into the faq functionality and so we'll uh we'll look again at the example in the knowledge base starter and then we're going to incorporate that into you into here so that the user can get answers to a lot of the uh the idea questions that we got uh from yesterday and yeah and for anybody that filled out the um the google form i'll also send out an invite to uh to test the skill to beta test the skills so as we're doing this you can test it on your own echo if you want to do that so that is it for today if anybody has any questions i'll um just i'll stay on and be watching those thanks so much for uh hopping on today and i look forward to hopefully seeing you again tomorrow thanks so much you