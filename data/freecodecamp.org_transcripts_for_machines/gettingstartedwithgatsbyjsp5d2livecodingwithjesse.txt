hey everybody welcome to live coding with jesse and yesterday we talked about a lot of things for this new project today we're actually going to start the project so what i'd like to accomplish today is to get gatsby up and running and of course that's it's going to be react right we're just going to use gatsby to help build it build us out react and add some some features uh so that we don't have to worry about that and i'd like to make a github repo and then that way you all can have the link you can see the code follow along and contribute as we go through everything so i before we start i just want to say if anyone has any reason why you think we should not use gatsby with this project let me know now i mean we could switch later on but it's going to be easier to decide that now so i i have not used gatsby before i've checked out the documentation i think it will work but maybe i'm missing something so with that being said let's get started also i do want to apologize for anybody who tried to watch my second stream yesterday uh the um the guest lecture that i i gave uh at the computer science course the network was just terrible so the audio only came through not really the video so all right someone in the live chat asked if i'm sleepy i'm really sleepy so i i can see what i look like on video and i i can barely keep my eyes open so um i was i was here for a long time yesterday got home late and then woke up in the middle of the night and couldn't go back to sleep and then woke up early with my threeyearold and uh watched my little pony at five a.m so um anyway but i just had some coffee i'm gonna do my best to uh to stay awake uh all right so i'm gonna use this pomodoro timer if you're not familiar with how we do things here on the stream uh we have pomodoro sessions where we do 25 minutes of code and then we take a five minute break and i go to the live chat see what you all are saying answer some questions then we go back to 25 minutes of coding and we just go back and forth like that today i think i'd like to get at least two pomodoro sessions in and then we'll just see how things are going uh after that maybe we'll do another one uh maybe not so if i don't get your question right away just hang on for a little while and i'll get to it during one of the breaks so let me start the timer by the way this timer was built by someone in our live chat who watches these streams and contributes so thanks harshit for building this really cool um let's get started all right okay so if you want to follow along with the gatsby documentation it's um gatsbyjs.org so really easy url um and then just click on the docs and we're just we're going to start just with basic basic insole here so we're going to yarn add and then i believe the flag is just g for yarn um did you global and we're going to install this whoa missing some packages did i mess it up yes uh maybe i added maybe it's not g all right let's check it out i haven't installed anything globally with yarn in quite some time so let me double check uh where are we at docs okay yarn global and okay i just put it in the wrong spot yarn whoa yarn global ad where are we at gatsby cli okay we got to do this first to be able to uh build our project with gatsby so we're installing it globally because uh that way we can build out the projects from anywhere i mean it makes sense when you have things like um create react app next uh or gatsby things like that global install makes sense rare i rarely use a global install but occasionally it is worth it all right so i'm going to cd into my projects folder and let's do gatsby i guess we have to pick a starter uh so let me double check oh no i'm sorry i never switched my screen thanks for letting me know sorry um yeah i'm not used to having the full screen thing i just i just started trying it uh yesterday so i have to remember that okay so let me just go back you didn't miss much you just missed me typing the wrong thing in a couple of times um so uh all we did was yarn global add gatsby cli and it installed it and then i i went into my projects folder that's it so not really um not not really anything uh big yet okay now we're gonna go to gatsby oops caspy starter i guess we're going to use gatsby starter hello world so gatsby has quite a few like starter projects so normally like with create react app it's just basic you know you get the same thing no matter what but with gatsby there are different versions of the basic install so i'm just gonna go with the hello world one because it seems to me like uh that'll probably be the most basic for us to build off of uh i did find one that was supposed to be material design based but i wasn't thrilled with all of the styles so i don't think i'm gonna go with that one all right so let's go with gatsby and we're gonna call this franciscan site i guess so i guess that works um do we have to use a starter can you just actually let me see this if we don't have to use a starter that would be cool let's just see what happens all right cool then i don't have to decide which starter to use that works for me all right so this should not take very long and when it's ready we should have a dev server already and let's see taking a little longer than i thought there we go all right still not bad under a minute all right let's cd into that folder there we go and now we're gonna do i'm gonna have to get used to all their commands what is it gatsby develop okay okay okay so we've got this running at localhost uh 8 000. so let me pull over a window and see what we have here we go so we have our gatsby site here it's already set up with with two pages so that's cool all right and we're also going to want to use the command line as well so i'm going to duplicate this tab so now we can do commands in here and we can have our our local server running all right so i'm trying to check uh keep up at least a little with the um with the live chat all right so let's go into the the project structure here and um see what's going on i like i said i've never done gatsby before so i'm a little bit interested in and how they do things so i'm going to use adam at least to start this project out as my as my editor all right so let's check out our package json first i'm going to make this bigger so hopefully you all can see it and let's move it over to this side so it doesn't get blocked by uh by the video in the corner um cool so for starter oh cool so it looks like it came with helmet already uh that's going to help when we put in like title tags and things for our pages and let's see what we have build develop okay it already has formatting interesting that's cool so right off the bat it's giving us um some formatting with prettier i like that that's nice very nice all right cool um let's see let's see what's in our we already have a readme it's just default we'll change that but that's not anything to worry about now we have a gatsby config okay cool so we have metadata not bad here's where our pages are so right now our routing is uh taken care of by any component that we put in this pages folder becomes a page it's it's actually a route so this was our home page and this was our page two where we clicked on and you see they're just uh stateless functional components um let's oops where'd it go let's get my screens in order here there we are okay so right so this is that that index that page one and then we go to page two you could it's gonna be hard to see but in our url actually changes and page 2 is at the end so really simple routing we're probably going to want to do some programmatic routing and not just probably we are going to want to do pro programmatic routing uh later on but for now this is this is great uh it also comes with a 404 page and we can customize that which is really awesome we'll definitely want to do that as well and let's check our layouts great so we we already have a layout page made i really like that that's cool um this is where we're probably going to want to put yeah we'll probably end up putting our header at least our header in there maybe our footer as well yeah and we're gonna want to yeah we're gonna want this meta um data to change based on the page but you know we we can get to that a little bit later on but otherwise i like this this is a nice this is a nice setup to start so so far so good with gatsby uh we don't need to worry about these at this point i do want to make sure we have a git ignorer that's sufficient for this project we don't have a dot end yet but we will probably have it eventually so i'm just gonna throw it in there right now and okay cool see okay so here's our next step let's start um i guess we can make this a get repo now i'll i'll let you guys help me out with this decision do we want to make it a get repo right now um knowing that we have to make a lot of like really basic changes do we want to have all those commits in there or should we build it out a little bit first and then commit so anyway let me know i'll check the back of the live chat in uh in just a second uh but in the meantime we need to figure out how we're going to style this all right i do not want to go from scratch and try to style this in our previous project we used material ui the new the beta version material ui i in terms of what it looks like and what it can do i really like it i know that um that some of you had some issues with it was a little bit complicated to get some things to work but i really i don't know of an alternative to material ui that's as complete and has all the components that we need um so i think i'm just gonna go with material ui again okay so it looks like um tiffany and uh no beer say and hacker you see so everybody's kind of saying do a little bit first and then commit okay cool that's what i usually do oh okay philip's saying get from the start i don't know i usually build out a little bit because i i just think like what what am i going to write in my git commit like i deleted all the boilerplate demo code like said a decent commit uh anyway all right you know what let's just do it let's just make it a get repo from the start and um that way if anything anybody has anything to say about what ui framework we're going to use it'll give you a couple more minutes to uh to say it so if you're not familiar with git i'm going to explain what's going on here and then i'm going to switch over to github and we're going to put our git repo on github and i'll explain everything uh so don't worry if if you're totally new to git and github or even using the terminal i'll do my best to explain things and for those of you who who already know all this stuff it's it's going to be a little bit boring for you so i apologize but i don't want to leave anybody behind uh if i don't have to okay so from the command line i already have git installed so if you've never installed git on your machine you have to do that first but assuming you've done that which is not a difficult process assuming you've done that you can just go get init make sure you're inside your project folder which we are here and then you hit enter and it says i've initialized an empty git repository okay now i just have this well it'll depend on your terminal and how you have it set up but when i end it repository uh i have a hashtag there we could do a git status to see what's going on and anytime you're not sure what's going on with your your git repo type git status and it'll let you know if there are files that need to be committed so right now here are all the files that we're not doing anything with yet we haven't added them we had it haven't committed them but we definitely want these files there you don't want all your files to be committed that's what our getignore is for so i showed this earlier our getignore tells git which files to ignore right it makes sense so specifically the the one we always want to ignore is our node modules there's a lot of stuff in node modules so i mean that's insane look at all that stuff it's alphabetical order i'm only on d scrolling down there so we don't want to put that on github right we don't need it our package json tells somebody's node or npm or yarn which modules to install so they can uh clone the repository download it and they can run npm or yarn on their machines and get all those packages so it definitely cuts down on the amount of uh files and folders that get sent up to uh to github okay so what we want to do oops is do get let me put this up i don't want it to get blocked there we go uh so we're going to do get add and i'm just going to put a dot that means we're adding everything all right and let's see this is that okay so when we do a git status again now these are all green that means they've been added they're ready to uh to commit um i guess they call it stage right it's not added it's um they're staged uh we want to do a git commit and we can also add a flag that's m and that means we're just going to put a message for our commit just to let people know what we're changing and we're going to add that message in line if you don't add that then whatever you have set up as your default editor is going to open up and you're going to have to make a message in there so this saves just a little bit of time it's nice if you you know don't really have a long commit message so git commit uh m and we're just gonna say i'm gonna say a net usually my first commit no matter what i always just call init for basically for initial commit or initialize or you know however you want to think about that and i'm going to hit enter and there we go everything's added we can check do we get status again and now it says we're on the master branch and there's nothing to commit and if we look back here depending on how you have what editor you're using you should have some things happen like when you oh and it's not working for me right now uh it figures but what should happen is you should have some type of visual indicator when you've changed a file so let's see this is going to break things but oh well it's not working for me i was um disabling some packages and adding some new packages to adam so maybe i messed something up anyway now we want to add this to github so let me pull this down a bit and we'll go back to our browser and let's go to github so this is my github let me make everything bigger so we can see normally github does not look like this this is the github dark theme so uh search github for the github dark theme and uh you'll you can you can do this too uh so what we're gonna do first is go create we're gonna new repository so we click new repository and in this case let's see i want to switch it up so it's this fus marcom so that's i work at franciscan university of steubenville and i'm in the marketing communications department so we have our own github organization so i'm going to make that the owner and then we're going to call this franciscan um franciscan reacts i guess that works that's fine i'm kind of terrible at naming things at first it's hard to come up with something we'll give it a short description um okay that's good enough for now we're gonna make this a public repository so you all can see it and we already have a readme so we're not getting initialized with a readme and i believe we already have a license we do um so we don't need a license so we're not going to add this we already have a git ignore so you don't need to add any of this and we're going to create the repo okay now we come to this screen so we want to go down here to push an existing repository right because we've already made the repository on our local machine so let's grab this code and this this is already filled in with the correct code for you for that repo so this already says franciscan hyphen react so we're going to copy that and paste it here and then let's copy that next line so basically what this just did is is added so git remote add origin so we've added this as our remote okay um now we're gonna push and that's what we're gonna use to get our code up onto github we're gonna use push but this is our our first push and i gotta enter my key usually i don't have to enter unless i restart my computer which i did recently uh so on my other screen i'm going into my last pass so i can get my um uh see so i get my key okay so let's put that key in there now everything has gone up to github so you all should be able to see that now i'm going to paste the link into the live chat and then i'm also going to have a link in the description to this video and all the future videos on this project so now what am i going to do um i want to do ssh add because i don't want to have to type that key in again so that'll save it status how was i oh i guess i i didn't modify the git ignore didn't i there we go um and in case you wonder what was going on there i had added a few lines uh just just hit enter a few times so all right my first uh session first 25 minute session is up so not bad we got gatsby uh going and um got a development environment set up and we also got to get repo set up so uh now i'm gonna do a short break and i'm gonna go to live chat and go up to the top and then scroll down through and try to get as many uh questions answered as i can okay okay so i got a question about the pomodoro clock so uh jesse mcintyre says why pomodoro i'm used to i've been used to using pomodoro for a while now on my own and this is it's kind of a nice way to break up the work so um i i like using pomodoro in the stream in particular i like using it because it reminds me to stop and check out the live chat and then it also reminds me to stop looking at the live chat and then get back to work so uh it's it's kind of a nice break and uh if you don't know that much about pomodoro it's really cool i check into it i may do a video on pomodoro at some point but let's see anyway it's basically a nice way to break up your time so when i forgot to switch my screen i had some some funny comments here so so just talked in are you going to show your screen i mean you're not about to look at but i came to see some code i like that comment uh yeah sorry about that i will do my best to not make that same mistake again okay um philip has a question about uh low dash sort by saying is there a way to prioritize a sort condition if the object met two conditions i'm not familiar with low dash short buy so i'm not really able to answer that if anybody watching is uh good with with lodash particularly sort by um you know feel free to uh to put an answer there in the live chat for phillip uh deepak says thanks for sharing your time with us you're welcome okay all right so uh lucas asked what is gatsby um if you're familiar with create react app or next js or any other things like that gatsby is in that same category um it lets you honestly i guess like scaffold a react project and usually these types of things come built in with a lot of extras that wouldn't be with just you know your basic react setup so we'll we'll be kind of working through and using some of those extras but you can see already from the from our package json just a few of the extras right we have prettier this is going to be like formatting of our code so we have some auto formatting of code in there we have helmet which is going to help us to add proper uh title tags and metadata uh to our our pages so just right off the bat there's a few things there's a lot of other stuff uh which we'll get to you know in future streams uh zubair says gatsby is uh kind of like jekyll which is a static site generator um it's it's modern wordpress with addon single page application features uh yeah actually i forgot about jekyll yeah so um yeah gatsby does call itself a static site generator so that would be the the class of what it is john hanson says is it easy to migrate code from a create react app project to a gatsby project um i would think yes because components are components still and react right so it shouldn't be an issue if we want to pull some components from uh from projects that we've done earlier like particularly the last project and reuse them so like the header the side drawer we should definitely pull in some of those components assuming that we're going to use the same ui framework i think it would make sense to pull in those components instead of completely recreating them we're definitely going to have to modify them but it'll save us a lot of time if we can reuse as much code as possible okay so all of my or my my time is up in this break so we're gonna do another 25 minutes of coding and um i didn't get through everything in the live chat but i will get through um let's see i'll get through everything uh on our next break see okay so at this point let me get let me put a link for the repo and so here's our repository so you see um really basic right now i'm going to paste that link into the live chat and now you all can check it out right now not much to it uh but we will be adding code to this pretty much every day for a while and now let's go i guess we'll add material ui i'm just gonna double check and see in the part of the live chat that i didn't look at yet if anything was said about ui frameworks um okay i'm not seeing it i'm scrolling through pretty quickly so i may be missing it um i just realized that i have the font size really small on the chat window which is silly i keep squinting so i just uh brought that up i brought that font size up a bit okay yeah let's uh let's grab the latest version of material ui and in fact let's go over to our previous project that we're actually not finished with yet but we're still working on and let's check our package json and just see if there's anything else we'd like to bring over so this is project four we did a lot of videos about uh this project so if you're interested in this this was done with create react app instead of uh gatsby um but i think what we had like 15 16 streams on this so we have it has its own playlist and i believe it's clearly labeled react project four okay where's our dependencies i think a lot of this we will not need most of these were for what we were doing on our custom server okay should be good i guess uh we do want to grab material ui i want to make sure we're grabbing the latest version so i'm not just going to get this i want to see what the latest version is uh i think i may want to put in some of this thing some of this stuff with testing and auto formatting but i'm going to hold off on that for now so first things first let's check out material ui and we're gonna use the version one uh beta let's see what it says packages next all right so we can use material ui next okay and then we're also going to want to grab those icons as well um put your ui icons okay oops so we're going to do yarn add material ui and we're going to also add material ui i want to double check make sure what that was mature uh icons okay i think it's always important to double check when you're adding packages that you spell everything correctly and you have the right name um it has happened that people have made packages that had some malicious code in it in the package and it was a just a misspelling of a popular uh npm package so uh be careful with that it's your ui icons yep everything looks good let's add it all right awesome uh so we have this and we can do a git status now and see what's here um and let's just do a commit just to show we can actually combine the add step and the commit step if we add this a flag to a commit and then i'm also going to combine the commit message step here so we're adding am uh so we're going to get commit am and we're going to add material ui and we can do a git push origin git push origin will automatically push to the master branch so that's why we didn't have to put a branch name in case you've seen that before and you use the branch name we learned a week or two ago that that's not necessary okay awesome so we have this in here now the next step i think what we should do is let's add some of those components that we used in the last project so the side drawer and the the app bar at the top we're going to take those and we're going to add them into our layout component and of course we're going to have to adjust them but we already have the design for that app bar finished right we worked on that months ago so uh we'll bring up that design which was it's more than a design we actually built it out um we'll bring that up and then we'll start to change that app bar to make it look exactly uh like we we want it to look okay so we're gonna grab app.js let's see our layout here here we go is app bar okay so we got a lot going on here goodness yeah we have a lot going on here let's um let's just copy everything at first and then we can remove the stuff that we're not going to use or edit things right so this is get hopefully going to save us a lot of time i i've had mixed results of doing things like this usually it does save you a lot of time but occasionally uh you spend so much time trying to go through the code and make it work with a new project that you don't really save that much time but in this case i i think i think it will be a time saver for us so we are going to want to leave our gatsby link here and react helmet if we we aren't we may already be using it in here i think we are let me double check see what else we have going on here okay i think we're safe you know what i don't think we should add this directly to layouts we should break it down like we're doing in this other project so if you it's hard to see here but we have our our layout split up into uh different components i think that's gonna end up being better otherwise we're gonna have one really really large um layout component and it's always better to split up your components if possible so let's do that let's create in this case this is going to be our our app bar uh components so let's see we'll go ahead and just create it here in uh in layouts so let's make this let's follow our project structure here do we have okay this is all just in the layouts folder um so we're just going to make a new file right here and you can do that right from your code editor you could open up you know your file structure and do it or you can do it from the command line so i'll try to do it in on the command line as well and that way if you're not familiar with it then at least you get to see uh how we do that so in this case i'm going to name it um app bar yeah app bar dot js great and i'm gonna copy it in now and have our body calling this top bar all right we're bringing in at bar for material ui already and what we want to do is bring in app bar as mui app bar so let me explain for a second what i'm doing and why i'm doing this so in general it's good practice to name your component and the file the same thing right now we're not so our components named at bar but we're calling it top bar the reason we did it like that in our last project was because material ui already comes with a component called app bar but we don't have to call it outbar so we can import it as something else so we're calling this material ui app bar so mui we're going to prefix it with mui that way we can distinguish material ui's components and our custom components if we feel that we want to name them the same thing which in this case i do this is an app bar uh so i would like to be able to call it app bar so let's go app bar and uh if you're feeling like we kind of just jumped ahead because we copied all this code don't worry we're definitely going to do some components from scratch i'm not going to be copy and pasting everything over in this case this will just help us get a jump start on the the ui for this project okay and then we also need to change this name here to mui app bar all right now we're going to save that and we need to make sure of a few things um first i want to look at what we're bringing in and make sure that we actually have these things installed okay this class names did we have to bring in uh let me make sure where did we pull in class names from before let's see we have uh several other people working on this project so um i don't remember where we did this so who's if anybody that was working on this project before remembers where we pulled class names please let me know we may not even need it so i don't want to take the time to go back through the code right now in the uh during the stream that may not be that exciting so i'll just check it out later but for now oops we have our at bar component and what we'll do with this app bar component then is we're going to want to import that into our layout index component right so we're going to import app bar from and then we're gonna do uh i guess what is it dot slash um app bar is that how we do it did i need the dot slash what am i thinking all right so let's see let's check out our our index here just to see how we're kind of piecing these things together and we won't need to bring over everything but we would definitely need a lot of these things to handle um we're definitely going to need that search bar everything we need to handle search bar okay this is a little bit more indepth than i want to go here in this first opening stream so i'm going to switch up and just work on getting this app board to the point where we can have something we can see that will be it'll be nice we'll have a sense of accomplishment that we can see something on the screen all right so we've imported appbar and now we just need to use it so let's bring in so this is the header component and we're bringing that in here all right so this is our current app bar so if you you'll see here right this is the purple it says gatsby so you can see what we're doing here background rebecca purple right so we don't need this anymore and in fact we really don't need any of this um we actually don't need this header at all so let's just remove that because instead of header we can just add app bar right so that saves us some space there now when i save this i don't expect this to work yet because we're trying to import some stuff that i don't know that we have so import apple as maybe i got my syntax wrong let's double check let's see because i know we did this somewhere else let's see did we do this elsewhere with our drawer i thought we did all right let me uh quickly look up if it was my syntax imports uh let's see if that'll give us what we want all right this looks good oh okay i'm forgetting my brackets sorry about that so let's try it again with brackets and i expect we'll get a different error now a little bit farther down but we'll take it one error at a time there we go cannot read property app bar of undefined classes app are okay um we don't have these classes being passed being set up at all yeah so that was to be expected let's see if we can pull in some of these let's see where do we have it here it's a nice oops of our styles yeah let's pull this whole file in and we haven't even set up material ui yet in our our root file uh totally slipped my mind so let's do that as well since i already copied this styles.js let's let's make it a new file and call this styles.js and we'll paste this in save it and see let's let's before we forget anything else uh make sure we go in to our index actually where is okay this is different yeah this is definitely different okay for my people who have used gatsby before i'm looking for a root component um where is where's the root component let me check my timer as well um stuck here okay two minutes and if i can't find the root component how do we set up material ui is it is okay it's in public i mean um not the html but like normally you would have an app.js or something like that we we don't have anything like that it doesn't look like we have anything like that right now i mean i i doubt it's this index but if it was anything i guess that would be it it's not this config hmm so is there a gatsby way to import material ui then and start using that yeah here's our gatsby config so obviously like that's not what we're really looking for so just to give you an example what we're looking for um let's get rid of these views either like our so obviously we have our index here but i'm thinking more app.js that we could um you can see like everything is is in here now we did wrap i believe our layout right in this project we used our layout index and um is that where we added all our yeah our provider our theme provider we did in here so i guess we could do it there um but i guess i'm thinking like what if we add down the road uh what if we decide we want to use react router can we do that i guess we don't have to decide on it now but um all right just have to be aware of you know some of the differences so let's uh let's pull this in to our index our layout index and then let's also provide a thing and we're going to wrap this here there we go and then we're going to apply this props classes i'm going to be able i mean we're definitely gonna have to this can't stay a stateless functional component so that's gonna change because we're gonna need some stuff going on up here um all right so that's gonna need a lot of change so unfortunately we're going to have to leave this with an error right now simply because i don't think we're going to have enough time to put in everything we need to kind of integrate these old components with what we're doing now so uh the the timer is up again let me see what time it is okay so we've been streaming for a little over an hour now um let's see i think that's a good time uh so i think i'm not going to do another pomodoro session i hate to leave it off with an error message but um i don't want to do a super long stream today i have some other projects that i need to work on and um and some of this work is going to be a little like tedious and not really that exciting now it's just going to be comparing files and making sure that um we have you know everything i need that i'm i'm importing the right stuff in the component that i've just transferred and copied so at this point i'm going to try to get through all the questions that are in the live chat if you have a question go ahead and put it in there now and um if you don't have a question please stick around and help to answer the questions i definitely appreciate having your expertise okay so i left off right about here okay uh anna says so what are you making uh is it a new project yes it is a new project and um so yesterday was the first day i talked about it so i explained everything yesterday so if you want to check out that recording of that stream you'll have a much more indepth thing but basically this is going to be the main website for the university i work for so franciscan.edu we're going to completely redo it it's going to be built with react we're going to have content management system where we're pulling data from through an api and eventually we're going to have to set up new servers new database so a lot's going to go into this but the site itself is actually somewhat basic there's not going to need to be any login we just need to we need to display data perhaps down the road maybe we'll do more but at least for now to get it launched that's what we need to do and it needs to be launched sometime in february or at least ready for testing maybe around the beginning of february 2018 okay so um jesse mcintyre asks what's the difference between npm and yarn that's a good question so um npm and yarn basically do the same thing when yarn first came out uh the big thing was it was faster and it also had this yarn lock file okay now with newer versions of npm npm is a lot faster too and npm also has their version of a lock file so anymore i don't really know that there's that much of a difference it seems to me like uh you can do with yarn the same things but the commands are slightly um shorter to type in they're more concise um but maybe it's just because i don't know all the shorthand for npm commands uh but at this point you can use them basically interchangeably and at least to me i don't see one or the other as the clear winner when you're comparing the two okay someone's asking for bank account hacking tricks we we don't do uh bank account hacking on on this stream so i'm sorry i can't help you with that uh also asked about kali linux um as far as i know kali linux is a version of linux that comes preloaded with lots of penetration testing tools i get that's a nice way to put it so you could use it for good or for evil i suppose and uh it looks like and andrei also answered that as well so thank you for that oh cool francis is first to star let's check out that repo and see if we got i think we got at least uh one star right oh cool eight stars awesome very cool and i'm going to be filling this repository with issues and then you can check out the issues and see if you'd like to contribute so i need to get a little bit more done just to set things up before i can really start putting issues in but i'd like to start getting them in there before this week is over so sometime probably tomorrow uh discover holland says is there a grid system with material ui um yes uh there is a grid system so i guess we don't have to check it out but if you go to layouts if you go in the mature ui documentation for the for the newest version uh they they have a grid system actually pretty pretty nice documentation i think with kind of interactive examples so yeah they do have a grid system which is it's very nice um john hanson says is there a gatsby version specific to material ui i actually i'm not really sure that's a good question i didn't check into that beforehand but might not be a bad thing to check into and make sure there's no issues with different versions uh demon proc says is he coding a game unfortunately no that would be pretty fun uh but just uh just a normal website uh so not a game right now although i think it'd be cool if we could do a game on on the live stream uh maybe one day uh in infamous uh i guess that's how you say it says how can you pass the value of the text input into a function um so i'm not sure if you're talking about specifically in react or with javascript in general but in react um you can i suppose there's always more than one way to do it but you know for instance here we are doing that with our let me find the um the component do we not have a component there we go um so for this we have a let's find our our text field here we go um so we have our text field here right and then we have our uh on change handler so this handle change right we don't actually have the uh handle change here so we have to go up into our index so we're passing down that function uh to this child component but within here we can see our handle change maybe i missed it i miss it let's find it enjoy and close huh where are we bringing this in at oh there we go maybe we are doing it in the component it was just underneath so uh sorry about that i couldn't find it so we have handle change and we have this target so so basically we're passing in uh this is an arrow function so if you're not familiar with that it's it it's shorthand for a function basically and it has some different things that happen with this inside of here but this is our event our e that's getting passed in from from whatever um element the change happened in right so in this case it was the text field so within that we can go uh event target and then name we can get the name of the input and we can also get the value of the input all right and then so this has been passed into the function then we can do whatever we want with it and in this case we're setting the state which this is called a controlled component i believe that's what it's called and that means the um this state actually that's really weird so i guess we're not initializing state with any value first um that's kind of odd anyway um we're saving the value of that component um in in the state and then when the form is actually submitted then we can get the values from there so that it probably would make be easier if this wasn't already a large build out component uh maybe a more simple example but that's one way and react at least uh that you would pass the value of a text input to a function all right okay amman says uh what as asking what is react helmet for um and john hanson has a good answers helmet lets you have a way to set um a variable head content so if you know like at the top of an html document you have your head so all the content that would normally go in the head um helmet lets you uh set what that content is for each page in react uh so it can be really useful you basically use helmet and let's say your layout component then you don't have to manually put it in it it can be a little bit tricky um to do it without something like helmet so that makes that a whole lot easier sebastian says the um the routing is kind of set up like next js yeah i thought the same thing i think you're exactly right uh anybody who's used next before knows uh it's so far it seems pretty much the same um it looks like gatsby has their own link component just like next does anything you put in the pages folder becomes a page so i'm glad that that's familiar so i won't have to learn a new routing system uh bill all says hey jesse thanks to the videos do you usually push directly to master or do you create different branches when developing i do create different branches from time to time uh but i also do push to master so uh generally if the change is going to be somewhat simple i don't mind pushing the master now keep in mind too that mostly it's just me working on the projects mainly with with some help from you all um sometimes more help some you know so uh it's pretty easy to keep a project kind of under control and i'm comfortable pushing the master if i had a much larger team i would be a little bit more strict about how we um you know we push things and you know having different feature branches so we're a little bit loose with that kind of thing right now just because it's always such a small group working on it it's okay it works but if i'm gonna make a more major uh change like you know a feature a a new feature or a major design change or something like that then i usually make a branch for that and then eventually merge it into master and then of course all pull requests obviously are on a separate branch but uh i'm i'm welcome to different ideas about how we can kind of organize the project and have some rules about um you know branches and things so we're definitely gonna have to make a nice uh contributing file at some point amon says it was fun thank you jesse you're welcome thanks for watching uh inna says thank you a lot jesse your videos are useful awesome awesome i'm glad you think that uh yorn says so this being a static site with data pooled from apis will data be stored or cached in files on the server um you know what i got to look up specifically what's going on with gatsby but i would hope that there's some sort of caching built in that we can take advantage of so that a lot of the uh frequently accessed pages uh they're rendered so we definitely need serverside rendering i would love it if the rendered pages would be cached for a certain amount of time so that that page can just be served up you know faster and you don't we don't have to make as many calls you know back to where we're getting our data from so i'm going to have to do some more research i knew how to do that with next js and we did that back when project one so i'm hoping gatsby can do the same thing it's not necessarily a deal breaker for me but it's definitely a feature that i would like to have uh blake asks how do i deploy a create react app website um yeah blake there there are several different ways you can do it it depends on where you want to host the website at amman has a nice link to the create react app documentation about deployment yeah i would check that out blake so read read that section in the documentation and uh figure out what where you want to deploy it to and uh if it's confusing or you need some help let me know and i can help you out with that uh but um trying to think i've deployed to i've deployed to now or with now i've deployed to github pages and then i've also just deployed to a server to a linux server so if you're planning on doing one of those three things i can definitely help you out uh osuna says maybe you should add a little documentation to your source source code that is a wonderful suggestion i definitely agree uh so i um i'd actually i'm gonna try to do my best to add uh more um commenting and documentation uh but that's also an area where i would definitely appreciate help if anybody likes that you know maybe um especially if you're not that confident let's say with your javascript skills um if you'd like to get some pull requests in for your github profile you know writing a little bit of documentation or some comments would be great you can if you watch the stream or the videos you'll be able to hear me explain what the code is doing and then writing something up like that would be great so i don't no one should feel obligated to do anything like that but if that seems interesting to someone uh you know please go for it uh otherwise i said i'm gonna do my best to uh uh get some good documentation and comments and let's see uh no beer says thanks for the streaming uh you're welcome thanks for watching okay uh philip has some uh if you remember a while back philip asked about sorting with um low dash sort by so he's uh he's posted some more in the live chat about that uh so like i said i'm not familiar with that at all but if anybody watching if you can get to the live chat and check out um the link that he posted in uh or some of the stuff i think you know that would be great i'd love to be able to to help out for someone to be able to help out phillip um i'm really sorry that i don't know enough about it to be much help to you um john hanson says react magic state not initially set for a value and yet it can still be defined state initially let's check out that component label placeholder name margin you know what okay this makes more sense now so normally with a controlled i may have misspoke earlier uh normally with let's a controlled component which you would use for normally for form fields the value is set to equal whatever this state is if you did that and you hadn't defined anything there would be problems right but in this case we're not actually using state anywhere until it's already been filled out so it works it so it it actually works in in this case uh i believe correct me if i'm wrong but with material ui we have this placeholder and if you were to put a value here and set it equal to the state and have it be an empty value or even a nonempty value you would no longer have this placeholder visible the benefit of the placeholder is that when you click into the input it automatically removes it i believe that was the issue that we ran into before so i think that's why it works in this case normally though uh we would want to set our define what we're going to have in state beforehand i kind of like defining it anyway because then it's easy when you go into the component just to see immediately what is is going to be in state right otherwise for this you know we don't realize until down here that we're gonna have some other stuff in state now also it's it's good to to notice here we're using e target name so we actually have variable name and value so the key and the value pairs are all dependent on the name and value of the input so potentially in this setup we could add as many inputs as we wanted and never have to add the input names up here so there's definitely value in doing it this way i i mean there are pros and cons to either way if we had a form that was large and that was likely to change frequently then doing it this way is probably the best way to do it anyway hopefully that made a bit of sense if you're familiar with react if you're if you're not familiar with react i hope i wasn't too confusing with that um let's see okay all right and it looks like below is going to try to help phillip so uh thank you so much for that that's awesome uh so i love it when you help each other out with uh with coding issues okay so we're about an hour and 20 minutes into the stream now i had a decent sized stream we got a lot accomplished and uh now we have a github repo up so you all can see what we've done so far um open issues make suggestions pull requests whatever you want i know we're early on still so it's not going to be too easy to you know contribute there's not a lot of code yet but we'll get there this project's going to start looking pretty good quickly um let's see yep that's it um oh uh diogo says i'm late is this the new project it is the new project yeah so i'm a about to end the stream but you know you can check out the uh the recording it should be ready in a few minutes after i end the stream all right so i should be back tomorrow around 2 p.m eastern time and we'll do another stream we'll work a little bit more on on kind of building out our layout component and thank you so much everyone for watching for contributing in the live chat i really appreciate all the help and i appreciate everyone taking the time to let me know what they think about how we should set up this project i think it's going to be really awesome i'm really i'm i'm looking forward to working with you all on this project and uh hopefully some of the students here too that i i spoke to some of the students last night and um i hope some of them are interested as well it would be a really awesome you know collaboration for this project so um anyway i'll be back tomorrow until then have a great day