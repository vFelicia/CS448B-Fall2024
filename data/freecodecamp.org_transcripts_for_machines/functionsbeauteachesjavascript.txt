functions are one of the fundamental building blocks of javascript a function is a javascript procedure which is just a set of statements that performs a task or calculates a value to use a function you must define it somewhere in the scope from what you want to call it a function definition which is also called a declaration or function statement consists of the function keyword so in this example here's the function keyword and then there's also going to be the name of the function which is square in this case so you're you're always going to have this keyword function it's always going to be function the name is always going to be different and this function is called square because that's what we're going to do in the function we're going to square a number now you're also going to have a list of arguments to the function enclosed in parentheses so the argument in this function is number this is the uh what we're going to pass into the function these are called parameters which are variables that act as placeholders for the values that are to be input into a function when it is called so you're going to input or pass these values into the function so when you call the function you are going to write the you're going to type the word square but you're not going to type the word number you are going to pass in a number and this becomes a variable within the scope of the function the last thing the function hat is going to have which is the main body part of the function are the statements that define the function these are enclosed in these curly brackets so some function some functions will have a lot of lines this one just has one line and you can see the return keyword that's going to return something from the function when you call the square function it's going to return number times number which is how you square a number you multiply a number by itself so here's how you could call that function i'm going to pass in that function into console.log so we can log the the answer to that function i'm going to put square four and when we run that we can see it's going to log 16. we're going to call square which is the function instead of the word number we're gonna pass in four and it's going to return number times number which is four times four and then when we it'll console.log what this returns okay here's another another function and i'm going to use this as an example to explain scope in javascript scope refers to the visibility of variables so variables that are defined outside of a function block have a global scope so here's the actual function the function is my fun we're not going to pass in any variables or parameters or arguments and it's just going to console.log some var which is defined before the function so because this variable is defined before the function it is a global variable and so then the func the variable can be accessed inside the functions however variables which are declared within a function as well as the function parameters have local scope that means they're only visible within that function so let's call mindfun and so that's how you would call a function that does not have any parameter or anything you just have to put parentheses after the name of the function if we run that and you can see it's going to console.log hat even though hat is not within the function so a variable defined within the function is a local variable so a local variable can actually have the same name as a global variable so here some we have varsamvar equals hat var sumvar equals shoes these are the same name so when they have the same name a local variable is going to take precedence over the global variable so if we run that it's going to say shoes over here but now if we do console.log some var and we're going to run that so it's going to console.log shoes here but when i console.log sumvar again it's going to console.log hat because this is a local variable and it's not accessible from outside the function so when i try to console.log the variable outside the function we're console.logging the global variable that we define outside the function and now i'm going to talk about nesting a function within another function so when you nest a function within another function or when you put a function inside a function the nested or inner function is private to its containing outer function so in this example we have the function add square and this function is this whole block here but inside that function is another function the function is square so the inner function which is square can only be accessed from the statements in the outer function so you can see this inner function square we're accessing it here we're calling the inner function here and here if we were um here and we called square it wouldn't work we would get an error because that's outside of the function the inner function can be only accessed within the function that it's in the inner function forms a closure the inner function the inner function can use the arguments and variables of the outer function while the outer function cannot use the arguments and variables of the inner function learn more about closures in my closure video a is going to equal add square and we're going to pass in two values 2 and 3. so we passed in two and three here now we're going to ignore this for now because we're not calling it yet but now we're going to return square okay here we are calling it we're going to pass in a which is going to be 2 and it's going to square it 2 times 2 is 4. now we're going to add that and we're going to call square again we're going to pass in b which is 3 so it's going to pass in 3 and do 3 times 3 which is 9. so now we have 4 plus 9 equals 13 and that's going to return 13. you could console.log it or use it in another function we also can do this if you pass in three and four you're going to get 25 if you pass in four and five you're going to get 41. another thing to know is that a function declaration is hoisted that means no matter where it is in the code it's kind of brought up to the top of the code so let me show you what i mean by that so look what i did here i had console.log and then i'm calling the add squares function which actually isn't defined until right after that line over here so i'm passing in 1 and 3 1 squared is 1 3 squared is 9 1 1 plus 9 is 10 and it's going to control that log 10. you can call a function before it is actually appears in the code see my hoisting video for more information about that well that's the basics of functions thanks for watching my name is beau carnes don't forget to subscribe and remember use your code for good