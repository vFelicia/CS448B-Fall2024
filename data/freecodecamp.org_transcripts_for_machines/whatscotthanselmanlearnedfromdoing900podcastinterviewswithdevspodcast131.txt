the Swiss army knife is a great analogy because it's it's kind of bad at everything but it's also kind of like kind of good at stuff it's got like a tiny knife and a tiny scissors and a tiny you know tiny you know tiny tweezers it's not a a a a perfect uh at everything thing but it's got a real good General sense and it'll let you survive so I want people to become a Swiss army knife developer welcome back to the free Coke Camp podcast I'm Quincy Larsson teacher and founder of freecodecamp.org each week we're bringing you Insight from developers Founders and ambitious people getting into Tech this week we're joined by none other than Scott Hanselman Scott's a developer at Microsoft a prolific teacher and he's hosted the handsel Minute Podcast for nearly two decades Scott how's it going man chilling how are you sir I am thrilled to finally sit down and talk with you on the podcast uh I was actually in Portland a while back and it just happened to be a time that you weren't in Portland so we couldn't record in person but now we switched to video podcasts uh and uh just recording remotely so I'm thrilled to finally have you on the show yeah it's my pleasure thanks for uh hanging out what do you got going back there behind you that's a you're on attract mode on your Super Nintendo this uh I do have a Super Nintendo back there but uh Jeff Atwood gave me this uh arcade box it's like basically a main machine type thing and it just has lot of arcade emulators so I like to put different uh games on in the background this is an audio podcast for some and maybe a video for others but I'm holding up a seethrough monster joysticks uh Plex basically an acrylic uh Mame machine I've got a main machine behind me I've got another one that's a Raspberry Pi inside of a mini arcade and then I've got a full miniature Street Fighter here and then I've got this one plus this one so I've got about 14 or 15 uh arcades in this room awesome yeah uh I'm a huge fan of arcades I grew up you know in in the early 80s like going to arcades and you know playing Bionic Commando playing Shinobi playing a lot of the the kind of golden age or like right after the Golden Age I guess the golden age is like uh you know like Space Invaders and pong and stuff like that but like once the tech was good enough that they could have really exciting you know sidescrolling games and things like that what kind of games do you play other than of course fighting games it looked like that arcade stick would be really well suited to playing Street Fighter um the the games that that classic games that I like are what you would call a shmup a shoot them up or a bullet hell Japanese bullet hell games where it's basically like you know one of the first ones was 1943 but like the the the ones where there's so many bullets coming at you on the screen that you have to find a single Pixel pass through them and there's like you have a a little guy who's your uh your ship but he has one one heart pixel which is the like as long as you keep that one pixel okay and you're moving it around he's all right and then of course you know Neo Geo anything Neo Geo is great I was on Tik Tok live a couple of days ago uh setting up my uh Dreamcast uh and I just I just literally got uh a couple of days ago a um I'm pulling this over from the other here we go this is a retro Tink 4K this is a 4K upscaler that takes basically any classic input and up upscales it to 4K so I was how does it how does it do that how does it add information like so let me plug it back in it's it's a really interesting thing like we're came we're we're talking about free code Camp here but I can't have an object like that whether it be a joystick with a Raspberry Pi inside or an upscaler without thinking about the science behind it right so when you start digging into like oh it's a box and you plug things in and it makes the screen look better like that's the that's the business right but you've got analog what are called RCA plugs here so this yellow one is where video is inut white is left and red is white and it's basically like six wires the inside and the outside how is that encoded is a is a Super Nintendo sending out 240 scan lines is it doing it interlaced is it doing it Progressive is it doing it 30 times a second or 50 times or 60 times a second how do you output that to to HDMI on a modern 4K screen in a way that is consistent and has minimal um uh you know minimal loss but also what is the intent is the intent to sharpen everything and Crispen everything where you can apply algorithms and filters is the intent to make it look the way it looked on a Sony Trinitron CRT with scan lines yeah because one of the philosophies you you have a pixel game behind you that's running which looks like a shmup in fact the um the artist designed the pixel art not to look like the way young people think pixel art looks they designed it because the way that the cathode ray tubes had the scan lines they counted on Bloom and they counted on blurriness so they would design the pixels to look that way but now we're used to like oh I want the crispas Mario that's not the way the designer intended it they wanted him to look kind of smooth and funky and he'll look weird and pixelly if you do a what's called a 2X or a 4X upscaler right but if you upscale it with different algorithms and the the the Retro Tink is a very highend kind of obnoxious uh piece of equipment um you can make a 4K display look exactly the way you remember a 13in CRT in your parents basement look and they do all of that with multiple layers of filters and algorithms that you would only have the processing power for in 2024 I know that's a big long speech at the beginning of our no podcast but they do that with a whole heck of a lot of work and they do it in less than 10 milliseconds yeah that's amazing uh well I will definitely look into Retro tinks uh and uh yeah what I'm using here is just like a one of those Old Dell monitors that I got off eBay from like you know 1999 2000 2001 or something when when they first went to flat panel it's not quite as authentic obviously is playing on CID yeah so that's the same exact thing that's in here it's the it's the very last Dell uh 4x3 1080p monitor yeah what you can do now is take a 4k monitor which gives you four times the resolution and then apply one of these filters and then even warp it and give a uh a scan line give a raster View and it is indistinguishable from a CRT and there's a really interesting video from lonus talks Tech where he has a proper giant 27in you know Sony with a curved screen and he Compares it next to a flat panel and he now prefers the CRT so we have the the tech and we have the the number of pixels to simulate that look and feel and then arguably make it look the way that the uh the artist wanted it so there's really cool math there and there's really cool Tech and that's a one oneperson shop retro Tink uh it's just a gentleman who's passionate about about those UPS scalers yeah I mean it's hard to find like more hardcore devs in any industry than you find in game development because people get so passionate about games and like you hear about like the the story of the creation of Spelunky for example which was all developed by like a single developer who did like the music the Sprite work I think he did the music and and you know people get really fanatical about like this passion project and and they bring it into the world and and sometimes there's a community out there to support their work and then they can make it into a sustained Pursuit like like the the two brothers that developed uh for example what is it a Dwarf Fortress for example they've been working on that for like 20 years well you're familiar with the theory of a thousand true fans enlighten me okay so the idea is that people over people in the in the Creator economy people in the world of Instagram where you are algor you know the algorithm is designed to make you feel bad about yourself get uh overly tense thinking that well I'm going to need millions of fans and I'm never going to be able to make this work and how will I survive da the theory of a thousand true fans is that if you can get 100 bucks a year from a thousand people that's $100,000 and you can have a nice you know kind of middle lifestyle yeah that means if you're an indie rock star if you're a web comic person if you're a Dev if you have a patreon you just need a thousand true fans they'll come and see you if you're in their Town they'll buy your merch they'll buy your tshirts you just need to get a 100 bucks from those thousand people and by putting it into a number like a thousand which is just like0 times it becomes an amount of people that you can visualize you know maybe you went to high school with a thousand people maybe you know a thousand people in your life so um it's an it's an accessible and attainable goal as opposed to trying to get a million people on Tik Tok and then to get Tik Tok to give you $9 yeah for a million views yeah well that's a cool um that's a cool way of thinking about it I mean free C Camp kind of operates that way in that we have uh about nearly 9,000 people who support us each month uh and they're just giving us $5 $10 but that is able to enable this charity to keep pushing forward and expanding our learning resources and pursuing our mission that's exactly you're right you are living the dream of a thousand true fans because yeah it'd be great if a million people gave a dollar a month or whatever but but people who deeply care are are are involved yeah well I'd love to talk about retrocomputing for and video games I do want to learn more about you Scott because you're somebody who's been teaching people how to code for decades at this point and he's been working as a Dev for decades and who has been running per perhaps the longest running Tech podcast is are there any Tech podcasts that have been running longer than 18 years I I don't know maybe uh that's a good question i' I'm on show I just finished recording show uh 947 yeah that's amazing maybe you can talk a little bit about uh what inspired you to create that podcast to begin with did you ever have any notion that you'd still be doing it this much this much time later did it feel like podcasts were just the new thing and you were just jumping on the trend or what was the I started it because my buddy Carl Franklin was giving me a hard time I think his might be on a longer running podcast. net rocks there in the in the thousands although he does a couple of shows a week um for me we were I was teasing him saying that podcasts were garbage because they were a waste of time and they had no information density which I was teasing you about uh earlier and he says says well then you should start a podcast shouldn't you like if you don't like podcasts cuz kind cuz podcasts early on were talk radio and I found like you know um what's that guy Howard Stern and those kind of shows to be somewhat rambly uh and I had a 30 minute commute and I wanted you know I can't sit in the driveway and listen for two or three hours to uh people chat so for me I wanted some density so I made a show that was 30 minutes tight which was the the length of my commute and the and I did a little you know research and that's the average commute in America is 30 minutes and then I realized that people don't like it when you call them and say can I pick your brain I don't like that either like I don't want people to think I'm being a jerk or anything but when you call someone and say hey can I pick your brain There's No Agenda it's an assumption that time is free and that everyone has you know there's there's only 52 weeks in a year like if you start thinking about life like that you realize you don't have a lot of weeks left so I can't just give everyone a lunch um so I'm a little bit you know precious about my my lunches and my dinners I'd rather spend it with my kids and my family so rather than saying hey can I pick your brain you say hey can you come on my podcast and then you record it and then you do a YouTube and you do a pamphlet and you do a transcript and you you know and then it it's an opportunity for you to pick their brain with an agenda with some research you keep it at a tight 30 minutes it's information dense fast forward 20 years and you you got 500 hours of of tight content and someone even made an AI bot where you can talk to the Hanselman it's bot um and and like ask questions of the last 20 years of tech and and and see if there was a show about it that's awesome so yeah it was done as a rejection of modern podcasting okay awesome and you suuck with that format you're still very tight like it's tightly edited like I listened to the episode where I was on uh which was part of uh I I think it was part of netc yep uh and that was a big Honor by the way thank you for inviting me on there no it's my pleasure um and and it sounded like you made me sound like the smartest person in the world like just bringing all my insights out and and really uh yeah and I used to do heavy editing on my podcast too uh but like I'd always feel daunted personally like when I listen to heavily edited podcast because I'm like man I'm like especially because I listen to double speed so everybody sounds like already twice as smart as I am but once they're like Ed even smarter right it's all like oh man like I don't I don't want to give the impression that it is highly edited it is edited it is professionally edited by a professional podcast editor Mandy Moore uh Mandy is available for podcast editing if anyone's listening and wants to hire Mandy find me on Twitter and I'll put you in touch with her she is a professional podcast producer so I put raw audio into a Dropbox and a produced show pops out the other side um and she's editing you know for clarity for ums but I also have been doing this for a minute so I I I feel pretty confident in the ability to get good content out of good people yeah and it's worked out so far and and it's sustainable because it's just every Thursday for the last 20 years yeah yeah getting into a rhythm uh similarly like my email newsletter which been has been going seven years uh every single Thursday get an email out so life is a marathon if you if if someone said oh you should start a podcast yeah just do it three times a week that's that's not sustainable that's why people fail to work out because they go from zero days a week to five and then they stop that's not a thing everyone can do so twice a week three times a week would not be a podcast that I could do yeah well before we dive into talking about like learning the code and talking about uh the net ecosystem which we're going to talk a lot about I'd like to just talk with you a little bit about Portland the city that you live in uh where you've been for quite a while and uh why Portland I was born in Portland and you you know Seattle's just like right up there and there are like lots ofch compan still not better and still not better is it no uh my my you know my family came here and uh they landed in like 1906 and spun on their heel and said we're in Portland now uh I've been here my grandparents are here my uh my dad is here my Mom and Dad are here whole family's here Portland has a great airport has great public transport ation has great uh electric train uh you can you can drive an hour and get to the mountains you can drive an hour and get to the beach there's a half dozen universities here I have no interest in being anywhere else awesome well that is quite a no that's a nice clean answer right it's like I I've filled three passports I've got all the stamps I've been to I don't know 38 countries but um Portland is a very M has a very mild uh very mild climate and uh you've got Intel you've got Nike World Headquarters here I've worked for Microsoft for 15 years remotely from my my home in Oregon so yeah Portland's pretty cool place so at no point did they say hey we we need you to like relocate you were just that's pretty cool you is that common at Microsoft for people to just even way back then 15 years ago no it was not common 15 years ago it is totally common now my entire team is remote some of them I don't even know where they live yeah and like how do you work I guess uh free C Camp is fully remote so I don't want to sound like I'm a Critic of uh remote work or anything but like for people who are used to working in offices or managers who are listening to this who are a little bit worried about remote work maybe you could take a moment to talk about the benefits like the tradeoffs that you all face as a remote team well I think that being remote requires a level of uh emotional maturity that no one gives you uh preparation for you know you can be one can get lonely working remotely so you have to figure out where your energy from comes from there needs to be a certain amount of conscious focused internal conversation with oneself about what feeds their Spirit if if you know sitting on your kitchen counter with a laptop is not going to you know feed your spirit then that's going to be a problem and you're very quickly going to regret it but at the same time if a 90minute commute into the next city is going to be Soul crushingly sad that's also a problem yeah so I will go sit at McDonald's and I will go sit at you know at Chipotle and I will use their WiFi and I will hang out and get energy I'll sometimes I'll go and sit at the mall in the food court uh couple of times a year I will drive up to Seattle and hang out with folks uh there's a local Portland office which is like a little sales office and I'll go and you know I don't drink coffee but they have a kitchen so I can just be somewhere where there are humans but that can also be sitting in a park but my job as a as a a program manager at Microsoft and they have a they have a these three things that SAA says your job is to uh create Clarity generate energy and deliver results now that sounds squishy but the idea is how do you get people to do a thing right you're you're a program manager you have a program you have a thing an initiative a program is just an initiative and you want to manage meaning move forward and her all of the Cats into all these cats that are running around the field you okay okay we're going in that direction well I don't understand what's going on all right let's create some clarity here's the goal all right this is good now convince me it's a good idea generate energy a recent example would be uh Katie on my team working with you to get C A C C certification on free code Camp so you can go to free Cod camp or you can go to Microsoft and you can get a certification on on behalf of us on behalf of Microsoft and free Cod Camp everybody wins but how did Katie as a new graduate at Microsoft from her apartment do that she's got to get people excited she's got to write documents and explain it she's got to get on phone calls she's got to get on emails generate energy get clarity going and then everyone goes oh man that's a great idea and she freaking did it yeah yeah and and you did too remotely yeah we corresponded we had maybe like five or 10 meetings over the course of development of that certification everything got done and so yeah I really like this funny how that works and you didn't have to fly anywhere no uh I still haven't met her in person hopefully I'll meet her in person hopefully I'll uh meet you in person again we did meet at codie way back uh the the very first codeland conference uh yeah so I'm curious about like what got you into software development uh because you worked your way up through the entire software development ecosystem you were like an architect for a while and now you're managing other developers in addition to doing development yourself uh like what got you into programming and do you remember around what age you started getting excited about programming I've told this story before when I was 11 or 12 they brought a Apple 2 to the to the school and it this was a time when an apple 2 was probably $3,500 mhm um this is big money and there wasn't an apple two like for each classroom there was one for the building so there wasn't we weren't a school that had a lab this was not a school with money uh so there was this one computer and I I had a knack for that computer I don't know why it just it made sense and I opened it up and I looked inside and I started to figure out what was going on and Mrs Hill maryan Mayfield Hill rip was a uh my fifth grade teacher and she allowed me and my dad with a deal from the principal to basically steal the LA the the machine and take it home on Friday night uh he would back my dad would back his pickup truck up against the building and we would borrow this machine as long as it was back by Sunday night and that that was an opportunity to use this machine and take it home in a in a in a time when that machine was worth 10x what the car was worth um but I spent my weekends on that machine and then we my dad had another car which was a a blue 1972 Ford econol line van MH and I was sitting out in the front of our house and one day I came home and the van was gone and I went inside and I said hey man where's the van and and he said we bought a computer at Sears we got you a Commodore 64 it's apparently the big computer that everyone's talking about these days and I still have it in the garage I can go and get the box and show it to you it's got Sears tape Sears used to when you buy something at Sears they would have this tape that they would wrap around it like like um like a yellow police tape and it said Sears yeah and it would it would prove to you that you bought it at Sears and then when you go out the door they know that you you know you didn't steal the thing cuz it's got the taper around it so I've got that that computer in the other room and I've actually got a comer 64 right here all right and I'll just uh narrate uh Scott has gotten up out of his seat and whoa it's it's built it's the model that's built right into the keyboard This is called the bread box or the bread bin rather pardon me then I've got a fastload cartridge to make it go faster that had 64k of ram I've got a couple of com 64s including an fpga uh reimplementation of a comer 64 which is a modern commer 64 they're making modern 64s in in 2024 yeah and uh and then I've Al this is called a 6502 uh microprocessor and I've I'm I'm building an apple 1 with a 6502 as a as a hobby project over here on the floor awesome so yeah that's where that started and uh and then I went and visited a bunch of schools uh thinking that I would maybe go to I don't know MIT or something fancy but I was not emotionally ready for that nor was I mature enough so I visited some schools uh and I didn't think I could pull it off so I instead moved into my parents garage and then I went to a a buddy of mine and I was like man I don't have anywhere to go to school I'm screwed uh somewhere in like April of my senior year cuz I had no plan and I uh my buddy his name was Jack Elmore started teaching me C and he taught me point in C and he said hey you know Portland Community College is doing a class it's the very first software engineering cohort at Portland Community College do you want to you and me will go there and we'll become the first the first graduates of software engineering at not computer science we should separate those two things and I ended up spending about 11 years going to school and I finished my fouryear degree 11 years later working at night 11 years that's a that's a substantial duration of say at Portland well one of the funny things in the US that maybe people don't realize is that when you are doing um a degree uh there's a certain amount of time that you have to get that degree usually it's about six to seven years so after seven years your credit kind of rots or expires so seven years in I get this notification from the dean that I need to take writing 121 again and and uh I'm like well this is English it's like writing 121 And I said can I can I give you some some writing samples can I how can I get out of this and at this point we you know I'm 10 years into my career or seven or eight years into my career and I'd already written books so I was like hey I could give you one of the books that I've written and that got me out of writing 121 I gave him like this rocks book I think it was like um I think it was access 2000 programming that I'd written like one of the Red Rocks books and then then other things started to you know like I'm I'm taking longer and longer and longer to do my degree so then um at this point I think it's 200000 I'm like eight or nine years out of school not out of school out of high school but I'm still trying to get my degree done so then I said well this's this new language called C that's that's that's Outnet how about I teach a class so I made a deal with the dean of the Oregon Institute of Technology to let me teach this class and I was the first nondegreed adjunct professor and if I kept teaching the class they would let me have my my credit not rought and then I ended up graduating uh 11 years later and then they gave me like a young professional Achievement Award because I was teaching adjunct uh at these these universities it was kind of cool that's really cool first of all it's wild to me that uh that like their weird kind of backward I mean what a punative policy for all the busy parents and other people out there that just don't have time to finish school I think most people don't even finish school within six years anymore uh so the fact that they if they still have that policy they need to get rid of it because well I mean I get it but I don't like it's like some things end like for example I'm looking at my degree every language that I learned other than c is gone every operating system is gone but so I get the idea like this information isn't modern but like writing yeah writing 121 like calculus I don't think that should rot you should be able to carry that around forever so yeah I 90% agree with you okay well uh so you were able to eventually finish your degree but by that point you had already started working in the field obviously you you were a published author in the technical book space maybe you can just briefly take us through some of your early roles and uh how you were able to get some of these obviously you hadn't finished your degree yet so you were able to get them without the degree in software engineering yeah that that's a tough one people when we hire at Microsoft when I hire people I honestly don't look at their their degrees the the phrase that we have is an is an analogy you can tell me if you like this or not but when you're putting together a basketball team you usually want to focus on height so I want to hire tall people I can teach them ball handling I can teach them how to dribble but if they're tall they're probably going to be successful in basketball that's a that's a general rule now there are some successful small small people in basketball but as a general rule higher for height so then the question is what does height mean again I'm saying that in air quotes with my fingers here when it means software it means that if the person has this if you get this sense that this person can do it then they're tall does that make sense yeah so like I don't like if you don't know C you know JavaScript but you get you get it you get computers this person's tall will teach them the whatever the other language is so if if you get JavaScript I can teach you Ruby if you get Ruby I can teach you C so the question is Quincy how do you how do you express to an interviewer that you are tall how do you express that you get it is it that you are a clear Communicator is it that you understand systems and how things plug together I really like this idea of systems thinking like like if we go back to our retro Tink call back um I probably couldn't code this right the per Mike who made the retrotink is clearly an amazing programmer mathematician but I understand all of the systems that make it happen and I have a general kind of I call it Swiss army knife level understanding which means that like the Swiss army knife is a great analogy because it's it's kind of bad at everything but it's also kind of like kind of good at stuff it's got like a tiny knife and a tiny scissors and a tiny you know tiny you know tiny tweezers it's not a a a a perfect uh at everything thing but it's got a real good General sense and it'll let you survive so I want people to become a Swiss army knife developer but if you have no concept of of like the scissors part you should probably learn a little bit about scissors you know there's like a saw in here there's like there's like pliers nail Army knives like there's a bunch of cool stuff in here you know what I mean this is the Swiss army knife that my father gave me at age 12 this is the original if it's on my desk to remind me of that stuff so while I can't tell you and explain the code behind this upscaler I get all of the concepts from the electrons that are on the wire all the way up until it goes out to HTMI and I have a 70% understanding of the system in which it exists yeah and you do too CU I could tell you were nodding when we were talking about it yeah I yeah I kind of get it in filters and how it works so if someone comes into a job and they have a sense of like well here's how a website is generally architected here are the languages that are involved I learned JavaScript at free code camp but I understand this website uses python or C but the pieces are the same yeah oh I drive a Toyota well that's cool I drive a Honda that's cool we I can teach you how to drive Toyotas does that make sense does that analogy work yeah that works uh so to what would you attribute your systems knowledge and like how did you build that up uh professional curiosity like how can you not be excited and that's a part that I don't know how to teach but I want people to think about that like um you know my my 16yearold wanted to understand how the uh the the faucet at the at the um airport knew that his hands were underneath it that's a whole interesting conversation about like what is it using is it using IR is it using radar are what's a motion detector like is the thing in the faucet at the airport the same as the motion detector that like detects the door at Target then you start having conversations that there's a person and this is fascinating to me Quincy there's a human being who designed the thing at Target that opens the door is it a plate in the floor like that's an interesting question like when you stand it opens the door is it a motion detector some places it's a motion detector some places it's a button some places it's a plate in the ground and then you can start talking about how do you solve that problem yeah for the people yeah and then you just can't stop thinking about systems yeah and and so do you often Ponder those things like when you you know are just doing something let's say you're uh opening for lack of a better example this just came to mind let's say you're uh you're putting your luggage onto the radiator thing in the airport and it's going through there and it's SC yeah yeah I mean you find yourself often pondering those things oh yeah like every every freaking day how can you not like I was at McDonald's earlier I'm holding up my my $1 McDonald's Diet Coke who wrote the touchcreen with the button like someone designed that someone drew a picture of a soda bit map PNG I don't know someone McDonald's is out there if you go to McDonald's and there's like when you're going through the drivethru there's a sign on the wall with like a picture of like some food there was a team that took a picture of that food like a photographer and they like it's all fake and it's like not really mayonnaise right but there's a number at the bottom look at the lower right corner or the lower left corner of the McDonald's sign it's like 0104 06 someone in McDonald's made that number there's a marketer who's like okay all the McDonald's have to swap out for the new cardi B burger and that one's got this number and then there's a person in Photoshop who drew that there's a printer who made it um there's like a whole system well at least one of the devs who worked on the McDonald's touchscreen UI went through free code Camp cuz I saw them tweeting about that the other day that's what I'm talking that's fantastic right yeah like this is the remote control for the Retro tin and like you know you like if I hold that up in my um uh with my camera and like try to here's my here's my camera and you can see me on the camera and here's the remote control and like you can kind of see the light in behind it because it's IR yeah like that kind of stuff I just can't not I can't see the IR I can point it at my eyes but if I can point it to the back of the camera I can see it like you know and then I can spend a whole weekend trying to figure that out how do you teach people that I tell them that it exists and then you let them feel like you too can take apart the toaster how did they make I want warm bread let's go learn about how toasters work yeah yeah I used to I spent a great deal of time going down like rabbit holes on like how stuff works.com back in you know the early 2000s and learning about how W pools work at the water park uh you know learning about uh how you know hydroelectric dams work I mean the world is filled with engineering and a lot of that like you can draw from some form of problem and its solution you can kind of draw analogies that you can use and Implement in code too so I don't look at it as time squandered following Flights of Fancy I often do have like analogous solutions to problems and and sometimes it's helpful when I need to communicate like a a potential approach just being interested in the world around me yeah it sounds like you're intensely interested in the world around you I am and I also like I'm overwhelmed by the layers of abstraction right there's layers on top of layers on top of layers uh this um an interesting an interesting thing happened this weekend if you don't mind like a little story okay so there's this guy you can Google with B for named Ray aie Ray Aussie invented Lotus Notes he's a famous computer scientist and he was the CTO of uh of Microsoft for a number of years and uh this this young person on online is really interested in old versions of Dos dis operating system the operating system that came out before uh windows and dos uh came out during a time was another operating system called CPM and then IBM went off and made os2 operating system 2 and os2 and windows were like competing operating systems so Ray Aussie has has this computer museum at his house you can find video of his computer Museum online and the young person was talking to Ray azi and found they found a copy of Doss that has never been released and it was like on a disc in Ray's you know Ray's uh office so I talked to Ry and he he sends me the discs because I said I'll I'll take I'll see if I can get the material off of the discs so these are on floppies so I'm holding up a FL floppy 5.5 this is a 5.25 in and4 in floppy and this is a three this this floppy has 360k that's one frame of one of our videos like take a screenshot that's bigger than this floppy right and you can see it says DS DD doublesided double density they're singlesided floppy single density floppy so you would have like 180k floppy a 320 a 360 we were eeking out extra extra bites on floppies and then you'd get up to a 1.2 megabyte floppy which was just immense who could who could have such huge amounts of data quy oh my God right and then uh 1.44 Meg was like the max but this was a 360k floppy so how do you get data off of a 360k floppy in 2024 my friend what do you think Pro I mean probably just go get a really old drive or did they all rot do any of the driv still work so you can get a really old drive but really old drives don't plug into modern machines so then a listener or yourself might say well just just and saying that in any report just you know get a USB floppy well USB 5 and A4 inch floppies do not exist it's not a thing uh there are uh 1.44 or 3 and a/4 in 3 and 1/2 inch floppies rather you can buy a USB floppy but there's no way to to do that like modern floppies are um not a thing especially on on real floppies because this is literally B bendy plus um we we just assume everything works because we plug our USB PL you know you take a USB and you plug it in it works Mac speaks dos and dos speak you know like everyone speaks the same thing there are file systems there's EXT fat file allocation table there's fat 32 and there's NTFS new technology file system but for the most part you plug a USB in and it kind of just works right right back in the day there were 50 different kinds of file systems and just a bunch of competing standards every company was kind of like trying to make their own proprietary ecosystem everybody wanted to win and then fat kind of won but that's a file system that that's like a way to do directories and layouts and stuff like that but it doesn't describe the actual how do you get the magnetic signals onto the disc and where do those sectors go and this thing is literally spinning rotating and there's a head that's floating over it all of those decisions that's even lower level like the layout of that system so if uh if I went and found like a I could find a Windows 95 or or Windows 3.1 machine like go to like free geek or one of these older machines and try to find one then I could copy it onto the machine but then how would I get it off of that machine because those machines aren't on the internet and they don't have USB could you could you like stair step it up different Generations like maybe move it to 3.5 and then move it from the 3.5 to that's exactly what I was going to do my idea was get it onto like an old Pentium or an old 486 go from three 5 in to 3 and 1/2 and then from 3 and half to USB and then and then go off um I so I went around though and found that there is a machine there's a there's a board a custom board called a grease weasel and this is a person who has made an open source and open Hardware standard grease weasel with a z and this is a USBC to ribbon cable that you can then and I went on eBay and I bought a a drive however ever the part that I think is so fascinating about this is that this doesn't just turn into like the a drive or the B drive it allows you to use a python script at the command line to rip down the magnetic flux signals directly off the dis and put it in a binary file called an IMG a floppy Drive image you know people expect today to plug it in and it's going to mount and I look I have a drive and I can double click but this is way way earlier these are dude these discs these discs are from May of 1984 yeah that's 40 years ago like so this is really cool to think about if you think about systems and layers how long did it take to get us where I could take a USB and plug it into any computer on any operating system and see a text file we we we had to figure out text file um uh coding is it 8 bit asky is it seven bit asky is there line feeds are there Carriage returns what's a carriage why is it returning this like figuring out line to do with like slapping the typewriter when you get to the end of a line right dude look at this hang on okay okay he's getting back up uh for for those of you listening and that don't have the video he just happily kind of pranced off and now he's back and now I've got a typewriter this is a Lego typewriter Lego so like carriage return and Line Feed on Windows if you have a text file and you type and you press enter you get a carriage return in a line feed on on a on a Linux machine you get a Line Feed and on early Max you get a carriage return what's a carriage The Carriage is the thing that holds the paper on the typewriter it's being carried and the carriage returns after it's being typed on you go click click click click click and the carriage moves and then you have to push the carriage return which then goes Bing and Returns the carriage to its previous location and then the Line Feed moves the paper those codes were needed to move the typewriter so if you're learning git on free code camp and you're wondering why am I thinking about Carriage returns and line feeds in 2024 it's because 50 years ago they were needed to move the paper on the printer and honestly it goes back almost 60 or 70 years yeah I mean so many of the systems we have in place today are just the result of Legacy like the I've heard that the width of Roads or of railroads is because that's how wide Roman roads were 2,000 years ago so they just even though it would probably be better for the railroads to be a little bit wider so they would derail less often that was the standard and you know it was too much work to get people to adopt a whole new standard so they've just had the same standard in place for 2,000 years so I went to my buddy my buddy's house house and he had a Pentium an old Pentium computer and we loaded up a copy of Dos 6 uh from the mid I want to say 1989 1980 1990 and we copied um this onto an uh onto an IDE I think it's integrated Drive something IDE uh we copied onto a an IDE drive with a compact flash card apparently compact flash is the bridge I was thinking USB I was thinking floppies but compact flash or CF cards that you see like in a big fancy camera those are the best cards there are because there's like tiny versions and there's like 64 gig versions and he uses compact flash to move his things around and we recovered the data off of those 40yearold discs that Ray Aussie gave us and now I'm going to work with uh Microsoft and IBM to try to get the the data that is on those discs from Ray Aussie's uh garage and have that open sourced that's really cool so you're participating directly in computer history like you go to Silicon Valley uh Mountain View the Computer History Museum which I went to earlier this year uh and like you're one of the people that is kind of like playing a small part in helping preserve and uh discover like different quirks because everything was moving so fast things were happening so fast right said he wants me to talk to the Computer History Museum so I want to frankly if I can someday I want to fly to Ray's house take my buddy uh with me and we'll go and like dump everything out of his garage because that's that's that's important history so that actually is another call back to like this your your interest and my interest in Retro Gaming preserving and understanding history matters and if you are a person who does free code camp and you maybe you're an emerging engineer or you're a career switcher or you're a young person who's getting started knowing a little bit about the why you don't have to know all this stuff you know these are two weirdos on a podcast talking about old stuff but like just a little bit of like read a Wikipedia page Ah that's what carriage return is didn't know that huh you would be surprised how often little weird stuff comes up oh why is this thing that way why is HTML like this JavaScript why does JavaScript suck because that's what happened because Brendan wrote it in a weekend and now it's the language we have right those little bits of History uh will go will make you go hm ain't that a thing yeah well you're a big advocate of like staying humble and and just learning about the world around you not presuming uh how have you cultivated those faculties like uh I guess are there any things like any humanistics or or general rules that you apply to like guide your learning and how do you I guess how do you know when to stop learning and stop going too deep in the rabbit hole because you've got to go get some of the work done that's a good question I think when I get a headache that's usually a time to take a break you know what I mean like you can't know everything like I like I go to my I went to my buddy Jeff's house and like he was helping me figure this stuff out and like you I'm a pretty smart guy like I'm like a like a seven and like this guy's freaking nine or 10 like I just he's just vibrating with knowledge you know like when you meet someone who's just so smart it like it must hurt to carry that brain around you know your back must hurt from carrying your giant brain yeah um it's always cool to hang out with and surround yourself with smarter people because they'll make you better uh but I know my limitations you know like I can solder but I'm I'm not really good with an osilloscope like I can when they say full stack engineer we always joke about like how far how far down do you go do you make your own chips do you make and design your own chips do you smelt your own Iron you know what I mean like are you going to go to like a Renaissance Fair get a big rock and turn it into a chip like how I just wanted to say hello world right like I went to free Coke Camp I want to say hello world but did you did you find a rock like and smell you like yeah how what is a full stack engineer anyway you know yeah I mean we we kind of have to practically draw the line at okay you know how to use scripting languages operating systems database Version Control these kind of more contemporary tools but you know I always tell people like it's it's like an ocean history systems knowledge things like that you can absolutely explore it all you probably have time in your life to become very learned about these things but but for most people there the Practical reality is they want to be able to get a job as a developer exactly so finding that balance that's a great point when do you stop when you don't think it's going to help you find a job yeah and so that's a good balance yeah one of the things I'm curious about is like how you got your first job in Tech especially not having a University degree living in Portland which you know is a city with a lot of industry but is not historically like Silicon Valley or Seattle or Austin Texas or or I guess I should say Dallas Texas since we're talking about the old the old Texas silicon Prairie right Portland Portland in the 90s had pretty decent Tech like I say tetronics was there Nike was there intel was there oh okay I didn't realize intel was there yeah yeah Intel is a huge huge Intel campus just like down down the street um but I ended up working I think my first tech job well so I had a little tiny business though because people would carry before before the cloud people would carry their homework around on Diss and you'd have a disc and then you would end up losing your homework and there was a program called disk doctor that would go and you know rip your it would recover your deleted homework so I would charge people five bucks to run disk doctor on their discs and I ended up calling that company tweak computer support and you can go and find um mouse pads and business cards from my my company and then I made a bulletin board which was a pre interet place that you could call in and leave messages for your friends and I had tweak computer support BBS bullettin board system yeah that was all like done in my parents garage and those were like registered businesses when I was like 15 or 16 so that hobby work that just weird stuff people don't give themselves credit for not being for being able to put that on their resume like if you made your Church's website or you made an app for your kids Little League that's resume you know you do a you do a thing for free code Camp you do a certification that goes on the resume you know there's a problem there was a guy at uh at Quiznos small business owner I would go to quos to get a sandwich and he wanted to be able to take orders over the Internet so I made him a internet ordering system because he's just a small business owner like Quiznos is a franchise but I solved that put it on the resume you know what I mean like those little moments all add up and then being able to have stories so a tutorial that you did a little problem that you made a little funny robot all of those things are the stories that build up who you are so that when you go to the interview you can talk about those things and you can you know come off as somewhat credible so I got an internship at a company called Chrome data that did um make model style car data and you would call Chrome data and say I want a Carfax and then we would go and generate a Word document and then fax it to you I built that and I think they were paying me 10 bucks an hour and I remember sitting at at at Quiznos uh asking my boss for a $2 raise to get from $10 an hour to $12 an hour um and I was doing work in C C++ and then Visual Basic 3 at the time this would have been like 1992 or three yeah wow Quiznos I love Quiznos but they don't have any here in Dallas in fact I've heard the quiz nose kind of like fell off so to speak uh but that's so cool that you were able to create uh a system because you know those franchises like they don't necessarily get the best support from corporate and to a lot of maybe he requested to corporate hey can we have an ordering system and nobody listened yeah at that time uh he was a it was a it was a guy who poured his entire life savings into a sandwich shop I'm a big fan of small businesses I know you wouldn't think of Quiznos as one but like franchise owners are small business owners so I always befriend the people at the shops and try to help them with whatever so uh I did a lot of menu I did menus at Ethiopian restaurants they needed like cuz Ethiopian is a really interesting language and they have their own their own character set and their own font so he had been writing the menus in English on like word and then in pen drawing the characters I was like no we can solve this let's let's find a font you know what I mean like little problems like that all add up and get put on the resume yeah that's cool so you were basically like kind of like the the Swiss army knife kid around town who would just like did were would business owners talk to one another would they be like hey just call and Scott he could probably figure it out like yeah that that that actually end up happening like even even now at like people will just there's a guy I've been helping I don't even think he knows that I'm a VP at Microsoft and he'll just text me and be like the printer is not working and I've been helping this guy and his family for like 20 years so I'll just go over and I'll just like fix the printer that's cool you know what I mean he he's the this this nice young young man works at Microsoft well obviously like I I want to get through the autobiographical stuff because I know there's like so many actional insights we can pull out of you uh as you and I are both fans of saying I believe because I've listened to a lot of episodes of Hansel minutes you know people's advice is very much informed by their own lived experience who they are uh you know how people treat me is different than how they're going to treat you know a person who just came from a different country and has limited command of English or something like that right or uh all these different dimensions I'm curious though like what your progression was your career progression so you went from being kind of Mr Fix It like uh technology like systems design kid yeah kind of an IT support person for for the neighborhood yeah yeah so that's a great point I like that question so yeah your it support for the neighborhood you're asking questions about toasters and printers and wires and like like you know I was holding up this this ribbon cable before for the floppy like this was a time when you could when each one of these wires had signal on it that you could take apart and look at like you could see data we're not we're not in a time right now where you can see data moving from place to place it's all kind of in the air that's what they tell you but in fact you can get a flipper zero or you can get a you can look at signals like I was a big believer from early on that nothing is invisible so right now people you know you you push a button and a miracle happens or you talk to Siri and a miracle happens and we believe that these things are invisible systems thinkers and myself try to remind ourselves that there's there's visible observable signals whether they be in the air or on a wire on a piece of silicon or in an application like Postman that lets you look at HTTP or when you press F12 in Chrome and you're like oh look at that I can see the the source code that's a reminder that nothing is hidden from you so I think that that was built up by fixing floppies and plugging in network cables and then building my way up to um going to PCC Portland Community College learning how to write hello world in C with Charles pet solds Windows book and then going and presenting that in a somewhat comp competent this kid's got Moxy kind of a way so like enthusiasm can't be faked you know what I mean try to truly be gen you genuinely uh excited about what you're doing and people will be like ah yeah this I like this kid my my nephew uh is 21 he's in the middle of a degree in electrical engineering and he got an internship just based on wow this kid's excited and fascinated about about electrical engineering and systems so you know interviewing well means practicing he did a lot of practice interviews I did a lot of practice interviews um I think it can be really challenging a lot of people feel like I don't interview well yeah because you just over get over over stimulated overthinking so I try to you know teach my kids my young my young Sons 16 and 18 to talk to humans because that's a muscle like being an introvert's a thing you know you know but you can train yourself to also be an introvert who can turn on for a half an hour and make it work don't you think like interview skills I think are not talked about enough yeah um I I almost feel like you know as somebody who I guess identifies as an introvert myself like extroversion is a muscle and uh you can build it up and and you can go to that party and you can be uh you know an interesting interested person for two three four five hours and you gradually build up to that over time and then you can recharge you can just go you know watch your reruns of like 1980s TV shows and read old books or play retro games do whatever it is that you do when you're by yourself to just decompress and and uh I guess reenergize so exactly yeah that's that's good advice I want to talk a little bit about your kids if you don't mind me prying a little bit because you're a dad I'm a dad my kids are exactly 10 years younger than yours I've got one with six and one with eight um what are your kids into and like how active have you been in trying to encourage them to learn about technology versus just letting them explore for themselves they are not interested in computers uh which is fine they are certainly competent users but you know the 16yearold is into football and he's into business he's got a small business um and the 18yearold is into comic books and art and neither of them have any interest in computers and I haven't tried to fo them foist it on them I haven't tried to like force them to do it because it's just not their thing yeah yeah I'm similarly like my kids are like too into or my daughter's too into computer she'll like grab my laptop and like start googling things uh and it's kind of terrifying so I have to like change the passwords on all my computers to keep her from like using my computer secretly um but yeah I am curious like what are the main things that you've tried to impart to them a as a dad like in terms of preparing them for the world out there because you've taken somewhat of an unconventional path that worked well for you and and similar for for me uh though I always tell everybody don't be a fool stay in school I myself kind of w was a fool and dropped out early on and uh I I don't think that that was the smart call and I think that that like I kind of succeeded in spite of a lot of my early mistakes rather than thanks to my early mistakes um are there any kind of like General lessons you've tried to impart to your kids so far that's a tough one I think it's challenging because when you have succeeded in spite of something in spite of going you know like I like you've just pointed out that yeah you dropped out and I dropped out and I tried an unconventional path kids can use that as evidence of like see you know I don't have to do this the right way I think that school college exists to learn how to learn that's all I got out of college was I learned how to learn um if you feel that you can learn without you know college then that's great you've got that skill um it is however a a series of of hurdles that people like you to go over and at the end you get paper so certifications are a way to assemble a collection of paper that people will respect and some papers people respect more certainly if you go to Harvard or you know MIT oh my God that paper has letters on it that matter more than that other paper so MIT matters more than PCC right in my case um 10 years into it depending on a lot of things in your identity uh you're the the school that you went to matters less you know 10 years into it people don't don't ask but people do get master's degrees so that they might be respected people get phds and remind people that they have a PhD so that they might um be be respected and listened to and that's that's valuable it's complicated it's complicated like you made the point out if you don't speak English or you're an underrepresented group you might feel more pressure to get a degree so that people will respect you and as someone who's an old white dude people are going to go and say I don't even know where where Scott went to school I just assume he's smart cuz he's been doing this for 30 years right when in fact I've been coasting on charm for decades Quincy um and you know someone's going to figure it out that I have no idea what I'm talking about do you do you in all seriousness do you feel like impostor syndrome at this point still in your career oh yeah um yeah God I've written I've written about it it's i i i oscillate Wild wildly between I'm amazing and they should pay me more and I have no idea and I just want to see if I can still have a job this week like that's that's my career is just oscillating back and forth between I'm useless and I know lots and they should they should make me the president um but like you know this floppy thing like there's a there's a class of people there's a there's a there's an age of people where I can blow your minds with the amount of information that I know about computer history and then I go to my buddy Jeff's house and he completely blows me away with how much he knows about this stuff like I thought I was a nine out of 10 and I met Jeff and now I'm a seven and he just he's it's a greatting on a curve like you know if you're in a classroom where everyone kind of sucks and you're the a student you're like I'm amazing and then you meet an actual a student and then it's like wh we're just going to go and reset the curve we've we've now met someone who's really tall who can really dunk yeah and you know and Jeff can dunk so like I was like Wow and I'm just so I'm what do I do do I get intimidated no I'm going to just absorb everything I'm just going to suck as much information out of him as possible so that I might become better yeah I 100% that's how when I meet somebody who I think is smarter in an area than I am I go full like suction cup mode I'm like let me have your knowledge right feed me your brains so when one of the things that is different about you and I growing up and and even though you know we're maybe like 10 years apart in age uh I was born in 1980 um nowadays when you grow up you're not competing with the other kids at your high school everything everyone everywhere on the world is on this this big world stage like social media or someplace like that and so you don't have a chance to really build up your confidence like being the smartest kid in class when you know that there are people out there that are dramatic smarter than you are and probably dramatically more successful than you are and better looking and and uh they have better singing voices and all these different attributes that you might compare yourself to them on do you like how would you prepare your kids for a world where you know it's almost impossible to escape comparing yourself to the very best in the world it's no longer about the like Regional championships it's like are you in the NBA or are you not you know um what is it they say comparon is this comparison is the thief of Joy it just cannot be overstated like like the you the algorithm is designed to make you feel like crap right so if you go to Instagram and you get energy and your Instagram and your Tik Tok algorithm is set up to make you feel inspired I have curated my Instagram to be a positive thing but 90% of the time 95% of the time it is is designed to make you feel bad about yourself so why do you keep going back there right like you got to stop comparing yourself to other people and you got to start comparing yourself to yourself yesterday yeah that's the only comparison that matters are you better than you were yesterday good job keep doing that but like there's always going to be some you know that the worst thing man Forbes 30 under 30 yeah I think that thing is toxic I don't like I don't like that ages that they apply to that because it just what purpose does serve other than to make people like in their 40s feel you know like they haven't accomplished much in their time you know I guess maybe yeah yeah um so let's talk about Tik Tok because you have used Tik Tok quite a bit it's a platform that I like was very skeptical of like to this day I don't spend any time there but uh you know you you you're a Creator and you go where the people are and like how do you approach platform like Tik Tok yeah um it's about understanding the algorithm is there uh and it is doing stuff um but it is not its default state is not healthy but you can make it a healthy place I I find Tik Tok to be a very joyful thing um I I have got mine is full of fun things and dancing and education and Woodworking and and it's just a joyful place but it took me like 4 days to get it healthy for me if that makes sense and I think people a lot of people aren't willing to as you probably shouldn't have to to uh to put in that work but but once you do it it is really really cool it's a it's a really fun Joyful Joyful thing yeah um and it also represents all of the diversity of stuff that I'm interested in you know I uh I have I'm I'm not just a programmer I'm not just like a a techie you know like there's like like mine mine has excitement around Beyonce's album you know and it's got uh indigenous dance and it's got uh like I said woodworking 3D printing like all the things that I'm interested in are represented because I have liked the things that I like and I have consciously um hit not interested yeah in the things that I don't like and that's that's a big part of curating your space block lock and move on don't let the haters you know tear you apart and don't let it get you down and if something is getting you down get rid of it yeah that's it's a good approach remove it from your life like don't let random internet people who don't love you ruin your day yeah I mean it it a lot of people created YouTube accounts like 10 15 years ago so they may have forgotten that early on like if you go create a brand new YouTube account it's going to be people like who can stop touching this million dooll car like get they win the cars it's it's it's candy versus you know it's calories versus um uh what's what's the thing about like nutritional value you know what I mean like calories yeah and there there's a lot of toxic stuff that'll get recommended to you as well uh but and and I think that's every platform that's just recommendation engines that probably in my humble opinion as a nons sociologist non Anthropologist like that probably has something to do with like how a person who's very late like tired at the end of a long working day and is just looking for some quick entertainment like it probably quickly the recommendation engine probably devolves to like the lowest common denominator so to speak it's not looking to teach you about engineering right he not looking to teach you about uh the history of some technology or to appreciate like art and music and things like that it's probably just looking to get some quick laughs and help you kind of tune out from the uh you know roughness of your day for most people life is not just like this this amazing experience where they people are cramming into the Subways they're cramming in buses people are doing subsistence agriculture all day back breaking work they're working in factories maybe they go outside in the air is like unbreathable right uh there are like all these different you know forms of adversity that people experience and a lot of people just want to escape but if you go to the app it's probably just going to try to give you escapism by default it's not necessarily going to give you actualization which is what you really want right uh it's not GNA give you path to enlightment so anyway sorry for like the long tangent on that but I I think it's really interesting that you've taken kind of like the toxic nature of these recommendation engines uh of these algorithms and kind of like figured out a way to like course correct them yeah if you know what what it's doing and what it wants to do then let it feed you fun things and let it feed you happy things yeah but also I have screen time turned on I'm not joking I've got like 15 minutes of screen time in each of those things and I have to put in a code if you know to uh to get more because I want a reminder like I just lost two hours yeah it's the losing time part that's challenging you don't want to lose a huge amount of time yeah especially from like candy yeah especially while your kids are still living with you and uh you could be spending time with them right priorities that's all about prior and that's really the biggest part about adulting the biggest part about getting into Tech biggest part about all of this stuff is uh are you spending your time doing the things that you should be doing yeah are you spending the time thinking about the things you want to be thinking about learning the stuff you want to learn you've got to you've got to be intentional yeah and intentionality is a huge part of adulting yeah having a plan like you discussed earlier early on you didn't have a plan I didn't have a plan either uh and now it sounds like you got a pretty cohesive plan I want to acknowledge though having a plan is part of it but also acknowledging that I have a direction a general sense of what I'm doing but not a plan yeah I mean like none of my career was planned paying the rent was the goal and paying the rent is a righteous and valid goal yeah 100% getting like if you don't have to be passionate about computers you can just want to have a good job yeah that's okay and we should make sure that you're going to find people online that are going to say if you're not working on software 24/7 if you're not doing it as a hobby then you're not a Craftsman you can just want the money yeah that's okay don't feel sad does that make sense yeah I mean there's a lot of Gatekeepers out there but those people generally are coming from privileged positions where they've had the luxury of getting really into something for the sake of their own personal interest in it throughout most of human history you know you're a farmer are you really that interested in farming some people are I know people that literally buy like Farm simulators and they dream of eventually saving up money to buy acreages so they can be Farmers but I don't think many farmers that are actually out there doing that are that passionate about it for them it's a means to an end you know it's a lifestyle that they Embrace but they'd probably be excited doing something else as well and that's that's totally cool as well and and again you can also switch careers another reminder yeah you know my wife uh has an MBA and did a nonprofit for years she was a finance person and when she was 43 she just woke up one day and she's like this not fun anymore I'm going to do something else yeah so she decided to become a nurse she went back to school she got her degree she became a a 43y old brand new nurse and now she's been doing it for like 10 years and um uh she's been she just the last couple of weeks she's like I think I want to get a PhD so in the next 5 10 years we're going to figure out some way to make that happen very cool you don't have to pick one thing you can always do something else so I I if this Microsoft thing doesn't work out maybe I'll go work at ChickfilA or like you know Jack in the Box I know I'd be a good manager yeah yeah I always entertain fantasies going back to running ESL schools because that's what I did before I learned a code that'd be cool so I would be remiss I know we only have a few minutes left I I'm gonna fire off some rapid fire questions because speed yes dating let's go so uh is c a good first language for a beginner to learn like do you think learning C learning uh the net ecosystem is that a good first language or is would that be like a second language and what would you recommend um I think that it is a perfectly cromulent language uh I like to tell people that they should learn two languages JavaScript and a backend language now that backend language could also be JavaScript so you could learn two languages just by learning JavaScript but that means you could learn JavaScript in Python JavaScript in node JavaScript in go rust llang C C++ C I think C is great it's a language that I picked it's my favorite language makes me happy it lets you write websites you can do things in JavaScript like Blazer B a z o r you can write websites you can write uh raspberry pies can run uh C so yeah you can actually go to do. NE the word dot.net and right there on the homepage you can run C in the browser and try it out see what makes you happy um and then it doesn't preclude you from learning another one so yes good good Lang which to learn awesome and if someone's let's say they're already like a seasoned Java developer or they're a season Ruby on Rails developer they're used to doing full stack development and they just started a new job where they're working with the c ecosystem or they're starting a new project and they are interested in potentially using C uh as their like tool of choice for building this entire you know sophisticated app how would you recommend they first get started like they've already got a lot of knowledge that they can potentially transfer over if you're like a Java programmer or you're already in it um I'm a big fan of just making a portfolio website like make a homepage make some brochure make a business card but the other thing to make you feel more um more passionate uh is to pick a problem like uh you mentioned farming uh a buddy of mine's got a little square foot garden out in the back people can actually go and Google for Hanselman square foot gardening for programmers I actually have a whole article about programmer minded square foot gardening and um but they they they got a Raspberry Pi and a soil sensor and they connected it to the WiFi and they made a little web API to tell them whether the moisture and the soil was a certain level that's a thing um I made one that told me if my garage door was open just wrote a little C application to tell me if the Raspberry Pi's orientation was like this because the garage door goes up and then rotates solve a problem and do it in C and that that's a good way for like a Java person to to go and do something like that awesome uh this question comes from Gavin law Big C YouTube creator also works at free Cod camp and teaches some of our courses uh he say he asks people often ask whether Blazer may go the way of silver light and eventually no longer be supported by Microsoft Gavin says he always replies that Microsoft is investing heavily in Blazer but it'd be great to get confirmation of this from you Scott confirmation that Blazer is a good thing or that it's like priority I guess is what he's trying oh yeah Blazer is great 100% it's absolutely a priority it is a really cool front end that lets you write basically websites without learning JavaScript like you can do interactions you can you know make uh grids and tables and sort them and interactions and and you just write it like you're writing a Windows app the Eventing and everything is handled by Blazer so you get cool interactive websites without the stress of JavaScript awesome and then I want to I'd be remissed for not asking you about Microsoft learn this massive library of tutorials that you all have over there oh yeah which we leverage heavily in the C certification uh the the foundational C uh hopefully the first of many C certifications that we're able to publish with you all um what is your level of invel of involvement in developing these uh tutorials and like how many people are on the team like developing these because it seems like an incredible Corpus of tutorials I'm not directly like so Katie on my team helped but like there's a whole team of people making cool uh the cool stuff like this is all uh Beyond me like there's a whole org I'm a partner for the learn team so I'm interested in C and people being excited about C so we partner with the learn team they make certifications they develop courses they revise the courses they make 100 level 200 level 300 level uh courses I don't know how many people are on there many awesome final question an area final question do people make their own luck oh so I don't think people make luck well this is a tough question so I can make luck for other people luck is a a formula which is being prepared Plus an opportunity you can set yourself up to have an opportunity presented for you by changing your position where you are virtually or physically you can be prepared for an opportunity to present itself but you have to have the two things together for example um you could work really hard and learn uh a programming language but then if you sit at home quietly and never tell anyone that you learned it you will not get a lucky phone call it's not possible because there's no opportunity that's going to present itself but if you learn JavaScript at free code camp and then you're sitting on the bus and you start chatting someone up and you find out that they are they own a company and you happen to be ready because you've been practicing then you've now had an opportunity plus being prepared and oh my goodness what a lucky thing that I met so and so and now I have a job yeah right so I can create luck as a person who's more senior by making opportunities so I have the ability to invent and create opportunities and I have the ability to shine a light on people so rather than mentorship I can create sponsorship opportunities by retweeting someone's project giving them a chance to speak on stage and that makes the formula of luck more easy for other people so you who are listening think about ways you can be prepared and think about ways you can either put yourself in a position where an opportunity presents itself or if you are in a position of some power if you have level privilege then how can you uh create opportunities for those who are prepared to create their own luck amen kind of a nuanced answer yeah no it's I I love it uh Scott it's been an absolute pleasure checking out so many of your cool retro Computing projects uh hearing of Your Love of retro video games uh I hope you have a fantastic day and to everyone who uh who enjoyed listening to Scott be sure to check out some of the links I'm going to put some interesting links in the show notes and until next week happy coding