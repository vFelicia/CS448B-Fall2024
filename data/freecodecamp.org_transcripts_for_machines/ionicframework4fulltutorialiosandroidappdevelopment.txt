welcome back everybody this is waze back with another video on the channel which is about mobile application development so we're going to be using ionic framework so one code base can be used to build mobile application for ios android and also the windows platform so this is a website of the framework ionic framework.com so this is what i'm gonna use so yeah let's get started and i'm using a mac os even if you're on the windows or linux uh that doesn't really matter this is a cross platform framework use node.js and uh yeah so first thing we're gonna do is we are going to open a terminal so if you are windows please open command prompt and i'm just going to make this a bit bigger and a bit bigger so first thing we need to have two things installed first of all we want to make sure we have installed node.js let me take you to the browser and this is the website for node.js so that's nodejs.org now it doesn't really matter which version of node you guys use either using 8.12.0 or 10.11 that should not make any difference but i will use long term supported version so lts stands for long term supported so i'm gonna be using eight point twelve point zero so basically you wanna install node.js by simply click on that it will start downloading the in installer file on markets.pkg file on windows that's gonna be exe file so just download the version of node and let's go back to terminal i'm going to change node dash wii it'll tell me what version of node i'm using so as you can see i'm using 8.12.0 let me check the npn version npn is 614.1 so we have successfully installed two things node.js and also npn npin stands for node packet manager which is a package manager use for node to install a bunch of packages that you want to use in your application so the next thing what we want to do is we want to make sure we install ionic cli so ionic command line interface it's really helpful to build mobile apps with ionic by just typing some commands on your terminal and it will do a lot of things for you so i'm going to go to developer and going to go to framework docs and here we're going to go to ionic 4. so ionic 4 is in beta right now but i'm still using ionic 4 because that's the future installation tab and i'm going to click on cli installation and here it's telling me install npn install dash g ionic so basically npn is a node packet manager install is a command dash g is a flag which tells note package and manager that please install this globally in your pc or in your mac next you want to go and start your application so if you want to use ionic 4 application you have to type this flag dash type is equal to angular so there is a lot of things that has been changed from ionic 3 to ionic 4. next we have a command to run application once you type this command in in cli it will create angular project using angular 6 and ionic 4 and you can run this same and you can run the application by using this command ionic serve next i want you to install one more thing called apache cordova so the command to install this is simply as npn install dash g cordova and if you're on a mac you're gonna have to type sudo so let's go back to the terminal and here i'll type sudo npn install g cordova and i'm gonna have to type password to install that in my mac the reason for that is because i'm installing this globally that's why it required the password so as you can see cordova is installed as well so now we want to check the version of ionic cli and the cordova so top ionic dash we will tell me okay i've got 4.1.2 cli installed and i'm going to check for cordova and i say cordova dash wii and that gives me the version of cordova i have installed which is 8.1.1 so at this point we have successfully installed everything we need to start building our hybrid mobile app now how do we start a new project so being in a terminal i'm gonna go to a folder which i will be using to create a new project so i'll do cd document and i'll say let me just see that's going to be hybrid mobile apps and here i've got one project i'm going to create another one so i'll simply type ionic start and now if i want to check what kind of project or what kind of template i want to use then i will to check how many projects are available so i'll type space dash dash list and that gives me all the templates available which i can use so i have a angular blank template angular side menu angular tabs menu ionic angular ionic angular which used the older version of ionic which was free so we want to use ionic 4 so i'll type ionic start and i'll say i want to use a tabs template and i'll flag it with type is equal to angular so press enter and it's going to start asking me what kind of template so i'll just say tabs and then i'm going to say okay it's asking me that integrate your new app with cordova to target native ios and android so first we remember that we installed corolla successfully now i want to type y and press enter and it's going to integrate cordova with my project so i can build those app for ios and android so ios basically don't understand javascript or let's say angular i was only understand objective c or swift so cordova is the is the guy let's say which will take your angular code and convert that to objective c so that can be run on ios or iphone or ipad devices and on other side angular understand java or kotlin so cordova support java it will take your angular base code and it will convert that code into java so you can run the same application on android as well and it's it's it goes similar to windows platform as well so now it says okay dependency is installed and it's asking me uh install the free ionic pro sdk and connect wrap so i don't have a paid ionic program so i will press n and press enter and there you go our project has been created so i'm going to type ls and i can see i have another project called tabs so to start the application i want to have to go inside that folder so i'll say cd tabs and one thing i want to mention here that everything is possible in windows and linux as well it's just basically i'm using terminal because i am on a mac and if you're using windows you use command prompt or powershell so we are in the tabs folder so i'm going to type ls dash l which give me a list of the files and folder that i have in the solar so i can see i have a source folder i have a config.xml we will go through all of these files in the next video but first let's start our application so i'm gonna type a command called ionic serve press enter and now it's going to open a browser which will bring us a new app and we can actually take this to to this uh virtual desktop so we could see that so now it looks like it's a web page but actually it's not a webpage it's a mobile app so i'm going to click on these three dots and i want to change this to developer tools and then we will change from here to let's say ipad pro or we can use this for ionic iphone 678 so now i'm going to close these oops i'll have to go back guys sorry my bad and i want to put this on the side so now you can see our app is running so we have a contact tab about home tab and so far we have this application now as i've shown you that you have to go to developer mode and then you will basically make your app look like a mobile app but there's another way that is possible so we're gonna go to terminal and i'm gonna press ctrl c to stop the server uh which run our application which was localhost 8100 so first let me clear the console and i'm going to type ionic serv press enter now it's going to start the server but dash l is basically is going to uh start our application in a lab mode so i'll type yes it's going to install ionic lab and then it will open up our server so right now it basically didn't open up properly because it hasn't installed okay so next page it's opening now 8200 now there we go so now when you type a lab which is basically a flag that make your app look like a mobile app so here i'm using ios and if i go right i can see the same app how it's going to look like in android so you can change or you can check apps uh side by side for ios and android so this is how you can see how my app is going to look like in android and how it's going to look like on is and believe it or not they have a support for windows mobile as well so now this is a windows mobile and which basically it's really poor it does not really uh show anything nice here so we'll just turn up because windows mobile are dying there's no more windows operating system for mobile anymore so we just target irs and android platform so now if you want to kill the server go back to terminal and then you press con control c to start the search to stop the server so there you go guys this is how you uh set up your environment for building hybrid mobile apps using ionic and cordova and also this is how you create a project and start your project and trust me it's really easy to build mobile application right now using ionic uh all you got to do is type some commands on the cli and that will do a lot of things for you we are going to take a look at how the file structure in our project is how to create a project also what are the templates available and a bit of about the ionix cli so i am in terminal i'm using mac that's why i'm using terminal here and if you're on windows you can use uh command prompt or you can use powershell this course i'll be using webstrom as an ide i think this is the best ide for web development and also for anything javascript related this is the web best id and also this is not a sponsored video uh so let's go and create a new project so in the last video you remember that we installed node.js we set up our imx cli we set up our cordova we create a project now let's go into details about ionic cli also the projects so when you type this command ionic start you are basically prompt with some of the options so you said okay what is your project name and then it's gonna ask you what kind of template do you want to use now there is a flag with ionic start and i'm gonna type space space dash dash list and then i'm gonna press enter now this is going to show me all the templates available uh for us to use so right now i'm gonna expand the terminal so you can see we have a blank side menu and tab template and the type for them is angular so whenever you see a type is equal to angular that means you are using that template with ionic 4 framework and angular 6. now we have older ionic framework as well which was ionic 3 which has the type set as ionic angular so if you select your project and you want to select template from ionic 3 and use the same structure which was in ionic 3 then you will use a type is equal to ionic angular now this is the latest ionic framework tutorial series which is ionic four so we're going to be using a type as angular so let's go and create a new project all right so now let's go and create a new ioniq 4 project using angular 6 so let's go to the terminal and i'm going to type ionic start dash dash list it's going to be it's going to give me the list of all the projects so i'm going to say ironic start and then next we are going to type the project name which i'm going to call it ionic for tute and then we need to define the uh the template that we want to use so let's say if i don't define a template and i just say dash dash type is equal to angular press enter and it's going to give me three options to choose from so there's only three options available right now the reason for that is because we already asked it to create ionic 4 project and ionic 4 only has 3 template blank side menu and tabs so let me prove my point by pressing ctrl c and getting out of this command i'm going to type ionic start and then we say ionic for tute and then ty we said that is we go to ionic dash angular press enter now this time it's going to give me option of about 6 template because this ionic dash angular basically creates an ionic 3 project which has about 6 templates to choose from so let me go back and press ctrl c let's clear the terminal and i'm going to type ionic start and i will name it ionic for two dash dash type is equal to angular and then i'm going to choose the blank template and next question is asking me is about by targeting ios and android so if we are creating an application to publish on iphone or android we need a cordova so it's saying basically integrate a new app with cordova to target native ios and android so let's press y and press enter now it's going to go and download and integrate cordova into our application and it's going to take a few seconds i'm going to pause the video once the project is created or if there's any question that come up i will let you guys know during the product creation uh the last question it would ask you is about ionic pro sdk ionic is the open source project which basically great to build your mobile application using angular uh it's fast but also they provide some sort of pro services so i'm going to take you to documentation and here it says products so basically ionic 4 or overall ionic has the pro version which basically gives you some extra features that you can use for example live deploy we will have a separate video for each of these functions as i have a pro account with ionic but for now just quickly a brief introduction to pro link is basically it generates your native packages in the cloud it can do live deploy without going to app store or play store it can monitor your apps for example if your app crashes white crashes it will monitor all those bugs so these cool things about ionic pro which we'll talk about later let's go back and i'm gonna press n and then i'm going to press enter now at this stage our project is created and i'm going to use a webstrom to open this project so let's click on open and i'm going to go and target that folder which was in documents test project only fortune and i'm gonna click on open so through this tutorial series i'll be using uh webstrom which i think is a great ide by jetpaints and it's not a sponsored video guys it's just webstrom or any overall jetpack product is great so here is a folder for iot for project and i'm gonna go through to these all these files all right guys so now let's go over to the folder structure and the file structure of our ioniq 4 project so first of all let's take a look at this resources folder basically all your assets your icon your splash screen images or whatever image that you're going to be using in your application that will go into your resources folder the reason why ionic has this setup separately is because the angular require sorry the android required different kind of resolution for your assets ios required different kind of resolution uh for your assets so ioniq and cordova basically handle that automatically for us so if you want to build a project for ios you type a command on your ionix cli and it will prepare your resources uh required resources for ios or require resources for your android that's very simple now let's go to some files outside our source folder the git if you're familiar with kit you know what this git ignore file does you will list out all the folders which you don't want to be included in your git repository angular.json this is some configuration for your angular so we can go through this later whenever we need something from this file during the course let's move on config.xml is a really important file in your ionic project so basically it will list out your ionic id a version of your application a description a title of your application also it will list out all the platforms and then it will list out all the resources linked for that particular platform in this file also all the plugins used from cordova in your application will be here we have a package.json file which is important as well it lists out all our dependencies here you can see we're using angular we're using ionic it lists out all the dependency dev dependencies uh we can define scripts as well for our custom builds uh there's not much to look into these files these are just default files getting generated from ionic i will go through these files whenever we need to understand any property or any configuration from these files let's go to the source folder the first folder inside the source folder is the app folder which will have all your angular code so all your components your services your pages directives will be inside this app folder next we have assets folder assets folder will list out your one icon image that will be used by cordova or let's say ionic to basically generate all your resources from this one file these are some environment uh variables we have a theme we have a variable dot sas file which is a global file and you can use these uh these some of the color schemes are defined by ionic throughout your application and this is just a global sas file for you to use with global sas file here we can list out all your uh all your basically css and here we require this variable.sas file as well next we have index.html file basically this is the entry point for your iot app we have some testing files karma is used to test your application we have some polyfills main so main.ts is the entry file for your angular project or let's say ionic project this is like a startup file uh which basically lists out this is a module that we want to use and we have defined that module in app.module that's our app component so here we have a ts config which leads out some more configuration let's talk about this later in this video we are going to learn ionic cli so first of all we will add ios platform to our project so let me just uh bring my cli to the right so we can look at the commands that are right so have a look at this folder structure right now we have a source folder resources folder e2c folder node modules folder so now i'm going to type a command here ionic cordova platform add ios i'm going to press enter now it's adding ios to our project using credoa fetch or cordova irs version 4.5.0 all right so as you guys can see the platform is being added so if i go to our project our viewer we can see there's a platform that named ios so when i click on that i can see the file structure that can be opened in xcode so if you are familiar with apple's xcode which is an ide for ios mac ipad app development that project can be opened directly there so now most of you will be familiar with java android uh projects so here we can add android project as well so i'm gonna type ionic core let me just make this bigger if i'm able to no i'm not so i need cordova i will keep my mouse cursor here uh platform add android now it's going to go and download the android cordova version of 7.1.1 it's going to take a few minutes or a few seconds depending on your computer and your internet connection once it adds the android uh platform then we'll go and talk about these okay so the android project is there as well so here you can see we have an android project and ios project now just to get you uh familiar with cli commands you can remove project as well so if i go ionic cordova platform remove android it will go and remove the platform from our project so here you can see removing platform android from config.xml file and a cordova.platform array in package.json file so let's take a look at here in the platform folder we don't see android folder anymore so if i go and open package.json file here we can see that we have a platform listed ios but we don't see android so let's go back to terminal and we can add ios platform sorry the platform is already there it says platform ios already exists so we can add android platform so i'm going to click on ionic adobe platform at android now it's going to go and download cordoba android again and then it's going to it's going to uh basically create a platform for us now these are the basic commands in ionic cli to remove and add a project once the android project gets added to our project we'll add another type of project called a browser so we could run our application in the browser while developing and to test our application we can use actual device so i'm just waiting for this platform to add all right so right now you can see it's generating resources 18 resources generated now platform is added there we can see platform ios and android is listed in package.json file also we can take a look at config and config we have a platform ios with a platform android now i'm going to add let's go and clear the terminal i'm going to add ionic cordura platform add browser so we're going to add a browser platform to our project as well so we can do all the development tests of replication in terms of functionality in our browser and then we can run this application to the actual device whether it's ios or android device or even a windows device guys so once this uh gets added the first thing we want to do is we want to emulate this project so let me go and open the chrome browser first okay so the browser project has been added we can like look at a platform folder and we can look at our package.json file which should have browser as a platform as well i'm going to take my terminal back to the bottom so we could look at the project and the files i'm going to clear the terminal and the next what we want to do is we want to run our application onto a browser so i'll say ionic cordova emulate browser okay now it's gonna go and build our project and right now we can see www folder is empty but when the first time we build our project it will not be empty anymore it will have all the json and a production version of our code listed into www folder so the first time we're building this project that's why it's taking a bit longer all right so as you can see it took few seconds or few minutes depending on your computer and now our application is up and running now this is how you emulate your application to your browser now the reason why i've shown you the first is because when you emulate your project to your browser using cordova it will put all your native functionality to the browser as well but for just development purpose we don't have to emulate uh our project your browser but what we can do is i'm going to press control c and let's clear the terminal and instead of using iony cordova amulet browser i'm going to use a simple command which is ionic serve now this is going to do the same thing it's going to build our project as you can see this wwe folder is not empty anymore and now it clearly says our project is running on localhost called 8100 also the external ip that we can target 192.168.1.7 column 8100 so it's going to build a project and it's going to show that into the browser now there are pros and cons using ionic cordova amulet browser but we will talk about these later in the course now as you can see our project's running now the last command i want to show you is ionic serve dash l the dash l is basically ionic a library you have to install in your project will which will basically make our application look like it's running on a mobile so right now it's asking me it's ironic lab is not installed you want to install it i'll type y and then i'll press enter now it's gonna go and download ionic lab for me and start my server using ionic lab now the once our server starts as you can see here we have ios version and we have an android version of our application which is great so you can take a look at the ui of ios and also the android version so i don't really run this in development but as just to let you guys know this is available for you so if you do ionic serve dash l it's gonna run your server on ionic lab which will show your app as it's running on your native device i'm going to show you how you can emulate your project to ios simulator i'm using mac one thing to mention here you will have to have a mac to develop application for uh ios platform so let's get started so this is an app in the last video we've seen how we can do ionic serve and then that will open a browser and it will launch our application now also we want to emulate this project to an actual ios simulator for that you need to make sure that you have few uh free software installed for example i'm gonna go and open xcode now xcode is an ide developed by apple and it's basically used to develop native ios applications now to install xcode you want to go to app store on your mac and simply search for xcode here now here you will see an xcode and you will click on download it will you will see get click on get and then you download that now we are using xcode version 10 which is the latest version of xcode so here i'll type ionic cordova emulate ios and here first of all i want to check how many devices do we have in our system we could use to emulate so say dash dash list and i press enter it will go read xcode and it will give me the list back so i'm going to move my terminal to the right so we can see so these are the devices that i can emulate to and it basically shows us the ios version as well i could use ios 12 or ios 11.2 so now let's clear the console or terminal so i'm going to type here ionic cordura emulate ios dash dash target so target is the flag which lets you specify a device that you want to emulate to so let's say that's the target is equal to let's emulate this project to ios 12 with iphone 8 so i'll say i phone dash 8 and then i'll press enter or return on a mac so it's doing all its stuff so i can see my letter now on the screen and also i can see this ionic blank template okay so this is how you start your emulator and upload your project to ir simulator now another platform that we want to build an application for is android now it is pretty straightforward to emulate your project to android as well so basically instead of writing this command any cordova amulet ios you will just simply say only cordova amulet android and i use the same flag dash target is equal to iphone 8. welcome to my windows pc so to emulate your ionic project to android simulators you're gonna need to install android studios if you go to developer.android.com studio here you can download android studio which is about 923 megabytes i've already downloaded and install android studio as you can see at the bottom and it's already up and running now what i did basically i just created a new project so if i go and close this project you will see this screen all you have to do is create a new project so let's go create a project here type the name go to next next next and then eventually you will see this kind of a folder and you will see stuff like this now once you open a project you want to go to tools menu and want to go to avd manager now let me explain what is avd manager so basically it lists out all your virtual devices now let's go to webstorm and let's try loading these devices so we close this close android studio as well let's open up webstorm and this is the project that i'm working on right now called expenses is the expense logger app with a lot more functionality that you find in usual application which does this job so let's uh get back to work so i'm going to type ionic go to emulate android list now it's going to give me the list of emulators so here i have nexus 5x nexus 6 and pixel now to run this project to pixel or any of the devices i can specifically type hashtag target is equal to the device name let's run our application on nexus 6. type ionic pertova amulet android target is equal to nexus 6. now one thing to mention here the name of the device is case sensitive so if it's if that if it has a capital letter you must have a capital letter so i'm gonna press enter now and now it's gonna go and build a project and now it's going to run on an emulator using nexus 6 device and the android version that you would see in android studio when we open that so i'm not sure what version it's running right now but it's some something's running so let's take a look at how and how long it takes to run the emulator it's building the project okay it says build successful in six seconds as you can see our amolera is uh getting online now this is an application that it actually rain so yeah that that's pretty much it is guys for this video and this is how you use and emulate your project into ionic using ionic cli to ios and android we're going to take a look at the code itself we've learned so far how to emulate projects through android devices and ios devices we also learn how we can add platforms like android ios and browser and we have covered the basics of ionic basically the workflow and the tools you need to set up uh to basically start developing an ionic or we can say hybrid mobile app so right now i'm going to go and show you guys what is the product structure what each file does so first of all i have created a blank project so if you create a new project and you will use the template blank this is what you're going to get so there's pretty much nothing's changed so you go ionic start blank and name of the product so i've shown you how to create a project right so i'm starting with the blank template now this is the template that we're going to be using the source code is going to be available on my github accounts i'll link to that as well so i'll do ionic dash l so dash i'll flag basically will help us to reload our application will show our application into native looking uh devices but at the end of the day you still want to test on the actual simulator whether it's ios or android now this is our application is running i'm just gonna make this a little bit like this and then we don't need to keep the terminal up and running now that's it so the first of all let's go through the product structure so we have seen some of the project structure uh in the previous video but let's go something let's go into details now the first thing you will see a source folder which will have everything related to your app i'm going to go to main.ts so the main tells ts file is an entry point it's an entry point for the whole application here you can see that we basically import uh enable product mode which is right now it's not true because we are developing so we have a platform browser dynamic bootstrap module app module and then that's what we imported so here we have an app a module so we go to app and this is the approach so basically the main.ts file is telling the compiler that okay this is our main entry module start our application from here now once you start your application it will go and then do all its processing related to angular stuff so this is nothing more than angular module with some ionic uh ionic modification so right now if you are familiar with angular you feel at home so we have ng module we have a declarations we define all the components here with the entry components which is basically uh empty right now we imported browser module ionic module for root and app routing module so in ionic 4 it basically we have a different uh lazy loading concept so we let's load a different module so here we basically create the module this is a entry point entry module for our app next we have approach module which is imported by app module so we go to app running module let's take a look at app routing module so basically what's happening here we have a two routes defined in routes variable which has a type of routes now we downloaded we actually imported a router module and we passed in this routes variable now what i want to do is i want to explain what is lazy loading basically let's say that you have your application of about 500 pages or 1000 pages now when you start your application if you are willing to load those 10 000 1000 pages your application is going to be loaded uh it's going to take a lot of time to load that application so this is where lazy loading comes into play basically you load an application you load just one specific main module and then you load the rest of the modules depending on the browser url or depending on which one you requested so what i want to do here i want to go and create a couple of uh modules separate pages with separate modules and then we will link to those so here we can see we have lazy loaded this page home so basically it says go to this route if there is no route defined and it redirects to home which again matches with this path and it says path match it's set to full now it's going to go to this module by default so let's go to terminal and i'm going to create a new terminal here and here i'm going to type a command ionic g now it tells me which which uh what kind of uh stuff i want to generate so i'll say i want to generate a page and i would say okay let's say about us page i'm going to press enter now it's going to generate a module for us it's going to generate the page for us and it's going to automatically load that to our app a routing module as you can see now we have about us which basically links to about us about a start module which is here and then we have this uh about us page module which is basically the name of the module nothing more than that so i'm just going to close this now we want to create another page let's just say contact you press enter and now it's going to create a page of contact also it's going to create a module so basically when you go inside a module you see it has a route part set to empty and it defines the component it imports the component as well so let's close this as well now let's say that we don't see these automatically loaded but we want to write our own so basically you simply go and define a path you type it in the path you want to match according to the url in your browser and then you type a key load children and then you specify path to the folder which is basically here about us and then next you say go inside this folder look for this file about a stopmodule.ts file which is defined here and then you define a hash and i'm saying basically go inside this folder go to this about a start module file and then go inside this file and then look for about us page module and if i look at about us page module here you can see it basically has a routing implemented so it has this about us page component implemented in this module so how do i link to this now this various ways that you can do navigation using angular in ionic 4 but let's take a look at so we want to go to the home which is basically a simple uh route which basically if there is no route it will go to the home which we actually defined here abroad models right on the top to go to redirect your home if there is no url there okay so now i'm just going to get rid of this okay i'm going to save this now there's nothing here so i'll just go and create let's just say use ion button we do let's just say then we want to go to let's just do anchor tag i'll do href and here i defined simply i want to go to let's go back to our product module so i want to go to about let's copy this and paste that here and say about us let's save it and you will see a button i don't see the name here so maybe about us here we type it in that's fine and we just want to get rid of this as well all we can define we can do href here slash about us let me just remove that okay so now if i click on about us that will take me to the about us module and loads that component so if i go to about us module and he'll take us to here and they will load this about us page now let's go to uh contact and here we have this component there i'm going to go back to home uh not home sorry sorry home yes so home page and then here i want to add another button and then here i'll do and find approach model that's just a contact we copy that and we go to let's just close with stuff here and let's just do contact here i'm going to save this now we have two buttons about us and then we can say contact now let's go to a contact page and here i would like to define a button oops not that one let's make it bigger so button sorry ion dash button oops not a badge what i'm doing button and we do edge ref and say dash home save it similar we will copy this we want to go to about us page and we'll paste it here as well let's save this now we can navigate between these files so let me just say home here and then we have a content page i want to say home page here okay so now if i click on at home it will take me back to the home module and will load this home page and if i go to contact it takes me to contact page and then i have another button here to the contact page and i can go back to home so as you can see we basically can do a lazy loading here so routing with the lazy loading right so that's about this video guys in the next video we're gonna take a look at how we can use some of the components uh provided by ionic library we're gonna take a look at how we can use action sheet in your application now action sheets are great when you have to have some sort of a popup which will get the user to type in an option so this is actual sheet so for example if i want to delete some component i delete some value i can say hey you want to delete click on delete you want to share you should click on share play model favorite and cancel so we're gonna create this model in this video uh but you might be thinking what am i doing here there's a lot of things happening here already so for that i'm actually going to create a new project and then in that project so let me just open the terminal first and then here in the terminal let me just make it bigger for you guys and let's do this now in the terminal i'm going to create a new ionic 4 project and then we will add action sheets to it type and i'm going to make that to angular we'll press enter now it's going to ask me what will be your project name so i'll say ionic tutorial and then what template do i want to use so if you are creating your application with the tabs ui you can select tabs which will automatically generate a code for you where you will have some tabs already placed for you to use we want to work on side menu then you will use side mini template which will already have some sort of code which will generate a side menu for you but what we want to do here is we want to create a blank template and then using that blind template we want to learn how to implement some components and after that we will learn how we can create a ui including tabs in the side menu so one bolt into place so let's uh let's get started with bank templates i'm going to select that and it's going to go and download now it's asking me introduce your new app with cordova to target native ios and android i would say yeah why not i'll just integrate cordova to my application right so the project is nearly done now basically it's asking me whether i want to integrate my ionic project to ionic pro sdk well i don't have an account as of yet now for ionic pro so that's why i'm going to say and and press enter all right so our project is created now i'm going to open that project in webstrom so let's me open webstrom and here let's uh let's take it to that window there okay so now i'm going to go and click on open we're going to navigate to that folder ironic tutorial and i'm going to open that now this is a similar project that we just created in the last video it's a blank project it's got nothing more than just a boilerplate code to run our application so we're going to go inside these and i'm going to go to terminal and i'm going to simply type the command ionic server dash l and when to click on this browser so it will go and open that up so now before we can open this project into a lab we need to install ionic lab say ui press enter and it's going to install ionic lab now and then it will open our application as you can see after installing ionic lab it automatically open up so right now we're looking at ios version of our application but we can take a look android and also windows i'm just gonna scroll down this is android guys and that's windows down there so we continue with android and windows so let's take a look at code now in the source folder as i explained in the last few videos about this blank project so we're going to go to app and here we have this app a module app module is the main module of your application we have a app a routing module which i've already explained to you guys how the routing and the lazy routing works in angular 4. so here we have this app writing module app module we have a app component we have app component.html file where we have this ionic app with ion router outlet basically let's take a look at the outer outlet what it does if you are familiar with angular it will tell the application this is where i want to start my routing so this is the main entry point for your routing so now what we want to do here we want to learn how we can create an action sheet so i'm going to go to app component or we can simply go to our home page and do our action sheet because app component is nothing more than a just a placeholder for routing it does not really have anything so basically when the application starts it looks at this on router and it goes to the routing module and looks at what it's supposed to load we go to app routing module and here we can say if there is no path it will redirect to home so we're going to do all our logic home so let's go to home page and here if i'm just going to go and remove all these and i'll say hey i want to have ion button okay and then inside this i'll say hello action sheet we press command s it will save the project and we'll open that into our app so here we can see we have this hello action sheet button which does not do anything as of now so we want to do we want to create an action sheet but i'm going to take you to an uh a documentation for this so you can go and continue learning after you learn how to implement these kind of ui components so here we have action sheets light up from the bottom edge of the device and display the set of options with ability to confirm or action or cancel action so action sheet can sometimes be used as an alternative to menus however they should not be used for navigation so we go to api and in api it'll give us some sort of code snippet which we can use so now i'm going to go back to the code and here we'll just open home dot ts file we're going to do logic and then here i'm going to create a constructor function constructor i'll say public and i'll say action okay so i've fast forwarded the the function so basically let me go and explain the function what we've done so far so in the constructor we added this action sheet controller service and i stored that service into the variable name called actionsheet and then we created a function which is async function and i named it present action sheet and then inside that function we create a const variable which basically have this async and a weight now we are using this action sheet which i injected into this constructor function and then we call the method dot create and then we got some few properties to define uh so we could show the action sheet so we have a header what would be the header of the actual sheet what is the mode of our action sheet any buttons available in action sheets so we can define as many buttons as we want and then after that we have this await action sheet.present method which will basically create an action sheet and then make it appear right so now we have this function i'm going to put this function and call it when i click on this button so we go to the home dot uh homepage.html and here i'll use a click and then i'll just call it present action sheet i'll save the project and now our compiling should be done in like five seconds yes it's done i'm gonna click on hello action sheet and there we go so we have an action sheet so i can click on it and then it will just disappear so now if i go to let's just say homepage.ts and here i have had a handler on the button basically it's a function that will be called once you click that button so let me go to the console here in the browser and i want to show you that when i click on that button we'll see you click me on the console so i click on that and then i'll just go down and i click on that cancel button and there you go we see you clicked me so you can see that we can call any functions from anywhere in our application on this button so this is very useful if you want to perform any action and also just to mention that you can add a multiple buttons here so for example this is one button in an array we have i'm just gonna move this right down so it's better and cleaner to look at so here i'm just gonna copy this i'm gonna add a comma here i'm to add another button and i'll just say roll would be let's just say this drop tip all right and then the text would be hello icon we can say add i'm gonna save the file and i'm gonna here say you added me okay i'm gonna save the file again and let's take a look at do we get two buttons now so if i click on this button to close the console i click on this and we get this button hello and i cancel so here we defined a roll that has this cancel so it will go down but if we have another button we define a role to destructive that means it will go into the list so we can have like a multiple buttons here with a destructive role so i'll just go make another one comma make another one and i save the project and this time when i click on that hello action sheet you'll see multiple buttons appearing so click on this and here we have multiple buttons i'm going to go to console and just clear this thing out now we're going to go to action sheet when i click on one of the button it says you added me if i click on that i click on cancel button you see that you clicked me so you can perform any kind of action onto one of these buttons all right so this was a quick introduction to how you can use the components using their their classes we will be learning how we can use a component a library provided by ionic so ionic apps are made of highlevel building blocks called components and components allow you to quickly construct an interface for your app and ionic comes with a number of components including models popup and cards we're gonna take a look at what's available in ionic and i'm gonna show you how you can use it now before we start i would like to give you a demo why do you even bother using components or ui provided by ionic now here we have a same application running for ios android and a windows platform and i know windows platform is dying and ionic is not really supporting anymore but we have a third option here when you start your application with the flag dash al you get this lab so here you can see how your application is going to look like on ios and android and windows so now if i click on this button which basically it's a fab so let's see i click on that i get this action sheet so you probably use a lot of mobile application on iphone so you see this uh action sheet a lot in your iphone application and similar to android we're going to take a look at if i tap here it shows you the actual sheet but look at the ui ui is pretty much uh android looking ui so you see this kind of ui in a stock android phones for example nexus series from google so this is a stock android ui now we have this windows which is going to make you laugh so if i click here you get this sort of things here because windows platform is not supported anymore and i don't know why they kept that in ionic but so you got the idea the benefits of using ionic components is that you write one html you write uh one html with a couple of css classes and i only take the responsibility of making your app look uh look native to the pacific platform for example if they they're running on ios then app is going to look like it's a native app on ios even though the whole app is running on is it's running on platforms a web component we'll talk about that web ui kit that provided by different platforms so now let's take a look at the documentation of ionic so here we have ionic action shades we have alerts so here if i click on action sheets it says show actually it's a bit slow but it's going to show you this is the action sheet that you can use now what you can do here you can basically use this one code and just put that in an application and when you build a code for a specific platform that will automatically be converted to make it look like native so we have alert we have a badges uh we have uh buttons so let's take a look at the buttons so these are the buttons available that you can use and it's going to look like these in your ios so you see cards everywhere on iphone applications we have a checkbox and that's gonna be a checkbox for your both platforms we have data and time so now you see a lot of applications have this date picker that you can choose date from that seems very complicated to create but i only provide this nice uh little code snippet of code which you can use in your application and will show a date picker so if i just take this and i copy this and i just paste that into my application so let me put that into somewhere let's just go to home tab i know you guys can see it but i'll show you these later so i'm just going to put that simple ui into one of the applications we are running so when i paste this here let's save it and let's go back to our application guys and here we have this date because if i click on that there you go i can you know pick the date for iphone now if i click here i can pick the date here as well it didn't actually work on iphone but we can customize it we can do it how we can customize the specific platform we have a fab fab is really cool that basically gets you a button which has some z index so it stays on the top of all the other components in your application example i have created this button the plus button with the help of fab so if there was no fab that would be very hard to create this kind of a button that basically stays on the top of all the components you have if a great grid is basically used to create a layout in your application for example you want to customize the layout of your page and you want to have some smaller cards bigger cards so use a grid the grid is great infinite scroll so a lot of applications have this kind of infinite scroll guys so you can just keep scrolling and the data will be loading uh according to your scroll so what happens is if you wanna like if you're working on an application where you have a lot of data sets and it's not you're not able to fit those data set in just a small screen so what you can do is you can use this infinite scroll and basically the amount of data you can load and at that screen that will only be loaded but when you go scroll down it will load the next data into an array or an object i'll show you how you can use it later but let's go through quickly what are available so we have our input fields available we can still customize that list is there loading loading is one of the cool thing that ionic right it's really easy to create as well so if i click on show loading that'll show you this kind of loading please wait so a lot of applications use these kind of loadings when they want to load the data basically they make an api call to some server running in the wall and then they wait for data to be received and during that time you don't want your user to just stare at your application without knowing anything so what do you do you create a loading uh so that user knows that something is coming so they gotta wait we have a menu menu is really great it's easy to use so if i tap here and then i can see the menu bar we have a model model is one of the other great ui component provided by ionic so if i click on one of these you'll pop the model up and i can have that i can have the page it's basically a model not an exact page and i can use that for all the components that i want to put in this basically is used mostly for sign up and login page which don't really require to be there all the time so you create those on the go by maybe creating a button pressing on that and you create a model now let's go to nav so now basically you see in iphone applications there were there's a lot of child component that you want to show then use now so one nav can create a model or another nav inside this and then that knife can have another lab inside this so you can just continue doing basically child to child and child to child components pop over let's take a little pop over so pop power is like you have some sort of uh text going at the back and you see when you i scroll down you see the pop over and you see the text just a little bit blur that means pop over now let's take a little range there's a lot of time you want to maybe increase decrease some sort of ui or css or something in your application then you can use this kind of component that's really really great sometimes you want to change the data you want to have some sort of ui which helps you to do that and this is great refresher a lot of times people go to one of the page in your application and then they want to refresh the data for example the data is coming from the backend and you go to the page and during while you were on the page the data updated in the back end and your api basically doesn't trigger any event or doesn't really emit the data to the front end so what do you do you create a refresher and you get the user to tap and swipe down and that makes that makes the refresher now on that event you can call the api and load some more data and obviously you're going to be using angular with ionic to create all this logic this is just a ui component which is great and very easy to implement in our application but obviously the backend logic the backend code in angular will be done by us we have a search bar we will select so a lot of ways you can select we have this female gender selection game selection there you go we have notification selection and there's different types of selection that you can customize uh slides now a lot of time when your application loads for the first time you see some sort of introduction of your application so that means they basically create slides slides are very easy to create with ionic all you do is just copy paste this and fill the data in and that's what goes into your slides really good stuff if you want to create the same kind of slide in your native android or iphone or windows code uh you i think you're gonna take much longer it's not like much longer to implement and make it look like that nice spinners a lot of times you wanna have spinners there yep we have spinners tabs tabs are really a core component that is required for any application you go to iphone or android now all the bigger enterprise level applications have some sort of tabs ui that you have the tabs at the bottom so i can show you this this is the tab as well now we will learn how we can create an interface including tabs also with a menu bar so right now i don't see them anywhere here but we will implement that later so toast toast a great way to show uh show some sort of a message on an event to the user for example if they are going to sign in and once the sign in there should be a message that you successfully logged in so if i tap here you see the toast here and it stays for a few milliseconds or one second two seconds you can define the time there as well but click here and there you go so we got different sort of sorts toast available ritual scroll so we have a virtual scroll so it says your followers successfully now it's gonna go all the way to 500 entries that's called a virtual scroll now these are the components that are provided by ionic framework now as i uh as we are learning angular sorry not angular 4 by ionic 4 which means this documentation is not a stable documentation this is a beta documentation and they will be adding a lot more components a lot more information to these document now if i take you to the documentation of the older version which will give you some more ui components so let's go here we're going to go to ionic framework and then here i'm gonna go to developer and i'm gonna go to framework docs now this is ionic three docs here you can see island four is coming but we already started learning ionic 4 because it's it's pretty much done we we basically got what we need to build application with ionic 4 but there's going to be a lot of improvements will be coming in but the structure and the core uh core technology is there already so if i go to components you'll see a lot more options here compared to i think there's not much more but maybe a toolbar is a is another one that you have here so you see this footer toolbar stuff like that so yeah that's that's about it guys and thank you so much for watching this video that was just a quick overview of what's available in ionic 4 what are the ui components and in the next video we will learn how we can implement some of the nice components ui components into our application we're going to take a look at some more ui components available in ionic 4. so the first component that i want to show you is alert alert are great ways to offer the user the ability to choose a specific action or list of actions alert can include text input buttons they can provide the user with important information or require them to make a decision so what is an alert alert is a dialog that presents users with information or collects information from the user using inputs an alert appears on the top of your app content and must be manually dismissed by the user before they can resume interaction with the app it can also optionally have headers sub headers and messages also you can add buttons you can have inputs you can do a lot more stuff in alerts but they're not recommended if you have some sort of functionality that you want to perform so basically if you need a signup form and it's got a lot of impression i would recommend you guys use a model in setup alert we'll take a look at what is a model later in the course so let's get started with creating an alert let's go to home.page.ts file and here you can see i have imported alert controller and also i've injected that into a construction function so we could use that in our class so now let's get started with creating a simple alert i'm going to start with defining async function which i'll call it present alert and then we create a constant so just do a const and i'll say this is an alert that i'm creating and then i do await this dot alert uh actually i forgot to change the name of this action sheet to alert controller so alert controller i was using the same file in the last video so this is why i had that so so this dot alert controller dot create we're passing in an object and that's going to take a header which will pass in alert and then another value you can take a sub header as well so do sub alert i'm going to put that into single quotes so sub alert now we can say what is the message of that alert so do message and then inside that i'll say hey this is the alert message and then also we're gonna put that semicolon sorry comma there and then we can have a button so do buttons and then that will should take a button okay and then we can simply go and present it so just a weight dot sorry alert dot present okay i'm gonna save the file and let's go and wait for it to compile so it's compiled now i'm gonna click here that should present an alert so it's not so we're going to go back to home.page and then we type in click event which will take present alert save it wait for it to compile the project and then when you click on it you should be able to see a low so here we have alert subheading and a message and a button which will dismiss the alert all right let's go to ionic documentation and here i'm going to take you to alert and let's click on api which will tell us what's available for us to use from alert so here you can see we have a buttons we have inputs we have the usage and code snippet as well that you can use so here you can see we have a simple alert which we just created your long message alert that's what we can create multiple button uh cancel open model a delay so you can perform an action depending on what you want to do so let's take a look at that so here i would like to go and create an action sheet when i click on present alert so let's go back and here we want to go and i'm just going to make it a bit smaller so we can see it first of all let me just import action sheet controller that would be from ion angular and then i'm just going to inject that as well so i'll just do prior rate action sheet action sheet controller that's fine so now here i'm going to do a handler for a button i'm going to remove okay instead of passing a string we pass in an object now here we define a text and i'll say cancel role would be cancel as well that goes into string and then here we do handler and i'm gonna pass in an event here so not even basically a function when you get click it's what you want to do so do console.log and say you clicked me so you click me okay so now i can pass in another button so we can have a multiple button here so we just do a comma and then i'm gonna pass in text okay and then we don't define a role now we just simply say uh let's just do css class we can do secondary and then we can pass in another handler so do a handler then we do okay so here what i want to do i'll do console.log let's say a second handler all right and i'm going to save the project there's an error it's basically a tslin error not an actual coding error so let's go and take a look at what happens when we have this so here we have action button action alert and i'll okay action alert i can see okay button and then cancel button i'm gonna add another button here guys and i'm just gonna name it open model so let's just do open sorry action sheet not a model action sheet right and then i'm just gonna make it let's just say primary all right so i've removed contour log so here in handler we want to start with typing async and then we'll do an error function here and then inside this we are going to create an action sheet so here we can you can see i've already imported action sheet controller and injected that in a constructor as well so let's go down and here we want to start writing our action sheet so here i'll just create a const and i'll do action is equal to then we'll do a weight this this.actionsheet.create and that also takes an object and takes some properties that can be used so do some sort of header so we'll define some buttons here as well so i'm gonna do header and i'll just say testing action then also we can define a role as well but let's not define a role let's define an icon and let's do trash and then we all can also define a handler to this uh so that's not going to go there so we need to define a button guys so as i've shown you how you can do it so let's just do a button here and then the first button text is going to be terraced and then we'll do roll we can define a role to cancel then we have handler again and then inside the handle we use error function syntax and we do console.log a hello okay i'm gonna save the project and now we should see an action sheet but before we can see that we need to present that so here i'll find this action sheet and i find this uh this curly brace and after this we want to do weight this dot action dot present okay now while we're here so we don't need this we just simply use a weight action.present and that's pretty much it is so we're just gonna decrease the text size and let's take a look at so we click on this we get an action i'm gonna click on open action sheet click on this and you see them actually cheat as well so that's cool isn't it so you can define alert or you can define action sheet and you can perform any kind of action while a user clicking on that so that's really cool now i'm going to take you some of the documentation of ionic and let's take a look at some of the things that we need to know about this documentation how to use this documentation and how you can improve your knowledge of ionic and improve your workflow plus creativity plus productivity using these documentation so now you can see we have a lot more options here we can create these kind of alerts so here we have a long message alert we have a multiple button alert which we created alert no message we have a confirm and cancel button also we have some sort of a form that can take data from user and perform an action on okay or dismiss the alert on cancel so let's take a look at we have creating so this is how you create a alert using alert controller then we can define the buttons we can define inputs using inputs this is a so code snipper that you can use all the way down we can see we have a properties now the properties are basically uh a value that you can use to do some stuff for example here it says animated so it says if true alert will animate and it's default to true so if i click on this and then you see the animation happening so click here you see that animation so if i go and right on the top i can say i don't want to uh i want i don't want it to animate so i'll change the value animate it to false and i save the project and i see if i click on that normal animation should happen so here i click it pops up straight away so there's no animation happening now so you can see you can read about these properties and you know customize your alerts or you can customize any other ui component so every time you want to use a button an action sheet alert or card or card title anything the documentation of that technology is the best list to enhance your knowledge so here we have a backdrop i'm just going to copy that let's go back and then here we define let's just say backdrop dismiss is this the right key so here it says backdrop dash dismissed so we will do actually let's not do that we do something else here okay back to the truth alert will dismiss when the backdrop is clicked defaults to true it's already true we want to find uh overlay now that's gonna be basically uh it's gonna make the background a bit a bit darker so you can see the overlay there now these are all the properties that you can use to customize your uh your alert also if i will show you guys few other things for example here we have uh icon ion button so if you want to use a button in your application you can simply use this iron button so let's take a look at how we can use that here we have a code snippet so here i'll use iron button with the color primary let me just do uh success let's copy this and then here we have some issues here so i'm just going to remove this let's save the project and let's close some files here we go to home.page.html file and here i want to use ion button with color success i'll save the project and you'll see our server results automatically and compiles our app and show that this stuff gets better right now this button doesn't do anything let's take a look how we can improve this here we have a button type we can define that as a button or bar the color property we've already used here and we define its value success this is how we can see this color success there all the way down we have all the options for example we have the size if you want to make your button larger or small then you can define that so here if i say size which is a property and i say large and i press command s to save the project and it will recompile it and we'll see if change so here we have a larger button now so you can you you can use this documentation and then improve your knowledge about ionic so yeah let's uh that's about it for this button or maybe last thing we look at shape you might like the shape so here we have a property shape and then that can only take this properly the possible values are round let's give it a round and let's save it let's see if we get something different so yeah we have the round value there so similar to this we have a badges we can use this html also all the time please go inside api and which will give you a list of properties you can use for that ui component you can look at what are the methods you can call on that for example we will do some uh method so i'll go to alert and we go all the way down after the properties we have events which we'll talk about later so here we can call the methods as well we have these methods like dismiss or we have this on we'll dismiss basically you can read that this is what's going to happen when you apply this to a button or any which can act upon it this will dismiss the alert overlay we're gonna continue our ionic adventure uh of components so you've seen action sheet i've explained to you how you can use alert badge a button now we're going to go and complete our knowledge about ui components and some things that i want to talk to you guys about so let's just say some of the components you see we have html for that so you can use these components they are basically static components that can be used in your application but some of the components are dynamically created for example if you want to create a check box then you use this ion checkbox and you define the properties which are available and then you can do that so here we can see we got all the tech check boxes here that can be used so if i go to api and then i will see all the properties for checkbox i can use so these are some of the some of the code snippet that can be used and it gives you some of the idea that how you can use this ui components in your application for example this one is dynamically done here so here we have ion list which is another ui company we have an ion item we use the angular ng4 array and then we loop through to all of these check boxes then you can see a bunch of check boxes using this ng4 that's fine so now let's uh take a look at our components back so we have a date and time picker so if i go did entire picker you can see uh in a lot of application that you have this kind of a date and time picker as well so here we have a time picker nicely done and it will automatically adjust its joy according to the platform you're using so we have a and fab 20 1990 so this is how you can use date and time picker now let me take you to the api we'll take a look at some of the properties for date and time picker available which is actually an important one because a lot of application pretty much every application has to work around date and time so here we can see we can format our date and time by defining these values so let's go and use this date and time picker and let's take a look at how we can use it so i'm going to take you back to the code let's just remove some of the button here let's save this project and now let's learn from here so basically we can do a date and time picker i'm gonna go and find uh basically this chord snippet here let's copy this and i'm going to paste that here i'm gonna save the project and let's see if we are able to see that in time so if i click on this i see this you know january 1 18 and then time as well so here you can see we have a property called display dash format let's go back and we take a look at what are the properties available so here we have ion date and then we have a formatter that can be used so here we have a format and then basically for four y defines ear in four digit two yy defined here in two digits one m define a month and in one digit so let's go and take a look at and use this so here we have a 4y i'm going to change that to 2y and then control on the windows and command on a mac press s to save the project let me go and just hire our project so we could see the whole code if i click on this now this time i should see a year in two digits so you can format your date and time using all these values so let's just say if i don't want to show the time here i'll simply go and remove h column m and i'll save the project by pressing command s and that should update our app and should only show me date with month and then the day and then year in two digits so as you can see here you can use these values and customize them into a date formatter so here it tells you how to use it so you can see this property now we can even format the picker as well so here if i change this format picker and i'll just copy this properly and then let's just paste it here let's just save it and let's see what happens now here we got an error we if we closing to a semicolons let's just save the project again and let's see what happens now let's refresh and let's see if we can see the changes okay i'm going to click here and then now we have the pickup formatter we have a month and then we have this four yyyy now if i change this to 2y and then save this now this year should be in two digits so let's take a look now here you can see we have a january a month and then we have this 18. so you can format your date picker using this picker format property also we have this date time data which can be used to basically handling daytime values within javascript or in html so basically go to these uh sample and you can see what's available to you and what you can do if i go all the way down we have some minion max date times for example you want to define what's the minimum date here what's the maximum so if i go here and i'll just do let's just say min is equal to let's just say two zero one five and before i save it i wanna test it so i'll just uh do three yy two more y so we could see that here in uh basically four digits so i'll save it and wait for it to restart and i click on this and now i can see i can only pick from 2015 not before 2015 because i've defined this property min and similarly i can define the property max as well so right now max is 2018 but i can define max is equal to let me go and find so that's the date we can do copy and we can paste it and here i want to say okay let's just do 2 2 2 20. it's compiling and let's uh go to the next century guys so here that's the max and we can go all the way to 2015 as well that's a date and time picker if you go down you will see a lot of usage how you can use it and sample codes you have some properties the cancel tags they names so you can customize this this is a really cool stuff here going on i can't make uh everything available to you guys in just one video i'll do a separate video just covering date and time i'm gonna close this and let's go to the fab fab is another company which needs a separate video so go to grid if you are coming from bootstrap background you understand how you can define the grid so i'm not going to go into details infinite scroll is one of the nice component that it can be used for a lot of data processing so you have like 100 entries you can't show your 100 entries in small screen so what do you do you create an infinite scroll so when people go all the way down they can basically load more data right we have a generic input fields as well so let me take you to documentation of input can we use this so let's go here and now i can show you the code snippets so for example we have this let's just do something like a floating label let's just do copy this and then just paste it so we're here let's save it and let's see what comes up so here we have define a label on label and we have input so this says a floating label so if i click on that that's the nice animation you see this is what happens so if i do like you know remove this and i save this again now i'm pretty sure you're not going to see that animation there so let's just go click and you can't click anymore because it's not going up so you cannot have an input field there so now you can see and read about this as well uh ionic input fields can allow text password number search tell so let's do a number so i'm going to change this to back to floating position and inside this ionic input i'm going to type type is equal to we'll do a number i'm going to save and now once i start tapping i should see a number picker here so you see this i can do i can pick the number from here that's not really natively showing you uh how you can type the number but once you open that in your mobile application in your mobile it will show you the numpad so we can do something like a tell let's just change this to tell and save it let's see what happens now so here i see i can define the uh alphabets also i can define a telephone number so yeah that's uh that's that's you can use all this text password email url and you can do a validation of that which i'll have a separate video right so i'm going to cancel out and we go to the next ui component now one of the component loading which is great so when you move around your applications from one page to another page sometimes what happens is when you go to the next page you have to make an api call which will wait for the data to come back now during the time if you don't let user know anything that what's happening if the data is coming up or not then that's really a bad uh bad thing to do to user so what do we do we create a loading that's we tell the user wait hang on a second it's loading the data and it's going to show that so click on show loading and that should show something like this and also if we go to api we can change the design of it as well so let me go and let's create a loading actually so we'll do a loading by using loadingcontroller we create that similarly an async function and wait and then we define a property duration and a message we can also define what kind of spin i want to use so let me just copy this code from here and i will go and paste it in our home page dot tst file let's just uh sorry ts file so here we don't have a loading so we're gonna go up there and i'm just gonna press enter and i'll do private now what was the name of that variable so just do a copy and i'll just do a paste here and then i'll do loading l o a link controller and that's gonna come from ionic uh angular as well so just paste it here let's save this project and also there's something wrong here guys so we to do is comma here when we define it more than one uh we're injecting a service all right let's save the project and now we're going to call this function present loading without options so let's copy this we go here we create another button so let me just make this smaller and just copy this we paste this button let's just say loading action and we paste that oops no we need to go back i'm just going to copy this let's go back here and paste it here let's save the project and let's call this function and let's see if we see the loading or not so if i click on loading that should give me this loading here it says loading we have a spinner hide duration five seconds message please wait it's a transplant true if there's any css custom box i'm just gonna remove the css custom class and i'm gonna remove this as well but let's try to find out what are the nice uh what is nice loading available for us so we'll go here we have this uh something like okay here goes we have a spinner property and we can do lines align small dot circle bubbles let's do a bubble and then we do paste a bubble here and let's just compile and then refresh the page let's click here and then there you go that's the bubble now we see the bubbles here so if we want to change this to let's just say dots let's copy this and let's just paste it here and save it and we should see a reload on the page and i'm going to click on that and we have dots now so you see how cool animation that can be done using loading let's close this you understand how to use it there are some methods that you can call on this like we did call this present method on the loading we can call a dismiss method on the loading which will dismiss the current unloading happening and the transport property was there by default so i say if true the loading indicator will be transco uh translucent uh defaults to false yeah so that's makes sense we have a mode we can define if it's a ios motor md mode let's try that so do more i do md and add a comma here let's save it and let's take a look if the mod makes any change to our ui of loading let's click on that now we are we're seeing a rectangular loading box which is good now it's not transcoded so we do something like transferred and then we do to true true let's just do comma here let's save it and then we should see a reload let's just click on that and now we have some sort of transco and translucent so let's go back i'm gonna close loading let's go and let's skip menu and let's skip the model as well and also let's skip the navigation because that's a bit of lengthy process lengthy uh compliment to explain we will pop over that's just like a top header which basically sees what's happening underneath so if i go down you see this uh text underneath we have a range sometimes you want to increase or decrease the brightness of your iphone or application you can do this range as well and change the values dynamically refresher as i said with loader you can do a refresher so you tap and slide down and then it will load more data to it so you can call an event so let's go to the api let's take a look at what we can do so in the refresher refresher provides pull to free fresh functionality on a content component the pull to refresh pattern lets the user pull down on the list of data using touch in other in order to retrieve more data so we have this complete so let's take a look at the usage now so we will do all copy and paste this and definitely you can tell that this is going to work so this is what's happening ion refresh and then we do to refresh and pass in an event in our uh ts file we have this function do refresh and then set timer to 2000 so this is how you can do a refresh and then do your logic in this refresh function okay so there are some properties available for that as well you can play with them we have something called cancel complete and get process function and they actually all makes sense by the name of the function for example cancel it changes the refreshes state from refreshing to cancelling that's okay complete call complete when your async operation has completed for example the refreshing state is while the app is performing an x increase function so you can call this function as well get process makes really sense straightforward sense so let's uh cancel out and then we go to search bar pretty simple guys search but it's just you know search bar which can do some filtering as well and ionic basically provides an api for that as well a select a select is something that you click and then you have an option to select right so we have a december we have two options to select it's basically a selection of two you can define more than two as well slides now slides are great when you have an application uh starting for the first time in your phone you want to be able to show some message or some tutorial to the user of that app so slides are great way to show that and a lot of application do that as well once you start your application for the first time it will show you some slides with nice information spinner we can see the screen already we have different types of spinner tabs we skip the tab because we're gonna be creating a separate video for tabs toast toss is something that will pop the message out for temp for uh for a specific amount of time so similar on a click event it just shows you some of the tools that you can see you can put the messages in that that's very straightforward a visual scroll same thing that you just go and scroll down keep scrolling up to where you want it where you want to allow uh user to scroll to that's good as well so i'm going to show you a toast api let's go here and here we can find really cool stuff so we have a toast here which comes from top to bottom we can see the properties so here we have a property of animated if you want to animate that or not so we spend we specify a property name animated and then we put the value it's a boolean so either it takes true or false duration we can specify the duration and after distribution the uh what you call this uh yeah iron toast will be dismissed okay remote oval index position that you can define top middle bottom if we have this it's in the middle we have a top we have a bottom so you can define those positions by defining a position property and giving a value either top middle or bottom the show close button if you have a close button there then you can basically show a close button it doesn't show here but you can define a show button so by default default because you won't see a close button here uh right that's we have some events as well we got method similar to other ui company the president will present this uh toast on will dismiss a return the promise that resolves when the toast will dismiss this piece actually dismisses the toes and we have some custom proper cs properties as well which we can use to customize the layout or look off that toast so we pretty much covered all the basic ui components and you understand how to use them by going and reading about the documentation in i api page that can help you how you can customize those components all right so in the next video we are going to create a layout with tabs and also with a sidebar so so far we have done about nine videos of ionic so i think this is the right time we will use all that knowledge and create a ui for our project so let me show you what we're going to be creating in this video we're going to be creating this tab bar and also this tab bar ui has a sidebar as well so type and sidebar is implemented in this ui so we click here we see the sidebar we can go and click on that menu and go to the next page or we can switch between these pages as well also we have this nice action uh sheet implemented here so having tab bar and a side menu side by side it's quite complicated in ionic 4. so before we start a video guys i want to show you guys my javascript course which is available on udemy i'll drop a link of that course in the description below with the coupon which will give you about 70 off so please have a look if you're interested in learning javascript let's get started building this ui using ionic 4 which includes a tab bar and a sidebar side by side all right guys let's go and create a new project we'll use a blank template and we'll work from blank templates so we know everything which it takes to build that user interface so let me just increase the font size here so i'll do ionic start and i'll do dash dash type would be angular and let's name our project ionic tutorial and then we're gonna use a blank template let's integrate cordova and that's about it it's gonna take two seconds before it generates a project and after that we're gonna open that product in webstorm so now let's take a look at the blank project so we've already seen that a few times but this tutorial is gonna be i'm gonna just you know be quick as possible to create this ui so let's go to the app and here we have a main component app and also we have a home component let's go to the terminal and start our application so ionic serve dash l it's gonna ask me if i want to install ionic lab which i'll say yes please install and then it's gonna open the app in the browser right so we have this app up and running so first of all we're gonna go and implement a sidebar so to implement sidebar we're gonna go to app component and i'm just gonna decrease the size here and let's just do okay so in app component we're going to define the list of the side menu we need so i will create a variable here and i'll name it public and i'll say app menu so we create a variable which is an array and it lists out three objects which we'll use to generate our side menu all right so let's go to app component html file and inside this file i'm going to start writing ionic split pane so we have a ionic split pane which will have like a split pane there if you are a developer or you have worked on that you should be able to familiar with that so we have ionic split pane and also inside this we want to create ion menu and inside the menu we will have a toolbar so ion uh menu let's go ion header first so we have header inside this we'll have toolbar and inside the toolbar we'll have ion title which will have tile as a menu bar so inside this we got the ion menu we got this ion header we got our toolbar and inside our toolbar we wrote ion menu let's get out from the header and then we do ion content so we do ion content and inside this we want to create ion list and inside the list we'll do i on dot menu uh dash toggle we do auto hide here yep let's do auto hide we set that to false and then we do ng 4 let's do a stir here in g4 is equal to let p of let's what is the name of the variable that we created that was app menu let's go back to app component and here we do add menu and then we'll just uh let's just uh do something let's just use something here now to do ion item and then we want to have this uh router direction implemented that we set is equal to root also the router link so the router link is equal to and here we want to use this as p dot url that's gonna be our uh url link so that's uh that's our ion item inside this ion item we want to have a label so ion label that can be p dot label or title actually yes that's the one let's save everything and also the last thing we want to do is we want to move this ion router outlet to inside this ion split plane and here we want to type main we set that on router outlet main so we'll save this and now let's go through so basically we have an ion app we have an ion split pane we have ion menu and then inside our iron menu we have ion header inside iron header we have our iron toolbar and then the title and then we did on content we created eye on list menu toggle and then inside the many toggle we created an ion item and then we defined the router direction to root and also write a link to p dot url and then we close this we close the list we got this ion router module inside uh ion split pane and then we define this property main to our router module let's go and save this and once we save this you see there's nothing happened the reason why we define all this in app.component but we have not defined this into home page because when the application start through lazy loading it automatically goes to the home module and it opened up this home component if you look at the routing module you see that if there's no part it'll go to the home so let's go and use this menu to the home so let's go in ion title we do something like our ion header and ion toolbar we will use say ion dash buttons we do a slot of let's just say start so we're going to push the button to the left right so let's uh close this and inside this we just use iron menu button that's it we save and let's see what we have so bo not bo we actually have a bu there let's save it again let's uh let it compile and we should see on menu so here you can see we have this we click on this and it opens up and we have this title we have this text 2 we have this test 3. there we go so we created our uh menu successfully now we can do some menu customization here i want to go back to app component and here we can say that type would be overlay so let's save this and let's take a look at one it gets compiled and here we'll click and you see this overlay here now so we're getting like uh basically a backdrop side of effect when your menu opens also we can define icons here as well so in ion item we can have uh let's just say inside this iron item i want to do ion dot icon and then the icon would be uh let me just square that so icon can be uh from the object as well so we'll do a slot first we set that to start and then name of that let's just do from p dot icon let's save it and now let's take a look at what do we get so i'm just going to make it smaller now guys i think it's already very big so let's click here and then here we can see we can we are loading icons dynamically from our object all right so now we have successfully done our sidebar menu let's work on a tab bar so for that i'm going to generate a new module so i'll do ionic generate and i'll use this as let's just say a module should be fine okay and then we'll name as tabs it's going to go and generate a module in the tab there you go we have a module there now inside this we're going to create another uh routing module so i'll do ionic g module dash dash routing and then we do tabs and let's take a look at if it generates a tabs a routing module it says could not generate module it already exists okay that's fine but let me just get rid of this okay we will look at our routing module that's not there that's cool app module that in there as well that is cool as well so we do unit generate module dash dash routing so what it will do it will basically uh generate a module with routing as well so here you can see we have a module okay and then it automatically imports tabs around your module which we have here and most of the work we're going to be doing in this tab a routing module but for that we're going to need another uh ts file that is basically is going to help us to you know do all the ui stuff and also we can generate a fab module as well so what i'm going to do here i'm going to create a file so we'll do do generate and dash dash flat and then i'll do a component and then we do tabs slash tabs now let's take a look so now we got a module let's take a look at the routing module let's look at the module that's cool we got tabs.component file as well we have a tabs component file there as well so that's cool guys now we can start working on our tabs so first of all let's just go in the writing module and here we want to define some sort of routing after that we want to make sure that our tab component is available in tabs.module file so in the declaration we're going to have to have component injected so i'm going to save the file and now we're going to go to tabs that component html file and right over ion tabs here i'm just going to make the size bigger first of all we'll do ion tabs and then ion dot tab now in the tab we're going to have some properties of let's say attributes first of all what would be the label so we'll do a label let's just say dashboard right and then we're gonna do an icon as well so here we'll do let's just say home icon for now now here we're going to do an href is equal to that would be tabs slash home column home okay now inside the tabs we want to have a router as well so if you remember in the tab so in the tab writing module we defined outlet so name was home so we simply go and say ion router dash outlet and then in there we want to have a name which set to the same name where we want to go to i'm going to save the tab file and after compiling the project you should be able to see the tab so here we have a home dashboard tab so let's go and generate some more modules so we're going to go to the terminal here and i'm going to generate a page so we'll do let's just say a page select the page and we'll do about us page right it'll generate all the things that we need then we do we generate another page uh let's just say contact okay as you can see we have two page about and contact and now we're gonna inject that to routing module so here we have two pages uh about us and contact so we basically don't want to do that here because we're not going to target them from our product module so we just want to control x sorry we just want to move both and then paste them into tabs rounding module and now here we are going to define some more part here so let's just uh take a look at a couple more things the home page is basically coming from this part let's go to app module and then first of all let's import those module here so we do about let's just say about us module and then we have our contact page module so we got two modules there now we go app routing so now let's uh copy paste this copy and then paste this twice and that would be let's just say about and then we have about that would be about page as well okay so basically we're saying part is about and outlet is about and the company we're gonna target is about us page as we imported our module into the tab module so we can target that now here we can say contact and then contact and that would be a contact page right i'm going to go to uh tab.component and here i want to make a copy of these so let's just do a copy of these this is going to be about icon is going to be about this is going to be about the time and now here we're going to go to tabs so here in the routing tabs running modules we have this wedding the part is tabs and then that's the tab component which we basically having that the same folder the children of those is this we have children about us page and a children is a contact page and the reason why we can access this here is because we have imported both modules in our tab module so here we want to go to let's go back to here and here we want to do tab slash about about here want to do contact and contact let me make it a bit smaller let's just do contact icon let's just do a contact and then contact as a router model so i'm going to save the project now and you will notice after getting compiled that you will have about and above so if i click on about it will take me to contact page i'm going to go change this to con tagged and now the icon is not available there so i'll just do uh chart okay i want to do the pie here that's just this random thing okay i'm going to save the project and now we can see we have about click here it takes us to about us page click here it takes us to contact page click here it takes us to dashboard page now within those pages if we want to see uh a menu bar so we go to about page and in the tool bar we do ion dash buttons and then we do ion dash menu uh button okay let me just make it bigger so see we have an ion menu button and inside ion button so save it and now let's go to about page and we should see this sidebar there as well so you have the sidebar there we should be able to see the same sidebar here now the same thing we're going to copy this and we're going to go to contact page and let's just do a paste here in the toolbar let's just save it and now our tabs and sidebar menu is working so here we go contact page we have a sidebar menu if we go to a bonus page we have a sidebar menu so just to show you guys that this is right so here we are at uh contact page i'll do h5 and say this this is the contact page and then i'm going to just copy these we're going to go to about page i'm going to paste that here as well i'm going to say about page let's save the project and let's take a look if we're actually moving to different pages now so here we are in the about page we can go to dashboard we can go to contact page here you can see we have this menu bar as well so this is how you can create uh an application using uh an application with tabs and also the sidebar menu now if you want to start your application with this kind of uh layout then you can download this from my github it's just gonna be you're gonna clone the repository and there you go you don't have to worry about adding all this boilerplate code so you got this on my github account and i'll share the link with you guys as well all right so this is how you can create a tab plus a sidebar menu using ionic 4. i'm going to be showing you a cool trick in ionic so i started building an application using ionic framework recently and i really liked it but there were a few things that i wanted to to enable for me to build up faster in ionic so the first thing i would like to show you that how you can debug your application right in your ide whether it's a webstorm or it's a vs code we'll look at a webstorm in this video also i would like to show you that how you enable cordova in your browser so you can start debugging while having her enabled there were few things that was not really working so i had to find a trick or a way to fix that let's take a look at the problem first so if i will go and start this out with ionic serve that will uh open my browser which you can see on the right and it will start the application so new application incident has been started so i'm going to login with one of the email address that i signed up with before and i'm going to say the password would be whatever the password i typed in now if i click on login it's not logging in so let's take a look at the browser developer tools and i'm just going to push that a little bit to the left and now the error we're getting is it says cordova not enabled uh error in sign in going to tabs page okay so what happening is when you use ionix and native api basically ionic has an api which lets you access the device hardware for example if you want to access the camera on your iphone using ionic framework you're going to have to have a cordova plugin installed so you could access that hardware so if you don't have a kudova enabled in your browser you can't do that so this this is the one problem another thing that to fix it you could emulate with the browser so for example i will go and i stop this i'll say ionic cordova amulet browser now emulating on a browser will fix this cordova problem but there is another problem with emulating browser which is you cannot live reload so whenever i change my code it should reload the browser automatically and let me see the changes that doesn't happen when you do ionic cordova emulate browser it does not really provide that so that's the problem so right now if you look at the terminal it's actually adding cordova plugins to the build so you can start the browser with cordova installed it's taking a bit of time at the when you start the first time so i'm just going to pause the video and come back when it's done okay so ammo loading is started now i can see in the console i can log in so if i go to for example always at gmail.com i'll go type the password and i enter and now i can log into the app and here i can see there's no cordova issue anywhere i can use uh firebase plugin i can use any external plugin which is required cordova so let me go and sign out and let's go back so right now if i would like to debug this page which is running on localhost 8000 i'm going to copy this and i'm going to go and edit the debugging configuration here so i'll just go and paste it here apply okay now if i start the debugger and i try to sign in and here i want to do a breakpoint so if i click here this is very init app and i'll refresh this you can see i can have this debugging enabled right because our server was running 8 000 so this is good but i won't be able to live reload my application for example if i let it go and if i go to any of the page for example login page and i change the name here from login to let's just abc and i save and now you can see it actually broke the application it did not reload automatically so i'm gonna stop the debugger guys and well let's go back to this ionic serve and let's go to the terminal uh let's go here i'm gonna stop the server i'm going to simply say ionic serve and that should open the browser again and it should give me a cordova error but i will be able to live reload my application let's take a look uh so i'm just gonna close these tabs and here you can see i have abc now so if i go change this back to login and i hit command s on a mac and i can see it's building and it's reloading uh the application now i want to have a cordova enabled here so how do we do that is uh is applying this trick so what i'll do i'll go to this platform where i actually build uh if you do ionic cordova platform add browser and also you do ionic cordova build browser you'll get this folder in the platform so what i'll do i'll just copy this www folder and i go back and i just right click on the the parent folder which is xp logo right now and i'll do just paste here and i'm going to click ok and it'll tell me okay you have the same names uh in the folder which is basically having the same numbers in the in the next folder where you're copying so i'm just gonna do override for all now once i override everything uh i would see that in our www folder which is used to to launch your application when you do ionix serve i'm gonna just expand that and here now i have a cordova before i did not have a cordova because when you do ionix sub it does not really add cordova stuff into www folder so what i did was i applied a trick here where i emulated or build a browser project and i copied over this ionic i copied over to www folder so now if i go and start our application with ionic serve and i should not see a cordova error anymore let me just uh hang in a second it will start the browser one once it saw let's go to the console and take a look at the app okay so now this is running through ionic serve and it's live reload is enabled because it's from ionic so so let's take a little console yeah right i don't have any errors anymore can i log in using this firebase so i'll just do at gmail.com i'll do password press enter and there you go the cordova is enabled and it's working now anytime i make any change so let me go log out and let's close this and we have a cordova enabled and i can do a live reload as well so do command s and there you go it's updating the application on the fly with live reload feature and also you have a cordova enabled so the only time you will have to copy this platform www folder and override the outdoor w folder when you have another new plugin installed from cordova for example you go and install a camera plugin which were not available before in your application then you will have to build a browser project and copy the cordova or wwe folder into the outer wl folders right now if i just go and delete this folder lastly we check okay so i'm just gonna go and let's just delete this folder right you can see that it was it had a cordova there but now if i do ionic serve it will build this www folder for me but it will not have that cordova stuff in it let's take a look so it's building uh there you go so right now we can see we have uh assets bill index.html and our indexed html is actually expecting this cordova.js which is not available there right so what i'll do i'll just go to platform and take a look at what we have in this folder so the difference between this folder and this wallet had this cordova.js source files a plugin folder also js credible.js file and then cordova plugin.js so if you copy over these three folders and files then it will start working with cordova enabled in application and that was a cool trick i tried to research online a lot how to enable a live reload in browser emulation but i couldn't find any and i came to know that this is not enabled by ionic team so i figured out this trick that you could apply and you can this is just a workaround we're going to talk about ionic native so ionic native is uh is basically a wrapper for cordova plugin that makes adding native functionality to ionic app easy so you can use a lot of native stuff by using ionic native for example you might want to access the camera on your device so you can go and use a camera plugin you want to maybe use uh for example you want to use a date picker you can do that so there's a lot of things available here pretty much everything you require to build a new app now today we're going to be using native swords a lot of times you will need to store some information to your local device so if you are running your application on iphone you might want to store something to iphone so for that we're going to be using a native storage api it's a native storage api variable uh stores are variables in android and ios so i'm going to take you to webstorm and app that we have it's a blank template and we're going to install a native storage uh plugin so here this is an app running so we have a input field save we have a get button so we can basically save something to native storage and then get it back so what i want to do is i want to stop the browser and i want to emulate these uh to the iphone emulators so we're going to go and type in a terminal ionic emulate or we can say ionic cordova emulate ios dash target and i'm going to define iphone let's just say iphone 8 okay now it's going to take some time and build my project let me take you back to ionic native and we can look at the documentation here so here you can see you can install clever plugin by just typing this command into terminal which will go and grab cordova plugin for you and then you can install npn install ionic native native storage at beta now i give you an example how you can use this uh native plugin which basically makes your life very very easy i'm gonna be making couple of videos just to show you guys some some tricky native plugins that require some instruction but pretty much all of these you can use by just going to their api documentation and look at this usage section which will pretty much explain to you how you can use this api and how uh you can customize it it'll tell you everything about this basically so we'll go to native storage where it was here and let's take a look at our emulator hasn't started yet so i'll do i'll just copy this line of code here and i'm just going to go and paste this into a terminal let me just copy this i'm going to wait for terminal uh wait for emulator to start whatever has started i can see the same app running in the emulator now so you're going to have to use cordova of if you want to uh use native plugins in your browser and you might have to do ionic cordova amoled browser instead of using just ionic serve so now i have these two functions save to native and get from native so what i'm going to do i'm going to type something here and i'm going to save that to a native storage and i'm going to click on get button and i want to get it back and just show that here the next thing you want to do is you want to grab these two commands and paste them into terminal and install code over plugin and also install ionic native native storage i want to install those so i'm going to go to a usage section now here you can use this function to set items and you can use this function to get items i've already written those i paste them and configure them so we'll go to home.ts file and here you can see we have imported first of all this native storage from native storage ngrx as this usage said and also i've added that constructor function here and implement the native storage into the constructor function then we have a title and then save to native and get from native so this is the function that you write and also what i want to do is when i save this a title key when i'm getting back i want to get back data.title also the app won't work because you have to inject this native storage into your module so we're going to go to app.module.ts file and in the providers i'm just going to type a native storage so we'll just do native storage and add a comma here let's save it now here it's causing an issue because it's coming from native storage uh net soils one on ng and ngx as well and now once type ngx let's save the project and you will see our lab app will be back on so here now i want to type hello what are you doing and i'm going to save this and this time i'm going to just remove this uh text with an input field and i want to say gibberish and when i click on this a get and then this method will be executed so it will go and get me a title key from a native storage so if i click on it i should get back to what's going on click on that there you go so you have a hello what's going on all right guys so this is how you store a values into your native storage whether it's iphone or it's android all you got to do is just use native storage and it's just an object that gets stored in ios and android and even the windows as well today i'm going to be showing you how you can debug your ios emulator running your ionic 4 application so i've been doing ionic 4 series so this is where i would like to show you guys how you can debug your app running on an ios emulator also you can do the same thing when you're running your app on your device using a usb so let's take a look at how you can debug it's a little bit different than ionic 3 debugging so first thing you want to do is you want to start your emulator you can do that by going to the terminal and going to your folder where your app is and typing command ionic cordova emulate ios and dash dash live reload if you want to live reload the server so for example if i hear say hey and then i command s and it will reload the emulator and we'll have things applied so i'm going to go back and change this this is what just i wanted to show you that you can reload your server so now i'm going to go and open safari so here i have a safari and here i'll see there's a menu called develop so if you don't see that what you want to do is go to safari go to preference and go to advanced and then here make sure you have enabled show develop menu in the menu bar and once you have that you close this out and then click on this develop tool and then click on this simulator and here you will see if you have any emulator running currently so you'll go to uh you will go to develop and go to simulator and then click on this 192168 3.192 it will open up this safari window and here you have everything which is running on your emulator so here if you go to the sources tab you will see a lot of files here and these files seems like that files but they have subfolder inside them for example right now i am in tabs module then i will find in the source app there is something called tabs tabs dash motor.js now in the code if you take a look at i have this app folder and i have this tab modules and here i'm lazy loading in the tab module similar to that if i look at here i'll go inside the tab and then it's inside the tab i have all the pages related to tabs module of all the models related to tabs module and now the tabs related to uh tabs folder which has some tabs files for example tabs.ts and also tabs of module so basically in ionic 3 you have to go to main.js and you go to next folder and then source and then add and here you will see every single thing but in ionic 4 because we use ionic lazy loading from angular now so angular 6 has a different kind of laser loading uh so we use that in ionic 4. that's why we have to basically load the module before we can see them in the sources tab so here you don't see a login nash login module so if i go to user tab in emulator i'll sign out and that will log me in log me out and show me this login module which is totally different thing so now if i look at the sources tab i see this login dash login dash module.js and here i will have all the files related to this so for example in my login.page.html file i should be able to see this sign in button and the text should be signed in so here if i go and change this let's just say i can't change this here but anyway you can see the html right here so if i go to loginpage.ts and i do a breakpoint here so let me just do a breakpoint here and also do a breakpoint here i'm going to go to emulator i'm going to start typing some email address and then try to log into this app and i click on sign in and you will see a breakpoint getting enabled so here i can see i'm at this break right now so it says this router dot navigate by urls it's going to take tabs module now so if i let it run it'll take me to the tabs module so you can see that you can uh do you can basically do a break find but you have to load that specific module to be able to see that in the sources so here i can see login now i can see tabs module and everything related to tabs modules are available here so let's go back and here i will show you some of the folder structure here for example in the tab module if i click on this routing file and i go okay if i go to charts page on the breakpoint here if you click on chart it should break one but it wouldn't because it's not calling this uh object again and again it's already called for the first time let me just get out and go to file and yet they go so here we have a logic function if i tap on this and if i click on click me that would just log in here so this is the function it calls when i click on clicking so here you can see you can log in and you can see what's happening here i'm gonna be showing you how you can debug your ionic 4 application using a webstorm websome has a great debugging tools this is what i'm going to show you in this video it's basically simple javascript debugging tool okay so i'm in the project and i have my app running here let me go and start the server i'm going to go to terminal and i'll say ionic serves and it's going to start the server on port 8100 on localhost and i can see there you go i have app static localhost 8100 now once that start i want to go and configure my debugger in ionic so i can go to tools and here i will have actually we can go from outside so here we have a debugging tools so i'm going to go to click here and click on edit configuration i'm going to delete one of them i have already so click on class and then i go to javascript debug and here i'll name it ionic for debug and i want to target the url which is basically login sorry localhost 8100 so that's localhost colon 8100 and that's it i'm going to apply that when i click ok and then go back to this edit configuration one more time and you can see it automatically apply this http colon slash slash that's fine click ok now here i want to click on this green button and it will start the debugger another thing we want to make sure that we have is called jetbrains ide support extension in chrome so if i go to new tab let me show you uh here as you can see here it says waiting for connection from jetpens ide support okay that's not an install so what i'll do is i'll go to chrome web store and here i will search for jetbrains and that's going to be this extension jetpens ide support click on add to chrome and you will be adding this to it so i have actually already installed that but i will have to enable it so go to more tools and go to extensions and here at the bottom i can see this is adjacent id support is installed but it's not enabled so i'm going to click on enable button i'll it will start my application in uh in chrome browser with jetpens ide support right now i can see the debugger has started i can see the console which i used to see in browser i can have this debugger tools where i could do to break points enable and disable breakpoints also i could just have like a next button here so let me go and first of all log in here so i'll do always at gmail.com this is my not my real id guys so don't try to message me here i'm gonna click on sign in and it will sign me in and after i log into application what it's not signing in let me check i think i have a wrong email id and password so i'll click on sign in again and there you go i'm in my app now so here i want to go to this click button where i could log record log something and also i could do a break one day so i'll go to this uh where is it home.page to ts and you hit the button called console.log hello this is what this button does so click on this and once i click on that i can see it's it's basically using this breakpoint in my ide so this is gonna save you tons of time because you're going to save a lot of time by going to the browser going to the source and going to do all the break one so you're writing a code you can do a break one right being in your ide now let me give you a quick tour of this debugger tools first of all we have this button here which basically says resume program the shortcut key is alt command r and click on that and it will resume my application now let's go to another page where i sign in so i'll go to login page and here this is the function that gets called when i click on the sign in button here so i'm going to click login here and i want to click uh here to breakpoint not login actually breakpoint so i'll just type in my email address and i'll do hello one two three and that should break point here so here i can see i'm breaking point and right now i can see what's in my email so if i click on this that show me how i said gmail was passed into this function what is the password that's hello123 that is okay and also if i go and resume my application by clicking on this button and that will go and lock uh i'll it will breakpoint here so now it will take me to this router dot navigate by url and i can see if i just let it go by clicking on this button that will take me here okay so now i have a lot of buttons here i have this current user so let me find this current user function which should be in our users page and that will show me what is the current user so here i'll do a breakpoint and then i'll do click on current user and that should break one here okay let's go so in the user response from this function if i hold over it says cordova not available that's fine because i'm not running this on angular that's rule it will basically show me so if you go to a debugger you have this overview of local variables whatever the values are currently they're holding which is great also you can do right click and you can say add to watcher add to watches so every time this application runs and pass through this function you will see this variable getting filled in with the current value of that variable all right that was a quick introduction to debugging in webstorm i'm going to be showing you how to use this http plugin from ionic4 library so i'm in right now a native api section and here we have this http uh also i want to mention that you could use angular http client module to do your http calls but by using these you're going to get some benefit for example you're going to get this ssl pinning also we have this background threading all requests are done in a background thread so there are some benefits using this native plugin so yeah let's go and take a look how we can use this i'm gonna take you to webstorm and here i have the application ionic2 which we were using in the last video so first thing we're gonna do is we want to import this plugin to our module so we can do that by importing that plugin but remember to install it as well so here we have two commands you have to just copy this line of code i'm just going to copy this i'm going to go to terminal i'm going to paste that and press enter and it's going to install this ani cordova plugin and also it's going to install ionic plugin advanced http also we want to install this ins uh ionic native http beta i'm just going to copy that and i'm going to paste that here i'm going to press enter and it's going to install that plugin as well so the next thing we want to go to take a look at our applications right now in home dot page dot html file i have this get button which calls this function get request right and then we have this another request object so we go to home.page.ts file and here you guys can see we have this request object and also we have a get request which doesn't have anything yet so first thing let's import our http so do import and undo http will import from ionic native and also wanna you know add this slash ngx so if you take a look at we have this usage section which tells me it is slash ngx so i've got that here and now i need to add this http module into a product or you can call it the service so we can directly inject that into home.module.ts or you could add that into app.module as well so it's it's okay to you know add in home.module.ts and if you want to use this http throughout your application you're better off adding that app.module.ts because you can use this into any module later on because that's the payment module so if you inject that into a pair module you'll be able to use that in any child module so we're going to go and add that to home.module.ts file i'm going to press enter here and i'm going to say providers and provider takes an array we do http and then also from http then we're going to add a comma here and also i want to add this slash ng x now it's all good now guys so let's go and write a function here which will help us to you know do a get request using that plugin so we have this http here i want to inject that into a constructor so we'll do private http and then http now inside this function i want to use this dot http dot get method so get method requires three things url parameters if there's any and header if there's any so we'll do just a simple url now i needed to have a server running to do a api call so instead of running my own server i actually found this json placeholder it's a fake online rest api for testing and prototyping so that means i could just use this so it allows to do post requests and get requests so put requests and a delete request so this is basically if we can test over front end it will test if our http methods are working or not so let's take a look at the first one this is a url that we can call using http module so i could use this fetch but we're using http advanced plugin from ionic or cordova so here i want to type a url i'll paste that here and then comma and i'll just pass in an empty update it requires two parameters we can just do an empty one now it's a promise so we're gonna go to next line and we're gonna handle that but then and then i'll say if i get the response back then i want to set that response to request object so this does request update is equal to response.data so if we take a look at the documentation of ionic so when we get back we get the data back so we get the response and we have it three things status data and has we can take a look at later on but let's take a look at what data we get back i want to handle uh the errors so i'll go to the next line i'll say dot catch and if there is an error then i can just you know set that distort request object and we can just set that to error as well so we'll see errors there as well so now when we get the response back from this call we save uh the data into request object and request object is injected in our html file which you will see what is the request object you're getting so let's go to terminal and let's start our uh emulator so i want to do this ionic crypto amoled iris that's just targeted is equal to ionic iphone 8 and then dashboards live reload so i'm gonna just press enter here and we will wait for our emulator to start okay so our application is started i'm going to go and click on this get button okay cool so we got this user one id one a title delete us aut it's just a fake data okay i'm gonna go to this json placeholder and i'm going to do a same call here i'm going to click on try and let's see what we get so we've got user1 id1 okay so that means we're actually getting the same data we're getting the data from here so if i go to for example in to do's let me see if i can have any other uh other call so we'll just maybe let's go to post and then we can do a request for a post as well okay so i'll do a post for ah that's a lot of polls that's like a hundred posts that i wanna i don't wanna do that so if i go like you know get post one which will return me these so let's go and change this we'll go to home.page.ts and i'm going to go back and copy this url and i'm going to paste that here i'm going to save it and now we'll just get our emulator up and i'm going to click on to get again and this time i get this user id titled sun oh right so we're getting the post now another thing to notice here guys this is coming from https which means that we are actually doing this through ssl so it's a secure uh secure uh api call so this is good so if you use the http client which is in angular you will have to write some code or you will have to enable ssl manually so this is how you can use http module to do your calls i also want to show you that you can do this uh post request you could do this delete request or you could do this put requests as well so if we go to jsonplaceholder we go back and i'm going to go and find any post request so here i have a post request that's post um yeah so you could do basically post requests uh that's gonna be very long video but you're gonna give a try and basically what you wanna do is you want to provide these parameters so we do a url which would be this slash post and then that body if you want to add anything into your body for the post then we have to define the headers as well and that will just make a post request i'm going to be showing you how to use this sms plugin from ionic 4 library so let's say in your application sometimes you want to send a sms message to a particular number and you don't want a user to go and open the sms application and then type the number and then type the message there so instead what you want to do is you want to create a button which will take them to sms application also type the message there and also add the number there as well so we're going to learn how to achieve that using this sms plugin and this plugin is supported for android ios windows windows 8 phone as well so first thing we want to do is we want to install this ioniq sms plugin i'm going to go take you to my terminal i'm going to paste this here and press enter on the terminal that will be installed then we go install npn install sms beta then we go paste that as well okay so next thing i want to inject this sms plugin to home.module.ts file so this is a module for my home.page.html and home.page.ps so i'll just inject that here so let's go top i'm going to type import and then we'll do sms and then we want to add this slash ngx okay so that's been imported let's inject that into the providers sold to here sms i'm going to save this module file in home.page.html file and here i want to create an ion button and that button will say send sms and when i click on that i want to call send sms that's it and now let's go to our home dot page that here's file and here i have done a few things so i've imported that plugin there and i've added that into a constructor so that's just there so now we're going to create the function so i'll just say send sms and then inside this i'll simply call this.sms.send method and that send method will require two parameters first one is a phone number and the second one is a second one is a message okay so let's type the phone number okay so i'm going to save this file as well now i have run this application with ionic serve.c and i'm going to show you guys that application running on ionic dev app so let me just bring up my screen with this is an application running so we're going to tap on send sms now so if i tap on send sms it will open imessage app and it will add the number there and also it will have this message already written for me so this is cool if you want to provide this functionality so you don't want to your customer or app users you don't want them to type this long message and type your number so you can get them to you know send you a message directly by just simply tapping on this send button now and you do the hard work i'm going to be showing you guys how you can use native api from ionic 4 library now i've i've given a tutorial of a couple of api in our tutorial series for ionic four but also there's a lot of apis that are available you could use from ionic for for example you have a 3d touch so if you want to write an application for ios and you want to do something with 3d touch you can go to 3d touch documentation and read about it usually ionic documentation is really really great for every api for every native plugin for example here in 3d touch it tells you how to use this plugin so it's basically now up to you to improve your knowledge in ionic 4. so if you want to go and study further about native api you can go to any of this api and then go and read the documentation and so far whatever we have learned in ionic 4 you will be able to use any of this api by just going to the to the um this page and then just clicking on that for example the device api is pretty simple as well all you got to do is just install the plugins and then import in your module and also import in your ts file wherever you want to use it and then you can call all of these instance members so you want to use model platform serial uid a version whatever you want to get from it you can use this device plugin to do that so that's it for ionic 4 tutorial series guys this is the last video for ionic 4 and i hope you liked the tutorial series and yeah i'll talk to you guys in the next series thanks for watching subscribe to the channel and i'll talk to you guys later