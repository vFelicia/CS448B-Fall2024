learn how to deploy projects at digital ocean from code with signin while it shows how to deploy Jango projects you can follow the steps with other types of projects along the way you'll learn about engine X supervisor git G unicorn postresql and more hey guys in this video I will teach you how to deploy one or multiple Jango projects to a server on digital ocean much of this can also be used for other Frameworks as well I'm going to use a server with ubun 22 04 which is their latest stable version with longterm support and I'm going to use Technologies like engine x g unicorn post SQL supervisor let's encrypt GitHub and probably some more I've created two very basic jangle project on machine they don't do anything more than show a few pages and some images so it's easy to separate them from each other since we're going to deploy more than one project I created a little todo list that we're going to go through in this video so first we have the introduction which is now then we're going to create a new account create the server install software and similar set up requirements file from the local environment send code to get uh set up the database on the server engine X get SSL certificate and similar so now the introduction is done then we can continue to create an account on digital ocean so if you just go to digital ocean.com you can sign up there which is free I have a link in the description below and if you click that one you will get $200 you can test this servers for 60 days so I have already created my account and logged in so when you have done the same thing you will be presented with with a screen similar to this one if this is your first experience with deployment all of this can be a bit intimidating but don't worry you would quickly get used to using digital lotion because everything here is well documented and easy to understand great so let's go back here so I can set this task to done next up done is to create a droplet so you have a create button up here where you can create things like droplets kubernetes app platform functions databases and similar so a droplet is like a virtual private server or VPS some places call it nodes and there are different terms for this but this is just a simple Cloud platform where we can have ubun to install and it's then possible to install software there for us so we can click this one and then first we need to select which region we want to have this it's practical to have this as close to where most of your users are since I'm located in Norway it's best for me to have it in Frankfurt or Amsterdam so I'm going to select Frankfort for this one and I only have one data center so it has to be this one so if I keep scrolling down then I can see here that I have OS you can also install Marketplace images that's typically comes with uh ready installed WordPress lamp larel or other Stacks but I'm just going to go for OS here select yuntu and version 2204 so you can see here this is LTS which stands for longterm support which means that they're going to support this for at least 5 years I think next step is the size so if you're going to do something that requires a lot of CPU you it could go here it's a little bit more expensive or if you need more memory need more storage Etc but I usually just go for the basic here you can also select what sort of SSD you want to use these are typically a little bit faster and you get AMD or uh CPUs or Intel but for this tutorial we can just select regular which is more than enough um since we're going to have multiple project This Server might not be big enough not sure but I'll just go for this this for now so then I have selected this this costs $12 per month and you only pay for each hour this is up and running so if you delete it after one day you will only pay for one day but even if it's off you are still paying so you need to delete it if you're not going to use it here you can connect to multiple diss if you need more volume because you get 50 GB but this volumes are typically a little bit cheaper uh you can also have weekly backups that's based on the price of the server I'm not going to use that now and then you can select how you're going to connect to the server you can either use SSH Keys which is the most secure or you can go here and type in a strong password so I'm just going to do that now like that um then if you want to have metric on the server you can have that this way you can get email warnings if you use too much uh CPUs or if uh you have a full dis or similar then you'll get the free an email warning um then if you want more than one servers you can do that here we just going to do one now because I want to show you how to have multiple project just on one server and then the host name this could either be something cool or it can just be something unique or something like this where you see that we are using ubun we have one virtual CPU we have 2 gab of ram it's in Frankfurt and I just put it uh without any tags I don't need to do that and it can just be in my project code with Stein so if I now click create droplet then that should be it and now you can see here that it is being cre in the background so this typically just takes a few minutes and when that's done everything is ready and we are ready to connect it and start updating stuff and now you can see that this is done so if I click this I will get a little bit more information about this um here's the IP address we're going to use to connect so click copy to get the IP address and go to a terminal um on Mac you have a builtin terminal or you can download iterm 2 on Windows I think you can download puty or maybe you even have it installed all already okay so now we can connect to the server by saying SSH root which is the main or root user for this server and hit enter yes I want to add that to the list and then the password I used to create the server um sometimes it can take a few minutes after this initialization is finished before you can connect so if you get the wrong password just close and try again in or three minutes and you should be able to get in great so now it's installed and we can access it perfect so then we can set this to done and we can continue to this task which is to update and install software so even though this is just created there are a few updates that usually can be updated when you're ready so to um make sure that all of the references and similar to the packages and software are up to date we need to run a command called sudu AP update so this is sort of just checks if there are anything to update like that and to run the actual upgrade we run sudo apt upgrade so you can see here there are a lot of things that needs to be installed now so just type capital Y and hit enter and wait a few minutes okay uh suddenly we're getting prompt with a little thing here what do you want to do about the modified configuration um you can just keep the local version in hit enter yes there's one more thing here saying that if you want to upgrade curent all for you to you need to reboot the server I'm not going to bother about doing that now so I just hit enter and hit enter again if you want to reboot you just need to type reboot hit enter and wait a few minutes okay so now everything is updated and upgraded so now we can install uh more most of the software that we are going to use here on server so to do that we run sudu AP install and we're going to install a package called python 3 pip and Python 3 pip is a package that installs pip and pip is a tool that we going to use to install additional python packages space we going to also install python 3D and this is a set of tools and librar Sy and this is a set of tools and libraries for Python and I think it's required for packages that that are connected to language C for example we're going to use post SQL which requires this and I want inst lib p qd uh this is also a set of tools and libraries more for postgressql and not necessarily Python and I won't install postgress ql and I want to install postgress ql oops postgressql D contrib and this is a package that contains some additional modules for postgress ql and I want to install ngex which is a web server we are going to use I want to install Search bot which is uh script or package that we going to use to get SSL certificates and we should install python python 3 SE bot D engine X this is a Sor engine X this is some helper things for engine X to get certificates using Python and supervisor which is a program that we're going to use to run in the background to make sure that Chango is always running on the server I will come back to a few of these later so you don't have to worry too much about this yet but now we can hit enter and yes I want to install all of this so just type capital Y and hit enter and wait so same warning as before just hit enter hit enter and we should be ready great so I can go back to my Todo list as at this TK to done next step is to configure post SQL or setup post post SQL so let's go back here we are still connected to the server and to log in to post SQL we are onun pseudo to select the user which is postgress that is a user that postl comes with and we want to run a command called psql which is sort of a command line for uh post SQL um then I want to create a new database for one of the project so create database Space Project one and with semicolon and hit enter so now we have created the database next I want to separate user just for this database so create user and I'm going to call this project one user feel free to be a little bit more creative if you want it with pass word and I'm just going to use password project one password um this is just educational so I don't mind if this is very not secure um but of course you need to select a more secure password for your project hit enter next I need to do some um changes to this user so alter role and the role we're going to change is Project one user we're going to set the client and coding to utf8 so this just make sure that the data that are stored in the database is uh following utf8 standards and one more alter rooll project one user set default underscore transaction underscore isolation to read space committed wait that's not correct alter Ro project one user set was supposed to be two Ms there like that and this is that each query within a transactions sees only data committed before the query begin so other transactions can modify the data being read but those modifications are not visible to the current transaction until they are committed so that means that we can write to the database and read at the same time without there being anything bad happening you want to set the default time zone so alter roll same user set time zone to UTC hit enter um so now we have a database and we have a user but they are not connected so that's the last thing we need to do here Grant all piles privileges that's not the correct way to write this prival legus like that on database select database which is Project one the one we created here to the user we want to Grant all of the Privileges to and hit enter so now this user can insert data read data delete data Etc then I can just write back slq to quit this command line for post SQL so now the database should be set up it's still empty but we're going to come back to that later in this tutorial now I can set this task to done so the next step then is to create a virtual environment or at least the place where the users are going to be so I kind of want to have these in the same task because there are more or less similar so let's go back to the command line and then we can begin by installing or upgrading pip so uh sudu pip 3 install Das d upgrade pip just to make sure that we have the newest version yes y y y so we already have this okay so successfully install pip 24 perfect and then we can create the folder where all of the project are going to be located so MK there/ web apps this could be projects or whatever you want but I'm used to putting all of my Jango projects in a folder or a root folder called Web apps next I want to create one folder for the project one so I'm get there project one go into this and then here I can create a new environment for this project so python 3m van and then the name of the project which is just EnV you can call this whatever you want but EnV is easy to understand what do okay forgot to install this so just copy this line paste it hit enter and yes I want to install this okay okay if I just used the arrow post to click up two times I get the command here again I can hit enter and now my environment should be created great so then this is the environment for project one um I want to create a group or sort of a user group for all of the web apps so sudo group add space test system because I want to add this to the system web apps and then I want toate the ubun user so not a post user but a Ubuntu user for this project so sudu user add space D system dg which stands for a group ID and the group ID is web apps and then which shell to use so shell should be slash bin oops shell like that SL pin slash Bash then I can set a home folder for this user and the home folder is/ web apps SL project one so this is where you will be sent if you try to log in with this user and then I just specify the username here which can also be project one user okay so now we have the environment and we have the users here great so now I can go to the todo list and set this here to done next St then is to set up the requirements Fields so if I go to the editor you can see that I have a project here with an environment file environment folder and I have the Jango project here with a core app and a few things the project looks like this it's very similar uh simple just have a front page with the title and image and a simple about page so it doesn't do very much but still I want to create an requirements field for this so if I now go to this tab I have the project running here and I can just stop it if I run LS you can see that I'm in the same folder as manage.py and this is also where I want my uh requirements requirements file to be so to create that I can say pip phe and you see that the packages I have installed here are asgf Jango 503 and SQL pars um to create a file just run this command and use this uh bracket here and pipe it into a file call requirements.txt if I go back to visual studio code you can see that I have bit here and I want to add a few more things here that we're going to need on the server first it's psycho pg2 Das binary equals 29.9 um this is a binary file or something that we need it's sort of an adapter between Python and post SQL um we're going to use something called EnV equal 005 this is a a package that are used to read environmental files from the server so you don't have to store things in the settings file and G unicorn equals equals 21 to Z gunicorn is another web server that we are going to use on the server so we're going to use both engine X and gunicorn and later I will explain how these are connected to each other so we can save this now and that should be it for the uh for the requirements file so I can set this to done so then we can create a separate settings file for the production so if I find Project one project one settings Pi I can copy everything here into a new file and save it as settings prod do PI um in production we do not want to have the secret key stored in here so we can read this from an environmental file instead I going to do that soon um debug needs to be set to false so in the production file you do not want this secret key to be here so you can just remove this and instead here we can say os. Environ . getet and we want to get the key called secretor key and default this to be empty so you can see here we get the warning because we have not imported OS yet so we do that here import OS and we also need to import the EnV that we just installed so below here we can say from EnV EnV import load. EnV and I just initialize this by saying load. EnV like that you can see I get a warning because I have not imported this uh sorry installed it we're going to do that when we deploy so this can just be like it is but copy this scroll down until you find where we set up the database um we want to use a password field here password word and then we can say DB pass word so this environmental file is something that I want to set up on the server um the engine cannot be sqa 3 anymore it needs to be postgressql uncore Psycho pg2 which is the adapter that we installed the name is not this one but it can be project one which is the database name um not sure if you can see it anymore but yes it was here create database and then the user uh user pass in that one you could add these two in the environmental file if you want to do that but for me it's enough with just the password uh we need to set up the host which is Local Host and the port which can just be empty so now we have configured this to use um the post SQL database that we have created so we can save this now and if I now go to the todo list I can set this hair task to done so now comes the question how do we send code to the server um you could zip the file send it and zip it and just have it there you could use R sync or SCP or similar but uh most cases we like to use GitHub so it's easy to send code and deploy whenever you want so I can go to github.com if you don't have an account it's free to sign up and when you are in here you can just click your profile up here and your repositories and then you have a plus button there and I want to create one called project one I don't need the description and this can just be public since I'm just sharing everything with you but if you choose private no one else can see that you have this repository not going to use this um this is something I want to do manually and no license so just create repository and I want to create a new rep repository I do not want to push an existing so if I go there now I can copy this go to command line and not on the server sorry here locally I can say this one to create a read me file so that I have that go here again get initialize like that so now I can say get status and you can see here that these files are going to be committed and before I do anything more of this here I want to do one thing and at is to create an get ignore file so in this folder not this one but this project one I say dog ignore and I want to ignore all files that just ends with PC in the root folder and in this folder p see and in the same sub folder there again so now we just ignore all of these because we don't want to have these in the repository I want to ignore files that is called EnV um and I also want to ignore this database file so db. sqlite3 save um yes I think that should be it so now these files here will not be added to the repository not here and not on the server so now we can continue with this one but I want to run get add Dash because I want to um oops get status I want to add all of the field files that we have here so now you can see that all of these are going to be pushed to the repository next step is to commit this message so now get status now it looks like everything is done on Branch main nothing to commit because I have committed it but they are not pushed to the server yet or to giab first I need to set which branch to use and then I need to set up the origin which is the URL to the repository on get and then I can just get push you origin main so now we can see that I need to set up a username here my username is T hset and the password is not actually my password because now I get information that support for password authentication was removed AUST 13th 2021 okay so even if this is a public uh repository you need to specify which users can contribute and only the users which are added can cont tribute but they need to log in with a password so if I find um my profile sorry not my profile my settings page so when you have got into settings you can scroll down and click developer settings and in here we have something called personal access tokens can just use tokens classic and create a new one here so generate new token uh classic note code with Stein tutorial expiration this can just have no expiration and I want to have full control over this I don't think that I'm going to need any of these so yes generate token so then I get this token here I can copy that one and if I then go back here click up again to push this sign in with my username and paste the password or token I just created so now this was pushed and if I find here now and refresh then you can see here all of these are pushed here you can see the requirements file we have created and similar okay so now I can go to the todo list that this to done next up then is to get the code from GitHub to do that I just click code here and copy this address go to the command line find the server make sure that you are in web apps SL project one where we have this folder oops I should not have marked it and then just get clone and paste in the URL so this is a public project so we don't need a password or token to get this data so now I have it here nice so if I go back here now I can this done then I need to set up the environmental file and before I go to the initialization of the database then we can install um software from in requirements forgot to add that as a task but now we can set up the EnV file so if you go back here go into project one which is the root folder for the jangle project vi. EnV to open up an editor you can see here now and to type things here you need to click I then you can see down in the corner it says insert here we can specify the secret uncore key so this should be something very long and secure and do not share this with anyone and then dbor password and paste in the password that I created earlier which was Project one password then I can click Escape now I can't insert anything more here and to save and quit I type colon WQ as you can see down here and hit enter so that is right and quit so if I a cat EnV now you can see that the contents of this file is this one and these are the things that I want to read in the settings file okay so now we can in um okay so let me just see here now I can set this to done now next up done is to install a software from the requirements file for example jungo to do that we need to activate the environment by say Source Envy bin activate see the name down here now and to install everything we need we is a pip install dasr and I need to specify the requirements file which is located in project one/ requirements.txt so I can see that everything almost at least was being installed okay it couldn't find EnV 005 okay so let's try to use this EnV instead so if you just copy this name go to your Visual Studio code and find the requirements file you can replace this equals equals and save I need to send this code to get again so if you go to the Local Host here then I can say get status you'll see that this file has changed so get add requirements at txt get commit DM change requirement get push and go on the server again going to project one say get pull to pull the latest changes okay I did a change in that one so let me just fix that and write pull again so if I now say cat requirements you can see that this is now there instead of the other EnV so let us try to run the p install d r requirements command again so now all of the packages was installed perfect so now we have G unicorn we have the postl adapter we have EnV we have Jango and everything we need in order to continue so now I can go to the todo list and set this to done then we can initialize the database by running the migrate command so if I not try to let me just show the contents of manage.py this will try to use the project one. settings file so we need to change this to use we need to specify which settings file we're going to use so to do that we can say python manage Pi migrate D settings equals um project 1. settings prod to point to that file instead so now we can see here that it actually run the migrations um we still don't have the db. SQ light because that doesn't exist this talked to the postgressql database so now we have a poql database running and we are connected to it using Jango nice okay next step then is G unicorn and G unicorn is sort of the web server we're going to use for Jango this is perfect for D Jango because it's fast and it's there just for Jango the engine X part of this tutorial goes more for the media files and settings files that are in Jango so we have installed this and now I want to create a script that are going to run D Jango make sure that D Jango is there which uh settings file to use which users to use Etc and to do that I can say touch um EnV bin gunicorn start and then I added this file Bing VI Envy Ben gunicorn Start first I just want to insert here and specify that this is a shell script so slash bin slsh so it's a shell script um set the name of this to be project one then I can specify the directory or the part to Jango project which is/ web apps SL project one/ project one next I want to specify something called sock file which is a file that gunicorn will create automatically when it's started so we don't do this manually but this should be located in web apps project one run g unicorn. sock um which user should do this user equals that is Project one user and this is the Ubuntu user that you added with the user add command the group that should be allowed to be here is web apps uh num workers equals 3 and if you remembered when we created the server we had one virtual uh CPU on the on the droplet so you multiply that by two and add one if we had two CPUs this would be five so you multiply two by two and add one and then which settings file to use so Jango underscore settings underscore module equals project 1. settings prod so that just points to that file and then we have a file in this one file called wsgi which just um sort of sets up the project and it's entry points before you are sent to the settings file which points you to the URLs file Etc so changoor wsgi uncore module equals project 1. wsgi uh time out equals 120 so this is just how long time before everything just shuts down so now we need to instruct uh this script to do a few things so we do that by saying CD dollar sign Jango there so you tell it to go into that folder so now we sort of are in this folder and when we are there we want to activate the environment by saying Source do/ EnV bin activate because this EnV folder is actually in this folder and now we want to uh export or set a few uh temporarily environmental variables by saying export Jango uncore settings underscore module equals dollar sign and then we can use this variable up here export python po so we need to alter this a little bit by passing in Jango there colon python part uh next we specify run there and where that is located so run there equals dollar sign pass in their name like that their name and sock file so we just specify that you should uh sort of start inside there the Run folder and the socket file um then we can a test d to see if that folder is created run there and if it is not then we MK there P run there so what this does is that it checks if this folder is created if not we create it and when that is done we start unicorn so exec um/ EnV because we are still in this folder EnV bin gunicorn and in here we pass in the wsgi module that we specified up there colon application back slash then here here we can specify a few names that are going to be handy in the log files and simar so D name Plus in name which will be project one we add this backslash because then we can go to the next line and continue this so it don't belong a very long command but this is much easier to read workers can be set to num workers a timeout should be set to time out user equals here we use the equal sign and not just a parameter this is user which is this one and the group which is group back slash again then we bind Unix to stock file and then we specify which log level we're going to send to the log files so loglevel equals debug another back sign back slash I mean log file equals like that so um hope you understand everything here if something here is unclear feel free to leave a comment below and I will try to answer as you as soon as possible now we can save quit save and quit and then uh the todo list we are still on this one uh this one so we can try to run this here now by saying do/ EnV then oops Envy then Ed unicorn start so permission denied okay we need to make this executable and we do that by saying CH mod plus X and then just paste this in try to do this one more time um it actually looks like this was started now and that's okay and it was okay now because the user I am is root but G unicorn is instructed to use the project one user and this will not have access to do that there and to get this access if I now run LS L you can see that this is owned everything here by root so we need to change the and the ownership of these folders by saying CH own R because this should be recursive so it's in this folder this folder and this and also all of the sub folders specifi user by saying project one user colon web apps because it's in this group and Dot so then it to be in this folder and all of the sub folders if I run LS L again you can see that project one user now owns this and the web apps is the group it's in so if I now run the script again everything seems to be in order perfect just quit this and go here set this to done next step done is to set up something called super supervisor and supervisor is sort of like a it's not like a bot but it's a program that will run in the background and if for example um G unicorn stops it will try to start it again and it will make sure that it's being automatically started if you reboot the server and similar so we install this at the beginning so we just need to create a settings file for this I do that by saying vi/ Etc supervisor SLC and then the name which can be project 1.on here we specify in uh sort of uh brackets program column project one and then we need to instruct this to what command this should run so command equals SL web apps SL project one/ EnV then unicorn uncore start so we just want to make sure that it runs this command we need to specify which user it should use and that is Project one user and then we can specifi the log file for this which is Project one EnV logs actually I want this to be not there I want this to be in Project one/ log so not inside environment but in this root folder and then a file called supervisor. log then we add redirect STD a equals true and this takes the output from the manage programs subprocesses to the standard output stream so we just for uple things that are outputed in Jango so you can get that in the supervisor log and then we specify at the environment the language is default in English us uh f8 and the same here so we can save now and quit and then we need to tell supervisor to use this or to activate it and we do that by saying supervisor CTL uh re read to check um okay you can see now it actually get the error because we don't have this logs folder we need to create that M okay there logs because you see that I'm here now which is the one that is best specified but if I run LS Lord now you can see that this is owned by root so if I just click up a few times until I find this command then I can make sure that project one user owns this folder as well great so let's run the reread command again there here project one available and then we say supervisor GTL update to initialize and start this if you now run supervisor GTL status then you can see here that this is running so now supervisor has start the G unicorn and G unicorn is running in the back end or the background we can't access this because uh gunicorn doesn't have a face out of this server and that is what engine X is going to help us with so I just want to go back here now set this to done before I continue by setting up NG X and to setup engine X we can create uh a new file but let's go to the settings uh sorry the command and to create the config files for engine X we can go to the folder slash engine X and to create the config files for enginex we go to the settings file there so cd/ Etc engin X sites available right LS here and you can see that we have the default one we can just delete this by saying rm F default and then we can create our own by saying touch project one. conon and to edit this now we say VI pro project one. so first here we initialize something called an upstream Upstream project onecore appcore server at Cur Braes and in here I specify a server which we bound to Unix and the URL to that one is VB apps / project one run and then the gunicorn socket that was created so this can be closed and then we specify the server here so server another curly brace and we want to listen to Port A 0 listen 80 and 80 is the port for HTTP and we can set up the server name and uh I have set up two domains to point to This Server now project 1. code with stein.com add the semicolon at the end there and in here I want to specify where we have the logs log files so access log equals web apps sorry no equals sign there just web apps SL project one/ logs SL access.log now we do the same thing with the error log web apps SL project1 SL logs error.log and we are going to have a static files uh for the admin interface and similar so we need to set up a location for static files so now uh uh engine X will handle this for us location SL static uh previously we have just used the python managed by run server to handle this but we can't do that in production in here we set up an alas to web apps SL project one/ project one which is the D Jango project this is just the root folder and then there if you have a folder called Static we can read from there so all urls that begins with static will go in here and find the files now we can do the same thing for media media slash set up an Al to the media folder media then that can be closed and then location so for everything else we go into this location and here I want to set up something called a proxy set header and what this says is that it's the standard HTTP header used to indicate the client's original IP address so everything will be uh pointed to wordss the log files and further down in this system and then one more proxy set header host HTTP Host this is almost the same thing just ensures that all of the requests similar from the original request is being sent forward to Jango so we can handle everything there then we say proxy redirect off and this is disabling URL redirection for responses from the Upstream server that we have up here and that means that engine X will not modify the location header in HTTP redirection responses received from the back end so that means that we have full control from and go and if the request is not a file name then we can say proxy pass HTTP call SL slash then we just pass in the project One apps server from the top there which means that um all other requests than these which are files will be sent in here and handled by the gunicorn server so now we can save and quit go up one folder and into a folder called sites enabled here you can see that we still have default so let's delete that one as well and run LS so now this is empty so now we just need to set up a symbolic link back to this one that we created so Ln s do sites available SL project onec dot so if I run this command now you can see that we have this file here and it just points back to this one so this is just sort of the best practice way to do this now we can start engine X by saying service engine X start so there were no errors which means that hopefully it was working and I can now go to Project 1. code with stein.com yeah I get welcome to engine X that is not Cor correct um let me try to restart this took a little while um refresh again and I will get the bad request 400 okay at least I'm not going to the default page for engine X anymore so if I now go to back to web apps project one logs then I can see in here I can cat the error file and see if there are anything no cat supervisor everything there seems to be running okay so why is there a problem now um this can be a Jango error so let's find out I think it is actually when I think about it if I just go back here we have something called allowed hosts and here I need to pass in project 1. uh code with stein.com say and then go here again get add dot get status let's see what I'm committing to server get commit changed hosts get push so now I sent the code back to get again made a change then I can go into the Jango folder as I get pull to get there again okay see I get the dubious ownership now that's because I am root user but if I say sudo Dash u d u uh project one user that did not work sudu Dash yes now you can see I change user to project one and if I go into project one folder and you can see that I'm in the jungle folder get pull then I can jump out of this user Again by run hitting command contrl D and now we need to restart supervisor in order for these changes to take effect so supervisor CTL restart project one so now that stops starts and we are ready to test again so now now I have the project 1. code.com running nice you also see that this media file is coming from there perfect last thing now is the you can see up here that this is not secure we are coming from uh HTTP but we want https I think I can just say sech sear bot now d project 1. cod with stein.com and then I need to pass in an email address code with Stein gmail.com yes I agree no I don't want emails already get them so now you can see that it's requesting to get the certificate see if this domain actually points to this server great so now successfully deploys there so now we have the certificate you can see here the location for this so then we just need to instruct engine X to use this certificate so we need to change the config file a little bit VI Etc and your next sites enabled sorry sites enabled SL project one um okay searp actually did this Auto atically so we can see here that it did some changes it now listens to Port 443 instead of 80 and down here where it listens to Port 80 it will just redirect us directly to https we can try to restart engine X now refresh here now and then we can see that we get this here because we are now on HTTP great so now we can set this task here to done and we can set this to done because now we have the certificate for this so next St then is to configure the project sorry the post SQL for project 2 so we can go back here again just deactivate this environment deactivate then we can find the command by hitting contrl R here reverse I search search for postgress and just hit enter so now we have we are in there then we can create a new database create database project 2 we can create a new user project two password and project to user is the one that we want to pass in there and we need to alter the roles for this so just replace with two again there we need to alter the default transaction isolation as well two and we need to set the time zone there and we need to Grant the correct privileges was uh this one is to this database to this user to and then we can just quit there because now we have a new database empty for project 2 done next is to create a virtual environment so let's go to web apps and we can make a new folder here MK there project 2 Go into that one sorry project two then we can create the environment by running this Python 3 command van EnV great and then we can create the user so user ad if I just search for this one then we have the sudo user ad system group ID should still be web apps but the home folder for this user should be project two and the username should be project to user okay so now we have the user and the groups we don't have to think about because that was already created for us so we have the environment and we have this one great so now we need to do the same thing with the requirements file since I already have it here I can just make a copy of this and then I can add s find project to here create a new file requirements.txt this can vary a little bit from Jango project to Jango project but these project are identical so I can just make this copy instead of running the running the PIP free Command and similar um great so then I have there that one then I can create a new separate settings file so in Project two I create this file F project sorry settings prod. Pi copy everything and paste it and then I find the settings Pro from part one and I can copy this database configuration find a database configuration here paste it just need to rewrite this to two this should be two like that and since I know that here I need this allowed Host this can be project 2. code with stein.com and then I just need to import OS import OS and uh from. Envy import load. envy and then we just run it at the top Air so then it's just a matter of getting this as well so os. v. getet secretor key default is to be empty save so now we should have this ready and I can set this to done so uh then I can send the code to GitHub so we need to create a new project here so just find the plus button new repository project to no description public this can just be like it is create repository then we can create the read me file just that we have it not on the server sorry need to find this folder on the local here so CD project 2 CD project 2 and then here I can create this one then I can initialize get and I say get add sorry do not add it yet I want to fix the EnV file not the EMV or the git ignore so I can copy this ignore file from Project one and then in here we say do get ignore paste and save so then I can say get add Dot and get status just to see that everything is being added perfect um then we say get commit and set up the branch this one and push so I can just copy all of these three lines hit enter and then everything should be running there now so if I refresh now here you can see that all of the data is sent here to project to perfect so I can set this to done now we need to get the code from GitHub copy this URL go to the server here in the project 2 folder get clone so we just clone this repository LS go into this one then we have it there nice that was quick so now we can set up the EnV file so we need we can just copy the other one so CP SL web apps project one project one so project 1. EnV dot so it will be pasted here that was one too many project one there so then we should have it here EnV so I can addit this EnV so this then needs to be project two pass word and we can also have a little bit different secret key here than on the other project save and quit and then we have the environmental file now we can initialize the database actually here are something wrong we have not installed software from the requirements file we need to do that first so we can activate environment bying Source slash in n v then activate pip D pip install dasr requirements.txt then this will actually use the cached version from the other project nice we didn't have to download anything and now the environment is ready and we can initialize the database just search for the uh the migrate command python manage. P migrate need to change this because this needs to be project 2. settings prod um module OS has no attribute EnV okay I guess I wrote it a little bit wrong os. Environ was it supposed to be and I miss there Environ and Environ is what we have down there so we just need to send the code to get again get add oops get add get commit changed config get push and then we can say get pull again to get the new data then we can try to initialize the database again yes there it worked perfect done and done so then we can do the same thing with the G unicorn script that we did previously so we can make a copy of that so CP SL web apps project one EnV bin G unicorn start and we can place this into the folder web apps project to EnV B there so now it's in that folder we just need to modify it a little bit VI EnV bin unicorn start because this needs the name project two of course set this to be two here set it to be to there and use the project two user and the project two settings prod project to wsgi that's everything we need to do there um so then we can try to run this/ Envy bin unicorn start uh that did not work looks like I forgot to change one thing there it should be project two which is the URL for the Jango project execute again and now it is running um before we do anything more here now I just want to run the CH own commandr project to user colon web apps dot LS large just to make sure that it worked yes great so now G unicorn is done next step supervisor we can make a copy here as well so CP um CP Etc supervisor conf there we should have a file call Project one paste this in again and just oops say project 2.com so now we can edit this file here and say project two this command should run the project two and use the project two user like that and there project two and we can save and quit before we do anything more I want to create the logs folder we can run the CH own command again to change ownership and then we can try to tell supervisor to reread supervisor Cil rad and then update so if I now run supervisor GTL status you would see that we have two projects and both of them are running and how long they have been running great so done next up andin X so it's sort of the same here if we just go into CD Etc and Gen X sites uh available and we can make a copy of project two and call this project 2.c if you now addit this then we can uh remove everything that has to do with SSL so just delete this by double clicking D and all of this at the bottom here is not needed right now we want just to make sure that search but is setting this up for us so we just need to instruct this to listen to Port 80 now we need to do some renaming here and down here project two project two project two project two project two and last but not least this This Server here so now we can save and quit almost just save I saw it I forgot to rename this part here project two so now all of the references to project one should be gone I can save and quit this and say that engine X should restart service engine X restart no errors so that means that we can try to go to Project 2. code with stein.com got a 404 error um why okay sorry uh go up one folder and need to SES enabled and then we need to set up this symbolic link again so lnss do/ sites enabled so sites available project 2 dot LS Lord you see there now then we can restart engine X again that looked better and took a little bit more time now so if I go back now refresh you can see here project two project one both of them are not connected but they are on the same server so you could also set cbot again cbot DD project 2. cod with stein.com hit enter and now this should go more or less automatically successfully now we just restarted so if I do a hard refresh you can see that I got the padlock there again nice so then I can set this to done I can set this to done and this to done and that was it hopefully now you understand a little bit more on how you can uh run your own server how to deploy multiple Chango projects to one server and similar if you have any questions feel free to leave a comment below and I will answer as soon as I can