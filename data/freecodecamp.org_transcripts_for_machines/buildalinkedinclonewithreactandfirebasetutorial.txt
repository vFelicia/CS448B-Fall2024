learn how to create a LinkedIn clone using react and Firebase nishat Singh is your instructor for this course he is a frontend engineer and popular course creator this course will provide an indepth look at the development process for creating an online social network the course explores topics such as authentication States adding posts implementing a like system and user search functionality by the end of this course you will have a fully functioning LinkedIn clone and now let's learn how to build this LinkedIn clone using reactant Firebase so let me give you a demo first that work we are building we have the sign up page and login page now let me first sign up using my email called I mean name email and password so Nishan Kumar this email account that will be unique for each user we cannot use Save email for two users I mean we cannot create account using same email now let me add a password and click agree and join we will be on the home page with a dummy image and no data here so now let me check authentication tab here authentications tab users so we'll have one user here now click database fire Studio database and we will have a user stable here or collection which contains our email image link a domain image link and name and the user ID okay now we have the options to search a user go to home page and manage connections apart from that we have to create a post so let me create a post here called hello this is a LinkedIn clone by cyber natiko so we can add a post like this in text we can make it bold italic underline we can make the heading big all these things so let me divide it back for now we can also add a link here if you want and we also have the options okay this is not in the app it's in my PC okay now we can also add an image so let me add an image here as a post so let me try this image so whenever you upload an image we will see a loader and then the image itself okay take previewed here then we can click post and the post will be here we can like the post and comment on it so let's say we comment this and may I mean we can comment here like uh this is comment one click add comment and the command will be here with the username and the timestamp the timestamp is here as well with the username we can delete the post or edit it so let me click edit here and let me add something else called This is nishanth Umar we can also change the picture here so if I upload one more picture here let's try this picture yes so again our loader will be here a product bar and then the picture will be updated now click update here and this picture will be updated no other extra things now if you click the picture we will be opening a model to see the picture here we can open it in a new tab like this and save it okay now we can delete the post but let me first go to the profile page if we click a profile from the name here we will be on this profile page here on the user's profile page same thing is here if you click the view profile button we will be on this profile page now we can edit this profile so let me make headline as this country has something else company cybernetico and Industry elearning College this website this let me add about me called I am nishanth Kumar and I am a front print and developer else we can add here like this click I click save and all the information that died at the side it will be here so this is called the headline and on each post we will say headline if we have it okay now so you can also change the profile picture so click the icon here add an image let me choose one image here so let me see this image where is it okay this folder this folder then this folder and let me choose this image where is it this image yes so click upload a picture and we will see a bar here I mean progress bar to indicate how much percentage of the image has been uploaded and it's uploaded profile has been updated and all the images will be updated like in this top bar in this profile picture here and here in the post icon now go to home page and we will see it here as well in the starter post place that means your LinkedIn okay now let me log out and create one more user and by the way if you have to create a user with same account I mean same email you will see an error so let me do that because it will not allow us again join again and we will see this message called cannot create your account okay now let me make this or let me make Uday Krishna let me add the email called one two three at the rate Gmail Dot com and some password click agree and join and we will be on this page we will see no post that we made previously from the previous account I mean my account but we can see the user here in the connections page we can connect with the user affiliate connect here and then we can see its post on the home page we can remember a file here using the Nishant Kumar text I mean the username and we will be on this users page and all the posts will be here so this post had one like and one comment the post liked was from this user and the comment was from the same let me add one more command called This is uh put there click add comment and the name will be here with the comment we can like the post from this user account and it will be counted as two because one from this and one from the previous account again collapse comments like this I mean like this yes I mean if click comments here we will see it opening up click it again and we will see it collapsing same thing we have here is we can view profile from here and we can edit it from here then we also have the option to search for a user so let me search for Nishant and we will see this user here now let me click this and this user page will open up I mean this user profile page with all the data and the post uh I mean with the post information let me make a post from here say I am and let me post it so now after this user post I'm in this post we will see this post called I am we can edit this and we can delete this so this likes that we have here it's it's based on single user single post like which means if you like a post from one user that won't be afflected in the another user so that's a good thing let me delete the post here and we will see post has been deleted fine so that was all for the lending clone and now let's see how to build this using reactant Firebase so the first step to do that is to create a reactive and we will use wheat the sweet build tool so we can copy the command to create a direct tab and then we can have LinkedIn clone enter choose react JavaScript and it's created now we have to go to file and open folder and go to that folder which is LinkedIn for LinkedIn clone yes fine so we have the packages here inside packages and as you see let me just make it smaller yes now let's install Firebase into our reactor so we can simply uh where it is view not view terminal new terminal and let's first initialize Firebase okay let's add link din clone and continue then create a project let's wait for it to finish now the project is ready in wire base we can just go to continue or click continue so now what we have to do is we have to create a web application so click this click the icon here web and we can get started so let's make this as a app name so simple link din clone and a register app click it here and then we have to create a file in our project but first let's install Firebase using this command so do this then copy the entire thing from this configuration and create a file in Source folder which will be called as Firebase config dot Js and simply paste it like this we need this app variable that has been initialized from all this data I mean we have to initialize that getting input from Firebase and in this initialized app we are passing the configuration data all the API key auth domain storage bucket ID app ID and all so we have to export it so that we can use it into our project so it's getting installed I mean Firebase and it has done installing now let's start the app using npm run Dev enter so on this link it has been hosted in local so click it and it will open up here now let's move to app.jsx and clean a few things here I'm in the code remove the state for now and the logo and use data as well for now only then we will have a blank canvas for our project 2. be created let's change the color to this linen color and this color is let me check the color here so I have an extension called what font and if you click that it will show you the color of the background so it's rgba 0 0 and 0.9 as opacity so where is the black color in index.jsx so replace the diagram color with this color and if you check and refresh the page it's not changing okay okay let's have it as light then let me remove all the okay we have changed the color not in the background color sorry about it back end to it okay it's right yes now see it's working we can close the console for now and then we can change the color to black or say let me remove the color from here say we can I mean we can say two one two one two one black point we can also remove this a tags here and the a hover and let's see what else we have in the so we can also remove the buttons and meta queries and natural styling okay fine now save this and we have the color of LinkedIn I'm in the background color here fine the next step to do I mean what to do next is let me think let me close the width okay so we have Inver and we have imported all the data from Firebase to our app so let's click continue to console okay now first of all let's set up the project yes that was the plan so what we have to do is okay I'm also confusing getting confused okay let me close linking for now so in the Firebase we have this app so let's create endpoints in our app that can help us login and register first so we will cover them first so in the SRC create a folder called API and in this let's say auth API Dot jsx let me create a function here so say export const or Alexis not auth API say login API which will be an error function like this now we have to call this login API into our let's say a page called login so we have to create that as well create a folder called pages and in the previous folder let's create a file called login Dot jsx make it a functional component now we have this page for login but let's also create a component here for login so create a folder called components in the folder create a file called login.jsx or say not login say login component.jsx like this we have this let me expand it a little bit let me make it a functional component and add one H1 here login component now we have to import the logging component to the login page so say import login component from components login and then simply return it here like this now we have to create routes yes that's also we need to do so go to this website called react router I mean search it on the Google then we will have this version 6.4 as the latest version so click tutorial here then we have to install it using this command so again open the terminal new terminal and simply put here and enter then it will be installed here okay we can eliminate our app.jsx we can make the main file as main.j6 because every Logic for routing should be written here so let's do that let me import these two things here create browser router and router provider so let me do it here but this array we have called router we can make it in a different folder so let me create a folder called routes and in this folder we will have let's say make it index Dot jsx because this is the only file we need here okay now we can I mean remove this and copy the link I mean copy this array and paste it here and Export the cons router okay sorry export yes so we have it here so to use this create browser router we have to import it from react router Dom so let's import it and remove the other thing router provider so okay here we have this route for the slash page I mean slash out the path and the div is hello Vibe I mean the output so let me import the login page here so say import login from Pages login and replace this hello world with this page and make the route as login fine now we have to import this router to main.jsx so let me both import router okay wait a second we have to do it like this import router from routes yes and then we have to feed this router to this router provider to replace app because we don't need app we can bypass the need for this approaches file so we are done here we don't need this create router so remove it and remove app as well now save this file and see what happens so what is the problem here the problem is no problem where all this slash dot which means no route so if you go to login page we should see the login component here as you see also so this is done now we have a login page fine now what we need to wish close the main dot j6 we don't need this and delete the app.jsx as well and the CSS file as well okay let's relate it sign I mean fine so also close the index.js X for now in routes to remove login page and let's see what can we do next yes so in the login API we have let me import this login API to this page but wait a second we can do it like this as well okay let me import the login API in the components login component.jsx or we can import it in the pages folder as well here so we can say import login API what is the name of it login API from API slash auth I mean API slash auth API so basically it is a function so we can call it so for example let's say we have a button here into this login API so first of all okay let me import this into our components page here fine now suppose that we have a button here that sales log in to link edin if we have a button here so let's say I mean let me check the button it's this okay fine okay so let me give some styling to the button some basic styling it's a class name uh login button and we can create a file for The Styling as well so let me create or let me solve one more Library called SAS so we can say npmi sass this will allow us to use scss not just CSS then we can create a file called login or let me create a file in one more folder called let's say s a s s and here the file will be called as login page or component dot jsx sorry not jsx scss sorry now we have to import the file login component Dot scss from this component I mean from this folder called SAS so say import so says uh slash login component Dot scss now the Styles we will write in this component will be reflected here in the UI so say login button let's add it here and say something like uh with 500 pixels okay it's too much let's try 300 or 200 or say 100. or 150. fine now let's add the height here as 30 pixels we have the button in this let's add log in to LinkedIn in small case okay just this is a such a button a simple button now we have to make the login API call and a function so say const let's say log in equal to another function and then we have to call this login API simple as that now on this button let's have an on click event on click equals to just login now when we when we click the button also let me add one more thing here called cursor pointer background color as blue what is the color for LinkedIn just add cyan okay it's too bright so let's add two one two one two one that's black for now fine now it flux now what will happen when we click the button here they should run this function called login and then it should call as login API from this auth API so let's just some know something like console.log hello from login API and save this now open the console make it at bottom and click the button here okay we're not seeing anything so it is calling this function login API and it's not getting consoled okay is the app running so let me check yes it's running what is the problem cannot could not establish connection okay let me refresh the page and click login yes now we are getting it fine hello from login API so this is not going to work for us because we have to change it so let's return something so let's return let's say hello from login API now we have to record the return from here into our login number in.jsx inside login function so say let res equal to this then we can simply console .log or yes now click the button called login to LinkedIn and we will get the same thing here hello from login API let's send it to login apis just for distinction and okay let me refresh the page and click it and we will get it here like this so this is how it works in the auth API and in the auth API we have login API let me write the API or the function to login so go to the settings page okay sorry not settings click all products here click Authentication now in the authentications we have this where where one second okay we can resize it more fine I think it's looking fine let's get started here okay let it load for now then we need the email and password login for now just to show you how it works the Firebase login so enable this click save and it's enabled now if you see in the users it's empty so let me import a few things from here I mean here so we can import what is the function name let me add the Firebase first so from Firebase I mean Firebase slash auth and here let's import sign in with email and password and get auth I think that's the things we need so say let auth to S and say get off so this auth will contain all your data in the project for authentication coming from the config file but we have to import this app into our main file as well so we can say import app this constant app from Firebase config and Save just need to import this don't need to use it and that's all now this auth will contain all your data and now we have to use this function time in the email password so we can remove this and add it here in this we have to pass our login data like the username or email and password so say it takes two parameters function called email comma password and we have to pass it here with the auth so auth comma email comma password so three things three things it will take so save it for now now let's come to this page and create two input fields so say input here it will be class name say uh let's say comma input and add a placeholder holder equals to which will be enter your email save and we should get it here okay but something is wrong here need to provide options when not being deployed to housing Source in initialize app what is this I am getting this just now let's check this Firebase needs to provide options when not to when not being deployed to hosting wire source so in this file we have to import the auth from our Firebase config file which is this and Export it so we are importing auth from Firebase config then fitting the data to this function called sign in with email password from Firebase auth so it's done here now we have to wrap this in try catch block so say try and this will go inside the try but if you save the file we will have an error which will ask us to add add a catch block and say error then return err so we don't need a DOT here fine fine say save it and we have the login API so I have also fixed the login components and the credentials are getting set here using on change event so this is a pretty basic basic stuff now this button is linked to this function so now we can import and we have imported the login API from here from API auth API then we can call it this login API like this but we have to feed the credentials to this login APK so we can say credentials dot email comma credentials not password so it takes two things as params which is email and password and I mean the function takes the two but the sign in with email password takes three auth from config file and email and password from the function params so save this let me record the response in one variable but first we have to return it from here so let's say it response it is response equals to this and have a console.log here which is sorry not console log return response so that it comes here from the function so let's get it here let's say it's lit res from here and console DOT log Ras now open the console and enter your email account which is this at the red Gmail .com so I have not signed up or added my account in Firebase and if you see this user's tab is empty but we are still tried logging in I mean we are trying to log in let me add some passwords and click login to LinkedIn and you will see this alert that says Firebase error auth slash user not found because this user it not it's not present inside the Firebase authentication users tab if you open the Android networks tab you will see this block we have error then inside the error we have errors and the message so we can filter it out or just do this here alert I mean ARR error dot errors Dot message now save this and click the button again and you will still get the same thing okay you will not found so let me refresh and try again and my email com one two three four five six seven okay we're not getting it here so I guess we have to add the try cash block here as well so try let me copy and I mean cut it paste in here then we have a we need a catch block to catch the errors so if we have an error we will simply console DOT log this thing basically this so let me revert it back to error I mean return error and paste it here save both files and now let's try so open the console click the button and still we are not getting it properly what's the problem hmm refresh it once I think we have a refresh issue in my PC Nishant that's 440 at the Gmail .com one two three four five six seven login to LinkedIn hmm tell nothing we are getting okay so we have error we have errors and we have message and we have code so let's try the code here or what if we add it here what happens let's try in both cases Maybe the error will be here in the dry block okay it's undefined um okay fine so okay let's leave it for now we will try to enter it later because this is just a code setup so the basic example I gave you was this you can remove it from here and from here so we have a login page and One login API that's calling this method called sign in with email and password but we have no users that is why it's showing this error that user not found so that was the setup if you want one more API for register so we can say export const register API okay let me just copy this and add it here and change the name to register API here so this will take email and password the same way it tick it took here but the function name will be different here so we can say create user with imminent password so this will create the user I can show you how it works so just let me call this function called registered API and pass the imminent password so let me clear all these things and let me log in I mean click the button so if you open the networks tab we will see these two messages I mean the what is it this is the Network request to sign up so we have email here and all the things that it's the simple tokens so it expires in three six zero zero milliseconds so maybe it means or it's seconds I don't know what is this maybe 36 hours fine so if we refresh the file back console we will see the user here and the provider will be this email I mean email password so we have highlight here okay we don't need this for now so that is how the register function works let me invert this back to login API now if you try to log into the same account or the imminent password we will be logged in I mean we will not get an error so let me bring back the console logs and login with LinkedIn so we will see that we're not saying anything I guess we have to make the function synchronous I mean asynchronous so where it is the async and let's avoid this now try again now we are getting it so the provider is called I mean optional option operation type is called sign in we have the user so basically we can utilize this user to have the username and all so we have the email we have the verified false and all the data fine we have the provider IDs Firebase all listings but we don't have display name so to get the display name we have to use the Google authentication from Firebase so let me show you this add new provider we have Google so that's how we can use the Google to have the display name as well which will have the name of your Gmail account so that's much the basic setup pretty much the basic setup of the Firebase apis and the components and the pages routes and all in the next video we will finish the login page and the registered page UI with the complete flow of the logging in registry users on your LinkedIn clone app we will see how to create login and the registered page in LinkedIn I mean these Pages this is the sign in page and if you click this button called join now you will see the registered page where you can create an account so I will create the UI for this too in this video but first if you go to the wheat app the Home Route I mean slash route is empty so we have to change it so go to routes index.js X and remove login for now and now we will get this login component on the page load which is no route now let me remove I mean let me okay leave the leave all these things let me see how to I mean we have to create this okay so first on the top we have the logo so let's create the logo first and we need the LinkedIn PNG image for this so we can get it from here so we can search on Google that we need a LinkedIn PNG logo so let me see which PNG that we can use let me see let me see let's try this image for now okay so to save it just click the button called download this PNG and it will download yes so it's processing Okay click the alphabets in order to download PNG web to pass a test so the order is as seven uh where is f and r so we have passed the test now let's create a folder here called assets which will contain all our images and assets but it's already here yes so all we need to do is just drag and drop this image into the assets folder and let me name the file to this file name called LinkedIn logo dot PNG make sure to make it camel case okay now we have to import this logo into our in login Dot Login component yes so we can say import link din logo from okay assets slash the file name and then return it inside one image tag so let me remove one last two all these two and see it's here on the top I mean top left so let me just comment out all of these items first so that we can have a blank canvas here so here we can simply say sorry image or IMG SRC LinkedIn logo and save this so we have this logo here we have to customize it according to the size on the LinkedIn page so say class name they should be LinkedIn logo so copy the class and come over to this SAS and the login message scss file so LinkedIn logo this will be let's say uh width 50 or 40px okay it's too small let's say 80 try the size okay it's 80 okay now we have to move it on the top so we can try this position absolute top 20 pixels and left 20 pixels now this logo is on the Top If you scroll I mean if you zoom up zoom in the logo will be still the same at the same place so that's done fine okay now the next thing to do is we have to create the sign in header and all these things the input fails forget password field sign in and basically in this part we will cover the login and sign up UI I think I have made it clear earlier as well so let me uncomment this thing which is the login H1 I just cut it from here and paste it after the image so we will get it here but we have to make it as sign in so just add sign in here and we're getting it here but the problem is it is in the center I mean here so I have to fix that as well so let me go to the integral CSS and see the okay it's I think here we don't need all these items so let me just comment out these for now it goes on the top okay fine so basically it means if we remove these stylings position absolute we will get it like this fine in the sign in page so we can remove this okay and also remove the login wrapper contents now we have this but we have to arrange the sign in H1 so to do that give it a class name of heading and copy the class come to login wrapper class and we have to append this like this so in the login wrapper we are heading and we have to make this in the center or not the center I mean here with some margin on the left so we can say margin left 40 pixels let's try or 80 guess too small let's try okay let's do this okay what can we do here what if we make it 180 okay that's fine I guess or let's make 200. margin okay that's fine fine now next step to next step is to make the uh change the font size and weights and the font style so let's check what font is this so this font name is system UI okay so we can choose our own font from Google font so say go font google.com go to this website and let me choose a few fonts here like Roboto okay let me remove the existing fonts as existing fonts from before or we can just use these fonts that I already have here to import them in the main dot jsx sorry not jsx index.scss file like this so at the top import all the fonts okay not like this wait a second just say import here yes and now we can use all these fonts here I think we can also use system UI so if we try this let's say font style oh sorry font family this time UI yes now it is like this if you check here the font let's see the same thing we have here is this system UI but we also have the 400 which is the font weight so make font weight as 400. now what else we have font size 16 pixels so say font size what is it 16 pixels then we have color let's say color this color rgba 0.0 I mean 0 0 0.99 capacity now save and we will get it here but it's very much small to remove the font size and I think it will work okay it's what if you make this 500 okay this looks pretty much like this fine now we have to make one more uh description header which is stay updated on your professional world so we can just copy the text here and add it here and it will be here as well so the same will be on the P tag so just like we have in the heading let's make this as subheading so say class name sub heading copy this class and add it here just make margin left 200 pixels like this I guess we are doing it okay fine it looks fine but we have to adjust the top margins so say margin top minus 30 pixels or 25 will also work that is too much or yes I think let's try 20 also yes it looks fine also we need the font family system UI here as well so added and just like this we have this also if you see the color of the background this is not Grace it is white so if you hover this the color will be the same okay let's try the login wrapper class here change the color inside so in the login wrapper make background color as white and this will be here okay it's not fully on the screen but it's fine so we have to adjust a little things as well for example in this page let's add a body and do margin 0 and padding zero I think that will work here okay also let me add the height to 50 VH sorry not 50 100 BH but it's not working okay let me see font weight height okay I think if we create a screen here it will be working I mean if we create the other input Fields it will expand but if we make this as important it's not working fine so let's say index.css we have we don't have any height here so where does the height coming from okay so let's leave it for now fine now now now now let's make the input Fields so let me uncomment I mean just remove the comments from here and let's see the screen status so yes we have it here fine so in the auth inputs we have to make changes fine these are display Flex Direction column and all but we have to make them shrink so we can save width let's say 100 pixels try 100 okay it's too small 200 or so small let's try 300. thank you a little bit more so make it 400 okay 400 I think that's it now we have to make them in the center so say align items enter okay now if we do that it is getting shrinked so we can make it 500 okay that's how it is removal and items and simple add the margin left 200 pixels okay let's try this yes it's another so the width should be not 450. or 300 fine so we have this two fields for email and password but we have to style them as well according to LinkedIn so okay so what can we do here so this here we have like this so let me think let me change the replace folder first so it says email or phone so say email or phone and simple it is password and second one like this so the height of this is little bit more so say 40 pixels height here and it will increase now we have to change the background color for the common inputs with the background color White so it's white fine also we have a outline on them so we have to remove that as well so outline will be none and also one more thing we need is border so border will be none as well so try none first okay it completely moves the Border fine so it's the outline sorry border one pixels solid this okay let's say two one two one two one two one two one two one okay now we have the borders on them but if you hover them the Border changes to blue so I think this is our client so try one pixel solid let's try some blue color first add blue and just adjust it from this Color Picker I mean like this so let's try which color to try this color fine now try this okay it's not visible properly so I guess we don't have to do this just cut it and make it as none then we have to make a common input and we have to choose this so it is a property called Focus Focus so when we focus on the inputs the color should change to the suborder at this okay now maybe it's outlined here yes now it's working we have this outline here but let's change the color where we can't see okay because the color we can't see because the color is white here so remove this just remove the or just make it as two one two one two one and we will have this but if we remove it completely what happens then we don't see the placeholder for here I mean email or phone so let me refresh the page okay now we are saying it fine so I don't know which color is this so let's try to find out or just change it to this okay it looks fine for now okay now we have to change the color of the placeholder fine so what we need to do is just add a placeholder class here just like it was before place folder and in the placeholder we have to add this font which is system a y again so where does this font system UI and we can add it here and check what happens when we save okay it has been changed Also let's try the phone size a little bit more so 20 pixels it's too much let's try 18. yes also we need some margin on the top so margin top 5 pixels on the placeholder or if you try 15 okay it's not working so make it 16 and see okay 16 is fine okay also you see the border is curved around on the edges so we have to change that so we can say border radius let's say 5 pixels yes now they are curved but 5 is too much I guess let's try three okay three is also fine okay fine so what is next here background colored VR so if we type anything here we cannot see the text so why is that Let me refresh and enter my email okay let me do this as well in the input let's make the type as email and in this input second input make the type as password okay we cannot see the output here okay let's add color which will be 2 1 2 1 2 1. okay now we can see that so here also the font family should be system UI so that we can see the same font here as well Also let's add the font size here which is 16 pixels now these look these look fine much better okay now now we have to make a sign in button here or convert the button to sign in button so in the login button we have margin top as 20 pixels but we have to add this margin left 200. so if you add it here this will be here just like this but why don't we create a div here and wrap all of these items and make one margin left as 200 so make a div here remember to exclude the image here I mean the LinkedIn logo from there then in this div add a class of login wrapper so copy this class and add it in this page which is okay we already have login wrapper so let's say login wrapper inner okay so in this login wrapper we have login wrapper inner in this we can add margin left 200 pixels only once and remove from everywhere else so here I mean from here then from here then from here and we'll save it and they will get the same thing okay now we have to design the button so login button class we have here so wait where is it here so let me remove the width let's make the width to Auto but it will not work we have to make the bit according to the size of the inputs so what is the sign of the inputs where it is 300 pixels so make the same here and it's perfect but the color is different so we can try the blue color and to get the references from the color or for the color we can visit this site called material UI material UI so here we can search for colors okay where did the search what happened colors and or we can do this as well so we can say LinkedIn color code so it is this zero zero seven to B1 in HEX code we can just copy this and so this scss allows us to create variables so we can say dollar okay not dollar how to create variables says so say how to create variables in says yes so let's try the color name which is LinkedIn blue and add the color but it's not work it will not work like that so we are having some problem style rules let's try stack overflow hmm okay we have to wrap it in a string but still not working hmm let's search for this variable CS we need this we need to create a variable so okay so make a dollar sign okay not here in the color and it will work also add one semicolon now you can use the LinkedIn blue anywhere so just copy this link in blue and add it here in the login button color here save and if you check the calendar will be changed the same thing we can do to this border here that we have on the input fields so where is it the Border here and we will have it here yes it's now perfect let me close all of these things also if you notice we have some margin on the inputs I mean yes so we can say margin 30 pixels let's check 30 or 0. or 0 30. yes if we make it 10 okay make it zero and this will be 10. fine okay now we have to make the button as sign in so make the text as sine in I think I is smaller here change it to I small Pine now we can do what so we have to adjust the height of the button also we can remove the margin top from here because we don't need it okay now just make the height as 40 excels and okay try 50 as well the height will be changed now the color okay the color is already here okay wait a second login button we have only once here no we have it twice that's the problem so remove one colors or remove one class and go to second one and replace this height to 50. okay now see the water is curved so make border radius 30 pixels let's try yes also remove the outline and the border for now so we will have the button just like LinkedIn but if you want to check the color of this button just click inspect when clicking right clicking the button and check the CSS so the color is um 7 3 b100731 okay it's 7 2 b 1 just make this as London colored or blue one and say blue two so here we will have seven three not seven two like this and wherever we have LinkedIn blue make it linking blue one and here also but wait here it should be two now save this and let's see okay undefined variable LinkedIn blue blue yes make it two now we have it here okay that's fine now if you hover this button the font size is same which is system UI so just copy the font size and add it in login button and now let's check also a few things to be noted here is the font family okay I mean for not family Point weight is 600. added then we have colored as FFF so color ffff okay six times fine then I think it's all here so we can exit part font and save this to see what happens okay let me add font size as well 20 pixels yes I think it's perfect but if you make it 19 or 18 let's see what happens okay it's perfect now and let's add a hover effect on this so login button hover we just need to change the color so say background color as something so let's add one more color LinkedIn blue three and we have to make some darker variant of this color so just slide the marker down and change this to 3 where it is and Save now if you hover we will see the same thing here that we have on the screen fine okay where is the button button button ads let's add margin top 20 pixels that's fine okay now what we have to do is we have to make this thing so we will not use sign in with Google account we will use the uh only which I mean we will only use sign in with Google account not Apple fine so we can make one HR here HR for the HR where it is r here and Save so you will get one horizontal line here fine so we have to make this outside this div INE fine and let's try to Type R inside okay the problem is we need to create one HR with or between them so let's say text between HR tag let's try this okay we can in HR class data content we have a property so you can try this so make it a self closing tag then save this okay it's not working because we can give this a class of HR text fine and then check the CSS so where it is HR text it's here so we can just copy the whole class and add it here in the CSS okay now we have this so let's change this and to or we will have this we have to change the color so let's change it to a darker variant this now it's changed okay not this okay where is the color color background color okay I think I think I think this is the color is this let's try this no this is the font color okay okay let's leave it for now hmm we have this R and after or we have the button called sign in Google account so we have one more thing for you to show you so we can create the button or we can import a library which is called Google signed in button so we can check this react Google button foreign so just install the package here where is the ndim command to install it yes here it is open the terminal I mean the console and now let's see let's import the button here at the top then just copy the button and add it here after that Dave HR after the HR and we can see our button here fine so wrap this in a div and add the class name here which was login wrapper inner no but it will not work to say Google button here so just copy the class and let me add here at the bottom okay now what we have to do is we have to add this thing which is margin left 200 pixels to the current class 10 that we created here save it and we will have it here so also we can add width 300 pixels to expand this or make it important I guess okay we have to add this on the button so say class name button I mean let's make this as Google button can container copy this class and just add it or replace it here in this we can have Google button and add the width inside here now just copy the Google Google button class and add it here I think we have to make this as important yes now it's working so we have sign in and sign in the Google account fine so now the next thing is to create this thing this join now option so let's do it in the same div so we can say A P tag and just copy this whole thing and add it here and you will have this but this join now it should be a span tag okay like this and in the pan let's see a class give a class name of join now so in the button container yes let's do it here the join now will be of color LinkedIn where is it the top linking blue one make it like this we have this also font family y um too much points are here so we only need system invoice so remove all the left all the other fonts we also need to add cursor as pointer so if you hover it the cursor will be changed to pointer also let's give this P tag a class name of go to sign up okay we should be after Google button okay in the container so we can do it here after the button and they should be text line as Center let's try this okay it's not fine so let's add margin a little bit from the left margin left in the top not top margin left uh 30 pixels or say 40. 50 okay that is fine now we have this go to sign up okay let's change the font size here font size as 20 pixels too much try 16 or 18 18 is fine copy the same and add it here in the class as well so we have this fine but if we zoom in it causes some problems in responsiveness but we will fix it later okay so now we have this done okay but the thing is we need to wrap I mean we have to make this entire color of the background as white so in this login wrapper let's check make the color as white and make it important I guess okay what if we add height as 100 VH okay now it's working perfectly yes we have this and fine now the login page is done pretty much I guess so let's hook up the these things here like I mean I think they're already hooked up so we can try signing in so we can add one email Nishan s4403 Gmail .com and the password one two three four five six seven open the console and click sign in here and the request has been sent and we are getting messages so let me install one Library called react to specify react to specify so in this Library we will have a post message box that we can use so install it here then close the console or terminal then we have to import these things so where is the main component I mean main.jsx so we can import it here I mean the CSS and the toast container remove toast for now for now then we have to return this toast container in our Dom reference here in the react Dom create root just like we have in the just like we have as router provider now we can use this toast container so to use this go to this function and we can do toast so we have to import those from it's Auto imported those dot success and let's add the message if you look into the documentation here we should see it where it is yes toast dot success and the message say sign in to LinkedIn now save and let's try to sign in add my email and the password okay we are getting this message that we are signed in so we already I mean we also need one for error so if the password is wrong or something is wrong again simply throw this message please check your email and password your team or District credentials hidden Shields now let me try to change the password Here and sign in so we will see this message called please check your credentials fine so it's done okay now the next thing is to create the flow for the Google button sign in so we can just go to this page called uh sorry not page API OS api.jsx let me create one more function here called Google sign in API or Google yes sign in API so we have to import one thing also called um sign in with okay let's try Google auth provider I don't for I don't get the name I remember writing the name Okay Google Earth provider I think it is and sign in with popup okay now let me create one instance of this auth provider so we can do it this inside the function here select auth equals to uh no not auth Google provider equals to new Google dot provider fine then we have to pass this provider and the auth to this function sign in with popup so we can say this and we have to pass provider name oh I think first is the auth and then the provider then let's return this response from here so say let res equals to this and return Ras now import the function in the login component so yes from this message I mean where yes from here Google sign in API okay now we have to create a function here as well for Google provider sign in so say const time in or Google sign in and save the file in this we will call this sign in I mean Google sign in API we will record the response in a variable called response and simply console.log this response now we have to click the button and run the function called Google sign in so just remove all of the items all the Callback function and leave it at that but we need to enable the sign in Provider from Google so go to firebase.com I mean console now method sign in we have to add the provider called Google okay click this and enable add your email account and Save now let's see if it works or not so it's savings let's wait for it for few minutes or hours yes we have Google provider here but we have to remove this here because we will login with same email no matter the provider so let's see what happens when we sign in with say email but from Google so open the console and click the button called sign in with Google account so I am seeing one popup so if you did just like I did you can see that too I think we have to add the I mean yes we can see that we don't need to do anything so let me choose my email account on the popup that we got now if you check the console we are getting nothing okay let me see okay let me open the Inbox tab and try again sign in with Google choose my email and we are getting this yes see now we have the display name is Nishan Singh that is on my email if you refresh this Firebase console the provider will change to Google here okay fine let me log in with the other account my other email account this email so if you now check here in the Netflix tab we have this display name as same but the email is different it is this email and now if you check the console here we will be having this email here as well the providers will be Google fine now we have this Google sign in button that you can use to sign in fine so we don't need the register button I mean register page for this method for sign in with Google account it will automatically register you to that page now let me create the register page here so create one more file called register compo net Dot jsx and in this page also a file called register Dot jsx this will be a functional component just like login and we have to import this register component here import register component with the second wait is it okay we have to make it functional as well only then we can import it import register component here and simply return it here foreign we have to make all our things here but we have to add the routes as well first so click routes and create one more object and make this as register and cop I mean import the page called register register from Pages slash login sorry not login register and return it here now if you go to the registered page let's see what happens so you will see this registered component page here so now let's create the registered page and that same I mean it's pretty basic as this login page so now let's hook up this button coil join now to the registered page so on this click I mean on click we should have the Handler two transference to the register page for that we need a few things from the react router which is called use navigate fine let me create one instance of this navigate use navigate fine or we can create one helper function for this so let me try to create this or folder called helpers in this let's say use Navi git Dot jsx so we can copy I mean we can import the use navigate from react router Dom and then this navigate so let's say export this navigate and now let's try to use it but first we have to import it so import navigate from helpers you will navigate and on the join now we can say on click navigate and we have to add the route I mean we are passing the route here so let me create a function here so say const navigate and we can remove this and okay let's say just okay um let's say navigate instance just say instance so every time we click the button we will run this function called navigate from here we will pass the param and then we can simply say instance and in the instance we can pass the param to navigate to that page so we have to pass the route so say register now let's try this click the button call join now nothing is happening so let's check the console it let me fetch the page and use context okay hooks can be I think we have to make this a component so let me cut and make it function component and then add here don't need return for now don't need this okay import it at the top let me export this it will not work like that so I guess we have no choice so what is the problem let me see so hooks can be already called only called inside the body of react component and blah blah hmm so so so so okay we have to import react I guess we're not working okay let's let me add it here I mean we don't need to do all of these just create I mean import the you will navigate so let me control Z all these things let me figure this out and come back later but but for now let me do it like this so on the button we can on click navigate to the register page add a slash before the register string now let me replace the page now let me click this button and we will be on the registered page then that's fine okay now in this register let me see what is it here so we have the login logo I mean the logo and the strings so they can just copy this entire class names I mean all of these things for now copy and paste it here okay save this but we will need okay just let me copy the entire component and paste it here so that we don't have to build it from scratch just change the name to login name of login component to register component and on the registered page we will see the same thing now let me change this string which is make most of your professional life so on sign in we have to do this fine added we have this then we don't need the second Peak last name in the history component so remove this we have email and email or phone number here so let me add the placeholder here then we have password six or more characters okay let me add it here remove the empty spaces between them rings from strings and we have this then we have already on LinkedIn signed in so we have to change this as well here so where it is here sign in so just cut the text I mean copy the text and paste it and we can see it here but now this not now this route will be login route or slash out not login now click this button and it will be on the sign in page fine now we have this thing but I don't think we need this this terms and conditions and all also cyanide has been changed to agree and join so let's change it as well agree and join what is spelling of join g o I can save and we have this here fine so we have no sign in page and the login page but the thing is we don't need to use the login API here we have to use registered API so go to this API page orthoped.jsx and import registered API not login API so here we place the login API with registered API and Save so we can say uh you or just say account created you can change the those messages as well so here let's say cannot create your account so in case we cannot create an account this will show this toast message called cannot create your account let's try this now we already have two accounts here which is this and this so let's try to create account using these two and let's see what happens so we can add nishanth s440 at the rate gmail.com and the password so click agree and join and we will see this thing cannot create your account because we already have this account in the console now if you change something like slide email changes then click again join we will see account created because now we have an account on Firebase with this email and the provider is this fine now let me do the last thing here which is called transferring us to the home page so we can save pages create one page called home.jsx make it a functional component similarly create one component for home the home component Dot jsx same as functional component now import this home component inside this page so say import home component here and return it here like this make this as an H1 here to highlight it now save this okay fine so when we are registering we should be on the home page or when we are logging in in that case as well we should be on the login page sorry on the home page so we can say uh what is the name history dot push sorry not history sorry sorry navigate to slash home but we don't need we have to create the routes here so in the index.jsx in routes replicate the object make the Home Route here then import the home page so the import from Pages home and return the element class I mean element component now if you go to home page we should see the home text in H1 see now on this login success or related success we are getting navigated to home page we have to do with this in the login page as well in this function so after all signing in we should see this so in this as well I mean in Google sign in we should transfer us to the home page now let's try to sign in and see what happens add my email or just click the button of Google sign in okay we are first getting the sign in page I mean home component and then we're signing in so we have to fix that and that's for the next video let me sign in with this so gmail.com one two three four five six seven click sign in okay we have to check the credentials okay okay let me try this here click sign in now we are on the home component and we are having this toast called signed into LinkedIn and in the next video we will handle the predicted routes and the home page basically so thank you for watching my video on the second I mean second part of the series on how to create a LinkedIn loan using react and Firebase let's see how to check the authentication States for the application I mean when we're logged in or when we're logged out so come to the homepage.jsx we have home component and in login we have login component so we need a function so it is called import on off State change fine same way Import in the login page let's we will edit and let me import the use effect hook same way in the login page and now we will create the effect so say use the effect and in the use effect we will call this function called on or state changed so this will take our authentication variable from this Firebase config file so same port auth from Firebase config so we have to feed it here then it sends us a response as callback so we can say console dot release sorry console.log res save it so let's go back to the home page I mean slash home open the console now so we are getting this user impl or it means the data so it contains all the data like email that we used to sign in display name and all so we need the access token so we can filter it out like this the same thing we need to do is in here so just copy the effect use effect and add it here and Save so save it here as well in the login we have used effect which with this or not State changed and here as well it's fine okay we've absolutely both auth and edit I mean import it here now come to the login page and we will see this same thing the authentication token so we have to check here if this token exists we have to go to the login home page so we can then navigate to slash home now we need to navigate so let me import it here import you will navigate from react router Dom and say let Navi gate equals to use navigate so do the same thing in the home page and here as well save and Save so we have to also get this checked from here and add it here but here in the home page we have we will have the condition as opposite or reverse so if this token is not here go back to the login page or else state of the home page that we don't need to write so if you go to the login page now it will throw us back to the home page instantly fine so but it's not instantly it takes some time so we can add a loader here so let me install one Library here called okay what library should be installed so let's install aren't design a and t d and Design second most popular UI Library or react so click development here we need to install it so we can do it like this using NVM install aren't ready so open the terminal and paste the command meanwhile when like it is stalling let's make let's create a component so in the folder called components create one more folder called common so it will it will contain our common components like this loader Dot jsx so fine it's done I mean it's getting installed now what are the additional things that we need to do to use on design hmm so so we have to just do our copy this let's try okay I think something else we need to do so what design okay it's not here I'm using it after so long click components okay let's try this fine so in the loader we need a functional component fine then we can search loader here or not loader spinner in this all right so we can choose any spinner for example let's choose the spinner import space and spin so I don't know what is the space so then we have to copy the screen large and add it in the div fine space okay we have to let's try I mean add the space here as well and Save now let me import this loader component in this home page so import loader from components common loader and if else we have simply turn this loader now we are on the home page we have to replicate this in the login page as well for that let's also import this loader component like this now go to the login page and we don't see anything it's loading so what could be the problem I guess we don't have to do it here so what can we do let me remove this and this from here okay I think it has been crashed open the view in terminal okay it's reloading okay let's try this again it was loading okay it's now loaded we can refresh the page let me go to the login page and we can I mean we don't need we don't see this loader here so I guess we need a state here so create a state called loading and set loading use state let's say false initially okay not false sorry true so also import the state Hook from react you state so when we will have else here this set loading will be sent or set to false so that if okay one second okay let's try this so here I will create a check so if loading is true it means we need to show the loader this component or else we have to show the login component so in the login let's go to login now and try this so LCL order and then the home component yes it's working the same thing can be done here so we need this loading state and use statehood then if loading is true I mean set loading we have to do here also in the false version of this then if loading is true then we will have home component sorry not home component the loader else we will have the home component so if you go to the home I mean to the login page we will sell order and within we will see the home component so it's working it's fine so if loading is true here it means remain in the log on the home page if loading is true I mean if this is false it means we need to be the on the home page okay fine let's save it for now I also I'm not getting what I'm saying so in this loader giveness Diva class name of loader and we have to make the loader in the center so we can create one more file called uh loader or just say common node scss let me import the common file into this okay and we have to import the common file into this file called loaded.jsx so we can say import common Dot scss and if we write The Styling here for the loader let's say display of flex and let me just do this for now remove this and if you refresh the page okay let's make this as just revert the loading State now we will save the downloader only so if you go to the home page I think it's compiling our code let me open this in the new tab okay now we see the loader only yes so display Flex justify content Center align items Center let's make the height as fifth t v h and say okay 50 is less let's let's make 100 now we have this loader you can also add a text here so say loading please wait we will have this so in this loader we have to make one more thing called Flex direction as column fine also let's add some Gap 20 pixels between them and we will have this fine let me make this as a P tag and fine so if you do this we have to decrease the Gap as 10. fine we have this loading placement if you want styling let's add P tag here and make the font family as what is the what was the font so in SAS we have this the font was system UI and also copy the stylings other styling now we have this Also let's make font size as 20 pixels now it's fine now we can close the common clss yes and what if we import the common scss into the login component or even better in the index.css so that we don't have to use it every time I mean we don't have to import it every time so we have changed this CSS to scss so we have to change here as well so now save and it will work the same now in this index.css let's make import URL I mean one step back assets not sorry not assets uh two steps back what happens one step back yes components common common dot CSS so if you are doing this we can remove it from here and it will work so let me show you how it will work if you remove this and give it a refresh this styling will be reverted back to the original styling that it had previously fine so it works and it works fine so now let me divide this back to loading if loading is true or if you go to the login page we will see loading and then the home component fine so that's how in the on or straight changed or not State change works in from Firebase in react or in any other Library so I think that's all for now and in the next video we will learn how to use this reactant I mean how to create the top bar from LinkedIn so let me show you what I mean so if you open LinkedIn let me go to the home page you see this top bar have we have here which contains the logo the search option home page and all all the icons now let's create the top bar in the LinkedIn clone the first step to do that is to create a folder called uh sorry not the folder yes a folder but in the common folder so say um top bar in this top bar we will have an index.j6 file for writing the style I mean the HTML and one for the styling fine so make it a function component and just change this to top bar and import the index.ss file here so import index Dot scss now we have this top bar here by the way I have made a few changes here for example in this login okay I have not made it but let's make it yes so replace this margin left with this so display Flex Flex Direction column and justify content Center align item Center and just do the same thing at a place where we have like this other margin left 200 pixels so I have done that to make sure that the screen says I main screen stays responsive let me show you what I mean so come to the pages folder and open the login page so let me remove this check here for now I mean let me remove this navigate to home and in the home page as well now let's come to the login page and we will see this page as responsive but okay do this as well name this loading State here now let's check okay right okay okay I guess oh what can we do okay let me just revert this to this and remove this from here now we can go to the login page okay it's getting unresponsive so go to the site again and we will see this as in the perfect Center even if you maximize this page so that's what we did now in the login component.scss now let me divide this back and save now refresh and the same same thing will happen again because we have changed this condition for authentication now we have home component now let me copy sorry not copy let me import the Stop Bar in this page called home page so come to okay let's import it in the home component first so home component it's here or or plenty way to do that is to create a folder called layouts in this page I mean in the folder let's make a layout for home so say home layout Dot jsx now in this layouts page we will have the functional component and here we will import the home page so import home from Pages slash home now we have to return it here fine we have returned it here so nothing is changing we can send the home component but it will change I mean it will not change because we have to import the home layout.jsx into the routes index so replace this home with the layout so say layout I mean layout slash home layout and add this here now save and the same thing will be here and fine now let's import this top bar from the in from this component here so we can say import top bar from this component and render it before home so that we can see it on the top like this now we don't need the layout we only need these two files in the same folder the top bar and we are going to work inside them so let me remove the text from here like this and Save so nothing we have so let's give this Diva class name of let's say top bar Main copy the class come to index.cl scss and say width as 100 pixels or hundred percent not pixels I should be let's say 50 pixels now we will see that this home component H1 has been margined down to this place let's add the color so it's the background color let's add a red color just for demonstration and we will see this thing just like we have here so but the color should be different so let's get the color from this index.css which is this color fine so we can make one variable here so let's try that but I don't think okay let's leave it for now just add the color here we will do that by labeling later so we have this white color top bar here we can make the height to 60 VH or PX yes now it's fine now let me have the logo here so we can import the logo from the assets folder so it's LinkedIn logo.png so let me import import link din logo from assets from uh go back again go back go to assets slash this file name the whole file name LinkedIn logo save this now we can use this logo so in this top bar let's add an image tag or IMG tag and Source will be this LinkedIn logo let's add the alt tag and fine so it will be very much very much big so make a class name and say LinkedIn logo but I think we already had a class I mean we have a class here that we can use so come to the SAS and login component where it is let's try let's see login button login wrapper heading subheading LinkedIn logo yes this so we can add it here but we can change the class name or we can use let's try the class name here to see if it works or not yes it's working but we need to shrink it down even more not just a TPX so I guess just add it here but change something like divided back like this and let me copy the class and add it here sorry what is happening here we have to add so make it 70 let's try 70. okay try 65 pixels and now I think it is fine we can also add margin left let's say 20 pixels yes let's also increase the size of this top bar let's make it 70. so if you are making it 70 we have to make sure that every element inside the top bar should be on the center I mean vertically so we can add display of flex and align items Center now it's in the center as you see it has been moved now about the other icons let's say search home and all we need icons for this so let me import or I mean what let me install a library called react icons from npm so the command is here nbm install react icons and let me click or open the terminal and install this Library it's getting installed fine so we have the page here called react icons on GitHub where we can search the icons for example you see we have home here let's search for home and we will see a lot of icons here so you can choose your own icon so let me use this icon it has been copied to clipboard and then we can import it I mean just do this here but first let's see how to import an icon so let me go to the home page and to import it we can do this so this is the import command in the react I mean import yes now let me search for this icon here AI outlined home so we can add it here and see the type of Icon we are using is AI fine now we can just copy this icon as react component and render it here I think that will work okay will it work let me let me try um I think it should work but it's not working so let me refresh the page oh let me open the terminal I think it's getting Reloaded so let's wait for it um let me revert it back to this far beer and say what happens let me cut this and paste it in a new tab because my PC is getting slow uh slow and slow what is the problem here I think it's taking too much time to load foreign so let's wait for it to be responsive and just have the icon here yes now it's here I mean it's getting loaded yes so it has been optimized I guess so if you save this we will see the bear icon here but we need the home icon so say far I mean let's say AI and from AI we can import home so let's search for home and it has been copied if you click the icon and replace the bear with this icon now we have this home so what are the params that we need for this so let me check okay let me check the uh I think it's width wait can we check that let's try width width properties let's say 30 or 40. if you save it is not getting increased so I guess it should be 40. pixels okay um that is an prop that is a problem let's try npm here what is the I mean I mean how to add width here in the AI icons okay where I can provide a blah blah blah size yes size sorry not width size so psi should be 40. and we can remove these things now let's try yes it's fine what is perfect so it's a little bit large but it's fine fine now we have to wrap the icon all the icons from react icons in one div like this so that we can arrange them like this okay fine the next icon is this icon called profile so let me search for this in the library so it's not the profile let's use it so say users by the way we also use we will also use the AI like this I mean a icons so we can try this icon just for demonstration my friends and then we can copy this and paste it and add here the size will be same now we have to separate them so in the top bar main class we can have this so we have we are having display flex and we can say justify content face between justify content not self space between and Save so that is the problem they are being at the last so it takes I mean this top bar Main in the top bar main we have one image as a parent element and this device parent so they are on the opposite ends of this page so in this we have to make let's say react icons copy the class and let me add it here and do the same thing here fine we have to also add some width here so width should be hundred percent let's try 100 okay it does the opposite so try 20. yes 20 is too much let's try 100 I mean 10. or 15 yes 15 is a sign between them now let's quickly add the other icons I mean I don't need with I don't think we need to use this here so let's see what happens if we remove it it's much better but the distance between these two doesn't increase so we can have a margin left here I don't need this suggestions margin left 30 pixels yes that's fine also in the icons we can have one class name but we will do it later now the next icon is called this diff case icon so let me search for the briefcase icon here yes So currently no icons are from this Library called AI so we have to make it from other ones which is called BS or BS merits boost bootstrap so we can try this make this as slash BS then you can have this here and the size as 40 now could not cut just copy this no save and it should load in a few minutes I guess because I think it's getting optimized from BS so let's wait for it yeah so it's loaded but see now the problem here is it is getting like this so we have to make the width to let's say Auto or 30 let's try 30. because it will be like if you add icons this will go down like it will sink the next thing we need icon is this let's try okay let's add a search icon this search and now we have this from AI outline they can come to this home page and at the search icon at the very first save and we have this so also now we can increase the width 35 and here we have we have this icons which is the top bar icons fine now in all the I mean svgs or this icons give it a class name of let's say react icon single icon let me repeat it all over and let me copy the react icon and paste it here and say cursor should be of pointer now if you hover them the cursor will be of pointer let me make the search icon a little bit more smaller so that let's say 75 you're not here here and Save now I guess it's fine so what else is remaining here as icons we have messaging and we have this notification so let's add them also let's say message let me import it from here copy the briefcase and add two more one for messaging which is this and other four the notifications say Bell let's try this also from AI and replace this fine then we have it like this so we have to make it as 45 or 55 or 65 but it's looking ugly so try okay it's ugly because I think we have to decrease the size of the icons let's see in all other sizes and we have it here now let's decrease the width to 55 or 45. now we have them as here but it's look it looks a little bit ugly yeah so I guess the let's try 55 percent here and I think that's perfect for now so we have a search icon so make the search icon small so make it as 25 or 30 will also work yes so let's leave it at 30. we have search icon home profile and all fine so but the thing is if you hover them the color changes so how to do that so let's try this I mean react icon uh hover class whatever it is and then the color should be let's say red when we hover them save and yes it's working it's red but we don't need red we need black so say two one two one two one so we already have black colored here so we have to change it here so we can make the color change here we have to make it grayish a little bit Gray so we can slide it like 5b5 5B yes if you know hover over them it will turn it turns to black or not black two one two one to one so let's make it pure black now it's much better we can use the hover effect we can make the color of the icon a little bit more on the gray on my I mean white side that looks premium type thing we have this effect now we have the top bar let's also add one more thing which is the user icon here a small user icon so we can have an image so first let me get an icon I mean the user icon that will that we will later replace with our own icon so we can have this icon spng let me download this any icon you can use the free download I have to sign in to download this so we don't need this what is this now to close this from here okay download PNG okay it's downloaded let's move the file to this assets folder and make it as user dot PNG let me import the file here here so import user from assets okay too much back routing assets and user dot PNG now we need one image tag just like this we have to add it here after the div IDE now save and we can close all the other icons I mean other tabs so here the source will be not Linked In but user and also the alt tag now we have this user but it's not a background I mean proper background image so let's search for another another one so user icon um in the images let's try let's try this but this we already used let's try from PNG tree okay this is the same download PNG okay it's not a background image so say user icon PNG that's how we search let me try from here user icons let's try this let's click download let's see PNG free let's see it 252 to 50. unlock all formats okay I think that is for free and this one as well so download this no matter and download it here it is move this to here assets and delete this page I mean release delete this file and make this as user dot PNG now let's see what happens if you try to refresh and now it's perfect but one thing to do is change the class name so you say user logo save and come to the index.scss and say user logo with 30 pixels too small huh 40 okay 40 is fine also we have to make them on the right I mean top right so we can say position absolute right zero pixels I mean not zero in entirely make it 10 or 20 or 30 or 40 or 50. now we have this user icon here let me also add the cursor as pointer so if you hover that cuts it if you hover this icon you will see the pointer cursor now we have all the top bar icons like search home this that and like here we have the user icon and the home component text so that's all for today I am in for this video and in the next video we will learn how to create the home page all the post requests and get requests now let's move on to the home page I am in this page in LinkedIn the feed page so click home by the way let me also create routes for the home I mean top bar yes so open this components common top bar index.jsx and let me create one function called navigate or say go to or go to route it will be an error function so on each of the items here we have to map I mean not map I'll assign this so on home we will say on click and we'll send the data to this function called go to route and this will be the current route of the page so here it's slash home now in this function let me first in let me first uh import the use effect hook sorry not use effect hook let me import the use navigate so we can say import use navigate from react router Dom then let me create an instance of the navigate so let's select navigate equals to use navigate now we can navigate through this navigate um by the way these things I mean this function takes a value so let's say route and here we will just navigate to route now if you click the home we'll be on the home page now let me add this on click on one more so let's say on this second one called user switch so let's say profile now save and click second one and we will go to the profile page but for now we will get this error because this page doesn't exist so if you go to profile we will see no page I mean the error so let's leave it for that I mean leave it for now okay now what to do is just go to home component and remove this H1 now we have to replicate the entire thing from here but I mean not the entire thing just this post message box first so in this common let's create a folder called let's say uh post update in this component we will have an index.jsx and one for CSS or scss when the j6 file we will have what is what is what is what is happening we'll have post status now let me import okay not import first just import this scss file into this component now it's done now we have to import this post status in the home component so we can import it import status like this and return it here like this fine it's done now whatever we will do here we will wait selected here so let's first create this box so let me make a div here another div find save this div will be a this div will have a class name of let's say post status class now copy the class and come to index.scss for post status and let me create the card here first so we will do this what do I mean by this is with 100 not 100 let's say ATP percent then height uh 100px let's try for now but I didn't think it should be 100 let's make it 50. now we need background color so let's make it white now save and let's check the page here we'll see this thing but it's not a card I mean yes it's a card but we have to arrange them arrange it also let's check the color here what color is this I think it's not white it's white smoke now we can try this and fine it's look it looks fine now we have to arrange this in the center so to do that in the home component of jsx make this as home component and copy this class come to this scss which is in SAS and let me add The Styling here for now so we will say display of flex justify content Center and let's see what happens align items Center but it disappeared I don't know why okay home component let's check the class what it should work but we don't see it here but why let me just comment out this and then we can see okay I guess the home component my post status okay let's do this in this component itself so give this class name of this parent div post status mail in this we will have the same class host let us mean and we will add it here save this as well now it's in the center but not vertically so we can give it a little bit margin from the top so let's move this class here fine now we have this I think 100 PX was fine yes now let's give them some margin at the top the margin top let's say 30 pixels is there fine okay let's try to make this as 120. okay it's also it's all it it's also looks fine it also looks fine we need one border 1px solid two one two one two one but this is too much dark to dark for us let's try to make them this still dark let's move it towards the white let's see okay this looks fine but still this should be fine yes now we have this box borders are curved so we can say border radius uh 10 pixels what happens then do we have 10 I think it's small let's try seven yes I guess seven is fine now in this we have a input I mean it's not an input it's a button type thing because if you click this we will open a model here so let's create that as well so in the post status let's add a button and this will be called as start a post now save we will have a button here give the button a class name of open post model copy the class come over here then do open post model then add this at the bottom I mean not the bottom let's make Center so if you want if you want to make it at Center we can do the here and do this here as well display Flex justify content Center align items Center yes it's in the center now all we have to do is expand this I mean give some weight 300 percent let's write 90 or 80 okay it is fine so now we need some height as well so try for TPX also so we have this startup host button but the problem is I mean the thing is the text inside the button this is on left aligned so we can say left I mean text line left let's try if it works or not yes it works now we have this but the color is black so we can say color black or not black entirely two one two one two one we have this now let's change the color of this button background color so say background color let's try this color fine also we can move to a lighter shade now it's fine it's gray we can do more lighter yes I guess it's fine let's remove the outline so the outline none also border will be none as well so we have this but I think we don't have zero border I mean nonborder let's try one pixels solid and some color so let's try this color now we have this okay but the height is not 40 it slits 50. 50 also the border is curved around say border radius 30 pixels to make it rounded yes it's fine also cursor as pointer we need save and we will have let's add padding so say padding 10 pixels for this text or 15 the text is inside this fine so now what we have to do is what change the font size of the of start a post so I gets the font size here is aerial so we can say font size sorry font family Ariel did this change or not yes it changed then we have we have okay it's not idealist system UI sorry I think I checked something wrong system UI we don't need all the other fonts save and I guess you will see this here just as LinkedIn other properties let's check so we have the font size 14 pixels weight 600 so wait I mean font weight which will be 600. color is this RGB and blah blah blah so we can replace the color with this so where is the color we don't have a color okay we do have a color here so let's replace and see we have start a post okay some thing is wrong here let's style this color it's too much on the light side this this is also too much light I mean not too much but fine this yes this looks now perfect we're gonna increase the font size so try that like font size 16 pixels let's try let's try 14. button is fine so just like this we have this so let me exit the what font but the color is not gray I just notice it noticed it it's the gray color only when we hover it so let me make one hover effect here on this open model open post model so however and in the model we will have background color as this so cut and paste but here the color of background will be let's say white smoke save both files I'm in this file and we will see this just like this we have this now all we have to do is click this button and it will open up a model so for more dial let's go to this r d documentation yes let's okay we have one designed five now so let's search model here what happened murder yes we need a sentence model so if you come here okay to Vertical Center model like this so let's copy the JavaScript code for model so how to copy just click this copy code button but not one thing that you have to watch the previous videos only then you will understand what is happening next you will find all the videos in this playlist check this playlist the model index Dot jsx paste the code here something is wrong okay it's not a functional yes it's a function but let's make it model and fine let's it is fine fine fine fine also let me clearance says or scss file so say index Dot scss let me import it here import index.scss now we can import this file into this post update component so import model okay let's try look from local I want to import so model and just render it here OKAY model has already been declared where okay let's say model let's make this as modal component and just export it here okay fine then import it here and save and no error will wear now I will trigger the model on click on the button so let me create one function here so it will be called uh just let me one second let me copy the state here from the model component which is this I mean cut it not copy this okay so let me cut the state from here paste it here import the state hook fine then let's say model open and set model open not one so we don't need second model and we don't need this either we need only one model so whenever we are clicking the button in this model it's opening this model so we have transferred this anglicument to this button so here I will set it as true like this then we can name the button from here now this model takes this open prop and the open value is modal to open but it's short model to open its model open so save this here also we don't need to do that so just we have to pass we don't need button or the state hook so we need to pass model open and set model open as props so first let me receive here receive it here Steve now let's pass them but let's also render the model component here that we are not rendering so we can render it out here like this then pass set model open and model open plus model open and set model open huh now let's see if you click the button let's see what happens so yes see this model is getting opened if we click cancel or OK this will be closed fine so now let's design the model so if you click this start a post you will see this text called create a post in the model so let me remove all the contents P tags and action H4 link and create a post here okay I think the title should be here vertically centered model dialogue so let me add it here and fine now what to do the next step is to write I mean create one input element so we can say input and the placeholder will be what do you want to talk about now save and we will see this input but we have to design this so we can say class name let's say model input now the class model input should be here and now let's Design This so first okay sorry this should be here first we don't see any background I mean we're sorry we don't see any border so make border has none for this input so if you do that we will have no water also background color will be white or white smoke so okay it's not white smoke I think it's pure white yes also it's breaking I mean we need some width but first outline also none so that it becomes simple as that color is black to see the post what we're writing font size 20 I mean it's not 2017 pixels let's try yes but it's big try 14 I think it's fine point family the name is system UI system UI contentment changed we can type find if you remove this entire thing we will see this placeholder Also let's add some width say 100 percent fine we have this width as well okay let's make the font size 16. fine you can write anything here like this okay we have also an emoji one image one video and this document button also we have this privacy select so we will add them later but first let me just post data to Firebase also we have a post button here so let's create it so save button class name post I mean modal button or BTN or say post BTN yes and it's called post now save this and it's here okay I think we can remove the button and just rename this okay to I mean rename this OK button to this post so let's check the documentation here customize button props yes let me check this okay on okay button okay I don't think this is what we need customize footer yes this is what we need so let me copy the footer which is an array for your object and in object we have array but it's not here it's here now we don't need this button or this button we can just add one post button here and Save Also let's import button from a and t design and save it loading is not defined where it is loading let me remove it fine and the look is not defined also remove it because we don't need them right now so we have the post button here that is doing the thing but it's disabled so we can make it disabled it becomes this color and if you hover the color I mean the button we won't see anything now if you type anything here this will be enabled so let me create one input element here so let me create it in this page not an input element but one state sorry so we can say let's say status comma set status equals to use State let's make it a string first just for just now pass the string to this set I mean pass the set status to this model now we don't need this for now come to model and get it as props now on this input we will have on change and we will store the data in set status like an event so we will have event dot Target dot value save this now if you type anything okay not here here the data is coming okay it's coming fine set status okay fine now now let me also pass the status here as prompts in the model component let's also get it here and here the value should be this status fine so we are going to disable this button when our input is empty I mean this input is empty if we fill it with something only then this button should be enabled so let me remove or not remove let's say if status dot length is more than 0 it means something is inside this input so we will say um let's say false because if the status.lin is more than 0 we want the disable to be false or if it is less than 0 or 0 we want it to be true save now let's try if you type anything the button will be enabled but if you remove anything this will be disabled so this is done so basically we have a model and where we can create our post now come to this post update and we have the status that contains our text that we need to save but we need one more thing one button not a button a function so say 10 status to Firebase so we will have this function let's pass it on the model as well like this come to model and just destructure it from props like this now we have sent status and on the button we have on we should have on click event and this should run this send status save and the UI is done for posting data fine now let's see the next step that is to send data to Firebase fire store firestore so to post data when we need a few apis I mean from Firebase so come over to this API file or folder then make a folder called let's say fire store apis yes it's a folder okay I think let's make a file not a folder sorry so let me delete this and create a file called firestore API dot Js but we need to initialize filed store so come over to Firebase firestore so to the strip I mean the step to do that is Authentication not all integration come to all products and choose Cloud firestore here to set it up we need to create the fire store instance so we can say import get fired store let me first or I mean add Firebase slash firestore fine then it will be easy to import the function get fired store now we need one more I mean constant so say const ore equals to get fire store that is this function and then we have to pass this app inside just like we have in Earth now we have to export the fire store variable like this so now we can close this come to the main.jsx file let's import okay we don't have to import it here but let's see okay let me create a database here let's start in test mode and click next okay let's choose enable I mean enable this fine for now what's the problem unknown error occurred let's also I mean click again let's see let's try Europe the location of the fire store um it's not working they create it again let's try okay it's created fine now come to rules because this has some security tools for example the person who is not logged in or signed in should not be able to write data or read them but we will just add it for now I mean we will just make it public for now let's click publish okay see this is saying that your rules are defined as public but we will change it later don't worry now all we need to do is create a function here so say export const let's say post status an error function this will be just like this file auth api.jsx we need to import a few things and the auth from Firebase firestorm but sorry not auth we will have fire store from Firebase config now so we are going to post data so we need this function from Firebase firestore so from let me add Firebase slash firestore so the first function is I think it's add doc add doc means add document also we need a collection keyword collection means a function that will be helpful to create a collection here fine so we have collection and add doc I think we also need one more thing called auth do we need Earth let me please check the documentation I am forgetting what is the thing that we need add dot Firebase okay so it's here add doc you are here import get fired store okay we are doing that collection in endoc okay const review that we are doing on this uh config file now we have to create a reference yes so let's create it so select dbrev equals to collection keyword that we had on the top it takes the DB I mean the DB is called the database in our case it's firestore then let's add the collection name so let's say posts save this now we have to use add doc here like this width and in the add dock we'll pass the dbrf if you scroll down we can see it here like add doc dbref the database ref and the data so we don't have the data so let me get it from the post data so okay we don't need model for now we need this also only auth API homecoming CSS wait the post status component so it is common post update and here yes we need this let me import this function here which is called post status so simply const okay yes import it at the top here okay cons post status from this API file then just add it here like this we will pass the status as RMS or arguments then this data will be here or say status fine let me create an object here so let's say let obj or let object which will be related to send so we will say status as status we are making an object because later we will add other items as well for example we have image video emoji and all also the privacy so let's add the object here after the daily ref now I think that's all but we need to then block here so say then and it will send us a response from Firebase and we can say console.log this document has been added successfully you can try this custom I'm in this message but if it fails we can catch it so why I'm using promise but here in auth API I was using try cache block and I think of it I mean not to think of it just try cash block but both will work so say error and second soul DOT log error now let's try this let me give okay we have problem here post status has been declared already where I guess here post status okay let me make the name of the post letters as small small p then change the Imports now it will work refresh it now open the console like this clear it click the button let's say hello world now click post and you will see document has been added successfully now check the fire store and we will see this posts I mean this posts is the database reference it takes a fire store from the auth I mean from the config file and the collection name so collection name is called posts and the status is called hello world fine so this is how we add data in Firebase firestore let's also do a few things I mean when we are sending data let's make the function as async a weight then once the function post status is done we will call set model open as false I will make it false to close it now save this let's say Hello World 2 click post and it's gone and immediately you will see we have status 2 as hello world 2 in the fire store fine but we also have to clear it so we can say uh of it thread status is empty now make it as hello world 3 click post and this will be here and if you click the button again you will not see the text that I posted that we typed before it's empty fine now one more thing to do let me have a toast here let me post I mean let me import toast from reactive I instead of the this log console log we can add toast dot success and let me try once more which will be let's say hello four type in type anything click post and we will see document has been added successfully and it will be here so that is how this is how we post status audit I mean we add data or document to the firestore now let's see how to get all the posts from firestore to come to the fire store api.jsx create a function called get posts all the posts basically it's an API yes so we will need a function from Firestone called get what do not get on Snapshot fine so we can call the function in this function it takes the difference which is called dbref comma then it provides the Callback so say data or set spawns not data fine then we have to filter our response from here so we can say console DOT log response dot data we are not data let's say Docs dot map the sponsor docs dot okay let me just show you how to do that but first we have to get the function here so export it sorry import it then we need one more hook called use memo hook from react then let me create the or add the hook here use memo then what we will do is in this use memo let's call this something called get posts fine now if you open the console let's say what we get what we have in the console so we have this thing called Excel so it's the data from the fired slot that we cannot trade right now we have to filter our data so we will choose the docs here if you see we haven't we have a docs object which contains our array so we can just response dot Docs and if you save we will see this array so we have to get the data from this error using map method we have to fill I mean yes we have to get the data using map we will create one more array from this array which will only contain our data that we need the posts in an object so let's say let's say Doc or Docs and let's return dogs Dot data as a function now I will get this array where we have all the statuses like Hello World to hello world hello world food and all like this also it provides us an ID I mean each of these statuses have an ID let me go to console in firestore so you see this ID called atfq and all it's an ID that we can also get so we can just make Docs dot ID if you save we will have this array with the ID as well inside it for each of the posts I mean status one second let's make this as note posts get status okay now here also we have to change get status fine but the thing is we don't need the data here we need it in this component so let me create a state here called uh all status and set all letters used it and Eric so let's pass this get status in this function get status I mean we have to pass this function set all status inside get status yes that's what I'm saying now let's get it here so we can set it here directly if you save and refresh the page okay let's cancel that log this all statuses here and see the output so we will get this array of four objects if you refresh it's empty but then we get it after some time so it takes a few minutes 40 minutes minutes of your milliseconds to load so if you check networks tab go to fetch xhr refresh the page and it takes some moment to fetch the data fine so we have our order that we can add later not now so we have this what is it the state called state is all statuses now let me remove this console log so that we can map the array here so we can see all set says dot map let's say status I don't know why I named this as status it should be posts wait a second post status you get status fine it's fine now we have to return a div or a fragment but I prefer fragment but you can also use it but the problem is both refer in some cases like each have their use cases the react fragment or div so in this fragment let me return one h let's say not H3 A P tag simply and send status Dot what is the key name status so it's odd so let's make it as posts so that we can have posts dot status save the file but the problem is we're getting it here and that is the problem that I warned you about so we have to wrap this in one more div so that it becomes the child of this four states Main but I don't think it will work fine but it works so fine let me get the class here post status Main they should be in index.js CSS and we have to make Flex direction as column now it's fine we can say it now let me show you this if I add one more post let's say hello World pipe and click post it will be immediately here immediately and here also that is the use of this on Snapshot let me close this now let me grab one component here for the card that is on LinkedIn for example this card so we need one component here called let's say posts God in this let's have an index file and one fcss so index.scss so make it a function component but let's change the name to posts card here as well for now we will have this uh text here now let me import the SAS SSS component which is post on one step back index dot scss now save now we can close the firestore API or model CSS let's get the component of the postcard I mean posts card here so import posts card from Posts card and let me just returned this component like this so we'll see five posts card text here because this component is running five times we have to pass this posts as um prop yes now let's receive the prop here I'm going to structure it then in here we can write our these things like posts so in this step Let's Make A P tag which will be called as posts dot status now you will see the same thing if I refresh and it's it works now what to do we have the card but it's very basic I mean it's not a card yet but it's very basic so give this div a class name of posts card now let's copy the class come over to index.css and add it here now in this class let's create a card here like this so we can use same styling as this card so let's get it from this what is it try home component no I think it's in post status where it is component common post update yes from here so we have this post status card no this is the card wait a second which card do we have this card post status yes let's search it here and let me get all of these item from here and simply paste it here in the postcard.scss now we will get these cards but they are very very small so we have to make them large fine so we can make the mid width to 100 percent still it's very short okay let's remove wait a second come over here okay let's close this this as well so I'm fine so let's make this as 300 pixels or 500 or 600 or 550. yes they are not perfect let's do the same thing in that component as well let's don't let's not do its use percentage so if we are on a bigger screen this will be response fine so what about the model yes model is fine so we have this all the cards data here let me lose this one now we have this text but the placement of the text is different so it starts from the left so give this Diva I mean pay a class name of status and let's say status or the status or yes so in here say status extra line left it's not on the left so I guess why we can remove I think this item just have a Content Center now it's on us and it's on the left so it's having some padding so let's add the padding here 20 pixels now it's it has some padding but the width of this card has increased so basically we can add padding here as well now the inner element is now shifted to Insider now also we have the font size smaller and the font is different so let's also check that the font is system UI so let's make it here font uh font font font family y is it changed yes I guess so and now what is it the size is 14px the font size for 10 pixels now it's small also font family font weight 400 so font weight 400 pixels not pixels fortnite also the color is this so let's see in the color here so make the color as this now we have this but something still feels wrong here Earth system UI but I don't know what's the problem here let's search the correct font okay gets I guess it is working whatever you copy this font paste it here oh okay fine I think it's fine it's fine it's fine okay now I have this card fine now we can even move it to the top or leave it here fine but we also need a few things here for example the username we have this timestamp six hours ago and on so now let's create the timestamp here in the post update.jsx and for the timestamp let's have a let's have a Library called moment.js so let me install it in the direct app so let me copy this command and install it using the terminal save now all we have to do is import moment.js let me create one helper function for this so let's create it here in the or not in any file say in this helper CS so say use moment dot jsx basically it's a hook so export const dates or let's say change or get date or get current date or say time it's a function but we need moment package here so we can import moment from moment then it will take a date that okay not the date okay let's say moment I mean let's choose one time stamp here which is let's try let's try um see let's try this one to add it here so it will take the current time and it will format it using this Triple L and this will be the output for this so we have to return it but we can get this Triple L from the param circle so say format or time format then we have to just pass it here and now let me call this function get time stamp in our post update.jsx so import what is the name get current timestamp from this route and then what we have to do is let's say okay post status we have here one second okay now let me pass or wait a second I think the update is not happening here so tell status is here a wait post status what is wait a second set panel option I forgot the code how it was working let me open the model and check no it's not happening here either so where it is happening so I guess it's happening in the home component no here also no so where are we calling that function today is my bad day I guess so I think this is the function that we are having and here we are passing the status okay fine is this all if we click Start a post this model will open and we have the send status that we are passing this fun and this component called modal component I think that's it post status yes so let me create one object so say obj or object equals to an object here we will have status as status comma then we have uh what is it then say timestamp equals to okay let me import it here as well only we read it here so get current timestamp and let's pass Triple L in capital so we can try to control this as well so concern.log this now open the console and let's see what we are getting we are getting nothing so we are returning this data Let me refresh the page once I guess it's still compiling so let's open the terminal terminal yes it's compiling and it will say it will take some time because this weight also modifies or optimizes dependencies yes see we're reading the data which is the current date and the time for now we are passing this here as Triple L format then let's pass this object in the post status here to open post status in the API in flyers for dpa.jsx let me remove the object and say object here that we are getting and simply pass it here this will work as well we can remove the console log for this now let's try Let me refresh let me delete the entire posts I'm in the collection but wait let's also add one more thing one last thing here which will be the current email of the user so the user is logged in and let's store his credentials in let's store his credentials in local storage okay so we can do that from login API so it takes I mean it Returns the response and made the login API that we are calling let's check here so it sends us a response so we can simply console.log this response like this but we need to be logged out for this because we can't see this login response here for now so how to log out let me delete all the users from here and start again from Chris from scratch so delete this Let me refresh the page and see what happens okay nothing happens let me delete the other two we haven't made the logout button yet yes we have on this login page now let me create one account here using our email or phone so sign I mean join now let me create one minute so if I if you are creating the account they should be in the registered component as well to set it in the local storage I mean we have to make the console log so we can set spawns dot email or I guess let's check so let's say nishanth s440 at the rate Gmail .com some password let's type and again join so account created okay but okay we hadn't saved it yet fine that was the problem so okay we can do one thing we can remove the we can remove this thing the Earth I mean not the auth where it is it yes we can remove where is it where is it in the home component origin sorry not the component in the home page so we can simply comment out this for now and from here from this page called login.jsx also comment it out let's make the use I mean the loading to false and in this home as well so that we can see our range so let me go to the login page now okay not the login page yes login page will work quite as well so let me add the email that we use now gmail.com the password click sign in we will see all is retired so we can use in the login page where is our login component okay let me see login login component there are too much files here yes so res dot user and then in the user we have this email so let's store this thing in the local storage so we can say local storage.set item it will be user email the same thing we can do here in the registered component so we can do it here not the console log fine now let me divide back the changes we did in this two components here okay so come over to this home.jsx and revert everything back to the state it was before login as well now save let me expand it a little bit less fine now let's try from the beginning let me delete all the users here I mean only one user we have we can delete that fine we don't need login page or the home page okay so let me use I mean let me create one user here again so join now email our phone let me open this thing which is the applications tab in the applications tab we have local storage and it's empty for this so we can say Nishan there's 440 at the rate gmail.com and the password click again join and now we have this email here user email for the current user so I prefer I mean we have to use the local storage nonpositional storage because session will be destroyed after some time or even or when we close the tab or when we close the browser now here we can just get the email from the user so let user email equals to local storage dot get item the user email key that we typed here so we don't need this either okay save this and save the user email as user email now we have no data here so open the fire database no data is here fine let's try to save one so we can say hello World click post and it's here then if you check here let me refresh we will see all these three items called status timestamp and the email I hope so yes it's here fine now what we have to do is let me just render it out here simply in the postcard so after I mean before this let's add one P tag and say posts Dot what is the key name times temp timestamp yes timestamp so we will have timestamp here then we have the email as well so okay let's not show the email for now because the use of email is very different here not to show it here so give this timestamp a class of time stamp let me come to the CSS for this or scss and add the class here which will be timestamp is this so let me hover this font six hours the same is here system UI porn family font size 12 pixels okay colored is this so color is this Pond weight 400 what else do we have nothing so I save this and the timestamp will be here but they're not arranged Also let's add padding 20 pixels for this so they are not arranged properly as it should be I mean as they should be so we can say justify for you not justify Flex reduction column now there will be a column so I guess the problem is the height here or is the it is it the height let's try justify content Center yes now they are fine but still the Gap is too much between them so I guess what's the problem let's remove the height and try okay it's it is not like this okay okay okay what can we do display Flex all the things let me comment this for now so it comes at the start fine but we have to bring it down okay I guess we don't need align items then it will work yes but still let me move or just remove this also and see what happens okay it's not fine okay what if we remove this and remove the padding here as well okay if you are having removing the padding let's add margin 10 pixels where margin is fine add it here as well tied 20 okay so we can do this so margin 10 okay just make it as zero zero zero zero fine if you had 10 here or 10 pixels this will be moved from Top I mean its top margin then this is called bottom margin I'm in top bottom I guess this is called left okay not left this is left 10 pixels yes the timestamp is here and the status fine the same thing we can apply here not just margin 10 pixels and it will work the fine I mean it work it will work fine so the timestamp is here and the hello world text all we need to do is now is to add the username and the image that will be for the next I mean very next part because we will need fire explode Firebase storage for this fine now in the next in the next video let's do the profile page for the current user so we'll have to fill the data in the profile so that we will do in the next video let me also start add one more post call hello world 2. click post and it will be here immediately and the timestamp also if you check both status is here now like this so this is not the final version of this home posts card we will add all of these things fine let me copy this post and just add it here and see what happens click post okay the problem is we have to add the height as Auto okay not the auto I mean let's add Min height as 120 pixels or maybe let's say okay if the post is small then we see I mean if the post is large we see the C more button so I guess we can make this as Auto and see what happens or 120 pixels let's make it as let's leave it a lotto and add one padding bottom to 20 pixels now we have this and it looks much better than before so this is how we created the posts card that contain or that will contain our posts fine then okay now let's see a few things that we can do before the profile page creation and first of all the first thing is we need to create a popup here if you click this profile icon we should see a popup and it contains the logout button or item if we click this button of logout we need to run the logout function and log out of the system so let's create the API for that in this API OS API let me have function called export cons on logout and in this function we will call a method call okay just let me have dry catch block first and remove all of these items so the method name is sign out from fire space sign out sign out now we need to use the function here and just pass the auth and that's all now we have to call the function here so let's call it so import what is it on log out from this route and just wrap this function in this button I mean add it here like this now if you click logout button we should be on the home page I mean not the home page on the login page see we are on this page file so it works now the next change we have to do is in this page called join now I'm in the registered page so come over to components register component and here let's make the login as register and add the function here as well on the button of the on button only I mean now what we need to do is we need to add one more field here for the name of the user so let's add it here and that will be your name there so the type will be of text and the name I mean the key will be of name and we will have this here so let's also store the name in the fire store okay what I am saying okay not that I mean what we need to do is we need to store all the items I mean the email and the name in the fire store to get the current user after filtering so I will show you I mean I will tell you what I mean with firestore DPI let's have this okay what is this what is this let me remove this I think I was trying okay what happened something is wrong if you save wait a second wait a second wait a second let me go to the top and remove this yes now it will work fine now fine so now we need to store the data in the fire store for that when one reference call user f and the collection name is called or cooperatively called as users so this will contain all our users when we sign up so what I mean by that so let me add a function here called export post user data like this in this let's create one okay we already have the function here fine so it takes an object and loads the data in the Pirate Store collection so we are passing the user F here and the object is already here so we have to call this function directly post user data so we don't need this we need to call it here so we'll just let me call it like this import post user data and we need to run the function here in this drive Block in the register function post user data and you will pass credentials dot email one second what is that we are passing okay let's pass the credentials here here or let's second I guess okay we can make it as an object as well so we can just say name will be of credential dot name comma email will be off credentials dot email now save this and whenever this function gets called the datability passed here and stored inside firestore now let's try this so we need to delete our uh user from here then try again now let me also delete the database collection which is called posts so just delete collection here now let's try let me enter my name called Nishant Kumar let me add my email correlation that's 440 at the rate gmail.com and the password once again click again join and we are signed in fine and now if you refresh the filed store you will see this thing I mean this current user here so let's see the user is here with email and name fine as you already know we are storing our email in the local storage as well so we need to create a more function to get this data and filter it to get the current name of the user and the email so we can export const get current user and just say what can we say so we need to use this on Snapshot which is here fine let me add it here but instead of this posts ref we need to pass user's ref or use the ref let me just console this for now here and Save now if you check let me call the function here let me call the function in the home component or in the home page so in the home page we have this as here okay let's call this in this page or better in the layout home.jsx so that we can pass it in home in the top bar to have the name as well for the current user so we can say import uh get current user let me create one memo hook here use memo use memo and just add use memo and just call this get current user here now let's say the console what we are getting so we are getting this error of object which is contained which contains email name and ID fine so I guess we don't need it so we can remove it we just need these two items fine or let's leave the ID and make this as user ID so that we can have user ID here what is current user fine now we need to filter the current user that we are on currently for example let me log out and login with my other account I may log sign out and not sign out okay I am tired so I mean let me register with my other account so send me Shan only and this Nishant s550123 at the rate gmail.com password click again join so we have one more database I mean user here which is this now if you check the console here we will get two users see in this area of objects this we're having two users let me give it a refresh and try again let me have some water first I am feeling tired we are having two wizards but we're going to get the current user that we are on currently which is this email Nishan that's 550123 at gmail.com so to do that we can use our local storage to get the current user from here the current email so let's say let curve email equals local storage dot get item and the key name which is user email I think now we have this correct email then we can filter this here so just see Dot filter let's say item and we can return item dot key name what is we have here we have a email as email so email equals to current email now we will get the only one email that we are on currently which is this so to access the first element I mean the only limit that we have make it as zero index or zeroth index and we will have this like this now in the home layout let me create a state here so const let's say current user that current user equals to use state empty object now path this Set current user here get it here and simply store it here like this now we have to pass this current user to the home page or home PS home page now come to the home page where is it here in the pages folder then let's get it here now pass it further to this home component and we will keep passing it so let me get to this component home component get it as props then pass it even further like this fine now come to the post status component this is post update yes this one let me just add it here post do we have current user here fine now when we are setting the data or sending the data to firestore we need to also add the user name which will be current user dot name Also let's add the post ID I mean post ID that is the idea of the current post that we are posting so we can add some random ID so we can use the package called uid in react I think let's try this so let me install the package View terminal add one more and install it now we have to import this at the top or let me create a function helper function for this as well so let's say get unique ID Dot jsx we need to create a function here which is called git ID or even better we can change it to get unique ID and we will export the function in the function we will have ID and we will return the ID so ideal contain the current ID from uid from this library then we can simply import the function here in this component and consolid to check the current ID we're getting here now we need to get the ID from here to this post ID for the current post so let me remove comment and create unique ID now all of this data will be sent to fired store here so let me open okay we don't have the collection for this for posts but let me try let me create a post call this is Nishant now click post and this will be here with a timestamp and if you refresh this page this filesport console you will get the current post that we did now so it will be in posts and we will have this fine so why I did that is because this contains our email fine and if we create a profile page we should be able to filter the posts based on the current user that signed what I mean that signed that signed in yes now we can do one more thing so where are we reading the data so let me check the component close all the components that we don't need fine so where does it it is here so where is it I think in the login component in the posts card I guess no not here post update component let's check here yes we have all the okay it's in the postcards itself okay here fine so also let me add the name so if you see we have this name here called Abhishek patil I mean for example so before this time stamp let's add the name called p and this will be called posts dot name now save this and let's see the name so add it here and we should be see we should see the name here called nishanth fine let's style it a little bit so class name will be name we don't need this component or this component just come over to the styling file SSS file and let me add a name class name here so the things here are same I mean there are they're all equal but the name is a little bit Bolder so we can just copy all our items here and add it let's make the font size for 10 pixels and make the font with a 600. now it's bolder but it's sticking to this time stamp like this point so we can add it so where is it the time let me add or let me have margin or remove margin top as 10. now we have this Nishant as name and the timestamp fine now let me log out and create one more account for the other email from the email called let's say Nishant Kumar will be the name here email test this and some password click again join you cannot create your account but why let me open the Netflix tab and check again join okay I think email already exists do we have the email here yes okay I guess I have to login only not sign in so let me sign in with this email okay what is the name of the current okay it's Nishant Kumar fine in let's do this now let's add one more account I mean one more post from here called hello this is Nishan Kumar now click post the name is still the Nishant not Kumar okay what is the problem here so the problem was this let me show you what I mean so basically we were just adding a variable here and we were storing the local storage email in the variable then maybe adding the variable here but now we're doing it directly fine and in the post update we need to store the current user dot email here not the other way around so that was the fix now if you log in let me log in with this email called nishanth s440 at the red Gmail .com so the username of this email is Nishant Kumar so let me add one update from here called hello okay which will be hello this is this is Nishant Kumar if you click a post you will see Nishan Kumar and hello this is Nishant Kumar and now if you log in with the other account which is Nishant s550123 at the red gmail.com one two three four five six seven now we will add here hello this is Nishant and only Nishan not Kumar click post and we will see hello this is Nishant and the username is called nishanth so that's how we fixed it using these items now let's work on the profile page first we have this layout which is called profile layout the same way we have the home layout in the layout I mean profile layout we are having the profile page in the profile page we are having the profile component this component in the profile component we are having the profile card which is simple just a card here and The Styling is this note it down and you can make this on your own and also we are passing the current user from the profile layout to the profile card as you see here like this we are passing it so that we can see our current profile name here so I have been logged in with nishanth the username let me log out okay we cannot log out from here because I mean we can log out but the problem is we have to set the same thing that we have open the home page we are having all of these checkings so the same way we can do in the profile page so let me do this in the profile page we have to do all of these so we can just copy these items paste it here and import the react use the state Hook and the use effect and edit here then we need a state for loading so let me also add it here like this then we need the navigate so let me edit here as well okay then the use effect hook to check for the authentication every time the page mounts then we are having this so let me just copy return loading if the loading is true which we'll see the loader else we will see the profile component like this now let's see like the thing is we have logged out so now if you try to go back to the profile page let's see what happens maybe it's going back to the home page instantly we cannot go back using this button as well so now let me log in with the other account called Nishan s440 at the rate gmail.com one two three four five six seven click sign in okay sign in and we are on this page now we have to go to profile page so at the route here and we will see the name for the user called Shan Kumar just like we see it here now let's style all of the items in the profile card a little bit here so this is a let's say an S4 tag or H3 tag so make an H3 I mean wrap the current wizard.fame in H3 tag and we're reading the current user from this file so if you open API by x2dp.com sorry.jsx we have this function called get current user and from here we are getting the data so if you save and then it will see a Min we will have this here the current username so give the class name of user name now let me come over to the SSS file and give them styling so the font will be I mean font family will be what was the name system UI so system UI now save and the font will be changed okay let me check the font here what font is this exactly and all the other items so the font color is this so we can add it here like color like this weight 600 600 so font weight 600 font size 24 pixels okay save this and let's see we will get the Nissan command text here just like we have it here fine but it has a margin from the edges so we can just say sorry padding add it here so say 30 pixels or 30 is too much try 20. 28 side is fine Kumar here now the next thing here we have is this title So currently the title is not inside the profile page so we need to add the title and all the items all the other items in this page in the profile page in the firestore database so let me open this quickly okay so it is opening so let's wait for it for some time so we have this users which contains two users this and this So currently we have this user and here we have to update the data like about and the location and the about section and all fine so we can also add the email so let me add P tag and we can say current user dot email save this and we will have the email here give this a class name of user email now save this let me make as capital and here and its capital now come over to here change the name here as well and this is the user email so margin top will be minus 10 pixels or we can just make it 15 let's try or 25 okay let's make it 20 initially yes it looks fine let me use all of the items from here in here okay font will be select 16 pixels and we don't need the bolt but remove 600 and that looks fine I mean this is fine for us now let's add the other form Fields so first let me create one edit option here so let me make a div first and make a button called I mean in this button in this div let's add a button and this button will be called let's edit now save this and you'll have the button here gave this div a class name of edit BTN now let me copy the class and come over here let's give this position of position of absolute now right will be 20 pixels okay if it is happening so we have to make the card as relative so it sticks is it sticks here yes it's fine so we have this okay now let's also okay just leave the button like this here for now we will change the styling later so let me make all of the items let's say background color as White okay it's not working why okay it's because we are having the class of this edit button on the div not on the button so let's select the button here so we can say button and remove all of these items and it will be here fine but let's leave it for now we'll style it later because let's run the priority just we need to do I mean the one thing we can do is add a cursor as pointer and if you hover this the cursor will be changed to pointer no we need a form so we can create a component here called profile edit let me add index.jsx and index Dot scss in the jsx make it a functional component like this make this as profile edit here so let me import the styling file here which is index.scss save and now it's fine okay now what to do is when we click once again yes when we click the button we need to show this component so open the profile card and let me import the component here so import profile edit from this and let me get a state here so use state like this now let me add a state called is edit and set is edit equals to used it let's make it false because initially we will see this page not the edit page now let's have a function or not a function let's just map it here on the buttons on click and just revert the state like this fine now what we can do is okay let me wrap this in a fragment and save this nothing will change now just store like make the component here as I mean make this as what is it what can we say we can make it a conditional component but wait a second in the profile component I think we should do it here not in this page so let me remove the state from here and add it here I mean add real estate hook here remove the state from here and this as well and just add it here save them now let's add a function so say const uh on edit like this okay in this function I will set it like this that edit will be equal to I mean we will revert the state now pass the function on edit in this component save and let me come to this component and we are passing the current user and on edit okay just add it here and just add the function to this button we can now import the component of profile edit in the profile component directly so we can say import profile edit from here and then add one conditional rendering for the component so here we will have a profile edit is true we will show the component for profile edit save okay also need to add colon right now click edit we will see the index which is from profile edit component so just make it as profile edit to see the text but here also let's add a button like this to go back so just copy this and add it here in the profile edit okay just replace it let me have the function as props which is on edit then we have to pass this here as well the on a date function now edit and if you click this we will be on that card page let's make this as go back fine save and Let me refresh edit this we will be on this page now let me also add the card here which is called profile card so we can reuse the class name yes see it's working fine now in this let's add one input element or a few input elements so we can say input okay just add placeholder as name because what if you want to change the name okay now other apps will be let's say what else we have about so about will be f the text area type okay now let's say we have name let's say headline that we see here like this now save this and we will have the name and headline okay let's put them outside this div because this device is not for this go back button we have name and headline now what else we have here the location so let's add this as well don't worry we'll style them later so add location okay then I think that's all you can add other things as well let's add two more called uh company and College and save this now come here and we will have five inputs let me dab them in a div that we can arrange them properly now in this div give it a class name of uh profile edit inputs now come over to the file here in this scss and we can just say display Flex okay it's breaking while it is breaking profile card we have okay let's do what profile let me close this we don't need it for now okay let's make it as grid okay it's fine also we need to give a top margin at let's say 40 pixels yes let me add some gap between them to 20 pixels like this we have name headline location company in college now let's style the inputs so in each of the inputs let's give it a class name of edit input so just copy the class and paste it all over here here and here save them now copy the edit input Class come here and we can just say a width say of 300 pixels and think that's fine height the 40 pixels also fine let's change the color but I guess we already have an input so let's get it from there all the styles so where is it let's say in the registered page I guess I mean component on the login component so class name is the common input the beginning was this so just copy common input and replace edit input here like this now let's check in I mean save and see what happens okay currently the input is limited to I mean this common input is limited to this local file called login component so we can move that into this component called main.scss so that we can access it from every year I'm in this component or do we have other page for says okay let's try SAS login okay let's move it in the index.css and what is the problem undefined variable linked in blue one okay so let's check the login components as and at the top we will have all of these three items so we can just add them here as also for now now we have name headline location company in college looking better we can type inside it okay let's save okay we don't need to save this fine now what to do is add the states here so let me get a function to say uh const get input and in here event and let's add the event on all of them so on change this I mean just simply add this on all of the events I mean inputs like this now let's also add the name for example this is the name that we have then here we have a headline then we have location then we have the company then we have the college like this now when we type in the inputs this function will run and we have to set them in a state so let's say const input I mean edit inputs and set edit inputs and should be small so you state which will be an it will be an object like this okay now in this method let's create a variable called uh input simple input and in here we will store them like this for example we will let me just redistructure the name and value properties so let name comma value from event dot Target fine now another input we will have a curly bracket let's add the key name which is name and we will add the value like this now if you console.log this input after typing I mean we will type the text here in the input and we will see our output in the console let's try this let's add my name called Nisha fine it's been saved and let's add headline called hello but if we type in here in the second input it will be overridden and when it will overwrite the first input that is why we have the state so we can set the state like this and also add the previous value which is edit inputs so we can append that zinc Ripple dots and it will be fine now let me just console this here see what we get so let me refresh go to the edit page let me add my name called nishanth okay it's happening like this okay I guess we don't have to use triple dots here and then try Let me refresh once more oh yeah we're fine we have to use triple dots on both of them because they both are objects now it will work fine click edit Nishant in the second let's add hello and it's getting appended now all we have to do is send this data to the fire store like here so then if we have the name as something this will be overwritten by the current name that we have fine now to do that let me create a method here in this API page or the I mean API file so we can say export const edit profile like this and just as we have we have don't we don't have it here so let me add two properties from firestore which will be Dock and update dock fine so this edit profile okay we need a button also so let me add it here button so if let's say in the button let's say tape we will have the button here so let me get the styling for the button as well from the register component or login component so we have it here this button which button this button so just copy this come to profile edit and and the class name and just rename this to save button now in this file for this CSS SSS let's add the save button and just add the class from login to CSS where is the login button this just copy this entire thing and paste here wait where it is it in this is it here is sit here yes here it is fine save this LinkedIn blue 2 is not defined so also can we get it from here all the three colors save and save this as well we know this okay what's the problem save button is not working so the file edit we have this what is the main dip called it is profile card okay we are doing it wrong we can just place it outside and now we have the same button here so if we have a save button let me make the card a little bit bigger so make the width to auto and we will have this now the save button should be in the center so we can make it textile and Center let's try this we don't need this for now okay we don't need the profile card for now we will need these three things fine now let's try to make them in the center but I guess we have to add a div here and add it here as well now this day we will have a class name of uh tinted I mean save button container or save container now let me add the class here do display of flex justify content Center and it will be in the center perfect now the function we're creating here edit profile should be on this button so but first we need to create a function here as well so say save uh profile data or make it as an update profile data because we need to update it Now update profile data will be handled on this button so on click this save this um now let's have the ID of the user that we are currently on so we will read it so to get the ID come to the profile component so we are having the current user here and let me pass it here as well to get the ID in the profile edit page so just add current user current user ID okay now let's try this so save it and open the console now the button when clicked will show us the ID for this current okay it's undefined so just say current user and see what happens okay we only have the okay we have this okay we have user ID not the ID so each user here have an ID that I sent previously that we cannot see here I mean yes it's here so it will work like that okay where we are getting these two here okay let me move and Save file now click it again and it will see the ID here for this now we have to send the ID in the profile component sorry here so we can say user ID Capital ID in camel case so first step to the do that is to specify which user we have to edit so we can say user to edit which will be having a dock and in the dock we will pass the reference which is the user ref with the ID and the ID is called this user ID now then we will call the update.function then we will pass the user to edit with the data that we need I mean the data we are editing so let's just get the data or maybe payload and pass it here okay then we can add all of these items like then and catch block and save it here and if then it's true I mean if we have then then we can throw a post called updated okay let me add let me change this I just noticed this document has been added successfully let's say post here now just add the same toast here and say uh profile has been updated successfully now all we need to do is call the function edit profile here and pass the current user ID in the data so let's make the data first so let's say let data and in here let's pass one second we can just pass edit inputs so we don't need this object so we can just pass this edit inputs so one second first is the ID then the payload so we are doing it in reverse first will be the ID wait yes not reverse it's fine now let me call the function here called edit profile we can import edit profile from API folder and just run this okay now let me refresh the or clear the console and go back click edit let me add the name called okay the name is Nishant Kumar so let's just add the name called nishanth let's write headline called hello this is Nishant location let's say Patna this let's say this college let's say vit let me open the network tab to check the request click save and document admin profile has been successfully updated and if you check all of the items has been changed like the name has been changed to Nishan location College company email and address headline now we can edit I mean we can add all of the items in the profile page so this was second email that we had this has not been edited so that's a good thing I think fine okay now one more thing more to do is let's just send us back when we edit the profile so we can just call on edit now if we can try again let's say this time this should be Nishant Kumar again now click save and we will obey on the home page sorry not the home page the profile page but what if we do this as a weight and this is a bit as well then make it as a sink now let's try again click edit let me add the name called the same okay if the name doesn't change it will not change or if you're not fill if we don't fill the field this will not change as well so name is the same the headline is Nishant Umar and just click up save here okay now it's the same thing okay the name is empty now okay let me try once more click save okay the problem is what the name is edited okay the name is empty let's add Nishant Kumar and then click save foreign but if we click save again okay nothing will be edited fine okay so that's working now come over to okay we don't need this come over to this second component called profile card and let's add the other properties as well like the headline company and all so let's set the headline here after email so we can just copy this and say headline not heading now in this CSS or scss we can add it here so where is the headline you're not Reliant let's say user email just copy this and add it here so we will have the same thing but we don't need the same thing we need something different so add heading and come over here and let's check the styling for this so we can just say here uh owned family is tell me why font size is 16px here let me seven check the same thing we are having okay let's make it as 20 pixels to make it bigger but the key name will be username Dot headline save and this will be here okay let me give this margin top of 20 as well or 10 yes it's working okay let me make this as bold so font weight 400. 4600 not 400. okay this is I think fine when the starting doesn't match this so let me divide this back to section PX and this has 400 pixels the color will be this and it will be fine so I don't think we need to add the email because we already have the heading also then we can remove this class I mean the margin top best small differently or 25 fine it's here fine now let me maniplicate okay we can't do that now now we can do that Nishan Kumar and let me add this value here in the headline save and we will see this fine now let's add the location here after the heading so we can just say p current user dot location save Now location will be this fine then on the right side we have the company and the college so we can do it but first let me see this thing called this heading this is on the two lines so we can do that as well so save it 200 pixels and it's much less so try Theta 400 400 is fine I guess now on the right okay let's make it as 350. on the right let's add these two things okay we also need to decrease the line height so what is the line height here line height is 20 pixels so we can say line right 20px and it's fine now it looks much better now let me close this and on the right we can add the other items so let me wrap this in a div INE in here let's add one more div for the right items but this is if should be also wrapped in another div in the parent div so that we can make them side by side so this day will have a class name of profile info I think that's fine now come to the profile card and let me add we have profile card then we have profile info so we can add it here then we can say display Flex for now okay let me just add the items here so what is the item that we need the college and the company so let me copy to pitax and add it here this will be um what is it the key name is college and Company so let's say this should be college and they should be company save them and we will see it here also the problem is let me add some class names okay we don't need heading for now okay save and this will be on the right okay so now displays Flex justify content will be space between to make them on the right side Also let's add the class here called write info for the info on the right and just copy this add it here in the profile info and we can say margin top 20 or 30 pixels yes it's better fine let me now do what we have vit and this name let's me let me style this so both of them have same styling so we can just say P tag here and just add the same styling in the both so the font is system UI as usual where it is and the color is the same okay okay not the color is in the same is different font size is 15px or 10 pixels then fade weight 600 point with 600. save them Let's see we have this and this on the right point let me just change okay just let me add some margin from the right as well so margin right 30 pixels now it's better let me declare the line height between them light line height 24 pixels okay that's fine I guess but that is on the par okay with I think that's fine let me get the proper name and we cannot copy this okay it comes at the bottom if you click this that we can Implement later now let me edit it once more and add the company and college as this and will lower Institute of techno logic now click save and we will see the two items here so yes we can decrease the height between them and for that we need to make class names first for example it should be college and this should be company now in this P tag okay in this here just replace the P tag with comma College I mean dot college and company and we will have it here but in the company when it's a margin top that is negative so we can add that to make it a little bit at the top so edit here with too much let's try 15. yes it's better okay the font size is too small I guess so let's try 16 here okay or 15. the button was um what did we remove this let's it's it's better or just make it t okay a tip pixels or just 30. okay now it's fine I guess so our file page is done fine okay what if you make this as 20 okay it comes on the level of level with this but if if if if we make the width here for the right I mean the left card let's decrease it not the card the heading so let's make it 320. I guess that's fine so if we do this okay if we did this we can replace the margin by 30 to 20. and make the margin drop by 25 okay that's fine I guess so this is how we created an edit pitch in the profile now the next item we have here is uh the posts so let me add the card for the posts so which is postcard I guess which contains okay not the postcard post update one second okay we need this block so let me come to profile card we have this div let me add it after this and when it all stresses so where it is coming from it's a array okay let me get the array let me create an edit State here let me create it here now what to do is okay when it import this posts card I mean used it first minute to Define so let me do all the same things here you will start a new memo defined when it's the post card so also Define that from this component if now what we have here is okay get unique ID note is not this fire at stored API let me get this use memo let me create it here where I will set the status okay gets status is not defined so let me also get it get status from quiet store API we don't need post sorry let me remove this Pi navigate to the posts here but the problem is okay let me get the post it is main here or even better let me have a div I mean class here called profile or just add the class here where it is post status Main and this will be on the center but let's make this as profile status Main we can just copy the class but okay let's leave it that it add that fine so it's fine but the problem here is we are seeing only though I mean we are saying all the posts even when the post is not our so we need to see only those posts which that we have made so we have to filter through the data which is all statuses and we have to add one unique param called ID or let me check so we have the okay we don't have ID do we have ID here no we don't have ID in the posts we have the email so we can use this email to check the post for us only us so here we have the email in one user chapter 440 here we have another in one post we have one email in other posts we have another email so we need the email so we can get it from local storage or we can just filter the data so filter let's say item I mean the current item so return only those hosts where item dot email or user email triple equals to our current email from local storage so let me get it from here I guess from here like this so where is it we don't need the styling files we have to add it here now save and now let's see we will see the only one post here called hello from Nishant Kumar fine if you go to the home page we will say both posts but if we go to the profile page you will see only the post that we have now let me log out and login with other account okay what happens here is it is getting uh this popup is getting overwritten by this card so let me come over to this profile popup so it's profile popup and it is having okay let me have this popup card popup card here okay one second where did we add The Styling for the position absolute one second let me check in the top bar yes come to the top bar component where is it here so we have this absolute and the position as well so make Z index as double nine now it will be like this fine if you click this you will see this loan level let's log out log in with the other account foreign Gmail Dot dot com the password let's add in you will have the card as before now let's go to the profile page and it's loading see the thing is we only have Nishant here and the name is Nishan as by but in that component we had Nishant Kumar and something else I mean let's check the posts we had the hello but here we have bye now let's add okay let's leave it it will work fine now login with my previous account that we used so this the password sign in and if you go to the profile page we have this Nishant Kumar let me add one more status here called the profile page is done now click post and it will be here now let's try the profile page and we will have this here this post after this fine let's also create the link from here I mean from the home page so when we click the name from here we should be on that profile on remain on the personal profile so where does the home where does this come one end okay we have this common in the common we have profile card no not profile card posts update card I think yes or this yes we have this so when we click the username okay in the name let me add stylings here so where's the name let's say text decoration underline now the name will be underlined so add the cursor as pointer if and we will have the pointer cut sir let's change the color of this to Blue ish color or purple purple is not looking great so try this okay I think that's fine we can make it larger because it's very big small very small yes now it's fine now the thing is when we click this button not the water I mean the name we should be on the profile page so let me create a function or a common function so in the page I mean sorry in this file called helpers let's say uh open profile but wait okay the problem will be we will we won't be able to use the route there because I don't know why so better to do it here so let me import the you'll navigate hook and create let Navi gate equals to use navigate now on this click of the name we will have on click and then we can just say navigate to the profile page so we can select we can say slash profile so let's check the profile page let me close this this profile card so here I mean profile card okay what is the page it's not profile card it's profile component yes so here we are having current user passing I mean get passed through and if we are having this current user we can also get the current user here so okay wait a second okay we are having the route so just try this first and see what happens now click Nishan Kumar and we will see nothing so if you open the console let's see what we are having we are having this object okay but we don't see anything if you refresh and then we can see it so okay wait let me think for a second so that problem has been solved I mean we have two post hosts here post one and post two one from Nishan Kumar and one from Nishant too if you click Nishant Kumar we will be on this page and the posts of Nishant Kumar will show up if you click Nishant to the posts of Nishant 2 will show up with the data here if you click profile page here the current profile that we're on will show up so let me tell you how I did that first of all we have this name and it is rendering the username like this so when we are clicking this name like Nishant Kumar we are sending us to the profile page with the current ID and the current email so let's now come to the profile page which is profile card here so here we are getting the data from music location Hook from reactor to Dom in location so it contains our ID and email that we were sending previously then now we have new two new functions from firestore API so let me show you so this function are called get single status okay wait a second this name get single status and get single user and in this two functions we are using query from Firebase firestore and let me show you we are importing query and where like this now let me come back to this get single status and get single user so these two are receiving the ID I mean in the single status we're reading the ID and in the single user we're getting the email that favorite saving from location Hook from react router then we are passing the ID in this query I mean basically by checking if the user ID for the post is equal to the ID of the current post like this meanwhile also when we sign up we will have the ID stored here so let me show you this ID user ID which is a string so when we are making a post this ID will be stored inside the post so we are on Nishan 2. we have this ID call it 579 now come here to post and check this post here the ID is five I mean user ID is five seven a nine whatever and the post is here okay I mean whenever we make a post by a user we will store the ID of the user in the post that's what this is I mean by comparing the user ID with the ID so if it matches only then we will get the single status so this single status in this function we are passing thing set all status this state and the same way we have get single user to get the single user from this so we have the email filter here as query so in this we will we are having the email so let me show you both users have an email so when we click the list here I mean this option here the ID of the post and the email of the user is getting passed here in this component and furthermore we're passing the ID and email to the function so that we can filter it out and so only those posts that we clicked upon I mean the data and the username for example if you click Nishant Kumar here we will see Nishant Kumar and all of these things and the post details also if you click Nishan too we will see this but we don't see headlines and all because in this second user we are not having these items fine so that was how I did that file so also here we are having the few checks so the data that we are getting from the current user we are checking so if the data that we're clicking in for example I what I mean is this current data we have here current profile is empty when we click this button so let me show you why because in that case we are not passing any IDs so if you now open the console and click this profile this will be an empty object but you go from go from here to this page we will have this data so that's why we're checking here so if this look if this current profile dot length we are converting it to an array if it is 0 it means the object is empty in that case we will show this current user email or name or heading and all from here or else we will show the current profile when we are getting from here so that's how we did it I have added one key here also called user ID which is having the unique ID from here so whenever you register you will have the user ID from here that we will end later now let's design the profile page in LinkedIn I mean let's improve the design because it's very much simple when it's something like this so let me click the button here of user profile so you will see this thing so it looks much better much better but here it's very simple so let me go to the profile popup and remove all of these items so we don't need okay let's comment out all of these items in the UL block then let me create a common button so we can say we can create a folder first okay here in the common say button and here let's make index Dot scss and index.jsx this file will be of a function component make it a button here and remove this div and add a button here let's add the title and the title will come from drop so we can desecrate like this now we need to link the CSS file here I am in scss so import index Dot scss now save this come to profile popup Dot jsx and let me import this button so import ant from this component and add it in the popup card then let's pass the title as props title will be it is view profile yes save this click the button here and sorry pop up here I'm in the user icon and we will have this web profile icon I mean button then let's style the button so give it a class name of common BTN now copy the class come over here and here we can just say display of flex okay sorry not here instead we can do it in the popup card in the parent element so we don't need this and we don't need this either just leave the popup options here make display of flex justify content Center align item Center now the button will be in Center perfect like this but we have to like make it big so make uh but can we say width let's try it 400 pixels okay 300 or 350 or 300 or 200 okay common button okay let's just give it a padding 20 pixels okay it's big so padding should be here I guess yes fine the popup is much bigger and a little bit bigger now and this also also we have some height here so let's add some height say 30px yes the cursor will be of pointed and let's change the background color to white okay I mean it's not completely White or is it just make it white smoke to blend in the color of the popup yes let me remove the Border or may change it so border 1px solid let's say this color the London color that we had so we can just copy it from I think login page okay let me go to where is it says login component let me have all these three items okay okay what did we paste this items in this index.jsx okay let's not write try to try to use this here let's see what happens okay it is not and it's not defined hmm so this this main file okay let's okay just let me use the color here I don't want to miss any time you can just figure it out on your own I guess this button is now having a border fine now the color should be also the same color that we have here but the Border should be led set to pixels yes the color is little bit light I guess so just make it light here okay then say color the same color fine border radius uh 30 pixels yes working let's now trigger the I mean check the fonts so just click this click this and hover this so we have this a system UI it was one instance okay on the system UI so font family system UI the next thing is font weight 600 size for 10 PX and the color is this so let's repair the color I forgot that we I forgot that we can I forgot we can do that now let's check yes it's perfect we have your profile button like this let me close the what font okay what happened think the screen size was small like this okay no problem fine now it's fine okay now like this we have this but also a few items is on here like the title I mean this so let me edit this part here fine so first of all let me go to the uh button I mean on the button close this profile popup then come here let me pass this on click event here so we can just copy or cut the on click event from the list and just pass it here now in this button we can also remove and on click prop and on the button we can Target this I mean on click will we have one click now if you click the button it will be on the profile we are already in the profile page so click the button we will run the profile page and it's working like this knowledge let me also get these items like title and all but first we need to update it okay what I mean is let's see this we are having name and the headline so let me edit the headline here so name will be Nishant Kumar and headline will be this click save and let's show these items here in the popup so when you locate the items first so let's get it okay so open this API and firestore api.jsx here we have a function get current user I think yes let me call it here so yes so import get current user all we need to do is call this function so let's say here okay we're already already calling it here sorry I didn't saw that now we also have the state here so we can just Target current user dot let's say let me open Firebase we have the name and the user I mean name and the headline so let's just say name here for now check what we get so if you click we will get the name here but also we need to arrange them so let's say what let's say A P tag here a paragraph tag then let me just move this here and Save now in the popup card let me close this we don't need it also don't need this as well in the popup card class let's come over here and let's make Flex direction as column and we will have this okay I closed it why did I close it then we have the headline so also add one more P tag after this and just say current user dot headline headline save this and now we will have this but it's breaking I mean the width we need to increase of the popup card so better to make the height as Auto now let's see we are getting it here but there's the difference between the designs if you see here this should be current user or just make a class name of name and here make the class name of heading or headline now in the popup card let's design them both so the name is in the center okay so let me just click it and check the design for the name I mean the font for the name so here we can just write font size text in PX then color as this color okay can we copy this properly yes this color then we have font weight 600 and I think that's all for this now close this let's check for the other one for the heading or headline let me copy the headline class and add it here then let's check for headline so font size is 14 BX so make it 14 weight is 400 then color is same so copy color and add here and I guess that's all yes save this let's try and it look much better let's try the font style okay it's enter okay we can go with interfont it looks perfect yes I mean it looks great in the name let's also add texture line as left to make it on the left it's not going on the left so I guess we have to make or remove this no not this align items yes now it's perfect then what can we do we can move the headline at the top so we can say margin top minus 20 PX or let's say 15 yes it looks much better so for now we don't have the image of the user but we will add it later also one more thing I noticed is if you hover this button popup button it is changing the style a little bit so let me come to button here I mean in The Styling file just copy this and say okay one time only let's say hover here we can just copy the background color and the color and the Border I mean three things for styling so what can we change let's check okay the background color and let's make this as a little bit on the drag side a little bit dark that will be fine and this should be dark as well and then copy the class I mean color and just add it here also save and if you hover it it turns this but the white is too much Gray now let's try Pulsar too much just leave it at this and okay let's leave it at white smoke and just change the color of the it's not it doesn't work so I guess it's fine but we can also make it a little bit little bit little bit yes it's now perfect fine okay if you click reprofile from here from profile nothing happens because we are already the profile page but same way yes same way we if we click here nothing will happen also in the popup the name is at the top so let's make this here as well Magento just make not 15 make it minus 10 or 5 or 7 something yes so now we have this like this here okay now what to do is fix the profile from here like the name okay these are fixed I mean we have all the items here okay but the name here should be on the top we have Gap here so this shouldn't be here so let me also leave it okay fine okay let's not leave it just add the light tag here we will have logout option here we can also add button the same way we add it here but this time this will be of log out text so as you can see log out save then just copy the on click event on logout and add it here name of the list here from here save now the buttons are I mean two buttons are sticking to each other vertically so we have to make sure for that also of that also so let's say margin 10 pixels and 0. yes or not 10 that's a seven yes file okay now what to do is what to do yes this headline so let me come over to the profile popup okay not the popup say profile card this component here let me close popups and this so here we have username let me come to this styling file so here let's make margin top minus 10 pixels yes now it's in the top also we can okay I think it's fine now see the button of edit is an icon here so let me also get the icon from react icons package so let me search on Google react icons okay so let me copy I mean get the icon from here let me search our first import icon like far beer at the top so let's search for Icon called edit or pencil in sale I think pencil yes you can use any icon here if you want so let me choose this it will be from h i slash hi yes and the name of the uh name of the icon is hi outline pencil so we can just add it here to close this here let me copy on click event or just cut it and add it here remove the button of edit now save the file and we should have this here but we are not having this here so let me give it a refresh I think it is still compiling let me view terminal yes now we have this pencil icon here but also we need to change some designs here as well for example add a class name here for edit icon and copy the class come to this file so the parent is edit button so where is it yes we can remove this and okay just add a DOT for the class so we will have pointer cuts also when we hover it we need to see some design so that we see on LinkedIn like let me show you this we should see this so we can just say background color white smoke also also also with a TPX height at TPX okay the height of this increases okay I guess what to do let's okay I think what is it here the background color is white smoke when we go over it it's not working I guess let's try some bold color like red and then try if it's working yes okay the thing is we need some padding here let's say five pixels now we have this if we have one we will see this then padding should be here as well yes working or let's make it three yes that also works but the color should be not white let's say I mean not red say white and let's change the Y2 some dark color like this now you hover we will see this but it's circulate so it's a border radius 50 percent here now we have a circular icon so make this as 5 itself okay what if we add margin and see what happens here also add margin here okay that doesn't work so what if you make 15 yes it's bigger but 15 is too much try eight something let's do trial and error like this yes it's now fine I guess it is okay make it 10. and now it will be fine yes still no not not fine not fine not fine 14 okay what is happening it's not blend the full icon here okay what if you remove it from here no no no okay let's leave it at 10. I think it will not fit like that yes look fine so we have the idea edit icon here like this so if you click this we want the we will be on the edit page okay we don't need to see this for now okay then what to do is what to do okay okay fine so if you look eight icon here we will be on this page I mean oh one model will open up but here we don't have a model we have one one extra page which is I think this page called edit profile or profile edit fine then here we need to add the values as well so get input so when we are loading the I mean click clicking edit button the values are not getting populated so we need to add the value so just say edit input for example add a value here and say edit input dot name and now if you click edit the name will be here but it's not okay give two profile view profile click edit the name is not here okay I guess why let me console this we did inputs one second let's see this returning it down Okay click edit okay it's empty why it is empty which shouldn't be empty um so when we're typing anything okay wait a second okay the problem is not this we need to get the inputs I mean get all the data from here like in the user data so let me open Firebase again one more time and get all the data from user here so basically I think we already have it I mean let me check the profile popup you cannot this so what is happening when when we're clicking the profile icon here we are on this page called profile edit so where we were rendering the page I mean in I think in the profile card no not here okay posts card there was a file I don't know where is it profile edit okay not here either profile card no not here either so where is it I think it's in the profile component yes here so we're reading the current data of the user and we're passing this in the profile card so come over to profile card and we're hitting it here then we need to pass this data where so it's complicated I think just we need to call the we need to call the API of current user to get the data Maybe so we didn't return profile edit this page fine so let me just call the function oh wait a second I think we have this current user already so let's check let's check let's check let's check open the console yes yes so all we need to do is just over this current user to this because then the name will be here and we can change it like this then we don't need the console log for now let's remove it and just add the other values as well like headline so in the users we are having the headline so just add headline and similarly all the other values like company then we have this college at college I think here if we left it should be location and I think that's all now check here and location is okay the problem is we only have the name and the headline not the location and the other things so we can type update let's say Patna this company and the college click save and the data will be here instantly now click the again this button again of edit the data will be here and then we can change it to something like Chennai then click save and it will be changed here as well so quickly so that's how we did this now what is the next thing we need Okay so click edit we have let's add these items like labels so for this let's say label and it will be first name let me copy the first name and okay just add the name we don't need to decrease I mean break it into first and then last name then label should be here for this but it will break because it will not break fine that's better then we have headline so say headline here then we have location so let me copy and paste labels all over like this here this here and this here now here should be College it should be company they should be location we are fine what the problem is the margin of the input so common input let me check profile edit where is this class here we are having margin top I mean margin this so we can remove this so make 0 and also remove this from here okay then we don't need the slowest let me add margin top minus 10. or minus 5 something okay now it looks fine but 10 what will happen yes this also works now let's sell the label so let me close this file then label we need to style so just add the label in the profile edit inputs the profile edit here it is profile edit inputs let's say label point will be system UI as usual then all the input Fields will be of the same type close this and this and this okay what we need is now is the label is done okay the input so common input okay we needed it again so here we can just say Okay The Styling is same let me um okay what is okay the thing is the width I mean the height of the inputs are small so make it small shrink it now it looks fine okay also we can do this as well so label okay fine it's fine like this we have so let's also add a few more Fields here for example if you check that we have headline we are done we have position that is done we have industry education so let's also add industry so they should be before education I mean education is this college name so this should be before education I mean the college sorry so just copy this and edit make this as uh industry change all the items here they should be in industry pin what is the spelling Indus 3 yes here as well save this now we will have one more for industry but the data will be empty and we know data but we will add it in the post method later then we have location and City so let's add the location so they should be location then let that City then here we can add the T they should be city city and here also fine the location instead of okay admin okay I think that's fine then we are contact info then you can add website let's add it here also at the last which will be called as website so it's the model but we are having a page will continue to model that can be scrolled automatically so make this as website also fine we have link let's check this and it's perfect fine now go back and click edit again and the other things will be empty like this so that's in the edit page okay if you come here I mean let's also add few more items like about for example let me copy this and add one more and just say about but we don't have we won't have the input we will have text area so the text area like this and on change will be of it on change will be of this name let's say about me value should be the same for this I mean edit inputs about me then placeholder said will be about me we can remove this and check what we are getting here so we are getting this so let's style Okay add the class name also common input now we will have this we can change the head height and the width which is called rows and columns so say rows say rows will be 4 and columns will be also let's say try five okay the problem is we can increase it let's remove rows and try give it a refresh the problem is the height is I mean the height of this is default so we can remove common input and add common text area text area save it's not getting big so make this as rows I think yes now it's getting big now come to the main dot scss I mean this file and instead of common input just add called common text area and copy the style all the things here except the height then add it here and we will see this about me where you can write your about me text then you can also add experiences education I mean all of the items skills and all so if we click skills edit it let's see we are forgetting what getting what we're getting yes so we can add a skill so let's also add it here last item so we can just say kills then we don't need this so better to make an input here like this now save and let's change the name to else here also also in this edit input.website it will be fine okay we need to avoid this as well these two classes when we are hovering and one with the placeholder save and now it looks much better now what we need to do is add all the keys I mean all the input to inputs to the this page so where we are posting the I mean updating the post open firestore API page we have edit profile okay but it's in the payloader directly so let me check the call edit profile edit inputs yes I think we don't need to change anything just add the location as okay wait here make the location to Country then add it here and make this as country as well here also density industry fine now save it and let me let me just copy my data and paste it here so this is Chennai area country will be India the industry will be what is the industry for me let me edit and check it is industry is elearning okay edit website let me add about me let me add about me from here where is it this text this text okay we can add all of these fixed or just let me add a few I mean just small snippet of this let me add skills like react uh JavaScript angular Firebase and click save here and the data will be saved now if you click it again we will see all the data that we saved here populating now all we need to do is just show the data here in this page so come over to the profile card and here we can see the data I mean show the data in some data like pay tax or at all so let me go here so we have name that this then we have the location so let me add location okay it's already here which is called location so let me append the location with this so current user location let me wrap this in I mean add one uh what is it uh backticks the location comma the country so just copy this and paste it once more just make this as country so okay the comma will be here not there save we will have Chennai India as location now we have the link of the website so let me just copy this paste it here please leave it okay just make it as website here now the key for website is this let me try let me see where I have written that where where where where website website yes it's website so let me add this but we only need website so just remove the country from here now save this and the website will be here like this but we don't need to make a P tag here we need to make it a tag so that we can click the link and go to the website so the same thing we can do here so just make it an href and wrap I mean copy these things I mean you have copy and paste it here save and if you click it maybe we want that page on my website but we need to redirect on the other tab so what we have to do is make this let me show you what I mean let me go to the profile okay we don't see the attack what happened now okay now we see it fine so just make a Target as blank save but let's change the color of the website first or let me add the other Keys then we will style everything at once okay this is done fine bottles we have here let's say about so let's write the about here so let me copy the P snippet and write about me so this should be about I guess yes we will have this about me but the problem is these items on the right is getting shaped so we have to change the okay we will change it do not worry please or we can just move this outside all of the item which will be here okay not here after this div so we will have this perfect fine we have a beautiful looking profile card here then what did we add here in the profile edit yes skills so let's render it out and this will be kills and here also which is react JavaScript angular Firebase let me add one more I mean one h A P tag or just write skills here okay so let me okay we need a space here so just type uh and n b s p and one semicolon like this now let's change the styling or let me just wrap this here in the P tag gave it a class name of till label for now okay it breaks the lines just make this as or make okay make this as a span and also here yes now it's fine now come I mean come over to this styling file here for profile card and here we have college company on all so let's write the selling here so but first okay let's do this so what is it let me add The Styling for the website first make this as skills so website where is it this so we can write it here as well so we need to change the color so say color of the text will be blue which is not here I guess let's try this SAS and this to copy this color or any color from here and just add the color here but it does not change what if we make this as important important okay let's make it as red and see what happens okay it's not changing I guess because we have some styling from for attack in index that we didn't remove okay it's not here I guess I guess I guess I guess okay so classes website class name but we cannot see the okay I think we need to make background color let's try this not working Let me refresh because I guess color will work but it's not working working why it's not working okay a tag we have it should work one more refresh let's try so in on undefined it's true but okay I guess we need to use Focus thing or Focus so say website Focus then add this color okay not focus let's say a tag what is it let's say a tag it tag the name is for a tag what am I right what I am writing I don't know okay we need to make the just check this here so website not focus say link or not link I am forgetting the class or the selector here it tracks Electric csscs yes it's active sometimes I forget myself it's not working let's try let me go back or run this okay we have active here so what is that what is it what is it the active a link try a link here let's download again let's try with it no still not working over till nothing try that I think let's leave it it's fine okay now we have this link here okay just we can do this as well I forgot that we have this option so so so let me select this H1 sorry another one a tag and check the colors we don't have any color for this a tag or does this webkit link color okay yes I think let's try this and add this color here but not on Hover let me just copy this go back so we can say visited let me try it here it's not working let's say link not working let's try it here still not working I'll leave it I don't want to waste time for this on this so it's fine now what we have is so this is done now let me click this button called edit but this button is go back so let's change it here as well so we are having go back but here we are having the x button so let me do that as well so this is from the profile edit page let me remove the button or just let me have the this icon so we can go to this page called react icons again and just change the icon I mean add the icon for close so we can say close let's choose this icon from AI so let me copy this and add it here and we were using this icon AI so make this as a i now replace the button with this icon and just make one click go back save this now let's try we need to increase the size of this so just to make the size to be let's say uh 20 wait a second 20 okay 20 is fine let's try 25. yes much better so it works if you click this okay also let me let me give it a class name close icon and copy the class let me come over here not here I mean here's remove the button that we have here where is it and we don't have any button like it's just say cursor pointer on this class if you hover this the cursor will be changed to pointer okay it's not I guess because edit button we have okay let me I mean move it here yes okay not working not working area button profile card okay let me move it outside Jive then I mean this here now it's fine so just move it I mean just add it at the last not the first so we have all these items here we can close this and if you go to home page click this Prashant Kumar we will see all these items but if you click Nishant Kumar I mean okay we have the same user here and the posts are we getting here fine so that was how we did the okay I think we only okay wait it's not over it we only did the selling for the attack what about these like about and skills so just in the skills I'm in the span wait the skill level let me add a styling just make it bold so it's one ring sorry let's remove it just say uh skill level on weight as let's say 600. not working again okay not in okay okay I think that was the problem we are having this outside not in the inside of this slide info it's on the left so that was that is how that's why it wasn't working so just cut this and paste it outside now it's working yes perfect fine so if you remove this still it will work I guess now we had this skill level so let's add it here and say font wait 600. now this will be bolder let's change the font I mentioned the font here it's enter so it's I guess it's fine so we have this and it's working okay one second this is not working the country where is the country we don't see it location heading okay location current user dot country let me edit this country is here but not here so let me just try to console this okay I guess we made it as country not location That's why nothing is here yes now okay just rename the location to Country here where is it okay okay what's this I guess this should be done here as well wrap it in a back tick and just then add the country with location after the location now we can see that perfect fine so this is our profile page and we have the posts here we can edit them and save and then we can go back or just close this so that was our final profile page for the LinkedIn clone all right I don't think we need anything else here for now okay so I think that's fine we cannot integrate all of the items I mean you can integrate but it will only waste my time because they are very simple things okay so I guess that's all for now if you click the link here this will be on the new tab and if you go back we can still see this fine then now let's work on the like button system in LinkedIn or on LinkedIn but before that we need some fixes and this is it so if you go to any profile like Nishan Command 2 this city is undefined here if you go to profile it's also undefined to fix that we can just change this to City the location we have here this location make it City and here as well and if you now check the profile the city will be Patna India Kumar it will be greater Chennai and this fine now close this this as well fine so as you see here that we have one button here so let me create a component here first for the like system so we can say uh wait a second in common let's have add a folder called like button fine here let me add one index Dot jsx and one for the styling like this okay here we can make a function component and the button will be called as like button simple now let me import the CSS file or SSS file so index Dot scss now let me add a button I mean wait so we need one icon here so we will add it but before that let me add one P tag and say like so now let me get the button here in this component called posts card import like button from the component route and add it here like this fine so it's here now let me import the icon from react icon so import from react icons slash let's say let's try bi and if you type like like button or let's say beer like or bi like let's see what we have if you if you render it here so save I think it's optimizing the dependencies so meanwhile we can check other uh we can check other like buttons as well I mean other phone icons sorry so let's try for like so we can try outline for AI like this let me try this and make this as a i now just replace the button with this okay why it is not showing up here let's check open the view okay now it's showing up fine let me add the size of the icon to be much I mean to be bigger so let's say 25 what yes yes it's big we can try for 30 also yes also better this day we have a class and we'll have a class name of let's say like container fine let me just copy the button class I'm in deep class and add it here and we will make display as Flex then justify content okay we don't need this this property we don't need we need align item enter yes now it's in the center so we have like text and the icon little gap between them so 10 pixels will it work yes then we need some add some padding 20 pixels okay padding let's try 20 and 0. okay I think 0 and 20 will work yes if we try 10 fine also working we try if you make this as 5 here and I think that's also fine so we have like button here let me change the font here so just say P tag Point Family system UI fine let me check the fonts here so it's normal weight is 600 so say font weight 600 okay then color is this so the color this fine I guess now let's check okay we have this here now font size 14 bits I think that's all for this button we can leave it at that okay fine okay in the in this div we have to make cursor as pointer so if you hover the icon or button you will see this pointer cutter also the Gap is Big so let's make it 5 only yes and then this padding is seven okay I think that's fine I guess it's fine then what can we do here is close this okay okay so we have the like button here so now what we have to do is when we click the button we need to send some ID which is the I mean we need the post ID and the user ID fine so we can get it so let me create a function here so okay not here so this is const let's say let's say on let's say handle like yes here now on this button click I mean on this div click we should have this function okay now as I said that we need to pass the ID of the post that we are going to like and the ID of the user who is going to like it so we can do it like this so we need two things that I said okay one second yes we need the user ID user ID and the user ID will be this ID so we are having posts and the ID okay so where can we get the user ID from we need the current user so we can go to this file store dpa.jsx and do we have one function called get current user so let's get it here so we can just say import get current user and then we can call the function in use effective or use memo say this okay get current user so it takes a param called Set current user so we need one state as well so say current user comma set current user equals to use State say let's send object because the data is in object format so just pass it like this and all we need to do is console.log this current user so save okay we don't we have to remove this for now we will add it later now open the console here and we have an object and here we have the ID and this ID is called the user ID so we can just say current user.id so now this let me remove this and pass user ID as this and post ID equals to posts let me console the posts also to show you the posts let me just remove this it will control Z this is called the post ID so let me show you in Firebase yes so if you check here that we have post I mean posts and every post has an ID come over here and if you refresh the page okay we are saying posts here okay a lot of posts we are seeing so better to have the ID from them I mean get the ID so we can just say posts dot ID now refresh it once more and we will have a lot of IDs here see so we are having this this this two times we have every ID for example um yes we have all the IDS here for all the posts four IDs four posts then second param will have to pass I'm an argument we have to pass is the post ID as this so the post ID will be posts dot ID let me remove control law now let's get it here so we can say user ID comma post ID fine we have to structured it here now on this function handle click we will call a method that will be inside this api.jsx so let's close styling file we don't need it right now so here let me add one function called export const and or say like post and in here we will create one uh what is it we will create one document for example as I say as you see I am getting the user ID and post select pass let's pass it here I mean I mean we will call the function here let me call it this function so import uh what is the name what is the name like post here so simply we can just call this and in here we can pass these two things like this so it will get up here fine so this step is done now let me just show you in the console what is it we are getting for the user ID and the post ID open the console let me open the console let me close this so let's click this like so the post ID for post 4 is all right something and I am having this user ID so let me now check users we have three users and I have logged in with this user to zero something one second which user we have wait no this is the post that is sorry this is the post ID and the user ID is r80 I mean this user second user so let me show you I mean confirm it go to profile and Nishan Command 2 is there like this it will take and all fine so this is the idea of this current percent Nishant Kumar 2 I mean if you click like you will see it again see it again then the second one is called the post ID so for post 4 let me show you where it is post for the ID is 2 0 sorry 2 2 0 a u whatever this is ID so we're eating it so now we have to create a document that contains these two IDs together so that we can have they made firestore so first of all we need to create one reference which is called a like reference so I mean like ref likes ref but the likes collection for the lit like ref equals to collection let's say fire store comma likes table now now now now now we have to use this so we can just remove these items then we can do this here so basically we will create a let doc to like equals to we can say Doc function that we need to import I guess yes we are already importing it yes we are using it in edit profile function so this takes three things and the first one is called Firebase certifiers.net Firebase database I mean then the second thing it takes is the collection I'm in the reference sorry I don't know I am missing words to say it takes this like like surf that contains firestore and the likes one second okay no sorry we did it wrong it takes the first as like sir because we already have fire stored inside it and the table name which is likes then we will have to merge these two uh let's say we merge these two user ID and post ID to create a collection ID a dynamic ID so add a dollar and say post ID and I mean user ID and post ID like this fine also let me add one underscore here fine I think that will work I think that will not work because this is not dynamic dynamic field are only user ID and post ID so let me revert them back and we can say user ID outside the curly bracket and underscore and then say uh dollar again curly bracket post ID now we have we will have any kind like this that will show up in the like stable in fired store now that's done now we need to set the dock so let me import a function called set dock so this is different from add and because it sets the document like this using a unique ID that we can Define our own so we can say we can say we can say what is the name get doc sorry not get doc said doc let me just import it and in here we will pass this document and the data that we need to store so we will store the user ID and post ID as object like this fine now let's try to run this so all is set okay now let me open the console and clear it we can also okay I mean let's just trap not trap just add or wrap them in try catch block so that we may have some knowledge of the errors if we have them catch so say error what's happening try and wait I forgot the syntax again it's not here it's in this auth API so let's check okay catch error okay this is how it works sorry I forgot this so catch error console.log err or now let's click the like button here in the first post called post 4. so we have clicked it now let me check the fire store let me give it a refresh I hope we will have a like table here yes see we have the likes collection in this new in this document so see we are merging the user ID with post ID this user ID is from R8 and this post ad is this so we have this so our post has been liked fine but we have liked the post now let's get the posts I mean sorry let's get the let's get the likes here so to get the likes we need to have I use effect hook here as well so I'm in here okay what I am saying here it's 1 41 am at the night and I'm doing all of this so let me have one use memo so when the page loads we will have all the likes for the page okay we have imported it also then in this use memo hook we have to call a function from this API file so also create its export const get likes by by user then also let me add try catch block here to not have some errors fine and in this uh in this try block we will have one variable called let's say let likes like this okay not this but first let me create one query to filter the likes based on the post ID for that we need to First copy the function and import it here and use it in this use memo then we can pass the IDS here which is user ID and post ID so I don't think we need the user ID but let's just pass it so let me get it here as well now let me create a query here so let's say let like query equals to we can use Query and in here we can add a collection so the collection is already this collection if you go over to this we have this collection called like serif so we have to use this collection name like Express then what can we do is we will have to make a yes where where and in the where we will have we will check for post ID double equals to wait what happened double equals to this post ID so basically we will check if the post ID is equal to this post ID only then we will return it now I mean the post ID of the post is equal to the post ID of the database data from we are getting from the database then we have to use the on snapshot function on Snapshot for realtime data and in here we will pass this query called like query like query comma it sends a response social response and we can simply do this so we can simply create a variable called it like or likes and in here we can say snapshot snapshot snapshot Dot Docs dot map and then it takes a param called dock I mean yes we can say a param and then it returns log.data like this fine it's done so now this lags contain all our data for the like so if you try to console this but in a second this wheel where not snapshot fine now let's check in the console what we are getting if we refresh the page okay we don't need the user ID I guess so remove it fine so we're getting nothing are we calling this yes we are calling this but the problem is we have to run the use memo hook whenever this user ID and post ID changes then we will get the likes but we're not getting it so where are they missing so um on Snapshot like query we're passing fine the problem is here see we are having the post ID from this param I mean we are passing it from here but we're not passing the post ID only we are passing the user ID so in this case the reactor thinks or JavaScript things that this post ID is the user ID because it's a first param so if you remove this and save the error will go away so let me now check see we are writing this array and it contains our post ID and the user ID like this fine now what we have to do is we have to store the number of likes count in a variable so let's do that so to do that we will create we will create a lead variable called likes count equals to likes dot length length yes fine now we'll filter through the likes so see which likes are from which post I mean not from the which post from which user that is why we also need the user ID but I removed it so let's get it back user ID also let me pass it from here first param save this and this now here we will just do this and this means const light or say is like which post are liked by which user because we have multiple users and multiple posts fine so we can just click the likes dot sum and in the sum we will have a param called like and then we will check if the like dot user ID I mean from this uh dislikes we had the user ID if this like is equals to the user ID by getting from the Para user ID fine we have this is liked and likes count which we need now in this let me create two states so one will be like count and set likes count so it will be a number say zero or we can make it null but let's make it zero fine now second state when it is if the post is liked or not so still liked and set light so it's date and here we will have false because initially we will make it false because the posts will be unlike now let's pass these two here as params let's get it in here here so like this now we'll simply set in the likes count I mean set likes count will be equal to likes count then is like will be equal to so it is like will be equal to is light fine so our work here is done almost in this git likes by user function now if you console let's count here CLG this let's see what we get in the console so come to the bottom fine we will get zero okay we are writing this set likes count is not a function set likes count it's not a function then what is it so now let me try light just refresh the page once and see what happens maybe some error and it will go away so okay it's false I don't know why set like sound is not a function so set likes count Lex count let me make it like this and see what happens what happens refresh set like sound does not function why is this happening huh okay just leave it for now okay firestore API 147 147 okay now 114 this like this line so let's console it and it is like it's not a function now okay now why are we getting this huh what can we do here okay fine fine we are passing it at the wrong place we should pass it here now let's see this will work fine maybe I am dumb to make this kind of mistakes so we are getting false because posts are unliked okay so now this is done okay now we have likes comment and liked so if your internet likes count here so we will see we have one like on this post and this post so in this we will have two posts here I'm into we have two items and the post ID is same first user ID is same yes the post side is different it paints two of the posts are liked if you click third one this will turn to one and it will be updated here but the thing is if you click it again this will not be unlocked so that's a problem but before that let me show you let me go to other profile so we are on this profile called design command 2. let me log out and remember that we have liked post 2 1 and post four not post three from Nishan Command 2 now let me come to this page called I will fix that also I'm in this issue that we have in login page and the registered page at the last of the video I'm in this section now sign in see the likes is one but we are not saying okay if you click it again the like will be two here the like will be two and all of the data is stored here as post ID and user ID collection name document name The Collection field is here okay now what we have to do is we have to pass this light in this like post to handle the dislike function as well so let me get here so we will run the set dock only if the post is not liked else we will run one more property called delete dock that will delete the like from The Collection using this dock I mean this will delete the like only that we have had fine so to do that we can simply add delete dock with second delete doc not delete doc yes and just pass the like I mean the doc to like this now save and now let's check if you click it again it will be removed from here but it's not it's not is it getting removed one second I think we are doing it correct delete dock is it okay we have to import it also sorry we are not importing it delete talk yes now check click the button and still not working okay but why okay let's do this so if the likes exist like I mean if the light is true we will show light else we will show like now let's see what we have here so click this okay it's not working okay the problem I mean the issue is here so we are having the ID so I think I made a typing mistake this should be user ID now it will work so click it again and as you click it again we will see that the like has been removed from this post click it again you will have like so the current likes number is 2. and on this post we have zero so let me close this because we don't need it right now it's done fine now this is done now let me repeat this thing also here so let me wrap this in like so if like this too we will show the blue sign here so let me go to the react icons once more and copy one more icon for like but this time it will be filled so like okay which one should we use a I feel like let's try this will it work let's try okay and in here where so if the like this 2 we will show this icon with the size of 30 also add okay add them here fine click like here and this will turn to dark I mean this color click it again and the number will change and I mean number will decrease if you unlike and it will increase if you like also the color will change on the icon fine so do we have a color ah so let's make it as red click it and it becomes set but trade is too bright so let's make it as a heart like this and they should be just make ourselves just search hurt here so we need AI so just say AI will hurt sorry outline hurt and then we will have field heart so here we will have will hurt and the color will be red but here outlined but now check here click it becomes red and if you click it again it becomes outlined we can remove this P tag here and we will see only the like like this so is it proper let me check so click if you click if I click a post we don't see the number here which is the number here at the top so let me remove the likes count from here and just style it fine so click it again and if you refresh after clicking this will persist see it comes let me click post to like and if you refresh it will persist as well yes see it's persisting now let me come to the home page but in on the home page let me log out and let me log out and log in with the other account wait a second let me view profile let me log in with the other account so please say Nishan as 550 at the rate I mean one two three at the rate gmail.com one two three four five six seven sign in so here the like is different I mean the post 4 is here post three post one but in that other account we only like post four and I think post two so we can go back and check here we have post fourth one and two let's check here just to be sure one two three four five six seven here we have only post four and two so it's working perfectly I mean perfect now let's position this slides count somewhere so let me close this and this all we need is to make here so after this post so just say let's say we are having it just make it at the top then here okay likes count only like this so we need to arrange that so make it a P tag and wrap all of this energy now in this difficult like container we will need some styling for Flex so we already have flex and just say Flex Direction column then we need justify content Center not this because the whole structure of the page changes if you do that so now let's style the P tag here okay it's already styled but it's different p so okay let's add margin left 20px or 10 Also let's try 10. so we can say just like it says here in the LinkedIn two people like this it says U and 219 other likes it like this post so we can say just this this Mini people like this post save this and we will see this so I guess this should be 5 only it will work fine one people like this post okay let's remove many and if you click if you like the like count will increase so let me check the styling here so the font size is same font is size 12 pixels family same size is this then weight is 400 then the color is this let me copy the color and just replace this rgba whatever we have here now let's check we are getting it as blue well it's not blue it's gray yes I can see that okay if you hovered it then it's blue so just remove this and let me invert this back but let's change it to a grayer version so just slide the Color Picker color now it's fine I guess so just make the font size as 13. yes fine so we have implemented the like system okay so the thing is we have the like like we have the like uh text here so in this div let's say one more P tag and it will say like so it's here fine okay in this div let's give it a class name of likes inner copy this class commode to index and in here this selects in Earth display of flex align item Center and we will have this like again let's add a p and add all of the stylings but make this as 16 remove this and make this as 600. now we will have a like text here as well like this but the thing is one more thing we have to do the light if you have lagged the page I mean the post this text will be turned to Blue so we can also handle that so their class name here so if like is here it means so black sorry blue text else for black fine so in the blue one here let's do in the blue let's add this color that we had on the way we're getting this color so say color this but if we have black like we will show let's say which color this color save and Save let me click remove this so if it is liked we will show Blue but okay this should be here also this color should be on this like button also so just make it like this click it again the both will turn to zero I mean it will decrease so that's how we used like button here and we can also change the uh this here this should be 15 or 14 also and I guess uh margin top minus 10 pixels okay not here just in this class or 20 will work so also if you see we will have we have a heading tag here am I head not heading tag one HR between these two posts or two people like the post and the like button so we can just throw one HR here like this so it or we cannot see this HR I guess because we are having this so let's wrap it in a tape now we can see it fine so I don't know how to change the color of this HR but two people like this post in this p I mean let me see here we can do margin bottom sorry margin bottom minus 20. okay too much fine distance okay still too much zero too much let's say or five music video again okay which I am which on which I'm doing I guess remove this padding and see what happens okay if we are using this as but if you have the line items here also and this will make it in the center so where okay margin bottom should be here not here let's say minus 20 or 10. yes it's working or not I don't know what okay so let's make it as 5 only then see what happens then make this as 0. nothing will work so I guess that's fine fine if that's fine it's fine but something is still not right here margin top 20 this text should be not here I mean this should be on a little bit on the bottom from the top so margin top 10 pixels or c0 okay I think that will break our design so let's leave it fine so I guess that's it for this section also okay if we remove this Leaf what happens I think that's happening because of this div so give this a class name of HR line so copy this class come to this page I mean this section called like container and say margin top minus 5px or 15 yes I think okay sorry or 17 yes now it's fine so how to change the color of this HR let's see this change the color of HR tag let's say let's say let's say let's say let's see let's see okay let's try WF schools HR new five okay let's add a color here I mean let's try this green color first then we will have an idea okay it's it works so I guess we don't need these two we need border top this and then let's see um what if you make a border only gets covering this okay guys if we target HR inside and then move the border right here okay that will change the color fine got it so we need to make it gray so just move it here and it's gray a little bit more on the white side but it's too much so move it now here and it's yes it looks great so now we have the like button if you click like the post will be liked if you click it again it will be unlocked fine so that's all for this section I mean the like button now let's work on the comments input I mean command system so we need to replace the name of like singer to likes comment inner like this so just copy this class and change it here as well so I mean like signal will be like comment inner fine now it is breaking so why it's breaking okay save it here as well yes now it's fine okay the same way we have this like comment in here make one more for the comment box so let me get to this Library called react icons again and add for comment add one for comment which is this AI outline so let me add only one let me add only one icon here which is this and Save we need to import this save and you will have this so make this as comment not like see now we have to wrap these both divs in one more div a parent div and here this day will have a class name of let's say like comment just to this or likes comment anywhere anything you want now come over here say like comment and display of flex okay not let's not make it Flex make it grid and just say uh grid template columns uh let's say let's say let's say Auto auto auto auto fine okay I think we did it wrong I think we named it wrong so this should be like I mean it should be comment and they should be like yes now it's fine okay now what will happen is when you click the comment box we will see your input so let me add an input here input okay placeholder add a comment just like we have on LinkedIn let me give it a class okay one more thing if we click this thing called two people like this post this post will be unliked because we are having the Handler here so move it inside like comment inner so now only when we click the button like the post will be liked now in this input say add a class name called comment input now let me come over here and in this let's say comment input height 35 pixels background color let's say white smoke padding left for the text inside let's say 5px or even 7 border radius 30 PX 30px okay now what we have okay let's add border 1px solid two one two one two one save where I will have this option to have a comment box yes but what if we focus on that on that so Focus let's say border will be okay let's make it light a little bit light on the gray side so let's check this one yes it's gray now here we will make it slightly more darker to get it highlighted now if you click this we will see highlight option here let me Mark let me add or I think this should be not border this should be outline now let's check yes it's now perfect we can just move this to 10. to have this okay just like we have on LinkedIn find now we can type inside anything okay the thing is the text color we have to change as well so we can make color as this color I mean let's say let's try this color yes it's working let's also change the font here so tell me why let's add here or what if we just add it here okay so here also the color should be changed to this yes let me add font uh font size 16px yes it's better so if you make this 16px let's add the height to 40. yes now we can write a comment here okay now also we need a button here so we can add a button so we can just use one button that we already have which is called this button save button or we can create our own button here so just say button add comment now say when we will have a button here let's also sell the button here so say add comment BTN let me style this after this say let's say width should be of 200 pixels or maybe 100 let's try okay 150 what about this yes fine right 35px background color this color called Blue let's remove the outline now 10 will be none fine so yes outline is none also cuts are as pointer and one more thing is border as done as also the Border and none okay we have a button uh cool button also let me add water radius as 30 to make them rounded fine then let me add margin top a little bit let's say 20px will it work yes or 15 then margin bottom also 15px yes fine it's working I mean it is here add comment button okay now this button is here okay what can we do we can wrap them in a fragment I will tell you why because these two things should be conditional I mean when we click the command only then this two should show up so let's create a state here it's a const show comment box and set so comment box used it let's make it false because initially we will not show them so let me add The Styling sorry this conditional here condition here if it is true only then show them else show an empty fragment so it's false that's why we cannot see it but if we change it to true we can see it so the show that it this function called set show comment box should be on this thing called uh like comments in its second div so say on click we can make this true true because if you see in the LinkedIn Let me refresh the page and try again so click it then we can see the comment box so here also we have comment if you click this we can see the comment box but if you click it again this doesn't hide so we can implement the same thing here okay find let's change the color of the comment there or when it is active so just say show command box then blue else black so refresh it once more so this is now black okay here also we can make ah okay they should be one second make it in the color crop so if this is true blue else show default or this color called two one two one two one add one hashtag S6 code now save click this it will be highlighted and fine that's done now let me get the comment from here so we can just say const comment and set comment so equals to use State let's add a string here now we need a function so say get comment I mean get comment from the input this will receive an event and get comment will be here on this input so on click this get comment let me add the name here called comment okay now if you need to store the comment in this that comment the set command will be event dot Target dot value fine okay that's done now we have the command now let me come over to this file in the vs code which is the I mean which is API file s.jsx so here we have this function so let me create one more function called export const comment like this so let me have this try catch block here as well we have try then we have catch that catches the error what's the error and CLG error now this post command will take the post ID that we have for the Post okay so let me pass it here in this function so they should take a post IDs wait a second not just the post ID it will take the post ID the comment and the time stamp of the post comment these three things so let's pass the data from here so first just let me import this post comment function and add it in one more function called say add comment here then just call this and pass the post ID of the post then whatever the next thing the comment which is this comment and the time stamp so the timestamp we can get from moment.js so let me go to helpers use movement and we can just cop we can just call this current I mean get current timestamp here so just to get current timestamp and add the format so let's make it Triple L like this just like we had on post I mean when we post a status or a post so this function will be called when we click the button here called on click like this now save this and we have this post comment here now come over here and the rest of the things will be done here and the first thing to do here is to import I mean to add the add doc function to add the document to the filed store but before that we need to create a collection for the comments so just like we have here so let's say let comment or comment shref equals to collection firestore comma uh let's say comments fine now we need this to pass I mean to pass it here in this addoff like comments ref then the next thing we need is the data so just add it using in curly brackets like this all these three things here fine just like we have in the get like by user sorry post like by I mean like post so fine it's done and I think that's all also let me close this when we are adding a comment this should be a then block after that and then we can just clear out the comment now this comment should be also as a value here so just add a value as comment now let's try this and see what happens I think let me open fired store from Firebase okay let's try I think it will work it will work so post ID will be having and comment and timestamp so let me add a comment here called this okay we cannot type here something is wrong add comment I mean get comment function is getting called and we're setting it here let me console this wait a second on change okay this should be not on click sorry on change so mistakes on change now let's try to write a comment called this is post one okay the thing is it's the color is very light here so drag the marker here and copy the color and add it here save let's also add it here I think that's fine now let's click add a comment so if you check here let's see what happens I think the command is not sent something is wrong so let me open the console and check what is wrong click add a comment okay get current timestamp is not defined where I think this is not defined because we haven't imported it yet so import get current timestamp just let me copy the import from somewhere for example from here this post update page so let me close and add this here now save and let's give it a try add a comment again the problem is cannot take properties up then line number 24 here okay I guess we can remove it from here and I mean remember then block and just set the set command as empty now let's try yes I think the comment has been sent because we don't see it here let's check the console in file store oh let me move the mic here yes now we have a comments collection and in this we have two comments okay this is first one and this is post one again let me delete this collection and try once more okay so let me add a command called this is comment one click add comment let's check here in the store firestore so we don't need this limit so close it because we have added the comment button here just like LinkedIn yes now we have this comment and we have post ID and the timestamp now all we have to do is show this comments here so we can add a function also one more called export const get comments here and also at try block here and a catch block so console.log better save this and just copy this I mean import the function here from the API file now we need the I mean we can have it here also and this function I mean get comments this will take a few things for example it will take the What will what it will take it will take the post ID so let's pass it here like this and so in this function let's also get it in the try block let me create a query to get the comments only for a single user or a single post so let's say let uh comment or single post query equals to let's add a query I mean this and add the time I mean at the mm reference for comments like this then we will have a wear and in where we will check if the post ID for the comment where comma double equals comma the post ID so if the post ID of The Collection or the document is equal to the post ID we are passing that will show the post ID for it which is a post ID for only the sync I am in the same post that we commented on fine okay now we have this reference now let me have one snapshot here so so snapshot or on Snapshot then we can just pass this query which is single post query and it will add it will show us a response through the response as callback and then we can just add comments or cons let's say comments equals to okay I think yes let's do it it's fine so comments response dot Docs and we have to map with rocks just like we do in every other snapshot like see like this we see here like this so I mean this for the current user this is this is for the single user okay so map so let's say it sends us a dock single dock and then we get the ID wait we have to return this so we can just say return and ID will be equal to doc dot ID comma then we will spread the data from the dock so dock I mean triple dots doc dot data like this and if you save this so we will have the comments in here in this comments for each post fine so we can try to console.log this here so we can do that also sorry this comments now we are calling it here get comments okay save this now let me open the our application okay so so we have the object which contains the comment and it says that this is the comment one okay now all we need to do is store this command in a state so let me create a state here called we have comment so let's say const comments and that comments so equals to use State and an array pass this set comments in this get comments come over here and let's get it then just set it here fine so our comments will be in the state called comments so all we need to do is map through the comments here so we can do it like this let me come over to the bottom okay let's do it here after the show comments box so we can just say or should we do it here or here let's try it here so comments dot length if it is more than zero only then we will show the comments so if it is more than 0 then we will map it so we can say comment or comments dot map then we will have a single comment from them and then we will return some things I mean some jsx so add a div here first and if there's no data we will show an empty fragment like this so in this div let's add 2p tags and here we can say comment dot comment also one more I mean other P tag will be for the timestamp so this should be let's say the name was time stamp I guess okay it's not here where is it we are sending it get current timestamp this post ID here yes timestamp sorry so where is it time step fine now let's close the console and give it a refresh now if you click comment okay we don't see anything yes here on this page in the post called post one we have this is comment one and the time step on others we don't see it because we don't have a comments so just make the comment text to comments so we will see the comments only when when we click the comment like this or even middle is that when we click the comment button this thing we can revert the state we just don't need to turn it to true we can revert it so if you click it again this will be hidden so where was the state here so show comment I mean set show comment box so just make these two comment box now click it again and this will hide it also hide it also fine so our comment is on this post one let's add the comment on post four so this will be this is post 4 add comment and this will be here instantly now let's Style the comments some in some manner so let's make this a class name of uh all comments okay let me copy this all comments so we don't okay we will need it one thing we have to do here also that is the name of the person who commented or the username so in here let's add this all comments let me make this here here okay so they should be display of flex and so between them we can add one dot I mean it's not a DOT so let me go over to this website called uh bonds okay what was the name uh color then fonts yes we need one dot thing I don't know what is it is called let me check the glyphs so I think no this is not the this is not it then we have not this no this no no no no no no no it's a small DOT type thing okay let's try this here let's add a p okay no not this this is not it it's just a degree okay where is it we have to search for it today okay yes let's try this yes this is it that we need so this is post 4 and we have the date but I think we are doing it wrong let me open LinkedIn again and check one comment that we have let me add one more comment here this is post 4 again click add comment and this will be here so yes I will style this so let me get the again the class name here as comment and here they should be as time stamp save so let me check the comment here one comment from any post for example click this we will add this box it's loading okay and here it is so we can just say the name also so let's let's store the name also of the person who commented so we have this user ID but we don't have the post I mean the user data or do we have it get likes by user get comments um okay so we're calling the like button here so let me copy I mean check it here we're calling it here and here I think we have the current user so we can just pass this as well in this component as props now head is done let me receive it from here now let me just console DOT log this current user okay something is wrong here I think okay we will fix it no problems so we need the person's name so the name is what is the name name is this I mean current user data or current user dot name let me pass this name here when we are adding a comment so post ID comment and then let's add the name in this API let's get the name I mean the name also this structure I will get it from the params now the name will be here as well if you comment so let me add the name in this uh input I mean in this P tag here so we can say name and here will be name now if you comment once more let's see what happens this is post 4 or Focus yet again click add a comment and now the name will be here as well okay so now we have to arrange them I mean style them so what is the problem with timestamp here no problem what is the problem with comment here do we have okay fine so let's style them in this all comments let me copy the class we have it here make the line items as Center okay now they are in the center but the thing is okay what is the thing is the thing is the name should be on the top so let me comment out all of these things the name should be here of the person find now I mean the name is here like this then we have the comment here by but we don't see the timestamp okay so let me just copy this P or cut it and add it after name let's see what happens this is post okay we have to add it at the bottom of this name so Lex Direction column then justify content enter we don't need align items here for now fine this is post four okay let me delete all the comments and try again from the beginning so let's add this is comment one for the comment four or add the comment and the name is here with the comment okay so in all comments let's make the class of name so the name will be our color of black so 2 1 2 1 2 1. save we don't need the text and line so remove it so text decoration has none then font let's change to system UI and the name okay I think it's already here fine so the name is here and then we have the comment so also add this thing called what is it comment so here should be let's say the margin on the left 4px or 10 yesterday is fine for us also margin top minus 10 pixels or seven five or even 0 will work will it work yes now it looks fine so we can make this a little bit more fine I mean more grid if we wrap or make the color of this background as Gray so now we will see this gray box here so water radius should be let's say 10 pixels to make them rounded like this the current is too much so decrease the yes this now looks fine just like we have it here but it's much lighter I mean it's more lighter fine I think this is it and we have this okay yes we have the timestamp at the last I mean on the right so let's add it there so let me cut this and remove these things or just leave it for now let's write a P tag the timestamp will be here so we can wrap this in a div and then this one inner div as well now this div will be on the opposite ends okay so what to do we can remove this and try what happens align items we need then again okay what can we do is divide back the style in column and remove the tips here and this timestamp we will have some extra class so here we'll be having where here we will we will be having position as absolute right as then let's attend self okay if we are making right as 10 and this is absolute this should be relative so position relative so that this sticks Inside the Box then let's say top 10 also we will have this let me add one more comment here this is comment for again click add a comment and this will be here so let's add a gap between them I mean these two in this two what is this to comment boxes the margin 30 bits to Too Much 20 so we only need the margin on the top and bottom so we can make this okay from this much I meant too much okay 10 and I think that's fine now we have a comment box as well where we can comment so then we can like and remove this let me add a comment here as well this will be called as this is a comment one on post one click add a comment and the comment will be here from I mean in my name like this now this name is here Nishan Kumar that's why we are getting this okay ahead of here we don't see the command find because the scope of the command is on the only the home on the home page wait a second no it's here as well so on post 4 that the Nissan Command 2 made okay wait okay if we click Nishant command to this post 4 will open up because this is the only post this person has made and if you click comments we will see comments here and we can add comments from here as well so let's try this is comment or yet again now click add a comment and this will be here at the current time which is 108 pm now go to home page and see the comments here so we'll see three comments so that's a great feature that I just added then if you click this I mean this open this will open up with no comments if we have a comment it will show up fine now the last thing we did I mean we need to do is log out and when to improve the inputs that I promised to do in the previous video I mean section so what can we do is okay we are having this login component in this we have this input so it is called common input so let me search for this class so height is 20 pixels find let me remove the height from here so X once again login component here let me add style Here style prop so we will make the height as I mean height here as let's say 40 if 40 is too much try 30. so that is here so they should be here as well yes okay what else let me open this s file okay not in the SAS it is it's in the integral.css common input so height is 20 okay margin we have to remove now it will work fine they may here also it will work so I guess we can name of child from here because that was not the issue that we were having it's much better now now let me sign in let's check the inputs for the profile page and profile edit card this is fine yes real profile edit this and the problem is here now so if you bring back margin top it works fine so I guess we can do it in the label we can have margin bottom as negative so where's the label components common profile edit here we have a label class I mean this level so just make margin bottom minus 20 pixels or 15 fine I think that's fine and now it's not breaking so it's done now let's handle the image upload in Firebase so Firebase has a bucket or a storage we can say where we can upload images or other files so the first step to do that is go to storage here in Firebase now click the get started button here they can I mean we can start in test mode here okay starting so let's wait I will list difference this I mean take the blog this block is reference because I don't remember the exact steps to do that click next we need this click done and we will have our default bucket here where we can image I mean we can store the images meanwhile if you check the blog here we have to import this thing called storage where where is it one second yes see get storage from Firebase storage so import from Firebase slash storage so let me just add git storage like this and we will have to create a constant a variable for storage instance so storage equals to get storage that we just imported and in here we will pass the app like this now just export it here and we are done for this now the next step is to we have done the bucket thing I mean we have created a bucket fine now the next thing is to do that is go into this file called components common let's say profile edit here we will create okay it's loading here we will create this image icon type thing or let's say a button first so let me just let it load and then we will create I think it's compiling and optimizing dependency or something okay meanwhile let me explain the code here what is it so we need one reference fun download URL I mean git downloader and one upload bytes is available to upload the file Okay so we can also create a function like this can we also do but first uh okay so here we should create a button or an input so input and which would be of type file save and we will have our input here okay which way is this when this is edit page we don't need it here we need it in the profile card page the components or should we make it an edit page or here let's see okay let me see on LinkedIn we have on this page so common components common profile card here so we can make it here okay let's just uh make it in the profile card itself and we will have this we can click this to choose a file okay so this will send us a response I mean this input will send us a file if we upload a file so we can create a function let's say get image and this function will be on this so we can say on change this so it will send us an event and to get the image that we will have we can just do uh console not log event dot Target dot file I files so if you save now let's try this and see what happens open the console let me upload for an image file here for example let me have my image so it's in this folder I mean in this drive let's try this image yes so see we are having the file list so if you are uploading one file you can get it like this so now if you choose a file you will get the images data so let me do that see we are getting all of these items so we are having this event okay now let's store this event you know trigger dot files zero I mean the current file into a state so say uh current image Set current image equals to use state so it will be an object so make it object then simply store it here like this now let's check the documentation here and what we have so we need to create an API for this so in the API file okay wait a second okay yes in the API file let's make a let's say storage or let's say image upload Dot jsx so in here let's do our things that we need we need to store we need to import the storage from here just like we have here so let me show you in the fire store we are update we are just importing the fire extra from here so same way we have to import storage so import storage from Firebase config then we know we need these things also so these are import a few things that we will add so import these things from Firebase slash storage okay so these are called ref the reference to create a reference get download by your download URL to get the URL when we upload a file successfully and then upload by its reservable to upload the files successfully so we don't need this file so just close it okay then what we have is we need to add a function so let's say con export const let's say upload image like this so in here first of all we also need to create a ref I mean reference to the storage bucket so the say const storage or say let's add this for profile pics and in here we will use ref then we will pass the storage and the folder we will create a folder here so say add backticks and say files slash the name of the file so this should be done here I mean inside this because only then you can access the file name so we can just say file dot name and we will get the file from the parameter parameters okay that's done now the next step to do is just say upload tasks wait upload tasks okay we have to create the reference for this as well so let me do it here so const upload task so this will be the task that will complete our current image so we'll use upload bytes resumable and in here we will pass the reference which is called the profile pics just make this as Profile Pics ref pass it here and then the file that we are getting from parameter so we know in which in which folder to send our data I mean upload the file and what will be the I mean the task I mean which file to upload fine now we will have upload task this one that we created dot on that is mean that means that our fourth that means our image is uploading the state changed and if it changes I mean it's a param then we will add a snapshot not snapshot snapshot and in here the snapshot will contain the data of our image upload so first let's check the program so say const progress equals to let's do this I mean snapshot dot bytes transferred divided by snapshot dot total bytes this means that how many bytes are uploaded and how many noodle bytes so we can use this for a product bar and we have to multiply this by 100 with the okay we have to multiply this by the set progress percentage what is this okay okay let's leave it for now just wrap this in uh like we have to round the value so we can say math dot round find okay now if it now it's done now second thing we can do is the error so we have to catch them also the error and we can alert if any errors have any error happens so we say console dot error just add error find now the next thing to do is get the download URL if it succeeds so we can have an empty callback I mean the param will be empty and it and in this we will use this get download URL where we will pass the upload task dot snapshot dot ref so when it is done we will have a callback again so say then let's say response and in the response let's just okay let's just cancel the response to get the image URL if it succeeds now what else do we have we don't have anything so just save it we are not using the progress but we can use it later okay I don't know why is okay okay it's what it was hidden okay what we need to do is just multiply this switch with 100 to 500 percentage 100. then we can just say in the console so do this now let's give it a try and see what happens give it ready fresh first now click the let me go to the profile page view profile click upload file I will choose file let me choose a file here some I mean some good file let's try this now we have chosen this okay one second but the problem is we don't need this file okay one sec components common profile card index okay so the we are not running this okay we have to run the function also okay we are not running this sorry this things happen so import upload image from API file now let me create a functions the const let's say upload uh picture and if you want to change the name let's say upload images upload image API now just make this as upload image it will work fine in this we will call upload image API and we will pass this current file which is the current image like this so we need a button as well to trigger the upload so let's create it just a simple button for now so let's say upload now just copy the function name upload image and add the function name here it's on click upload image so it refresh the page once let's try from the beginning select a file let's say this file and click upload dependent Network tabs and let's see what are we getting we are getting nothing okay so let's check the storage and see what we having what are we having here okay we cannot upload an image for now so what might be the problem so let's try rules okay for killing upload the upload image function is running and it's passing the current image here which is the file it should work but it's not okay image upload okay now it's working okay the button was not clickable but so now we have this link so click the link and we will be on this we will have this image in the new tab and this is a link that we can store in the fire store now go to files and we will have a folder called files so let's make the folder to be profile images now if you will upload a file the folder name will change so let me delete this folder so let me go back this and just click this and delete now let me upload one more file here so I don't need we need the block for now so let's remove it Let me refresh the page let me upload another file so just go to choose a file let me see where we have or where I have my images stored so in this folder let's say this and then say this now let me upload this image the best image that I have Okay click upload here whatever we are saying the percentage of the image upload and if it reaches 100 it will show us the link of the image that we have this is the image we can zoom this and zoom out now if you refresh this you will have the image here in this folder called profile images like this now we can use this URL that we are getting and add that URL to the profile picture as a profile picture so let me create or let me create a let's say what is it let me create a state here called uh image image link comma set image link equals to use state let's say a string we have to pass the state email link to this function I mean upload upload image API let's get it here and just store the uh image link here so we don't need the progress for now so let's remove it we can add a progress bar later so this contains our image link and we can do this also let me create a user Factor so say use effect and when this image link changes or we will get it when this we have it we will run a function to upload the database I mean the name so let me go to file explore database and in here we will have the users table see this table so whenever you upload a file the link will be sent to us then if the link is sent to us this user effective hook will run and we will store the image in the database as profile picture so open the firestore api.jsx let me have the file or the option I mean let's have to update the what is it to update the profile so where is it like post get like by wizard post comment post user data get single user okay I think this is it this is it let me search for this no it's add doc we need something with update dock where was it on Snapshot on Snapshot again post okay let's check edit profile okay where is the update dock let's check this search foot yes this is here edit profile so we need to get the function from quiet store so say edit profile function and when this is a factor hook runs we will just call the function so don't need this for now and this neither so we have to pass the user ID and the payload well in this function so the user ID is the ID of the user and the user ID is I think this no not this so let's say current user let's console this so okay wait a second what is the problem here function dock cannot be called with an empty path okay let's just comment it for now okay now we will get our object and in the object we have the ID of the user so we can just filter it out like this so we are on this user coordination Kumar so let's check this is a Nishant Kumar yes and the ID is W2 eec the same ID here if we pass the ID in this function called edit profile with the payload that will upload our file I mean the payload will be the file so just say the payload where is it let me clear this and image link so just send this in the edit profile when the image link changes this will be sent in the edit profile and it will come up here so let's try this okay invalid data let's refresh this what's the problem here user ID English address we are passing the ID in payload here we are passing the ID and the image Link in the edit profile so what is the problem here function dock cannot be called with an empty path okay the problem that we had is solved so what I mean is we are having this upload image that is running on the button click and inside we have upload image API that is upload image in here we are having this API and when the Filip load completes this will call this method called I mean function called edit profile coming from file API that up address updates the profile so it takes the ID and payload so we are passing the ID current user and the payload and we are passing from here as well I mean this ID and payload comes here then this function gets called and the ID and payload then goes here and it updates the profile so now let's try this let me choose a file here so any file let's try this file click upload and in some time our image will be uploaded and we will see a toast here so let's wait for it and see we are getting this profile has been updated and we have removed the setter functions from here we only need file and ID which we are passing from here now if you check this link here let me go to this link and we will see it here see this image that you uploaded fine now let's just cancel this and show the image here so if you okay where is the image so it's in this let's say this current profile or current user in any one of them so just console.log current user and check it here so we are having an object inside we will have the image link so just get it here like this save it and you will have the image link fine so now let me create one image tag here so where should this be okay let's it let's add in the profile info so the stiff contains our H3 and all so let's try here so the image or IMG SRC in here let's just add current user.imagelink and make the alt tag as uh just say profile image save and we will have the image but it is very big so we have to style them so let me add a class name called profile image so copy this class come over to the styling of the file and where is it I mean profile info in this let's add it here so here we will have width say 100 pixels Okay small let's try 300 okay 300 or maybe 250. fine this is fine okay now border radius fifty percent to make them or make it rounded then we also need to add the height here so height say 250 PX so now we have a circular but circular image here just like LinkedIn but let's make it 200. okay so we have this here so in this name I mean in the wait in the current I mean profile info we have this username let me give some margin top or even the margin top from here and we will have it like this fine don't worry we'll style other things like this image and upload image as well so what can we do now is where is the image that we just added okay let me add some border here around so let's say border 2px solid uh two one two one two one save and it will have a border so let's add some padding also control pixel pixels now this color of this border should be lighter so choose this and find now make it a little bit more light okay then make this padding to seven or even five now we have this image just like link it in fine but the border is getting it's fine it looks fine now we have the image as well now I think that's all for this section I mean we have uploaded image and we can see it now let's design our file upload model so what I mean is on LinkedIn if you click this we should see a model opening up so the same way we have to do it here let me create a component for modal so this will be um let's say file upload model this should have an index Dot jsx file and one for index Dot scss when the jsx I mean j6 file here let me make a function component and this should be pile upload model like this so we should get the model from the and design but first let me import this style pile I mean style sheet file index.css now let me choose this vertical centered model but for this we need to add two states but you know two states one state in the profile card which is called Model open fine now let me create this here just copy model into this model vertical centered model and add it here we need few things which is modal and button the button we need to create a custom footer so come over here and you will see a footer crop here in this wait in this customize footer model if you see here this will be like this so we had just added here we can remove two buttons like this button and this button we only need this button and remove the events from them now they should be model open set model open and this also now where to get all the three things as props so model open I mean two things not three things and set model open now let me return the component in the profile card so import file upload model let me just return it here and in here we can pass model open and set model open and save this and now what is this what is what if what what do we need okay let me move the input and the button from here to here wrap them in a div like this now we also need get image so let's also get it as props and the upload image so also get from also get it from props so we don't need the button this upload image will be here on this submit button so on click and let's change upload profile picture save this now save here also but we already have that so we also need to pass get image and set image I mean get image and upload image to set it and upload it now if you click here okay also I need to add this event called set model open on this profile picture card so on here it's on click when we click this they should open the model so set it to true so that we can see it on the screen now also on this class called profile image let me make cursor to be pointer here now save this and click this button and we will have vertical Center portal so we don't need this for now here let me check I mean change they should do this too add a profile image save and you will have it now let's Design This profile image selection button or input so we can add a label here and let's say add an image if now on the input we can give it a ID so let's say this is uh let's say image upload now this ID we have image upload we have to use it on the level also but as for so we have this label for the input so save this now if you click the add an image text this label the file selection popup will open up on Windows so we can make this as hidden so that we don't see it now let's style this label so say class name let's say upload between or something like that and this div okay leave this div if not leave this just write a class name here called uh image upload Main now come over to this CSS file here and set this as display Flex justify content Center and align items Center now we need some height let's say 80 or 60px will also work yes now let's add this level inside and in the label we can add border 1px solid let's say uh two one two and two one now I'll collect made of padding say 10 pixels and we'll have a padding then cursor as pointer you will have add an image here let's say font family system UI okay I think that's already here now it's done we can put the image and we can upload it fine but the thing is a problem is here we should only upload an image when we have selected an image so let me pass one more thing here called the image I am in current image this so let me pass and get so we can add one P tag here as well that will show us our current image name so select a file any file and the name will be here so we should make the flex detection I mean Flex as X direction as column like this now give it ready fresh so if you click this we will see this then we can select the image but if you click or we can click the upload image upload profile picture without selecting any file and that will do what is make our images blank so we need to make the button as disabled if you do this nothing will I mean it will be disabled we need to only enable it when our file is here so this is the current image let's console this in the log yes so what we can do is we can just get the name from this so current image.name so initially this will be undefined but if you select an image this will be not undefined this will be like have a name so we can use this property to check for disabled so if the name exists we don't need to disable the button so make it false but if the name is undefined we can make it true so add an image here or let me start from the beginning refresh the page and select I will click the button add an image let me use an image here let's say let me use my image here this image now as soon as we click I mean add an image we can see this button as enabled fine so click upload an image and this will be uploaded also when we are uploading an image or when it is successful we can close the model so how can we do that is just sit the model open as false here or just just pass that model open here and come over to the upload image API right here upload image API note API just upload image so it is here okay this is the function name and we should get the save this we should get this that model open here save both files and here when we are uploading is done let me close the file so yes make this as false now we can try this once more okay so let me choose the file here any my any of my image so let's try this image now upload an image and it will not close until the upload file is done loading I mean image is done uploading so let's wait for it and see it has been changed also we can show the loading State here so let me create one state here also which is called const ant uh progress and set progress equals to use state a string okay not a string a number say zero pass the set progress in the upload image API and get it here at the top I mean from params then we can set the progress here so this will run every time our progress changes and it will set the progress now paths are progress in the file upload model as this and we don't need this let me get it here as the progress now we need a progress bar that will help us to show the progress of the pile upload so say check for Progress here we can use this progress from art design any progress so you can choose circular one or this one fine let me use this blue one so JavaScript we need these two so let me import progress and space from on to D progress commas please okay now we have to use it in the model say where should we use it let me open the model let me use it below the add an image say here so we only need one circular progress and the percentage will be this progress so it will be 0 initially yes so okay what if we remove the space here I think that is what we don't need basically wrap this in a div and add a class name called um progress bar now let me come over to styling file and here say product bar padding 20 pixels okay I told I think we have to make the height as Auto then yes now it's perfect but if we remove this okay it's fine let's leave it so we don't need to see this progress when the product is zero so we can create a condition here so if progress is 0 nothing or an empty fragment else show this div now let's try this add an image let's try to add an image here let me choose this image click upload a name upload profile picture and we will see this progress bar here and when the upload completes the model will be opened as I closed and the profile picture will be here with the toast here so that's done so this is done yes now what I have to do is see this image is not looking good I mean it's not perfect so let's make it perfect so come to profile card.jsx and also close this yes open the index so here we have the profile image width and height so we need one property called object fit has contained so that it contains our image like this one more thing that I forgot to when we upload an image we need to clear all of these things from here from the file upload model so we can come over to profile card here yes so upload image when it is done so how to clear them okay where are the date with data if we close this and open it again let's do what okay we need to clear the name first so let's do that I mean Set current image to an empty object like this so we can pass this here as well that current image that we can set as empty so save this come over to the API slash image upload let me get this that current image and then just set it as empty object and I think that's all okay so fine I think that's all for now in this section now we can upload an image and see this image here so let me upload my image one more image here and then now when we upload an image Okay click upload image and again we will see this product bar and it's done and the model will be closed so click it again and the name will be not here so one more thing yes I can do is hit the progress to zero so where is the progress say that progress as 0 fine and that's all for now let me try one more this last image just to show you what happens now I have set the providers to zero it means the progress bar will be hidden so which image should I upload now let me try this image upload profile picture so it's getting uploaded and it's done it will be here momentarily like this now it will be an empty model now let's add the small icons or profile pictures at the place of your post for example Command 2 has one image this so we need to add these icons at the place of the post so what we can do is just come over to this file called API and create one more function so just like we have great status we have to create one more call get users sorry export const users or get users what's happening let's say get all users yes so let me just have this here just to copy this let me copy this on Snapchat function and we will replace the posts ref with either user if and we need to add one state here called get all users sorry not here okay this would be here yes get old users so they should be set to all users and let me get from the parameters now let me call this function in the index.js file we have where we have all the posts so we can just copy I mean just import it from here and we can call it here in this use memo so when it when the page loads this function will run now what we need to do is just say I will create a state called let's say all users and set all users so it's use date this will be an array let me send this set all users to this function and it will be automatically set now we need to check the all users here first save this let me open the console okay so we are getting an array so each array is the user and it has some image link for example this user called nishanth where is it the name Nishant comma 2 it has a link I mean this link image link similarly this user another user nishanth Kumar has the image link so let me get the link from here using filter function so we can say all users not fill all user filter it will take an item and this way we'll compare the item.id so we'll compare the ID of the user so if we make a change I mean if we update a status that ID will be stored here so let me also do that I mean we have to change there a little bit in post update so here the user ID should be not current user dot user ID this should be ID so that if you make a post let's say post three click post so it's here post three and if you see in the posts where is it post one post three this user ID is starting from R8 something and this is the ID that we have yes so we are on this user called nishanth Kumar 2 yes we are on this user that is why this ID is getting stored inside this current post yes wait what was the post this post okay come back to this component called posts card so we'll compare the ID of the user which is this ID okay I think we should be user okay no not in this so vertical what we can do is just say item id dot post I mean posts Dot post ID wait a second no user ID here also so user ID now save this and let's check the let's check in the console what we are getting so let me give it a refresh so we're getting an empty array so I mean we are not getting empty ideas we are getting the added with objects as well so now what we can do is just map through this array so map let's say another item it will take as param and simply we can return item dot image link save this and we will have an array which will contain the image links so we can access the links using zeroth index like this and we will have that now let me just use this in this image tag but first let me create it do not worry I will explain what is happening here so image SRC this let me close this let me add one alt tab alt tag they should say profile I mean not profile say yes profile image now save this and we will see that we have the images here for the user so let me give a class name here called post image now copy the class and come over to this CSS or scss file and let me add the styling so this would be width for T pick cells yes so C Nishant Kumar let me convert to this file so we are comparing the item ID from the item in the all users basically what you mean is all users we have we are getting the user's ID for example Nishant Kumar this idea I mean this user and this user so we're getting these IDs and we're comparing them with post ID so when we make a post we are sending the user ID to that post so it can machine scene here this user ID that we're sending so if they're both equal only then we will say oh I will we will show that image which is the image link that is why each item is getting their own image from profile fine so if we doesn't have any image it will show us a blank image so I will get that too later now let me just style this image so border radius let's say 50 percent okay object fit contain okay let me also add height say 40 PX yes they are here but we need to add it just before the username called Nishant Kumar or Nissan command 2. so let me wrap them in a div user and the image His image now give this a class name of uh user image or say post image wrapper now let me copy this class come over here and in here we can just say display of flex now that side by side okay what if we move this okay that will break the I mean it will not break it will not be proper so what if you make it as cover okay cover also works but it is pixelated so we have the image but the problem is the image quality is too much for this to hold so that is why so it's fine then I guess then in the post image wrapper where is it where is it here let's add padding of 20 pixels and gap of 20 also to add a gap between them but one is too fine too much then it should be 10 as well or 15 15 is fine okay so we have nishanth Command 2 I mean the name and the profile image so let me check on LinkedIn how is it on LinkedIn let me go to home page so user here is here fine I mean this user is here then his about so we can also show the about of the user here so in this case do we have margin on this name okay margin is 10 so make it seven or even 0 will work fine so I don't think we need this to remove this underline text although we have it here so let me I have removed it fine okay now also remove the color just make it as this color called Black or even two one two one two one now it is here the font size should be 18 pixels yes now the second item we can add is the like we are adding timestamp let's add it here so after this P tag let's add timestamp but we need one more I mean let's make a fragment here and see what happens okay make a div we need to arrange them as Flex Direction column okay they have already arranged on their own so there should be zero as well so we can just remove this it will work fine okay it's not fine so I have the username and the timestamp and the post so let me change the post width and size so status is here so this should be bigger so make the post font size are 16 pixels or even 18 is fine okay let me get other let me get I mean let me use a font called enter here and Save this will be fine let me also change a few fonts here and there for example in the like button let me come over here like button here we should have uh like comment where is the font font font family this okay this is now enter okay now the next thing we need is okay let me come over here to like index what else do we have here for zero I mean this text called zero people like this post where is it here so it is like container and in this we have P tag so let me check that as well like container okay what is the P tag inside we don't so we can add tear and say this okay do we have P tag here yes we had here now changed also fine also I think this is not looking fine this like button so let me come on to react icons again and change the icon to like yes so say like or thumbs up so let's try from BS bootstrap let me close this import icons from react icons slash BS bootstrap so we need BS like one sec no it's B I not BS B I don't know what is bi but fine so this we need and we need one filled one so okay we don't have field one just say thumbs up okay we do have BS here so just make this and make it as BS we will use from bootstrap the one is for failed and one is for outlined so where does the filled one here and where is the outlined one no sorry this one is the outlined one BS hand thumbs up outlined here and filled one here now let's see it's updated and it works fine let me also add a margin on top of them I think it needs some margin a little bit only so in like comment uh let me add margin top 4px or even 5 fine let's make it five okay now it's fine so we can see our like and we also have comments so let's add a comment like this okay the comment breaks so let me change this as well so in the comment box where is it um so Summit so show comment box let's say all comments I think we have search it for search it here let's make margin 20 or just make the 10 pixels margin for around okay then the name here should be margin left 5 pixels or what about 10 is fine then margin top 5px or 10 yes it looks fine so now we have the name of the user that commented and the comment with the image here so we have the image and if you click the user the user page will open up like this now let's work on the edit and delete posts from the home page so I have added two icons from react icons pencil and dress and we have SIMPLE spellings here so these are on the right side so just add position absolute and write 20 cuts are pointer display Flex to make them in single row and all very simple stuff if you hover them we will see the color of the background changing like this very simple okay now What will What need to happen is when we click the alt icon we need to send the data to this posts page so this page is post update here I mean this page so let me create a function here const let's say get edit data like this and let me pass this function to a modal component wait a sec no in this posts card yes sorry let me pass it here like this okay now let me get it from here and add this method or function to the pencil so on click so you will have get edit data and let's pass the post that we have I mean this posts the current post that we click on fine so we can simply get it here I mean posts and check it in the console so open the console once let me read this and you will get this data so we need to get the status from here so we can just say status and if you click it again status will be here like this now we need to set this into set status so that it comes here so just set it now post one is here click it I mean click edit then click this and the data will be here so you can change it like this so fine now we also need to open the model when we click this just like we click it here and it opens so we have to set the model to open I mean set model open to so here also so do this here okay one okay we have to remove one extra curly bracket so let me click edit the model will open up with the post inside fine then click this hi this model will open up with a post data inside fine so but the problem is when we click it again I mean start a post this will not go away so when we close the post I mean sorry when we close the model when we have to when then we have to clear the status I mean this should be empty string again so set status will be empty like this so let's find where we are closing the model so we can just pass this as okay we are passing send status here to come to modal component here and set status will be false when the model is closed so let me wrap this in an incredibly bracket and set this to false same thing we can do in here if now edit this we will have post one so close this then pick it again it will be false okay say okay this should be not false it should be empty string sorry yes now click edit post one is here click this nothing is here so that's done the next thing we need is to uh I mean if you click this one we will have post method I mean post button so we have to change that to update so let me create one more State called is edit and set is edit so it was to use State say false so when this function get a data it's triggered we have to make it to true but if we are closing a model I mean we are clicking the button from here they should be false so just make this as false so save this and click this again it is post it's again post so just pass this to the model component and come over here in the model let me get it from here then in the button so wait a sec yes here let me just have if it is true we will have the update text as button but if it is false we will have post so we can test this so click it from here so we will have post click it from here we will have update so also we need to change the status of the function so if it is true we will have update status else 10 status now come over here we will have posts now we can convert update status don't Define yes we have to get it from props and add the function here so the const update status and like this in here we can console.log status and Fitness so also we need to pass here I mean this save now let's try this so if you click this we will we currently see post buttons so if you type let's say hi or say hi again and click post this will be posted hi again but if we click edit okay so it's when it hasn't posted so if it is posted then again we have to set this to false I mean yes so if you click it again I mean this let me post one more thing so I yet again now click post so this will be here now if you edit anyone okay we will get okay I think we don't need to do that I think it's perfect okay so if you click hi again and click update we will see the data in line number 37 it means in this function update status now we need to send this data to firestore I mean we have to update it so we are getting the current post so I'm in current post so get in in get Edge data where is it here so we have posts so we can just say let payload okay great status okay let me let me create the current post so say cons current post that current post equals to use state let's say an object now we have to set it here so we can just set this posts fine now we have can use this so let me remove I mean leave it here and select okay let's say okay leave it for now let me create a function in firestore a pair of jsx here this will be export const edit post or not edit update post this will be an arrow function we will get the ID here and also the status that we have to update I mean status update now let me call the function here in the post wait date post okay it will work so we are are we getting it from here now just call the function here and pass so we are having ID and status so in here we can just pass posts dot ID comma status here this will come up here and then we have to update the so first we will select which post to update so we can use dock keywords to say no doc yes we have to select the dock so say post to update equal to dock and it takes the first param as the which collection to update so it's I think Post Service fine then it takes the ID which is this ID and then the payload which is status that it okay not here just these two things first okay then we need update dock function and this will take the dock to update or update to dock what um what I have written update to update sorry dog to update and then the payload so the payload is simply status so then we can have then block here or even try catch block so let me trap I mean wrap this in try block and one more for catch that's a catch error let me add the toast or just console.log error for now we can give this a try and see what happens so let me edit this post so click edit and say hi again to click update we will have some error posts is not defined where update status okay not here I guess post update update status okay we have to get from one sec posts oh sorry current post we should be dot ID now we can try again and okay yes it's getting updated so also we have to close the model so set it to balls okay now let's make this as I again three click update and it is getting updated no other post is getting updated but only this one now let's try to update this one called high it again so make this as two click update and this post will be updated and if you check posts the data here will be updated as well so let me try to update this as I am Nishant Kumar Now update and this post has been updated so the data is now I am Nishant Kumar so that's how update post work works now yes it will work fine click this I mean all the posts under this name will show up here okay we can read this from here as well but it's not working I guess we have to change something weight yes this will not okay yes one more thing I want to do so let's say this post called from Nishant Kumar this post is not from our user it's not our post so we can't update or delete it so we have to make sure that also so come over here and we need to hide this container when the post is not ours so how can we do that so we are having this current user so let me console this we will also have the posts so let me control this as well so append the console so okay let me just control the current user first only so let me just we will get this so this is our email and this is our ID so let's try the IDS ID first so we'll get the current ID of the user now let me add the current post so this also has an ID I mean post ID one sec no user ID yes let me get from this so this is the user ID of this post I mean this post where we are having I mean any post what I mean is this post sorry dot post I mean post sort user ID is the ID of the post with the user made so let's say Nissan command to make the post so this ID is for Nishant Kumar 2. now we have to compare them both so in this here it will just make a we will make a conditional operator and we will check if the current ID is equal to post ID if it's true only then we will show this edit yes only then we will show the edit option and the late option so add a question mark add this else an empty fragment now save this and this is other account so we cannot see eight icon here but all of the other icons is here like you didn't delete that means that these are our posts so that's also works fine also okay not also okay now let me work on delete icon on delete post so let me create a function for delete as well so say export delete post so we will need a function called delete doc so is it imported yes delete dock we have it here so we have to make a dock to delete which document to delete let's make this two dock to delete which will take the post ref and the ID now let me just have delete talk wait delete doc so we don't need the status or anything we just need the ID so let me get ID from here this should be here okay now we have to get the function where we have delete icon I mean here so just let me get this here and on click we will add this and we will pass wait what is what I am doing and then we will pass the ID of the post and this will be posts.id or user ID no just the ID so don't use the ID fine so the ID will be passed around here and then it will lead the post okay let me also add one post message here in updating and deleting so this I mean this so just add it here uh post has been deleted and here has been updated post now save this let me delete this post first post so delete it and we don't see it here let me delete this I yet again too so delete it and we don't see it here anymore if you check this post won't be here so this is how delete works and we cannot delete the post that is not our like this post so that's how delete and edit Works in Firebase firestore now we can delete a post and update it so let me make this as I am nishanth command 2. and we will get post has been updated now let's create this profile card that we see on the home page which contains the name image in the bio I mean headline so we need to create a div here first in the post status Main so make a div give this a class name of post status because the same thing will be here I mean with yes but okay the same thing this is not the same thing let's try this class post status okay no this class let's try okay no no no no no no let me create our one our own class say uh let's say and the name will be user details details yes now let me come over here and we can just add the height as 550 PX sorry wait says 50px hide this uh height and these items yes just add them and we will have a yes we will have a card here like this but if you see the height is big for this so just make this as 200 wait 200 yes now it's little bit bigger but let's try 180 yes I guess that's fine okay now in this card we're going to show the current detail of the user which is logged in so we have one state here I mean one prop here called current user that we are getting so we can just check it in the console then we can just map through the items in the object in this object which is current user so first is the name in the profile card on LinkedIn the add name so say current user dot name so we will see the name here then we have the headline so just let me copy this paste it and this will be called as head line headline is here now before that we have the image I'm in the picture so say image SRC let's add an early tag called uh let's say what is the name of the key here it is called what is the name image link yes so just add it here and current user dot image link save them the image will be here but it will be very very very very big so we have to cut it so the class name let's say uh user image or let's say let me just remove the class name in the user details let's add IMG tag and sub width as 100 PX so it said it has been shorted okay width is fine let's say border radius 50 percent to make it rounded so if we are making this we have to add the height also so say 100 PX okay then object fit let's say contain okay or cover what about cover yes cover is fine now we have all of these items we can make this height as Auto that it can May Fail automatically so it's fine now in this we need to add the items in the center so the display Flex Direction column to make the things the way it was I mean in a column then align items Center so these are in the center now so this image should have a margin top of let's say 30px yes so we have this just like this but the width is I think too big or we can add border one pH solid and let's say this but we cannot see it so what if we make it a little bit black see what happens okay leave it that limited leave it at that and say padding 10 pixels okay 10 is too much let's try five yes five is fine I think yes so we have this image and the name after this so let me design the name so if you check here okay let's make this class name as name now in here just let me add dot name Point weight say 600 yes font family say system UI yes then what we have here is the headline so make this as headline then in the headline let me check okay let me just need the font I mean fun family yes also let me shift this to the top so margin top minus 20px okay 15. yes 15 is fine okay so we are rating this okay but the thing is if you check that this image is on the edge of the card okay so we can move it to the top so say margin let me name a margin of 30 or just make it minus 30. okay it goes up so here in this one we should say I mean we should make margin top as 50px or 100 yes it's fine here so okay now let me move this a little bit called ftpx or 60 yes I think that's fine yes it's fine so we have to remove these items and just make this as two or one yes I guess that looks fine but this is small at the image so make the width as 80 and height exactly it's hard to calculate the exact Dimensions so if we are doing this margin top should be 50 or 40 yes 40 is fine but it is very much small so only divided back to 100 now this looks fine okay now we have this image at the top here k so what is okay one thing we have done okay let me also add the image here in the starter post card so we will have we have this button so before that let me just copy this image and add it here wait this image let me add it here okay let me give this the class name of post image and let's see what we get okay I don't want to I want I don't want you to to I don't want you to see this the positive H width say 100px okay this should not be here where is the rates in post status here they should be yes but but it is too much say 50. also height as 50. then let me also use these items called object fit and Border edit is 50 percent yes it's now centered I mean circular sorry okay what else do we need okay we have post status here image and the button so justify content enter align items okay so just let me make this as uh what is the name of the property space between okay if we are doing this so we have to decrease the width say 450 PX okay it will not so better to make padding 20px okay not padding like it's margin okay that also doesn't work so let's add margin here and here um or what if you make space evenly or space around hey wait a sec this is a post I mean open post model we are having margin 20 here let me remove this from here as well I think that's fine we can increase size of this image a little bit so say 50px to 60px yes but it is not looking five minutes kind of breaking so contain I mean it's not plugging it's pixelated because the image quality is too much to hold for the app so it will be fine if I upload a simple image so let me show you let me upload uh this image upload the whole picture it's getting uploaded done and it says profile picture has been successfully updated and this looks fine now I guess so in our data I mean in our profile pictures it has been updated okay so I think it looks like this not much but fine okay now one problem I have encountered if I click from here I mean let's say Nishan command was the current username if I click we will get all the data I mean all the posts for this data for this user but if I go from here we will not see any posts so let me come over to this component called let's say top bar is it this component wait let me check you know if I click this view profile button we have I think it's in profile popup where is it yes here so we have this uh button called what is the view profile yes so this should be not user ID this should be ID only because we have changed the key name from our from user ID to ID let me show you open the console in filed store let me show you what I mean so in the users we will have if I check this we will have ID as this so if we make this as ID it will be fixed so now let me check it here and let me go to home and click view profile and you will see the data here that we weren't sending previously so that was the problem that we just fixed make the user ID to ID now we have problem in our application that we will fix now so the name from I mean name for the current wizard is nishanth command 2. and the post is also done from here this current username but the name that we are having is from the posts collection not the user's collection so let me show you what I mean so if you check here we will have this we will have this post dot where's the name okay this is not the name where is the name this times yes username we have and this username is inside the post collection post collection so what will happen if if we change the name from Nishan command to Tunisian Kumar the name will be changed here but not the name from the posts so we have to show the name from the users table so we have this array here called all users so let me just try to console.log all users and then let's console the posts and if you go to the home page and open the console let's see the output so first on line 21 we will have an array and it will contain the ID so each one has ID like this and this so we will use this ID to get the name for example we are adding this ID in post collection as well so let me show you so in posts let's say we have this user ID so we compare the ID of the user with this user ID and if it fetches only then we will show the name of the user that we have here so let's Implement that so we will just filter out through this all users so say filter let's say a user and then we will return user dot ID if it is equal to posts dot user ID so we will we are comparing the ID like five ways is whatever and this ID I mean with the ID of this so let's say this user W 2 e c c f is having the post so let me show you what post does this have yes let's say this post so the ID is same I mean this ID and the is ready so if this matches only then we'll map or you will get the data and show the output so let me just okay let me just go I mean get the zeroth element from here and give it a refresh so we don't need this post so remove it and then let's see what we get so we're getting all these items so let me just get the name from here coordination let's say the name save this we will have the name of the user that we have on currently now just copy the entire thing and just paste it at the place of post sort username and Save so both users will have the same name because we have changed it and now if you change it again let's say um wait just add a question mark here and let's see I'll give you a profile yes now it's working this allows us to get the undefined values and load the page I mean load the page even when the value is undefined initially now let me edit this is Okay click edit make this as 2 and save so the name here will be saved as well in all the places okay now if you check LinkedIn we also have the headline here after the name so let's also add that just copy this I mean copy any P tag and just cut this here I mean copy here not cut and add it here so the name will be called as headline now we will have headlines here for the user and also okay we need a headline you know timestamp so changed it now let me come over to CSS file for this or scss and we will have status time step and all let me add the heading so let me check the style for this okay it's same as this time stamp but the font is little bit bigger I will make it little bit bigger so just let me copy all the item paste it here this will be here but font size will be of 14px and this looks much better also we can decrease the font Here Also let's say 10 okay I think that's fine also let me make this as 500 and yes it looks much better what if we make this is 15 okay it's bigger make it 15. it's like it's I guess that's fine so we can do the same thing okay we are having these items so yes okay now let me log out from this user and login with other account to show you what we get in the let's say what we get in the home card home profile card sign in so we are seeing this headline here and the profile picture with the image of the current user here now let's work on the connections page that we see on LinkedIn so when we add a connection only those posts or yes those posts we can see in the home page no other post so one thing I have done here one change so when we are registering we have to send data to a collection called users so I am attaching one dummy image link so that our image or what I mean is our profile image is not like this so that's why we are doing it so it comes like this this image okay but we can change it if you go to web profile and this fine now let me come over to this component called layouts let me create a layout called not the folder a file called connection layout Dot jsx now we can just duplicate these items here and make this two okay let me create a page so in this I understand this in this Pages folder let me create connections Dot jsx so the same thing we have in the home.jsx will be in connections page but this component called home component will be uh replaced with connections so let me do that let me come out to component and create a file here called connections component Dot jsx in here we will do same thing okay yes let me create a functional component here and this will be here fine now we have to import okay we don't need home component we have to import this connections component in here so we can remove home component import and say connections component from the route and add it here now we have to import I mean we have to change the name of this to connections and then import this page to this layout so let me remove this and same port connections from Pages connection and we are done now come over to routes so we can just collapse this come over to routes and in here we will create one more layout so basically we have this icon so this is not profile so we can create one more for which is called let's say connections and we have to get this layout so we can close this okay we have to get this layout so let me import import connections what is the name connection layout okay I think we have to change the name yes it's not changed connection layout now if we type it will be here save this and this now this will be here on connections now you see this icon after home this is for connections so let me add the route there in components common top bar component here so go to Route this should be node profile it should be connections save and now if we click in the page it will be connections component seen here I mean visual layer so in this component we will do our stuff okay so just like the registered component do we have an sas where we can write our style link file so say connections Dot scss or connections component wait a sec okay yes so this should be not in pages connection component where it is here let me import this so import let me go to any component and get the folder name here and this will be just be known as connection component or connections component Dot scss so name the import air file now styling file is there and the jsx file now here we need to show all the users so let me get all the users so we can say import get all users okay what is the name so let me come over to API we had one function to get all the users I created it so we'll get all users this so get all users from API slash firestore API and wrap this because we have to export this like this now one use effect hook we need so that we can call this function and it takes only one param called set all users so we have to create a state and fade the set function return function in this so used it and then const users set users equals to use state let's say an array now pass this here okay and this will contain our data for the all the users so we will map through this users so the same users dot map user and we will return a component so we can just say this let me create a component here in common folder so say first a folder we need say all say just say what can we say um connected users let's say this and inside we can add a file called index.jsx so let me make this functional so this should be what is the name that I added connected users just added here fine so let me import the common component here called connected users and just we have to return this component like this now okay one sec I think we have to import let's do this yes now it will be fine now pass the users in here and we are reading this text four times because we have four users we just have to print the name and data from this so let me add a P tag here and then I will say user dot let me come out to fired store and same name first let me just add the name now we are saying the name and just one more I mean let's say two more one for headline and one for the image so let's leave the image for now because we will sell it later we are just focusing on the functionality so in this day give a class name of uh connections meet now let me copy a class this class and in here we can say in The Styling file display grid grid template columns Auto auto just save to autos fine now what we can do is we are having a div let me make this device grid child and we can use this class here as well so we can say grid child let me add Gap here 20 pixels between them in the great child let's add a border so border one PX solid let's say two one two one two one save okay something is wrong here okay I guess no nothing is wrong it's fine okay now we have to make the width of this to be equal so save it 100 PX let's try to a small 300 okay 300 is fine now let me align them in the center so justify content Center they're aligned let me give margin top or align items Center yes then let me add a finite height here called 300 pixels as well okay it's too much 300 yes fine here let me add padding 20ps okay here also yes okay let's say margin they should be not padding or we can also add padding a little bit called 10px okay it's breaking so what if we add margin here okay okay okay okay okay Gap let's attend or zero okay I guess it's fine make 10 okay this is fine yes so also we need to make the texture and Center to make the centered text like this now we have four users and also in here let's make cursor pointer so designing is done for now so we can close this component let me create a function here so sick const get current user and we will pass this function as props to this connected users let me get over let it let me get it over here and when we click this child it will send us the ID of the user that we are clicking on so we can say user dot ID simple is this idea or something else no it's ID I guess yes so we can get it here as parameter parameter so console.log ID let's try what will happen when we click any of the items on the screen any user so let me open the console click Nishant we are writing this ID for this user click this the ID is like this okay now we will focus on the same principle that we used when we are when we are having the like I mean add like so where is it like post the same way exactly the same I mean not exactly but fine so now let me just copy the entire function and make this as add connection so we don't need light for now so let me just leave the set dock so this will take the user ID and the target ID that which which connection we have to add so replace post ID with Target ID you also need to replace the difference so let me come over here and create one more reference called connections ref equals to collect collection keyword yes fired store comma the name so say connections now let me copy this function come here come over here and replace like surf with this let me add these two connection to add Now set doc will take connection to add ID we will also throw a toast when added we can I mean when the connection has been added so we can say connection added now save this let me import this function in the okay let's say where should we import this add connection we can add it here yes so let me import from firestore add connection so we can call this method here and as I said we need to pass two things so first is the current user ID so we can get it from props so let me come over to pages where we have a home page so connection okay home page let me come over to layouts you have home layout and here we are having my current user like this so same way we have this in connection layout so in connection connections page we are passing the current user so now let me come to connections page which is the pages folder here connection and here also we are getting the current user passing into connections component I mean here so we can just restructure this and now we will have the ID of the current user so first thing we have let me close this and the first thing we are passing the current user ID so say current user.id then simply this ID yeah we don't need control lock so remove it so now we can try this and see what happens okay I think everything is set Target ID and all so this set dock will create a collection with this ID I mean it will combine both the user ID and Target ID so click anyone let's say Nishant Kumar wait connection added if you refresh this let's see what we are getting here we have connections and inside we have two things Target ID and the user ID so the user ID is the user ID I mean let me show you come to users remember this starts from bw9 so come to users this is the user ID bw9 that we passed and the other thing we passed is the okay the other thing we passed is the target ID from the users so we have clicked Nissan command 2. so let me search for this Nishant Kumar 2 where is it where are you yes this is the Nishant comma 2 and it is r a t i so come over here back and this is r at ti so it takes the ID of the current user as your user ID and the ID of the user that we clicked upon that ID which is called Target ID now one thing I have to do here is C we have having all the connections here like this okay let me remove this other one okay we are having all these connections but we also have the fourth user which is my user I mean this is me I think this Nishant but we cannot add our own user it is not I mean it's not the not the proper use case it will be a bug so we have to fix it so in this we will compare if the user dot ID is equal to current user dot ID if this is true it means the user is our own we are the owner of this user card one second do we have user ID or something else no we have IDs if the user ID from here is match if the user ID from here matches the current ID which is our ID we will not show this so we can just say show an empty fragment when it is false okay one second there should be returned should be here I guess okay no wait we did a mistake um let me okay we have to just copy this and paste it here I mean return yes now we are not seeing Nishant Kumar which is our current which is our current user the user yes so that's done now we have to filter the connections here in the home page so that we see only those posts from the connections that we added so come over to this 5x4 dpa.j6 so we also have a function for like I mean get likes so this get likes by user let me copy this and we will add it here so let me add this so we will place a few things for example let's say get connections so this will take the user ID and Target ID so let me remove these two for now set like then likes comment okay so we will compare the target ID with Target ID and inside is here already so same way that we had in the likes we will get all the connections so let me just check if is like this true or false like this so we don't need this remove it make the likes to connections let me change a few things here and this like slip will be connections ref connection ref and this will be connection query connections query let me pass the query here as like query okay now this connections we are just filtering through the response to get the actual data now we will choose if the if event one I mean even the I mean even if the first or one element has the user ID equal to like okay let me research connection so even if one user have the ID equal to connection.user ID I mean this so connection will have a user ID if this is true we will throw this as true so this should be is connected basically it means that the ID we are passing here the user ID is present here or not if it is present it means we are connected else we are not connected now let me get this get connected here so let's say um where can we call this so let's call this here I mean yes now let me let me create one more use effect hook so we will call this function every time when our ID I mean current ID and ID changes so one second connected users okay let's try this here and see what happens we need the I mean we need to use effect we already have it okay get connections so let me create one state here called uh cons is connected that is connected I think I have misplaced the spelling connected equals to U State say false initially now just pass this in git connections wait we also need to pass user ID and Target ID which is basically these two things so pass them here with set connected set is connected let me get it here and set it like this now this will be this will have if the user is connected or not now save and let me check so Let me refresh the page once Okay so we are not getting anything connect okay this we have done something wrong because they shouldn't be here they should be in the home page so let me go to the I mean this page called uh post card okay posts card I think here yes wait a second note here I think let me see where should I add this so where should we where should we add it um we should edit some place where we are having the profile cards so I think here we can edit yes here we have to add it so let me cut this function and add it here so it's connected we need to create I mean this state so just cut this also and add the state here fine now I think we are done at connection okay we have to import get connections from the firestore API so let me add this okay use effect is not defined basically okay use effect is not defined where yes so let me Define this fine okay it is not defined ID this ID so this is a target ID from Posts so how can we get it okay again I think we did it wrong we don't need to edit here we have to add this in the posts card where is it here so that we can get access to the ID of the current user and our ID so let me just add this here so okay we can we don't need this remove it okay now let me come over to the top and import the things that we add here like the state here just cut it and edit here so now other thing we need is the we don't need this we need the get connections keyword I mean the function name so let me copy function name and add it here save the user effect is not defined let's define it okay now we don't we don't have the current user.id okay we don't have it and okay we don't have this ID so instead we will have to pass the posts.id so or it's it user ID let me check in posts yes it's user ID so say posts dot user ID so this is r at something and do we have a connection with this yes we have it so we will see only this connection on the home page if it's if it is successful so it's connected is here we are passing this let's check so we're getting all these options like false false false false false but don't worry okay here we are having this okay we need to pass the post slot current ID here as well now we're getting mixed responses like true or false true false true false like this so disconnected I mean it's connected we have state here so now let me come over to this here let me okay we only need to show those posts where we have added the connections so how can we do that this div is okay let's say this entire div wait like button no here we can do it and that at the return at the parent return so if it's connected it's true it means we have connected to the connection I mean we have it's connected we have added him if it is true else we can just throw an empty fragment that means no we are not connected to that user so let me just collapse this div and after this diff add a empty fragment now save this and you will see that we are seeing the posts from only Nishant Kumar 2 like this no other posts so let's check the ID foreign so where is it this is Nishant Kumar yes this is it I think yes it's Nishan command two see the name the ID is rcti now come over to connections and the ID of Target is riti so only that we are seeing here now let me delete this uh what is it this document and we will see nothing here but here we will have these three connections so let's say we add Nishant Kumar this so it will be added now come to home page and we will see the post of only this user now one more thing is remaining so if we add a connection this connection name should be available in the connections page so we will do same thing that we did here in the uh which in this page called post I mean posts card so we will hide this connection when it is I mean we will hide the name connection when it's connected is false sorry if it is true or false yes if it is false no not false true sorry so now we can do this so we need what those things we need we need to get connections so let's get it here okay we also need the use effect hook so let me get it also add it here after this second use effect it takes the current user.id and posts.id okay current user.id okay I think in our case it is user.id but the thing is we are mapping the users from here so we won't be able to use the user ID outside the scope of this block this block so we have to again move this inside the connected users so where is it here so let me add this here and we will have the user ID so yes we will have the user ID and the git and the current user ID so user ID is this okay just let me make this as user ID and then we need this current user so we can just pass this I mean this we can pass where is it current user here so just pass it like this and we can get this from props so save one sec what happened okay I think we are passing I mean it's not getting passed properly now it will be fine so the things we have user which is the target ID then we have the current user our ID but does this have user.user ID or something else I think this is user.id not user ID so make this as ID and here as well okay use effect is not defined so we can Define this so let's say use effect if get connections is not defined so let's add it import get connections we have defined that is connected is not defined so also let me Define this let me remove it from here okay connect what is the name set is connected so add a state here const is connected set is connected plus the U state uh empty let's say and it's false Boolean value now this is connected we will have to filter through this so if it is true it means we don't have to show anything it means that we have already added the connection so we will not see Nishant Kumar here we are only seeing Mission comma 2 and Nishant now let me delete this document from here and if we delete this we will see the all the three connections here now let me click add on anyone say Nishant Kumar 2. this will be hidden from here and shown here with all the posts so that's how we added connections our main that's how we implemented connections now let's design the connections page in LinkedIn that we see I'm in this page we have button call connect and all so we can design this so we will have we need to use this component class name called I mean style called uh connections component so first of all we need to make one border on the connection main which is the parent element so make this as 10 as Gap and padding as 10 as well also let me add margin as 30 pixels 30 30 PX safe when it will be here let me just temporarily okay let me not this just make this as 200 or 250 yes I think that's fine the height to be 200. yes now this looks fine we also need to add an image here so in this connected users we can do that this component so add one image I mean IMG tag head Source let's say user dot uh image link and let's design this so in the grid child we will have image so width say 50px save them and here as well so images here but let's make it 70. okay much better then height 70 as well okay then border radius 60 50 percent to make them rounded then object fit cover okay now it's fine looking fine now let's change the color so I think let me give the class name here called name and in here let's say head line now save them both come over here and here say dot name and let me check the styling for all the items which is the name so I think font family should be system UI system UI font size make 16px font weight say 600 okay I think that's fine now in the second one which is headline let's also add some styling so say margin top minus or say 0px or I think you have to use minus minus 20. or 15. yes I think that's fine then we have to add this also so copy this and paste this should be 15px and this should be 500 only okay 500 or 400 yes 500 is fine so we have the name and the headline with the image so image is Big so make this as 80 then here also also might be 90. and here as well 90 yes also we have some margin on the top on the image but we will not add margin top here I will add display of flex justify content Center align items Center then Flex direction is column now they're perfectly looking cards now let me change the color of the border so they should be BBB yes just copy this and add it here as well also we have some background color on this great child this is a background color let's say white smoke okay it's not here it's I think here in this class yes now it's here okay now what we have to do make the borders as correct so border radius say 10px and in the child also great child so we have this border radius okay now one thing one thing to notice is we have button was also here so let me add a button and this will be called as connect so we have button here called connect now let me come over to react icons okay let me just install I mean just style the button first so after the image or say at the last after headline save button and width as hundred percent yes and then let's say Max not Max say height should be 40px yes but the thing is the card will be have to a little bit bigger so make this as 250 yes it's now big also let's add the button at the very bottom of the card so position absolute then bottom as 10 pixels so we're doing if we're doing this we have to make the parent of this to be relative so position as relative now it's here perfect so make the uh width to be 90 percent yes it works so if you are doing this let me make the height to be let's say 300. okay 300 pixels not three thousand yes now it looks better okay okay okay okay so the thing is what if remove I think let me remove justify content Center and simply add some margin called margin top called ftpx percent okay not here from the image margin top 50px now this looks better than before or does it so if you make this as 150 and here also it's bigger so we have to make this 20. now this looks better than before so here make the cursor as pointer also now we have to style this so background color say white color as some this color so let me choose the color let me go over to what font and choose the color which is this color so add color here we also need border so make border 1px solid this color save it and this will be here okay so I think this should be not wait it's pure white what is this color then okay it's this should be white as well now they will blend in perfectly yes now let's design the font so font size 18px okay too much 16 yes I think that's fine then font family system UI okay then border ideas to make it rounded like this also let me add margin top or the button so 20px maybe not margin top set only top 20 PX okay this breaks it then okay remove it so what is now what can we do yes we can do the hiding I mean make the height as the empty now it's perfect but if you mean 30 yes that's also fine okay now if you hover the button we will see this thing so let me close this if you hover you will see this highlight option so make it here as well so on the button we can say over and when we hover we need to change two things only the Border should be 2 pixels and they should be a little bit little bit Bluer not white so let me come out to blue and just make it like this okay it's not blue it's purple so let me copy this color instead and then we can Slide the marker on the lighter version okay note this let me save this yes so let me slide this like here I think which is the ideal light blue color I think this one no it's still too much so this still it's not better so what can we do let me if we scroll this it will become darker save this and now let's try this okay it's also dark so let me search for or let me do this instead yes the color is okay no it will not fit like that okay so say let me go to material.com and search for colors hopefully we'll add some color that we can use here color this is not color this is rating this is color so we need light blue so let me try this color now let's check yes it looks better now also we have to do font weight as 600 here now it will be bolder okay that's done now let me add one icon here in the button so come over to react icons let me close this I mean okay let's leave it let's search for add icon or add yes add icon so we can choose any one let's say this icon where I have to import it first so import this icon from react icons Flash air now just add the icon before the connect save this let's see the output so we will have an add icon here let me make the width remember sorry not fit size to be 30 okay one day is fine yes now in the button we have to make display Flex justify content enter a line item Center to make all the items in the center and GAP as 10 pixels as well okay it works I mean it looks perfect okay we can close this then we can do this so this function that we are having on the div should not be here they should be on this button so add it here now if you click a button we will add the connection so let's try for this and edit and it will be here on the home page with its posts okay so that was how we used I mean yes how we designed the connections page here now let's create that search option in LinkedIn that we have first step is to do that is to create a component here in common folder called search okay or maybe search users so in this component we will have index.html or I mean not HTML j6 and one for styling so index Dot scss so make the jsx story functional component and then change the name to say search users now let me import this component here I mean sorry not here let me import The Styling here so index Dot scss now save okay now let me make this input here okay yes so input which will be empty but now so make the class name as let's say search or make a dip first or maybe just remove the search users and make an input like this and give this Dev a class name of search users now save now let me close search results for a while and let me import this component in our top bar so we can do it here so import search input or search users and okay let me create a state here the second is search and that is search let me make this as uh empty I mean fault value for now because we will not see search input basically in the I mean at the start so let me do this so when we click the search icon we should see I mean we should turn this state to true so where's the icon here it is on click uh let's say uh call back a function I mean make it to true true now we have to do same thing on this that assignment search users so let me just call the component here at the bottom let me let's say where should we call this let me call this here I mean search users so we'll see input here but the thing is we wanted to see this input when this is true so just wrap it and say if it is true then show this if it is false I mean this state show this div so edit and I guess we should see I mean we should move it out after this in LinkedIn image yes now click this we will see a input here but what if I mean we need uh I mean we have to pass the function set search set is search here as well to make it fall from this component so let me add it and get it from here now let me style this search input so we don't need this and let me come over here and copy search users and add it here and then say input inside that we will have the height for TPX too much say 30 that is fine with let's say 60 percent Okay small let's say 100 or maybe I think height should be 100 as well here okay it's too much make it 50 then yes still too much 40 I think it's perfect now White look and then border one pH solid and say let's make the border to be BBB this so we will have border here so border radius uh 10 PX this is now rounded but the color should be changed as well so color should be so one two one two one now let me add padding left 10 pixels okay it looks fine but also we have to change the outline or basically make it none now if you do this we will not feel outline but we should have a Focus effect so input Focus link you will need only one not two then we will change the Border color to be slightly darker to make I mean Slide the marker down to make let's say seven zero seven zero seven zero now border will be changed now let me add a placeholder in the input so say Place folder they should be let's say search users double dots and this will be here fine now we will also need to add a placeholder here and in this we will make the font size same as the input so make section at both places so here and here as well now we will see this but 16 is too much or maybe we need to do font family let's say enter okay so I think this should be 15 or even 14. so here also yes I guess that's fine let me add this here also yes we are having this okay one more thing we should have a margin left on the search user so margin left uh 20 Pips yes it's now it it's now perfect or maybe 15 will be more perfect yes okay now we have the search users we also need an icon here so we can place the icon in this div so that we can set this to pause to see the uh to see the top bar so let me go to react icons and here let me add our tools close icon some close I can from here so we can choose this icon called AI outline closed Circle so let me import this from react icons slash AI now this should be on this x button I mean let me just first create it okay let me check here so we have a icon here let's make size to be 20. yes now on the click of the icon they should be false so take on click this should be pulse now if you click okay also I have to close this yes now click this you will see the top bar icons and then if you click it again I mean search you will sits now we have to arrange this icon so add your div around it or maybe not this just add a class name here and they should be close icon now let me copy close icon and come over here to search user damn it search users here so say close icon say but first we also need to do display Flex here to make them in a single row like this now in the closer icon we can say margin left minus 20px yes or maybe 25 or what if we add 30. it's 30 is fine okay now we have to make a learn items Center to make them in a single I mean win a single row like this perfect we can close it also okay if we close this we will say this then fine now also we have to change the color so just copy the color and add it here and then make the color as BBB save this and it's too light so I guess we have to use this color now we have to use this and I guess that's fine yes so it works perfectly now we need a state to handle the search input so let me create it here let's say const uh search input comma set search input equals to use state they are a string now let me pass this set search input in this search users then we can simply get it from props and on this input we will do on change like this and then we can set search input to the event dot target.value so the event here and in here we can do the event dot Target dot value now save this now what we can do is we will have this search input as the value of the input now we'll create one more div here to handle the search options that we will have so let me make a div and this table only visible when we have search input so first let me create the contents so make this as search results first save this now let me come over here I think we don't need this okay let's leave it come over here okay not here in the top bar class here and in here we can just add this called search input this class and it's a bit 400 pixels hide the same background color as white and save so it will be here so let me close this for now so one more thing is to do here is make the position as absolute now it's on the very left then we can say left as 100 pixels and yes and top is also let's say 100 . okay 100 is too much try 70. yes I guess 70 is fine then this should be also not 100 I'm in the width or not 400 so 350. or 300 yes I gets that's fine we also make to 70 or 20. or 290 I guess that's fine also height should be let's say 300 for now yes now we have this search option here so we can just make border radius 10 pixels to make them rounded and let's add a small border to one piece solid say BBB if and we will have border around this we can move them to the top a little bit more so say for T fixed will be top or 50 or 60 is fine I guess now we have to only show this when we have the data in the search user's input so we can just hide this when it's empty so just copy search input and say if it is I'm this if the length of search input wait if the length of this is equals to 0 then show nothing if it is not 0 I mean if the actual input is there so this so let me search for something called Nishan and then it will be here if I close this I mean remove this this will disappear okay one more thing I want to do say if I search nishanth here then I closed this input so it will be here also so we have to make sure that this tip disappears so what we have to do is we have to just set the search input here so we are getting it so whenever we close the search input using this close icon we have to close I mean we have to make this as empty now let me try let me search for Nissan then X and this will disappear okay that's done in here in the let me search for Nishant and let me just make this as permanent for now so revert the state I mean add a exclamation mark before such input dot length check now this will be permanent and in here we will map through all the users for now so let me get the users I mean all users API calls so say import get all users from this route let me create a user Factor here it's the use effect in here they will simply return this function which is called get all users okay now we need a state to store the data when we are calling this functions as response users and set users equals to use state the empty array now simply pass this here and then we can map to the users here so let me come over here and say users dot map single user that we will need and then we will return a dip one more div and in the div we will have one image stack first for the icon of the user the image source this will be user dot image link and then save this and you will have the big image for now now second thing we need here is the name of the user so say user dot name now let me give this P tag a class name of name let me go more Let me give this Diva class name of search inner now save this let me copy this search in a class come to top bar class and let me just do this first we will have the image so save it so it should be for TPX height for TPX save and they will be smaller okay we have this image then I think 40 is too small make it 50. and what when it is border radius 50 percent object fit object fit as cover yes now they will be rounded so meanwhile also we can do to make this as Auto so that it figures I mean it contains the data perfectly and it changes when the user list changes dynamically now in this certain displays Flex and flex Direction on Direction let's say the semi content paste evenly yes but I think we don't need this to remove it we can just say gap between them Gap 20 pixels so we will have a gap between them let me add padding as 10 pixels yes I guess that's fine okay so I think Gap is so much to make it 10. okay then make align items enter as well okay I think we can remove Gap and see what happens okay fine okay I think we can make this as let's say 40 and 40. because 50 is much bigger I guess that's fine then comes the P tag which is dot name so here we will have Point family as let's say enter again I think internet is default so make system UI okay okay one thing I can do is make the Gap is 10 only and make justify content Center okay this is not looks good I think that's fine so I think we can decrease the height here I mean width here so make case 250 or 240 okay I guess that's better then if I remove padding anything what happens okay but it doesn't work okay now we have the names so make font size as 16px or maybe 18 yes they are now much better looking now when we hover this search in Earth we have to change the background color of it's a little bit darker let's say search Inner over then say background color as say this baby baby now hover them the color will change Also let's add cursor as pointer like this now it's better okay and one more thing we will have here it is border radius 10 pixels yes it's now look it now looks fine you can write same here and see what happens in the hover class I think that's fine okay wait a sec no I don't think okay I think that's fine maybe it's not I think we can remove it from here and then see what happens okay this is the problem here border ideas should be 10 pixels should be here okay let me leave it here this radius 10 pixels okay now what we have to do is okay if we okay so this is done we have search items here okay what is the next step that I wanted to do is if we click close it will not open up because it's reverted the state is reverted here so let me now create a function here so set const and this will be handle search so this function will be the bounds function that will run after one second after one second of typing yes but wait second yes this will run after one second of typing so in this function we have to filter through this users so we'll see user dot filter and then this will take a param called user a single user then we have to return this thing so basically whenever we search we will filter and each user we have to go through some checks checks the first we will convert the user value I mean all the users to a value and an array so make objective values and pass users here then we will join I mean we will just convert the data in a string array and then we'll convert it to lowercase yes so that when we type anything and the data will inside the array we have to match them together so basically we will convert the name like Nishant command to Nishant Kumar two small case and then the search input as well to small case so that it matches perfectly and then we will have includes and this will contain our search input and this I just I that said that we have to convert this into lowercase as well so make it to lower case and simply it will be returned now let me sort the data in a state called response or maybe third here let me create a date here called const or maybe fill just researched but this will call I mean this will cause name clashes so make this let's say filtered users that filtered users you can make this a search results as well so it's used it also an array so we will just have to set this search in here but we will only store this search in here when this filter I mean search input is not empty so I'll make a check so if the search users is not empty wait only then we will run all of the stuff else we will run I will we will set this set filtered to the real array which is called users this here we have done this okay now all of this is happening in handle search and this function will go inside a device function that I will create now so now let me just map through this and we will see nothing because we have new users okay okay so what we can do is create one more use effect book here to handle our demand function so this will run I mean the similar Factor will run whenever our field I mean our search input changes the state changes like this now what we have to do is just call this function so let me create one thing called let the bounced equals to set timeout so whenever we are searching the set timeout will run and it will run every one thousand second I mean on 1000 seconds sorry one thousand second no one thousand not one thousand second one second this is millisecond okay so when we run this we should have this handle search inside like this and then we have to clear the timeout so when we unmount the component or when the component gets unmounted we have to return this so let me I mean we have to clear the timeout so clear timeout and then pass the bounce here and this will run our search now you can try this we have tried refresh so we see this uh we see this here so how to remove it is just make the height wait a sec what is it let me come to the bottom and see the problem here third inner search result so search okay make this as remove this now it will disappear now let's search for Nishan so all of these users will come up here like this if we search for Nishant Kumar to only this user will come up here here if you remove this and close it we will see nothing now let me search for some random thing and we will see nothing so we can make sure I mean we can add a div here or maybe a free tag and say what we can say let me just copy search results again and add it here and then here we can say no result bound I think we should get it here okay I think they should not be here because this is on the uh they should this is only on when the length is zero I mean when the search input is empty so let me invert this back and think what can we do to avoid this so we are filtered users okay so um let's add this so if the length of the filtered users is zero then it will show that the result is empty I mean the array is empty or else we'll map through it so if we type something like no data or let me make this third day first and here we can say no data so we will say this so make sure to add that make sure to add this class name here so that it comes like this so maybe we can change this to no results found and we will get it here so now let me search for Nishant and we will get the data here like this after one second basically yes I guess we are doing it one more thing so if we click a user from here we should be on this user's profile page so we can do that by passing a state so on this let me create a function here so they should be called as const open user and when we click I mean when the function runs we will navigate to the profile page with the user's ID and email so let me come over here and on this div search units say on click okay open user and in here we can simply pass this user the current user that we have okay so now come over here and have user then we can say navigate so profile page and then we can have a state and in the state we will have ID which will be user dot ID then we will have a state I am another called email which will be user Dot I think it's email or user email let me check come to this component called profile card okay not profile card postcard here we will have a state so it's user ID and user email so let me copy okay it's from Posts not from this so I guess we can close this this and make this as simply ID and let's say user email but let me check if it is correct component or not I think it is or maybe it's just user ID and user email to make the ID here it has user ID and we already have username now we can try this so click let's say Nishant Kumar and the last one okay let me give it a refresh let me search for Nishant now let me click the last one okay so we are having on our own page so I guess this is ID not user ID now let me check again click I mean search for user let me click Nishant Kumar in the middle okay we already we are having on this page only so why it is happening we are passing the user okay let me check this array called users say the correct state that we need to pass I mean correct values so we have an array here with three elements inside so we have ID okay we have also have okay I think we were passing the IDS 1 6. iD is this email is this okay name is navigating to that page it's working here but not here to ID is this okay and I think the email is okay we have email not user email yes now let's see if it works or not so search for Nishant sir I mean click the last one yes now it's working we're on this user's page then let me click Nishan remain search and click Nishant Kumar in the middle and we will be on that users page so we'll see nothing because we have no posts here so that was how we added such functionality in our application now let's work on the image uploading in posts in our LinkedIn clone app so what we will do is first we will need an icon in this starter post here so we can check this posts card no we don't need this and neither this come over to this component called post update here so that I mean here we have uh this currently okay not here I mean button so let me open model component here here is this modal component CSS model so in here we can simply do this after the input I'm in this input and one more thing I want to do is change this input to input I'm in text area not input so make this as I mean this and so that we can do this I will expand this okay but one thing is wrong here we need to change the I think width of this so if you remove it what will happen okay not width we have to do this so rows should be let's say three and columns will be three as well so initially let's try this okay let me close the model and try again okay this does not change if we remove this okay I think we can do this as well so if I replace the page I think then we click okay do I have to bring it back and now it's fine so we can drag this and this but the problem is I want to stop dragging or hide the button so let me search on Google how to hide uh I have to hide the text area resizer let's remove this disable this so we can check this so we have a class called resize I mean we have a property called it is size none so let's try this and yes it has been disappeared okay so we cannot resize it here so we only have this where we can type our stuff and fine so now just I said that I wanted one icon here so let me go over to react icons again react icons here we will just search for Icon called let's say picture and let me try which icon should we use so let's try this outline picture let me import it here so we can just say AI or plant picture from react icons slash okay now just let me add this icon here and let me check that if you have icono here or not yes we have so mix size let's say 30 yes it's now a little bit big also we need to change the color of this so make the color to be wait or better to I mean one thing we can do is just to give it a class name so this should be picture icon now let me copy this class name and come over here and we can do it inside or outside let's do it outside because I think modal input is this so it will not work if we added it inside so we need the color blue so let me come over here and choose this color I think yes add it here like color will be this now color has been changed let me also add cursor as pointer pointer where is it here like this now we have this icon and we can upload our image from here okay so I think we can do this so we can make it at the bottom so I mean in alignment to this post button so just make position as absolute bottom uh 20 pixels it's now it looks better I guess we can also make it bigger so just make it 35 and it's here okay we can change the icon so I think I think it's perfect or maybe you can use any other icons from here okay let's see where that okay now what will happen is when we click this icon I mean picture icon we should be able to select a file so let me make a input here input and maybe give this ID as let's say pick upload like this okay we will have input and also the type will be of file now we'll have this okay now let me add a label here and we will use the for CE and this will be called as pickup load yes so let me add it here so we don't see a label yet so if I just close the model Okay add the text also so it should say upload image now it's it so now if you click this upload image text this file selector will open in Windows so we have to make this as hidden so that we don't see this other input we only have this so we can try we can move this inside this label and we will have the icon image uploaded to it but this and replace this now if you click this icon we will open up pilot load window I mean image upload window now what we can do is close this now we need to select a file and store its contents in a state or a variable I mean State yes so we can do it in this so we need to create a state called set cons current image set current image equals to use State say object or an object not an object an object now let me pass set what is it Set current image to home order component let me get it here and when we click this button we should store the contents in that stage so say on change so Set current image so this will take an event param and then we can store event dot Target Dot files zeroth index and that's all I guess now let's try to console this current image to see what we get here so let me open the console bring it down here then let me open the poster status then let me select image here let's say an image for example this and you will get the data here in this console now we have to pass this correct image to a function and that will return us the link of the image back to us so let me create that function in API image upload API so we have this upload image const so make and replicate this and I mean say post image upload or upload post image yes so it will take the file and I don't think we need the rest so this should be post images not profile images so make it like this so file it will take it will create the reference so let me create the reference for this as well so this should be post fixed ref and this reference will go up here and okay I think that's fine if it provided we'll see an error let me remove all this stuff and just create a state here so we can close the model for now and read one state here for the image ending so say const image or post image that post image it was to use it they are strength because it will be linked in a spring value now let me pass okay we need to call the function as well upload post image so let's do that import upload post image and let me add this here when we're selecting the image so I guess that should be here or we can just pass it directly but wait a second okay what did we pass it directly and come over here in the model.jsx file index file let me get it here as frogs upload post image so this file will take a I mean this function will take a file directly so we can assign it directly like this we don't have to add this in a state and then pass the state so save this when we're select whenever we select a file this should be uploaded yes and I mean when we select a file this function will run and the image will be uploaded okay so close the model and let me come over here and Set current image we don't need it here let me remove that from there as well I mean Set current image we are not using this okay now close this and okay we had a state for the image link so also let me pass it here so pass it here let me get it here why am I closing this again and again and again again set post image so whenever this function gets called where you have to pass the target I mean image and the set post image function to set it the link so we can get it here and here we can simply set the response now let me close modal component and come over to index so let me just console.log this post image and I don't think we need this so remove the state from here okay now let's try this open the console and select up start the post then 17 okay let me now select the file here so let's say this file set progress will not be fine okay some problem we have here okay we don't have set progress so yes we can simply console.log this progress and try again so let me select a post I mean select image again different image let's say this image this image we can select so we are having the percentage and after that we will have this link so click this link and the image will open up in a new window and a new tab now we can use the post image as the preview of the image so let me pass this as well in the model component and come over here so I don't think we need that for now open the model component file get it here now add an image tag here so let's do it after the text area and before the labels I mean image upload file level so say IMG SRC post image fine quality will be post image and we will see the image tag only when the length of this is more than zero it says that if it is false I mean if it is 0 less than 0 then we will not see that image so also we can style this so say class name post image I'm saying no post image preview preview image yes copy the class now let me come over to this index and say preview image then save width should be 100 percent yes so we are saying this and if it is here the entire other probe I mean other things break as well so we have to make this in a div I mean these two maybe let's say this it's not works perfect okay now we can type anything it will be like this okay fine so when we close this they should be empty so we can set that so I made this set post image should be empty so where's the x button that we used to close the model on cancel and on OK yes so do this now if we close this the image will be not here anymore we will only see these things now let me upload one more image here so basically where does it let me find the image like this so if it is uploaded we should see the image here yes so we can also add a loader here or the same thing that we had and this is a I mean the spinner or flowers bar so let me go over to file upload model yes and get the circle I mean the progress from here and I think we need let me keep this so we'll have the progress at the place of image so if the post length Okay we cannot do that let's add it here so let me get it yeah let me just create it here the second const progress and that progress equals to use state say zero zero because fluoride should be zero initially so now we can set it after passing or not I mean passing this yes let's pass in here coming up to file upload model and get it here set progress wait not here sorry come to the where is it where is it file upload I think here yes so we already have okay this function is different so we have the set orders so let me set the progress here okay toilet is not defined here but we do have progress state I mean in this state so let's check for this okay this progress is not defined so let me get the progress from this component called Phi laptop model I mean all these items but we don't need space so we can remove this to copy this come over here just replace this and we will see this so the progress is like this initially so we can hide it when it's not I mean when it's zero so to hide that I can simply make this as a conditional so if the progress is zero then don't show it so it is 0 then don't show it else I manipulate 0 yes then don't show it okay wait so make a empty fragment here then if it is not zero then only show it I mean show the problem is increasing so we can try let me upload a file here called this and we will save longness we can make this in the center so let me search for okay also we need to hide this when it reaches zero I mean not 0 hundred so or progress equals 200 okay so now we have to make this in the center so let me copy product by class and search for it here it is so we can move this thing okay it's not in the center so I guess what we can do is open this file called modal and this is a progress and it's interesting so make this div a class name of let's say post area or maybe posts body I guess yes now let me copy this post's body come to this index.js and say display of flex justify content Center in Flash Direction then column now it's fine now let's see to upload and try to upload an image this image we can try okay so let me start from the beginning let me select the image here doesn't go away okay let me put image this image is so we will see the progress bar and now the image we see here so a line item should be centered a line items how to type this enter now if we close this and try again let's upload the image here let's say this and the progress will be in the center and after that we will see the image here okay now we can type log in and sign up function and by the way we also need to send the image link to firestore when we are replicating post here so this is the function and if you remove this console log and simply add post image as post image it will go there so now click post and it will be updated and you will see the post here but I guess the thing is we have to add this user okay we don't see it here okay the problem is we have to make one check here that I forgot to add previously so this page only shows those posts that are connected to the user I mean the if the user is connected then only we will show these posts but if the user is same like Nishan comma 2 then we don't have anything to show here so we have to also make the RX statement here and then say current ID I mean the current user ID if it is equal to the posts user ID then I will show it here and now we can say this okay fine and also in the profile page we can see if you open this now it's working so I forgot to add that previously now what we can do is we have to show the image here so let me add this in the card so it's the profile image here okay let me add before this name I mean not the name it where is the status let me add it here yes IMG SRC say alt tag post I mean post image and the third will be post slot I think the key name is uh post image let's see post image save and we will have a big image here like this and it looks much like LinkedIn okay so we will only show this image when we have this exactly in the I mean if we have this else we will not show it so we can make an empty flag material because if you see in the other posts we had a empty image icon wait so I guess this looks like legged in here so we can edit this and if you upload another another image so let's see what happens let's try this image click update and update it but we also have to pass the image link to update function so let me come over to the update page where we are updating the data so I think it's it's startup host we have get in data okay let me check here I guess I think it's here only update status update post function which sends us the current ID and the status we also have to pass the post image press post image so let me pass that like this let me go over to the paid post function in the firestore API so update post where are you I think this is post user data known this update post yes here let me get this post image and add it here and this will be our new post image so here it's done now we can try this and now let me read this first one and if you will see this image so what we have to do is we need to show the post image when it is available so where is it in the posts card here okay if I click x button this will close the image so if I select another image let's say this image okay this is for this is for creation let's say for edit so if you wait okay nothing is coming so I guess we can select an image here or maybe we can show this image so if post dot post image okay not here in the post update function better post okay not here as well in the model this model so here we will have the post image so if the length is more than zero then I will show the image okay post image okay let me do one more thing yes one more thing we have to do is this so if the let's say the image link we need for this so let me come over to okay we are getting this text here so current name again where is it postcard model this model we are having this is edit let me come over here is it here we have so update status okay update then post but what about the value which is status so status is coming from here and now let me check whereas what let us is this let me check this function okay not this okay get a data so we also need one more state or we can just say Set current post we can use this now we have to pass this state in the model here so let me pass the current post now come over here let me structure this and okay what is the problem okay this is the problem that okay we have to remove this for now let me console this current post here if you open the console you will get the current post details in an object and we can get the post image from here like this so save and you will get this image link fine now what we have to do is if the either one of them is here I mean if the post image dot length or the current post dot image if we have here okay not length then we can show the post image or the current post dot post image save and if you now check again like for example if I edit this image the image will be here and if I upload one more image here let's see what happens I mean New Image let's say this image so it's uploading and this doesn't disappears I mean it doesn't disappear now it gets after some time now if you update this the new image will be here and that was what we wanted so we can try it again click upload an image let's choose another image for example let's say which image should we try this image so let's wait for it for some time and this image will be replaced with a new image okay also in the previewer image we have to give some margin top so margin top should be 20ps now let me try again start a post okay okay so if we click this okay I guess we have to just close it only then the image will disappear but in this case it doesn't so what we have to do is we have to set the current post also as empty when we close the model so that current post where are we passing so we have to make it as an empty object so Set current post yes let me get this here okay so when we click X there should be an empty object and same thing should be here now let me try let me click close here okay length will be undefined then so we can add this which is question mark it means only if okay I think here as well now it will find now if I click this you will see no image but if I click here we will see this image and we can replace it if I upload one word image here or a different image like this and it will disappear I mean it will replace the image in some time like this now we can just say date and the image will be updated here and okay that's fine now let's do a few changes in our app I mean final changes so first of all we don't need this profile icon here we will need our user icon here so let me come to collectionslayout.jsx and we have the top bar here okay so we have to pass this current user here maybe we need to check where else do we have the top bar I mean pass this current user from everywhere to top bar like this so that we can use our profile picture so add this here and here and here now we can close all these three and in this top bar let me get current user so this will contain our image in this image so now let me go over here in this image link which is the user and replace the user with current user dot image link now save and the image will be here on the top let's style this so in the user logo class let me search we have to make height 40 that we already have but make it 50 okay I think 40 is fine then height 40 as well then border radius 50 percent and then we can do what can we do object fit another cover yes now it's rounded and fine okay in the next thing we need is one dominate I think we need to make this start a pause button on the left so where is it open this profile I mean post update.jsx it's index file and here we can do that so where is it where is it this open post model button let me search for it here and simply add margin left minus 30 PX yes that's no fine I guess it's fine one more thing we need to do is go to this page called I mean the index.ss file here and this is the color here so remove the color scheme for now I mean from here this will turn to White now we have to make this as anything like this or maybe a little bit darker so I think this is Will fine this will be fine redeem the opacity from this from here okay so we have done this as well okay so what if we remove all of these okay it does nothing so maybe we don't need and neither is this yes so the scroll bar will be changed to light now next thing we need is so we have the images on this page called where does this post s posts card here we have the image links that we see here so what should happen when we click this should I mean we should see the image opening up in a model so let me come over to art design and create a model here let me make quickly I think we should add a component for this or we can just add it in this component as well first we need to create a state so cons image model that image model equals to you state this will be called as false okay now we will have this model here with this vertical centered model we need JavaScript so we need to add a modal at the bottom far away from here and come to the bottom let's add it here okay not here maybe here make this as or just remove title from here and this should be known as image model I think and to set it we have set image model here we don't need the contents so remove them from here and we need a button I mean not a button we will need a uh what is it a function I mean we need only given to set this to true so that it opens up I'm in the model so this would be okay model is not defined we have to Define this as well so we can get this and let's say okay we don't have anything from our design so let me import it here now this picture will open up this image model when we click it so where it is in the picture the image like button we have okay all user.filter okay note this this is the image yes so we can see on click this set image model to true let me make this as a callback function like this and whenever clicking the image okay this is something else maybe wait all users I think this is not the image okay image is this where is the image this is the name I think the image is here somewhere oh yes this is the image so let me add it here now click this and the model will open so we have to make the model as empty we only need the image there so we also need to remove these buttons which are on okay on cancel maybe we have to set the footer as an empty array using footer prop so where does this photo this so let me just curve a footer array object sorry object settings and make it as empty and then save and we will have no buttons here just in close icon I mean one close icon so I guess we have to bring these back okay okay let me add it again and yes and maybe in this footer we have to add the button okay not the button yes it will be closing okay now on the image we have to set a cursor as pointer so let me come to uh post image okay this is Alt let me check where is the image okay image image image text status this is the image post image yes to say cursor as pointer okay one sec I think this is not it where it is post image post image wrapper posts card okay I guess I guess status we have here before this we have the image let me search for image here okay we don't see anything maybe we have to add up maybe we need to collect a class name we are called post class name equals to post image image yes that's it let me now add this okay okay I think post image is somewhere else this is the post image so maybe we can replace this post image or this should be not post image it should be profile image here so let me copy in this and replace other post image with this here we can replace now save and yes it will be fine now where is okay this is the profile image we need for post image so we can remove the cursor pointer from here and add dot post image and then that cursor to be pointed now this will be pointer cursor and whenever we click this image we will open up a we will open up this model and in this model we have to pass the image so we can just copy this image from here and simply paste it in the model here and okay this is not the thing we want this is profile image we need post image sorry again I am confused so we need this and add it here it will be very big so let me let me make profile image sorry not profile image post image and width should be hundred percent only now I guess this will be small maybe not let's see 50 percent okay what is happening what is happening let me cut this post image and paste it outside so that we can all access it okay we can access it yes we can let me also make margin top let's say 30 bits so that we have the x button here so that we can close it and we can give title here or remove the script item okay if you click this image this will be open up open up it will open up and yes it's working perfectly okay one more thing that I want to do okay so in the other profile image we don't need okay what is this let me make this a 60 or 40 let's see then okay not here okay this is the problem this okay profile image should be one place I mean somewhere else as well because this is breaking so it is not here let me come over to post update I mean post update and here we will have post okay this post image is breaking because we are having margin top 30. if you remove it will be fine I guess let's leave it okay maybe we need to add some uh we need to add some margin on this so make say I will make this as margin or maybe modal image just say model here and let me come over to this class name here and just same or dull margin 10 I mean margin top 30 PX now we will have margin here as 30 and now it will be fine okay now we have to do one more thing so let's say we type something like this hello this is Nishan now if you update or post it this will be here let's say where is it hello this is Nishant so what is happening what is happening here is we're not getting this in different lines so we have to make sure to do that so let me hover to react quill let me get this component I mean let me get this Library not component so let's install this in our app open up a new terminal and just paste it and let it finish let it finish yes so we will use this component at the place of our text area here so where is the text area which is this component post update in this we have to do so we will not have okay it's in the middle component modal com just murder this so instead of this text area where here we have aliosis react Queen so let me open this GitHub repo because it doesn't say how to use it so we can import react quill and its CSS file so let me add the quill here and import the CSS into the main file here like this now close and it will take some time to reload or optimize the dependencies I think it's done now we don't need this variable value so let me add it here or maybe we already have the value for this text area yes status so let me copy react quill and just add it here so let me add the class name of this tumori model input the value will be status and on January date status here so now we can remove digit text idea from here okay when now let's check if you open this you will get this but I think it's still optimizing now that I have added react quill here let me add some options I mean let me edit this so let me just find the class name that it has so open the console I mean not the console the elements tab here now let me click this button I mean the icon and focus on this input so this is called as he will container ql snow let me copy this class name add this in the model and remove the border so just make it as none so that the border of this disappears so we have to make it as important now we don't have the Border but still we can type it here the next thing we have to do is take I mean name of the border from this and this is called ql toolbar 12th no so copy this and simply add it here also it's now working we have the cool bar and this okay the next ring thing we can do is okay increase the height of this so say height 100 maybe 100 is too much let's say 50px or maybe 180 it's now it's very big and I guess we need that kind of big so it is here okay but this should be okay we don't need height here when the height on this container not on the toolbar so the add container here and say height as 150 PX yes also let me write font size say 20 PX okay it's not bigger do we have option to write a plus folder here in the react Queen let's check where is the quill quill quill quill quill here the placeholder say add some or say here something useful maybe we don't have the concept of placeholder here or maybe if we close this and refresh the page then open it again yes now we can say this yes we can type it here so in here let me make the font family as system UI and it will change so basically we can make it bold or italic or underline like this okay that's done now next thing we need to do is come over to post uh posts card here so here we have the P tag that contains the status so we don't need it here so remove this and we need a div make this PR div and here as well and just do this dangerously set in at HTML and add post dots I mean add this now the thing is okay we need double underscore HTML and then this and I think we need one more curly bracket now if you check we can say this the same thing that we have now let me write this here so hello I am Nishant Kumar maybe we have to make this on the different line like now click post and we will have this text here like this and it works maybe we need to decrease the width so the height to be one or maybe 100 now yes I think 100 is fine let me add this again hello I am Nishant Kumar to add this here click post and this should be here where is it so I guess it's better to remove the height and go with it so let me add this click let me addition command to click post and let's search for it okay it still is not fine maybe this should be not they make it P again and then let's see what happens maybe we have to set the status here so let me check for status so here we have font okay we have margin here so remove it okay it doesn't work let me make margin top minus 20 PX okay this will not work okay so I guess that's fine and now we are fully functional LinkedIn clone that we can use