hey welcome to draft academy my name is mike in this course i'm going to teach you everything that you need to know to get started using gatsby js a gatsby js is a relatively new static site generator that's built on top of node.js and it uses react in order to help you build an awesome fast and scalable static website one of the things i love about gatsby is that you build your static sites using react and so you have all of the power modularity and scalability of react while still being able to generate static web pages which can be served extremely fast on your web server so you write all of your pages in react and you can access data and you can make your pages interactive and do all sorts of cool things and then you just generate a bunch of static pages and serve them up on your web server in this course we're going to talk about the basics so we're going to get into installing gatsby building your first gatsby site fleshing out all the pages on your site and then we're going to get a little more advanced so we're going to talk about making your pages interactive and we're going to look at how you can use graphql in order to access different types of data about your site so we're going to be able to access metadata about the site we'll be able to access information about the different files and we'll also be able to parse through markdown files on our site and display them in an awesome way so if you're looking for a static site generator you might want to consider using gatsby not only is it backed by the awesome power of react but it's also a new project which means it's constantly being added to and developed gatsby's not going anywhere and therefore you can feel safe investing some of your web infrastructure in it check out this draft academy course we're going to give you everything you need to know to get started and i'm excited to see what you guys learn in this tutorial i'm going to show you everything that you need to do to get gatsby up and running on your computer now one of the cool things about gatsby is the way you install it on windows and mac is actually the same so gatsby relies on this program called node.js so all we have to do is install node.js on your windows or our mac computer and then using node.js and something called the node package manager we can install gatsby and get it up and running and ready to go so if you already have node.js and the node package manager installed on your computer then all you have to do is just skip to the end of the video and you'll see the part where i actually install gatsby but if you don't have node.js installed on your computer i'm going to show you exactly how to do that right now so all you want to do is go over to this website here it's nodejs.org forward slash en forward slash download and there's three options here that we can click for our download windows mac or the source code so you just want to pick whichever operating you're whichever operating system you're on i'm on mac so i'm just going to click mac and once that's downloaded i'm just going to go over to my downloads folder and i'm just gonna double click on this and what this should do is open up this node.js installer so all we want to do here is just click continue and accept anything we need to accept and then we can install node.js on our computer so once that's done installing we want to check and just make sure that everything's installed correctly so i'm going to open up a terminal and i just want to type in the following code we're just going to type node dash dash version and that should spit out a version and then we can also type npm dash dash version and that should spit out another version so we're using node.js and then in order to install gatsby we're going to use npm which is the node package manager and that's basically just a program that we can use to install other programs so we're going to use it to install gatsby so once you've validated that node is installed correctly on your computer we just have to use this node package manager to install it so i'm just going to type npm install dash dash global and then i just want to type gatsby hyphen cli and that just stands for gatsby command line interface so this is how we're going to communicate with gatsby we're going to use this command line interface and we'll be able to give gatsby commands and tell it to do different things for us so i'm just going to click enter and this should go off and start installing everything that we need for gatsby and you can see here that it installed everything we needed and it's just a bunch of different files so in order to just validate that everything's installed correctly we can just type gatsby dash dash version and this should spit out a version of gatsby so as long as you can get that version to come out like this then gatsby is officially installed on your computer and you're ready to start building your first gatsby website in this tutorial we're going to talk about creating your first gatsby site so we're going to create our gatsby site and then we're going to look at some of the default folders and files that gatsby creates for us when we make that new site and then we're going to serve our site onto the internet and we'll be able to see our site running on our local server so let's get started this is going to be an awesome tutorial first thing i want to do to create my gatsby site is open up a new terminal window in my case i just have one down here in my text editor and in order to create our gatsby site we need to enter in some commands into this terminal so i just want to type gatsby new and now i want to type in the name of the website that i want to create so this will be like the name of your gatsby site my case will just do ga underscore site for draft academy site and now what we want to do is enter in the address of a project template that we can use so gatsby actually has a sort of like a hello world introductory project setup on github and all we have to do to access that is just type in this url so it's github.com forward slash gatsby js forward slash gatsby starter hello world so just enter this in after that um gatsby nuke or yeah that gatsby new command and we'll be able to get that gatsby starter project uh that we can use and that's what i'm gonna be using in this tutorial so i'm just going to click enter and gatsby should go out and basically go out to github get that project template and then start installing it onto our machine so this could take anywhere from like one to three minutes it really just depends but it's probably not going to be like super fast so that's done installing and for me it took about a minute for that to install everything that it needed to install and once that's done if we come up here into our file explorer you'll notice that i have this new folder that was created inside my documents folder called ga site so this is the folder that gatsby created for our project so i'm just going to open this up and i want to sort of talk you through what all of these different things are inside of here it might be a little intimidating if you haven't worked with something that looks like this before i do that though i just want to show you how we can actually build our site and see it online so the way that we can do that is by coming back down here into our terminal and i want to type the following commands well first off i just want to change directory into that new site and then i want to type npm run develop and what this is going to do is it's going to start up a gatsby development server on our local host that we can test our website out and sort of use it to develop so this is like mostly what you're going to be using when you're testing your site so that's finis running and you'll see that we get all these success messages i do just want to point out some of the stuff down here you'll notice that um this site is running it localhost 8000. so localhost is like a local web server that's on your computer so if we go over to localhost 8000 we should be able to see our website up and running and i just have this open here in my web browser so i'm just going to refresh and you'll see logos 8000 is now hosting our site it's a really simple site it just says hello world so this isn't like anything crazy but this is actually our site running and so any changes that we make to our site will show up here on this development server as long as that server is running so back over in the text editor again i just want to talk you guys through sort of the default files that you'll see now there are a couple things in here related to node.js and one of those things is this node modules folder and you'll notice if you click down in this folder there's like a bunch of other folders inside of here this is just something that's used for node.js you're really not going to have to worry about this too much now you're going to need it so you don't want to delete it but you know as far as like having to modify anything in there you probably most likely won't have to next we have this public folder and you'll notice that there's really not too much stuff here in this public folder and this public folder is basically the folder that represents like your finished static website so you'll see later in this course we can build our website which means we can compile all of the gatsby pages that we write together into our finished static site that we can set that we can then serve onto the web and all of your like static web pages and your finished static site is going to go inside of this public folder so this is basically just what our site would look like now and we could put these files on a web server and it would be our site the next folder is probably the most important folder and it's the folder that you're going to be using the most it's this source folder and this is where we're going to store all of the pages for our website so if you're building like a blog site you'd store all of your blog pages in here if you're building a normal website all again all your pages are going to go in here and you'll see we have this pages folder by default and then we have this index.js file now because gatsby is built on node.js and more specifically gatsby uses react.js all of our files are actually just going to be javascript files so the content files that we write and a lot of like the files we write for our components are going to be javascript you can also use other formats like markdown and stuff like that too but for now in this default structure we just have this pages folder and then we have this index.js file so really the source folder like i said is is the most important folder and it's going to it's going to be where you're spending most of your time there's also some other files down here this dot get ignore file this is just a file that's used with git and then we have these package.json files and this is another file that's used with nodejs and there will be a couple instances where we're going to have to modify this but for the most part the package.json file basically just manages all the dependencies and all sort of like the overall settings of your node.js app which is what we have right here so package.js package.json file is important but for like the normal use cases you probably won't have to touch it that much so like i said for the most part this source folder is going to be really important so that's a basic overview of the folder structure in gatsby and we also got our site up and running on that local host so now you're ready to go out and start adding content to your site and really start digging deep into gatsby in this tutorial we're going to talk about adding content to your gatsby files so basically we're just going to take that default index file that gatsby gives us and we're going to add in some different html elements so we're going to talk about how you can start building your pages so over here i just have this basic gatsby default layout and inside the source folder in pages we have this index.js file and if you look over here on my website i'm actually viewing this index file so this index.js file is like the root directory it's like the home page of our website and you'll see in here that there's a bunch of react code actually it's javascript but it's using react and so if this doesn't look super familiar to you it's actually um basically just using this framework called react js and you don't need to know too much about react to use gatsby but it does help to be like a little bit familiar with it but for now just know that like all this fancy code over here is um javascript and it's for this react framework what you can see here is we have a bunch of stuff that looks like html and and it's very similar to uh html and it works the same way so we just have this div and then inside of it we have hello world and what's cool is that by default gatsby is a hot reloading framework so if i make a change over here to this div it'll automatically get updated over here on our website so i can say like hello world it's me and when i save this page it automatically gets updated so without me having to refresh the browser it will automatically save over here so kind of makes it really easy for you to develop your site you know it really makes the development cycle a lot quicker you don't have to like go over and physically refresh the page every time whenever you make a change it's just automatically appearing over here so that's just like a little thing that makes gatsby pretty cool in addition to having like for example a div we could also have other html elements so i could put like a header in here right we could say like here's a header and then i could have maybe like a paragraph as well and when that loads up you'll see it loads up just like normal html now one thing that you need to keep in mind when you're writing content inside of these files is you can't have two html elements that are at the same level so if i was to come over here and create a paragraph and i created this paragraph um at the same level of this div so i have these are like what are called sibling elements when i save the page you'll notice that i get an error and that's because um it says you have adjacent jsx elements and so really although this looks like we're writing in html we're actually writing in a special javascript html like hybrid language called jsx and it's basically like a way that you can write html inside of a javascript file but one of the rules is that you can't have two sibling elements just like this so everything has to be wrapped inside of like a single element like if i put this inside of this div then this air should go away and it should just show up so that's just something to keep in mind when you're writing content inside of something like this and inside of this jsx we can also make some styling so i could like style this div and the way that we would style this would be style and then equals and then inside these double curly brackets we can put um some css so i could say like color and i could do a colon and then i need to put this inside of quotation marks but i could say like blue and now this will change all of the text to blue or i could change it to tomato and it would change it to tomato so you can use um css sort of in line just like this and if i wanted to add for example like another attribute here so i could say like background color we could set this equal to blue and it'll set the background to blue so you can add in different css stylings inside of these jsx elements just very similar to how you would in html if you're familiar with css then you'll notice that this is a little bit different but the same concepts apply another thing we could do would be link to an image so i could say like img and i just have this image of this cute cat because we're on the internet so i'll paste this in here and then we can just close off this image tag and now this image should show up in our website so yeah there's the image of the cat it's like way too big but you can see that it shows up nonetheless so that's kind of like the basics of you know adding in content into these uh javascript files and you can see that it's actually pretty easy and it's very similar to just writing normal html and so if you're not familiar with jsx and how that works and how it kind of um is used in react then you might want to look that up but for the most part you know as long as you're just writing normal html you're pretty much safe and it's probably going to work like 90 of the time but yeah so that's kind of the basics of adding content to these files and any of these js files that we store over here in this pages folder you can basically do this with so you can just put all your sort of html text and html tags over here and it'll just display on the website normally in this tutorial we're going to talk about linking between the pages on our website in gatsby so up to this point in the tutorial we just have this one page which is index.js but in any good website you're going to have more than one page so eventually you're going to want to be able to link between the different pages on your website so i'm going to show you exactly how to do that the first thing we want to do if we're going to link between pages on our site is we want to go up here and we want to add in another import statement so i'm just going to say import and instead of saying react we'll say link from and then inside of uh quotation marks we're just going to type gatsby hyphen link what this is going to do is it's going to allow us to use a react component and that react component is called link and basically all you need to know is that we can use the link component or the link tag in order to create a link between the pages on our site so i want to come down here into this html and i'm just going to use this link tag so now that we imported it we can use a tag called link and then i'm going to say link to and then i need i want to type the address of the page that i want to link to if you're familiar with normal html then you'll know about the like a normal link which is just the a tag and normally we would just type like a and then href and then inside of here we would put the path of the page that we wanted to visit but since this is gatsby and since we're using react we have to do it this way so we can use this link and then inside here i'm just going to put um this will link to like page two and then i can put some text in here so we'll say like page two and then we can close off this link just like that so what this will do is create a link to page two on our website so now if i head over here you'll see that we have this link and when i click this link you'll notice that we get this development 404 page so basically 404 page not found right this page isn't on our website and that's kind of a problem so let's come over here into this pages folder and we'll make a new file and i'm just going to call it page hyphen 2 dot js so this is going to be another javascript file and i want to just actually i'm just going to go back here we don't get this red screen of death i want to come over here to this index and i'm just going to copy all of the code from in here and i'll just paste it into this new page that way we don't have to write it out we can just have it and i'm just going to get rid of some of this stuff and on this new page we'll just say that this is page 2. and so now our link should actually work so when i click this page to link it'll bring me to this page on our website you'll see that it does another thing we could do would be create another link on this page and we'll link back to the home page so i'm gonna copy the link that we have over here and i'll bring it here into page two and now instead of linking to page two we can just link to the home page which is just a forward slash and we can say go home so now we have this go home link and we can link back to the home page so these links are now operational and we can link between the pages on our site so you could i mean if you created like a bunch of different pages on your site then you could create the links for them another thing i want to point out is we can also put pages inside of sub directories so if i created a folder let's call this folder der1 and inside of dir 1 we'll make a new file and we'll just call it page hyphen 3 and that's going to be another javascript file and again i'm just going to copy this code and we'll put it inside of page 3. and so from the home page now we can also in addition to linking to page two we can link to page three except now when we put our path we're going to want to put dir one forward slash page three and this should link us to page three so you know organizing your content inside of this pages directory is something that you wanna you know actually do and really the pages directory is kind of like the root directory of your web server and so you know index.js and page two are both at the root directory right and then page three is inside of this subdirectory dur one so you really wanna pay attention to how you're ordering your content and that's kind of how you can do it in gatsby in this tutorial we're going to talk about making your gatsby pages interactive one of the cool things about gatsby is it's built using this framework called react.js and react.js was built by facebook and so you know it's like a powerhouse framework one of the cool things about react is that it allows us to make our websites really interactive so the user can actually like interact with the website and the website will respond to the user and i'm going to show you how we can build a page that just implements like a simple little counter so you'll press like a plus button and the counter will increment and then you'll plus you'll press a minus button and the counter will decrement so the first thing i want to do is come over here into this pages folder and i'm going to create a new file we're just going to call this counter.js so inside of this counter file we are going to make our counter and then in our index file i just want to create a link so that we can easily get to this counter page and so this will just link us to the counter so actually i'm gonna put a break in here so now when we click this link it'll bring us over to our counter page now there is some like default code that i want to put inside this counter.js file and i'm just going to paste it in and then i'm going to explain what the code is doing and then you can just copy it in on your own and that way you can practice kind of like writing this stuff out so you'll notice i just pasted in a bunch of code and this code actually looks a little bit different than the code that we had in our index.js file and that's because this code is different so again this is just javascript code and it's a code that's for the react framework and i'll just kind of walk you through what's in here so up here we're just importing react and now we're creating a class called counter and it's extending the react dot component so basically this is going to be a react component which is basically just like a little component inside of react that can do certain things so and then we have this render function right here and basically anything that goes inside of this render function is going to get displayed on the page and so here we're returning all of the stuff that's going to get displayed so we're just returning whatever is in here and so inside of this class we can put a bunch of code that's gonna help to make our react component dynamic so it'll help to make our page dynamic and so now on this counter page we just have basically just a div that says that it's the class component and now i want to start adding in some code so the first thing i'm going to do is add in some uh html elements and this will kind of like be the setup for our counter so inside of these divs i'm just gonna paste in this code and you'll notice here we have a bunch of code so we have a header that says counter we have a paragraph that says the current count which is zero and then we have two buttons a plus button and a minus button so eventually what we want to happen is when the user clicks this plus button we want this counter to increment and when the user clicks this minus button we want the counter to decrement so over here on our page we just have the plus and minus buttons and you'll notice that nothing happens right now but all we have to do is just add in a little bit of logic into this react class into this gatsby class and it'll start working so the first thing i'm going to do is add in what's called a constructor so up here i'm just going to paste in some more code so it's going to look like this and actually this isn't formatted very well but this is a constructor function so basically what this is doing is that this gets called whenever we create this class or whenever we like reload the page and it's setting this variable called state and so state is a variable that basically represents the state of the component and i'm not going to get too much into what state does but for all you need to know for now is just that inside of this state variable we can store a variable called count so basically we can store the current count inside of this state object so we can store the count right there and then i also want to add in some other code and it's actually going to go in the counter and so i'm just going to put this right here and you'll notice that now instead of just having 0 here when we're trying to access the current count we have something that says this dot state dot count what this is doing is it's accessing this state variable up here so basically instead of just displaying 0 we want to display the value of the count inside of the state and then there's one more thing we need to do which is get the buttons working right in other words we want something to happen when we click the buttons because right now when we click these buttons nothing happens right if i click the plus button and the minus button the count just stays where it is so what we need to do is add in a little function in here to this button tag and again i'm just going to paste it in and then i'll show you what it's doing so what it looks like here is we have button and then it says on click equals and then we have these open curly brackets and then two parenthesis and what we're doing here is we're setting the state so it says this dot set state and then inside of here it just says count and so basically what this is doing is it's decrementing the counter right so it's subtracting one from the counter and actually i think i could probably format this a little bit better so you guys can see it right so this is basically just what it's going to look like right here and actually this should be the minus button because we're decrementing so then i can take this same type of code and use it for the plus button but instead of decrementing it so instead of subtracting one over here we can just add one so i'm gonna do the same thing and i'm just gonna paste it in here and so now when i refresh this page what should happen is when i click the minus button the current couch should decrement and when i click the plus button the current account should increment and you'll see i'm clicking the plus button and the counter is incrementing and i'm clicking the minus button and it's decrementing so that's kind of how you can make your pages dynamic and so basically i'm just using this on click function down here and it's setting the state variable which we set up here in the constructor and it's either incrementing that count or it's decrementing that count and that's kind of how yeah that's one way that you can make your pages interactive obviously the more you learn about react.js the more you'll be able to use these react components to make your website more interactive and more dynamic in this tutorial i'm going to show you how you can build your gatsby website so let's say that you have a bunch of different files and folders and resources on your website and now you want to serve it up on a web server right well how can we access all of those files in other words up until now we've been testing our website on this local host development server but what happens when you want to take those files and put them up on a server of your own well we can actually use a build command in order to build our gatsby website so basically we can execute a certain command and then gatsby will go out and build all of our pages together into static pages that we can then copy and paste or ftp or whatever over onto our web server so i'm just going to show you how to do that really quick so i just want to cd into my directory and once i'm inside of my project directory i can run a simple command which is just npm run build and basically this is just going to tell gatsby like hey we want to build our site so i'm going to click enter and this is going to go off and do a bunch of stuff it's going to build up our entire website so once that's done building i want to head over to my file tree you'll see here we have this folder called public and this is where gatsby spit out all of our static files so inside of this public folder i'm going to open it up and you'll notice that there's a bunch of files and there's a bunch of like javascript files in here and stuff like that but basically this is our entire site so there's actually a lot of these different files and that's kind of what it's going to be like but you'll also notice up here we have like directory one and then there's this page three and page 2 and there's this static folder and this counter folder so this is actually all of the resources that we need to include on our web server if we want to run our site so all i would have to do would be like copy and paste this stuff onto my web server and it would start working or you could serve up all of this stuff using like some sort of a deployment app like netlifier or something like that but basically all you need to know is that this public folder has all the files that you need for your website so anytime that you make a change to your website and you want to regenerate the files you can actually just run that npm run build command again and it'll build all these files and it'll sort of like overwrite overwrite the public folder and do everything that you need it to do inside of there in this tutorial i'm just going to give you a quick overview of using components in react now i could make an entire course just talking about using components in react and if you're not familiar with how react works and how components work then this will just kind of give you a brief overview of how these components work and really just sort of help you to wrap your mind around what we're doing here so a component in react is basically just a collection of jsx or a collection of html that has maybe some styling maybe some logic and it's sort of contained in this one class or this one container and what we can do then is import that into other files on our website and sort of use it and the best way for me to explain this is just to kind of show you so earlier in this tutorial we created this counter.js class and if i go over here my website i can click and you'll see this is the counter and basically all it does is just increments and decrements a counter when you click these buttons now this is what's called a react component and so you'll notice that the whole component is just this thing right here and it has some some of this jsx some of this html style stuff in here right and then it also has this constructor function up here and it has these functions like this on click function inside of this button so there's a lot going on inside of this component now imagine that i wanted to take this counter and i wanted to insert it on another page in my website right so here on the home page how about instead of just linking to counter so instead of just having this counter link imagine i wanted to actually physically put the counter on the page well the way that we can do that is by inserting our component or including our component inside of our index file and i'll show you how we can do that first thing we want to do is come up here and i'm just going to type import and then i want to type the name of the react component that i want to import so in our case it's going to be counter and then i'm going to say from and here we just want to put the path to the file and this is going to be the path of the file starting at the root directory of our website so it's going to be dot slash and then it's just called counter dot js and actually i don't think we need the js so we've imported this counter and now we can actually use it so i can come down here in my jsx and let's say that instead of just linking we want to now actually include the counter so i'll get rid of this and i'm going to add in this counter tag so this is the name of the component so we're going to refer to it just like this and then i can just do a forward slash and we'll close off this tag and so now when we save this page the counter shows up over here and so instead of just having that counter on its own page right so if we go over to this counter page the counter is here but now we can just include that counter on our own page and that's basically how you're going to be building your pages using in in gatsby right you want to be using these components and it takes a little while to kind of get used to using these components but it's a really great way to develop and that's basically the whole point of react is to break up your website into these different components now there's another thing that you can do with these react components and you can actually pass them information so in here i could pass this counter for example like a color so i could say color is equal to and we'll just pass in blue and i can actually access this color variable from inside my component so i'm here in my counter component and if i wanted to access the color i could basically just type out something like this so i can do open and close curly brackets and then i can type this dot props and then i want to type the name of the variable that we passed in so it's just going to be color in our case and this will print out the color so over here you can see it's printing out blue and i can actually use this color to style this component so i could come up here to this div and we could make a style and then inside these style tags i could say color and i could set it equal to this.props.color so now this component is going to be colored blue what's cool is i can change the color of this from in this file so if i wanted to make this like green for example i could just pass in green and now the counter is going to be green so that's kind of how you can use these components to make your website more powerful and obviously you can create more than just a counter so i could create you know a couple dozen of these components and add them in on my website like i could create a component for like a navigation list i could create a component for the header of my website i could create a component for a button really doesn't matter you can create components for anything and then you can sort of just use them on your web pages in order to build your user interface in this tutorial i want to talk to you about using plugins in gatsby one of the cool things about gatsby is it allows you to install and use external plugins inside of your project and these external plugins can do a bunch of cool things they can add elements to your website or they can make your website more powerful so you definitely want to consider using plugins if you're building a gatsby site i'm over here in my web browser on this page right here it's gatsby js.org forward slash docs forward slash plugins and this is sort of like the official plugins page for gatsby and so if we just scroll down on this page you'll see there's this huge list of official gatsby plugins that you can use and a lot of these plugins were just developed by gatsby and there's also a bunch of plugins that were developed by the community and these plugins do a wide variety of things you know all sorts of stuff and they can really just make your website a lot more powerful so what you should do is just kind of click through these plugins and see if any catch your eye see if any you know you might be useful on your website for example here's one for google analytics and for a lot of these um plugins the ones that are official plugins there's like a they have their own page on gatsby's website so you'll see like this plugin has its own page and there's like installation instructions and it tells you how to use them a lot of these plugins will require like a little bit of configuration to really get them going and then a lot of these community plugins will just link you to a github page and you can you know same thing just read the readme.markdown file and they give you the installation instructions and stuff like that so i want to talk to you in this video about you know in downloading and installing your own plugin and in this video we're actually going to install a plugin for typography.js and typography.js is like a css framework that we can use inside of our website to kind of just make it look better and style it a little bit better by default so imagine something like bootstrap which you know styles your website that's kind of like the plugin that we're going to be using so the way that you install these plugins and the first thing you always have to do is install the plugin using the node package manager so i'm just going to go down in my terminal and i'm just going to type out the following command i'm just going to type npm install dash dash save and the plugin that i'm going to be installing is this gatsby plugin typography and what this will do is it'll install everything we need to run that typography.js on our gatsby website so i'm just going to click enter and node package manager will go out and do its thing and get everything it needs to run typography once that's finished running and you get a success then there's one more thing that we have to do which is we basically just have to tell gatsby that we want to use that plugin so we have to let gatsby know like hey we installed this plugin and we want to use it on our website the way we can do that is by telling gatsby inside of this gatsbyconfig.js file now this isn't a file that's going to be inside of your directory by default and so you want to create this file you want to create this file at the root directory of your site so in my case it would be inside of this ga site folder so this gatsby config file should be you know in the same directory as the source folder in the public folder inside of this gatsby config.js file we want to type a few things the first thing we're just going to type is module dot exports and this is going to be equal to two curly brackets and then inside of here i just wanna make an array so it's gonna be plugins and inside of this plugins array we're just gonna type out all the plugins that we wanna use so in my case i'm using the gatsby plugin typography once you have this in here basically this is just telling gatsby like hey we want to use this plugin and this gatsby's going to read this config file every time it builds your site so what we want to do is just restart our website so restart our web server and i just have it running down here so i'm just going to gatsby develop and we'll restart our web server and actually i think i spelled module wrong yes that's why that's not working so now that that's finished running i want to go over to my website and right here you'll notice that the text has actually changed style so before the text was like not really styled very well and now it actually looks pretty good and so what actually happened was this typography plugin got used by gatsby and it changed the way that our text looked right so the typography is like a css framework so it's changing the look and the feel of our site and if i inspect this page and i go up here in the head of our website you'll see that there's this new element here it's this style tag and it says id is typography.js and so actually what happened was gatsby used that typography plugin to add this typography code inside of our gatsby site so all we had to do was just configure the plugin and our website is automatically styled with this cool typography theme so you know what you should do is go over to this plugins website and play around with different plugins you know see how they work on your website see if you like them see if you don't like them and you know just basically use them to make your site better any way that you can in this tutorial i want to talk to you about using the layouts in gatsby layouts are basically special types of files that will act as a template for all the pages on our website so imagine there was a scenario where we were creating a website and for every single page on the website we wanted to have like the same layout right so on every page we wanted to have the same header and we wanted to have the same footer maybe we wanted to have like the same navigational list and we wanted it to be the same for all the pages on our website now one way we could do that would just be to copy and paste that header footer code onto every single page in our website right so if we had 100 pages we would copy and paste it a hundred times onto all those pages but a better way to do that would be to just define some overall layout for our site and then have all the pages on our site inherit from that layout so all the pages on our site would use that layout as their template or as their skeleton of html code and then they could just whatever content is inside that given page would just be inserted inside that layout so i'm going to show you how to build layouts inside of gatsby the way that we do that is by first coming over to this source folder and i want to create a new folder inside of here and i'm just going to call it layouts and then inside of this layouts folder we can create a new file and we'll just call this index.js and index.js is going to be the default layout that all of the pages on our site are going to use so in here i'm just going to paste in some code and i'll talk about what we have here so i just have import react from react and then export default and then you need this parentheses with curly brackets inside and children and then here we have the actual layout of our website so as long as you have something that looks like this then you should be able to implement this layout now there's this special tag right here it's children it's basically like a children function that it's calling and it's inside of these curly brackets and what this will represent is the content of the page that we're currently on so just to demonstrate this i will type out some text so we're going to say layout and we'll say layout and when i go over to my website and actually before we do that whenever you make a new layout you need to restart your development server so i'm going to restart my gatsby server just like that and once that's done restarting when i refresh this page you'll notice that now instead of just having hello world and this is a paragraph we have these layouts up here and so layout is surrounding the content of my page and i actually have a couple other pages here i also have page two and i have a page three so if i go over to forward slash page two it's the same thing so on this page too it's using the same layout that our home page used and if i go to page three it's the same thing so page three is also using this layout so by default all the pages on our website are going to be using this layout and these layouts are awesome because over here for example i could define like a header for my page and this will just be a really simple header and then i can also define like a footer down here and that header and that footer are going to show up on every single page inside of our website so this makes it really easy to define a layout for all the pages on your site so you could have your header up here and your footer down there and whenever you want to change the way that the header or the footer looks you only have to change it right here on this layouts page or on this index file inside the layouts folder you don't have to change it on any of the other pages and that just makes your site more modular and more scalable so play around with these layouts and you know you can basically just structure your whole site inside of this layout and then all of your content will just get injected into the layout from this children function in this tutorial i'm going to talk to you about using data in gatsby and this is just going to be like a quick introduction into how we can store some external data about our website and then access that data inside of our pages so imagine that i wanted to store some information about my site maybe i wanted to store like the title of my website and the author of the website and i wanted to be able to access that information inside of multiple pages on my site well one way i could do that would be to just write out that information in each one of my pages so i could create a header and each page and put in the site title right but here's the problem if i want to then change that title i would have to go through to every single page on my site and manually change the title i'd have to do some sort of like a find replace and that could be really messy and it could be potentially dangerous if not everything is like spelled the same or whatever an easier way would just be to store the title of my website inside of a variable somewhere and then have all of my pages fetch that data and use that variable right that way if i wanted to change the title i would only have to change it in one spot and it would automatically update on all the pages in my site so in this tutorial i'm going to show you how you can do something exactly like that in gatsby we want to open up this gatsby config javascript file and if you don't have this file it's located at the root directory of your project so in my case it's right here in this ga site folder and if you don't have it you can just create it so this is basically like the main settings configuration for our gatsby app so in here you can put all sorts of important things that will help gatsby to configure itself and to just do what it has to do so inside of this module.exports function and or object you want to add this in we're going to put a an attribute it's going to be called site metadata and this is going to be an object and inside of this site metadata object we can put any variables that we want to access about our site so i could put like title and we could give our website a title so we could say like draft academy's website i could also give this something maybe like an author and we can just say the author's me mike so obviously this is just some very simple data but i'm storing it about my website now what i can do is i can configure each one of my pages to go out and grab this information and so my pages will be able to display the website title and the website author and if i ever want to change those i only have to change them in this config file i don't have to touch the pages that are pulling this data so i'm going to head over to one of my pages we'll just go to index.js this is the home page and in here what i want to do is make some simple modifications which will allow me to grab the data that is coming from this gatsbyconfig.js file so the first thing i want to do is add what's called a graphql query and graphql is a querying language that was developed by facebook and it was designed to be used with react and basically you can use graphql in order to grab information from external sources in our case we are grabbing information from this gatsby config.js file so graphql is a querying language a lot like sql if you've ever used sql before we can use graphql to write queries to get information and that's what i'm going to do down here i actually have some code that i'm going to paste in here and then i'm going to explain what it does so this code that i just pasted in is actually a graphql query and what this is doing is it's going out to that config file and it's grabbing the title and the author so you can see it's just export const query is equal to graphql and then we have this single quote and then there's another single quote down here and then we have the query which is just the name of the query up here and then we want to grab information about the site and the site metadata and the title and the author so what you want to do is just paste this down into your file so any files that you want to access the site metadata you want to paste one of these graphed ql queries into there and as long as you have this graphql query in here we'll actually be able to access the information that's inside the site metadata so once you have this query inside of your file you want to come up here and i'm here at this export default and inside of these parentheses you just want to put two curly brackets and we're just going to type out data and what this is going to do is it's going to inject the data from this query into our jsx and so now we can actually access the data from the query inside of our jsx code here so if i wanted to do that i could just come over here and we could actually print out either the website title or the author so why don't we do that inside of this header one instead of saying hello world why don't we print out the title of the website so inside of some curly brackets i'm just going to type out data dot site dot site metadata and then i want to type out the name of the variable that i want to access the name of the attribute that i want to access so it's just going to be title so if i save this page and just a quick note whenever you modify your gatsby config file you have to restart your gatsby development servers and you can see that the text over here is updated so now instead of saying hello world it says draft academy's website and i can also access the author so let's put the author down here in this paragraph we'll just say and now we should be able to see the author of the page which is mike so basically what we did was we stored information about our website some global variables inside of this config gatsby file so we stored a title and an author and then we were able to access that title and that author by running this graphql query okay and then that graphql query grabbed the data for us and injected it into our react function here and then we were able to access them inside of the jsx so that's sort of the flow of the data there's one more thing i want to show you which is a really cool feature that we can use with gatsby which is called graft iql and graph iql is something that i have open right here and the way you access it is by going to logo host 8000 forward slash three underscores and then graphql and you actually don't need this query part right here and this is a sort of a user interface a gui for testing out graphql queries so inside of here you could test out and write different queries that you might be writing obviously the query that we wrote over here this is a pretty simple query but if you have more complex queries then you're going to want to be able to test them out so if i wanted to i could actually test out a query here so i could say like we could test out the query that we're writing on this page so i could say site and then site metadata and then inside of here i could try to access the title and the author and you'll notice what i wrote here is basically just what i have down here so i'm testing out this query and then i can run it and we'll see what returns back so without actually putting this inside my website i can test out the query and make sure that i'm getting the correct data back so this graft iql feature of gatsby can be really useful for helping you to test out your queries and really just supercharging your workflow in this tutorial i want to talk to you about using data in gatsby now in the last tutorial if you're following along with the course we looked at grabbing data about the site so inside of our gatsbyconfig.js file we had this site metadata in here and we stored two values about our website title and author and then on this index.js page we ran a graphql query and then we were able to access that information from inside of our jsx so over here we have this website that's pulling the title of the website and it's pulling the author of the website this is a great way to use data and store data about your website but it's kind of limited right in other words you're only able to pull the data that you can store inside of this site metadata object so using gatsby we can actually access other types of data and one type of data that we can access is data about the files in our website so one thing that you might be curious if you're building a website is what are the other pages like how can we get information about all of the pages on our site in this tutorial i'm going to show you exactly how you can do that we'll be able to use graphql queries to figure out information about the different pages on our site therefore using that you can build things like directories or you can figure out you know what pages are in what directories and what pages are doing what it's really powerful so the first thing we want to do in order to do something like that is we need to install a gatsby plugin and this plugin is called gatsby source file system and basically what this plugin is going to do is it's going to allow us to access information about our file system so i'm just going to paste this in down here into my terminal and you can go ahead and copy this it's just npm install dash dash save gatsby hyphen source hyphen file system so we want to run that and we're going to let node package manager install that onto our computer once that's installed now we just have to tell gatsby about it so i'm going to come over here into my gatsby config.js file and inside of here i want to create a new attribute in here and you might already have something like this but it's going to be plugins and so it's just going to say plugins colon and then this is going to be an array and so this is just an array of the different plugins on our site and i want to add in the plugin that we just installed so you want to put this code in here and it's basically just saying that we want to use the gatsby source file system and then we're passing it some different options so we're passing it the name is source and then we're passing it the directory name forward slash source so this is basically just telling gatsby where all of the files on our website are located and then it can go there and you know figure out what we have available once you update your gatsby config js file you want to restart your development server so i'm just going to do that and now that this is restarted we can actually start using this gatsby source file system so i'm going to come over here into my web browser and i'm going to open up this graftql url so it's localhost 80 or 8000 forward slash three underscores and then graph ql and this is called graph iql and it's basically just a user interface for uh running graphql queries so we can test out graphql queries inside of here what i want to type out is just open and close curly brackets and if you type in um like start typing in a then you should see this all file attribute should come up and if you type in f you should see that file come up comes up so this file and this all file these both have to do with the sort that with the plugin that we just installed and so because we installed that plugin we're now able to see these two guys so i'm just going to click on all file and then what you can actually do is just click if you're on a mac you can click command enter if you're on windows you can click control enter and that's going to automatically fill out this query for us and so you can see it's all file edges node and then right here we're looking at id so right now what we're doing is this query is grabbing the id of all the pages on our website so if we look over here you can see that it's pretty much doing that so the id is basically just the path so we have this index.js file we have this counter.js file we have this other index.js file this page to file and page three and those are all the pages that i have over here on my website so this is just looping through the file system for my website and just printing it out and in addition to printing out the id so you can print out id here and you can also print out a bunch of other stuff so if you just click control space then this will give you an option for it'll give you like a drop down with all the the the options so we could search for the parent children pages internal source instance name absolute path relative path extension so why don't we search for extension and we'll search for relative path so this will give us the extension of all the files and the relative path of all the files and i'll run this query and you can see that most of these are like js files and then we have the relative paths for all the pages so a query like this can be really useful because not only does it allow us to loop through all the pages on our site but it allows us to access different information about all the pages on our site like you can see we have all these things here so if you were building like a breadcrumbs navigation for example you could use this parent or this children attribute in order to do that you can use these absolute and relative paths to build links so you can build like a table of contents or something like that so using these all file queries is a really great way to you know make your website more powerful so i'm actually going to give you a demonstration of building something like a navigation list i'm going to go over here to my index.js file and this is just like the home page of my website and i'm going to be kind of pasting some different code in here so you can just kind of follow along with what i'm doing and then sort of implement your own version of this so the first thing i want to do is just make sure that i have this data attribute set up here so i want to pass the data into my website and i'm just going to get rid of these two guys and i want to change up this query so right now this query is accessing the title and the author of the site metadata but we want to change it up so we actually want it to be the query that or similar to the query that we ran over here and the query i'm going to be using is going to look like this so i'm just going to paste this in and you can see it's just what we did over there in that eye in that graphql but now we're accessing relative path pretty size extension and birth time so this will give us some interesting information about all the pages on our site and then up here in our jsx we can actually grab that information and use it so once again i'm just going to be pasting some code in here and i'm going to go ahead and do that and basically what i pasted was a table and this is just a basic sort of jsx table up here i have the table head and we have these table headers which are basically just displaying all of those attributes and then inside the table i'm accessing all of these attributes so i'm actually what i'm doing is i'm looping through the results of the all files query so that all files query if we look over here on the graphql you'll notice that it returned an array so returned in an array of all the different pages on our website so what i'm doing over here is i'm looping through all of the elements in that array and i'm mapping them to basically table rows so rolls row rows in the table so each one of these like no dot relative path each time through the loop that's going to represent a different relative path of a different page on the website so if i save this file and i head back over here to my normal website you'll notice that we have a table that's just listing out all of the pages in our website and this isn't formatted perfectly but you kind of get the idea right it's giving the relative path of each of the pages on our website the extension how long ago it was made and then the pretty size so basically like how big the file is and this is just one example of being able to loop through all of these pages so when you're able to access all of this information about the pages on your file system it really makes it a lot easier to build out certain navigational elements of your website and also just to have information about the different pages on your website in this tutorial i want to talk to you about accessing markdown data in gatsby now if you've been following along with this course you'll know that we've been learning how to grab data and bring it into our gatsby files so i can go out and i can grab information about the gatsby website and i can also get information about the overall file system that we're using so if you look over here on this page right here i'm basically have a table that's listing out all of the pages that are inside of my website but here's a question like imagine that instead of just listing out pages you actually wanted to access information inside of those pages so this is all information about the pages right we have the relative path the size the extension when it was created but this isn't actually giving us it's only giving us information about the page it's not giving us like what's inside of the page itself and if you're trying to build like a blog or something and or especially if you're trying to work with markdown you're going to want to be able to access more information about the page you're going to want to be able to like figure out okay what information is actually inside of these markdown files that i'm creating and be able to use that information to display those pages better so in order to do that we need to actually install another plugin and before i install the plugin i just want to make a new markdown file so inside of my pages directory i'm just going to make a markdown file called my first post and this will just sort of represent like a markdown file post that we can access and inside of this post i want to start by writing something called front matter and front matter is basically information that you can write about the different pages or the different markdown pages on your website so up here in between these three dashes i can actually write some variables so i could define a title and we can just say that this is like my and then i could also define something else like an author so i could you know define like who's writing this so you could just say it's me so this is called front matter and this is basically just data that you're defining about the data in this file so it's metadata and then we can just put some content so this is the content in my markdown so what i want to be able to do is run a query to be able to access this markdown and first thing i'll point out is if you notice over here the table that we're looking at here is actually updated and so now it's including my first post out markdown and over here i'm using the source file system plugin in order to display this stuff and so automatically when i create this new markdown file it gets added into our table here but instead of just being able to figure out that we have a markdown file i actually want to be able to access the information inside of this file so i want to be able to access the actual markdown content right here and then i want to be able to access these front matter variables up here and if i can do that then i can create a listing on my page that will list out all of these files or all these markdown files and the way that i do that is opening up my terminal and i actually want to install something and this is going to be a another gatsby plugin and i'm just going to paste this down here and you'll notice it's just npm install dash dash save gatsby transformer remark so this is going to be a plugin that's going to allow us to do some stuff with those markdown files i'm just going to click enter and npm is going to go off and do its thing and once that's done running we can actually go over to our gatsby config file and tell gatsby that we want to use it so over in this gatsby config file down here inside of this plugins array i'm just going to add another entry and we're just going to type out the name of the plugin that we just downloaded so it's just going to be gatsby transformer remark just like that so once we have that in here i just want to restart my gatsby development server and now that this is running i want to head over to this graph iql user interface and we can start trying to access the information in this markdown file since you just added that new plugin we should now have access to a couple new attributes inside of this graphql and you want to just start typing out all and what you should see is all markdown remark and you can also just start typing markdown and you'll see that these two new options have appeared so markdown remark and all markdown remark and these are now things that we can use to query the markdown files in our file system so i'm just going to do all markdown remark and i'm just going to click control enter or command enter and this will start up a default query for us so this is just going to query through all of the markdown files on our site so if i play this query you'll notice over here we have the basically like the id of the path so it's just pages myfirstpost.markdown and if i added in some other markdown files then more entries would show up here so let's do that let's add another markdown file we'll just call it markdown two i can give this some front matter as well so we'll just give this a title so over here now when i replay this the new markdown file should show up and so here we have that markdown 2 file showing up in addition to just accessing the id there's also a lot of other things we can access so if you click control space then this list is going to pop up and this will give you everything that you can access about the markdown file so one cool thing is this html right here and this html will basically just spit out the actual html of the markdown file so you can use this html attribute in order to insert the content of the markdown file into one of your web pages we can also access that information that was inside of the front matter so if i just type out front matter you'll notice by default it's trying to query for date and parent but since we only have title we want to just query for the title and you'll notice that it's giving us the title of both of these uh front matter or both of these markdown pages so you can use these markdown queries in order to access information about the markdown files that are in your site hey thanks for watching if you enjoyed the video please leave a like and subscribe