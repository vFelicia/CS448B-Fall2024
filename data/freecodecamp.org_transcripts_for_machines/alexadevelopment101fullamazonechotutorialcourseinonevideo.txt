hi this is steve with dabble lab welcome to the course this is amazon alexa development 101 and i'll be the voice behind the videos and the guy that you can ask questions to as you work your way through the lessons the goal of this course is to give you an introduction to building skills for amazon alexa and to do that as quickly as possible but without moving so fast that you don't get a solid understanding of what you're doing this is an introductory level course so if you have experience programming that's great but if you've never written a line of code in your life that is okay too there is absolutely no prior experience necessary that said to make the best use of our time i will make some assumptions for example i'll assume that you're familiar with what alexa is from a user perspective and that you have some basic computing skills the course is broken down into a collection of short videos all of them are under 10 minutes but most are around 5 minutes also there are a lot of really great resources online that complement this course so i'll mention some of those as we go and provide links finally all of my demos will be done on a mac but if you're using windows or linux you should be able to follow along just fine okay that's it for my introduction to kick things off in the next video we'll talk about getting started with alexa development and how alexa works from a high level technical perspective so the jumping off point for getting started with alexa development is the amazon developer portal and it's located at developer.amazon.com and to get started you'll want to spend some time browsing through the public pages there especially the alexa section of the site what you'll quickly learn when you do that is that alexa is way more than just the brand and the brains behind the amazon echo alexa is also a service from amazon that makes it possible for anybody to extend alexa's capabilities or incorporate alexa into smart devices and software for developers the amazon alexa service provides the alexa skills kit and the alexa voice service the skills kit lets you add new capabilities that make alexa smarter these are called skills so if alexa doesn't do something now that you'd like her to do you can teach her how by creating a skill the alexa voice service on the other hand is used for adding alexa to new devices or software so for example if you wanted to create a voice enabled toaster with alexa embedded in it you'd use the alexa voice service to do that our topic in this course is building skills so we're going to be taking a closer look at the alexa skills kit the alexa skills kit is a collection of resources to make it easier for developers to create new skills and the skills kit includes documentation software development kits application programming interfaces and example code and we'll be talking about these in more detail later in the course using the skills kit is completely free in fact most of what you are going to be doing uh you should shouldn't have to pay for that's building publishing and hosting skills and certainly nothing that we're doing in this course should cost you anything at a very high level there are two things that you're going to need to do to create skills you'll need to tell the amazon alexa service about your skill and you'll need to build a skill service that provides your skills functionality the first part is done through the amazon developer portal and it doesn't require any coding but it does require an understanding of how alexa works from a technical perspective and we'll be covering that building a skill service is a bit more technical and does require coding however even if you've never coded anything before in your life you can build a skill service using amazon web services pretty easily and that's what we'll be doing in this course we'll talk more about skill services in a minute but first let's take a closer look at the skill setup skill configuration settings tell the amazon alexa service about your skill so alexa knows how to recognize when users are requesting your skill and the functionality that it provides new skills are set up through the amazon developer portal at developer.amazon.com and when you set up a new skill you define how users enable and interact with it and how the alexa service will communicate with your skill service that's going to provide the skills functionality the developer portal is also where you provide details about your skill for users and where you submit your skill to be published for anybody to use we'll talk about that in more detail later on in the course your skills service provides your skills functionality and this is the code that you're going to write to take action on and respond to user requests amazon doesn't care how you create your skill service you can use any programming language or technology stack as long as it can properly communicate with the alexa service that said the easiest and the recommended way to build skills is by using amazon web services or aws and that's what we'll be doing so to wrap up let me summarize how alexa works with custom skills first a user speaks to an amazon echo or an alexa enabled device and the audio is streamed from the device to the alexa service next the alexa service converts the voice stream to text and determines if the request is for a skill by looking at skill configuration information that the developer set up if the request is for a skill the alexa service sends the request to a skill service that's set up to provide the skills functionality and the skills service takes action on the request and generates a response that's sent back to amazon alexa through the alexa skills kit api from there the alexa service responds back to the user and the process is complete okay so that is it for our high level technical overview in the next video we'll set up a skill in the amazon developer portal so in the last lesson you learned that there are two things that you need to do as a developer to create a new skill you need to set up your skill in the amazon developer portal and then you need to build a skill service to provide your skills functionality in this lesson we're going to set up our skill in the developer portal the bare minimum requirements and to do that you're going to need to have an amazon developer account and you can get that by going over to developer.amazon.com if you're not already there and signing up i'm not going to walk through the signup process because it's pretty straightforward the one point that i do want to make however is that when you're signing up if you're creating a developer account you want to use the email address that you use with your primary amazon account so if you've got an amazon prime account or an account that you use for your echo if you have an echo which incidentally another point i don't think i made is that you don't need to have an echo to do development and i'll get into that a little bit later but point here is that you want to use the email address that you use with your primary amazon account it'll make testing a whole lot easier when you sign up if you don't have an amazon account of course you can create one as you go through the the sign up process and there's no charge to create a developer account that's that's free and once you've created your account you can go ahead and log in and when you log in you'll be at the developer council and the dashboard is where it drops you by default and from here what you want to do is you want to go over to the alexa menu and then under the alexa menu you've got two options the skills kit and the voice service we talked about what those were in an earlier uh lesson and we're dealing with skills so we're gonna get started with the skills kit and when you come in here if you haven't created skills yet you're going to see what i'm looking at right now which is just a blank list there's no skills created at this point and we're going to add a new skill by clicking the add new skill button here and we're just setting up the bare basics for our skill and so there's a number of pieces of information that we're going to provide there's no coding in here so everything that we're going to do in the developer portal is really going to be configuration information so no no coding here we're going to do that in in a little bit but there is quite a few pieces of information that we need to provide it it looks intimidating when you first kind of start poking through this but it's actually not too bad the skill information is where it all starts you um can leave most of the defaults so we're going to stick with the custom interaction model and this is going to provide us with the most flexibility when we're creating skills there are different skill types we're not going to cover these other skill types in this course but if you're curious about what they are you can learn more by clicking this link the language is we're going to also in this case in my case i'm going to use u.s english and and that's my default but alexa supports u.s english uk english and german and actually when you create a skill you can create the skill to support multiple languages that's also outside what we're going to cover in this course so i'm going to leave the default as u.s english the defaults were also going to leave down here under the glo global field so the audio player video app and rendered templates we're not going to be covering those in this course so you can leave those all as no what we do need however is our skill name and the invocation name and we're going to use hello world for both the skill name and the invocation name and the skill name is the name that users are going to use to find our skill both in the alexa companion app that's on your iphone or your android phone and then also they're going to use that to enable the skills so if you're familiar with how alexa works you enable skills by saying alexa enable skill name and then you work with skills or you invoke the functionality of skills by using the invocation name so after i had enabled my skill i would say alexa ask hello world something or alexa tell hello world something as an example and then my skill would understand the user's intent which we're going to get into in the next video based on what they say and then provide or act on the user's request at that point and so right now we just need hello world for our name and hello world for our invocation name and we'll be all set we can use just about anything while we're developing for the skill name and the invocation name but when you get ready to publish your skill there are guidelines for the invocation name that you need to follow so that your invocation name doesn't collide with or conflict with existing skill functionality or alexa native functionality and so you want to review those guidelines when you get ready to publish your skill we're going to cover that later we'll get into that but if you're curious you can certainly click on the link here to read more about that but at this point all we need to do is click save and we have uh created the bare minimum for settings that are required to uh to to get our skill going we'll need to finish up the configuration with our interaction model we'll need to tell our skill how to pass information and get information back from our skill service which we do under the configuration settings and then there's an area to test our skill and then we uh submit our skill for publishing here and there's some privacy and compliance information that we need to provide on this last section here it looks like a lot we're going to walk through all of it it's actually not too bad but for right now that is where we're going to leave it and then in the next lesson we're going to talk more about the interaction model and get into intents and slots in the last lesson we set up our hello world skill in the developer portal with the bare minimum settings so in this lesson we're going to pick up where we left off and we're going to set up an interaction model for our skill an interaction model let's the amazon alexa service know how users are going to interact with our skill the interaction model is essentially configuration information that's provided in a structured format that the alexa service can understand and to get a bit more technical the interaction model is structured as json or javascript object notation and if you're familiar with json that's great but if not no worries because there is a tool that you can use to create an interaction model and you don't need to know anything about jason to use it and this is new it is um still in beta but it's pretty nice and we're going to use it to create our interaction model here so we'll just go in and launch the skill builder so interaction models can get pretty complex depending on what your skill does but the two most important things that you need to know about are intents and slots and intense represent the actions your skill can perform based on what users say and by defining intents and what users might say that's associated with those intents that lets uh the alexa service know how to uh process the what the user's saying and what users want and how to pass that on to our skill service so that the skills service can respond intents might also have arguments and those are called slots so slots are used to extract specific pieces of information from what users say for example if you wanted a skill that was able to address a user by name our skill might prompt the user by saying what's your name to that the user might respond by saying my name is steve so to get the value steve from a user's response we'd use a slot and we'll take a look at slots in more detail in a later video but for now we're just going to set up a simple intent named general greeting that our skill can respond to when a user says hello and to do that we go in over here and we're going to add an intent and there are two types of intents there's custom intents and builtin intents um for right now we're just going to set up a custom intent and again the name of that intent is going to be general greeting we'll spell that right like that and we'll create that intent and the our skill is going to respond when a user says hello so that is going to when a user says hello that's going to tell our skill to um act on the general greeting and that is what we're going to end with for now so we'll save our model and then we'll build our model which will take a minute okay that is it for this lesson we have our skills set up with a basic interaction model and now it's time to start building our skill service and we're going to dive into that in our next lesson so at this point we have our skill set up and we have a basic interaction model that has one custom intent named general greeting and that intent handles a case where a user says hello now we need a skill service to actually do something with an intent request and since skills extend alexa's capability and can be created by anybody the logic for a skill lives outside of the amazon alexa service so we need to build and host our skill service and then tell alexa where that service is located and we do that in the configuration section of the alexa skill here i mentioned earlier that amazon doesn't really care where your skill exists or how it was created in terms of like the programming language or the technology stack just so long as it can communicate with the alexa service but the easiest and recommended way to create and host a skill service is by using lambda functions through amazon web services or aws and that's what we're going to do so you're going to select the aws lambda arn option here and then we're going to need an arn which is an amazon resource name which is the identifier for the lambda function so to get that and to set up the lambda function you need to head over to aws.amazon.com and create an account there if you don't have one already make sure that you use the same email address that you used when you created your account on the amazon developer portal the sign up process is straight forward so i'm not going to walk through that the one point i will make however is that in the aws signup process you will get prompted for a credit card i mentioned earlier that nothing that we're doing in this course is going to cost anything because aws provides a free tier and you can see that here the first million requests per month are free so as long as you don't go over that we are good uh but if you want to learn more about the pricing just go to aws.amazon.com pricing and you can see how the the pricing works after you've created your account go ahead and log into the management console i'm logged in right now once you log in you want to go to the services menu up here and then you want to under the compute section you want to go to lambda here okay and before i create a lambda function i just want to talk for a minute about what this is so lambda functions are referred to as uh serverless functions so it's a platform that allows you to create services software services without having to worry about setting up and creating the server which is where that serverless name comes from of course there are servers behind it but we don't have to think about any of that stuff we can just jump right in and write our code and it's a really nice and easy way to uh to do it because just a lot of the um a lot of the complexity is not something that you have to worry about in terms of the the hosting and the infrastructure so we just jump in and start working in the code so what we're going to do here is we're going to create a function and amazon provides some templates they call them blueprints that you can use as a starting point and lambda can be used for lots of different things not just creating alexa skills but if you search for alexa alex alexa that works you'll see some of the the blueprints that are provided we're going to use one of these blueprints uh to get started but i'm not gonna talk through what the the blueprint is doing the reason that we're gonna pick one of the alexa blueprints is because the alexa skills kit has an sdk or a software development kit that makes it easier to communicate back and forth with the alexa service we're going to be coding our skill and node and when you use the blueprint the alexa sdk is included with it so just select any one of the node js sdks and i'm going to choose this alexa skills kit sdk for fax skill the next screen what we're going to do is we're going to set it up so that it is triggered when a request comes in from the alexa skills kit so we do that by selecting alexa skills kit here and then we move on and we give our function a name so i'm going to call this hello world alexa skill like that and i'm going to get rid of the description here you don't have to do that but and then you can see the the template code here that's provided again i'm not going to get into this right now we will come back and talk about that a little bit but this is a a skill service for a space fax skill so uh the the only other thing that you need to do to get the the skill service code set up is select a an execution role and this is what gives the lambda function permission to run and if you're just getting set up and you have not done this before you're going to want to select from here create a custom role and when you do that a window will pop up that will walk you through the process it'll create a role named lambda underscore basic execution by default you don't need to change any here thing here you just choose allow and then that will pop you back over here and that role will be selected and that's all you need to do for for this example you choose next and then create function and that is it so we have our um we have our skill service set up as a lambda function now the only thing left to do is to let the skill in the developer council know the arn or the amazon resource name which is this up here so we just want to copy that and then go back to the alexa developer or the amazon developer portal and to our alexa configuration and then we want to go ahead and paste in that arn and so when we do that and click save now we have our settings connected to our backend skill service and we can test that real quick and this is where we're going to end up or this is where we're going to end this lesson but we'll come back and we'll talk about testing in more detail we'll test it by just saying uh open hello world and we should get a response back and we did so this is the request that the alexa service sent to our skill service and our skill service got that our skill service again our lambda function got that and generated this response and you can see it's a response that is uh having to do with space facts and you can listen to it here if you want to hear here's your fact a year on mercury is just 88 days long okay so now we we have at this point a functioning custom skill we're gonna go talk about what's going on here and modify it in the next lesson so now that we have a fully functional skill let's take a closer look at what's going on in the code for the skill service that we set up in the last lesson so head over to aws.amazon.com and log into the management council if you're not already logged in and then from there go to the lambda section of the management console and again you can get there by going to the services menu and then to lambda and now in your function list you should see the function that we created in the last lesson the hello world alexa skill and you want to go into that and we're gonna talk about the the code here that was provided as part of the uh blueprint that we selected so the blueprint that we selected was for a skill that provides space facts and if you wanted a space fact skill we are are done at at this point aside from maybe adding some additional facts or changing these ones uh for that matter if you wanted a fact skill for any topic you could go in here and just change these facts and and you'd be done we're gonna um we're gonna move beyond that and we're not gonna talk a whole lot about what this uh this blueprint provides and in fact we we don't need any of that stuff so we're gonna ignore that for right now the what i do want to do however is i want to talk about what's going on in here at a higher level and then talk about how we can make some uh changes that will allow functionality that we are going to define ourselves uh more specifically how to deal with the general greeting intent that we defined as part of our interaction model we're going to do that here but first of all all of this code is written in javascript and it is run in the context of nodejs and so node.js is an environment that allows javascript to be run on the server and this lambda function is using node.js to allow us to execute this code in here which is javascript so you don't need to know javascript or or node.js for this course but if you wanted a a really deep understanding of what's going on in here that would require uh an understanding of both javascript and node but what i will tell you is that the alexa skills kit makes doing a lot of this very very simple so if you are not a coder or are not familiar with javascript you don't need to be intimidated there might look like there's a lot going on here but actually it's it's pretty straightforward and it's pretty simple and that is because of this right here the alexa skills kit provides an sdk which is a wrapper for the api that makes sending and receiving the messages back and forth between your skill service and the alexa service really straightforward and so let me show you how that works so the the first thing i want to point out is what the skill is doing by default or this skill service and then how we're going to change that up so if we go into our service simulator and we looked at that real quickly last lesson and and uh we just say open hello world we're gonna see now that the skill service responds with a space fact because that's how it's set up right now and we can see that if we go back over here the launch request is the intent that is going to get called when the skill is opened without any utterances that are associated with another intent and so when you just say open skill or open hello world in this case this launch request is is what is going to pick up so in this case this launch request is calling this getfact function down here and that's what's replying with our space fact and we're going to change that to do something different and we've got some functionality that's provided as part of the sdk that makes that really easy this ask and tell down here allow us to prompt the user for a response or to just speak back a statement and we're going to prompt them by using this ask option up here so we'll go like this and then we're going to what are we going to ask them we're going to say welcome can you say hello and then we're if they don't respond we're gonna reprompt so after five seconds if they don't say anything we're gonna ask them again can you say hello okay so now when we save this and the user just opens the skill our skill should respond now with uh this welcome can you say hello and then can you say hello and let's see we'll test so open hello world and there we get our new response welcome can you say hello okay but when the user responds with hello well with hello our service responds with an error and the reason that it's responding with an error is because right now the skill service doesn't know how to deal with that intent so the intent let's take a look here so over here the alexa service sent this request over and this is the the json the the structured information that the service alexa service is sending to our skill service and it's um asking the skill service or telling the skill service that the user is looking for this general greeting intent here but we don't have code in our skill service that understands what to do with that and so we need to change that up to make it work and the names here map to intents that we've defined in our interaction model or should and so we don't have this get new intent in our interaction model so we'll just change this up to be general greeting like that and we're going to say we're going to respond back with tell and then nice to meet you okay so now when we save this now what should happen is we should when we open the skill alexa will prompt us prompt the user to say can you say hello when the user says hello alexa is going to respond with nice to meet you so let's give that a try so we will do open again and don't have to test it again but welcome can you say hello we will and now we say hello nice to meet you okay so there it is that is uh wiring up our intents that are defined in the interaction model with the code in the skill service so that the skill service can prompt and respond in the next lesson we're going to go a little bit deeper but we're going to start by talking more about testing and then we'll move on from there so up to this point we've been doing all of our testing using the service simulator in the developer portal but now we're going to take a look at a few other options when it comes to testing during the development process the service simulator is usually the first place that you're going to start but you'll also want to test your skills using voice interactions so you'll either need an amazon echo or some other alexa enabled device or software to do that and you don't need to go buy an echo but if you have one and it's configured with the same email address as your developer portal account you can start using your echo for testing without doing anything else and that is because when you're developing skills your skills are automatically enabled for your account and you can see that using your alexa companion app or i'm logged in here at uh if you go to alexa.amazon.com and log in and then go to skills and then your skills you'll see that your hello world skill is enabled so you can just say alexa open hello world and your hello world skill will respond if you're using an echo you can also test with any other alexa enabled device or software so if you don't have an echo there are a growing number of options to choose from but here's a few suggestions my first suggestion is to get the amazon shopping app and this is alexa enabled and available for both ios and android and so once you install the app there's a little microphone icon that you can tap and then you can talk to alexa just as though you were using an echo and this is a great option for for developing the next is an app called reverb and reverb is also available for ios and android and it is also got a native app for the mac so if you're using uh the mac you can install reverb and i've got it installed and with reverb installed you can click and hold and say alexa open hello world welcome can you say hello hello nice to meet you and so that is reverb this is a great option again if you don't have an echo but the the clicking and holding is uh maybe not uh not not ideal but works well the last option is called echo sim io and if you don't have an ios device or an android device or a macintosh you can install echo sim or actually you don't need to install it it's just browserbased and all you need for echo sim is a computer with a browser and a microphone so if you don't have any other options this is available for you and it works like the reverb app you click and hold and you can talk to alexa the last thing that i want to talk about is um testing the lambda functions in the aws management portal so uh this is a topic that is uh a bit more technical and something that i'll cover in more detail in a more advanced course but i wanted to show you real quickly how this works and so when you have lambda functions and um you want to start testing them uh you there's a test tool that's built in to aws for lambda and what what you're going to need to do to test this tool is configure it with the json message that's going to be sent to the function to get a response back and so if you don't have the the right request here you will just get an error because the um the lambda function isn't getting the uh the message format that it's expecting but it's it's really easy to get the right message format if you go into your test service simulator over here when you're doing testing here this service request is the format that you need so if you copy that and go back over to the lambda function here and configure and test and just paste that in if you save and test now you will see a successful response so just like being in the the service simulator and again this is a more um advanced topic but sometimes when you're testing in the service simulator if your lambda function is generating an error all you'll see is that there's an error over here and you don't get any details about what might be causing that error if you take the service request from over here into the the test test console within aws and run the test you'll get a lot more details about what might be going on and why your lambda function is erroring out over here and again uh more a little more technical but wanted to show you that so now you have a few more options for testing while you're in your development process and next we'll discuss skill design and planning as you spend more time creating skills you'll quickly realize that there is a lot more to it than just coding in fact you may even spend more time planning and designing your skill than you do actually building it and the topic of skill design and planning is one that we could easily dedicate an entire course to maybe even a few courses so in this lesson we're just going to scratch the surface and talk through the skill that we'll be building in the next lesson mostly okay so when you're planning a skill the first step is to come up with a concept and for this course we're going to be building a skill that gives users recommendations or suggestions for something and it can be whatever interests you so for example it could be recommendations for scary movies to see or places to visit or foods to try again whatever you're interested in i like craft beer so for my example i'm going to use a skill that i created called suggest a beer and after you've come up with your general concept the next step is to do a little research to see if there are any existing skills that are similar and to do that you can go to alexa.amazon.com and log in and once you've logged in you go to skills and then just search for your some keywords that would be related to your concept and in my case i just searched for beer and quickly realized that there are quite a few beer related skills and so i started browsing through those skills and enabling some of them uh especially the ones that sounded similar to my original concept and originally suggested beer was just going to be a simple skill that would suggest a random beer so you would just ask alexa to suggest a beer and you would get a beer suggestion back and what i realized is that there was a handful you know three or four i think other skills that did exactly that and so um that's not uncommon there's a lot of skills in the skill store and so if you if you run into that with your concept you just want to think about how your skill could be different and hopefully a little bit better so what i did is i enabled the skills that were closest to the the suggestion concept that i had and i realized that none of those skills allowed users to get beer suggestions for local craft beers and so i thought it'd be cool if somebody could suggest a beer based on their state or suggest a beer based on a style which is something else that i didn't see in any of the existing skills so the concept was still the same it's a skill for suggestion suggesting beers but the uh the difference was that i was gonna build a skill that would allow users to get beer suggestions for local craft beers and again so if you if you search your uh concept and you see that there's other skills that are doing something similar don't get discouraged just spend some time looking at those skills and figure out how you can make your skill a little bit different and uh and better okay so once you have locked in your general skill concept the next thing you want to do is start sketching out some sample dialogues and mapping out your your skill and i just do that in a in a google doc and uh there is uh a lot more work in planning and design than you um tend to think there is when you first get into it but i start with a name for the the skill and for the beer suggestions example i that was the name that i came up with beer suggestions but as i was thinking about the user actually interacting and the possible invocation requests i realized that um the way that i wanted it to work the beer suggestions name wasn't the right name for the invocation name so i used suggested beer as the invocation name and the reason that i did that is because i really wanted this first and so um in the uh uh alexa environment you can say alexa and then just reference the invocation name and so i made the invocation name sound like an utterance so it's alexa suggest a beer is the first possible invocation request example and that's really what i was most interested in and why i used that as the invocation name rather than beer suggestions so if i had used beer suggestions the invocation would have been something more like alexa ask beer suggestions to suggest a beer and i was just trying to shorten it to simplify it after you've thought through some possible invocation request examples and as you're thinking through these it doesn't necessarily mean that out of the gate you want to support all of these but you do want to spend some time thinking through the the different possible ways that a user will begin to interact with the skill and after you've done that you want to sketch out a couple of the simplest dialogues so in the shortest case what does the dialogue look like and for the suggested beer example a user would say alexa suggest a beer and then alexa would say okay do you prefer loggers or ales the style and then the user would respond logger in this example and then alexa would provide the suggestion in this case i suggest a motorworks vtwin vienna logger i hope you enjoy it in the second dialog i've added the the ability to filter or select by state and so the user would start the interaction with the skill by saying alexa suggest a beer from florida or whatever state and then alexa would say okay what style beer do you like and the user would respond logger and then alexa would respond with the suggestion in this case i'd suggest a vtwin vienna lager from motorworks brewing in bradenton florida so i'm really just providing the brewer and the the location back in this case so these are two really simple dialogues when you start thinking about this i mean there can be lots and lots of them so start out simple and then start thinking about after you've thought through the dialogues and also when you when you do the dialogues and sketch them out after you've thought through them and sketched them out yourself test them out with friends or family and you can do a little role playing you can pretend to be alexa ask your friend or family member to pretend to be the user tell them what the skill is gonna do but don't show them the dialogues just see what they say and that will go a long way to helping you refine your your dialogues and make sure that you're you're on the right track in terms of how the interactions might go after you've gone through that exercise you can start or what i like to do is bullet point the key features and then prioritize them into like key features which are the features that i want to make available as soon as possible and likely as soon as i uh publish the skill for the very first time and then secondary features are kind of backlog features that i might someday want to add as i as i get time so the primary features in this case are features that um i selected because they weren't available in other skills that were similar so that's why they were my primary features and then from there i start mapping out the intents that will be included in the skill and i am just focused on the custom intents here and in this skill it's a simple skill so we're just going to have one intent make a suggestion and then we want to think about the slot values that are going to be required to make that suggestion and so in the case of my um suggest a beer skill i wanted the state and the style in this case of your skill you might choose different slots that that you need to let the user filter for your suggestion the utterances are the last thing that i think about and this list can get very very long so as you start thinking through all of the different ways that a user could make requests or statements or ask questions or provide information to your skill which are all referred to as utterances like we talked about earlier there are lots and lots of different variations so start out with some simple ones and then start building your list out and with the suggested beer skill this list got well over 50 very very fast so that list will grow quickly but the more utterances that you provide the smarter your skill is going to be and the better the user experience is going to be so it's worth spending the time to to do that okay so like i mentioned in the beginning of this lesson there's a lot to know when it comes to planning and designing skills and we've covered some of the basics but you'll also want to check out the alexa voice design guide and you'll also want to read through the developer documentation about understanding how users invoke custom skills and i've included links to both of those resources in the course notes okay now we are ready to start building our skill and we'll get started on that in the next lesson okay so now it's time to take everything that we've learned so far and pull it all together to create a complete skill end to end and we're going to be creating the skill that we talked about in the last lesson the suggestion or recommendation skill and i'm going to use the local craft beer example and it's going to be a skill that lets users get a local craft beer suggestion for a beer brewed in a given state we'll start by creating our skill or setting it up in the developer portal and then we'll head over to aws and we will create our lambda function i have included a link to the code that i'm going to be using for this lesson i put it in github so you can use that as a reference so let's go into the developer console first and add our new skill here and i'm going to call this one beer suggestions and i'm going to use beer suggestions also for the invocation name and and for the interaction model this time rather than using the skill builder beta we're just going to add an intent schema and some sample utterances and i have those that you can use as a starting point on github and so i'm going to take that and add my intent schema here there's just one custom intent in this intent schema called make suggestion and a slot for this example which is the state slot to hold the state that we're going to get the beer suggestion for and then we've got some builtin intents that are required for the cancel intent the help intent and the stop intent we also need some utterances and we are going to use some examples here and build from those or you would want to build from those as you build out a complete skill so i'm just going to include three so the user can suggest a beer from state or say alexa ask beer suggestions to suggest a beer from state and a couple of different variations of that so go next and while that's building we will head over to the aws management console and we'll add our lambda function so we'll go create a function here we're going to select the skills kit for node again but we're not using any of that code this time so it will include the boilerplate code that comes with the blueprint but we're going to get rid of all of this but first we're going to give it a name so i'll say we'll call it beer suggestions alexa skill okay we'll get rid of that and down here we're going to start with a just a bare bones hello world skill here all this skill service does is and you can type that in for practice uh but um all this does here is includes some handlers for builtin intents to help cancel and stop intent and then an unhandled uh intent handler here so if the skill doesn't know what to do with the request that comes in this is going to respond and then the launch request just right now responds so when you go alexa open in our case beer suggestions it's just right now i'm gonna say hello world so it's not doing a whole lot there we're gonna build from that and then we just select the execution role and we say next and then create function and now we have our arn here so we've got our lambda function and the arn is going to be used back over here in the developer console as our endpoint so i'm going to paste that in just like that and now i just need to test to make sure that everything is working up to this point so i'll say uh open uh beer suggestions that see if we get a response back and we do and as you can see it's just saying hello world now so not doing a whole lot so what we're going to do at this point is we're going to go back over here and we're going to go to our code and we're going to change it up so that users can ask for a beer suggestion by state and you can expand this here which makes it easier in a future course we're also going to take a look at some different code editors that you would maybe use in your local environment so if you use mac or windows and if you're making a more involved skill you'll definitely want to use a code editor this is great for just getting started and doing simple skills in the browser but uh not probably ideal for anything beyond something that's pretty simple like what we're doing okay so let's go back over here i've got the um the code that we're going to use for for my example here you'll want to modify this if you're picking a different topic but it's going to work for the most part the same way so we're going to start with this here which is uh the data that's going to hold our suggestions and so in this case here this is a a javascript object and it's providing in my case just three um three objects within the the object so that so this is actually a an array of objects and there's three objects in here you can kind of think of this like an excel spreadsheet each one of these would be rows and then for each one of the rows we've got two different cells with values so we've got state or columns and suggestion and then a value for each one so what we're going to need to do is we're going to need to when the user requests a suggestion for for example florida here we're going to need to loop through these find florida and then read back the suggestion and i see a typo here too so this is supposed to be georgia that okay so the next thing that we're going to do is we're going to provide the code that is going to do the looping and searching for the response and this is outside of what we've talked about up to this point but i want to show you what's going on anyhow so that now this is just a a little code snippet that i wrote in javascript that we're using in here and i'll tell you what it's doing so this is a javascript function that's going to loop through this data and find the uh the value for whatever is passed in as the property name and the value here so the property name in this case we're going to use state and then the value is going to be whatever the user has asked for and that gets passed over as the value of the state slot from the alexa service okay so next so i've got my data and i've got a way to search through my data here so now i want to go in here and i want to add a handler to do that searching so i'm going to go over here and i've got just one handler function for my one custom intent which is my uh make suggestion intent so i'm gonna grab that and i'll tell you what is going on here also um okay so we're setting the state slot variable value to the value that comes over with the request for the state so the alexa services making the request and within that request the slot state value is what we're setting to the value of this uh variable that we're creating here and now down here we want to respond back with the data suggestion or the suggestion from our data up here so that's where we use our get suggestion function that we created earlier here so we're responding back calling this function get suggestion passing in our data which is all of this here that we call skill data and setting the property name which is state and the value that that function needs we are taking from here that's being set to what the alexa service passed over and then i am setting that to uppercase to ensure that it matches my data here and then when it finds that it will reply back or provide back the uh the object with the information that we need with the suggestion and so i pull the suggestion from that object to write back or to to respond back to the user okay the only other thing that needs to happen here is we just need to change up the launch request so that when the user opens the skill uh we're telling them what to do and so i've got this here and i'll grab this let's see and we are gonna paste that in so now when the skills open alexa says i can suggest a beer from any state in the united states what state would you like a beer suggestion for and then the reprompt asks them to uh to give a state if they don't respond within a few seconds okay at this point we have everything that we need for the skill service and i'm going to go ahead and save that and if you're creating a skill using a a different topic which you probably are you can change up the slot name here you could also if you want to expand it a little bit you can add some additional values and and use those in your response as well down here but at this point i've got my skill service built out now i just want to go test it so i'll go back over to the developer console here and go into the service simulator and uh start by opening your suggestions again to make sure that that is working and now i just want to try like one of my utterances and i'll say from florida and that is working so my suggestion for florida and if i go back over here just to verify yes that's what it's supposed to be responding with of course when i finish this up i want to add all 50 states and i'll want to add a real suggestion for each one of the states whatever beer i want to respond back with i don't think i've had a beer from all 50 states but that's maybe something i can put on my todo list okay so let me just test with one other state i'll test with alabama and okay it is working so at this point i've got my skill end to end set up i've got my interaction model i've got my skill service i'm testing it everything seems to be working and now we are ready to polish it finish it and then submit it for certification so we'll talk about that in the next lesson so after you have finished coding up your skill you want to test it and retest it and test again testing is is super important we talked about it in an earlier different ways of testing in an earlier lesson and you really want to spend time going through and considering different utterances and testing those utterances and uh in polishing the the skill and once you've gotten to the point where you feel pretty good about it you've tested it in all the different ways that you think a user might use it and all of the utterances that you've provided then you want to start getting your skill ready to go through the certification process so that you can get it out there and make it public and available for everybody else to use and that's what we're going to talk about in this lesson if you go to the the the test tab for your skill or the test section there's a link all the way at the bottom c certification requirements in our technical documentation you'll want to read through this we'll talk through some of this stuff but you want to be familiar with the certification process and the requirements especially the guidelines around the um uh invocation name you'll want to take a look at the invocation name guidelines and just make sure that you've dotted all your eyes and and crossed all your keys before you uh submit for the certification process but once you've done that you fully tested it yourself then you would go to the publishing information here and complete the required information here which is pretty straightforward so you're going to pick a category that your skill will be classified in and for the beer suggestion example i'm gonna use food and drink and wine and beverage and then testing instructions um i'm gonna just say no no special it's just there's nothing special about the the testing here but you it does require you to provide something so i'm going to add that in there let the skill i'm going to let it be available for any country even though it only gives suggestions for states in the united states right now maybe somebody's traveling and wants to try a local beer then you would provide a description a description for the skill um find local beer by state and you probably want to come up with something a little bit better for your skill and for the skill description something that's going to get people excited about wanting to try your skill but just to walk through this i'm going to go with something simple and then you want to provide some example phrases and this is going to let users know how they're going to use your skills so it might say alexa ask beer suggestions to suggest a beer from florida maybe we'll say alexa open beer suggestions and suggest a beer from something like that so you want to fill these out in ways that would show your user how to use your skill and then provide some keywords down here these are optional but i'll do beer craft brewing something like that and then you want to provide some uh some icons so these they do need to be the the right size so 108 by 108 pixels for the small icon and 512 by 512 for the larger icon and i've got some created that i'll use here so this is my small icon and my large icon here okay and from here you need to go on and uh answer some questions about privacy and compliance so does the skill allow users to make purchases or spend money and in my case no does it collect personal information no does it target children under 13 no and then you'll want to read the export compliance and agree to that and then last does it contain any advertising and no and then this down here you do need to provide a privacy url and a terms of you use url so i've got those on my site and they do check these so at least they make sure that there's something there so you do need to provide this and i've got the other one is called terms and then once you have this you can hit save and at this point we're ready for certification so i could just click submit for certification and this would go through the certification at this point there's also an option before you certify to test your skill with other users beta users so if you want to do that you would provide email addresses for the users that that you want to test and then it would uh send out an info like a link for them to to try it and if they approve then they would be able to test your skill that way before you certified it so that's uh that's an option the certification process the the um experiences that i've had it's you know a day or two it's pretty quick and if you uh if it doesn't get approved for whatever reason the response back is is very clear on what you'll need to do to to fix it and uh once you fix whatever the issue is and resubmit it uh the the process goes goes pretty quickly it's still you know the last time i had one that wasn't approved it was i think it's just a few hours later after i fixed it and they reapproved it so goes pretty pretty quickly but at this point you have a complete skill that's ready to go and ready to uh ready to be certified and from there it will be live for anybody to to use it so that is our last lesson we will review in the next lesson and talk about some next steps from there so congratulations you've completed the course you should now have a solid introductory level understanding of how to build custom alexa skills and hopefully you should be really close to having your first skill published from here you'll want to practice what you've learned thus far and then move on to some more advanced topics here's some suggestions for possible next steps first subscribe to the dabble lab channel on youtube i publish a new video there every friday and most of those will be related next get a code editor coding in the browser like we did for this course is fine for getting started but not for developing more advanced skills i use an open source editor called atom i like it a lot it works on mac linux or windows and best of all it is free consider taking a javascript course if you want to build more advanced alexa skills at least with node.js most of what you'll need to know is javascript we talked about javascript at a very high level but you'll want to dive deeper there for sure you'll also want to learn more about nodejs learning node mostly involves learning javascript but understanding how node works and how to use node modules can make your life as a coder much much easier the node module you'll want to be most familiar with at least for alexa development is the alexa skills kit sdk for node you can learn more about that by going to github.com alexa and while you're there dig into the sample code in the alexa cookbook well that's it i really hope you enjoyed the course and i also hope that if there is anything that you think i can do to make it better that you will let me know and if you have any questions about anything that we've covered please don't hesitate to leave a comment and i'll respond just as quickly as possible thanks again for taking the course i hope to see you in a future course you