hello everyone here at free code cap i hope you are ready for this video it's going to be a super exciting one that personally i have been looking forward to sharing with you for a long time it's exciting for two reasons one i'm gonna be introducing to you a new technology that makes creating games super easy allowing us to spin up games like this in minutes two i'm going to be using this technology to show you how to create some classic games such as mario zelda and space invaders step by step so that you can have your own game to take improve on share with your friends barista yoga instructor whoever you wish so before we get to that let's start with the reason number one the new technology for those of you who haven't heard of me my name is anyakubo and i'm a software developer and course creator on youtube who love to teach through building games and this specific technology is built exactly for that we are going to be learning how to use kaboom js kaboom.js is a javascript library that helps you make games fast we are going to be using this library to simplify creating scenes adding layers creating sprites directly in the project or importing them based on your preference dealing with actions and collisions adding key events debugging and so much more this simplicity allows us to enter the world of game development at a low barrier of entry and gets us coding without being disheartened due to pages and pages of documentation which is common in the game development process we see today the ability to spin up games so quickly is something that the folks at replit the collaborative browserbased ide have been passionate about developing for quite some time they wanted the end product to empower everyone from kids to beginner devs as well as intermediate programmers to start creating games with as small a learning curve as possible great now that we have learnt a little bit about kaboom js let's get to using it in the next section i'm going to go over the basic concepts of kaboom js i'm going to show you how to import kaboom js and get it up and running initialize the project start the game add a scene create some sprites as well as show you all the other things we can do with it once we have the basics we will be using this knowledge to create our three games as well as learn more things along the way if you do need to refer to a section of the video after we have learnt a concept please refer to the time stamps in the description of this video each time stamp will take you directly to the section annotated next to it now i do advise that you not skip ahead of some sections of this course as the chapters are done in such a way that will build on the knowledge you gain throughout the only prerequisite i ask of you is to have a basic understanding of the fundamentals of javascript before starting this course but if you're feeling adventurous please do have a go of following along anyway like i said this library is intended to make javascript coding a whole bunch easier by providing a layer of shortcuts if you will to create games i for one i'm super excited about what you all end up building with this javascript library so please do share your final games with me and with us on twitter youtube instagram wherever you wish okay so what are we waiting for let's do this okay so first things first in this section i'm going to show you some of the basics into getting started with kaboom.js here are all the functions and methods to your disposal in the kaboom.js library i will be covering the core concepts so all the ones in red in this section the others we will learn along the way while coding our games by the end you should have a firm understanding of kabum and what you can create with it okay so to start things off i'm actually going to start off on the kaboom js website i'm starting off here because it has all the documentation that you're going to need to refer to after this course so if you do get stuck or perhaps you just want to do some extra reading this is the place to go to now to get started i'm going to actually utilize the kaboom environment on replit which has been premade for us and configured in order to get going a lot faster so i'm just going to gravitate toward there now i'm going to click here on kaboom environment on replit and i'm just going to sign up now please take your time signing up here i'm just going to click on the gmail sign and it's going to take me straight to my dashboard fantastic so here you will see some rebels i've already made however i'm going to show you how to make one from scratch all you need to do and you can use all different languages as well but however so i'm just going to click here as this is a kaboom js tutorial we are of course going to choose kabum so i'm just going to click now and you will see a lovely random name has been generated for my project now feel free to change this if you wish i quite like it so i'm just going to keep it and click create repel and there we are our kaboom environment is now loaded so as i said this has been already configured for us the only thing i'm going to ask you to do is click here and check there you are on version 5. if you are not and there is a newer version out there then don't worry feel free to code along however if you do find that something is not working quite as you would expect then make sure to change it to version 5 and refer to the documentation to see what has changed since this tutorial great now i just want to cover the basics these basics are going to be things that we're going to use throughout all three tutorials which is why i think it's great to cover them now together the first i'm going to show you how to do is add a sprite so let's do it to add a sprite in replit we have this really cool feature that will allow us to actually create a sprite in the platform itself this is great as we don't have to rely on a thirdparty service such as a pixel maker or just sort of an editing software for images we can make everything right here so to do this i'm just going to click here and what shall we call our sprite i'm just going to call him her player and put width and height of 40. so now i'm just gonna create my player um so i'm just going to go ahead and do that now let's make them purple and then i'm just going to make a little alien because i think that's quite fun so here's my little alien um there we go he looks a little bit like monster munch if you know that was crisps so there we go there's my alien i'm getting some little eyes there they are great so now if i click main and i am simply going to use the kaboom method of add open up some parenthesis open up an array and i am simply going to use another kabum method called sprite and i'm going to pass the string of whatever i called my sprite so i'm just gonna go like that and click run and there we go we have added a sprite to our game board that was pretty easy and pretty painless we can do a lot of other things too so if i think my sprite is too big i can scale them by 0.5 and click run so there we go they are now half the size i can also use position so i can position my sprite and the first value is going to be the xaxis and the second is going to be the yaxis all stemming from this point right here so if i put 20 20 well our sprite is going to appear right there because i've applied 20 pixels to the left and 20 pixels from the top so pretty painless let's carry on the next i'm going to show you how to do is add a level so to do this i'm going to use another kaboom method called add level making sure that it's camel case i'm going to open up a parenthesis and open up our braces sorry square brackets so the first argument is going to be our map and the second argument is going to be an object which is going to be our config for our game so let's start off with the map first i'm simply going to draw out what i want my map to look like using uh quote marks so there we go i'm just going to use the quote marks like so i don't know how many we want but let's okay let's just have this many and then i'm going to make x's for the ground so make sure that it's in the quote marks now we need our config let's also put something here okay so this there we go now we need our config so the width and the height are going to be the width and the height of every one of these little objects here so i'm going to put 40 and height 40 as well just to be um the same as these sprites and now i need to define what all these objects are so i'm going to grab the x and this is the syntax i'm going to open up my square brackets and this x is going to be the sprite of and then let's make a ground sprite so once again width and height 40 i'm going to create and then let's make our ground so my ground is going to be i can even add more colors if i wish but i'm pretty happy with these there we go so we made our ground so now i'm going to use ground so once again i'm just going to use the string of ground and click run and there we go we have added our ground this is looking great the next thing i want to do now i think we should apply gravity to the sprite so i could do so easily by using body like so and clicking run and there he goes he falls with gravity we have just applied gravity to the sprite but obviously we don't want him to fall through we want him to fall on the ground right that makes sense so i can now assign the component solid to the ground just like so and he stops now let's add an enemy so i've decided that i want anything with the at sign to be an enemy so let's grab the enemy and then i'm gonna use so we're gonna have to make another sprite that's gonna be the enemy um i'm not quite sure what enemy we're going to have so i'm just going to create a little enemy i'm not sure what an enemy looks like so i'm just going to create something um of course feel free to take your time with this i'm just going to create a little bumblebee thing because you know for some reason i think bumblebees are now enemies don't be deceived by their cute little looks and let's give it a little face so there we go there's my little enemy now so i'm going to use enemy like so and click run so we've added our enemy i can have as many enemies as i wish on the board so i'm just going to click run again and there you go so i don't actually want that many let's just keep one for this tutorial and perhaps let's scale them down so i can apply scale here too to scale 0.5 brilliant okay so we've added our sprite we've created our game board the next thing i want to show you is how to move a little sprite across the boot so to do this i'm going to have to assign this to something so i can keep reusing it in our code so let's perhaps assign this to const layer now using key down i'm going to pass through right and then pass through what i want to happen if i press the right arrow on our keyboard so what i want to happen i'm just going to function so when we press right this is going to happen this function is going to be called so what i want to happen is i want to grab the player i want to use the kaboom method of move and once again just like with position i'm going to pass through an x and y axis um let's save this as move speed let's make it 200. so we can reuse this in our code so i want to i want this to be the xaxis and i don't want a sprite to move up or down i only want them to move left or right so that is what i've done here by passing a value to the xaxis of 200 and 0 to the yaxis so now if we run this and i'm just going to press the right button there it goes and there it goes so now i can actually copy this and do the left and for left i simply need to put a minus so that it goes the other way on the x axis so now there we go our sprite is moving left and right i can also use key press the choice is totally up to you now we've covered how to make a sprite we've covered how to add the level we've covered how to move our sprite i'm going to show you one last thing before we move on and that is what happens when two things collide so i'm going to do that down here i'm going to grab our player and if he collides so this is another coupon method with anything with the tag of dangerous so i'm just gonna add the dangerous tag let's make this perhaps a little bit dangerous tag to our enemy so we can reuse this tag we can put this to a lot of different sprites but i'm just going to give it to the enemy for now so if our player collides with anything with the tag dangerous well what do i want to happen let's pass through a function i want a player to be destroyed so let's do that now let's also perhaps add gravity to the enemy and if our player collides with anything with the tag of dangerous well i want to destroy it so i'm going to use the method of destroy and just pass through our player so let's run that now both of them fall i crash into the ferry and i disappear my little sprite gets destroyed great so we have definitely covered all the basics that need we need to get started on our tutorials please feel free to have a pause here uh and have a play around in your replica boom environment before we get going just to feel a little bit more comfortable about doing stuff for yourself okay so once you are ready i think it is fine for us to carry on let's do it let's start off with space invaders best okay so let's do it let's build space invaders once again using the kaboom gs environment in replit so i'm going to start off with making another rebel so once again i'm just going to click here and i'm just going to click ok and once again a random name is generated for me feel free to change it if you wish or keep it the choice is up to you and i'm just going to click create reply great so now we are here let's get going the first thing i'm going to do is actually start by perhaps creating our map so just like we did in the intro i'm going to use the kabum method of add level and i'm just going to open up an array for our map and an object for our config so now in here let's start creating our map so i'm just going to put a few of these so i think let's have a left wall and then let's have some space invaders so i'm just going to decide that i want the little hat to be a space invader so i'm just going to put a few of these let's have 10 1 2 3 4 5 6 7 8 9 10 or perhaps more what do you think let's put a few um the choice is totally up to us and then some spaces and then i'm going to have an and sign our ampersand for the uh right wall because we need to tell our code what is going to be the left wall and the right wall for collisions i'm just gonna have three rows of these space invaders and the rest is just going to be a left wall and the right wall so just like so i'm gonna have a few of these because it's gonna be quite a big board for us so we have a lot of space to play around with okay now let's do our config so i'm going to decide that i want each of the elements on my board to let's say have a width of let's say 30 and i'm going to make the height 20 or so or 22 and then i'm going to define what everything is on my board so perhaps let's create the sprites first because we need a space invader like so and let's make it width 30 height to 22 and click create so now i'm just going to create my little space invader guy once again like please feel free to make your spins vader look however you wish this is how i've chosen to make mine of course the choice is completely up to you so similar to like we did before but here's my little space invader it's going to give him some little eyes and great so i'm happy with that now i'm also going to create a left wall so perhaps let's just use wall for this because we can reuse it and width 30 height 22 and click create and for this i'm just going to color it black fantastic so now let's go to adding our sprites so i've decided that i want these little hats to be our space invader so this is the syntax i open up an array and i'm going to use the kaboom method of sprite to then find the space invader so i need to get the space invader by using the string of whatever it's called and then so that is the first one and then let's also make a so we decided this we want to be a left wall well i can reuse the sprite for wall so i'm just going to open up an array and use sprite and then pass through wall like so even though i don't know why wall so we have our wall i'm actually going to give this the tag of left wall so we can use it in our project so left wall and i'm going to copy this and then this time i'm going to use the ampersand and this is going to be the right wall so just like so now if i run this there we go so there are little space invaders there are walls i can maybe let's scale this down a little bit or perhaps maybe let's just get rid of that because we don't really need it and click run so yeah perhaps let's scale everything down um i'm gonna scale everything down just up here now i can actually change the scale of this whole game board by going to kaboom and scaling it down to just one because at the moment we are double the size and clicking run okay so there we go i think that looking that is looking a lot better and we can see our whole board fantastic the next thing we're going to do is add our player so const player and then using the add method again so just like we did in the intro i am going to add the player so this is going to be a sprite that is going to be a space ship now let's go ahead and create our little spaceship so once again i'm just going to click space ship and create it with a width of 30 and a height of 22 and click create now what how should we make our spaceship let's make it orange and i'm just going to make it look a little bit like so please feel free to of course make this however you wish but i'm happy with that so now i've got my spaceship i'm just going to get rid of this again i'm actually going to give it a position so i want to position it in the middle of my screen so i'm going to use width divide by two and height also divided by two just like that and then oreo gin the string center and click one okay so now my little player is in the center um i also might want to scale it up if i wish i don't think i do at the moment i do however want to scale my invaders because i don't want them to take up the whole square so i'm just going to do scale 0.7 like so and click run great so now they are appearing a little bit smaller the next thing i want to do is actually assign keystrokes to my player so i'm going to do key down so this is to make our player move left and if i click left well what do i want to happen let's put a function and find out if i press left i want to grab the player i want to move it and then let's have the move speed so const move speed and let's say that is 200 so now i can use the move speed and put zero and because we're moving left this needs to be a negative and let's do the same for moving right so i'm just going to replace this with right and then not make this negative so let's check that out if i move or press my little keys there we go our player is moving left and right this is pretty cool now the next thing i want to do is add a score so i'm going to do this the first thing i'm going to do actually perhaps let's move on constant to the top of the file i'm just going to paste it in here and i'm going to get layers so in my layers let's open up some our array i'm going to have the object layer for where all my objects are a ui layer where i can score store delay swa store the score without affecting everything on my board and then i'm just gonna make the default the object player so if it's not sure that is the default layer great now that we have that let's add our score down here i'm going to say quant score i'm going to use the add method so the kabum method to add this time i'm going to add the text so i'm going to start off with zero and then position and i'm going to just put in 50 50 to position the score and then if we want we can scale it up but let's just see how it looks i'm going to put it on the ui layer so that is how we will put it on the ui layer and finally i'm just going to have an object of where the score value is going to be i'm going to start off with 0. so just like that so now if i run this we get our score you can sort of see it it's a bit small i might actually scale this up so scale by three just to show you where it is okay so now it's a lot bigger you don't have to keep it the size you can also move it if you wish so we've got our score the next thing i want to do is perhaps let's start um moving the uh invaders before we start doing anything else so like adding a timer or let's add the let's add the timer okay so const timer equals and once again i'm going to add open up an array uh i'm also going to start with text thing zero and then let's position it so i'm just going to position it below the text the score text let's make it scale just by two this time and again i need to add this to the ui layer and i'm going to put the oops and let's have an object that has the time which is the time left so const time left let's say we want i don't know 14 seconds for now so i'm just going to put it 14. we can of course always change it so there we have that let's click run so that is our score and that is our time left let's actually make our timer move down in time now so i'm going to grab the timer i'm going to use action so that is another kabum method and action essentially runs every um i'm just going to show you the documentation action actually gets called every frame so okay just keep that in mind i want the timer to so let's get up our curly braces um it's gravity time is time so this right here and i'm just going to make it decrement by delta time this is delta time since last frame so just remember that and now i want the timer text to be the timer's time this is going to be delta time click run so now it's counting down from 14 as we said we want it to be from 14 seconds let's perhaps shorten it because that's too many points after um that i need so i'm just going to fix that to a fixed uh length so two fixed two there we go so that is looking pretty cool that is our timer and of course we need to write what happens when we run out of time so if uh the timer time is suddenly smaller than or equal to zero well what do we want to happen we want to lose so we're going to write a loose scene in a bit um or we can write it now sure why not go to the this is how you go to another scene go to a lose scene and take the score with you to score value so let's go ahead and write our loose scene so in here we are in the main scene i'm going to add a loose scene just like so and my loose scene is simply going to be so i'm just going to use add and i'm going to add the text of the args so augs is anything that we pass through into this scene args school so we're gonna add these score uh as text and we're gonna let's also position this urge origin center um let's make it really big let's make it scale ten and then let's put the position let's also grab the width of the screen divided by two and grab the height of the screen and divide it by two cool so that is oops really it so now i'm just going to make the time a lot shorter because i don't really want to wait around for that long so great so um we do need to fix this however i am going to just carry on because we're not actually adding anything to the score quite yet nothing's happening with the score so we'll go back to this uh in a bit so i'm just going to leave this as 100 for now while we continue coding okay so it's just going to keep uh running from 100 just ignore it for now so we have that um perhaps actually let's that's quite distracting i'm just going to comment that out so there we go don't forget to uncomment that out later but for now i'm just going to keep it like so and then comment this out uh too okay great now let's get our space invaders moving left and right i think um yeah i think that'll be fun let's do it so i am going to use uh for this i'm going to use action so that's another kabum method and i'm going to grab anything with the tag space invaders so just make sure that the space invader has that tag which it doesn't let's go ahead and add that tag here so i'm just going to put the tag of space invader space invader so anything with the tag space invader well i'm going to pass through s for the space invader into my function because i want the space invader to move at a uh speed okay so what should we make the speed um const space well let's just go invader speed that's fine and let's just make it 200 for now so i wanted to move on the xaxis with invader's speed so let's do it let's see our space invaders move okay so they're moving they're moving really fast maybe let's make it a hundred but they're moving off the board so this is why i wanted to have a left and right wall because i need to write a collides function so i'm gonna do so like this i'm gonna get collides and if anything with the tag space invader collides with anything with the left wall or let's start with the right wall first maybe the tag right ball well what do i want to happen well let's get a function and find out i want to change the speed of the invader speed so i'm gonna get const current speed and for now let's have current speed as the invader speed so i can just use current speed here and if there is a collision well what do i want to happen i want to get the current speed and i want to change it to negative invader speed okay so i'm going to change the speed and i'm going to use every and for every space invader so i'm going to grab all the space invaders and i'm going to so not only change the direction i want them to move down so i'm just going to pass through object we can call this as the space invader again if you feel more comfortable so we could do that for every space invader well i want this space invader to move down so this time i need to affect the yaxis and i'm just going to do level down so let's define level down const level down and let's say 50. so let's check it out ah yes of course this will change so we need to make this a let thank you for letting us know okay great so now we just need to do the other side perhaps let's make the move down more by a hundred and i'm just going to copy this and i'm just going to paste it and change it that if they collide with the left wall well i just want the space invader speed to be not negative anymore but i still want each of them to move down so let's try that okay great fantastic i still think this should perhaps be bigger so let's try that again but it's totally up to you okay you can make this as hard or as easy as you wish i'm just going to increase the board size here because i think it needs to be a bit longer to make sure that our um spaceship fits in it so there we go that's better fantastic so we've got our little invaders moving down the next thing i want to do is start spawning bullets so let's do that now actually perhaps that's right what happens when the player collides with the space invader yeah let's do that so i'm just going to refresh if the player overlaps with a space invader well once again what do i want to happen well i want to go to the lose scene so once again i'm going to go to the lose scene just like so i'm going to pass through whatever the score is score value value okay so that should work and also if the so action if the space invaders suddenly go too low so just in case they miss my um spaceship space invader what do i want to happen well i'm going to grab this space invader so if they suddenly get like below a certain so obviously they've just gone off because there's no wall if they get around here i want them to um i want us to go to the lucien as well so if uh the space invaders position y is suddenly smaller than sorry larger than the or equal to than the height itself so you could do it so it's the whole way or you could do height divided by two it's totally up to you that looks like halfway to me just about then we want to again just go to the loose scene fantastic so let's run that and let's see how we do so while that is happening i'm just going to carry on because i want to spawn some bullets so perhaps let's just move this to the top of the file as well just to keep everything neat okay so you've done all this time to spawn some bullets okay great so we are getting a massive score show up we've got zero score um that is looking good as soon as we collide with the uh spaceship we go to the losing scene so let's see because i was passing this through incorrectly so that should be it now let's spawn some bullets so once again where we have this here i'm going to do key press because if we press a key so i'm going to do if we press the space bar i want to spawn a bullet so i'm going to write a function called spawn bullet for this just going to do it up here function spawn bullet like so i'm going to pass through the position of the player to p for player i'm just going to add a rectangle so i could do so by using rect so that is another kabum method and i'm going to make the rectangle that big and then i'm going to position it to wherever the player is and then origin center let's give it a color so color 2.5 0.5 one just gonna space this out so it's more beautiful for everyone and i'm also going to give it the tag of bullet for later because we we need to know if we collide with the bullet so there we go that's the function spawn bullet and if i press key space i'm going to use that and i'm going to pass through whatever the player's position is at the time so player position and i'm just going to well let's do this for now we need to do add actually we need to add some position okay so let's try that okay so there we go we are spawning a bullet now if i want to make that a little bit higher i could do something like this see and now the bullet is being spawned a little bit higher than me cool now let's get the bullets to move right so i'm going to do that now i'm going to use action so just like that to pass through anything with the tag of bullet to anything with the tag of bullet that's why we give the bullet a tag and b for bullet is what i'm going to pass through into the function now i'm going to move the bullet to grab b and then use the kaboom method of move i'm going to move it minus and then we need a bullet speed so this is the yaxis bullet speed let's make it 400. okay so i'm going to grab the bullet speed i'm going to put minus so it goes up on our board because remember xaxis yaxis now if i'm just going to destroy the bullet once it's out of the scene okay just for performance issues in case it has any performance issues so i'm gonna grab if the uh bullet's position y position is suddenly smaller than zero well then i want to destroy the bullet okay great so let's try that oh amazing and now let's actually write something for the collision so collides and i'm going to grab the bullet i'm also going to grab these anything with the tag of space invader and then let's pass through a b and an s one for bullet and one for space invader and what do i want to happen well i want to destroy the bullet i also want to destroy the space invader and i also want to add one to the score so score value plus plus just use the increment operator and let's actually show the uh score value and the text because we hard coded it as a zero string zero before i can also add a cam shape so i'm just going to do that now let's shake the camera can shake and let's run it so now poor cow shake come shake how fun is that amazing um what's up these score text is not updating though why is that score value right sorry the score value needs to be the score text we okay how fun is that we can of course make the game harder or easier um just do it however you wish you can add more space invaders too it is completely up to you so now let's uncomment the timer as well i'm just going to move the constants to the top just because i think that is best practice and then did we have another one bullet speed and then of course please feel free to tidy this up too i think that is looking okay though and click run great uh let's make the time left maybe 30. so like i said you can do this by time you can do it however you wish you can add more space invaders you can uh slow down the bullet speed you can do so so much um it really is up to you let's actually move that timer out a little bit because i think so yeah the xaxis i think i said y before the xaxis let's make it a hundred okay great now i'm gonna do one last thing before we go and i'm just gonna change the background to be black so i don't want to clear color i want a black background to run okay and there we have it we have now finished our game it looks really fun like i say this is just the basics to get you going we've covered all the functionality that you need but it is up to you to really make this game your own take it to the next level you know add another level if you want and more space invaders um of course add more scenes if you wish there really is so so much you can do with this game uh let's just check that the lose works and it does we get the score showing up if our space invader collides with our spaceship so that is it um one thing that i would suggest is perhaps add a winning scene so if you shoot all the invaders that's something you can do uh i've already mentioned adding new levels that is something we're going to cover in the next tutorial so if you want to learn how to add more levels please stick around mario up next okay so well done creating space invaders now it's time to move on to creating mario again in the kaboom replit environment as you can see i'm already in my replica kaboom environment if you have skipped ahead to this section i would recommend watching the basics section in order to understand how to get to this point once again i'm just gonna check that i am on kaboom version five if you are on a later version of kaboom currently then please do refer to the documentation if you feel something isn't working quite right to see what has been updated since okay so great i'm actually just going to start off with our scale being one and let's do it the first thing that i'm going to do is actually load up my sprites so in space invaders we drew the sprites this time i'm going to upload the sprites so i can do so in the kaboom replit environment quite easily just by this button right here so as you can see i've already created all my sprites the next thing i'm just going to do is click them to upload them like so so there we have our block you can see the name of the file is exactly what our environment calls our sprite i can then do a blue brick so just like so a blue evil shroom some blue steel and then a blue surprise a brick a coin an evil shroom one i'm not gonna have evil shroom two let's have mario standing a mushroom a pipe left a pipe right a pipe top left and a pipe top right side so we don't need all of them and then a question box and then an unboxed box so hopefully that should be it this is looking good the first thing i'm going to do is add my map so let's do it i'm simply going to write const map like so open up an array so just like we did in space invaders and i'm just going to draw my map how i envision it for mario so i think that should be okay please make sure to keep everything in the quotation marks for this to work so i'm just gonna keep pasting just like so okay and then i'm going to create a ground i'm not sure which ones i want to use for the ground but i'm just going to put the equal signs as a ground for me for now on and then perhaps some spaces too so there we go that is looking good the next thing i want to do is decide where everything else goes on my little map so i'm going to have some pipes here once again i am using symbols which i'm going to assign values to in a bit so there is my pipes i'm also going to have some mushrooms so what should i use for the evil shroom sorry let's use these little things and then i'm going to have let's say one two three four one two three four up here let's have a coin surprise and then perhaps some more bricks so let's do a brick and then another surprise this time let's say it's a mushroom surprise another brick and then a coin surprise and another brick so that is looking good i do think we perhaps need to make this a little bit wider so i'm just going to add some length to our grid okay so just like that you can feel free to make this as big or as small as you wish that is all the button okay so we have our map let's carry on now to add this map i'm going to use a kaboom method called add level which takes two things the first is an array which is our map and the second is an object that is our level config so we already have our map so i could just pass through that array like so and then let's do our level config so i'm actually going to define our level config up here let's call it const level config you can call it whatever we wish in camel case i have chosen to do this and we know that it's an object so now i can just replace this with that just like we did with the map now that we have our level config we need to do a few things i need to define how big and how small so sorry how wide and how high i want each of these elements on my board i'm going to say i want each of them to be 20 by 20 pixels now let's start defining things so i'm going to use this because i already know that this is a block so i'm gonna this is the syntax for defining what the elements are i'm gonna open up my square brackets i'm gonna use sprite just like that and i'm gonna pass through the block as that's what i want here so that is going to be my block let's carry on defining some more things while we are at it so we've got our block i'm going to say that the anything with a dollar sign is going to be a coin anything let's carry on so we've got that we also want to have a surprise so this is going to i'm going to use the sprite of surprise so here we have the surprise oh do we have the surprise the question is the surprise so that is what we have i can actually should probably even call this question and not surprise so quests just like so and i'm going to actually say that anything with this sign specifically is going to be a coin so price okay so we've got that and anything i'm just going to copy this because i still want to use the same sprite however anything with this sign now i want to be a mushroom surprise um so perhaps let's make this a little bit smaller for now because we don't really need it okay so we've done that the next thing that i want to do well i'm just going to probably add all of these for now that's probably the easiest thing to do so anything with this it's not on the board i want to be the unbox so i'm simply grabbing the string of unboxed and i don't think this needs anything at the moment so i'm just going to get rid of that so we've got unboxed the next thing i want to do is the pipes so this is going to be pipe bottom left or just pipe left actually so we've got a pipe left let's also have a pipe right i'm just going to move this up now we need the top pipe parts of the pipe pipe top left side making sure that it's exactly spelt exactly the same and then pipe top right side and that is going to be a plus okay so we've got that we also want to have an evil shroom so once again i'm just going to copy that and then we have the little hats as the shrooms so i'm just gonna say this is an evil shrimp i have the number one in there um we don't have another one for now so i just have to make sure that i've spelt it exactly the same so we've got our evil shroom the next thing i want to add is stuff that we don't actually have yet so i'm just going to say that this is going to be a mushroom we have a bunch of blue things for the next level but i think i'm going to leave them just for now so if i run this now here we go let's get rid of this because we want to be able to see our board fantastic i do need to scale some things in order for everything to fit for the purpose of the tutorial so i'm just going to get rid of some of these now um of course like i said you can make this as big or as little as you wish in your free time but as this is a tutorial i want to be able to show you everything comfortably um so yeah feel free to make this your own when you can and when you finished coding along with me okay so i think that is much more manageable let's carry on um i'm gonna actually get rid of maybe one more just just because i do want everything to fit comfortably if i'm being honest okay okay okay so that's looking a lot better now i don't want these to be these bricks and i want to scale these so i've done this on purpose so that i can show you how to scale sprites directly from the config so i can now use scale 0.5 on all pipe related things because all the pipes seem to be too big so i'm going to scale each of those and just click run and perfect now the pipe is exactly the size we wish without having to change the pixel the png or the jpeg itself so that is done one thing i also want to do is perhaps change the bottom to be this brick right here so let's go ahead and do that i'm going to copy this and then let's maybe make the brick an x and call this brick and i'm just going to replace so i'm going to use command d to replace all the bottom once like so with an x and hit run awesome so now i can change the background as well this is something i can do now or later the choice is up to you i would simply have to go here and i'm just going to select the color and then click run oops and there we go great so we have our board the next thing i want to do is add mario so i'm going to do so right down here i'm going to say i'm going to use the add kabum method to add a sprite and i'm going to add the sprite mario standing because i think that's what we called our mario mario standing that's correct so i'm going to add that to our board and i'm also going to position him so at the moment i'm going to position him just sort of at the top here so let's go ahead and click run and there he is now i want to make him fall so let's i'm just going to format this a little bit neater so it's more readable for everyone so i can make mario 4 if i want i can apply gravity tomorrow i simply have to do so by adding the body component to the array just like that and there he goes but we don't really want him to fall through the ground right so we can actually prevent this by making the ground so the brick solid so now if i click run it stops so while i'm here i'm just going to decide what else i want to be solid i definitely want the brick to be solid and i want all the pipes to be solid too so i'm just definitely going to make all of these solid like so i'm going to make the evil shroom solid too as well as the blocks themselves and anything with the sprite question so a whole bunch of solids there okay great so we have done that now um i'm just going to move this out so you can perhaps read it a little better that's that's a lot more readable okay so we've added our player the next thing i'm going to do is add a score and a level so i'm going to do so up here i'm going to add so once again using add it's got parenthesis and an array i'm going to just space it out a bit so it's more readable i'm going to put text and i am going to just put in a 0 for now which we will solve at the end but i'm just going to hard code it just for now and let's position it on our board so sort of at the top so this is the xaxis if you remember from our previous lessons and this is going to be the yaxis just from this point right here so now that i've added that i want to make sure that this won't interfere with our pacman and won't interview with our game so i need to add this to the ui layer which we have not yet added but i'm going to do that now so just up here i think which is the first thing that we should do i'm going to define our layers so that is a kaboom method i'm going to open up my parentheses and pass through an array and in it i'm going to pass through all the layers that we want so i only really want an object layer and a ui layer for this game and i want to make the object layer the default so if something doesn't have a layer assigned it goes to the object layer so that should be it the next thing i want to do is actually pass through a value for the score so i'm going to put value square value if i can only spell it and once again we don't really have a score just yet so i'm just going to hardcord it as zero just so we can see it now um let's actually save this so we can reuse it so i'm going to save it as the score label just like so great so we've added the score label the next thing i'm going to do is actually add something for the levels itself so once again i'm just going to use the array and pass through the kaboom method of text and it's a string that is going to tell us what level it is so level great and i'm just going to pass through again i'm gonna hard code a zero for now we won't uh leave it like this don't worry but we don't have any levels to pass through at the moment and then let's position it so xaxis yaxis from the top and then we just need to make sure that that is in its in parenthesis and that is in parenthesis okay wonderful so we have our score and we have our level zero showing up let's move on now let's actually assign so i'm going to save this as cons player so we can reuse it in our code the next thing you want to do is make sure that our player can move so i'm going to use key down to do this just like we did in the previous lesson so key down i need to pass you two things a string of which key is pressed on our keyboard and a function as to what happens if we press that key so if i press the key left well i want to grab the player i want to use the kaboom method of move and i want to pass through an x axis and a y axis and because i want them to move left well it's going to be this one right here so i could say 120 or i could assign a move speed to mario so let's make that 120. so now to move left i need to make sure this is 120 and we don't want anything to happen in the yaxis so i'm just going to pass through a zero okay so let's check it out so now if i press the left key what is going left so now let's do it for the right side so i'm just going to copy this and i'm going to make this right and i'm just going to make this not negative so he's moving 120 on the xaxis so now let's check it out and great the next thing i want to do is for um married to jump so this time i'm going to show you how to use key press it's exactly the same i if i pass through a space fast with a string of space or what do i want to happen let's write a function now i can make our player jump so i can grab player and use jump so that is a method and i can pass through a jump force so let's make this 300 from now i'm just going to put it in there so now if i run this and i press space there he goes he's jumping a bit too high for my liking without a mushroom so i'm just going to change this to 150 instead and see how that looks that is much too small let's try 200 let's try it 300 and finally let's just try it 360. i think that should be okay okay great so your jumps just high enough to hit these but not high enough to um i guess we don't want that double jump either but not high enough to get onto the next level so that is fine let's get rid of the uh double double jump so we only want him to jump if the player is grounded so that is another kaboom method we can use so only jump so that will get rid of the double jumps great now i want um essentially stuff to spawn if i hit the question mark so these surprise boxes so where should we do that let's just do that below here i'm going to move these to be at the top of the file just purely because i think it's much neater so i'm going to grab that and i'm also going to grab the move speed great so now i'm going to grab the player and on if there is a head bump so again this is a kaboom method well i want so this is a function which i've actually passed through an object through and this will make sense in a bit whatever object we collide with is and then let's use the tag of coin surprise that we made so we've already made this as you can see it's here so anything with this it has the tag of coin surprise if the object that we collide with is a coin surprise well i want to essentially spawn a coin so i need to do i need to assign the level so i'm going to assign the game level in order for this to work so i've assigned the level to game level now we need to grab the game level and i'm going to use the method of spawn to spawn a coin so do we have a coin here we do have a coin it's the dollar sign so i'm going to spawn a coin and where do i want to spawn a coin well i want to spawn it whatever the object that we collide with and then i'm going to use grid position of that object sub and if we just pass through a zero i'm going to show you what happens so i think this is a coin surprise so the coin appears um directly on the object i don't want that i want it to be above the object so i'm gonna pass through a one let's try again boom okay so it appears above the object so this is looking great the next thing i'm going to do is actually destroy the object so i can do so like that that is the kabum method i'm passing through the object i've just collided with to destroy it so i want to destroy it but i also want to replace it so this is how you'd replace you'd use the game level spawn and i want to replace it with unboxed so i'm going to grab that and i'm going to pass through the string of unboxed and then i'm going to position it well we've already done this exactly where the other object is so i would just do position sub zero zero let's give it a go boom how good is that nothing will happen here because that's a mushroom surprise but that is the coin surprise too so now that we have that i'm actually going to copy all of this and just reuse it if object is mushroom surprise i want to spawn a mushroom which is this right here so i'm going to spawn that and let's run it so now ah no i want to spawn the mushroom here sorry and replace it with good that we checked that otherwise we get both there we go great now we also want the mushroom to move right otherwise how we ever gonna get mario to grow so i'm going to move the mushroom to do this i'm going to use action and this runs every frame second and i'm gonna grab anything with the tag of mush room so let's just check that has a tag of mushroom so let's just give this a tag of mushroom as it doesn't have one so i'm just going to give it the string of mushroom like so now anything with the tag of mushroom well what do i want to happen to it let's write a function and find out just get rid of that so anything with the tag on mushroom we're going to pass through m for mushroom and i want to move it so as soon as we see the mushroom i want to grab the mushroom and i want to move it on the xaxis so let's move it at 20 and then we don't want anything on the yaxis so let's give that a go and if i hit this there we go our mushroom is moving but it's not falling we need to change that so i'm also going to apply gravity to it just like we did with mario so now here we go our mushroom is falling this is looking great okay so now it's time to make mario big if he eats a mushroom so let's do it now i'm gonna do so right here so i'm gonna write my own function i'm gonna say call it function big and in it i'm gonna start a timer let timer start off with zero and then i'm going to return up date if is big so we also need to make sure that he's big here let is big equal true actually false to start so it's forced to start if he is big however well then i want to get the timer and just keep minusing delta time from it delta time is i'm just going to show you now on kaboom js delta time is the delta time since last frame said i was a good one to know i'm going to minus that and then if the timer is suddenly smaller than or equal to zero well then i want to make mario small again so this smaller fight which is something where we're gonna write soon so if he's big i essentially want the timer to start counting down and if the timer reaches zero or less than zero we turn him back to being small great now is big i'm just going to return is big so if we use that later well you'll see what i mean when we use it later and this is where we write smallify as well that we used above here and to make mario small what do we need to do well we need to make sure that his scale is uh one as opposed to anything else so i'm just going to pass through a one and then i'm going to start off the timer i'm going to make sure the timer is at zero again and make sure that is big equals false okay so we've written smaller phi now let's write biggify figure five and essentially i just need to get all of this right here and then this scale let's make him times two and is big is true and then we just need to define a time so whatever we pass through in to biggify is going to be exactly how long mario stays big for okay so that time gets passed down to the timer it probably doesn't make much sense now but promise me when we use it it will so now i can add big to the player itself next i am going to write what happens when the player actually collides with the mushroom so i'm going to write player collides and then i'm going to pass through the tag of mushroom so anything with the tag of mushroom if our player collides with it well what do you want to happen let's write a function so into the function i'm going to pass through m for mushroom itself and if our player collides with the mushroom i want to get the player and i want to use biggify so the exact thing that we wrote whoops big gif phi and i'm gonna pass through so if i pass through a six well our player is going to be big time big for six seconds and then he's going to be turned back to small so a normal scale of scale one i also want to destroy the mushroom so i'm going to use the kaboom method of destroy and pass through the m for mushroom so let's check it out so now i'm just going to hit that see i can't do anything with them yet and there we go i am now big and then i should turn small and there we go so now i am big this is looking good um i also want to write what happens if the player collides with so player collides with a coin so anything with a tag of coin just need to make sure that the coin has a tag it does not so let's just give it a tag so if the player collides with anything with the coin i just want to add to this score so i'm going to grab this score label value and use the increment operator to add one to it and i'm also going to grab the score label text and just assign it whatever the score labels value is so let's check it out that should be solid um i obviously can't jump high enough now but let's try get a mushroom and get a coin so that is i am my score is increasing as you can see however i also need to destroy the coin now so c for coin so we can't keep getting more and more points right there's only one coin we need one score so now let's try that out again we get one point um this should be solid so let's also make the unboxed solid by passing through solid like so great so that is looking better the next thing i want to do is make our little evil mushrooms move so i'm gonna do that down here here i'm going to grab anything with a tag of dangerous so we need to assign dangerous to the evil shroom so i'm just going to give it the tag of dangerous like so so anything with the tag of dangerous it's going to write a function to say what happens i'm going to pass through d for dangerous and i'm going to just move whatever d is for dangerous um let's give it so this is x and y axis let's give it an xaxis uh it's yaxis yaxis we know zero so let's make it remove 120. so once again i can save this as something so i can reuse it i'm going to save it as enemy speed and make that 120. so now i can simply use enemy speed like so i'm actually going to make it a negative so they're moving left as well and i'm going to move this to the top of my file just to keep things neat so now oh they're moving really fast whoa that is way too fast i think let's maybe make them move up 30. okay so that is better i still think maybe that's too fast but you know it's up to you how fast you want them to move now so the next thing i want to happen is when they collide i don't want them to push okay i want them to so i just essentially wanted to go to a game over so i'm going to use player collides again and if our player collides with anything with a tag of dangerous what do i want to happen let's write a function and find out so if our player collides with anything with the tag of dangerous okay so this is where we want to figure out if he is jumping right because at the moment if we do we just want to go to a lose scene so we want to go to a loose scene and take our score with us and the score is going to be whatever the score label value is so we could easily do this i'm just going to create a new scene so i'm going to click here and add a loose scene just like that and in here i'm going to use add i'm going to open an array and put the text the argument that i'm going to pass through is score args so we just go to a loose scene where that is really small i can of course make that bigger if i want and i can center it so oreo gin center position it grab whatever the width is of my screen divided by 2 the x and grab the height and divide over 2 to get the y axis and i can also scale it so scale it by 10 if i really want so now if i collide there we go the score is huge this is looking good let's go back to our main scene so we have nearly everything we have oops um we have our little mario we need to write what happens so we can destroy these little guys too so we don't have to keep uh dying so perhaps yeah let's do that now okay so i'm just gonna jump over them for now to get them out the way oh okay let's just leave it zero so i'm going to get rid of this again and make this bigger so at the moment our player collides with dangerous and we go to the loose scene however we want something we want to write something to let our javascript know that we are jumping because if we're jumping then we don't want to lose we want to kill the um anything that is dangerous so if is jumping this is the equivalent of writing equals true i could just simply pass through the boolean if it's true then it will execute this else it will execute this and go to the loose scene so i'm just going to get that so if is jumping is true i want to destroy anything with the tag of dangerous okay great if it's oh yes we have not defined as jumping sorry that is my fault i'm going to grab that here and i'm just going to put let is jumping and make it equal true to start with so at the moment it's always going to be true so there we go we just need to pass through a d and i'm just going to jump and great so we are destroying the little mushrooms we are also oh where did he go he seemed to disappeared um we can fix that so just in case you are having that happen to you find the player so that's where we add the player this should fix that happen so happening so just pass through origin bot let's try again so boom boom and then let's grow bigger great cool now i need to increase my jump size right because you know he's meant to jump higher if he gets bigger so i'm going to do that as well as fixing the is jumping too so let's do that first so currently he is jumping at the jump force of 360. so we need to increase that to uh another jump force so we could have big jump force if we want i'm going to make this 550. now i'm also going to have a current jump force which is going to change but it's going to start off with the normal jump force okay so there we go now in here if we are smallifying and as big as false i want the current jump force just to be the jump force however is if he's becoming big or if he is big i want the current jump force to be big jump force okay so let's see if that has worked so once again i'm just going to kill these guys and i'm going to get my mushroom going to be big ah oops we okay so we are using current drone force however when we press the space bar so let's find the space bar and you choose the current jump force okay because that is now changing it's now changing from big jump force to just jump force so let's try it again it's gonna kill these guys gonna be big and that's much better check out how high we are jumping and i just wanna make sure that we are back to our normal jump force now fantastic so one more thing before we move on and that is to make sure that um he's not always that his jumping is not always true so back where we use the spacebar just above it actually i'm going to use player and i'm going to use action which runs every frame second and just check so if once again i'm going to use player and i'm going to use grounded if the player is grounded so check that he is and if he is i want is jumping to be false and if player is grounded and we press the space bar i want this jumping to be true okay so if we press the spacebar and he's grounded then we want him to jump however if he's just grounded then his jumping is false hopefully that makes sense let's move on now i'm just going to move this all the way to the top but after i define the player so right here and click run okay so that is all working now i want the camera to follow me if i go to the right so let's let's go ahead and do that now so right under here i'm going to grab the player and i'm going to use action again so to check every frame second and i want to actually um use camera position so another kaboom method in order to just follow the player position so we just pass through the player position into the account position i also want to do one more thing while you're here and i'm going to say that if the player position yaxis is suddenly larger or equal to the full death so anywhere like below here is going to be the full death then i want to go to the lose scene as well and i'm just going to pass through this score just like we did before so the score labels value as the score so now let's define our for death const for death and i'm just gonna say 600 okay um i think that's i think that should be fine let's check it out so now just going to fall and it works and the camera is following us too this is looking this is looking good now let's go to our next level so i want to go to the next level if we um actually land on the pipe right here so let's do that i'm going to actually do that towards the bottom where shall we do it i guess it doesn't really matter let's just do it here so i'm going to grab the player again and if player collides with anything with the tag of pipe then what do we want to happen we want to go to the next level so let's just check that these things have the the pipes sorry have a tag of pipe themselves they do not so i really just need to add it to the top one so i'm going to add it to here and i'm going to add it to here making sure that it's in the array so now when i collide with those i want to go to the next game see so let's think about this i'm just going to go to this for now if i collide with the pipe but also if i key press down as that is what happens i need to keep press down so if these two things are true if i'm on the pipe and then i press key down then i want to go to my game again but i want to go to the next level so i'm going to pass through level like so um and i'm just gonna pass to level plus one for now okay so we're going to the next level and then i'm also going to take this score with me so scroll label value great at the moment i'm just going to comment this out for now and let's let's do our second scene so let's do that now so before we get finishing onto moving on to the next scene i'm actually gonna make the next scene as that makes the most sense so we already have one map i'm gonna actually now make an array of two maps so array of maps is gonna store one map and a second map and our first map so this here is just gonna be all of this right here so i'm gonna cut this and then maybe just space it out a little bit so it's a bit easier to read that is now going to be our first item in our maps array so there we go maybe format that a little bit better and then we just have to make our second map too so now instead of passing map along with the level config i'm going to get my array and whatever the first item is in my array well that's going to return this so that's if i pass through a zero i'm getting the first item from my array if i pass through a one i'm getting the second item for my row so let's make the second map now i'm simply just gonna copy most of this really and just paste it in here but change things around so we use the blue uh theme this time so let's do it so what do i want this time i don't think it should be as tall and i'm actually going to use a lot of the blue things that we have so i do know that i want walls at these sides so i'm just gonna add those to the other side too so just like that and then we don't want the bricks anymore so perhaps let's make these z's i don't think we've used z so i'm going to use z's in this level and then we do want a pipe however let's have the pipe at the end this time so it's quite nice as we actually get to reuse everything that we done before and we can also reuse the logic so again i'm not going to have these mushrooms i'm going to have some different mushrooms this time and my mushroom's going to be this guy and then i'm just going to delete these two and just use a bunch of this time and then we obviously have our pipe i also want some just things we can scale so so things we can climb scale whatever you wish to call it so i'm just going to make those now um once again please have all the fun creating this all by yourself it really is hours of fun creating these uh levels okay so we've now defined some new things in here let's get to it so now we have some z's well we actually also have some of these signs as what the pound sign so i'm just going to leave these blank for now so we can fill them out i've got pound sign we've got a zed what else do we have we've got an at sign and we've got a dollar sign and sorry an exclamation and an s so now let's have a look here well i know that i want some blue bricks to be this so i'm going to say blue brick and i also know that i want this to be solid so i'm just going to pass through solid do we want a blue surprise i think we do i don't think we have one though so i'm just gonna make a seven a blue surprise um i'm gonna also add that in here so let's make a seven for a blue surprise if you wish in fact i'm not going to bother but if you want to add then please add um you know how to do that now with the coin surprises and so on and so on so yeah if you want to add that please do let's add an evil mushroom so this is the blue evil mushroom i'm going to call it blue evil mushroom um and i'm going to give her the tiger dangerous so that you comply all the other logic that we've already done to it so that is pretty handy s what do we want s s is gonna be our blue steel and i'm also gonna make this solid and then we also need these sides so what can we make these sides what a disease disease is the floor so we might have to add something else for the floor so i'm just going to do that now we're going to add this blue block to be the floor so blue block and then let's have blue brick great let's hit run sprite not far found blue evil mushroom is not found blue evil shroom click run oh and there we go okay we need to scale everything to be half because as you can see it's very big so let's do it again i'm going to use scale 0.5 not here but here on anything that is new and then we need to make these solid too so make sure that everything with a uh brick is solid okay we've actually reused this blue brick so if i really wanted to um i could definitely change it so let's maybe do that or let's add some we could make these blue surprises so i'm just gonna make a blue surprise sorry i'm being really uh indecisive so blue sir price and then we can also give this a tag of coin surprise so exactly what we expect to happen for a coin surprise will happen for these just because we gave it the tag so how handy is that save just having to rewrite so much logic okay amazing so how cool is that once again we've pretty much it's pretty much done everything for us and if we look here all the levels will act pretty much the same way um cool so that is looking good we definitely die if we hit one of these so that is good why are these not sprouting coins though let's have a look so blue surprise coin surprise ah it's because i misspelt it so let's run that okay fantastic so much work saved for us it's incredible right um okay great we have one more thing to do and that is make sure that our mario goes to the next level so let's do it okay so what i would do is this just like so i would just have to define a level okay so there we go amazing now we can actually get our scores uh sorry our levels to loop all i'd have to do is find the level and then i would use modulus the level length to make sure that they loop okay so let's check that out one more time okay and then of course make sure that these scores are passing two and great so we have now finished the mario game this was super fun thank you so much for coding with me of course please take this game i'm sure there's many improvements that could be made and many improvements that you can contribute to it too so just head over to mine if you want and fork it or just use what you've coded so far um thanks so much again and one more game to go let's do it this time we'll be doing zelda completely from scratch okay so now it's time to start coding zelda but completely from scratch so before we were using the preconfigured kombum replica environment this time i'm going to show you how to use kaboom js so the javascript library in a index html and javascript file okay so completely from scratch let's do it the first thing i'm gonna do is actually go back to the kaboom js page and i'm simply going to take all of this script just right here i'm then going to in my index.html file so all of that script there's two scripts there's the first script and the second script i'm simply going to take all of it and just at the bottom of my two body tags just paste everything like so okay so if i run that now you will see oh hi mark in the browser now this is great but i don't really want to keep all my javascript in here because at the moment that is what is happening so i'm just going to cut this out so that is all you should see in the index html file for now and in here i'm just going to paste the javascript like so now back in here instead of having this script tag with the type module i'm going to have a script tag and a closing script tag with the source of whatever my javascript file is called so obviously at the moment it is game js just like that and it's in the root of our project so i don't have to do anything i just put the file name like so um do make sure that it's under the kaboom js uh script okay along with the version okay so just like that body tag first script second script if i get rid of this that might be a lot easier to read i'm just going to format it a little bit too great so if i run this nothing should change let's carry on so this is our index html file now let's move on to our javascript file so once again i'm just going to get rid of that okay so this is great however it's not really our zelda game so let's start i'm just gonna start from scratch once again i need to initiate the kaboom js environment so i'm gonna do this get some curly braces and i'm gonna put global true um let's make the game full screen true scale let's sort of a scale one let's put debug as true as well so we get the debug messages and i'm just going to make a clear background so i'm going to make it let's make it black okay perfect so now that we have kabum initialized let's add some sprites so this is a completely different way to do it obviously before we were using the replica environment where you can draw the sprites directly in here however if you are using your own ide or just doing it on replit from scratch we can do this so there is a kaboom method called load sprite and we simply write it like so now i have actually stored all my images online so you can use them as well when i do projects like this i usually store all my images on this thirdparty service called imager so if you go to my imager and look at my posts you can see i've already made a bunch of sprites for us for this zelda game so i'm just going to go ahead and lift some now let's get link going left i'm simply going to get shareable links i'm going to copy this bbc code one right here and i'm simply going to paste the path to my sprite i'm also going to name it while i'm here so i'm also going to pass through a string let's say link going left just so it's easier for me to work with now i could so there's my first sprite let's get also link going right so let's go back here and let's find link going right so i'm just going to once again get shareable link and click this right here and just go back to here and paste the path to my link going right this time so i could keep doing this but of course this is very wordy and there is a lot of repetition there is another kaboom method called load route which will allow me to essentially load this route so i don't have to write it each time so that is a lot neater let's carry on so you've got link going left link going right let's also have link going down link going up left wall right wall let's have the top wall bottom wall and then all the also the corner walls so essentially i'm getting everything that i need to make up my link game in order for us to create our board so now let's go bottom left wall bottom right wall top left wall top right wall and let's just do these for now and then we'll carry on in a bit so link going down i'm just going to go in here and grab this little guy copy the link and once again just paste it in here simply using this at the end and then link going up so again i am just going to get share links copy that one paste it in here but get rid of this as we already have the root now let's get the left wall so this looks like a left wall to me once again i'm going to get the share link copy that just paste it in here now let's get the right wall so this to me looks like a right wall get share links copy paste that in here let's find our top wall now so this to me actually looks like a bottom wall it's fine we'll just do the bottom wall now get share links copy bottom wall just like so and just paste into top wall okay now let's get the bottom left wall so this to me looks like a bottom left wall let's get the bbc code so charlene copy bottom left wall and just get rid of the which bottom right wall to me it looks like a bottom right wall get shell link copy and just paste it in here like so now let's get the top left wall once again get share links and now the top right wall so this should be the last of the walls we just have some doors and some enemies to put in so gets again get share links copy and just whack that in there perfect so now we've got all the walls let's i'm just going to move that up here for us we've got a few more things to do um let's get the top door so we're gonna have a top door a left door we're also gonna have a fire pot so that's just gonna be some decorations really i'm also going to have some lanterns and then let's put in a slicer so this is the first of our baddies i guess skeletor it's not actually skeletal but looks quite similar so that's how i've named this little character some stairs and then let's also have a background so i'm just gonna go bg for background so let's carry on let's get our top door so this is my top door get share links copy once again it's making sure just to get the end let's find our left door share links copy it's gonna put it in as a string along with the name that i gave this sprite so there we go fire pots let's find some fire pots so this is what i called a fire pot get shell ink copy once again get rid of that lanterns is up next let's get the lanterns so these are my lanterns you can see i've got a lot of images in here all from like various projects that i have on youtube either on free code camp or on my own channel so there we go let's get these slices so oh actually let's get skeletor just because you know he's here let's copy that let's put that in here just like so this is what i called a slicer so get sherlink copy a shelling copy and now for the background which is going to be a lot bigger than all these sprites but that is not a problem so once again get share link copy and just put that in yeah fantastic so we've got all our sprites let's move on the next thing i'm going to show you how to do is add a scene so this way is different than we did before i'm going to show you of course how to do it from scratch and from scratch we would use the kabum method scene just like so i'm going to open up a parenthesis and the first thing i'm going to pass through is the name of the scene and the second thing is going to be a function so this is where all the magic is going to happen so let's call this scene game and i will be passing through a level and a score into here so that with each level we actually get these score and move on to the next um level and so on as well as as well as the level but we don't really have anything at the moment quite yet because we need to also start the game so this is another kabum method to start the game i would simply pass through the string of what scene i want to start as well as anything else so as i already said i want to pass through the level and the score into the uh game scene so to start with i'm simply going to say that the level is zero and the score is also zero okay so if we run that we won't really see anything because um we haven't actually written any logic but that is sort of what you need to do to get started so for now i'm just going to define our maps so let's do that first so once again i've showed you how to do this now however i am gonna just comment it out until we need it and until we you know start working with the level unscore so i'm just gonna comment this out like so great so at the moment we are not passing through anything into the game now as i said the first thing i want to do is define our maps so let's start off with the first one first const map now i need to draw my actual map so to do this i'm just going to make everything in these quotation marks and i'm just going to decide what i want as all my sprites so let's just for now i'm just gonna show you what i mean so one two three four five six seven eight nine ten and then let's make it ten by ten three four five six seven eight nine and one more to make it ten okay so one two three four five six seven eight nine ten amazing and i just need to put a comma after all of these two great so for now i'm just going to put c's in here um just to show you how this would look okay so we've got our map now we need to use a another kabum method called add level and into add level making sure to spell it camel case we need to pass through two things the first is our map as an array and then the second is our level config as an object so we already have a map defined so i'm just going to pass through a map and then our level config now i can actually define the level config here it might make things neater as it is going to be quite chunky so our level config is going to look like this so we did say it's an object so now i could just remove this and just pass through level config and our object is going to look a little bit like this so in here we're going to define how big each of these symbols are going to be on our board so i'm going to say that each one is going to have a width of let's say 48 and a height of 48 pixels just purely that's because that's how big i actually made my pixels on imager okay and then i'm going to say that anything with c is going to be and this is the syntax so i open up an array i use the kaboom method of sprite and then in here i'm just going to pass through the string of top wall okay so this string of top wall is equivalent to the sprite which i uploaded above so now i'm saying that anything with the c is going to be a top wall on my map so now if i actually run this well there we go we can already see our map now i can make this a bit smaller just so it's easier to work with and there we go okay maybe just make us a tiny bit bigger so now you will see that all my walls are the top wall so i don't want this let's actually go to actually drawing our um our zelda map correctly so back in here so we've already defined uh the top wall as c let's do a sprite left wall b sprite right wall making sure to spell all these strings correctly of the sprites that you imported so we've got our left wall right wall top wall i'm just going to copy this out to make it a little easier let's make d the bottom wall and then maybe let's use something else for the corner ones so let's make uh w the top right one x the bottom left wall why the top left wall and let's make z the bottom right wall okay let's copy that now so let's actually use that first perhaps or let's just do all of them first what should we do let's just import all of them to use and then we can use them to uh draw our map so let's use these symbols now because you don't have to just use uh the alphabet let's also do the left door just like that let's also have um this little hat could be the top door let's have some stairs let's also have this slicer which we make our slicer let's make him this little guy slicer and then skeletal can be this so sprite scaler and then let's have our let's have some lanterns in too and then just the fire pot lanterns and our fire pot let's make the fire pot the other way fire pot fantastic so we've done all of that let's also add our um let's add our background while we're here so i'm just going to do that down here i'm going to use add and then i'm going to open up my array so just like we did with the sprite above i'm going to find the background so i saved it as bg and then i'm going to say the layer it belongs in is on the background because i don't want it interfering with any of my objects and i don't want interfering with any sort of words i put on so let's actually define the layers first so we already know we've got a background layer let's do that up here so just under where i uh use the scene method i'm going to say layers i'm going to define the layers so i'm going to have three layers in this game i'm going to have a background layer as we've already discussed and then also going to have an object layer for where all my objects and all my enemies and my players are going to be with and then i'm also going to have a ui layer so that these layers can't interfere with each other okay we can't collide with them um they're very separate and then my default so if something doesn't have a layer it's going to be the object layer great so now if i run this well there you go the background is added let's now get to using all of these on my map so we already know that this is going to be the left wall so i'm just going to use command d to change all these to an a and then let's change all these to the right wall so i might as well just make them all bees for now and then the bottom well actually i i know this is the bottom left and then what's the top left is a y and then we've got the bottom right that's a z and then top right is a w and what is the bottom wall well that's all d so i'm just going to go d d d d d d like so and then let's also perhaps put our lanterns in here so i'm just going to put that in here and i'm going to have a door um just like so and there great let's also have a left door here so i'm just going to perhaps put that in here i think i've got one too many levels i only want this to be nine high so let's go ahead and delete that that should be fine one two three one two three okay and let's put in some more lanterns at the bottom so i'm going to put in a lantern here lantern here and we're missing the corner one bottom right is a z great and then i'm also going to put a slicer so this was my slicer here and this slicer here as well as some fire pots because you know fire pots are always fun so let's put this in the center of our game i'm just going to put one here and one here and let's let's have a look at what that looks like i'm not sure that is the center but we will soon find out so i'm just going to run this and there we go how good does that look okay we did pretty well this one's incorrect though bottom left wall this should just be an x my bad amazing okay this is looking awesome i'm super pleased with it let's carry on so we've defined our layers we've added a map the next thing i want to do is add my little zelda so let's do that here okay so i'm going to use the kaboom method of add i'm going to open up my parentheses and once again get my square brackets and in here i'm actually gonna get sprite once again and i'm going to just start off with link going left so i'm going to grab the um string of link going left so that is the sprite that we imported above and the next thing i want to do is just assign a position to it so i can use pos for position like so and then i'm just going to make him go left so this is where we start positions from left 5 and down 190. so you should be somewhere around here great so now if i run this well there he is maybe let's have him going right actually so i could just switch this out and there we go so he's sort of on the door at the moment the next thing i need to do is actually make our little sprite move so perhaps let's do that first to make things easier i'm going to assign all of this code to const player so we can keep reusing it throughout the game so now i'm going to use key down so this is one that we've used in the previous lessons and if we press key down and we press the left key on our keyboard where we want something to happen right so i'm just going to put in a function here so the string of what key followed by a function of what's going to happen that's what the key down or key press um kaboom method takes so if we press key left well i want the player to move and then we need to define a speed so i'm going to perhaps define that here we could just pass through a number but to make it all reusable i'm going to define a speed for us here and i'm just going to call it move speed and then let's make it 120 for now let's see how that goes so i'm gonna say when he's moving left well we have to grab the move speed and make it negative with the move kaboom method the first thing we pass through is the xaxis and the second is the yaxis so in this case i want the y x to be zero i don't want anything to change on the yaxis but i do want something change on the xaxis i want them to go left so that is how we would do that so there we have it we have key down left let's also have if we move right well then we want to just simply move at the move speed and then let's also have up and this time you guessed it this has to be zero and this is going to be the move speed but this one's also going to be a negative and then finally we have the key down move down in which with this is not a negative it just looks like this so now if we run the game there we go a little sprite is moving now we can also do a change sprite which is something that we didn't cover in the previous games but i think is quite fun so i'm gonna do that now when we go left i want to grab the player and i want to use a method called change sprite to change the sprite to whatever other sprite we imported so in this case i want to change it to link going left okay and let's do the same for the others this one's going to have link going right and then let's have link going up and link going down so just a reminder i'm simply using all of these here to change the sprite to these if we press on the keys so now here we go that is looking so good i think we are ready to move on okay now the next thing i think we should do is move our little slices so let's do it for this i'm just gonna gravitate down here to do our slicer game logic so this time well i need to i'm going to use the kaboom method of action because i'm going to grab anything with the tag of slicer and then let's get our function up so there is obviously a pattern here we usually pass through a string and then a function into most of these kabum methods and what do i want to happen to these slicer well to every slicer so s for slicer or everything with the tag of slicer i should say so perhaps let's um go up here and i'm just going to give slicer the tag of slicer like so so now everything with the tag of slicer well i'm going to grab the slicer i'm going to move it now i can move the slicer once again x and y axis but i actually want to um change the direction of the slicer i want him to bash into the wall and then change direction when he bashes into war because at the moment let's define a const slicer speed let's make it 120. if i put through the slicer speed here and just keep this zero and run it our slices are moving but they're just carrying on this is not what i want so let's fix this to do this i'm going to go back up here because i need to give all my walls and everything that i want to essentially be solid on the board the component of solid so in here i'm essentially going to on all the walls i'm going to give them the component of solid i'm also going to give them the tag of wall which you will see why later but we essentially want to treat all of these as walls just like so so we've got a few more to treat as walls and to treat as solid so there we go that is looking good while i'm here i'm also going to make the lanterns solid because at the moment we can move through them i don't want this so let's make the lanterns solid 2 oh and the fire pots so that was actually solid so that was actually a fire pot these are the lanterns but we need both to be solid really so there we go that is looking good we can also assign the lantern the tag of wall just in case because we want it to be treated like a wall essentially great so we've done that now while i'm here i'm also going to give our slicer a direction so i'm going to start off with the direction of the slicer being minus one okay we can add any sort of object we want in here it's sort of like a storing value so i've just chosen to store dir minus 1 which i know is for direction so now that we have that let's carry on so we have our slices moving off let's just check we can't go through the last lantern uh we can go through the lantern okay so to fix this i can actually fix this i just need to resolve the player so what i would do so just after i've added the player just here i would use player action and then grab the player and resolve so that should fix the issue of the player going through things that are solid so let's try that perfect so now we can't go through anything that is solid great okay so now that the slices have a direction and they're moving off i actually want them to change speed change direction sorry when they hit anything with the tag of war so let's do it so just here i am going to use the kaboom method of collides just like so and anytime anything with the tag of slicer collides with anything with the tag of wall once again let's write our function and the slicer so if that happens and if both collide i want this slicer dur to change to minus there so if this is currently a positive it will change your negative and if it's a negative it will change to a positive maths so that is happening and that should change the direction however now that we have that i need to make sure that that is being applied here so i can use s direction and multiply it so whatever s direction is at the moment if it's a minus one i will multiply it to 120 which will make that which will make that minus 120. so r slider or slicer will move left and alternatively it's a one where we'll multiply one by 120 and our slider will move 120 to the right so that is cool let's check that out and we've done it our sliders are moving and they are literally bouncing off the walls and changing direction so this is looking good let's carry on now i need to write some code for what happens if we you know collide with our slider because that's a bad thing i want our player to essentially lose so that is a game over in my eyes i could do so by grabbing the player and using overlaps this time and if our player overlaps with the slicer or i could put dangerous so that means that anything with the tag of dangerous which means i can reuse this tag will result in a player losing and going to a losing scene so at the moment i'm just going to perhaps make a let's maybe leave this for now because i need to write this score so i'm going to apply the tag of dangerous to the slicer and i'm also going to apply it to skeleton great now that we've done that i think we need to start looking at the score because if there is a loose scene i want to go to the loose scene with our final score so let's do it just under here i'm going to add so once again open up a parenthesis and an array and i'm just going to start with the text being a hardcoded 0 just to start off with and let's position it on our game board so i'm going to make it go at the bottom so x and y axis and then i'm going to add it to the ui layer so it doesn't interfere with our game and i'm just going to assign the value um the score so whatever the score currently is that is the value okay so because we don't have a score at the moment i now need to pass through the score to add start the game so we're going to start off at zero and then up here once again i'm going to uncomment that out that is being passed into my game scene and if i run don't forget to add that comma now if i run the game you will see a tiny zero but it's very small let's scale it up so i'm gonna scale it up by four just so we can see okay so now we've got a score it's obviously zero um because we don't have anything yet let's write our lose scene and then that should show the score so what i would do is simply use the kabum method of go and then i'm going to pass through lose to make a lose scene and then i am simply going to get these score and i'm going to save this as const score label so i'm going to get the score and whatever the score labels value is that's what i'm going to pass through so now let's just collide with one of these check that's working we haven't actually written our seen so let's go ahead and do that so we should go to a loose scene with the outside of our game scene i'm going to create the loose scene now so our loose scene is going to look like this so once again a string and then a function of what's gonna happen and for this i'm just gonna pass through the score or whatever this is so i'm passing that through d structured and then i am going to add so once again parenthesis square brackets i'm going to use the kaboom method of text to pass through the score and the position of where i want to position it let's make the origin be center so i'm going to pass through the string of center and then let's position it i can actually grab the whole width of the browser window and divided by two and then grab the height as well and divide by two as well so now if i run the game go ahead and lose so amazing we get zero showing up in the middle of our screen because that is our current score because we have no score great so i think we've done everything we can on this level let's now try to add a new level so let's do it great so we have our map here now i need to add two maps so for the first level i want to go to this map but if it's the second level i need to go to you know the second map so const map i'm going to rename to maps and then this is going to be an array of arrays so i'm going to have two levels at the moment and i'm simply going to grab all of this and work that in here so there we go and just get rid of that so now if i want to go into the first map where i'm going to grab the maps array and whatever level we are on this is why we started the level on zero i'm gonna go into the maps array and if the level is zero i'm gonna grab the first map so i can just simply pass through level like so and that will do the same thing okay so that way i'm literally getting the first item of my maps array which is that and now let's make our second level so i'm just going to paste this here and let's do it so for my second level i'm pretty much going to keep it the same let's perhaps get rid of some of these things and i'm going to have lanterns on this side now just to make things a little bit different let's get rid of these slices let's get rid of the lanterns i'm just going to make these a straight wall now in here i'm going to have some stairs and then i'm also gonna have a skeletor great so now let's just change our level to be one for now that is our second map amazing so i actually want to get rid of this door too so let's just connect with that door like so great now how do we get from level one to level two well i'm going to show you that now so down here i'm actually going to give my top door the tag of next level just like so and in here so perhaps let's do it down here i'm gonna say if player overlaps with anything with the tag of next level what do we want to happen let's write our function and find out so if that happens i want to go to the game scene again so we are currently in the game scene but i want to go to the scene again and pass through level i'm just gonna pass through level plus one to get to the next level and then the score so whatever the score labels current value is i want to pass through okay so let's check that out let's go back to level zero now let's try collide or sorry overlap with the door making sure the slider is out the way first and great if i try however go here nothing will happen i need to add next level to the stairs too this will however be problematic so i'm gonna show you why so just let that collide again now if i go to the stairs everything breaks that is because there is no level three so i can easily account for this by um it's finding a level and then i could say modulus maps length to make the levels loop over each other okay so this way it will loop um and it will just be continuous for us so now if i go here go up the stairs you will see it's looping so that is just a quick fun fix for you let's carry on i should really be moving this to the top of my game so just to keep everything consistent let's put this slice of speed up there too i'm also going to define my skeletal speed while i am here so i'm going to do that now let's say skeletor so scala for speed i'm going to make a move quite slowly so i'm going to say 60. now let's i'm going to actually put this back to level one just so we can start off on the second level each time great so just where i move the slicer i'm going to move my skeleton so i'm going to use action again and i'm going to pass through the string of skeletal this time and well what do i want to happen let's write a function and find out so this time i'm going to pass through s for skeletal i'm going to grab skeletal i'm going to move him and skeletal again let's make him move up and down this time so i could just pass through a zero and the skeletal speed because obviously xaxis yaxis but i also want my skeletal to change direction however this time i wanted to change direction randomly and if he hits a wall so i'm going to show you how to do that once again i'm just going to up here give skeletor a direction so now when we move skeletal we also need to multiply them by skeletal's current direction okay so we are doing that let's carry on so now i'm going to actually give skeletor a timer i'm going to use the delta time so delta time if we look here once again i think i have gone through before but just one more time it's the delta time since the last frame so that's what i'm going to be using um and if the timer so i of course need to give skeletal a timer up here so i can do that in the same object timer let's start off with the timer being zero if the uh timer is suddenly smaller than or equal to zero i want to grab the direction and i just want to change it so just like we did with the slicer i'm literally changing it from a positive to a negative value and if it's negative to a positive value and then i want to get these skeletal timer and randomly so this is in the method to get a num a number randomly between uh 0 and 5. so now or less than five should i say now using rand this will attack assign a new value to the timer so essentially this is saying that our skeletal will change direction randomly so it will start off at zero if it's zero then the skeletal will change direction and then the time is going to get another random number from zero to five and this whole thing will start again i'm also going to have i'm also going to have to give skeletor the tag of skeletor just like slicer and let's click run okay great you can see he's changing direction however he is not changing direction if he hits a wall let's do that now so i can actually reuse this right here so i can reuse this and just say that if anything with a tag dangerous collides with a wall so dangerous instead of slicer here we go they should change direction this is pretty neat we have a few more things that i would like to do so let's carry on the next thing i want to do is of course make sure that our hero can defeat the enemies so i'm going to do so with a kaboom instead of a sword i'm going to use a big kabum to do this so first off i'm actually going to have to import that sprite so i'm going to use load sprite again and let's just call it kaboom as we are using the kaboom js environment i thought that was quite fitting and i'm just going to use this kaboom that i made here so i am going to let's refresh this i'm going to get the share links copy this here i'm just going to paste it as a string like so so we've got the kaboom now now we let's actually spawn a kaboom so i'm going to do this just under here now i'm going to write a function called spawn carbon just like so and it's going to be a simple function like this and into it i am going to well actually let's start off with adding what we want to add first if we spawn a kaboom because i want to add these sprites of you guessed it so at the moment nothing will happen that's because we need to assign a position and the position that i want to assign it is going to be the position of whatever i pass through into my spawn carbon function okay so that is what i'm gonna do and then i'm just gonna give it the tag of kaboom as we are gonna need that later and i'm actually gonna save this as object for now because we are going to have to destroy that in a bit so there we go um let's perhaps write that now in kaboom we can use the method of weight and we simply have to pass through a number which is how many seconds we want to wait before something happens so let's write our function to write find out what that something is so after one second i want to destroy so another kabum method the object which is microboom object great so we've got everything we just need to use this function and pass through a position so where can we do this well i'm going to actually so i'm going to say on key press uh spacebar so this is how we would write spacebar what do i want to happen let's write a function so our function on the key press i want to use this function that i have just written like so and of course we need to pass something through we need to pass through position so the position i am going to pass through is my players position so wherever my current player is okay so i think that should work let's try it out i'm gonna press space and there we go this is looking pretty cool however let's actually position it um a little bit farther than our player so where is our player where we add our player so here we add our player i'm just gonna space this out so it's a bit more readable so we're passing through a sprite we'll possibly position i also want to pass through an object that is the direction and i'm just going to put him going right at the moment and i can now use this in order to make our kaboom uh object go out a certain way based on his direction so based on my player's direction and i would simply use the position that we are currently in plus add so we're going to add a little bit extra so whatever the player's direction is and scale it by let's say 48 okay so 48 pixels if it's negative 1 it's going to be negative 48 if it's positive one it's going to be 48. so that should work the only thing we need to do is actually assign a direction to our player each time he changes direction so i'm going to go player and then this is going to be vector 2. um zero one this is going to be player direction zero minus one and you probably guessed it by now this is gonna be player direction one zero and this is going to be player direction minus one zero so let's check it out boom so you will see the kabum is now not on the link link the player himself but in front of him depending on which direction he is so great one last thing i promise and that is adding a score if we destroy a skeletal so i'm going to do that here so i'm going to use collides again and i'm going to pass through anything with the tag of kabum and anything with the tag of skeletal and i'm going to actually pass through k for goodbye and the skeletal this time so we can use both if both collide well i want to wait perhaps one second and then what do i want to happen so a function well i want to destroy the kaboom so destroy the kabum after one second but i want to destroy the skeletal immediately so that is how i will do that i can also grab the score label value and increment it using the increment operator by one and then also we can update the score label text to be the score label value just so we can see it in our browsers as well okay so that is good and i can also add something fun like a clam shake so let's add a cam shake of scale four so now let's try it out boom great so we're getting the cam shake we are destroying skeletor and we are adding one to the score and if we move on to the next level so let's just see this is all let's just try again so let's just go boom whoa that was a bit fast let's just try again boom amazing everything is looking great so i hope you've enjoyed making this game of zelda completely from scratch please do share your replies with us on free code camp i would absolutely love to see how you have made this game your own how you have taken it to the next level um have you added more levels perhaps have you added more enemies have you done any other really cool stuff i'd really like to know so thanks so much again for coding with me i hope you've enjoyed this lesson and i'm sure i'll see you soon on free code count bye now we've been creating our games in replit and it is now time for me to show you how to publish your games in the replit app store too so this is really simple it's going to be a really short section if you're really proud of your game and you want to share it and publish it please head over to replit forward slash apps and simply click publish right here once you have clicked this just click continue and then search for your repl of choice i'm going to choose zelda and i'm simply going to write a quick description so a wonderful game of zelda making sure to spell that correctly and then if i want to have a cover image i of course can i do think that is the best practice i'm not going to show you how to do that because i think it is pretty selfexplanatory you can also add tags so i've always got html in here i can also put kaboom if i wish um and then i can allow for comments if i feel comfortable to do that and there we go it was really that simple um thanks so much again for coding with me i hope you can share your games with us too can't wait to see them now before you go i just want to make a very quick section about how to perhaps use kabum in your own code editor of choice so i'm going to do this envious code i hope you can code along with me let's do it so this section is really simple it's going to take a few seconds i'm simply going to head over kaboom js and i'm going to copy all of the code that you see right here so it's simply this it's just the code that i'm going to use for the quick start i'm going to copy that and then just post it in the index html now if i open this up in my code editor of choice so open up around the browser you will see the ohiomark text that we expected to see done it was really that simple and from then on you are more than welcome to use all the other kaboom js methods to your disposal don't forget to check what version you are on so you can see the version here as most stuff does change quite frequently so make sure to refer to the documentation if you are currently on a newer version you can also move out all of this into a separate javascript file so i would do so like this i would simply create a javascript file like so and just paste everything in there so now if i look at the browser everything works the same so it was really that simple thanks so much for this short section and i'll hope to see you soon okay and that's it thank you so much for coding with me i hope you really enjoyed this wonderful course on kaboom js and i hope you can see how powerful of a tool it really is when it comes to game development thanks so much again and i'll see you on free code camp soon