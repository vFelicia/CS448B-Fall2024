now you can get started all right so hello everyone my name is chris uh i'm kind of new to this meetup so most of you probably haven't seen me before or i've seen me around and haven't really talked to me um and so i'm currently studying computer science at ou and i kind of you know noticed a general theme that for free code camp and you know just around here in general a lot of people didn't seem to finish or either didn't finish computer science in school or are coming from a different field so i just wanted to give kind of how i got started in web dev studying computer science in college so just so you know where i'm coming from i'll just go a little bit over uh kind of my my college history here kind of what i did before i started coming to the meetups so i was born and raised in canada the land of canadian geese and mice maple syrup stuff like that and after i finished high school in 2012 i moved here to oklahoma to live with my mom and i thought it'd be nice to attend college in the states so since we lived really close to edmund i decided to attend uco and i started studying uh was electrical engineering there and i did that for my first two semesters and that was when i had my first programming and computer science experience at their engineering computing class which was a required class for all the engineering disciplines and they taught that class in c and so after my two first two semesters i decided i wanted to do um something more related to computers so i switched to or transferred to uco or ou which is where i am now and studying computer engineering and here the computer engineering curriculum is basically the same as computer science for the first two years or so so i went through all their other java courses and i studied abroad for a year uh in 2015 and i came back last year uh september of last year and that's when i decided i didn't want to really want to work with hardware i wanted to focus more on computer science and so now i'm fully computer science major so i'll probably stick with this one don't know yet fingers crossed so uh let's go into how i got started in web dev so i didn't learn any you know html css javascript in school so my first experience was actually an internship um i got the internship through a personal connection through my mom and it was an internship at a company which is somewhat uh notorious around here apparently that no one likes ala mode and if you don't know what um ala mode or what they do they sell software for real estate agents appraisers mortgage brokers and they one of their products is basically custom websites for these agents and brokers hosted on their custom cms system and so my job as a intern was their system was running on a legacy flash system you know you had all these fancy animations you could add sound effects things like that and so they were trying to redis uh you know revamp that and use bootstrap so what they had in the past was basically this kind of it might be a little bit hard to see but it's like basically a rich text editor right you could put in text lists tables images things like that and it would you know compile it into html and you know that works great for you know simple text like that and just gets injected into this page that looks like that you know your top bar is all sidebars all loaded in with flash you could put in you know sound effects when you hover over each button makes like a laser gun sound like it's really bad but anyway so with simple content like that lists and paragraphs that is pretty easy for it to generate but once you um start adding in you know old uh sorry let's just start adding in styling to the text like no bolding coloring different layouts right you start getting uh you know stuff like that you know weird font tags everywhere empty strung tags and spans so if you've ever had the misfortune of working with this kind of html i'm sorry but basically they had a lot of their default content pages were you know either laid out with tables or it was laid out um or had lots of you know font tags laid out everywhere and so it's basically my job to turn code that looks like that into you know just like that right the bootstrap framework it already styles all of your default components right so you don't need anything there and so if you have this it looks consistent in all the sites and it'll be updated by any you know sitewide themes that the customer may choose so i was thinking about demoing some of the things i built so i worked on this for about two two weeks i transferred all their content pages into clean html before i started building some actual template pages that customers could buy i was going to demo them but maybe we'll save that for the end if we have time so how did learning computer science in school you know actually helped me in this internship i well i okay well it didn't really help directly it um so let me explain right so at ou um if you if you've taken class at ou you'll you'll find out really quickly that ou is mostly a java school right most of their for um yeah most of their classes you know for the better part of your degree you'll be working with java for all of your classes now you have maybe a few classes here there that uses something else but for the most part it's java and i think you know that that while java is a great language you know it's got a robust api it's got you know good type safety stuff like that the students can get locked into thinking rather than thinking how can i write this in code it becomes how can i write this in java and so you get kind of locked into that mentality of how to write software and code and so um some of the things that i wish that i knew when i was at the internship and just you know in general that they didn't teach this is by no means an exhaustive list but essentially they i would have wished that they taught me how to code better right so just general um learning different languages right i was you know using java basically the whole time i was there except for one class and good programming practices so things like how to write clean code how to put in proper comments there was if you follow the medium the free code camp medium blog there was a post about a week and a half ago called putting comments into code uh the good the bad and the ugly by a certain bill sorry i'm sorry if i said that name wrong and basically details how it's important to put comments into code but you should do it in a way that is helpful and there are things you should and shouldn't do and so they never really taught us that they just said put comments in your code or else we'll take marks off something like that so building projects right in a way when you do your assignments it's kind of like building a project but they don't in the end it's still a class assignment right you just want to get it over with and once once you've done it you just kind of toss it off from the side you know you don't really want to look at it anymore and so you're not really encouraged to go back and improve on your projects any further um not and taking the next step and finally is application of theory so if you go into the data structures class at ou and you'll ask them have you built um a binary tree data structure before they'll say they'll probably say yes because that was their last assignment in the class and you know they have built it but if you ask them you know when would you use a binary tree to store data instead of you know an array a stack linked list they they may not really be able to tell you maybe they'll tell you some of the advantages but not really how or in what situation you would use them so that was learning how to code and another big thing was version control so git and github is you know pretty essential for working in groups and collaborating with others and and just for keeping track of your homework and make sure you don't lose your progress so uh they don't really teach this in any any of the classes they um i asked a friend before who took the classes a few semesters before he said that no they didn't teach it but in my human computer interaction class the professor attempted to explain to us how to use git now i say attempted because i don't think he succeeded if you walked into that class not knowing how to use git you came out still not knowing how to use git and you were probably even more confused about what it was from before so yeah i think that that would have been um a nice thing to learn you know maybe freshman or sophomore year as you're getting into working on your projects and keeping track of your progress and lastly you know relating to version control and github you know collaboration a lot of your assignments you know they tell you to do it on your own right and so that kind of discourages you from copying from others cheating and all the you know academic integrity stuff like that but when you do that you're kind of you don't really get to experience working on a software project as a team um you know when you just think of work on group projects in school in general to say okay you do this i do that and we'll just put all together when we're done and that doesn't really work all the time with software especially when you go into a job and you have to work on the team and the team you may not always get to meet the team right they may be working remotely things like that so learning collaboration um would have been a good thing to know i believe they teach um i believe you have a bit more group work later on the degree in the last year of study but not so much in the first three now with that being said there were things that um that did help and i did find useful and the first thing was i got used to coding right so when you do all your assignments you know you you code you do your assignments and so when you get to the job it doesn't really feel all that all that foreign and you know it you get used to having you know other students and your professors look at your code and so compared to maybe someone who is always learning on their own didn't really get a chance to show other people their code i kind of feel like that helped me there um next thing was i now find learning a new programming language not you know not that bad um i said you know most of my classes were taught in java the data structures class was taught in c plus and so the professor never really went over much more than you know how to assign variables how to you know write a function just basic syntax and all of the all of the quirks of the language we were left to you know figure out for ourselves you know things like pointers stuff like that and so the important part was that you understood the fundamentals of programming right like in most languages you'll have a for loop or a while loop on if statements and once you understand that all you really need to do is go look up the syntax rather than having to figure out how do for loops work in this language because they all work you know more or less the same way and finally how to search for help right working on assignments really forces you well i mean doesn't force you but i had to google for help a lot right how to go on stack overflow a lot and look up you know a variety of things and when i was at my internship i don't think i mentioned this earlier but i didn't study any html before i went to the internship so web dev wasn't even a thing that i had considered before that so i had to look up stuff you know every day for the first week or two when i was just learning html on the fly so i think these are the three things that really helped me while i was there so i think i've gone on long enough so just to wrap up um learning computer science didn't really directly help me there were things that kind of you know made it easier but nothing directly helped because you know i was working with html and css maybe a little bit of javascript and they didn't teach that at school i mean why would they so my main message here is don't worry if you're not a computer science major or if you you know stop studying cs it's not a big deal especially when you're working in something like front end web development where it's more about the design and you know building pages rather than worrying about how to sort of sort an array efficiently or how to balance a binary tree you know and what's important remember is just you know the fundamentals how to write clean clean code how to use version control how to collaborate with others working on you know big projects and yep that's it for me and yeah feel free to contact me if you have any questions