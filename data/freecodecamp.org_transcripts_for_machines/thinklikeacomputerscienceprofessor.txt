in this course radu will teach you how to think like a computer science professor radu has a phd in computer science he teaches computer science at a university as well as on his youtube channel in this course you will see radu's thought process as he codes a project for the very first time many tutorials show you how to build a project that the instructor has already fully thought out beforehand but in this video you will learn what really goes into building a project from scratch and he does it all without even referencing the internet leave a comment with any insights you learn from watching his thought process hi in this video you'll see how i made this avatar using just vanilla javascript and html canvas i made this while competing with samwell so it wasn't scripted and we didn't even know what project we're gonna do when we began so don't look at this as a tutorial because i do a lot of mistakes in it but i really think you should watch the video because it shows the thought process of how to solve a problem like this in the real world and tutorials are not like that tutorials just show stepbystep instructions of solving a problem and those were usually polished well before recording the tutorial so if you really want to be a better problem solver you should check it out so the project we're gonna do is going to be an avatar i'm going to make something that kind of looks like me and maybe is able to talk or or something let's see about that and i'm going to do this project in html and javascript so it's going to be like a web page and i'm also going to do this without using any kind of libraries or external code so the reason i want to do this now particularly is because i'm going up against somewhere and um let's just say that i am about twice as old as he is and even though i said i'm not gonna be pulling my punches um i think i need to set some additional rules for myself and these rules are going to be not to use other code this is something i normally do when i make my tutorials but in this case i'm going to definitely try not to look at other code and actually i'm not going to use the internet i'm just going to try to code this using what i remember about coding in javascript and let's see how this goes so i really think something like that is needed but having said that i won't hold anything back so let's see how this goes i begin with a simple html and in the body part i'm going to add the canvas element let's call it my canvas like this and let me close the body and if you are watching this it means that this video recording is pretty good even though this is unscripted and we just selected this project a moment ago so i think it's good for you to watch a video like this from time to time because even though it's very long it has something that normal tutorials don't have and that's showing how the thought process goes when building something like this so normally when you watch tutorials you see people doing something that they have done before and they have made made it previously and they just show you the final steps most of the time but you don't realize all the thought that went into it and all the experimentation and things like that so if you watch this now it means i decided to post this video because i think it has a lot of educational value in it even though it's far slower paced than my other tutorials so hope you'll like it now i'm gonna also talk when i do these things most of the time and it's going to slow me down a bit but i'm not going to talk normally like in other tutorials so if it's something important that i'm doing i will explain more more carefully what that is now i refreshed the page here in the browser on the right and i've actually opened the index.html file that i started defining here and you can see the tab has changed its name there to the title that i declared and the the canvas is added here inside this page it's just transparent and in the stop top region so let me start to define some javascript next and i'm going to do that here in a script tag i will use many external files at some point but in the beginning i just want to set up this html page somehow so i'm going to get access to this my canvas let's just call it canvas like this and i will set its width and height let's say 300 pixels many people also ask me why do i disable the helper tools from visual studio code like it's not doing any autocompleting for me or telling me if i have typos or things like that and that's mostly because when i do tutorials i want them to not interfere with what i'm coding at the moment so often those windows just block parts of the code that i might be explaining and it's not very good from a pedagogical standpoint so let me give also a style here to the canvas otherwise it's still transparent and we can't see it there so i'm gonna say that the canvas is going to have a border of one pixel solid and black like this and if i refresh now i see the canvas element here so let me also align this to center actually i'm going to keep it in the top left corner i i prefer it like that and i will remove this extra margin from here it's going to make some things easier as we go so let's say here margin zero and now you can see this canvas over there okay now on this canvas i'm going to draw a character and i'm going to make this character a procedural object so it's going to be drawn using mathematics and lines and curves and different kind of shapes and colors and things like that but i'm going to um a drawing i made of myself a long time ago which i'm using to brand my my channel as a as a reference so i add it now here inside of this visual studio code project and i'm going to actually draw this image this jpeg on the canvas for reference to begin with and then the lines that i'm going to draw are going to be things that define this this character here so let me go back here and get a reference to the context for drawing on the canvas and that will be get context and i'm going to be using this 2d context let's see if i have enough time and energy to make this avatar even 3d a little bit but at the moment ideas are plenty and i should stick to simple things and have something that works first and then expand somehow it's not not easy so with the context i'm going to draw the image uh draw image method uh i need to get the image first so let me get the image by saying new image and the source of this image is going to be me dot jpg it's here in the same directory and i'm going to draw this image at 0 0 coordinates on the canvas so if i refresh now nothing happens let me try to give this a width and a height of canvas width and canvas height now so for some reason this doesn't work let's see is the image existing in memory yeah that should be there so here i'm getting the context and i have the image and i'm drawing the image maybe actually you don't have to specify the location there let's see now oh what is wrong so the image is there but if i try to draw it it doesn't appear on the canvas what if i just want to put it in the background of the canvas canvas um style no i can't do that okay so it actually exists and it's there but for some reason drawing it on the canvas doesn't work why okay so three arguments required i don't remember exactly all the all the parameters for this method can i draw anything else on this canvas let's see ctx move to begin path ctx move to zero zero ctx line to 300 300 and ctx stroke okay so the line is just fine but then ctx draw image img i think this should draw it starting at the zero zero coordinate there so something is strange a tough start apparently i don't remember simple things like this even so canvas works and it's initialized properly but when i want to draw it it doesn't appear there so what are the arguments here if i just put a draw image it says that it needs two more arguments so can i get the hint of what is this of what methods are available draw image not very useful oh boy how can i have problems with things like this now i'm getting worried so there's no internet thing it's scaring me right now but something here needs to work so what is the problem it is the correct name of the function i saw it here when i looked at the functions available here so if i type here for example ctx draw image without calling it it shows his native code so it i can't inspect it at least i don't know how oh here i get some information so x y width and height oh okay there are multiple versions of this so one it's with the x and y and you specify also width and height so it should work with zero zero and for example 100 100 what why does this ah the image is not loaded the image is not loaded i tried to draw it before the image had the time to load horrible start so uh now it works it's a small image there let's just put it here to be canvas width and canvas height like so and i don't need this line line 2 anymore this code right here phew i really started to be worried there for a moment now before i draw this i actually want to draw it transparent so global alpha set to 0.1 and then i'm gonna reset global alpha to one afterwards uh two transparent maybe four okay and now i'm going to try to draw this shape using using lines and curves and things like that and i will start with the head but before i start guessing these coordinates is going to be horrible really so let's me i'm going to write some code that helps me take coordinates by clicking with the mouse first so i'm going to say canvas uh add event listener mouse down actually click i think it's better let's see if it works and um get chord minutes like this so a function for get chords uh with the event like this and let's just uh log here edt.x and evt dot y to see if the coordinates are correct and uh refresh this and now when i click this i'm getting 0 close to 0 0 in this corner close to 300 300 in that corner so clicking gives me the coordinates from a point that i clicked on there so this is going to be very useful and let me just prepare here a function called draw me for now code will become much better later when i figure out all the things i want to do with this so i'm going to figure out the end result of this avatar as i'm making it it's gonna depend on the things that i know how to do and also um the time that i have and things like that i have a meeting in about two hours a little after two hours over two hours so let's see if i continue after that so draw me here is going to be called after the image is loading and after i'm drawing it here on the canvas so here for example i could draw the head let's draw just a line first from this point right here to this point right here so these are the coordinates that i'm going to use i'm going to say ctx begin path um like that ctx move to 149 34 and ctx line to 151 two two zero like this ctx stroke like this and now if i refresh i'm gonna get a vertical line here like that so um you can see that this code is helping me so that when i click on the screen i get the coordinates and i don't have to guess these points by trial and error and of course i can fine tune these points for example i probably know that this should be actually 150 150 which is the middle of this canvas there so now the line is perfectly straight before it was a little bit off center because i made mistakes in my licking normally you want mistakes when you draw things like that because something with not perfect symmetry and if it looks a little bit different on one side than the other then the end result is better but for this first part i'm gonna stick to it like this and at the end we'll see about normalizing these coordinates somehow so we'll get to that hopefully okay so this kind of works let me reduce this transparency i mean make it even more transparent maybe like this okay i kind of like that thing right here uh okay so i have just one line let's add a new line to see also the width of the head here so something like this yeah i used 130 because i want it to be perfectly horizontal here like so and 75 to 15 i think that these are proper pretty much so here i just want them to be on the other side of this 150 if this is going to be symmetric and i think it's actually not so 150 minus 75 it's 75 150 plus 75 is 225 so let's make this fix it a little bit already so now you can see already that the initial drawing that i made of this avatar was not perfectly symmetrical and maybe i want it to be symmetrical at least for now okay but this is now somehow centering the head right there uh let's draw the shape of the head somehow so i'm gonna begin a new path and i'm going to draw a line from this point right here to this point right here next move to 150 34. and 75 1 3 0. okay but this line is going to be curved somehow so actually i'm not gonna use line two here i'm gonna use um quadratic curve to that point but for the quadratic curve i need to give a control point somewhere maybe somewhere here 80 46 let's try that okay this is pretty much what i would expect the head to look like there but i have a feeling that this quadratic curve is not good because it's going to give me pointy pointy things there um when i'm gonna mirror this on the other sides but actually even if it's well let's just try so i'm gonna do another quadratic curve too and let's add the control point here like 94 and 196 and then the end point is going to be this bottom one so 150 to 20. i should actually label these points as well so here if you can look it's a little bit pointy but eventually this is going to get covered by all this hair so i don't need to worry if it's not so perfect there so having this now i'm going to actually copy this on the right side and i don't really like these numbers they are becoming way too difficult to somehow calculate all the things so i'm not going to do anything anymore at this stage i'm actually going to scale this canvas so that the center point is going to be here so this is going to become the new 0 0 coordinate and everything else is going to be symmetric like this point is symmetric to that but with minus and plus and the minus and plus here also um yeah let me do that so i'm going to say here not there but here ctx scale um okay and um ctx translate actually maybe i think this should be first and i'm gonna translate to canvas with divided by two canvas height divided by 2. so now things stopped working at the moment but it's ok let's see if this can be fixed somehow so we translate it to the middle of the canvas and we also scaled let's um not scale for the moment so yeah we translate it there but now this has to start at minus canvas with divided by two and minus canvas height divided by two okay if we scale like that then i think this now needs to be just one divided by two one divided by two one and one um actually yeah i think it's something like this yeah i did some mistake here i want to scale it up so that these values mean what i want them to mean but actually um i think i want to scale it like this sorry by half by half because i don't want to work with these half values here i actually prefer i think to work in the space from minus one to plus one so now when i'm drawing this this corner up here means uh minus one yeah it means minus one minus one and this one on the right is going to mean plus one plus one i have to fix also this get coordinates there but uh also these ones so this now means zero yeah so all these coordinates i actually want to subtract 150 and divide by 150 so a little bit work to do here but it's going to make the numbers easier to work with afterwards you'll see so the 150s become zero zero zero zero and then three four minus one fifty 077 with the minus then 220 minus 150 46 like that then 75 and i actually know that this one is going to be plus 0.5 because it was symmetric to begin with and this 130 minus 0.13 okay so i think this is correct and i can replace also these ones and this 75 was actually this one i think i'm gonna need new new coordinates for that let me just comment out these oh interesting something happened happened i'm not drawing any fill i think what happens is that the line with yeah the line with is very very thick now because of that scaling i did previously so actually i would like to do the stroke or let me just ctx line with something very small and work with that okay i think this is just fine now and for these i'm gonna need new coordinates and i rewrite that but after i fix this part right here so i want this to log the x minus canvas width divided by two and then divided by canvas width divided by two so something like that this is going to now give me the coordinates when i click on the canvas so that it's already scaled in this new space that i'm dealing with so this one here should be close to minus 1 1 this one here one one and this thing in the middle should be pretty much zero zero like this and um i don't want this log to be so ugly so uh let's just calculate here x is equal to this and um around this so maybe this works if i remember right so the number formatting method here if i put two at the second argument it's going to give me just two decimal place i think it's probably gonna be enough and this is gonna be x and y here so why oh number format is not a function how was this not format too fixed i think so too fixed i don't remember where the two fixed ease yeah i don't remember how this works anymore i don't think there is a thing called format so no number oh no uh i think this is the number yeah let's just leave here um something like that and um i just copied this one for the y as well and here x two fixed yeah just two decimals so it is a number already and it's a method from the number yeah now it works and it looks it looks quite good okay so what were these control points here the one on the top minus minus 0.44 minus seven one and the bottom one that but these coordinates here need to also be 0 and 0.46 so ok what did i do wrong this one needs to be this one great so we have the same thing as before but uh different so why did i do all this crazy stuff it's just that now and i want to make this symmetric on the other side as well i'm going to copy this for example and this one is going to go to this point right here but the control point is going to be the same as this one but with the plus here because now this control point is somewhere here and plus will make it go somewhere there so i don't need to do so much mental calculations if everything is symmetric like that and uh let's just do the final one here as well so we're gonna go back to the beginning to this coordinate there and this control point will have a plus right here so it's it took some extra time i didn't prepare for this kind of thing but it works so great okay now uh this is the shape of the head a little bit and i am soon going to have to specify names for these points i think let's let's see i might define some points for these so that i can animate them if i'm going to move the head in some way that would be nice but let's see so now that we have this i can also draw the body a little bit so let's draw the neck here so these two chords in its begin path and let's just say move to this location and align to this location i think i want this console log here to output the comma between the points as well so let me concatenate here a comma like this for the future oh i have this horrible thing here all right so we have the neck there good but the neck is a little bit curved it's supposed to be a little bit curved if you look closely and i'm gonna do that as well so i'm going to say here quadratic curve to the same destination but i will add the control point maybe somewhere here so this is going to be like that and now the comma is also here so i quicker at debugging and now the neck is curved like this it's great so it's going like that and let's continue this path to make the body somehow so add another point right here and i think i'm just going to line to this one so let me copy this like so now it's just fine i'm not going to focus on that part of the body very much and clothes are gonna cover that eventually so it's perfect and uh let's now make it go off the screen a little bit so downwards like the shoulder from here same x but a y that is going to be one or more let's put it 1.1 so this is going to go now down off screen a little bit and i'm going to do the same to the right so the next line two is gonna be a plus here uh we don't see it but now it's somewhere there and uh this one is gonna be with a plus there like that and now we are going to go to this location but with the plus so let me do that and finally a quadratic curve to for the other side of the neck we are going to this location but with the plus right here because it's on the other side of the center and the the control point it's going to be also symmetric so it has also a plus there great so let me actually extract this draw me function for from here and say that this is going to be the body i think eventually i'm going to use objectoriented programming but um i just want to see if it's needed and get something done and then i will refactor at some point so now i'm drawing the body and then the head so let me refactor this one as well draw head okay and i'm gonna put the body before drawing the head because i want these lines here to be covered with whatever the head will look like okay i'm missing a begin path somewhere or no uh no this line width has to happen early on i'm gonna just set the line width somewhere at the top for now so all the lines will be like this this shape this size all right now i would like the head to let's still practice a little bit with these lines or no no i would like the head to actually rotate a little bit so let's think how we can do that so i want him to be able to turn his head like saying no for example left or right i think that without doing some fancy feature like this uh i'm not gonna win this challenge so just drawing this you could just replace this with the sprite so i want this to have more personality than that so if we consider a point here in the center maybe the nose could be considered the center of the somehow let's see so um let's just consider this center point for now and give it a name let me actually draw this point somehow so i'm going to make a function draw a point let's give it the label and this is going to be ctx begin path ctx arc uh we need the location for this one as well not just the label so location.x location.y and a radius let's set here a radius with the value of 0.01 or something like that and pass this radius and the arc method needs 0 and math dot pi times 2 so 2 pi means 360 degrees a full circle and now i'm going to do this and that point here is actually a point let's see draw point it's point um zero on the x but vertically it's uh minus zero 0.13 this is where i drew this line because it's where the head is the widest i somehow want to have that value for i feel i want to have that value so we might change many of these things later but let's see how this draw point method looks like so refresh nothing happens because i'm not giving the point in the proper way maybe yeah let's give it in the proper way like this x and y i think it's fine okay and it's actually here but very small let's make this radius bigger yeah i think that's fine and the ctx feel but let's give it the white fill color so ctx fill style is white and after i fill it i want to draw there a label so this let's call this point a so the label a and i'm going to say here ctx fill text label at location.x and location.y like this but before that i will change this to black so that we can see black and white oh boy it's a horribly big font let's give it a radius number of pixels and make it aerial i somehow like this font for some reason and uh i wonder if text works well in this scaling conditions but um okay what what happens here let's put 0.1 pixels i think that it might not work for some reason this feels filled text the scaling method that i have used here might affect somehow the the text properties and i don't know if it supports these number of pixels or does it but i i didn't concatenate this pixel value here let me yes okay phew i i don't need to use a space there it's uh linked to that value okay a radius of a size of maybe radius times two now it's too small i think that is something fine maybe okay but i need to do text align center like this okay and now point a is in the center there so this point a i want to be able to control somehow let me make the background here actually light green and remove the stroke from here i think it's somehow too many strokes and i don't want it to be so distracting i think that's fine or let's make this green and the field style is going to be white i think this is much much more readable and this radius can be a little bit smaller maybe 1.9 i just want to have things here that look somehow nice since i'm gonna reuse this component multiple times i might as well have some nice components to work with that is not distracting in some way okay for some reason this would need a little bit of adjustment here as well and i want to use part of the radius for that so that this is relatively well implemented so that if i change some of these scaling properties it looks good okay so this point a is something that i want to control somehow and i'm going to define for this some slider let me try to do that input type range id a the x of that point will be controlled by this ax slider okay so we have the slider now here uh i would like it to be up here actually so um no i don't want that because it's gonna mess up with my cord and it's when i click on the screen i don't want to bother with that i'm actually gonna put this slider i want it up because i will have more of them so let's put here sliders eventually i i want to move that point maybe also upwards let's see so another slider for that and um i want this sliders element to be uh positioned at the top somehow so not the best way to do this i might redesign the things later but let's see zero okay now it's here but i want it to be left 300 pixels okay so this slider is going to control our position and for this ax element and let's just say that we will give here a minimum value of minus one max plus one okay and initially it's it's zero by default okay so now on change uh unchanged i'm going to set here a value a function for update point probably we'll rename this soon let's see but the update point let's put here info and log this info in the console because i don't remember what it contains so now when i change this okay it only works when i release so i don't really want that uh i think there exists also on update no on drag no one change but really i am pretty sure that it's on update with small u or no i don't think it matters on change yeah i really want it to go while i'm dragging this so this on change is not enough on move no update these are so different in different programs and different languages i don't remember ah on no i don't remember let's just leave it like this for now so what i want to print in the console is not the whole info but i think it's value oh but why is it like that because i specified here one as the maximum okay now it works but i can only put one zero or minus one it snaps somehow i think there is a step also that can be used to fine tune this yeah okay i guess i can work with this oh and i can use the keyboard to to move this as well okay so now the thing is i want this slider to control how the head is going to rotate by first controlling where this point is going to be relative to that and this is between 1 and 1 so it's going to be a maximum 100 percent or negative 100 percent movement that we will allow in the interface so let's just define this a point somewhere i'm going to define it at the top somewhere maybe maybe here a is equal to something so this in the beginning and then i'm just gonna write there a for now so this point is here and when we move this slider i want a according to this to go left on the x or right on the x so this would be left on the x from this original location uh like mid location to the far left and far right extremities that we will give so this x and y is like the initial like center point the only thing i'm changing is the x right so it's like the initial initial location but then um let's call another property here x range between let's say minus zero point seven now zero point two something small and plus zero point two so this is gonna be an array of two elements for this x range so now what we are doing updating the point i'm going to say a dot x is going to be within that x range give me the value according to this percentage here so this is between minus 100 percent plus hundred percent and maybe center could be somewhere in the middle i really want these things to be symmetric so putting here things like that is kind of too much let's just try to put center point and there and if the value is negative it's gonna mirror itself to the left if that makes sense so i'm only putting things on the right of this center part and everything else becomes symmetric to the left with the minus minus values so ax is going to be i'm going to do linear interpolation so linear interpolation between a dot x range of 0 and a dot x range of 1. using this value as the percentage so function linear interpolation is very simple you have just two values let's call them a and b or start and end and a percentage we can call that t because p usually stands for point so the function is really easy it's you take the first value and you add the difference between the end and the start multiplied by this t value so if t is zero then this whole thing is zero and you're just at the starting point if t is one then this difference is going to the minus s from here i mean if t is one this disappears and the minus s from here cancels this one so you're just left with the end point if this is somewhere in the middle then this difference is not going to amount as much so it's basically evenly spacing you values according to this percent here and if this t is negative this difference from here actually goes uh on the up other side so i expect that this will work with the negative values as well so let me just try this like that but i won't see any changes here if i'm dragging this because i'm not redrawing this on every frame i need to animate this so i'm going to put this draw me function inside the function called animate that i'm going to call draw me on every frame and the request animation frame is the method that does this calling of the animate function again and again and again as fast as it can so now it still doesn't work oh because i'm not calling the animate function anywhere but where am i calling draw draw me okay so animate here once the image is loaded okay something bad happens because yeah um it just draws again and again and again thinks on the canvas so i think i'm going to copy this drawing of the image every time we draw us i also draw the reference image this image by the way will disappear by the end so that's no not something that will stay here and now it's drawing it on top of each other with these kind of uh small alphas there it looks horrible i will just clear clear the canvas i hope this works uh no it doesn't because we are in this new space right now so i need to use this okay so it looks as before but now every time i release here that a point is actually going to change according to my slider um within this um range that i allow it so i told it basically that it can go from zero which is somewhere here to 0.2 which is somewhere there but because linear interpolation works also with the negative value for t that we can give with this slider i can also have symmetrical symmetric behavior there as well which is good i think i'm not entirely sure i don't want everything to be symmetric but some things i i want them to be symmetric so yeah so now that i have this a point there i'm going to try to draw this straight line that we had previously to be controlled by a in some way like using a as a control point so that the head tends to rotate rotate a little bit like that so let's see if we can get that to work a is now here and when we draw the head this is the vertical line here and uh i don't want it to be uh line two anymore i want it to be a quadratic curve to where the end point is the same it's this one at the bottom right there but the first point here is going to be a dot x a dot y so instead of the line two we have a quadratic curve that goes through a when a is there it looks like a straight line but if i'm gonna do this you can see the head tends to rotate at least a little bit influenced by that control point so this quadratic curve two function it's actually poorly named because there's also another function called bezier curve two that has two control points and it's poorly called i think because both of them are bezier curves bezier curves are very general curves and they can have infinitely many control points so you can have one two three there is no function in the canvas with three points but you could implement it yourself using bernstein polynomials or something like that but um yeah so both of them are um bezier curves so the fact that there is another one called bezier curve 2 means that this one would not be which is kind of i don't know bad naming but when dealing with bezier curves it doesn't mean that the curve is going to pass through that point so this is one thing that people are usually confused about what it means is that when you start the curve here in the beginning you start exactly in the direction of this point so if you draw a tangent from this point it would go through a but it's just influenced and as you're going the end point starts to influence as well so you don't actually pass through a over there uh if my math is right i think that if you put here instead of ax ax times 2 then it goes through a because when you have these quadratic curves essentially what i'm doing now is my control point here it's a x times 2 so it's somewhere here where my mouse is now and then the curve goes exactly through that value so the point where let me just undo this the point where the curve will pass through closest to this a is actually gonna be halfway between where a is and the straight line goes there so a little bit of math this might be helpful later when i'm gonna do some of these things more carefully but okay this is the a x somehow how about one for the a y as well so i want to make this line here the straight line there also modified by a slider like that so let me go here in our sliders and define a y in exactly the same way as previously and here it's something that i really want to change something so this update point um i really want to say that this is uh just the x element x attribute needs to change and this one has to change its y attribute i don't really like this function here let's see later if it becomes better but now update point attribute so the attribute a of x so this here i can also write it like this and it should work but now instead of that hard coded string i'm going to put here the attribute is going to be um not very good uh i think what we will do is um so i want the y range as well let's say 0 and 0.4 just to test and to see that they are different but i need to be able to specify where i want these this interpolation to happen so now this attribute yeah let's just say here for now switch based on the attribute and the case x then a of x is equal to that break and a of y is gonna be with y range here so i wanted to do this with a single line but i think this is also clear at least for now let's see later what what happens if this kind of code structure is good so what happens now we have two sliders and this other one controls the movement vertically somehow but there is a problem here because zero point is not where this thing is from previously and uh maybe this is actually a good thing um let me think about that but uh of course i could change this so this line this horizontal line here it's um at this location so if i'm going to put the y range like that then 0 is is fine there but let me try to have these steps more fine for this one i have a feeling there is something wrong with the math here so let me just move this with my keyboard no it looks pretty good so with my keyboard a is moving yeah it's it's moving quite well i don't know why i expect it to be a jump there somewhere let me try to make this even smaller it looks quite smooth there yeah okay everything seems to be just fine yeah it's uh it's good the math is good i don't know why i thought different so so with a there this looks good now but the horizontal line should be now controlled by a and let's do it so that i do the same kind of quadratic curve to here going to the bottom so from the top to the bottom and um the same control point as uh previously a a controls both of those curves so now you can see somehow the head seemingly 3d ish but some things here i just don't like for example i actually want those curves to go through a but that's not gonna be so easy to do i think let me see i don't want necessarily this to happen and i don't think that it will happen exactly yeah i don't want actually to complicate it like that but horizontally i think the movement is good but vertically it's way too much so when i wrote here at the top um the y range going from this to that this this value is just too much way too much so i'm gonna put here maybe also 0.2 as the other one let's see now how it looks like so left right and like that and this one here still too much i don't want to have so exaggerated movement i just want to give a little idea of 3d this is not going to be a 3d space with x y and z it's just going to be some locations like some keyframes when the character is looking left when the character is looking right and then interpolating between those somehow so it's one technique that is used in animation quite quite often but here i'm coding it instead which is actually not very often in practice so up and down it's actually way too much i'm gonna put here maybe point one i think this is just great so good enough movement there and the left and right yeah something like that so question is yeah okay and then the things that will somehow uh color the face and give it hair and things like that will also be influenced in the same way as this a point somehow so that would be overall the idea there are a few things that i don't like yet for example moving your head up doesn't just rotate it like this if i can try to mimic this your head actually moves a little bit upwards so these points here and this point here should also be affected by these sliders otherwise it just looks very robotic and not very realistic and same goes for left and right when i especially left and right because you can see the chin is really going off from the the center of the of the body when you do that so these points need to have ranges as well as this uh a point that we are somehow now i'm considering this a point as a point that the character is looking at if it's quite in in front of in front of the character so it has some sliders there uh to control that but the whole head shape is going to be affected uh as well not just this center point of the face it's uh yeah so that's what we are going to try to do next and i'm going to define these points give them labels as well as a is here so let's see uh i'm going to name this point maybe b b c d e or something like that so let's define these points as well and um i'm just going to start with one of the points maybe b and this one is going to be this location from here the first move to that we do there so i'm going to cut this say here b dot x b dot y and put the values here so 0 and minus 0.77 and there is going to be also a range for x we will figure what the out what what those are what that is and also a y for that but let's just put these values to be minus 0.77 minus 0.77 so essentially the range is null and 0 0 so now x is between 0 and 0 and y is between minus 77 minus 77 so there's no range there i just put it as a default value so just to get it to appear somewhere first and uh let's put also b b like that so b is there the sliders don't affect b at the moment at all because also this draw point is something i mean update point is something that only updates point a so not good code here i really need to think about this just in a second but uh before that this b is 0 and minus 0.77 let's see if these points are still somewhere so this is b right here definitely i think those are the only ones this one here and this one here so let's just put there bx by and uh now in this update point function i need to be able to specify somehow which is the point so let's put here b that that's the point i want to modify i send it as a parameter like that sorry first one is is a actually okay and here in the update point i could say um point so which one is going to be but now i need the way to access this so we could put actually all of these inside of um an object called points maybe live points they are points that move and this object is going to have an attribute called a and an attribute called b i don't know if this is better yet but i need to update the code depending on what i am looking and feeling when i'm designing this so this is not the typical waterfall way of developing things it's quite agile and you think what you need to change according to what you want to achieve there so now life points actually and the every time i'm using a or b like this or um i could actually destructure this i think and have uh references for a and b let's see const a b is equal to live points maybe does this fix my problem life points is not iterable no not not that so huh this is not an array okay a is still moving even though i did this change right here but then i want in the update point to take not a here but the live points let's call this point p is live points of point which is a string so this point here is a string and it's specified here which point are we changing by the slider let's actually also have here a and b like labels so that we oh no no no no no no it's not a and b it's a x oh boy a x a y no what am i doing this is not not even a anymore let's just keep team these a x and y so this id here it's actually not used anywhere um but this is not update point it's it's update points now yes it's update points now all the points need to update according to the value of these sliders and this slider controls the x and the other one controls the y so let me even remove this id from here because it's confusing now and we don't seem to need it so what we do now is go through all the live points so and and each of them have their own ranges right so this is now update points and um for each point in there i'm going to switch depending on the attribute and um p dot x so at first it's going to be a and then it's going to be b and both of them have a range on x and the range and y and the the ranges will eventually be different so let's see if this code works okay some problem there haha um for for each this would need to be an array i think let's see how the four in loop for let be in live points i really don't remember all of the ways that these for loops work but okay so um this is point id like a in that case and here i'm gonna say the point p is gonna be live points of p id so i don't use array but yeah okay so x is okay y is okay let me just add the line break there at the top okay and uh i think they can be a little bit to the right so something like that too much okay great so so let's try now to modify this b as well so it code should work we just have to change these ranges here like if i'm going to put a 0.02 range for b you can see b is moving now in that same kind of as much as a is moving actually and all the lines connected to b are also adapting according to the control points the same control points that we had earlier and you can see the shape here is not great it's not like a real head would look like but i have some other ideas for drawing the head on top of that and i think it's going to be fine but one thing is i do want b to somehow move like that but not as much so maybe i'm going to put here 0.1 and now when a is going in that way b is moving b is moving less so i don't really know if b needs to move like that honestly because the top of the head does stay in the same place but uh i think i i do want it to move vertically with the y so it could be that i'm gonna just put here range zero zero like that or something very very small sometimes small values uh make a big difference in how everything feels so it may not seem like something but it does so now i'm not really doing any 3d stuff or realistic movement is more like using animation principles and things like that to make the movement more appear organic to somebody who knows some kind of things about about drawing drawing objects there and i'm not i don't want anything to be perfect but to look good so many things are like that especially in animation um you exaggerate and you emphasize some things that don't normally happen in the real real world okay so let's try the vertical one as well so from this value here let's give it a value of minus 8 0.8 and just see what happens uh okay it's it's opposite this it's opposite yeah it's opposite so i want 0.7 there so now that b point is also updating but it's too much maybe 0.772 i just want a little bit of head lowering when the character is looking downwards so again a little bit goes a long way and uh same for the upwards position maybe 7.3 is actually even better yeah i'm i'm happy with that okay and it's also supporting this a little bit okay now this chin this is something that moves much more because it's pointing out like like like what chins do so let's try to do that point next and uh it's this one right here so let's extract point c dot x c dot y and i'm just going to duplicate this line here with c and there is a plus value here 0 46 and the ranges um again i'm going to start or let's give this a value let's actually make it two because center of the face and the chin kinda are on the same plane i think uh and the y range yeah um zero point 46 and let's just give this let's keep it like this for now and modify it later so the c point see appears there with 0 and 046 but it also appears here is this the only place where the chin appears how is it possible because um okay we're drawing this way so then we don't have to move to yes okay so it's only one time here c dot x c dot y and an error c is not defined because here where we where i'm doing this destructuring so that i do have easy access for this a b and c points and i don't have to always write live points dot a b c so this destructuring is something i'm probably going to forget very often but now we have a b b c abc and yeah you can see that a and c are somehow c is definitely looking more like a like a chin now when you're rotating and i'm really happy with this i think i like this shape of the head that we have now okay and vertically c is not moving and this is something that needs to change i think it should move similar to a the place that you are looking in in your face yeah i think it should move as much as a pretty much let's see so a is moving okay quite much let's try to put here 60 six it's too much i think it's not horrible but let's just put 62. so the thing is because these are on a plane the bottom part shouldn't move as much as the top part so this is a bit of a problem we are having now i like how it looks like when the face is looking upwards because the chin tends to let the neck visible and this part from here but um when it's i mean this position but when it's going downwards this becomes way too pointy like the chin actually disappears between under the nose and doesn't expand doesn't expand that much so i have a problem here this whole way of doing things just doesn't seem to work properly in this case i could do something of a two ranges a negative y range and a positive range maybe we try to do that it won't be very realistic but we see if there are consequences why negative range so this is going to be to zero point let's say 40. and here where we are doing these updates we check to see if the value is less than zero very complicated stuff so let's say const value is if the info value is less than zero no no no no no i want the x range i want the y range so y range to use if the value is less than zero then use then use negative range otherwise range um y range i don't like what i'm doing now but at least to get something that works and then we'll think about restructuring a bit later so here i just take that value and um and this only in the case that negative range exists so if b dot y negative range because all the other points are working just perfectly now so the only issue i have now is because of the phase and the 3d way that faces look like i can't model this mathematically with such simple linear interpolation techniques it needs to behave differently when when going up then when going down um so let's say here let y range and the value and now this y range is going to be that so actually y range equals to that but if the negative range exists then it's going to change and value is going to be info dot value but here if the negative range exists we actually want the value to be the absolute value of the value i think i will see if this works okay what happened did anything happen so let me put the negative range that just doesn't change so something like this okay everything is opposite oh yes because y goes downwards so uh the range let's just keep it 46 and this one 62. actually 6246 so and then 46 minus 16 30. so this is actually 0.3 here okay so upwards movement is fine but then downwards movement at some point c becomes i really want to use some kind of a mathematical function like the sign here i don't know how to code this so nicely and i don't know if so much work is needed but um okay so at least now c is stationary there for the positive values so what i'm gonna do next is um modify this to say maybe 50. so okay so somehow now c doesn't move as much when going downwards but actually maybe i want it to move even opposite direction let's just play around with this a little bit so i think that this is actually a more natural movement when characters are looking downwards because the chin just disappears somehow so i'm over complicating this i think but yeah let's leave it like this now and let's try the other one okay i think this looks good good this is fine maybe four two there looks a little nicer yeah okay so a lot of time went to finetuning these things but i think that we are on to something and i kind of like this structure that we are having now and the fact that i can move the character in these different directions no i i don't think this is great i think let's try again with the positive bigger value there yeah from the side you actually would like to see the chin continuing to move downwards it's really tricky it's not going to be fantastic and i think that i'm going to limit this movement a bit more eventually like maybe not allow the sliders to go all the way i really think that you don't need the most extreme values for the slider to get a nice looking animation there and even values here in between are going to be good enough and we may not even need this crazy stuff here with the y negative range there it's just way too much work and too many things to worry about code will become also difficult yes but or let's leave it for now and worry about it a bit later and i will have also a meeting in about half an hour so let's see what is the next step going to be uh how about i try to draw the face like the eyes for example maybe that's one challenging thing that really needs to get done so maybe if i focus on that one for half an hour i have enough time i hope so all of these things that we did now are probably going to be things that will be deleted at some point they are just reference points but then at some point they will be replaced by actual skins and make the character look like that reference drawing and then we remove that reference drawing of course okay so let's have here the head and inside of the head i'm going to make a function draw eyes okay and i want these eyes to be somehow very much influenced by where a is right yes so let's put here a as a point that we will be doing this eyes relative to and i'm going to do here function draw eyes a reference point and let me just make the eye that is going to be on the right side here so i'm going to begin a path and move to some location there draw some curve for the top part i is very complicated actually oh boy oh boy what did i get myself into let's just draw the white part of the eye first so yeah we're gonna start at this point but these will be relative to a somehow so now i want to click on the points i mean measure here coordinates relative to this a location so just temporarily i'm going to modify my function for printing the coordinates here so that we have offset x is going to be x minus a dot x and y is going to be y minus a dot y so now we get here offset.x and offset.y and that means that clicking on a here is going to be pretty much zero very good okay so relative to a i'm going to start clicking on some locations now so this point right here okay and then i'm gonna do a quadratic curve to with this control point and to here and then another quadratic curve to here and another quadratic curve here and another quadratic curve to here so quite many points here that i'm listing in the console so let me clear this text somehow i'm going to align this and oh i didn't select all of them so these are the points and first i actually want to translate so the canvas before that i want to also save the context so save my language changed the keyboard translate to the reference x and the reference y so this is going to be a and just to remember at the end we also need to restore to the last state the canvas and here we begin a path and we say move to this location yes and then quadratic curve to i just copied this using this control point to this location let me actually cut these that i'm using already so that my i don't make mistakes and then another control point to this location and then another control point to this location what did i do wrong let's undo everything okay so this was the first i remove it so then you have control point to this location control point to this location control point to this location and control point to this location okay and uh maybe we want a stroke or actually a white fill but okay something is there it's not perfect i think the last click that i did needs to be actually perfect to the one in the beginning and i don't like this control point from here it should be higher up so i just moved it a bit okay and a little bit to the left i think i want it to be so five okay it's not that bad and of course this is now going to move with a but you can see it's not really great the way it's going to move with a needs to depend also on this slider in a way but it's something it's kind of like how uh yeah it's kind of like how glasses would look like on a person i think you could easily make glasses in this way let's actually try to consider glasses maybe i don't know i don't want glasses on this character i think but um so this is just one eye let's add another function here draw i like this and move the code from here to here and say now draw i so everything should be as before but if i'm gonna copy this now let's say scale minus 1 1 so i'm scaling on the horizontal axis basically flipping according to a to the a point then i'm getting here uh reverse okay begin path needs to go here there was some strange artifact there and now this kind of looks like the character has glasses um not eyes because the eye is somehow getting away from the out of the face i really like what what we are doing here i just hope this is possible to follow along i i think i'm definitely gonna publish this video it's gonna be long and some of the things may not be clear but comment below if you if you need some explanation about what i'm doing um yeah so let's actually have a function here called draw glass i draw a glass eye i will comment that is not used and uh now what i want to do is when we are drawing the eyes actually make these a little better so that the eye doesn't go out of the of the screen like that so what i want to do is on the positive value of this x i want to squish this i like that somehow so when i'm drawing the eyes i don't need just a reference point but i need also the x value there so how can i get it reasonably well i could store it inside of a as the value let's just do that so p dot x offset is equal to value so this is what is going to happen here and all of them will start having x offsets and y offsets equal to the value so it's just one way that i can do to pass this 0.6 value of my slider there from here to the point and now this reference point that i have here has this x offset as well so draw an eye with the reference x offset and this x offset is actually going to translate into the scale of the eye let's just do one eye first and let's call this value scale this parameter scale x and let's say here ctx scale one minus scale x and this is going to be something like a value there let's multiply it by something let's just see what happens oh okay this horizontally but vertically i don't want anything at least not yet so i just put hundred percent scaling vertically and now okay not what i want so the scaling the scaling that i'm doing here also needs to be restored afterwards after we draw that otherwise it affects the other eye as well and we don't want that so i'm gonna do this and now it affects only that eye but it's affecting way too much so i want it to affect less so this is why i mean here maybe multiply this by 0.3 like that and now the i scales well but um here in the negative value it's still scaling it's stretching it more than the other eye and we don't want that i think that i only want this to happen for positive offsets so let's just put here math math max the maximum value of 0 and the x offset and let's see what happens yeah so now the eye doesn't stretch anymore i think it's kind of like what happens it does maybe get a little bit smaller when you do this but uh not very much the other one really becomes uh much smaller because of how um how the geometry of the of the face is it it starts to go behind the eye and also the nose goes in front of it so that's something that we will need to to think about um so when the eye shrinks horizontally like this it's it's good i think and we can put here a bigger value i think maybe 0.4 yeah i think this looks great so the other one we'll see at the end some fine tunings if we're gonna change this in some way but um okay so how about the value here it's also needed so for the other eye when the head turns like this this one should also squish so now we have negative values there let's just put minus here i think yeah so that one squishes like that and the other one squishes like that and we see if we need to do anything for those cases when this is a negative and this is a positive there at the end but for now i like the way that this looks like and yeah i i think that this is pretty good so let me try to shape these eyes a bit more i'm going to draw actually i'm curious how it looks like with the glass eye as well so this one doesn't need the scaling i'm just going to put here draw glass eye on top of one eye and draw the other glass eye what happened why it doesn't work oh in the beginning everything is perfect there now it doesn't look that great i thought it would look somehow nice they would need some more adjustments i think so but okay a couple of things let's just remove and leave it as unused and maybe we adjust them later if we want glasses but i don't really like the idea the stroke here seems to be affected horizontally somehow the line thickness here at the bottom seems to be thicker than here i think that if i do the stroke after the restore yeah i don't get that effect anymore which is great i think it's great okay now vertically the eyes could also do something i think they should squish slightly so let's just put here uh ref.y offset and here as well and this is going to be scale y um okay and here one means nothing is going to happen but i want to if the scale y is something i want to make it smaller so it's going to be minus a fraction of this so scale y times 0.4 and because this is going to be negative and positive values but i want only positive here i'm going to take the absolute value of that so nothing seems to happen let me take the value from here and log it i don't think anything is happening but the values are good so let me call this vertical squish is equal to this which should work but it doesn't and um horizontal squish this one works already wow something bad happens there or oh this no now i lost the x behavior but the white behavior works what the what is happening oh no something is very weird it seems to squish the eyes but not the first time i'm uh i'm moving what is happening so the x offset should be good let's print a here x offset it's nothing but then i move y a little bit aha um i think i know so these offset values they should be something in the beginning um otherwise there is not a number there or undefined or something and it's causing some problems so let me put x offset is zero and y offset is zero in the beginning and we just use the ones from a at the moment but uh maybe we need the others at some point i i don't know so now yeah a y works just fine as i expect it to and here yeah this eye gets squished in the other way and that one like that uh some things i don't like in these extreme pose but i will probably not let it go all the way there so something like this is just fine and some rotation may be needed also to adjust these but this i'm gonna do later again it's just something for what looks good eventually so seems like i guessed the values quite well for the vertical movement i really like how that one happens here not sure if this would look better if everything here would be rotating a bit but when we have everything in the drawing then we will decide these things now it's just the shape of the eyes really so what i'm gonna do now is um yeah what i'm gonna do now it's good i like it okay so let's make the eye look like the actual eye in the drawing i still have about 15 minutes before i need to take a break and for that to happen i'm going to first instead of doing a stroke here i'm gonna do a fill like this so these are now white but let me make it fill style is equal to rgb a zero for red green maximum green but i'm gonna make it transparent so that i still see the shape behind all right this is good i think and i'm going to focus on this right eye again so there is one line here one curve going around the eye and this actually i think we already have the points for that one so here we started somewhere there and we had the quadratic curve like this the second quadratic curve might give us what we want here so i want to draw this black line here so i'm gonna move to this point which was the end of the first quadratic curve so begin path this restore i think can go here now and stroke okay that was fairly easy i think it's good and it doesn't align great with the other one i'll see later if i add some kind of randomness to somehow make it look more organic i just hope i have enough time and uh maybe this control point could be a little bit lower i don't know i think it's just good so last i want this not last but second last i want these eyebrows so let's do the eyebrows next and this is not going to be very easy i'm gonna start somewhere here and then a control point somewhere here another control point i mean end point of the first curve here and then a control point maybe here and another endpoint here another control point here another endpoint here and another control point here and another endpoint here with a little bit of adjustments we'll see so these are going to be the shapes of the eyebrows and i'm going to use fills for them but black a black fill because i really think that having an organic shape for this is important i'm not just going to draw a very thick line which is one way you could do this very quickly so i'm gonna i'm gonna go now move this restore to the bottom and begin a new path yeah i think this restore will have to need some thinking otherwise squished lines from previously might be but let's see but i'm gonna move to the first point from here and then quadratic curve to here and then quadratic curve to here and then quadratic curve to here and last but not least quadratic curve to actually the same point we start that my last click here was not that accurate so now with that let's stroke this one too no fill and it's actually green uh let me change it to black fill style okay not great yet but it's something and i don't really see everything because of this a point so let me just hide the point a for now eyebrows connecting there i don't think that's great so the start point could be more to the right i think maybe eight oh no this is this point i think that one was fine but uh actually the last control point this one yeah this could be maybe like that or even less yeah this is good i think let me comment out the eyes a little bit no too close it will look funny so these points are not very good there my clicking was not very accurate so let me put here how about the value of 0 it's better maybe 0.01 or even 0.2 okay this is quite good and the this control point here from this one i think this needs to be more i mean less minus zero point zero four yeah i think this is good why not it looks quite okay some sharp corners around the edges here but let's try a bit bigger maybe six okay it's not bad i could fine tune these much more and i could use that bezier curve to which has two control points to get rounded corners to be more round or there's also the arc 2 method but i don't want to over complicate the code i prefer to use less methods more times because then it's more obvious what is happening and it looks it would look indistinguishable i think so okay it's not bad so this stroke thing is something that i complained about that yeah something will have to be done with this rotation if i consider these extreme sides but i said that i'm probably happy enough if this will be like the maximum movement range so it's fine it's no problem okay uh i want to get it done and not somehow um how to say not have nothing to show at the end or an incomplete thing so i prefer to have it not perfectly polished but somehow working and this is quite good i think so let me make these eyes now or let's draw also the arc for the circle so for the i um the dark part of the eye whatever it is the iris and the pupil somehow combined here so this is going to be just a single a simple circle let me put it here like this so yeah and if this stroke is somehow bothering that it squishes here like i said previously we can also move this here and do the restore before we do the final stroke there and i think that this is going to look exactly the same because the line and this part here are both black so oh how is this not giving me an error did i yeah anyway let's see but uh an arc so ctx begin path ctx arc at 0.17 and 0.09 with the radius of i don't know i think i'm just gonna try to guess it zero and zero dot math dot pi times two and fill here oh i sure guessed it very small very big wow what oh okay maybe 0.6 yeah it's actually not a great idea to use perfect circles like this i think that having slight ellipses would be better again something that i might polish in the end result but let me change now this green transparent fill style to white and now the eyes look kind of like the original eyes but they are animated in in a sense that they are controlled by this movement the pupils will need to move a little bit different than now otherwise it looks too much like these are not eyes but stickers that look like eyes and glued on top of the of the face so when looking up it's natural that these circles move a little bit upwards and so on so i will have to think about how that could be done again as a final fine tuning there but now this is good for now and i'm gonna have to go so i will come back a bit later today and try to do more of these graphical things i think i want to get it done today this kind of to get it to look like the original image and also move somehow and tomorrow i will try to make it maybe talk or something i i don't know yet and it depends on my speed so far it's been quite slow but i think that now i have enough tools with this kind of clicking to get coordinates and and whatever these are quite useful things that i have made and the eyes now were quite fast to do compared to when we started so i think things will speed up only speed up from now i hope depends what i will try to do later so i'm gonna stop the recording now and get back in a while okay i'm back now for three hours or so and i think that's all i can do today i'm getting pretty tired already so next what i want to do is um focus on the beard so i'm going to try to draw the beard and also have it go around the face like when the when the face is moving like like that it should wrap around nicely somehow so the way i'm gonna do it i'm gonna use the point a from previously the one here that i uh commented out previously so the beard is gonna be drawn relative to this point as well so similar as what we do with the eyes i think that that makes the most sense somehow let's see so i have draw eyes here let's have also draw beard according to the a reference point so we have a function um draw beard and let's have this point called the reference there and i'm gonna copy part of this code from here for the saving and translating but this part is not needed so now uh i still have activated here yeah these are coordinates relative to a now good so let me click here where this beard starts and actually i think i'm going to click here for the starting point so this is let me clear the console here and say click here and a control point should also be somewhere there maybe here and the end point will be this one now from here this changes curvature here so let me put another control point a bit higher here and then the final point here is going to be right in the middle so this is actually supposed to be zero but my clicking wasn't perfect so let me copy all of these things right here and remove those things from there and say begin path move to this point and then quadratic curve to using this control point to this location and the final one using this control point to this location like so and let's stroke this for now um and refresh yeah looks pretty nice like what i expected but when we rotate here it's not that bad there is a problem i think when we rotate other place here so similar kind of trick needs to happen as what we are doing with the squishing of this eye we are also going to have to squish this beard i think if that makes sense uh and we said that this is actually zero here the last point now it touches here perfectly okay so how do we do that squishing let's do it a bit later so now this is fine uh and i somehow like how this looks already when turning to one side this other side that's where the problem is maybe we do it now let me see how i did that before i i forgot okay we are calculating somehow a value for the we are using the offset as a scalar only on one side so um maybe we make the beard to be something like uh draw left beard or something but anyway let's see so scale x is gonna be that one and i'm just gonna copy this horizontal scaling for here from here like so and vertical just hundred percent for now so i'm not going to squish it in any way refresh something is wrong i'm squishing it now but i shouldn't this should happen on the other side this is happening because uh now i'm drawing this left side here but uh we were working with this eye primarily and this was just a mirrored part so i should actually work with the beard on the right side i i forgot what i'm doing so i'm just gonna mirror these coordinates by putting here plus plus plus plus and now the beard is there and when we rotate like this nothing happens to it it still looks pretty much the same on the other side it does get squished a bit but not enough i think it needs to be squished even more or or something needs to happen to this control point here i think this control point is somehow too too much going outside there so that the control point there is the one here and let me see if i can make this like that it doesn't seem to affect much okay now it affects way too much okay i think this looks pretty good okay and uh yeah let's check actually also vertically what happens so some squishing needs to happen there as well definitely okay and the other way this is quite good i think already so the vertical squishing let's actually start and do it in the same way as here for now and adjust it somehow so the vertical squishing something to do with this scale y so scale y is just the offset we don't do that only on one side at least not just yet so vertical squishing i mean scale y is equal to just that offset and let's put this value here and now yeah the beard gets squished somehow but it's not great i think and this is somehow too much so we don't want it to be like that i think so and the other scalar the horizontal i think needs to be bigger maybe 0.5 so now what happens okay it's not good the line goes inside the eye i think point 45 is is nice yeah that's good and when going downwards like this the slider just goes way too much so i think that i'm gonna limit these sliders to go from minus 0.5 to minus 0.5 there and the same for the positive so that the movement is not so extreme and that the 3d characteristics of the face don't interfere so much yeah and this one yeah i think that's just fine not perfect but somehow i liked the feeling of it i don't think they should be linear interpolations but something else but i'm quite happy with this at the moment yeah and um so we started up here now we got here and i'm going to actually connect this right part of the face so i'm going to go around it and connect it back here so let me add another line to here and then a line two so i'm gonna keep these as straight lines here they are maybe small curves but i just gonna i'm just gonna have a lot of line twos here and the last one is gonna be a curve to this point should use the same height for this one and then connect back to the starting point so all of these line two but the last one is going to be a quadratic quadratic curve too so going back to the beard and i'm gonna say here ctx line to this one and many other line twos okay let's close these like so and finally one quadratic curve two using this control point to this location the last one but here i want the same y value as we started which is the same it's great i clicked perfectly this time and i do want another line to the beginning or i can also call close path i think and it should do the connection probably let's see what did what is that what what is happening uh i'm missing a point here oh no the control point did i click here before i think i didn't this was the control point that i need to do um so this control point was here and another line to this one other point that i clicked earlier i think and this is just zero here let's keep it as such okay now this looks a bit better okay good and how does it look like so rotating like this looks quite nice like that doesn't look nice so here i want this point to actually extend all around the face now so that the beard covers everything so i'm gonna do that by working with this x offset so if the x offset is negative then these two points basically the control point and this other uh this point and the control point there need to be different need to move further away to keep the shape of the beard proper so i'm going to define those points as something so um do i want to use the linear interpolation and the range here probably so these would be initial starting points and then where did i use this lerp previously okay so we will define a new point we have a b c let's make d here so um d is going to be this value here hmm now i think i just call it here constant outermost point for the sides so let's have that one be equal to an x value and the y value and the x here is going to be this and the y is going to be this so our last point here will be outermost point x and outermost point y but when we if i refresh this it should look the same but now when we move like this our outermost point is going to be depending on the opposite of this offset but um scaled somehow and also not affecting here like that so only when that thing moves let's um move to the left so only when it's negative that means that minus math minimum of this offset and zero let's put zero in the beginning so i only keep the negative value and i multiply that by 0.4 a bit too much i think 0.3 maybe i think i want to keep it seemingly in the same position so let's try 0.2 i think i'm happy with that how it looks like and the control point i think control point is not bad let's see what happens when we move this one also okay okay so now when moving upwards like this we want our bottom point here to actually go down quite much so all the bottom part here should be should be black now so when the y offset is negative yeah something similar to this minus minimum of the y offset times probably something more here like three or so oh i'm moving this point so it's not good um okay outermost point just stays the same and let's call this right most point right most point and bottom most point so bottom most point is the one that is um this one and 0 for x like this and here we don't need to change that one so the bottom most point needs to be before this one and i just put here bought the most point x and bought the most point y so yeah now the beard is definitely continuing more than before it's a big space here now um i think i can get this scaler to go more maybe four good but i think i also want this control point to be affected somehow so i will call it control point and it will be this thing right here so let's let me copy this and say control point x control point y like this and now for this one it it also needs to go low like this but maybe not as much let's see so it will depend on on the y as well yes i think this shape here is much nicer now um it's good and when turning like this i actually think i want to yeah it should cover the neck here so for the control point we move it also like this so let's see what happens yeah now this covers the neck as well quite nicely it's fine i like it i think it's good so now that we have this beard on one side done i'm gonna do it on the other side in the same way let's try also with the other yeah something weird happens with the eyes there when moving really fast but i don't actually know if they should squish so much maybe not even at all let me remove make the eyes squish a bit less vertically so here when drawing the eyes vertically vertical squish let's put this 0.3 there even 0.2 i think it doesn't need to be so noticeable and uh this might apply also to the beard as well i think now they're somehow out of sync i need to adjust these values a little bit so this bottom most point too much going now and i think the control points as well yeah i think it's fine so let me now extract all of these things that we did here in the same way that we did for the eye so we are passing here some values for these offsets for scale x and scale y so let's say function draw beard draw half beard and scale x scale y so very similar to the other function for draw i or half eyes if that makes any sense so what we are going to do is say here draw half beard with this for scale x and this for scale y and we also need some other stuff here the minimum of zero and fx offset this is actually the same as our scale x so here i can actually replace with that and the minimum of zero and y offset this is something we don't have so um the bottom most point scaler i might call this some something like an anchor or something i'm not sure what would be the proper term but um let's say beard scaler or no it's something there so draw half beard bottom the bottom scaler will be the first the last thing here so minimum between 0 and y offset so bottom scaler bottom scaler and i'm just going to put one these the other for better readability and yeah let me just copy everything here like so put them in the new function and scale x doesn't need to be defined here anymore the squish is still good scale y is here now and this bottom scaler is going to be a third parameter for stretching the beard down to cover the neck let's refresh and everything still seems to work okay oh something is wrong there it's completely opposite here so i messed up something scale x um okay i'm missing something there i think it was a minimum of i think it was a minimum of minus this and let's rename these uh this will be vertical scalar and the last one will be horizontal scalar so this horizontal scaler is actually going to be here i shouldn't have renamed to scale x i think it was a different value there i hope no or maybe was it plus i think some minus plus thing here is going to fix it somehow no i think it was minus but uh without the minus yeah okay now now it's good this stretches out like that okay great so we have draw half beard uh how was the code doing the eyes it was scaling something and then drawing the other eye with the minus here so let's do the scaling here and the other half of the beard really horizontally is what everything matters i think vertically they behave the same so maybe putting it in both places is correct okay i don't know what happens there something strange happens there maybe the last one doesn't need the minus somehow i'm tired now and i don't no not there okay i just hope that i don't need to do the math and it it magically works but something is wrong so um am i restoring properly so draw half beard we have a scale we don't have a restore so here we have draw the eye starting with the save restore and stroke so draw half beard let's save this and i hope this is correct restore and stroke okay this looks good and vertically oh yeah i'm quite happy with this i think some things could be much better but um this is nice i really like it and notice that the lines i drew in the beginning those are just some kind of reference and i'm really looking at these um new lines that i'm drawing now and at the animation so maybe i draw the beginning lines gray somehow so the draw body and the draw head um line stroke color is it stroke color no stroke style i think gray yeah but after i do that i make it black again so this is now for this head lines here they are gray um light gray too too light gray is just fine so they are not as striking and the other as the other ones and i'm gonna do the same for the body so draw the body like that and the black there after we oh what happened no before i'm not in the right function am i it's draw beard i want drop body so for the draw body um so that it's not so in our face here and we look at the just the uh emphasized lines so now when we are looking at the dark lines we see the character moving as he should be moving now the nose is something that i want to do next and it's kind of silly because in the original nose like let me actually comment out everything for now so here the nose is somehow like it's broken to the side when the character is looking forwards but it looks kind of okay i don't think we can do something like this now the nose will look somehow different needs to look somehow different and it could be weird when you see the character from the front but let's see i'm gonna draw the nose as a straight line actually so i need two points and this control point let's see not the straight line i'm gonna draw it with the curve so let's say here uh something like that and i'm going to say ctx this should also be yeah it's relative to a i didn't change that clicking function yet let's make it draw nose um sorry we're still in the head so in the head draw nose relative to a again so function draw nose reference point and the ctx begin path ctx move to 0 0.2 ctx quadratic curve 2 using minus 0.05 0.27 to go to zero point actually zero i just clicked wrong it should be the same vertical in the middle and uh 0.34 yeah and the ctx stroke like that i don't know what happened um i need the translating also so i forgot this code right here we need to translate to the reference point before we do that and restore when we are done with with that okay now this is the nose here a little bit different shape than before and i don't like it so this bottom most point needs to be a bit higher let's say three and this control point more to the side i clicked on it i should have clicked outside of it if you remember how bezier curves work and it looks kind of too roundish i don't like it i think it needs to be also lower a bit better and maybe just 0 9 here i think this is ok maybe i use the bezier also but later in the fine tuning if i still have energy for it so it looks okayish maybe not not really great in that side and then in the other side it's it's pretty much horrible so this is why we need to modify this control point so this is the tip of the nose tip of the nose is going to be having an x and a y and the x is going to depend on this x offset so let's just say here ref.x offset and probably we have to scale it down a lot but anyway and the y is going to be same as here i think like that so here we just put tip dot x and tip dot y like this and what's wrong here is equal to a new object like that so now the nose is a line which is not really great uh but at least it's okay yeah so this needs to be less emphasized now so a fraction of this x offset i'm going to leave it as a line for now even though i want to do something about it later i want to think about some better better style for the nose maybe but at least a line is is something that we can deal with and it's not bad i think a bezier curve here would be better like that one that has two control points points and uh do something about the line to do okay great now let's do the top part and i'm gonna i got this idea while i was on the break previously that i want to have the hair quite dynamic like when the character moves his head the hair moves realistically somehow so i'm now just gonna make a black shape around here and i'm gonna draw these spikes only only later if that makes sense i'm gonna draw them using some physics so when the character for example moves his head like this the hair is going to be affected by these uh by those physics there and i notice now a problem here at the beard these lines there the last previous second to last line two has to have an x of zero what happens there draw a beard this one oh no what happened no after that this one this has to be zero yeah and the the the beards don't need to be stroked they need the fill so and not white phil it looks like santa claus i need to put um ctx fill style to black so i forgot those parts okay much much better now nice and yeah let's do the top part of the head next top part of the hair this black part and then do the physics somehow let's see so i really think i'm over complicating myself but it doesn't look so realistic and i think it needs more personality somehow so that physics is gonna make things much more much nicer i i i hope let's see so um uh half hair is going to be the the thing that is going to be drawn here somehow to do the top shape of the head of the some black lines here basically uh yeah and it should continue with the beard at least on this side and then maybe i'm gonna make these crazy things there these shapes as well i wonder if it's a good idea or not i think it's a not the great idea let's just pretend i have a very small haircut like very short hair just coloring the head for now and think what to do with those later so draw beard draw hair also with a as the reference point i think yeah we didn't really need b and c we would need them if we want to rotate the head like this but i don't want to do that it's just too much work too much trouble now so this is just really fine by me i kind of like we forgot about the nose when it's connected to scaling the nose vertically we forgot that but i kind of like it that it connects to the beard only when pointing down or when pointing up like this it somehow gives more personality i i think it's a mistake that i want to keep some okay let's do the head part what oh draw hair not defined yes so i'm going to copy draw beard pretty much like this and call it draw hair and it's going to be draw half here and draw half here and now i'm going to copy draw half beard and make it like that but change the coordinates somehow so let's see if we can do both at once even though i have a bad feeling about this so draw half beard uh now becomes draw half hair and move to so this point yeah air conditioner makes some strange noise here so this case is uh so draw half here uh this point is this point here so i definitely want to keep it the next one i would like to draw a line to somewhere here but with a very big curve like that so let's have here a control point maybe here and here the center point so quadratic curve to and i should draw the right side always so the right side is the base and the other one is reflected so this is plus 0.47 47 and minus 0. 44. and here we have a 0 and a minus zero point 44 really i clicked on the same y okay so this is now going like that and i want to go also upwards up to this point right here which is point b so the next it's actually going to be a line to a vertical line to b i think so b dot x and b dot y no need for this part and then uh going back down from b to this outer connecting part at least so um a quadratic curve to and a control point maybe here and that point i'm going to have to copy from somewhere but let's just click click it for now so this is going to be the control point and the last one is going to be the right most point so it's complicated with some scalar and things like that so let's just do this and put here right most point x and uh right most point y no need for maybe no need for control points we see later we might have to adjust this when the rotations happen and the close path so that the small line here gets drawn also and let's have this let's have it the field as before and refresh the page oh my oh oh boy the b is not good anymore because i'm remember i'm giving here relative to a so i need the new new point i'm just going to put the dot here minus 0.57 so 0 and minus 0.57 so that's why the pointy head is there like that i think it can be even higher up so minus 0.6 65 okay let's disable a b and c so that i see something there i don't think we're gonna need b and c for much let's say maybe later but i'm gonna disable code printing them there now so that i see what is happening here a little bit of a pointy tip here but i don't mind the inside part is great the outside part is not good and and something weird happens here so not much weird happens there but i do need this control point to be further away so something like that and i have a feeling this one needs to be somehow um this control point and it may need to be tailored in the same way for this right most point yeah maybe a bit too much let's say 60. i think that's good and let's make it higher up like also 0.6 both of these i think it's um this is fine mmhmm okay and the y value yeah i'm quite happy with this i think i somehow don't like that it's getting so squished there but um like here it's squishing the forehead um yeah anyway it's it's fine hmm i think we will need to use b and c eventually maybe we see okay uh but something is really wrong like this like if if somebody is moving their head down like that you expect this part to stay up to somehow a lot of black hair needs to be needs to be there so moving head down like this should have that effect that that part doesn't go down so when we draw this we have the rightmost point for this connection and we also have this is the starting then we have the curve here let's say this is good and then the line two here this point this is something that is not great at the moment so this needs to be somehow with this vertical squish maybe no so there is some squishing here happening let's disable it because i forgot exactly what it's doing okay this actually looks much much better now but we do need something yeah this looks much much better now but we do need something for keeping this point up there and probably also controlling this control point of it so i think we need something similar to yeah let's just go and look at the beard again and the bottom most point we will need something like a topmost point so top most point and this is going to be this value here so maybe that and let's move this like so this one here where it's needed and um topmost point x and topmost point y like this so now this is good i like it apart from these control points that need to be done but it also needs to continue to happen so this vertical scaler from there i think should happen all the time so we have here this one and i'm using a minimum value there what happens if i just put the offset i'm doing it just on the right side but yeah this is better now so a different way for calculating this vertical scaler here and i'm going to do the same thing also on the left side and i'm going to need to do that also with the control points so the control point let's see how i did it for the beard previously so i think i just figure it out somehow here so draw uh this was the control point so control point 0.6 0.6 minus vertically it's what needs to happen so minus this same thing i think might be good not really oh i'm not using it control point x and then control point y e what happened oh it was minus yeah okay okay i kind of like this way that these things are looking i like that the forehead now stays larger and head seems to be moving fine yeah there should definitely be some kind of rotation happening but it's way too much i don't think i will have time for that and this one yeah okay it's it's fine okay somehow the shape of the head is not great i think the horizontal scaler is also something that needs to be used here maybe in the control point maybe in the other way minus horizontal scaler i'm a bit tired now and i just can't concentrate on the math i'm just playing around with the numbers i know that one of them is supposed to work um but let's try 0.3 for the head i'm just playing with the values so that this looks more no not there so that it looks good to me yeah okay i think we are fine for now okay let's draw something easy like the body next so i do have the neck here and the kind of shape for for this body but um and actually let's also add colors so that's let's add the color for the skin i'm gonna i'm gonna get the color from here using some color picker tool i will do a print screen and i open paint you won't be able to see this but i get the color picker in paint and then i look at the color values so they are exactly red green and blue like so so what i'm gonna do with that is where we are drawing the head here i'm going to put um a fill here and the fill style let's say skin tone and i'm gonna define this skin tone somewhere at the top for now rgb with these things and the refreshing now doesn't do anything weird so i'm drawing the head why isn't it coloring oh these are the mid lines um i think the these ones are the outside yes something like that but now these points on the sides are way too too much i want these to be inside of the hair region yeah so minus 0.4 i think too much 0.45 okay this is good maybe yeah starts to look like some real real character there now with the skin colored in okay something here is not quite right and also here something is not quite right yeah let's starts to be tiring already here it's not perfectly filling this shape let's just leave this for for a moment and worry about that a bit later i would like to use somehow the previous coordinates that we are calculating there but i have a feeling it's not so easy because of the symmetries and what we are trying to do we leave it for now uh let's just get other stuff that is more easy to do because my head doesn't work very much now so i'm gonna do this neck and the body there so when we are moving the head to the right like this i would also like to maybe move also part of the neck a little bit some kind of movement should happen otherwise it just looks like you're some rotating head on the on a screw there on some metal structure also when we are drawing the body i want to feel it some ctx fill and ctx fill style equals to skin tone yeah that's good okay but the lines here are not very thick i think what happens there should the stroke be after the fill or yeah i guess that was it okay now yeah what i was saying that for example one of the points here i think it's probably the first one and the last one where we are going here so these points i would like to somehow connect to a the a offset in some way so plus a dot offset x offset i think that's enough but scaled somehow i don't know what happened let's remove it from here have it just in one place very strange oh okay these values are just so small uh something like this maybe yeah now the neck somehow rotates in that way moves in that way somehow and i i like that movement and i'm gonna do a similar thing for this other one so like that it somehow looks a bit better yeah okay good also this one would be nice i think so we have the y offset effecting there and i think i'm gonna do the same here as well i don't know if this is going to be a great tutorial i don't think it is a great tutorial but um many of these things would need to have proper names for the variables but it will end up into something that i'm gonna find a use for okay it doesn't seem to to behave and then i don't think i'm gonna work with this code very much anymore after it's done and something useful but uh let's see so at least somehow the ideas of having different keyframes and interpolating between the frames somehow should be should be clear to some extent okay what is happening there i want to disable the head just to focus on the body it's doing something but not not very visible it's just behind everything there so yeah okay let's put what a smaller value there um doesn't seem to affect very much and i think this is flipped yeah this should be minus that offset yeah let's see so now if i go back here and reactivate this no no no uh so this at the negative side should be up oh no it wasn't flipped damn i i don't like this i'm getting tired i had a long day already uh maybe this is fine i think the control point is the issue we don't really see the change bit because the control point stays the same and then the changes when this head is moving so it's not that yeah it's not that significant it is moving a little bit but not not very much and this is a bit too much i think so when we draw the body maybe half of this is enough yeah it doesn't need to be exaggerated mmhmm okay now the clothes so let me comment out this body part for now and draw these clothes somehow so i'm gonna do this trying to copy these shapes here so yeah i don't need to uh this get chords uh i don't want this to be an offset relative to a anymore i want the original code so that i just get the coordinates inside the screen where i'm clicking like this so now i'm gonna click here and i'm gonna say add the control point somewhere outside here and then another point here another control point here another point here control point here a point here control point here and point here so that's going to be that side on the left and now in the body okay so doing now um begin path and then move to move to this one in the beginning and then this quadratic curve 2 where we use this as a control point and go here and then use this as a control point to go here and another one where we use this is the control point to go here and the last one where we use this as the control point to go here okay ctx stroke yeah this is fine maybe here i don't like this control point very much i mean this end point now this control point here this needs to be more to the right i think negative value so it grows like that okay okay maybe that's not the problem the next control point here maybe should be a bit more upwards yeah i like this shape now much better here okay so that's one side there and we can fill it with that kind of green color i'm just going back into paint to get the color code of that color 154 153 and one blue is one okay so shirt color like this um so back in draw body we have here ctx fill style is shirt color and we also give this ctx fill like this what did i press on my computer okay not okay i pressed something okay uh this fn key somehow right so this is one part here done i'm just going to comment it out a bit and do the same thing on the other side i want these to be somehow separate lines so it looks more organic i'm gonna do a click here this is where i'm gonna begin so and a curve that goes like this okay undo start here a control point here going here then a control point here going here control point here going here control point here going here and the control point here going here or so so let's copy that and um keep these coordinates there and let's do a begin path with the move to starting point and then control point here going there control point and point control point end point control point and point and control point end point okay this is good but now it's using the skin tone which is the last fill style so now we have these things here they look really good i think but um so here we started like that ended like this i think this end should be lower so that it covers this stroke there yeah let's try eight oh no it grows the other way around so point line yeah doesn't seem to work i think this is okayish not okay let's leave it with nine zero and do another bit of a curve there as well so this control point i'm going to put it here and take us back to the starting point like this but i don't want that stroke to be there i think so let's see if i do this i think this is just perfect okay let's put also the body back on for reference okay and now i'm gonna draw the shoulders and that part pretty much copying going over this skin part right there so yeah hmm and i'm gonna also add a few scalings i mean a few translations based on these sliders for the whole body i think that will amplify the the feeling of movement make it look even better let's see but before that let me uh so this is now the this point right here is this one i'm gonna need the new one somewhere maybe here let's just draw this i'm gonna make new points there i'm gonna start with the point here actually this one will be zero and then it will go here and then line to here and control point here line to somewhere there and then i mean curve 2 somewhere there but this will be outside the screen so before we do these with the shirt collar we are going to do something else with the shirt caller so i'm gonna this was a zero actually and this was 1.1 or something and we do a move to this center location and um now we do a line to this place and then align to this place and the last one is going to be this quadratic curve too with this control point and the last point there so this should be fine but now we need a line to the other side so basically this one with the plus and a quadratic curve to this will be same with the plus and going to this coordinate actually also with the plus on the other side and then this one with the plus and back to here or just doing close path and we need a fill and a stroke as well so this is fine i think i'm missing a begin path okay and here i'm just going to tuck these points a little bit i can see a little bit these corners there i think this was fine and such but this one was like that okay so better this is not great i see a small line there from this last connection uh with the closed path so this needs to be a bit lower i think let's try 86. let's try 87. can we go 88 okay good good good but this looks a little bit weird so head moving neck is moving a little bit it's okay but the rest of the body just completely still so i'm gonna do something about that as well um based on that a point so when i'm drawing everything here like the body and the head i'm actually going to do a ctx translate first to save ctx translate a dot offset x or was it x offset and multiplied by 0.04 or something small and y offset also multiplied by that um i don't think i need the y offset let's just put it zero it would look a bit strange so i restored this now so everything moves now a little bit while the person is moving i don't really like it it's not fantastic maybe this value should be very low like that it's not not very great let's uh restore this somehow after the body this looks a bit better and let's actually scale also so that it goes um one minus a dot x offset multiplied by zero point zero five and one so not good it's good in this direction but not good in this direction absolute value might fix it yeah this is okay and maybe even a smaller value here like like that it gives some kind of movement it of course this should be skewed and it should give you a 3d perspective and all these points should be actually somehow computed with a 3d perspective in mind but i don't know how to use the webgl canvas for example and i said i don't use the internet and also i think it's too much trouble and when you try to do things in a 3d environment that are supposed to be 2d they don't look the way i i like them to look if that makes sense so this is just fine i think for for what i'm doing here and um hmm yeah good okay what happens when we move vertically okay let's see if now i have to energy to feel this shape when drawing the head something is off there yeah so i'm drawing the head i really feel like i want to disable all of these for a while and see what happens with this shape okay yeah we were using those b and c points let's add the a b and c points back in that was a kind of a good idea but somehow i ended up using just a as the point it would have been a better 3d perspective there let's put here ctx global alpha 0.4 and reset it to 1 at the end so what i'm gonna do is i want to see through the head the other shape and see what is the where is the problem coming from so here for example i think the bottom of the beard should go more down and then maybe we do something right here as well so let's go to the beard draw half beard so the bottom most point let's try this one with the three and also vertically here with the 0.3 i think that's fine now this right most point so this is something that i want here to have a bit bigger maybe 47 like that not really it was fine before so not the right most point but the one so this control point is i think the outside one this quadratic curve to what were these two things so these and that that means this point right here this one end point here no that that this is the start point i forgot it starts right here so it should be 39 or something so i want to move it a bit closer to the eye here like that and now if i do this and that almost good so also this control point right here i think also a lower value maybe 33 there yeah now this looks good and here this outside part so the control point here the x should be bigger maybe thirty eight or something yeah and the right most point maybe 46. i think this is good and the the hair needs to still connect so we have changed now this point here and also the right most point i'm copying them just for reference and i'm gonna draw go now to draw half hit no hair draw half hair and this one was also starting at it needs to start here and the right most point now this is a 46 here so let's see now uh global alpha i want to remove this trick for making things transparent just so i see through them and okay almost there yeah this is fine it's kind of funny okay okay a little bit inwards so um the one control point from draw half beard uh the first one from here should be inwards a bit more so maybe like that maybe even more okay i think this is just good so we have done quite many things still many things to do but i need a brick so i'm gonna take few minutes break and then i come back for another hour or so and then tomorrow more interesting stuff i'm gonna think about this also when i walk to work and usually that's when i do most of the great idea thinking moments yeah okay so the years are still missing actually and i really want to do the hair um so that it's dynamic so when the character moves like moving his his head like this i want the hair to be shaking there i think it would look very nice and and i want the character to talk so this is something that i really want to do tomorrow and i'm not entirely sure how i want to do that i have some videos about this talking pumpkin that i did at some point where i used the microphone to get a different to get the volume and depending on the volume open the mouth more or less i could do that but i think it wouldn't be very organic people open their mouths in so many different ways and the volume is just one number so i i'm thinking about using webcam and my face and doing some kind of detection on the face i really want to do these two features otherwise i think i'm gonna lose this competition because i've spent so much time and i just have a nodding character and he seems to agree with me okay but um i will take a break and uh in a few minutes i continue and try to draw the ears and maybe i begin with the hair in some way something i might i think i should also clean up the code before i end today so that i have it easier tomorrow it's a bit it's not great i i should use some objects maybe or at least separate the code into files so that it's easier to to find the things this already starts to have quite many lines of code yeah okay be back in five minutes okay i'm back so i think one of the things i want to do is the years now and um i'm going to go back to the click event listener here and reget um coordinates with respect to a so the same way we did for the eyes i'm going to refresh this and yeah so where are the years now they don't align very well here i'm going to try to map the locations where they should be somewhere here so i'm going to say i'm going to click where i think the location should be so one is here with um control point here and another point here and then control point here here another control point here here another control point here here i might need to adjust these a little bit yeah i think it's too complicated shape let's let's make a simpler one so starting here control point here and here and another control point here here let's see how this looks like so we have the draw ahead and draw years with respect to a so function draw years oh and i did everything on the left side again let me do it one more time and on the right okay i think this ended up even better so let's do that and um now we have a save and a translate and it ending with this restore and reference point passed here like that and what we do now is move to this first location and all of them are quadratic curves so i'm going to say quadratic curve to this with this and this to this and finally this to this and ctx fill style equals to skin tone ctx fill ctx stroke um it's something maybe i want this first control point to be more to the right no i i don't maybe i want this end point yeah maybe something like that and then the this control point maybe that looks good i think and close path as well now there is a line here that is thicker i think the starting point can be a little bit to the right so like that maybe also a little bit lower more low yeah why not and um i think now this can be left a little bit i think this looks okay uh the last thing here i think could be lower maybe not that one mmhmm okay something like that this is just fine so i'm actually gonna copy this draw make it into a yeah some smart things need to happen here because this here on the right should actually disappear at some point yeah this is not very easy it's the first thing that we need to make disappear to make it vanish when the character rotates like that so if we go to the draw eyes for example let's take this as a reference draw years and draw a year like this i think it's pretty much the same as what the eyes are doing maybe a little bit different so i'm gonna make a new function here draw here uh x scale or scale x like this and the draw i is having here these two things i think we will need something similar as well and ctx restore because we are scaling them okay two years there uh this one is quite yeah it is scaling itself now it's better but it should also it should also scale uh i think not just in this case not not just with the maximum i think we just put here x offset let's see yeah it really needs to be more here somehow and i would like it to squish more yeah this is good but um these locations also need to be translated somehow let's do ctx translate scalex no nothing vertically just horizontally and it's way too much so let's do it by a small factor yeah i think this is fine now i'm worried what happens here it's not horrible some squishiness is happening which i don't necessarily like but i think it adds to some personality to the character so it's fine okay and uh drawing the head i think it's just too high up so when it's normal like this i would like it to be a bit lower it's just too too high up i i think so or maybe the body needs to be higher let me do a quick translation for the body to be higher and i think that will fix the problem so here okay maybe a bit too much point six okay yeah a little funny shape here but i really think that when i'm gonna do the um here with the physics hopefully i'm gonna do the hair with the physics then it's gonna be good and the year here i don't know if it really needs to be covered i would definitely cover it but it's not so easy to do that i think also we might do some tricks with the with the hair later to cover it but uh don't have a clear vision there yet my hair now is also a little bit different than in that initial drawing that we are getting inspiration from and it's shaking also to the sides so it goes also here i might need to redesign also the character a little bit maybe these top parts don't need so much attention well let's see yeah i think i'm gonna actually i don't even see my ears anymore because there is hair is covering them so i think that i don't need to worry much about the ears there even if you will see a little bit here because the hair will be covering it it won't be a big deal i think we're fine but now uh i think we are done with this kind of basic character movement and i'm not gonna polish this much more maybe something with the nose if i get some better idea uh to make it look nicer when it's straight watching straight at us like this uh but i'm quite happy with what we have at the moment here these lines look too thin i think that we need to stroke the that part okay this gray here is not needed anymore uh huh so let's put here skin part of the body and this is gonna be um shirt part of the body and now here we have those that color or the neck neck region and the shirt second part like that and so this draw body hmm um yeah the problem is stroke should be after the fill there this one is fixed but this one i don't want that connection there so i think i'm gonna do fill and stroke now this last fill is not good it destroys part of the stroke so this part here is something i don't like now i think i just do begin path yeah begin path that and fill i need the move to before so move to there okay almost i think this control point needs to be lower so like that no oh this is so horrible yeah this shape now is just this part right here i should use a move to a bit higher up so let's leave this as such and this move 2 goes to 89 here that looks good okay finally great uh i will also remove now a b and c again from there and um let's move the draw body function in a new file let's call it body dot js it's not a class but i don't know it will be very useful to keep everything inside the class eventually but now i just want to separate the functions so that one goes in the body and now let's put in the head draw head and all these other things draw ears draw ear draw nose draw hair half hair beard half beard eyes high this one we don't need anymore i'm not gonna worry about this glass i think so let's put this head js okay and let's clean up a bit what we have here so um high speared hair nose ears it's fine and i'm just gonna group these a bit like that i think they're a bit clearer and i like to separate save and restore so that i notice them easily whenever these modifications to the context are are done yeah the todo for the nose is still here draw hair yeah to me the code is clear but there are many many of these values that are used to define the shape and it's actually not easy and not really needed to come up with names for these things i think it would be possible to export all these values in some kind of json format or something and then load them in but i'm not going to spend time on on that this feel can happen before the restore here i think what was this half beard only the stroke is affected in in width when you do that so we have eyes also so here we have the eyes the main the white part and then the eye brows just one and uh what is this thing oh yeah the let's call it pupil i'm not sure how you write it but it's gonna be like that now i don't have internet and what is this oh yeah that one line this one line here half contour line something like that and let's separate that as well so i is more complicated it needs special comments there the beard doesn't really need special comments because it has some variable names that are selfexplanatory and of course you may need to play around with these a little bit to change but i did all the drawing that i want to do and i'm happy with it i don't want to update this anymore so that is the definition of this character pretty much and same goes for the hair i think it's well commented here this scale y is actually not used for the hair apparently so let's remove this so the vertical squish thing is not used anywhere this is just the one here good simpler code this simpler now okay draw body is not defined we need to go to index.html and include these scripts before we write this script right here so let's say script source is equal to body js i think like that and hit js okay things seem to work again this is so funny it looks kind of unnatural it's a very unnatural i stopped liking it now i really think that the hair is going to change a lot of things here i hope i hope it can give a 3d look to it and also the fact that it's going to move it's going to make things better yeah some polishing will be needed we are not done i still have maybe 20 30 minutes maybe even a bit more and um i wanted to do something completely different but let me clean up this a little bit so a little bit more still quite much cold here what do we have this lerp i usually have a utils file let's call it math this time i'm gonna put there the linear interpolation for example and these update points something quite general draw point i think i rename it back to utils and put also these this draw point there so it's not just math but now also some visualizing thing that we use in different places and this is just the helper thing this function will be removed like that like so now live points so these are those things that we have been using but this bees i guess it's used somewhere at least to define that head the colored part the skin colored part of the head okay we'll see tomorrow okay so now this utils let's include utils as well i'm gonna put it first here utils js we keep these points then the animation so this click and the get coordinates actually also the this event listener will need to be removed afterwards so i mean doesn't need to be removed but it won't do anything it's just printing stuff in the console so yeah animate function will stay and it has draw me and this part will also be removed it's just that background character i think we can actually remove it even now but let's just keep it a bit longer for reference here okay and the draw me function does a little bit of scaling so that the character appears a little bit more to move sideways not really 3d but at least if you're not paying close attention it feels like that and this is not fantastic really but not horrible i think the hair will make a very big difference and the beer beard might be adjusted a little bit after that let's let's see maybe the head could be the body could actually be a little bit higher up also yeah okay this one is the slider so this is called when hmm yeah i had some more some other ideas originally to make it look even a bit more 3d with these other things there but and the abc points they were supposed to do something a little bit more somehow shape the head but it's not horrible okay i still want to do a few more things so let me remove these points again they are disturbing a bit now and i'm actually gonna hide that character on the background this circle here and i might need that code again to compare in the end but for now this is what we are having and uh oh looks like some space here at the bottom let me just make the body be a little bit longer at the bottom here so outside the screen those two points i think it was a bit far enough anyway but this is some side of the canvas that just looks like that okay so what i still want to do now is um add a completely new thing i want to add our my camera my webcam and somehow do basic image processing there and see if i can move this head with the camera instead i think it's a bit too much now it's late but at least i want to start something so let me see i want to do this here let's just make a new file called this camera js and include it here camera js and here i'm gonna write navigator media device is get user media and i'm going to get the video but i think that i'm going to also use the audio later i think in the end i will want to support uploading a video and then it just the character is going to move according to that video somehow let's see so but for now just the video here i think is just fine so we get the user media and this returns a promise so we do then uh we use the data so we have the data coming from the promise when the promise succeeds and uh i'm gonna define a video object um i don't add it to the dom but element a video element and then i'm going to set this to the data that comes from the device so source i think it's source object is the data and we are going to play this video so if i'm going to change this from the camera to the to some video this is where i want sound to also display later i will remember i don't need to do that so then when this is loaded it's like on loaded data we get a new function new callback function and here i can start to do something with this video like start the processing and so on so we might also have an error if when you do this it's going to ask you on the screen if you allow or not to to give the camera so this might give an error and we can catch that error like that uh i just make an alert here and say no camera failed something like that okay why is this highlighted like that so we have this i'm not using the error anywhere was it so that in javascript catch is not like this but it's a callback function okay and now i have to close this one i need to close this catch somewhere this is a function i have the alert closing the function and then i have to close this catch you i just don't know what the problem is let's um run this and look in the console what is that oh this then no no no no no this is then this then has to be closed before before the catch it's then and then it's a catch yes okay it allows the camera and then could not start video source i think this is the error message from here it could be that i'm using the webcam here and that webcam doesn't let me use yeah uh let's see if i can make the web the browser have a different webcam i have a webcam in my laptop here as well in the front okay so i did something maybe refresh okay something worked i think it's using my front camera let's try to display this camera on some other kind of canvas i'm going to put another small canvas under these sliders there so i'm going to say canvas id cam canvas and i'm going to get the reference to this one as well somewhere here in the camera code and i will say camera canvas um i think i make this one as big as the video is going to be it's going to simplify things a bit and let's put here it i can scale it with css later and let's try drawing the image so i need i need a context for this one as well okay and i'm gonna draw the image of the video at zero zero so i don't need the width and height because the canvas has the same height as the video so let's remove this log and try to refresh okay but this is very large now so with css i'm going to say um max with okay i think this is just fine for debugging and fits in my screen quite nicely i think so this is the other camera from the front and that's just one snapshot because we are not animating these cameras in any way so i'm going to copy this style from here and i'm going to add it for cam canvas like this so when i refresh now okay now the room here is not fantastic with the lighting and everything i might change the room tomorrow i think i'm going to use a better room and um let's try to begin to do something with the camera here so i just hope i i at least get it to animate so here i'm going to call wait i already have an animate function here okay so what i need to do here is take this video out with let like this and i'm going to go back here and say okay this cam canvas also needs to be up here and camera context okay so camera context camera context draw image to video and then draw me on the other canvas so now the video should animate if i save this and refresh what is happening okay it works it was it did an error here because the video was null and it never got to request animation frames so animation didn't start and yeah even after i pressed that allow button for the webcam okay now if we have the video then do that and i really want to get somehow the locations of the of some pixels there so i always use these kind of markers i don't have a blue marker here tomorrow i need something blue and yeah spiderman is blue let's try with spiderman so let's write the function for a utility function for get marked locations so we're gonna look for the color blue so a color of zero red zero green maximum blue and we're gonna use a threshold like this and i'm going to get the data from the context i need here um the image data as well so here i'm drawing it on the context so then i want the image data camera context get image data from zero zero to cam canvas width cam canvas height like this and then this image data has a data attribute i just pass it completely to that utils function so the marked locations are going to come from get marked locations using the image data and the color and the threshold but i'm gonna keep those values inside of here i might put the color picker or something let's let's see later what happens but yeah get marked locations from the image data and let's console log logs length like this so the number of items in this array so now in the utils i need image data here also and let's just console log image data data length see how big this array is i remember this kind of thing quite well an error okay this is not returning anything yeah so here we have 0 is this empty array and this is the size of image data so these are values are this image data data is having i mean this data now is having this many numbers and it's the width times the height times 4 because each value for each pixel is the red green blue and alpha components so i'm going to loop through every four groups of four and i'm gonna say red is going to be data of i green is data of i plus one blue is data of i plus two and alpha would be data of i plus 3 but we don't need that so now i have a rgb value for this pixel now if this rgb value is a match our gb is a match to our caller that we are given this blue color there so match between these colors and under the threshold let's say the threshold is going to be something like 50. then this is gonna add something to this locations array so i'm gonna say here an empty array to begin with and uh the locations is gonna push an x um an x and a y so the x and the y we need to calculate them x is going to be i think the floor of the index of the pixel so the index of the pixel is i divided by four because we're going in groups of four and then the x is going to be p index divided by image data width and y is going to be the modulo i teach this all the time in my videos like all the marker effects have this this thing there i'm just trying to do it mentally and i hope that i don't mess up index modulo data with and these values are going to go now to our locations array and which we return here so we need two more things we need this match function match color one color two and this is just going to end the threshold and this is just going to say if the distance between color 1 and 2 in the 3d space is less than the threshold then it's a match so return distance c1 c2 less or equal to this threshold and here we say function distance and this is going to be distance between two points p1 and p2 in 3d space um euclidean distance like that no like that okay and now return square root of this distance so this should be the distance in 3d space any space really because we have here a for loop like that so now what we are going to do is test i think i don't know i'm getting tired let's refresh so it's a zero there but if i bring this cup here it's still zero i think that these uh blues i need to go soon maybe five more minutes i tried to detect some blue color here um i think the value of the threshold could be bigger i think something doesn't work so let me put a break point here and go inside of this function okay things look good so i don't know why it doesn't work a bigger threshold is not a great idea because we are approaching too much the values of other colors oh okay well something blue there but i'm gonna go tomorrow in another room oh i have a pen here okay so something works i think these colors are detected let's see 10 more minutes i want to do something with all these let's average the locations so these are going to be x y locations the values from here so i'm going to say average is equal to x of 0 y of 0 and for average x like this and i need to divide this by the number of locations both x and y so when i do this now and i return this oh i'm not calling this anywhere so back in index.js where we have here the locations i'm also going to get the average location like this and that's going to be what i'm going to log next so we have not a number there because the locations is empty oh yeah and then it's dividing this i don't want not a number there so here if we do have locations if we have locations then i'm going to do that otherwise i just don't so now what i want to do is use this location of this marker here to connect it to these sliders there so this info value of the slider and this attribute was x and y right so if i just send update points if i just send update points with something that has a value between minus 0.5 and plus 0.5 so if i go here and say value is going to be average dot x minus image data width divided by 2 and divided by image data width so this is going to give me a value for x so now what this will mean is how far is the marker from the center screen you will see and i did the same thing for the y as well so let's put here y like this and average y image data height like this and let's now instead of that value log x and y from here so now this is close to zero and this one there still zero on x but the y is big and now the y is negative okay i think i'm making some mistakes here is this average calculated correctly let's go back here and print what we had previously i didn't really look at those numbers before so they are flipped x and y are flipped yes this is why this is x okay and here now the new x and y values after scaling them yes so here x is close to minus 0.5 x is plus 0.5 y is plus 0.5 y is minus 0.5 and now that we have this x and y value here i'm just going to call update points with something that has a value of x and x so here update points was waiting for this attribute of x and y and the same thing with y and y there okay i like it uh this recognizing this blue color needs a bigger threshold maybe or not great but uh testing like this is sure is easier now and uh if i'm gonna put this on my in my head or something tomorrow then yeah i think i can make this somehow uh move with my head if i put some kind of markers on the face so i'm gonna do something like that tomorrow and i'm gonna think about it while i'm walking home i'm back and i would really want to get this character talking as well somehow depending on what i do with with my mouth so maybe i will have many markers on the face or something let's see but this is somehow quite nice already i'm happy with this um not perfect and some things feel a little bit strange but let's see how the hair will adjust and how the hair will fix some of the things and so on yeah okay see you tomorrow it's the next day now and i'm walking to work and i've been thinking what will happen today and it's going to be a very different day because yesterday i had no idea what's going to happen we didn't even know what project we're going to start but now i'm going to begin with some more code refactoring i'm going to change everything to be as objectoriented as possible because now functions are floating everywhere and if you want to import this in your own project it's it's a chance that something is gonna conflict with something else so not good and doing this refactoring stage in the beginning is also great because i'm not going to remember all the things that i've been doing yesterday then next thing what i'm going to do is implement some physics i'm going to use this verlai integration technique because i've used it so many times and i think i remember it and what i'm gonna do with that is eventually do the hair but uh that image of myself that i drew a long time ago initially had things like this around the around the neck and that's what i'm gonna apply the physics on first uh kind of like a simple pendulum and then i'm gonna move to the hair which is gonna be a bit more a bit more difficult but anyway uh physics for that so i will start with some kind of utility functions for doing linear algebra i'm gonna need some help for that and then a little bit of physics and last i'm gonna do some basic image processing and this is going to happen so that i'm going to have markers on my face so there will be markers on the face area they're going to be around the mouth somehow so that it can change the drawing based on how i'm opening my mouth i hope that's going to work i'm going to also use some reference point here so that the head movement like this is going to be picked up i didn't have any great markers at home so i took with me a doublesided tape which should hold on to things i hope it's gonna hold on to my face especially because i have the beard and um it's white so i also took one of the blue markers that i've used in many of the videos to color color them i really hope the detection is gonna be good i'm going now to a different room so the lighting there is better and i don't think i'm gonna have a big problem with that but detecting the all those points and figuring out what the face should do it's probably gonna be a challenge let's see so the physics is something that i'm gonna start with and then this face detection thing i also have scissors because i'm gonna need to cut that tape somehow good that i don't forget things like that yeah so physics and then that uh face detection thing according to the markers and i'm gonna do those immediately when i arrive because i want to be as fresh as possible for the heavy stuff and then whatever fine tuning i can still manage will happen afterwards so maybe something like that knows that i don't like how it looks like i have some ideas about it maybe using transparency on that line and making some new lines appear as the face is moving we'll we'll see but yeah so uh heavy things at first and uh at some point i'm gonna need a way to toggle between between using the sliders as the input because i want to have users able to somehow play around with the avatar even if they don't have a webcam and the webcam and then the third thing that i want to do is record uh a small video of me saying something like hi i am produce avatar and maybe test a few movements uh talking and moving the head so that one will be the default when you enter the page um a video playing of myself with the markers and um the avatar is going to hopefully do the things that i'm doing at the same time and from that you can change to the webcam but you need some kind of way to mark the face like that and um if not then you can change to some um to just use the sliders there so maybe i'm gonna use a drop down simple drop down for that or um radio box is or something anyway that's the plan so refactoring oop um physics face detection i mean face pose detection using the markers and uh a better interface and the video for that so hopefully the first two happen before my lunch break i also have another meeting and then the other two happen afterwards and uh yeah i'm gonna have about six more hours to put into this i think so let's see okay i'm in a new room now and the lighting is much better here so now when i use the marker which i took from home it's going to be detected much better than yesterday when i tried to do this so now i can move the character with this blue blue marker here in the screen so i will probably have something like this on my on my head and adjust this somehow and i really want to do something with the mouth as well so let's see later but first a little bit of refactoring and i'm going to make this character here using objectoriented programming so let me go to index html and what i want to do here instead of draw me i'm going to say something like uh avatar draw on on the context so i'm going to give the context here as a as an argument and this avatar is going to be an avatar object so i'm going to define this in an avatar js file class avatar like this and i will give it the constructor and the draw method so now um the code in this draw me is going to move inside of the avatar's draw method and context goes here in case you want to use multiple avatars multiple canvases something like that right and this draw me is not needed anymore but we need to define this avatar so we are going to say avatar new avatar here as a global variable good and draw body and draw head these are going to change to be methods inside of the avatar and they will be private methods so i'm going to say this dot hashtag draw body and same for this draw head so let's do the body first it's going to be this function from here i remove it and i put it here as a method the drawbody method and the ctx should be passed here as well so that the body knows where to draw itself so it begins the path um this a point is a global variable and that's something i don't like we are going to need to pass this down to the avatar so it knows where it should be looking at so a actually stands for that point that avatar was was directing its head at let's see the other code for the draw head and i'm going to have to copy everything from here this whole file goes also in the avatar class and it needs to become methods as well so these functions will also be converted into methods into private methods actually and they will need access to this context so i need to pass it down so private methods because it's its own responsibility the avatar knows how to draw itself and these points are going to somehow be important because they are coming from outside they are coming from the code that processes the camera here or they are coming from sliders here which currently i don't think work or oh they do work uh if there is no blue in the screen uh then they seem to work which is quite nice so i'm gonna have also some kind of toggling between how to move this character around so um b and c are really not much used i think yeah they are just used for the colored shape of the head colored with the skin color i wanted to have different ideas for that i wanted to somehow use more this interpolation and these ranges here but when i saw that it's becoming somehow tricky to do and i added there some negative range to make something work with c i realized that it's somehow uh becoming too confusing so i did everything relative to point a and the other ones i think we may not even need them let's let's see but let me finish this code now so uh draw years all of these things here they need to become method calls and private methods there's no real reason for the outside coders from the outside this class to be able to call this method and same here with the draw year now and all of these that are taking a here they need also the context now so let's pass already the context there in addition to this reference point to all of these things so context will be will be needed there right and um method here looks good so let's go down to this drawn nose and make this one as a method as well our to do is there if time at the end i will do those fine tunings the draw here it's going to be draw half here like that and these need the ctx as well now and here yeah looks good drawbeard also private method this time so doing the code like this means that we are we can include this avatar class and we don't have to worry if somebody else has a function called draw half beard somewhere so very useful um in separating the code and making it um not interfere with with other things draw half beard and i'm also relearning what i did yesterday so that i don't so that i know where i'm at pretty much okay so only problem now i think i don't need anymore this body js and this head js let me delete these like so and in index html i'm going to have to include avatar js instead and i think it should still be able to access the global points from here but i'm gonna do something about that let's refresh errors for some reason it complains about this context there let's put the breakpoint and undefined inside of this draw year oh i forgot here to pass ctx okay good yeah so much better i think but these points are something i don't really like very much so first of all i'm really curious can we do without them somehow let's activate these points again to be able to to see them where they are and do they really move that much or could we do them relative to a in some way so c is actually i think b doesn't move almost at all so maybe i could replace b i could maybe remove b in the beginning and just try replacing it with these values this value here let's see i just delete it from there and from here and inside of this avatar uh we use be here so how about we just put 0 and minus 0.77 does this still look good b is not defined oh draw point b i don't want to draw that point okay here there is a problem here there is no problem so how about we just make it a little bit lower like um like this we don't need b anymore great and c is looks very much like that the bottom point of the beard it was relative to a let's see so when we draw the head and we draw the beard here we have the draw half beard and bottom most point so this point quite complicated it comes also from this vertical scaler i think but not impossible to figure out so let me copy this here and when we have the vertical scaler so this means um this one right here so the bottom most point is actually this something like that and this is c pretty pretty much so let me just have here uh b and c like that so they are not global anymore they are going to be just these local ones and i put here be like that so i remember what they are but they are not so important that they deserve drawing in the first place and definitely they don't deserve to be global variables a is an exception because it's going to be controlled by the sliders and this marker so c here is going to be okay b dot x b dot y so i'm going to use this everywhere so that i don't have the same hard coded values repeating themselves the others are important to be like that because they define the shapes and here c is going to be no comma there i think like that and i believe this is correct i'm going to stop drawing c and in the beginning i just have a there now whoa something happened oh oh ref is actually a in that case so c is defined according to the a y offset okay something bad is happening there haha it was first translating to ref yes so um we without translation i just first i just have to add the a coordinates there so a dot x a dot y plus this one okay not exactly sure why it's happening like that but it's almost correctly it's almost correct so it needs to be hmm so in the draw beard we translate today and then we draw half beard oh it's doing some scaling there oh so complicated yeah this scaling is also there complicated complicated stuff and scale y is just the y offset so a dot y offset like that one minus that okay i think that this needs to be multiplied by this no maybe divided by that no um i think everything here needs to be multiplied by that yes okay so now we don't need those things anymore and just that a point is controlling the head and i would also like to clean up even this a bit more um i mean this avatar class here is quite big now so maybe i would like to extract these methods somehow let's try to export extract the eyes draw eyes let's see if we can say this right eye draw and then give these things there like so and same for the left eye so i'm gonna define an eye object i don't think i need two of them and it can be a private attribute here okay so let's now here in the top say this i is new i class i and draw the draw method it's gonna be this one from here so it's gonna have a scale and the context on which to draw it and i think that's pretty much it empty constructor here so if i refresh now i get some errors is there something wrong with the private attribute okay i'm not sure what's wrong with that but let's just leave it public it's not the big deal there okay so the eyes don't work properly what happened here did i do some bad thing oh there was a minus did i lose this minus at some point yes now it looks good so with the i like that i'm going to take it out i'm going to put it in i.js like this and i could do the same for others but i think i'm spending too much time for refactoring let's go to index.js and import i js as well so now everything works as before but the code is better it has the eye here in its own class so next there would be this beard with the draw half beard so i think i'm gonna try to do it let's go where the draw beard is and say this beard draw using a and the context so at the top here this beard is new beard beard js i'm just going to copy i class and say here beard and i don't need this draw beard anymore draw beard is going to go inside of the beard object and it's going to become the draw method like this and draw half beard is still going to be a private method here inside i think there's no way around that we need it here so that's good and here in the alpha tar nothing else needed i just need to import beard like this so code is better much better now next thing uh i think nose doesn't necessarily need its own class it's small enough year is small enough i think here this will be needed because because i'm going to make it very complicated soon so here js and here i'm going to take out draw hair and draw half hair and it's already kind of complicated it says it's as complicated as the beard so i'm gonna take these methods out from here and put them here let's copy the beard code and just replace with this one probably i wasted more time copying that but somehow and the draw here in the same way yes no problems with that so the beard also will need to be defined somewhere i mean hair did i say beard okay right so avatar js has not so many lines anymore has the body drawing and then this is a debug thing that um maybe i'm going to actually make it like that if i want to debug then i'm going to show these points i may have multiple ones later and in index here i can have a debug true so now if this is true then the points are showing if this is false then the points are not showing so i don't need to comment out things all the time and here this a point is something that i need to fix it doesn't mean anything i'm i don't think i'm gonna need anything else just a point where it's looking at so let's just call it look at and i will make a comment here point a when we debug so this look at is a point like this and this a here won't be needed anymore so i'm gonna remove it and we will just use look at everywhere and when we define the avatar i'm going to give it this look at point as a reference so now here this is going to be a so where is it looking at every time we have a capital a so i'm gonna look for it matching the case and there's a full word every time we have this kind of capital a i'm gonna replace it with this dot look at that one can stay like that it's the label and drawing the point with our utility function okay saving and here we have that update points function so this was the thing that moves with the slider so update look at update look at update look at and i don't need the for loop here anymore i just have p equals to look at so right refresh allow no error when the camera because i still have update points here so update look at the value of x and the value of y yes okay finally finally code is now as clean as i'm going to get it in this project it's not all about the code quality i think code quality is very important and i don't want to give some bad bad example to anybody everything can always be improved but you need to stop somewhere also in real work okay done it's much better now at least yes so uh next what we are gonna do is physics so let's let's do the physics next and i'm going to go quite quickly through these things i've i've done them multiple times and i have an idea how they're gonna go yeah so let's have a file physics js and in index.js include this one as well okay and i'm actually going to start with adding some more utility functions so there will be some math functions that work with the vectors because i make mistakes if i don't use vectors when i'm doing the physics it's just so much easier when you work with x and y combined or i usually like vectors to be using arrays so i have the array of 0 and array of 1. it's very useful because then i can use for example this function here that works with arrays this could have also been with that so now i have a mess of points and also these kind of 3d points are different they don't have xyz but yeah it's a little bit i should refactor this so here the location i prefer to use arrays everywhere so instead of an object with x and y it's going to be a vector with zero zero here yes it's just much better when the code is more is consistent everywhere and because we are using 3d here also for the color space it makes sense to have it like this these functions become more general yeah so we have the average and we are using this average somewhere in index i think no in camera no not in camera where is the average being used it it is an index some oh i have these things on um yes so here average of zero and average of one and um i don't think i need this logging anymore and this comment from here let's try again yeah good everything still works so where was i utility functions for more more vector operations so i just they are simple they are just for vector addition so for example you have two vectors here like that and you can implement this by just considering 2d vectors but i really like to go and say um the new vector like the result is like that and go through all the elements so it would work in any dimensions like this like so and return this new vector like this so this is for adding vectors now subtracting vectors we also need things like magnitude of a vector so essentially the length of a vector or just one vector here so i'm going to say this magnitude this is the same thing as the distance from zero so i think that i can actually reuse that function here and say return distance of v and an array of zeros so new array of the size of the filled with zeros i think is the syntax i hope this will work so the magnitude is how far from zero this is pretty much and we can reuse that function there and also very important function is to be able to normalize so you just get essentially a vector with a length of one any kind of input vector you just get output something with the length of one but it keeps the orientation or scaling to scale is also important so scale let's let's actually do this scaling first and then we do the normalization so when you scale something you need the vector but the other one is going to be a scalar of a simple number and i'm going to do this by going through these elements and each element multiplied by the scalar like this and now normalizing is just a return scale of the v with 1 divided by the magnitude of v so you divide it by its length and you end up with the value of 1 for the new magnitude so simple relatively simple things i i think and they are now more vector utility functions i can separate these a little bit so this is now general drawing here let's call these vector map and this is something to do with and that let's move linear interpolation here as well it's quite related i think and the last one was just drawing things general very general things so now our utility functions are more of them we have more utility functions now and the the physics that i want to implement are going to be do i have some error here i don't think so okay oh there is some error somewhere here i copied that so it's everywhere okay nothing broke i just added new code so in the physics everything will be based on it will be based on particles so this verla integration method i want to implement works well with particles and then with some constraints like sticks between the particles so class particle then here i'm going to put it at some location so each particle will be initialized somewhere let's say location like this and store it and when particles move it's useful to keep also the old location in memory it will be useful in the mathematics so i'm just going to initialize this with the same location in the beginning so the particle doesn't move from some past last place and we need to be able to draw this so i'm just gonna do simple things like begin path and then let's make these red so they stand out and we easily recognize them or actually orange i think it's better red than green like the green shirt color is sometimes confusing to people so uh let's just make a small circle there at the location since these are going to be vectors i can say here location of 0 and location of 1 or i can just spread the location object like this and give it the radius say 0.1 and um the arc method works like that so i need to specify there the full circle and these need to update according to some kind of forces so usually we have some gravity i don't want to leave these as global variables here but let's see later so just some value for the gravity there and this would actually need to be a vector and since we're in 2d space i'm going to say 0 horizontally and 0 vertically like that and the update so what i'm going to do now is pretty much first figure out if the location if the particle is moving from its old location somehow so i'm going to get a velocity vector by doing a subtraction from this location to this old location like that and i can predict the new location to by adding to this location the velocity vector that we just calculated so where it came from where it's now you get that difference the vector connecting them and you add it to the current location to get the new one but you're not done yet because then you can still add this gravity for example so this actually needs to change and we say new location is equal to add to new location we add the gravity vector and we also have to update now old location to be equal to this location like that so we don't lose it and now we can update this location to new location that we calculated previously so i use the extra variable there so that i can still keep the previous one and i don't change it instantly there okay so with this kind of particle here and an update and then draw method i'm going to go to the avatar and uh here i'm going to just try adding a particle where it's looking at yeah so let's see this part particle new particle at look at this is with x y because it's in pixels so i'm gonna say this look at x and this look at why i'm converting it into an array here and i don't think i need to give it anything else and now here in the draw method i'm going to say this particle draw on the context like so so if i refresh i get errors okay oh wow i think this location might be a kind of a reserved word and this is uh or maybe not let's i think i'm missing this there yes i think now it should work let's see okay so we see now this particle um initialized where a where that look at point is in the beginning but it's not a reference to it i'm taking its x and y initially when it's initialized and then it stays there the particle um i think i'm gonna make the particle look a little bit different so let me go here and say i will make it red so i will make it a smaller radius 3 and stroke it will be red but i'm also going to make a stroke to it that is going to be white so that you can see it better okay i think this is good so that's the particle but it's not falling i said it should fall with the gravity but we are never calling this update function so here let's call this particle update first and see what happens something happens it's not there anymore i think it might have moved very quickly because this scene is in such a small or i don't know what is happening there this number is becoming huge all of a sudden and this becomes infinity so what what gives let me debug this velocity vector here something strange is happening no matter what the gravity is these numbers become big and small i mean negatively big let me go to the utils maybe i made some mistakes here with the vectors so oh subtract this minus probably this is it let's save okay and now the point is falling and it's actually accelerating it's falling faster and faster and faster and that's great so i would like to do a couple of things here and i will start with this let me show you the picture we had previously there like that so these things here are missing right now and they actually used to be um in my original drawing they used to be something hanging from there so i would like to make those move a little bit as the character is moving so um when he moves left to right like this i want it to fee to move a little bit like a pendulum so i'm going to put one particle here and one particle here i'm going to make this one up the one up static and the one at the bottom it will be constrained to be at the fixed distance from the top one so let's first define these particles and um actually uh i'm just going to define another one beneath this one so let's add a function here i will refactor this at some point but update particles and this is now going to let's put draw particles as well it's it's nicer like that and here we have particles is equal to an array so the first item in this array is going to be one particle at that look at and the other item in this array is going to be another particle that is somewhere below that so in the beginning i just do something easy like this so below the first particle and now what i'm going to do here is for this particles for each particle i'm going to loop through all of them and say update these particles and then i'm going to say draw these particles on the context so here this method will need that and i'm going to say here this update particles and this draw particles like this so this should now let's go back to our code this should now show two particles that are just falling like that but the first one i want it to be static so i think i wanted to fix it somehow to i will add the third parameter let's call it true and i'm going to fix it to is fixed so i i won't allow it to move like this and in the update none of this needs to happen if it's fixed so if is this is fixed return i think this is fine and i don't need to log the velocity anymore that was just for debugging there so now what happened where is one particle um no i don't think this is this is not the problem what happened so back in the avatar i have oh i'm passing here inside the array and i think it had consequences okay so back here if it's fixed i don't have to update so this one is fixed there right okay so that one is fixed but the other one is not so what we need to do now is uh constrain the other particle to uh the first one so for that i'm gonna implement here a segment class that will have a fixed length and this segment will be between two particles so i'm just gonna say here a constructor for a and b and i will say here okay i don't want to confuse a and b with the way i'm talking about those a b points from previously i think it's it's clear enough i'm going to save a here and say now let's just say particle a particle b okay and let's calculate the distance between these two particles so i'm going to say a length for this segment is equal to the distance between particle a location and particle b location like this and i think that's all i need to know about this segment it's initial length when it's defined and then to draw this segment i'm going to use a context and i'm just going to do this a simple line i think i'm going to do a red line just to debug for now so ctx begin path ctx stroke style red ctx move to this particle a location and here i can spread these into two values because the move two needs two values and line two particle b location like this i have a message okay oh wait there was another right so um stroke like this and the segment needs to be created also somewhere so here let's say this segment i pre i prepare it to be an array already is a new segment with particles of 0 and this dot particles of one so the ones we defined previously like this and uh i also i'm also gonna need update segments but all of these are the same all of these have update and draw update and draw so maybe it shouldn't be update particles and update and draw particles but update and draw we already have a draw update items and physics item and draw physics item and this is going to be a parameter so items and the context there so here i'm gonna have to change these like so i i'm gonna reuse this same code to handle the segments and the particles so here update physics items and draw physics items first i'm going to give this particles and then i'm gonna give this particles here but after we do that i'm gonna give this segments this segments and i don't have yet the update for the segments yet so let me comment it out and just see if this code still works um not in an array here these are just two arguments okay so now you can see also the red line but this is not a segment i mean it is a segment that is changing length but uh it should be like a stick so our update method here inside of the segment class it needs to constrain it to the initial length when it was defined so i'm going to say here update and let's just see what the new length is first so it's going to be we subtract from this particle a location to this particle b location so this is the difference between a and b and currently and i'm gonna need the magnitude of this so how i mean so far we we actually have the vector difference yeah and the magnitude of this is going to be magnitude of like this and we need the difference between the two magnitudes so how much do we need to relocate the particles so that they are still close to as close as in the beginning here so the difference between this magnitude and this initial length so is going to be magnitude minus this length like this and i'm also going to need it's going to be easier if i also get the normalized vector between these two because then i can scale that in both directions and and fix the segment if it gets too long or too too short so i'm gonna do here the normalizing vector normalized vector by normalizing this d vector so now the length is going to be 1 after this but it's not going to be losing its orientation okay so now what we can do is um move a and b locations of a and b with this difference with half this difference in each direction so this particle a location is going to be let's add so let's add to the current this particle a location we can scale the normalized vector from above with minus the difference by two so i'm moving um one point by half and i have to think about also these fixed points later the ones that don't move but let's just do this now and hope it works and the same thing for b but plus here so one goes if the segment is longer than it should be this point goes half the difference that way and this goes half the difference that way if it's shorter then it goes half the difference have the difference opposite direction so something like that great i hope i really think this is going to break refresh it's not broken but it's not doing oh i'm not calling this here because we didn't have an update method previously normalizing is not defined i think it's called normalize i was just talking what i'm doing okay and now this point is there interesting that this other one doesn't oh it does move it if you look closely you can see this one is actually falling very very slowly and that's because this one is pulling on it so it's going down a little bit and then this segment stretches and then both of these points adjust because here we have we are moving each of them even if point a should be fixed actually so i'm gonna need to take care of this somehow so this code is fine if the points are not fixed so if for example this particle a is fixed if it's not fixed and this particle b is not fixed then this is just fine code here but otherwise if a is not fixed then a is going to move twice that difference so it's going to do all the work so to speak else it means b is the one that is not fixed i don't need this if statement i think so what happens if both are fixed so if these are not fixed if a is not fixed if b is not fixed let's just be careful here and if b is not fixed then b is gonna move with both of them i mean uh with double the um yeah but uh if both of them are fixed then nothing should happen i think this is this should work i hope so if i refresh now i think this point doesn't move anymore but so far there's nothing fancy happening here so what i want to do now is fix this point to something maybe i'm going to fix it to the a location so let's say here this particles of zero so this point from there is gonna be this dot look at at each time we are drawing um actually i need to do to look at x and this look at y converting to an array from this point of pixel point object now it's breaking the location of the particle zero has to be like that okay and now this gravity is is too weak i i want it to be stronger so physics gravity okay so now when it's moving um that segment uh always constrains the bottom particle the particle wants to go down then when you move to the side it wants to stay there its original position but then that segment is going to pull it somehow so now i'm i'm getting pretty much exactly what i want but that's not where we're gonna put this so yeah i let's let me try to swing it like a like a swing like give it momentum when i should give it momentum and this is fun okay it's going more and more okay um i want this to be somewhere here attached to the body so that's gonna be this is gonna happen in the draw body thing yeah and then we are gonna use these same things for the hair as well so let's go back here and actually i would like to have in the avatar a body as well this all the because men much code is going to be their new body and hope this is not a re reserved word so bode.js and let's include it here as well like this and then both djs might be a reserved word but let's see so uh draw body is gonna be just a method in class body that is called draw like this and the shirt color let's actually pass it here uh i also need the skin tone so we don't use global variables at this stage okay shirt color and skin tone okay so this is now body and inside of avatar i all the draw on the context okay look at needs to be passed here as well because the body is also adjusting a little bit with that so draw with this this look at okay why is it red oh i'm not passing the colors here when creating the body i should use shirt color skin tone these should be also passed here in the avatar when creating the avatar to avoid issues great okay it works so now i really want to add these particles not in the avatar but in the body and i think this is just fine to copy here but the code here for updating the physics items drawing the physics items and these things here this needs to be extracted in the physics file here so i'm going to make a class physics and i think i'm going to use static variables so static functions so i'm going to write here physics update physics items draw physics items probably this draw should be not in physics but in some drawer or whatever but this is just fine and these go out from there to here with static because we don't initialize this object and i think this is where the gravity goes as well so static gravity there and the particle takes it from physics it's better like this a little better it's not perfect but i didn't really know what i'm gonna do with this so let's remove this and inside of the body after we do all the other drawings i'm gonna put here this code yeah save this refresh and an error okay the look at is no longer with this here i'm passing it like that hmm i'm just gonna put zero zero for now zero plus zero three i don't need the look at in that way at least so let's just have it zero zero mmhmm um why aren't they appearing um why is it not appearing there it should appear right i know this location is not good it's under the head it was under the head oh boy yeah okay so so it's drawing it there but i really want to use this look at point somehow so let's first move it to location there so it was where was it somewhere here so let me put it actually somewhere lower so let's put 93 here i think this is let's see if we can use these values because i don't remember what here yes no it's not exactly a bit higher up let's say seventy five 71 like this and now it's it's there but it's not affected by the physics because the drawings that are happening here are not i don't like uh not here we go with these back in the avatar and draw them on top of that otherwise this is just a squishing squishing effect there so let's go to avatar and put them back here and the it's okay that we did this in the body it's no problem it's very good but i want this to be at the higher level so here in the draw i'm going to say that okay and now this location should be even higher i think 65. okay it's almost good 64. yes 64. and this is the center point so now um i need to figure out how much this point should move left and right according to these translations and these scalings here so only the x location changes so i call this a string now i'm gonna call this thing string so let's say string x is going to be equal to i mean let's call it string location and the x is going to be equal to this value and y is going to be equal to this value but we need to we need to modify so first what we do is we translate this by that so that just means plus that value and then when we are at the location i'm going to scale with this let's say x translate this and this like so and uh here plus x translate times this x scale it should be fine and i'm not repeating the variables there anymore i really hope i didn't mess something up okay it's doing it it's it's doing it i don't want this to be anything like an in your face effect but i want it to do what it's it's doing there so great i i like it let's do the same thing on the right side i just want to get the things working now i i will style these better at the end somehow and the code is now not great yet but it will become better i think so i need more particles here this is actually the main location of the yeah this is the main location of the string so let's call this this string location initial string location and this one is going to be that okay and um this this with this in front otherwise like now if i re well i broke it but uh when you initialized everything was kind of spinning in place because the initial location was not that that we were forcing it to be but then um in the first second it teleports somewhere else and it forces the spin to happen in it okay yeah great and we have another one on the right let's put this one on the right oh yeah because it's not symmetric we i drew this kind of free form shape okay then let's have two of them or right and left i think i'm going to make a string object eventually but let's just see how how much software engineering do i need to use let's do it left string initial location this one particles an array segments an array segments should be with these particles and i'm not sure how to access these from here i don't think this code works i may need to extract this as a formal class but no problem let's see so left string let's put the right string and we'll adjust it later okay so this is now right string and here left string particles left string segments left string particles of zero is equal to and i'm just going to do the calculation here directly so it's going to be this dot left string initial location x plus the translate times the scale and the second one is going to be just the value of y i don't think this will work but needs to be done anyway yeah it doesn't work so let me extract this as uh as another class string and thread are called both words that mean something else hanging string okay and in the constructor we give it an initial location so this init lock is in it and now particles and segments can be here like i can write it like this like that this particles is equal to a new particle with this initial location these segments is going to be an array with just one segment and these particles okay and now i have this left string equals new hanging string of this initial location thing there and probably now it's going to work right string with the plus there no it doesn't work so a hanging string with these locations left string particles location is left string initial location plus blah blah some undefined particles so i'm passing it here the left string initial location oh dot y i hope it's this whew it's that great let's give it a draw method an update method and the draw method so in the update method i want to put the location of the first particle to something something like that so where is the attachment coming from so or no i just give it the translate and the scale it's a little bit confusing but yeah so this x translate and scale will be sent to that and it's going to use these particles of zero and this initial location like this it's not that confusing because that's how we are updating the the body there so it's okay so now i'm going to say here this left string update uh x translate x scale and for the right string i'm going to do the same thing maybe let's also update the physics after that like that and draw the things i have draw for that now so i'm going to say draw the particles and draw the segments i also need to update the segments yeah so a little bit confusing what i did maybe but so now i'm updating those that one and i'm gonna draw it this one on the context and same for the one on the right and hopefully this works now okay i think it's okay but the one on the right needs to be lower so even more even more okay and the bottom part can be even off the screen so something like that i i will style this a bit later but look at it now so one is moving one way the other one is moving a little bit different i really like this this effect now so about the styling we will look at later now what i'm gonna do is the hair so i'm gonna try to make strings like that here in the front so hanging somehow in the front and these are going to move and then maybe i'm going to do the same in the back i have longer hair now so maybe i don't worry about this top part just yet but here i want some hair to appear like this so let's let's try see how our code is at the moment like yeah basically i i want to know if this code is good enough i think it is at least for now so the string left and string right actually let's call this pendulum it's it's much better it's a much better name so pendulum uh like this yeah and let's extract it in pendulum js pendulum js like this and here in index i'm going to include pendulum js so everything still works now and the hair is going to be pendulum as well so made out of different pendulums maybe we make double pendulums chaotic pendulums let's see if enough time but i think that code is decent at the moment a little bit too many things here but i think fifth of them will go away because they are not needed for actual things all right so i want now to get back this code where i click and i get the chord and it's without the look at translation and um figure out some locations here in the beginning to put the hair so something like this location this this this this something like that so i just clicked there to something that looks good but i prefer to have it not exact so that it doesn't look too symmetric and these locations are going to be things where i'm going to add more pendulums so let's say this front here is going to be an array of pendulums so new pendulum of x and y something and these will need to be figured out somehow depending on the sliders but anyway one step at a time so now this value from here from here from here it looks the same starts to be positive thing one all right so uh yeah many pendulums in the front here so what do we do with them we update them so for this pendulums for each pendulum i'm going to say p dot update according to something i'm gonna put x translate and one at the beginning just to test some basic things but uh it will be different i'm sure so that's what happens first and then p dot draw on the context so each of the hair pendulums uh front hair not pendulums so for each front hair pendulum do this thing okay it's horrible so something happens but not what it should be i think i need to put something relative to a translation by a at least so something like this but the special translation for the head so these x and these are shirts shirt x translate and shirt x scale or body okay okay but i will need head x translate actually head translate and it's gonna need to have a x and a y so and i don't like something i have here this update with the scale doesn't make much sense not at all actually i will need to revise something here let's have another function update 2 where it's going to have just an attach location i wanted to do something like this before so i just copy it inside and i say that this location is going to be this whatever attach location that i'm giving so if time i have to refactor this so hit translate x is going to be let's just put it um i can't put it at a i would like to keep these values somewhere maybe each particle is going to have the initial location kept let's see if that helps so then these numbers are as the initial location so this is going to be now this dot look at x so update 2 yeah for each head it's different so update 2 with x to this look at x plus p init location x and this is something else not needed and it's not needed and the same thing happens for y i think nope oh actually it's not a bad idea hey we have it already i didn't need to do that so i don't need this initial location there and it's called init lock i don't like it let me refactor this like that okay so max and y goes there by mistake so the pendulum is defined with an x and y okay and then here p update oh this should be an array yes because we are in the vector place i couldn't use vectors i think for the pixels because they do have x y okay so let me disable now this pendulum this particle logging there it's filling up the console and i don't want that okay okay it's something it's uh something cool i like it length needs to be a parameter and these points here maybe they can be a little lower down so in the avatar where i'm defining the first and the last point i'm gonna put here minus 41. so now this is lower and the last one should be also somewhat lower maybe 38 good and these lengths i think they can vary so in the pendulum the length is set to this i put the default of that but here when defining the avatar it's going to be no not that one this one second one i think can be 35 i'm giving myself a haircut let's put this one also a bit lower this is fine okay this point is too much to the right i don't like it there so let me put here 34. good okay it's it's something interesting definitely interesting i i like it um i would like it to bounce somehow somehow uh let's try to make these as double pendulums it's not as hard as it sounds i think double pendulum okay length divided by two and one more particle that is going to be with the length so it's going to have a midpoint here and the segments will be two segments and the second one is going to be like that like that and uh that's it i think i just need to go here and replace with double pendulum and i get an error a double pendulum is not defined because i'm not including it anywhere okay it has a different shape now a little bit different behavior than before but somehow i i think the gravity is maybe too much maybe even too much yes tall and small but that's what i want more more of this kind of movement it's it's great and because the pendulums have different lengths then each hair is going to be behaving differently okay great i like it this is awesome i i like it a lot so what i'm gonna do next is uh do the back hair as well so the back hair similar to this i think it's not too complicated and then i'm gonna try to make the mouth move so i will keep the hair ugly like this for now and think about it later how to get it better but yeah so styling the hair will be the fine tuning part so now let me add similar things for the back here so front hair is there back here and let's have it very similar to this the same in the beginning but this needs to be longer maybe just replace these threes with the six and now the back here goes through the same things like this i refresh and it's there but it should be in the back and it should be lower so let's put here let's replace this four with the two this three with the one i think that's fine and this six with the seven okay and the problem now there are two problems actually it should be opposite of what a is doing so when you move the head up this back hair has to go down and when you do this this back hair has to go up so this back here i want a reflection here i want to not the reflection but a symmetric a point that is symmetric somehow this look at point that we define here in the beginning i wanted to have initial values so init x 0 init y minus 0.13 this is not the best way the clearest way to do it but i want to get this done so i keep the same value so that they never change and then in the avatar here when we are moving this so what i want to have here is a symmetric point on the other side of this one so i'm going to say i don't have the vector operations for x and y but so init x and init y are going to just keep them static right yes so those are the initial locations of that a point so now what i want is this point here is the initial one so i want this pendulum to move down here symmetric with respect to this pendulum so i have this location and i have this location if i subtract from x the initial x i need this vector right here i think it's like this i would really like to use the same operations there that's the vectors but i think i i could i just want to get things done now maybe have time to refactor this yeah yeah this is good this is very good it's just confusing that the back hair is in front so let me move it in the back somehow uh when we are drawing the head i want actually behind the body or i don't know yeah behind the body also so it's going to be here great they need to be longer and this one is too high up i can see it there i don't want that so the one on the right needs to be a little bit more to the left and let's put here eight okay let me make everything a bit um transparent doesn't work i don't draw the head i think um it's fine it's not fine i don't like it i think the front part it's interesting that it's like that but the back part those pendulums are so long that and the gravity is so weak that it affects them in some not so great way so what i want to do is put here a value of 3 and in this update 2 here gravity multiplier yes so i will pass this to the physics the idea is that i want them to be more solid than the the ones in front i mean not so much bouncing around and i just use this trick to get it to work of course it's not a realistic simulation but this is more about animation and how things look like and how they should look like on when drawing something so i don't care about reality really and i'm sending now this gravity multiplier to the double pendulum update physics items gravity multiplier gravity multiplier and the update is going to be usually it's nothing but otherwise it's going to be scaling g with this gravity multiplier so yeah by default it's one and here we are not using the gravity so we don't need to pass anything to to this i think let's save so the hair in the front is behaving in one way the hair in the back is behaving more rigidly if i'm going to put this avatar to have here maybe 30 then those hairs in the back are going to be very very rigid they are being pulled down so hard by that increased gravity that they are not allowed to move uh like the ones in front are jumping there but i'm not gonna exaggerate so much i'm just gonna put here maybe ten yeah i still want them to move somehow but not extreme like that okay great i think i'm gonna take a break and then what i'm gonna do next is gonna be the something with this blue and my face and i don't like really how that sounds i hope that i can use this tape somehow and make some blue markers on the face and i'm gonna move to do the mouth the mouth movements yes he agrees good okay so i'm gonna go have lunch and continue after that okay i'm back and uh we are going to do this mouth movement next so i'm gonna begin it by adding a couple of more sliders one that controls how the mouth opens like this like that and then another one upwards and remember only this part of the face moves actually so this top part of the mouth is always going to be at the same same place but this is move the down movement is what will happen so i'm going to just change the shape of the beard here and this bottom most point to somehow be controlled by the sliders and also this empty space right here i'm probably not going to draw an actual mouth i i hope i think this empty space might be enough with the movement of the chin to give the idea of talking otherwise it's more work so let's see i'm going to go to index.html and i'm going to put some more sliders here on the right so i'm going to say like this and i think same settings at the as before but update mouth and update mouth these will be some new functions there so if i refresh this is fine and let's add at the top there something like look at yeah and um i think this is better i'm gonna use capital values and i don't need um i mean capital letters and i'm not gonna need the column anymore i think it's quite obvious what these are i think that's good so um maybe here it's it's clear if i put column on the right of these words okay so these need to do something and update mouth is a function that doesn't exist so let's go down to where this one is and um um i'm gonna have to pass to yeah i don't know why i complicated things so much with this global variable i think i'm just going to access the avatar and tell the avatar what is the value and that's it so um like that so inside of the avatar i'm going to have a mouth um attribute with 0 x and y and actually this should be passed down to the beard as well because the beard is what is going to change shape according to these values so inside of the beard object i'm going to say here mouth info mouth info so some information about the mouth according to these sliders here okay so now when we do this draw half beard we need to remember what this what these shapes are and it's not very complicated we were moving here and then doing a curve here a curve here and then align to here nothing changes so much but now this point will change so that point will change according to the mouth x and then we have a line to here here here all of these three will change uh with y so i'm just gonna guess some scalers for how much this info is going to affect and let's see what happens okay this month so this is just going to pass a reference and every time we change this object it's going to should be updated in the beard as well too much too much way too much so here in the beard let's put um dot one maybe it's okay i think it's okay and uh vertically this also needs to be smaller yeah but i think that actually the this last two points here could be a little bit lower this 46 i think that's fine so the mouth is like that and actually the bottom most point also needs the same thing here so for the y value um yeah and let's make some constants here so mouth stretch x is equal to this amount and mouth stretch you so that it's clear what these things that are also repeating very much mean okay something is bad here because when the mouth closes like that it um i can see that bottom point which used to be c i think so let me try to fix that i'm gonna go to the avatar and in draw head let's try to put this yeah very complicated function there for the translations and almost good i see that line a little bit and i don't like it but um i don't think i needed a stroke and then i just see the neck in the background yeah let's see so and i don't actually need this code anymore this was just for reference in the beginning they were those uh cross shape thing for the head i think yeah and here what if i just don't do the stroke it's perfect i don't see any anything wrong with that great okay good so no need for this and and now that i have these controls for the mouth i'm going to start to do some image processing here so that the mouth will the mouth information comes from a set of points around the face and actually the head should also come from my movement somehow so i'm thinking one thing needs to be static somewhere like a blue point should be here um and then here on the side of the mouth i need something so two points here on the sides of the mouth they should be quite close to the mouth so this might be difficult to place and i have the beard here it's horrible and then one point also needed here so two points there one point here and one point here so maybe then we use the bottom point relative to this point to figure out side to side movement and uh no i don't like that this point is changing vertically and we might need this distance for something like we might need this distance for um figuring out how much the head should move and so on so then if you're talking like this it might move your head in unexpected ways later will it yes basically the up and down movement like this it's the same as if my my mouth opens so i need this point for mouth up and down i also need something static maybe on the nose so let's start with the point here and the point on the nose and see if we get just the head movement that we have now and then do that more sophisticated thing i have a bit of a worry that this camera here that i'm using in front is not that good or let's see can it recognize very small objects if um i will have to play with the thresholds and and things for the image processing but first i'm gonna take this tape and i'm going to cut some things from the tape so this is doublesided tape and i'm hoping it will hold on my face and i have this marker here that i'm going to color it with so that it's blue i really didn't have it was clo shops were closed yesterday and i couldn't buy anything better i just had this tape at home so of course another option would be to draw on my face i really hope i don't have to do that and i think that the way that collar behaves on skin is not so great okay something works so i made something like this by coloring some tape on one side and i'm gonna put here i guess and it's not fantastic because light reflects from it i think it's recognized but sometimes it may not be recognized uh yeah not much i can do about it i think maybe i can change the lights somehow in the room later but um let's do tell one on the nose and i'm gonna look funny for some time if this stays on my nose okay great i really hope i win this so okay some strange movements there happening uh let's move on to due to uh the image processing part so here in index we were doing something with the video and getting the marked locations but i'm not convinced that this function works that great i would like to see the locations on the canvas here highlighted maybe i'm going to turn these blue pixels into red pixels by changing the pixel color there so let's display them i'm going to loop and now these are vectors actually so i'm going to loop through them and say cam ctx begin path cam ctx fill style red cam ctx arc no just a small rectangle so wrecked at the location so i can spread the location of i and one pixel one pixel for the width and the height and fill so now i'm debugging the small canvas there to see these are red not always red so what's the problem here if i go to the get marked locations and if i bring this color here okay this is not always red not always i mean sometimes it doesn't look red at all i think some problem can be with the threshold that i'm using maybe i could make it a bit higher but i think that if it's too high then maybe my shirt will look blue or let's try to go here 200 but this really depends on the room no something here is now turning turning blue how about without the headset no some things there are just too much so maybe this needs to be something like that it might be good enough if there would not be these reflections there so i'm gonna do something about the lights in this um okay and now i can't see very well because i looked directly in the light ah going great still waiting ah good that time is ticking and i have maybe three hours left of available time i can use for this i'm not gonna use anymore okay getting a little better so i think some it's better this detection seems to be seems to be better and if i'm hiding these blue things then the sliders work again so of course um i have to code now these things a little bit differently so i want to know where this is and where this is all right so how do i do that well i'm really concerned first about this bottom point so this is my most important point there and i want to detect it first so let's figure out how to get this bottom point first and let's just do here something like process image and move the code there because it starts to be horrible where it is at the moment we may need to add some more files here uh actually i'm gonna move these to camera file since that's where we initialize the camera and it's close enough to image processing at the moment so function process image and the video and the camera context are global variables i think everything here should still work now yeah so here this is just for debugging so now the markers here on the right are not changing color but if i put debug to true i will also see point a there but uh it's fine and this does change like that so inside of the camera file i'm going to also here say find um get constellation so these are two stars two points and there will be two more here and probably one more here so i'm gonna have a function that gets me this constellation from these marked locations so i of course now there are many many locations here that are making this red point and this one so they will need to be averaged or something but um let's get them like this and say here const constellations constellation or just points is get those things i don't know why i want to call it like that technical term is clustering but uh i'm not going to use any clustering algorithm for this i want it to be more reliable and they tend to be either slow or too complicated or random in some cases so i want to detect first this point with this get constellation function and then i will want to draw them so we'll get to that but inside of this get constellation function i want to say get the point with the minimum y value so i think the point with the minimum y value must be inside of this one here in this region many points here so let's say um meanwhile point is find the point so that this location or this point that we are inspecting this is a vector now so the second component is the y is equal to math the maximum actually because y grows downwards on the computer so maximum um of the y values of the locations so i'm going to say here locations map like this so this is going to give me an array this map here is going to give me an array of all the y values then the max is going to be the maximum of those y values and here we're going to find the point with the maximum of the y values so let's leave this here and now let's return it for now just one point okay and this is just one point now and um we were using something to draw this a point previously so um i don't know where that is it's in the avatar draw head this one the draw point so i want this to happen now in the on the camera screen there but it may not be very visible because here there's some scaling happening and here there's not let's just see what happens so drop point it's some utility function oh my the canvas is not even specified so ctx and let me change this inside of the avatar give it the ctx here and we're not really using it anywhere so that's good now here um cam ctx and uh let's call this point now m point so the one we are getting the bottom point from here this should be with x and y it's undefined really how is that possible because there must be some points there to have some mistake here let me just first log this part okay so these look like some y values indeed oh this is an array here it's an array and max doesn't work with array it works with many parameter values so i have to spread that right there okay no error at least but oh i should probably include this doctype here so this thing doesn't appear anymore okay i think the point that we are displaying is too small so when we draw the point here i'm gonna have to give it some big radius bigger radius something is there now but uh what happened to everything else what happened did that in this dog type do something to my css what really how did that happen okay so now the point is actually here this small m there so um it's not exactly in the middle of all these red points here at the bottom but maybe we'll get to that first i wanted to have this m point there and uh i need to draw this a little bit bigger it's just too small so um going back to the camera and now i think it's too big because if i'm gonna have many small ones there yeah it's good a little bit fidgeting like that but it's it's fine so this is just the one point the minimum y point now i'm gonna take the nose point so um to get the point on the nose i'm basically gonna get the farthest away point from m and i'm doing that i i think i can also get the one with the smallest y but i'm gonna use this furthest away from trick later so let's do that i will say let i like that i teach it better in this way so going through all the locations i'm going to calculate the distance between locations of i and the min y point which is actually the max y point because y grows downwards so yeah max so the distance from each point to that one and i'm going to take the maximum so i'm going to say nose point is going to be just some location like that and and that and here if distance is more than max distance then max distance is going to be distance and nose point will be updated to be the location of i something like this so just getting the maximum the furthest away point from this end point and now i have two points that i want to return so i'm going to call this chest and max y point and nose nose point i think i should call this one chest point it's clear that it's the max y from this line of code there so now i have two things that i'm returning and i have here points and um or i could have destructuring here like nose and chest and now i can say draw the nose point let's call it n actually for nose and the other one which is m here let's call it c for chest okay okay so i have the nose and i have the chest and it seems to be quite quite reliable sometimes problems because of this shininess i couldn't do everything i wanted with the lights because the window is also there and it's too complicated but this is something that kind of works now at least a little bit and it can be much better in better room conditions or with different types of markers here that don't shine because there are materials that don't shine out there and i just happen to have a crappy one does this mask work as blue if i change the color now i think this is okay for this demo okay so chest point nosepoint what do we do with them well um i need to know some i need to calibrate the system so i'm going to add here a button that says calibrate and html like that and when we press on this calibrate light i wonder if this is how you write calibrate anyway i don't use internet so i can't check so calibrate um it should go also in the camera for now at least so what happens now here is that i want to i really want to keep these as a global variable so let's call these something like that and now that and here i can still destructure so okay and when i calibrate i'm going to let's just log this like that okay so i have the nose and the chest coordinates when calibrated so what i'm going to do is when i press calibrate i'm going to make a copy of these points yeah i will say here the reference location so the reference um is going to be the one when you press the calibrate and then we're going to calculate relative to those somehow so constellation points reference is equal to nose is gonna be like that and the chest is gonna be like that so now i can log it after that and if i'm gonna press calibrate i'm gonna get the nose and the reference and if i move now a little bit and i check constellation points like this i should get i'm losing them yeah i'm losing them i'm replacing them here so let's add the code as before like this and now i just write here constellation points nose is equal to nose i think this is going to work yeah now they're equal but if i'm moving and i'm debugging they are not equal anymore so relative to this uh change so depending on this change somehow because i need to know how far is n from c to be able to do the head movement like this properly so now i don't need this log anymore i believe they are working based on this calibration here i want to based on nose and chest now and the reference nose and and chest i'm going to figure out something here so let's get the distance between nose and chest so distance between nose and chest let's just call this d1 and d2 is going to be the distance between the ref the constellation points ref nose and constellation points ref chest so these are the other values when we press the calibrate button so two distances here so now um depending on how much these distances change if if d2 is exactly equal to d1 then the head is gonna stand stand still but if d1 is going to be bigger it means the head should go up so d1 minus d2 and then we figure out some kind of scalar for that so i'm going to say here d1 minus d2 the difference on y so this is d1 minus d2 and that's going to be the value for this and i'm not gonna change x anymore i'm just debugging now so the head can't move all right we need to have a reference so without pressing calibrate nothing happens and now if i calibrate very interesting very interesting yep way too much we divide by the height and i think i messed something up here it should be d1 d2 minus d1 calibrate first okay but i want more stronger than that so let's scale this by something let's say five times what it's doing at the moment i press calibrate okay and now horizontally nothing happens but it's easy i think let's just call this y one and y two uh they mean some distances um to the nose or no they were the distances yes sorry but horizontally we need something similar so we need we don't use actually the reference anymore i just want to know if n is on the left or on the right of this c right here so yeah so i'm going to say diff x is nose x minus chest x and also i'm going to divide this by i want to divide by this d1 actually let's see i i'm starting to get tired and i can't really explain anymore why i think some of these some of these things work but basically the distance this distance i want to use somehow for normalizing and this should be here and this code should work now i mean should be active okay very interesting very interesting something is strange oh these don't have x and y they have zero and one i i hope uh and i'm interested in x so zero for both of them nice i like it maybe multiply this by two okay calibrate yeah this starts to feel awesome i i'm really excited about this sometimes crazy stuff happens like if a point disappears but that's just how it is i'm not i don't even know what to do about things like that it will work in very good lighting conditions even better than this room and um if these things don't don't shine i think this room is quite good actually but the the material on these things is not great so some crazy stuff can happen when i'm testing but and there's a fidgeting here you can see the head somehow fidgeting all the time because i'm not actually detecting uh very well the center of all the blue points there so i would like to do that eventually let's finetune this later so i want now to detect points on the side of the mouth no this point on the bottom of the mouth next no the sides of the mouth so i need to cut some more of this tape and i'm going to do it in a smarter way now i'm going to actually peel the outer layer i can't draw on the outer layer because it's too slippery and the color just leaves off it's this kind of wax paper so i'm gonna draw here blue on one side for three more points like that and now i just cut these always important to pay attention to what you're doing normal things that what you're doing and see what can be improved because if you keep doing something in a bad way like how i drew these the first time then you never become better at things i don't think it will stay there stays on my lip not where i want it to be i want it to be here on the side nope i'm in trouble this bottom part of the lip is fine so at least i can do that it's not the best but it stays here i think the other ones i really don't know what to do about them so one here for opening the mouth it's definitely possible but i can't open the mouth sideways which is hello hello hello hello maybe the points here hello hello they are too much um how to say now they aren't on the side of the face and they are really getting light from the window and it's a problem there um it really needs to be here maybe i can somehow wrap it around my beard is this hmm i don't know how reliable this is because from the front you just don't see it now or maybe something so somehow wrapping it around the beard and inwards at the same time yeah hard to describe what i'm doing i don't know how to say it but i might be able to pull this off let's see hmm is it getting anything maybe on the outside no okay ow horrible i'm gonna have to make new ones i think that attaching it to the beard like that works i think attaching it to the beard does something but then i have to use two types of tapes so one of it is gonna be just to attach to the beard so i'm gonna put it just here like that i think and yeah something like that and the next one is going to this normal blue thing which i have to do again and attach it what oh great yeah new point coming in somewhere something like that it's not very good but i think it will work i think something will work and i probably look horrible and can i still drink yeah so we have two points and now i want to get this let's just call it left right and l r b so that's how these points are going to be called l r and b and um let's get point l l or r it uh it doesn't matter they are kind of the same thing and the property of that will be that the sum of distance from this one to this and to this must be maximum so the farthest away point from here is going to be that point that has the biggest possible distance to n and c so let's call that point l l point and say that it's the location of zero as before i'm going to copy this code and a new max distance i'm just going to reinitialize it with zero and the distance is going to be the distance to the chest point plus the distance to the nose point so yeah then l point is going to be the new one and let's just call it l l point like this so now with our constellations here i just want to draw it so l of 0 l of 1 and let's just call it l i need to destructure it here as well okay so l is a point and it's either here or in the other place i could force it to be one or the other but for now it doesn't i will do it later let's get r also so r is going to be if you know l like if l is this r is going to be the point that is the furthest away from all the other ones so i'm going to go here and say r like that and i copied this with r point and here i'm gonna also add the distance to l white let me write these distance sums one under the other so that it's more visible what is happening here and uh this is gonna be our point okay no it's not good something is not good so first problem is when i'm drawing them this should be r here okay okay so why it doesn't work so i'm having now l here okay and when or l here and when air l is here r is for some reason there next to c because it prefers the distance there so l and n distance to l and distance to n is so far away uh yeah that it's better to be down there than here these will be short and only one long so i think maybe trying instead of a sum doing a product there is going to emphasize that even more so let's see okay so now this system seems to work not big difference in l and r but it is what it is uh with different kind of markers it can be even better and probably if i get closer or let's see later the last one just the same thing again the point that is furthest away from all other points so i'm going to call that b for bottom of the of the mouth let's have b b b b b point b point b b also the distance to r there okay not good not good so yeah again it's better to have a position like that i think what i'm going to do because the chest point here is so low and it's such a big problem either move the point upwards a little bit so if this point here would be no that's not helping much let's put the weight on this chest point make it smaller no that's not the problem the problem is that b is such a great place for being far away from all the other ones so maybe we divide by the distance to the chest point no so i want a point that is far enough from n l and r but if you get too close to that point it's bad uh no i think that i i had this the other way around what if i use here the minimum distance the minimum distance to rl uh n and b so minimum distance if distance is less than the minimum distance then the minimum distance is updated like no because now it's going to choose a point that is it's exactly zero how about with the previous addition from before huh and how about squaring these so squaring the distance these individual distances no why does it go there where oh i'm looking for a minimum distance but this is a very small one to begin with okay now it works i think many of the others would have worked as well too many details to start to explain but basically b is quite close to the center of mass of all the other points so i used it in that way this definition here with the sum of squared distances is it's there now and i can do a check here that if um l point x i mean zero is greater than our point of zero then swap these i think i can do something like this in javascript maybe okay now l r are proper n is proper b is proper c is proper everything is fine but um and of course if i calibrate head still moves like this but the other things are not not appearing anywhere so what will happen next is uh is is let's just put here in the calibration in the reference points i'm going to put also l r and b that's the first thing and now um let's calculate a distance between b and n so b and n it's going to give us a distance for how the mouth is opening so b goes down and and always stays where the nose is i can't move my nose so let's say bn1 is going to be distance from nose to b and bn2 is going to be a distance from uh let's just say here ref is equal to that so that i don't write this everywhere it's just horrible okay so ref knows ref b so b and if y is going to be equal to b n one minus b and two probably like that i i don't want to think about it anymore if it's not one it's going to be the other and this difference is going to be divided by wait d1 let's keep the same logic and see what happens so with this bndiff i'm gonna say update mouth with um value and y okay so let's try calibrate everything broke ref nose and ref b oh the constellation points are missing the other ones okay calibrate opposite so needs to be opposite and needs to be multiplied by something more so i had it right in the first time and let's multiply this by five or something calibrate hello hello hello hi hi hi hi hello i think this can be even six but i'm gonna try with seven hello hello hi hello hello l and r points are not really moving i'm not using them yet but nothing seems to happen at least not yet this fidgeting is what i'm gonna fix next so what i'm gonna do is um i really like it i i did something really great i'm happy with this so um the fidgeting i'm gonna take an average of the points i'm gonna average the points in their neighborhood here somehow and replace lrb and nose and chest with the actual average there so that they don't jump around so much and then this animation will be also smoother on the left it's not good as it is so let's try that next now that we have all of those points there i'm going to go through let's create sets of points that are closer to n to l to b to air and to c so i'm going to call these n set like this c set b set lsat r set and now i'm going to loop through all of the points and i'm going to say to calculate five distances is n this is going to be distance from logs of i to a nose point and the others will be like same c distance b distance l distance r distance and this is gonna be chest point this is gonna be b point l point and r point and now i want to put these in the set where the distance is the minimum so let's get the mean uh is going to be math dot min of endist seedist be this eldest this like that and i'm going to say if mean this is going to be equal to and this then and set push locks of i and else if mindist is seedist then c set is going to be logs of i then b this here b set is going to be log getting logs of i l l set r r set yeah so now i have sets of points for each of those things so these points are going to be nearest to the ones that are marked on with the letters on the camera but um but now i can calculate the average of each of those and replace each of those points like nose point chest point b point and so on so nose point is going to be average of n set chest point b point l point and r point so r set l set b set c set ends might be confusing what i'm doing now but look at the points now and look at this fidgeting on the right and it should be gone when i refresh if i didn't make any errors errors okay chest point is const okay calibrate much more stable so i'm gonna actually have a tutorial someday about this lightsaber effect and i will teach better there what i did here with the averaging so i don't know if it's already out when you're watching this or if it's coming but we did it i i averaged the points and now they became stable because they are not represented anymore by one single point but by many points many points averaged together and they are not fidgeting so much yeah this is great wow i'm really happy with that character moving there when the points are not blocked otherwise it's horrible okay let's try also these side points this l and r maybe they work who knows so i'm gonna copy this code like this and say l r diff with dx lr1 lr2 lrdf x is gonna be lr1 minus lr2 divided by d1 multiplied by something and lr diff x there so let's see calibrate i'm looking straight at the camera hey it kind of works hello hello wow wow this works um how about if you put bigger value here nine not 79. okay calibrate hello hello hello i am raduz avatar hello i'm radus avatar maybe with the mouth it would look even better let's see if i redesign it to have a mouth in the end i think i need a few minutes break and then i have about one and a half hours left to do this so i'm gonna do i'm gonna during my break i think i'm gonna record myself saying something with these things on my face so that i can play with this method also without these things on my face i mean to play with this thing so i will record myself saying something and when we come back uh when i come back i will make this work with the camera or only with the sliders or with the video that i'm going to record and i like it a lot and then fine tuning drawing these to look like hair kind of like in the original drawing and these strings here they are small minor it's much more interesting what happens up here now but i like them great so i will take a 510 minutes break and record also something meanwhile okay i'm back and i recorded a short video to test this i don't know if it works yet but i added it here as this mp4 file in the folder and i think it's really easy to test here i just have to put something like and before of course it's still gonna initialize the webcam and and do whatever but uh it's gonna replace the data uh from the webcam with the source coming from that video let's see if it works it crashed but um it's talking there something and that's me from the video it crashed because of a course so it's trying to load the file from the computer and uh do some processing with it like image processing and the browser doesn't like that um i think i need to make this into a server so let me go to show the status bar in this visual studio code and i have this live server extension allow access and and and now instead of going to this location i'm just going to put here the localhost ip address and this 5500 port hi i am okay one two three four five six seven eight nine ten there were some problems there with um with some of those things disappearing sometimes but let's refresh and press to calibrate also quickly somehow or i don't know um i want this to actually calibrate here wow every time i'm saving something it's updating there the server works differently testing one two three four five six seven eight nine ten yeah um this calibrate can't be called there yet because the image processing hasn't happened yet so i'm gonna take it out i'm also going to disable the sound here four five six seven eight nine ten hi i am radus avatar testing one two three four five six seven eight hi i am radhu zabatar testing one two three four five six seven eight nine ten not very bad not very bad i like it um let me disable the sound because this is disturbing every time i i change something in the files this is uh updating in the browser and talking i can't concentrate when he's talking when i'm talking there like that some uh maybe that seems to work so the voice is not there anymore so there is some small problem with the mouth here and also here and i wonder if i can hmm work with the different thresholds that are better so that it works for all the cases let's say 195. was it perfect there was a little bit of a jumpiness but not much uh only if you look on the right side then this b was jumping at some point but only a little bit the mouth looked okay i think yeah okay i think this is just good so i have a demo now as well i can put this on my website and show it to the judges later otherwise it's very hard for somebody to test this application of course you could do something with these sliders but it's not as great as when you see it in action and people won't put these things on their face or wouldn't know how to do it unless they see some example like this so i'm happy i did that let's change the input somehow based on if you want to use the sliders or this video or your own webcam so in index.html i'm going to go and say here now where do i want to put this selection for the input um i think the sliders shouldn't even appear so sliders should actually be called side panel and here these are the sliders now and the sliders can be invisible i mean not added to the dom if the video is playing and in the beginning and i want the video to be playing in the beginning but i don't necessarily want the camera access because people don't like to share their cameras and website usually so also the calibrate button not needed if the video is there so okay and now we can add this kind of select component let's call it input and id of input and now i'm gonna give it some options inside so option with the value of video video and then the other ones are just going to be camera and sliders okay great so these will be here it needs a label let's give it also on a new line and okay here okay so inside of this camera.js file i think i'm going to just initialize the video with element here at the top like this and i'm actually gonna copy this here this navigator media devices blah blah blah this should be inside the function called initialize camera and we only call that when we change that selection i think and what will happen then is so by default the page should load the video first okay it wants some kind of a start button or something let's add here or i don't know now it worked so it begins with the video or no maybe it will want us to do that so let's just put here a button that calls a button that says start like this and the start function let's just go to the camera for now and say here start something is wrong there this needs to be here it changes the size already now now start and it begins and i think that it won't complain anymore about problems so it starts that but if we change this to the camera i want to do initialize camera and then i don't want to do this anymore i do want to say that the source object is going to be the data from there or maybe i do want to do this because maybe the yeah i'm gonna create a new video i'm gonna set its source object like that not like this because the camera your camera might be different than my camera when i recorded the video and so on so yeah so this start here should be start video maybe let's see so when i refresh and i press start this is going to start and it's great i like it and when i change to camera or sliders some things should happen so let's make here an unchanged okay so here we have camera sliders video and switch info dot value if we have video then what happens um let me close many of these things from here so i think i want to have this one like that and i actually think i it should be reinitialized here so let's just have it null in the beginning reinitializing it like that this volume i should remember to put it back to maximum start break and now if this is a camera then we are gonna do initialize camera okay so start the video video starts if i change this to camera it works but i think i'm in different positions and it's not calibrated or something video is great yeah something is wrong i oh this headset was making some bad colors i think okay now it's good so video seems to work it starts it's doing some different things there camera okay let's put also the video with the volume to one i'm i mean hide this because i wonder if the video plays in the background so the video is playing in the background and i think we should do video stop before starting something else if possible testing one two three four five seven eight nine ten hi i am testing okay i want to start in the beginning to just start the video without the option to give the input so i'm gonna remove the input from there just in the beginning so i'm gonna say here input display none input container display none and the input container will be inside of this thing so okay and these line breaks i think should be also inside there more line breaks here maybe inside this video output okay so now you just have the option to press start there hi i am testing one 2 3 4 5 6 7 8 9 10. so when we press the start i'm gonna make this input up here and this start button should disappear because we don't need to press start anymore i think okay so now we have the video we change to the camera calibrate button should be there with the camera so we need that everybody's going to have different markers on their face and if they ever try this i will so calibrate button no need to calibrate with the video it's just confusing it does the calibration it should do the calibration automatically let's put here on the first frame so auto calibrate set to true so on the first frame when there is no constellation points there we calibrate yes yeah i think this is good um but i don't want auto calibration for the camera because people need to see themselves first so now it doesn't work but if i press calibrate hello hey hello hello la la la la la la [Laughter] oh something was happening with this point okay this is very funny uh come on a little more energy i need more energy video yeah it starts well and it auto calibrates itself on the first frame there camera calibrate hello hahaha great and the sliders doesn't do anything yet let's put this to be initialize video initialize camera initialize sliders and now in the beginning the start button is going to be initialize video yeah and the sliders here so right so initialize sliders this should be in something like a control panel let's make control panel js and just move some functions there like that and from here so they initialize sliders it's going to be something like like what we have the sliders here that need to be turned on we want the video output to be turned off so sliders with output i'm getting some messages i have to check yeah okay so the output none and make sure that the sliders are off in both of those cases so start the video then they can change the camera for example but nothing but really will really happen here unless they do something serious like this um what happens if they press calibrate now so somehow with a marker like this funny things happen very funny things happen you really need to have points on your face like i have and then it works okay sliders okay uh no not okay the video needs to be not active anymore maybe this video pause is enough and constellation points has to be set to nothing let's see if now it's different so video is there camera is there calibrate okay for me seems to work i want a line break between the after the sliders why don't they work i think the video is still there so in the camera we have process image this is going to happen all the time here video it needs to be put to null we need to put it to null here that will make the sliders activate yes okay great um but now we are gonna work with this video i think and maybe with the camera if these things still stay on my face calibrate would be good to have some kind of some kind of instructions here what to do maybe start is not defined oh where's the video getting tired this is some common behavior it should be grouped together calibrate below the camera i think below the input i'm gonna move that button there it's better like that okay good we have something we have something that works here and even with this video i like it problem now is just that uh these styles are horrible this hair needs to look like hair and i still need some energy and i don't know how to get it but uh come on it's a little bit more effort i think i can do something maybe i like the hair i really like the hair what's wrong with this c now it's getting color from the it's getting glare from the light i don't think i can do much about the lights to make it better but this is really great i'm really happy with what i have done and for the hair let's do this so i want to connect now this point to this point may be influenced by this point let's do that so move to here line to here curve to this place and see what happens so inside of the avatar actually in the hair okay head is something that is empty i don't think we use head anywhere i remove this head now so here uh not in the hair but inside avatar because this is where we define these front hairs so what i'm gonna do now is here where we are drawing that's not gonna be used anymore at the end um and i'm gonna say draw front hair a function on the ctx actually a method here draw front here like this and i would say begin path move to this front hair of zero so this is going to be now the first pendulum particles of zero and these are arrays so i can do spreading here location okay and line two particle 2 location so this is gonna draw a line let's make ctx stroke and let's make this one yellow so this line right here that you can see in yellow here so now let's try ctx quadratic curve two and it's gonna go to the second hair the base of the second hair with the second hair control point from the middle yes and here comma so this is what i'm getting now my drawing here okay it's kind of like in reverse actually the curves are in reverse here mmhmm so i should use this as the control point uh no problem okay something like that and i will do the same thing for the other one hmm looks nice i would like to have another hair somewhere on the left here that i won't draw but it will affect this other hair and the other things so let's actually do that have another pendulum in even more to the left here like three two oh this is the back here okay that's good or even 41. it doesn't matter if it's outside so what i will do now is uh that here strand here is not going to be drawn so i'm gonna go it's just gonna influence the others it's crazy uh what i'm doing so then i'm actually gonna start at the first hair here and continue to do as previously but now instead of this line 2 i would like to have it influenced by this point so this is not straight anymore so i'm going to replace that line too with another quadratic curve and end location will be that but this will be that what no line to yeah yeah this is what i want that's what i want okay so now that i'm here i'm gonna repeat the same thing but here i'm gonna have one here i'm gonna have two here i'm gonna have two and here i'm gonna have three i like that great and uh now i really feel like i want this to be more in the middle more on the left so this is now front here of three zero one two three maybe yeah and maybe this also a little bit to the left actually this one also a little bit to the top and the next one a little bit to the left and i would like actually the first one to be even more to the left but i don't care that it's outside like that and maybe even more and the first one here maybe 31 okay and i will need another one at the end so like that for the influence of this last strand so now i'm going to do a little bit of things in reverse it's going to change the direction let's add one more strand there two on the left and three on the right i want there are too many here in this original one i don't want to waste time on that now so uh i want one more strand so let's group these more so this goes even more to the left maybe 1 5 28 and another one here thirty two no forty 37 26 13. something like that so now going back to this place let's do third here so from here we are actually gonna go influenced by four maybe this is now three and this is four now this is five no this is four this is five yeah okay now i got it okay so now i have the third hair and fourth hair five five six five okay fifth hair six six seven six something is not good yeah the point that i'm using to influence here i think this should be four now no we're done we are done i forgot the last one is just to guide guide the things so now that we have done all those all these things i think all i need to do is um fill not stroke okay and probably i want one more line too and i'm gonna go in this middle point right here so that i will cover part of this bold area maybe that's enough let's see so zero one two three align to three particles of zero location maybe it's enough i hope and now i don't want to draw these anymore oh boy i look bold i i think that's maybe a sign that i'm becoming bold uh it's fine yeah uh let's see how it looks like with the video nice okay let's put the sliders on okay it's pretty okay uh let me add back the stroke and i think this one is just too much to the right so and this one yeah like that now when i'm actually drawing the hair i could move this point lower so that i don't look so bold let's see draw half here topmost point okay but um what was this point here i don't know i think it's something on the side the control point probably it's that one or the outer one right most point okay probably that one wow i look so cool i don't know how i did that i like it but i don't look like that so it wasn't that point i think it's this point right here so okay and let's disable now that stroke from here the yellow line that i don't want to see anymore i think these control points here need to be i don't have hair that goes like that in the down there yeah so this control point needs to be a little bit lower not that i think here i need no this is the outer control point okay uh oh yeah yeah yeah this one it's okay it's okay i think the hair can be lower the front hair can be lower yeah i like this it's better it could have few more hairs i think but it's not bad it's not bad at all hello hello hey i think that the initial video is so boring compared to what you can make it do let's i i want to do the hair in the back as well and then these front things so for the hair on the back i'm gonna do similar tricks and i also want to have another one on the left somewhere that is outside the screen or actually this might still be in the screen maybe something like that let's see and a last one okay yeah maybe it's gonna be good so i'm gonna do the same thing for draw back here so this draw front here does it have the same number of three four five six seven eight one two three four five six seven it's almost the same but without the last one this could be made definitely with the loop and i wouldn't have to reuse that but somehow i like that i could style them individually and if you would like one of them to be a little bit different you have control like this so i know this code could be half this size but uh i prefer to have this kind of control here so now this front here will be replaced with the back here everywhere here so let's just do okay something is happening but uh the drawing of the back here is now on the front and i want it to be here and okay nice um okay uh needs to be bigger needs to be bigger you don't see it well enough so let me put here nine nine nine nine nine nine okay and these ones on the side i think they can be even more so five and six maybe and these ones not bad oh this is bad so i think the top part of these can be lower hmm too much 85 85 80. and i think that something is wrong here i don't want it to move maybe that much up and down i don't know somehow moving too much up and down yeah i think i will just move the outsides a little bit more in let's say this is now 55 and this is 55 and this can be 38 and 39 and i think that now shouldn't be the problems anymore they're okay but uh that gravity thing i think it's too much i want to see it moving more so the gravity multiplier not there where is the multiplier where am i calling that oh in the double pendulum oh yeah this update 2 method this is the kind of thing that you really forget what it's doing after some time okay and i want the sides of the hair here to be closer to the other one so 23 twenty no twenty eight no not the front here back here okay that one oh the side hairs are too long now these don't really matter okay these ones are too far to the side i like this shape more these movements are just way too much so i think that what i want to do here is put more emphasis on initial location why oh no something is horribly wrong this one maybe doesn't need that okay mmhmm okay i want to move this point a little bit to the left so no minus 36 and 36. it's a little funny i think that these sliders are just too much allowing too much freedom i'm gonna put them even less because in the real movement this never happens so i'm gonna put here minus three on the y plus three on the y uh huh and uh maybe even two two and uh the step is gonna be zero five okay and i think this hair can be a little bit more to the right they are too close now so let me go back to the avatar and try again 20 here 25. okay nice so one thing that could be tried is actually add one more hair on the front to partially cover the years i think that would be a great effect uh i'm gonna still try to do that and also limit this x a little bit i think that minus 0.4 and plus 0.4 is just enough i mean i'm cheating here not doing a real 3d and it can show if i'm not paying attention and of course people will notice it's it's obviously a 2d animation there and i think here it's just too much movement still so let me or it's fine okay i'm gonna try also something with the front here maybe i call it side hair let's say side hair and um left i'm just gonna copy these things i need just three pendulums the one in the middle is gonna do the actual drawing so this side here left uh update and draw yeah so just copying the one that we had previously and draw side here left my this needs to be extracted into its own function and done some loop there i'm too tired now and it's gonna stay like this so let's see if i have energy at some point to fix the code so this is actually all we need there yeah this is the side here but now we need to tweak it a bit so the side here on the left this point here okay i'm i have to comment out this front hair and this back hair it's confusing too much so why is it like that side hair left and also these many things i don't want them anymore yeah so okay it's good but these things need to be more to the left i think yeah let's put six here four here something like that maybe and up more up okay something like that so how does this look like with the sliders nice almost nice too much to the left here let's just put it so that it's 50 40 to 31 okay hmm okay that's good i think okay so i think we can do another one on the other side i'm just gonna put positive signs here and hope for the best side hair right let's reactivate the back here uh i'm gonna draw these if debug front here if debug and side hair right probably would have been much better to write loops there at least here i'm going to make draw side here function and here i'm going to say side hair left and i mean draw a side hair method and write just object so i will replace this with the argument and i don't need to copy those i just can't concentrate anymore so it has to be like that okay better maybe let's put debug to false oh not like that okay so those things are not visible there and i like it it's much more personal this way let's see calibrate yeah yeah great i really like it very nice very nice okay so these things uh it's the last thing and then i'm gonna take a break do something else and come back in uh maybe half hour or so and see whatever quick polishing i can still do and i'm done with this so it was amazing okay these things i will make an option for the debug there oh yeah the horrible nose i forgot it's so horrible i don't need these click listeners anymore why should i remove this probably it means this alpha thing i don't need the image anymore the reference image yes i can actually delete it from the project here and in the beginning i'm loading it somewhere image image no need for image and i just need to animate yeah good fantastic it's so great why don't people do this it's awesome awesome and now i'm thinking about that project that we cut off the list with the scanning website that scans your body and so on it's not very complicated to actually change this so that you would do some face profiling like how big are somebody's eyebrows and what is the skin color and i don't know things like that how far apart the eyes are the big the nose is and so on and then with that you could change this avatar automatically so of course that one probably meant something different like that the actual textures and you the avatar you're making is pretty much looking like you but this is in my opinion much better it's much more creative yeah okay those things i want to get them done and then i need to do something for half an hour and then final find fine tuning probably debug button here if i if people want to see what is happening behind the scenes right i said i'm doing those threads on the shirt but i'm doing something else i'm just cleaning up some of this code okay much better structure here that thing avatar uh okay five minutes avatar left string and right string so update and draw so i don't want to draw them like this i want to say ctx begin path ctx field style and i'm going to do an rgba black with some transparency like that and probably same for a stroke style so what i want to do here is get um draw this as a circle which is a dark transparent and i don't need to define new colors uh pendulum init location x y a radius of something full circle and no more drawing this left left string like that and the ctx fill ctx stroke too big great i would really like to do these ellipses it's so easy to do but no time now circles are just too perfect eyes as well at least a little bit ovalish it's enough to make it so much more organic so okay this this that okay both of these are there and now um just a line too something like that but thicker i don't like that they're so straight i'm gonna do a quadratic curve to going there but somehow somehow i want the point here anywhere really yeah um that's fine and um same here but the other side okay somehow i would like the body to move a bit more and these things to move more it's just too small movement i think for them to be picked up yeah so maybe in the physics i'm gonna put the gravity less no no that's just fine they wouldn't swing that much anyway and again this is some kind of very small thing that i wanted there no need to worry about so what i do want to do is have this curvature a little bit different so plus three it's good and i want the thickness to be more ctx line width uh okay now they look better right way too much movement on the side i don't like it i think it was i find more fine like that it needs to be subtle i think it's the head that it's doing the movement and the side just a little bit difference there okay one more test with the camera calibrating hello is this good should i do more great [Laughter] okay wow something crazy is happening gwen when not all points are recognized wow this is fantastic i'm so happy i did this okay i'll take a break and then really wrap up all this page and and that's it i'm back so i still want to do a couple of things um add a debug option so that for example when this video starts here um you don't see those things there actually those need to be added somewhere um let me see this draw point so this is if debug like that it's easy to do that part but um yeah um but i want to have an option there so i need to use a kind of a checkbox maybe so let's put input type checkbox okay and let's write here debug like this and yes and give it an id debug check like this so our debug value no no no i don't want it it was fine like that so on change toggle debug this and what will happen now is that okay so i compare it like that so i say if this is it was true or false so debug is equal to that and it doesn't need to be a constant anymore so now there are a lot of points there being visible points in the video also like control points yes but this jumps way too much somehow uh yes i think i just put this one at the very top to avoid these kind of nasty issues okay camera calibrate what what is happening i need to see with the debugging oh the headset is on it's uh confusing it has some kind of parts that reflect blue light yeah awesome i like it what happened what happened i didn't see what happened that debugging was ah this it's pointing upwards and the light is reflecting okay okay yeah great no debug awesome great okay uh video this needs the sound to be on let's remove also these debugging statements does that happen in the camera no index no we were in index how where is this coming from control panel oh okay i forgot we did that i don't need that value anymore put volume on i mean we don't need this anymore so the video does have volume let's check it out hi i am testing one two three four five six seven eight nine ten great okay the nose i still have a bit of energy and time left maybe 30 minutes max so let's try the nose nose so i think that the tip there i think we can do two curves one on each side somehow yeah so let me adjust this a bit so somehow the nose would look more 3dish more roundish so i'm gonna move to this is the top part i guess and then there is the bottom part yeah so this i want to say minus 0.1 now 0 three okay and um tip left so left tip tip l like that and another one on the right with plus that so this is going i remove this thing oh yeah two control points it was also some idea let's see so with the this one i'm gonna do another with the right but i'm going to go back to this stop point here like that not great but let's see so now uh let's see how it looks like with the sliders huge nose there i think this can be one yeah so now this other line will depend on this offset i'm going to make it transparent so it's not important anymore because the noise is defined by the outside line so the more the line is on the outside the more visibility it has so let's try something like ctx global alpha ref.x offset and stroke actually i want to keep this top point there and let's just put this bottom point also 0 and 0 33 um actually i want this formula hi i am hi i am hi yeah i can't really explain what i'm doing anymore hi hi hi i am oh what is happening here this is a number but this is some weird thing it's concatenating here some string i don't know why it's doing that hi i am what is happening i don't know but i think that if i'm gonna change this to do first the audition hi hi hi i am no hi i am hi i am okay hi i am i'm just gonna comment out everything here at the bottom focus on one side so negative values no i don't want that um minus 0.4 and i want absolute value of this hi i am i don't know why it's not showing with a different alpha begin path move to curve to stroke and then the different global alpha what is happening here how can this line appear here uh what is happening there hi i am what is happening i really don't get what's going on now and i don't have much time left um let me just undo everything i did here and see if this weird behavior is still happening so if i comment out this draw nose does it do this strange thing yes it does and here if i say doesn't make the nose red i think it's something of a bug and i'm not in the i don't have enough energy now and brain power to figure it out let's see if two control points work bezier curve two hi i am a little bit more pointy there hi i don't want that the opposite of that hi i am hi i am hi i am it's not going great hi i am why doesn't this work i just undo everything it feels like it's against wanting its nose to be changed it doesn't want me to change its nose and i respect that okay i think this is it it's more than i thought i'm gonna do i'm really curious what samuel is gonna do i have a feeling it might be more impressive than what i did because you can do so many great things nowadays with online resources and he's a very clever guy so it's going to be exciting to find out yeah but sliders work video works testing 1 2 3 4 5 6 7 8 9 10 camera works hello this is the last time i'm talking now as the avatar thanks for watching if you got to this part and the code is not horrible but some parts of it could be better much better than what they are i'm really tired and i'm gonna call it a day because it's not yet night it's just four in the afternoon and i'm gonna go home and rest and the weekend is coming so that's it thanks for watching and see you guys [Laughter] look at the hair look at the hair it's great wow i like it awesome okay i'm gonna put one more thing here instructions for what calibrate means so in the control panel when we do the video hi i am radus avatar testing one hi i am hi i am hi i am hi i am hi i am hi i am hi i am hi i am radus avatar testing one two three four five six hi i am why is calibrate there hi i am hi i am hi i am radu zavantar testing 1 2 3 4 5 6 7 8 9 ten hi i am hi hi hi i am okay okay yeah i'm gonna put this on my website and see if the video loads and that's pretty much it i might make a simple preloader if the website if it doesn't load fast enough then i'm gonna put their loading please wait if the video doesn't come immediately when you press the start button but that's a minor thing so see you guys