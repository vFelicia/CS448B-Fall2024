welcome to this interactive scrimba course on html in this introduction i'm going to explain the role of html on the internet and why it is so important what is html it is the standard markup language for creating web pages and web applications along with css and javascript it is one of the cornerstones of the world wide web every website and every web application will render html to the browser let me explain how the web works in essence once you have developed a website you need to host it on a server to make it accessible to the world wide web the server says here's my number call me maybe that is what we call an ip address and often we put a domain name over that ip address so that it is easy to remember when you type that domain name on the browser the browser will then give the server a call and then the server will send the hosted files back to the browser to be rendered your browser will first load the html which may reference other css files and javascript files and will load those references in the order that they are listed in the html from top to bottom so css and javascript is built on top of html elements like skin on bones think of html as the skeleton html provides tags to name different types of content or rather elements on your website for example the header element the links styles etc this helps your browser understands what it reads to render it properly even though the browser only needs html to render a website think of it as a skeleton with bare contents that you will then make a dynamic and more beautiful using javascript and css you can think of javascript as the brains of your website or web application it can modify the html and css and rerender elements of the page based on user input or logic or changes in data from a server this makes your html dynamic rather than static a dynamic website behaves more like this after the page is rendered the user can interact with inputs and elements on the page and trigger javascript functions which can modify the html elements and contents the css and send or fetch data to and from the server which then gets sent back to the browser to be rerendered games and interactive applications can be built upon html thanks to javascript however without rendered html elements javascript and css will have no visible usefulness on the browser you can think of css like the skin of the website css allows us to enhance the user experience for visitors design a user interface implement a brand identity apply typographic and visual design principles make the site responsive for mobile and desktop viewing alike and overall a more enjoyable experience to look at and use now regardless of whether you are looking to be a designer of websites and web applications or a more full stack developer of web applications a thorough understanding of html is a must and hopefully after this course you will have html in your pocket in this course i'll share with you the boilerplate tags and declarations that you'll need on every project we'll practice element nesting and indentation we'll learn how to use layout elements semantically or properly learn how to use metadata link scripts and style elements we will use attributes ids classes along the way we'll learn how to embed images video and audio we'll also practice using text formatting elements we'll learn how to make a numbered or bulleted list of items and to wrap things up we'll learn about forms and tables as a result we're going to build a project using the most useful elements and best practices of html5 i will provide you with css and javascript to make learning html more visually enjoyable and fun my name is eric you can find me as i am toronto pretty much anywhere on social media if you have any questions feel free to ask me anytime or ask questions on the q a section on the sidebar and let's jump right in for the browser to render a website it needs html and for us to write html we need an html document and what makes an html document that is having the extension of dot html over on the top left of our workspace we have a gear icon by clicking there i can select new file and i'm going to create a new file and simply give it the name of hello.html to be added to my website assets as you can see if we try to render this and open the browser we can see that we still have an error when you enter a url on your browser your browser makes a call to the server requesting the website assets the screen browser is automatically looking for the assets in your project files here on our files panel but now it doesn't know what the name of my html document is to render it automatically if i tell the browser exactly what document to look for it can find it for example if i type hello.html hello world let's hit save again and as we can see it will render hello world but it could not find this on its own so how do we get a home page to load by default all browsers will look for a file called index.html in order to render it as the home page also known as the landing page for this reason every project needs to contain an index.html file the browser can load by default now i'm going to go ahead and rename this to index.html i'm going to save it and now in the browser here i'm going to type index.html and it will render hello world now the browser will load this by default if you would like to try this outside of scrimba on your actual browser you may use any text editor that comes with your computer and simply save a file and name it index with the extension of dot html then drag it onto your browser and it will render whatever text you placed inside there are more advanced and free text editors out there that you can use to edit html and other programming languages such as atom visual studio code and sublime text to name a few to create a javascript file you need to use the extension of js and to create a css file we need the extension of css now these don't need any specific names since our index.html document can tell the browser the exact names of required css and javascripts we'll learn more about that in another lesson but for now let's name them index dot js and index.css as well index.js index.css now that we have our html document we can begin learning how to code html see you in the next lesson hello welcome to in this lesson we're going to be practicing nesting and i've prepared some css so that we can visually understand nesting and how it works and we're going to begin by connecting that css style sheet to our html document so let's go ahead and begin there let's make a link and you do that with the link tag to create link and then we're going to type rel which stands for relationship and you're letting the browser know what relationship this style sheet has to html document that would be stylesheet let's go ahead now and put the reference to the index.css okay so we have named this css style sheet as index dot css it could be named styles.css or anything else and just make sure it has the same name okay so now let's hit save and see what happens we have a purple background color applied to the body tag that's why everything turned purple let's remove this hello world here and now we're going to play with nesting so i'm going to create a div element this is the most common element that is used on html and this element doesn't have any semantic meaning it is pretty much for any content that you want to divide from other content that you're not sure if you should use other semantic tags for and as you can see i have created this div element with a opening tag and closing tag wrapped by the body opening tag and the body closing tag so it's a child of the body now let's add a class by typing class equals in quotation marks i'm going to put white and now you're going to see that this element has a white background it has a width and a height this is because in the css i have applied a style to any element that has the class of white so think of white or a class as a cell phone number that the css can call and then attribute styles to any element that has that class and similarly there is an attribute called id but the id it is not meant to be used on multiple elements only on one single element on your whole document should have that specific id so it's good for when you're making an element there it's going to be on your website only once and you can call that for example advertisement and then in the css you can style that also javascript uses ids and you communicate with elements so we're going to leave this as class of white okay i'm going to make another element here and i'm going to call it div class green all right so now we have two elements and as you can see they're not inside each other they're next to each other and that's because they are siblings now what would happen if i grab this div with the class of green and put it inside the opening and closing tags of the div with the class of white i'm going to hit save all right there we go now that green div is visually also inside of the other element it is wrapped by it okay so i'm going to create a proper indentation here so that we can visually understand what's going on and now you can pause this video go in here and create another div inside of the green div that has the class of red i'll wait all right that should look something like this perfect i love it let's create more elements here if you like feel free to play around however you want with this these are the only three classes that i have styled so stick to those three classes there the white green and red but you can have multiple elements and you can keep doing the same thing for all of them pretty fun feel free to play around with these elements and see you in the next lesson all right everybody let's go ahead and populate uh this head element with some meta tags well before the meta tags let's do the title tag unfortunately we cannot preview what the title tag does on this browser because the the scrimba browser doesn't show the title of the page but just to illustrate it the title of this lesson is called head elements and you can see that the title of this course is also on the tab of your browser and that is because your browser is looking for the content of the title tag and placing that on the tab on your browser so here we can say this html document is called learning html and there are other meta tags that you should add for example the meta char set equals utf8 so this is telling the browser what character set you are using to write your html document with okay and there are other ones i'm going to give it a name of description and the content of that description is going to be my first html website and as you can see there's no closing tag for the meta tag and that is because it is a selfclosing tag it never carries content so it doesn't require a closing tag everything is in attributes and values right inside the opening tag itself there's one meta tag that you must always have on a document especially if you're going to be building a responsive website and that is called the viewport meta tag so here we're going to type name viewport and on the content we're going to specify the width of the site is always the device width comma and let that initial scale be 100 what this allows is for your browser to render everything at a 100 scale no matter what the width of your browser is so you must always have this tag especially if you're trying to build a beautiful responsive website okay here we have the link tag that we brought over from our previous document it is loaded in the same server as our html but let me tell you that you can also import an external style sheet from anywhere on the web on our website we're going to be using icons that come from a style sheet that is hosted on fontawesome.com on awesome.com makes fonts that we can access through html classes i'm just going to import that right in because we're going to be using it on our project so this goes to show that you can import a style sheet that's loaded on your server or you can import an external style sheet that it's on the web now you can also have you can also have embedded styles in the document just know that whatever style is here you cannot use it on another page because you cannot import it or reference it or link to it from another html page let's write some content here this is the header one element which is the most important text on your site you should only use it once per page just so that the browser know what the most important text is here we're going to type hello world and as you can see we have some text now we're going to explore the header tags later on but now i'm going to use the style here to apply some text to our hello world here so let's do h1 and i'm going to do text align center there you go i have aligned the text now this style right here will override this index dot css because it is after in the flow the browser will read this and then overwrite it with this now you will be able to overwrite this if you do an inline style and you do that by typing the attribute of style with the value of let's say i'm going to do text align left just to show you that i can overwrite it there you go in the line to the left it overwrote what this specified right there now i'm going to do i'm going to change the color to let's say gold there we go so i'm applying text align center here i'm applying color gold here and this background purple comes from the index dot css so that's two ways that you can apply styles on your page now there's another element that you can use called script so that you can run javascript right on your website and i'm going to run a simple script that says hello universe and this is going to give an error let's save it and that is because i don't have anything with the id of h1 on the document so let's type id h1 hit save and we still have the error and that is because we need to put script after the element that we're trying to modify with javascript hello universe there you go i replace the content of hello world with hello universe okay so i'm not trying to give you a lesson on javascript but even if you don't know javascript you can import javascript plugins that other people have developed into your site so you always want to make sure that it's inside the body but it needs to be after the rest of the content of your site and now let's say i want this to come from an external javascript file so let's go ahead and cut this out i'm going to put it inside this javascript file we lost the hello universe and now for the script tag i'm going to type source index.js and i'm going to hit save and there we go we've imported the same javascript code that we had inside the tag from here and now that we've got our head elements set up our meta tags our styles and script tags we're ready to start building our layout let's go in this lesson we're going to be building this beautiful layout using the layout elements that have been provided to us using html5 let me tell you a little bit about how we used to do it before we had these layout elements we used to use the div element to separate all kinds of different content on our page and to differentiate one div from another we would use classes and you can do this today but html5 has provided us tags for the most commonly used layout elements so we're going to replace this div with the header element in here i'm just going to type header and let's see what that looks like if you ever want to see what these look like without the styles just feel free to comment out or remove this style right here and you'll see header right there okay i'm gonna put that back another great layout element that we've been given is the footer element i don't know why i did two closing tags there see what that looks like perfect all right i'm gonna type footer in here and another great element that they gave us is the section element now you may want to divide different parts of your site by sections and you don't have to use divs anymore you can be a little bit more specific and say this is a different section of the page that's all it is pretty straightforward in here i'm going to type the main element now this tells your browser what the main content of this document is so don't put anything that's repeated throughout different pages in here don't put the header in here don't put the sidebar in here then put the footer in here the main is for the specific content of this document in here i'm going to write the article element and in here i'm going to type article let's see what that looks like all right there we go i have an article inside my main element i'm going to multiply this all right perfect and now as a sibling of the main element i'm going to place the aside what this says is this is content aside of the main content so sometimes having ads or a sidebar on our page can go inside of the aside element one last one that i'm going to use here i'm going to replace this header type here for the nav element this is also very common elements and they've given us an element for that and i'm just gonna type here navigation and hit save all right here we go we've built a basic layout using the layout elements of html5 on the next lesson we're going to embed some images and a video see you there in this lesson we're gonna play around with figure and image elements let's go ahead and get started with the image element so here is the image tag and the image tag does not have a closing tag such as article it has a closing tag here and the closing tag for main it doesn't have that it is what we call a self closing element it does not carry content inside of it uh so you're just going to put a forward slash there at the end of the tag and it has two attributes that are required and one of those is source and the other one and the other one is alternate and you type it as such for the source attribute the value is simply the name of your image or a link to the image if the image were to be at the root directory of your files such as where this index.html is if it was at the same level you would type simply the name of the image and the extension if the image is inside of a folder that is at the root directory of your project then you would type the folder name forward slash and then the image name now i cannot upload an image here onto scrimba but i can link to an external image somewhere else on the internet so i'm just going to grab a url and paste it right here i'm gonna hit save there we go now we can see the image uh feel free to play around with this uh grab an image from the internet and try to embed it uh right there in the source this alternate attribute the value that you place here it now for the alt attribute what you are telling the browser is if you cannot load the image what alternate information it can show so here you simply type information about the image such as a laptop with a mouse on a desk and a pair of glasses now this can be especially helpful for people that are visiting your site but are visually impaired and they may be using screen readers to view and maybe using screen readers to navigate your site and though they cannot see the image they can get an idea of the image that you're using on your page as an illustration or a graph so these are the two required attributes of the image tag now let's go ahead and move on to the figure tag so this one does have an opening and a closing tag so i'm going to go ahead and put them in i'm going to indent image right here perfect now the figure element has a an element uh now the figure element has a child element that is to be used together with it and that is called fig caption that also has an opening and closing tag and in here you're gonna i'm gonna write a caption to the image just to give it a little description it could be an it now let's learn about the fig now now let's learn about the figure element the figure element specifies selfcontained content not just images it could be an illustration it could be code photos diagrams etc i'm going to write the closing tag here and what's special about the figure element is that it has a child element that goes along with it called fig caption and in here you can write a caption that is directly related to the content inside the figure element this could be at the top of the figure element or the bottom as i am placing it here and here i'm gonna describe and here i'm going to describe the figure image i'm going to hit save all right and we can see how the browser will attach this caption right to the bottom of the image as a little description alternatively you can add styles to this and change how it behaves as an example i have made a class that we can add here i have styled this with css to the class of hero i'm gonna hit save there we go we can see the caption is on top the image is blurred uh you can play around with figure and editing the content of it so as you can see uh the css completely modified the way the caption looks and the image itself looks is now blurred so don't feel limited by fig caption it is another tool that we can use to style our content more effectively so as you can see i have applied so as you can see i have applied quite a bit of so as you can see i have modified quite a bit uh the figure image the figure element so as you can see i have modified quite a bit the figure element and the contents of the figure elements such as the image and the caption so don't feel like it's going to limit you it is simply more semantic to use it when you need it and you are completely free to make it look how you need it to and you are completely free to make it look just how you need it hey guys in this lesson we're going to learn how to embed a video using html the first way is using the video element i'm going to type video and i'm going to treat it as a closing selfclosing element or a void element just like we did with image meaning it has no closing tag in it i can type source and for the source i can type the name of the video if it was in my root directory it would be the name of the video if it was inside a folder i would type the folder name and then the video name but because i don't have that i'm going to go ahead and use an external video source right here now scrima cannot record the video playing so i'm going to tell you to pause the video here open the preview and hit play for yourself were you able to that is because there are no controls you need to type the attribute of controls so that you can hit play go ahead jump into the code and now try to play it alright i hope you were able to there are other attributes you can use such as autoplay so the video plays by itself there's one called muted so that it is muted by default loop so the video plays over and over again by itself uh preload so the video downloads or buffers before the user hits play and there's also width i'm going to give it 600 pixels and there's also height can i give it a height of 350 pixels all right so there's my video but now i want my video to be responsive if you can see the frame of the video the width does not change based on the width of the viewports so i have used css to create a class for a wrapper so i'm going to wrap this in a div with the class of responsive vid and i'm going to hit save and now you'll see that the boundaries of the video should be responsive now the video elements can take the source as a nested element for that i'm going to need to create a closing tag for the video element and the nested element is going to be called source and in here i'm going to paste the source attribute that i had before now i'm going to use the type attribute and i'm going to tell the browser this is a video of the format mp4 now this is useful or necessary because some browsers do not support formats like ogd for example safari and internet explorer so you need to have a fallback source for those browsers so this is good practice for video make sure that you can upload multiple formats of your video especially if your website is going to be used by people that may have older browsers another way that you can embed a video is using the iframe elements so i'm going to type the iframe opening and closing tags and the iframe can take a width actually you need to give it a width so that you can see the content and a height as well so i'm going to give it 350 and these are pixel dimensions again and for the source to help you understand a little bit of what the iframe does i'm just going to type a url to the scrimba.com page so as you can see it has put the screamer page in a frame inside of my document if this is not working in the recording go ahead and jump into the preview yourself and try to play with this but it has put the scrimba website within my document now this is the method that some platforms will give you a video to be embedded on your site such as youtube if you find a video on youtube right below there's going to be a tab that says embed go ahead and click that and you can copy the code there which is an iframe and paste it those are the two ways in which you can embed videos in html see you in the next one in this lesson we're going to learn about list items and we're going to build our navigation bar so to start off i'm going to disable the css and also this figure element and in here i'm going to type ul a ul element it has an opening and a closing tag that's because it's going to contain certain elements and those elements are li which stands for list item and those have an opening and a closing tag so ul stands for unordered list i'm going to type here item one hit save okay it's an unordered list meaning it has no numbers if you want one with numbers you do an ordered list with an ol there we go it has a number perfect let's go back to ul now list items behave as block elements meaning they will stack vertically they will not go in one line but you can overwrite that with css i'm gonna go ahead and put this style sheet back and let's see what happened to that ul there we go we have it in a row i'm gonna get rid of this text that i don't need anymore okay i'm gonna add some anchor tags and i'm just gonna put a pound symbol there close the opening tag for the anchor and have another anchor closing tag here okay perfect so now these are links inside of a list item and that should add the default link styles perfect i can have this outside of my header for a different style that i've prepared so these are different ways that you can have an app you can have it below a header or inside a header as a matter of fact you could have it as a sidebar or off canvas if you notice that all of my content is wrapped by a div that has a class of center and that is because i have styles for sidebars i'm just going to go ahead and type those up real quick as well as a bar to toggle it triggering some javascript functions let's take a look isn't that neat okay now i can also copy this unordered list and put it on the sidebar for example and see what that looks like awesome beautiful okay so there we go we have learned how to use lists remember if you want to see what this stuff looks like without styles just remove the css take a look all right there we go we learned about list list items and how they can be used we're going to keep building up our page on the next lesson see you there all right in this lesson we're learning headings and headings are pretty easy let's go ahead and get started i'm going to scroll right below my figure elements right here and i'm going to begin with the most important heading of them all and that is the h1 i'm going to type that here and let's hit save and take a look all right there we go this is the most important heading now i'm going gonna go to the least important heading they go from one through six so i'm gonna do h6 and i'm gonna type a little description here all right the browser will render these at different sizes h1 is the largest and h6 as the smallest now we may be tempted to use h1 through 6 to style our text and make them larger or smaller but the browser and search engines and screen readers want to know what the most important text of your site is so use h1 through 6 to determine importance not the size so i want to say that learning html is the most important so i'm going to wrap it in the h1 and i'm gonna use an h2 for this header here and i'm gonna save it and now we can see that it got smaller but now let's say i want to make the h2 of a larger font size without changing it to an h1 well that is why we have css so i'm just going to go ahead and put style here and font size and i'm gonna make this three ems and as we can see our h2 now is visually larger but i'm still letting the browser know it is not the most important text of this document that's pretty much it feel free to play with headings h one through six and see you in the next lesson all right in this lesson we're learning about paragraphs and some basic text formatting in here it's a little bonus we have the hr a horizontal row it simply draws a line you can modify that with css to look however you'd like but uh let's begin with the paragraph tag so that would be simply a p and we would have an opening and a closing tag for the p and in here you can type anything you'd like i have some text that talks about html so i'm just going to paste that in here let's hit save see what that looks like all right there we go we got a paragraph pretty boring so let's use some extra markup here to jazz it up a little bit so here we got hypertext markup language i'm going to make this bold and we're going to use the bold element which is simply a b and we place the opening tag there and i'm going to put the closing tag over here after html there we go now that's bold pretty cool we got some other ones we got italics i'm gonna turn cascading style sheets and css into italics so that is simply the i and let's hit save and let's take a look nice okay cascading style sheets and css it's all in italic we also have another one called emphasis which is em as it save and as you can see it also italicized it but it is telling the browser that it is not just italicized but it is more important than other words because it is emphasized so some of these tags don't only change the style or the way that it looks but also changes uh the meaning of the words that are wrapped within them we also have one called a strong which is another word to add emphasis to text and it is styled like bold we also have another one that i think is pretty neat it's called mark it's pretty much like you grabbed a marker or a highlighter and went over the text let's take a look at that there we go html documents is highlighted i like that and inside a paragraph you can also put a link so let's say you want to put a link in your text to another page on your website or another page on the internet you can wrap your text in in an anchor tag type the href i'm just going to put a pound symbol so it doesn't go anywhere and put the closing tag here all right html describes there you go it's a link it doesn't do anything okay so this is basic formatting for paragraphs i'm going to show you a little bit more in the next lesson welcome to text formatting part 2. now let's say that you want to break a paragraph to start on a new line you may have tried doing this right here but uh that doesn't quite work and let me tell you that there is a tag for that and that would be the break tag let's see how that looks all right we see that web browsers is on a new line after world wide web perfect now i've seen people that will pile these break tags like this to create spaces between different lines of text that is not good practice just go ahead and make a new paragraph like this and there we go those are the two ways in which you can break a new paragraph to a new line another useful tag is the block quote tag if you have a quote on your document and you want it to stand out and i'm just going to paste the quote that i found on the internet about development and i'm going to hit save let's take a look at that all right beautiful by default it is usually indented a little bit from the left of where the paragraphs are aligned but i have styled it so that it looks uh like this the block quote tag can also take the attribute of site and you can put a citation to the source of this quote i'm just going to say twitter and here we go perfect awesome we also have a tag of code which is just letting the browser know that you're putting code inside of this element and i'm going to paste some css in here just to see what it looks like all right and what it did is it put it all in a single line but the browser by default will apply what is called a monospace typeface but what if we want to keep our indentation for that we have another tag called pre now this code element doesn't really do much for me i don't really need it i'm going to replace it for the pretag and let's see what that does scroll down all right so 3 stands for preformatting so all the indentation that i gave my code stayed there now i don't want all of this indentation that i used to keep my code pretty so unfortunately i'm gonna have to get rid of all this indentation and let's take a look at it again right perfect beautiful there we go and that is how you use the code and the pre tag and the block quotes i'm going to teach you one more tag called the quote tag and for that i'm just going to replace this mark tag for a queue this is for a short quote i'm going to save as you may have noticed i did not add these quotation marks but the browser will add those quotation marks by defaults all right i hope you had fun learning these extra formatting elements and see you in the next lesson in this lesson we're going to cover the basics of tables tables can be a bit complicated for some people it was for me at the beginning but i'm going to try to make it as simple as possible let's get started when creating a table the first element that we need to create is the table element and the table element can take a child element of tr which stands for table row and the table row element can take a child that is called the td or table data element and in here is where we would put our content so i'm just going to type here table data i'm going to duplicate this three times let's take a look at that and we have table data three times in a single row now i'm going to apply a class so that it takes on a css style that i've provided and let's see what that looks like all right here we go we got our table with three table data elements in a single row now i'm going to duplicate the table row three times let's take a look at that we have three rows and each row has three td elements now i'm gonna duplicate this row one more time i'm gonna place it above here and there is another element that the table row can nest and that is the th which stands for table header i'm going to replace this with header and let's see what that looks like even though the browser applies some styling by default this styling right here comes from css now the table header element as well as the table data element can take an attribute that is called call span in other words span this number of columns so because i have three table data elements creating three columns on each row and i want one of these to span across all three columns all the way at the top and i'm just going to call this spanning three columns and let's take a look at that all right here we go we got our table header uh spanning three columns similar to that we have another attribute called row span and i'm going to apply it here and now this is going to make this able data element span across a rows so if i wanted to span through one two three rows i'm going to specify three and now let's see what happens huh it spanned three rows but now it pushed two items out of the three columns and that is because that row span taken a spot on this third row as well as on this fourth row so that is as if we had four columns on the last two rows and that is precisely what we're seeing here on the last two rows we're seeing one two three four columns and one two three four columns so we need to remove table elements from those other two columns for them to line up in this lesson we're going to learn how to use some of the more advanced elements for tables there are three other elements there are three other elements in tables that allows you to group a certain so we have group uh table data under table rows and we have all of the table rows under our table element now there are three other elements that we can use to categorize uh the rows that is t head t body and t foot now i'm gonna go ahead and grab this row and move it into my head and i'm going to move my content here to the t body so now it should look about the same but what this allows me is to control all of the elements that are inside the t head separate from the elements that are in the t body etc now i'm going to show you another element that is called call group it stands for column group and you type it as such call group opening and closing tag the call group tag specifies a group of one or more columns in a table so that we can format it and it is useful so that we can apply styles to entire columns instead of repeating the styles for each cell in each row all right now we can nest an element called call so that we can apply a style to that whole column and i'm going to choose background color let's do the blue violet color that we're using on our site and let's see what that looks like okay there we go and the style that we applied has been applied to every single cell in that column now what would happen if i copied this over and let's change the color here okay so now we have another column now what if we switch them around in order here it will also switch around which column has which color and another attribute that we can place here is the span attribute and now i'm going to tell it span across two columns and now we're gonna see that the yellow spans across two colors again i'm gonna switch these around and there we go now this is purple here yellow here actually this should be up right inside the entire table and if i remove this style here we can see that it affects all the rows but because i have this style styling the header it overwrites the default style there of the call group all right and now that we've learned tables i'm going to have a little challenge in this challenge i want you to make a section element inside of the footer inside the section element i want you to create a table with the class of styled and inside that table i want you to create three rows on the first row we're going to have a table header cell with a call span of two and you can write work hours in there and for the last two rows you're going to have a table data cell with the following contents inside of it we're going to be using these elements in the next lesson you should be able to do them either way i'll see you in the next lesson all right so now we're going to add some final touches to make our sites look more real make it come alive a little bit let's begin by changing our navigation as you can see it says item one three times that's not very realistic eric why did you do that let's go ahead and change these to top i'm gonna do quotes and i'm gonna do contact us i'm gonna add a fourth one that is called next page now the pound symbol in the reference stands for an id so this is trying to reference a blank id that does not exist now how about we create links to actual ids on our page on the main element here i'm going to add the id of top now i'm gonna go looking for a block quote and add the id of quote and for the form that we have on the bottom of our page i'm going to add the id of contact so now now that we have these ids i'm going to type them in the values for each one of these links so the id of top the id of quote the id of contact and let's try these out so i'm going to hit save top okay i'm at the top already let's hit quotes it tried to place the contact form as close as possible to the top perfect now what about this next page you may have noticed that i have a document called next.html here on this page i am simply going to reference the name of the file which is next dot html and that is because it is at the same level in the files directory as my index.html now let's say there was a folder here on the left that said pages and the next.html document was inside the pages folder i would have to put the folder name here first and then the document name but we can leave it like this since next is at the root there gonna hit save let's try that out awesome next dot html we have linked to a separate document in the same directory so you can see it has different contents and different colors because that document has different ids and classes and i was able to apply different styles awesome let's go back to the home page and let's try the sidebar here this sidebar does not yet work so let's go ahead and fix that so now i'm just going to copy this ul over to my off canvas sidebar fix the indentation let's try this out top quote contact us back to top perfect next page sweet now we're done awesome i'm so glad you made it this far you can pat yourself on the back because now you know html remember that if you have any questions you can drop them in the q a section on scrimba you can also interact with the code and i hope that with your html skills you can take them to the next level take over the world and see you in the next course