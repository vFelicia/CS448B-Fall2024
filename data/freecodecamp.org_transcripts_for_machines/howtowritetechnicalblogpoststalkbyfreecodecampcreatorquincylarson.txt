Okay. Cool. Hey, everyone. How's everyone feeling? We got some energy? Alright. Awesome. Thatthat lunch is digested, and you're ready to learn. Okay, so I am Quincy, and I'm going to talk about how to write technical blog posts that people will actually read. Thatthat "actually read" part is important. So, you may be wondering why is this developer talking about writing? Well, I worked as a journalist for about three years after college, and I would say that technical blogging was absolutely critical to people actually realizing that Free Code Camp existed and to our early community growth. We're a small nonprofit. We don't have, like, a lot of resources for advertising or for public relations so we turn to trying to write articles worth reading. So I've been writing very actively on both Medium and on Quora, and I also edit Free Code Camp's Medium publication, which publishes a whole lot of articles on development, design, and data science. So my goal is for all of you to walk out of here with both the confidence and the tools that you need to be able to write technical articles that people will sit down and actually invest the time in reading. So there are really three elements to this. First, you need substance. Second, you need to package that substance for consumption. And third, you need to go out and publicize it. So before we get into that, though, I want to see why people are blogging. I saw a lot of hands go up earlier for people who are blogging. I'm just gonna go up right now. Who is blogging because they want to impress future employers? Okay. Quite a few. All right, who wants to apply recently learned knowledge? One of the best ways to reinforce your own learning is to turn around and teach it to somebody else, And a technical blog post is an excellent way to do that. All right, and who just wants to share their insights with other developers and kind of pay it forward? Quite a few of you. And Maybe nobody will raise their hand because this is a little immodest, but who is interested in becoming a thought leader in a specific domain? All right, yeah, you want to So you want to get on the conference circuit. You want to get on podcasts like Code Newbie. Andand you want to raise awareness of your area of expertise. Great? It does not matter, like, regardless of your reason, it does not matter. Really the goal should be to just get people to read your articles. If you've set out to achieve that one single goal, it will help you with all four of those objectives. Let's start with substance. You need to write something that matters. And I will tell you that people quickly they have all these kind of rules of thumb about blogging, like, Oh, it should be 600 words, and, you know, just quickly get it out there, andand blog every single day. I don't buy any of that stuff I really think that it's all about substance. When you have something to say, that's when you open your mouth and you say it. And you can really hone in and take that substance and turn it into a whole lot of blog posts. This is a guy named PeterPaul Koch. He is the author of the popular Quirks Mode blog. And Quirks Mode is really awesome because it's focused just on the quirks between different browsers and different versions of browsers, so he'she totally geeked out on the difference between how, uh, JavaScript is processed by Internet Explorer 10 and mobile Safari and Opera. And his blog will show you all the different intricacies of those for when you're trying to develop crossbrowser applications and those considerations. So what did he do? He did his homework? He learned a whole lot about this one subject, and he went really deep on it, then he turned around and figured out ways that he could write about it in novel ways, and that's what you should do. A lot of people may lament that, "Oh, everything's been written." "It's all been done." "Every flavor of breakfast cereal has been tried." Reality is there are always new ways, new permutations that you can toggle and switch around to make new original spins on old topics. A lot of blog posts are written either from a hello world, absolute beginner perspective, and then a lot of them are written from a "I've been coding for 10 years" There aren't enough articles that are kind of in the middle, for example, so experience level is one dimension in which you can play around. Then there are a lot of opportunities for taking something that's been written in a different language and blogging about how to do it in another language or introducing humor, right? Humor makes your blog post palatable, so use it liberally. And you can even write joke posts that are basically parodying something but teaching at the same time. So here's the quick case study. Want everybody to meet Amber. She is a Seattlebased marine biologist by training. She got her master's degree in marine biology, and she worked at Disney surveying the animals and doing science related to the animals that the Disney had and its parks. And unfortunately, marine biology is a field that a lot of people want to get into. People love animals. It's very competitive. Around the holiday season she found herself with her contract not renewed. To cheer herself up She was really pumped. She's like, all right. I'm gonna go see the new Star Wars movie Did anybody see the new Star Wars movie? Rogue One. Okay, awesome. So she was really excited because, like, the first time it looked like a Star Wars movie where the protagonist was female. But when she walked out of the theater she had a weird sense that maybe the protagonist wasn't the female character. and sure enough she did the math and she counted up all the words, and she found that the main character actually didn't didn't speak as many lines as some of the other characters. And she also noticed that there were far fewer female characters in that movie than there were male characters. And she was like, well, this seemed like it was marketed as a movie, you know, to women to try to get more women in the Star Wars So she looked at all the other blockbuster movies, like, the top 10 grossing movies of 2016. She built a bunch of data visualizations. She wrote scripts to dive through and count all the dialogue and assign the gender to the different characters, and she built this beautiful series of data visualizations. And so she had the substance; she just needed to sit down and write about it. And that's what she did. I coached her through it, and we wrote a Medium publication, and her article was huge. It got picked up by Mashable. It got picked up by IGN, a whole lot of international press. And it raised awareness of this issue. So she was able to use her scientific skills from being a marine biologist, kind of port it over to doing data visualization and data science, and as a result, a whole lot of employers and prospective freelancing contracts came her way from this article. So there's just one blog post, right? You only need to write one good blog post if it has good substance. So it's a lot of hard work. Expect to invest a lot of time and energy. Good blog posts don't come easily, not good technical blog posts. The second lesson I want you to all walk away from is that packaging is important the way you take your substance, the way you package it and present it to the reader is very important. This is the most expensive vodka in the world I'm not a vodka connoisseur or anything, but when I saw these bottles, I was immediately sucked in. I wanted to learn more about it, right? It's packaging. Well, what's the packaging on a blog post? You've got your headline. You've got your lead image You have the formatting of the text and the sub heads and the pull quotes. And then you've got the platform that you publish it in. All of those things are considerations that you should keep in mind when it comes to packaging your technical blog post. I want to talk about headlines specifically because I want to point out that that is all that about 95 percent of people are going to read. They're scrolling through theirtheir Twitter feed while they're sitting on the toilet or while they're holding the handle on a bus, and they're like, "Do I want to read this? Do I want to read this?" They read your headline, and it's up to your headline to entice them to read the rest of your article. So has anybody heard the old adage by Abe Lincoln about chopping down trees? So... if I had eight hours to write a technical blog post, I'd spend the first six sharpening the headline. It's true. The headline really is Empires have been built on the backs of headlines. Has anybody heard of BuzzFeed? You know, and there's a science to it. There's a lot. You canyou can read up on. And you can A/B test your headlines. You can show them to your friends and just try to figure out if people will click on them. It's really that important. And then the images. Humans are highly visual creatures. Like, our our visual cortex is one of the biggest parts of our brain. So you've got a cater to that. You've got to show people images. 86% of the top blog posts have images in them, and on average, they'll have at least one image every 350 words. Some of you may be like well, I can't afford to license really good images. Well, there's great news. There are so many generous photographers out there who take their images and turn them to Creative Commons or even Creative Commons 0, which doesn't even require attribution. You can just splash their photo up on there. And this website Pexels. You can search around and find images that are public domain or Creative Commons license on a number of platforms. So in terms of formatting, you need to be sure that you don't get the Picardian wall of text, right? People will bounce if they see English comp 101, eightsentence paragraphs. Remember Reddit is only an alt tab away. So be sure that you show them... nice short paragraphs, nice short sentences. It's not a matter of sounding like dumbing it down. A lot of people look at it that way. You can express the exact same concepts in much simpler words and you can use short paragraphs and you can use white space. You can use subheads you can use pullquotes. All those things to break that up. The platform you publish it on makes a big difference. These are some of the most popular ways that people publish their technical blog posts. So I am a big fan of Medium. It's adfree. It'sit's usersupported. And it allows for easy export of your content. And it has a builtin audience that's quite big. They get, like, 86 million visits a month. And then you can also post on blogon your own private blog. You can just use a GitHub Pages blog and createget your own domain and set it up that way, too. There are tradeoffs associated with all these. If you happen to have a whole lot of friends on LinkedIn or if you happen to have a whole lot of friends on Facebook, that might be a good place to publish, too. Notice a lot of celebrities have been blogging ondirectly on Facebook. So here's another case study. This is Ohans. He is a web developer in Lagos, Nigeria, and he created this amazing guide to Flexbox. The only problem was he just created markdown files and folders and pushed it to GitHub and left. He left it at that. Well, you can go one step further and actually write an article, a proper article, and that's what I convinced him to do. So if you look at this, he has a nice headline that accurately describes it's not a clickbait headline what the article is, and then he's got some images. He breaks up the text with tweets, and he's got subheadings. He's got short paragraphs, short sentences. It's easy to read. It'sit's a breezy read even though it's about 10,000 words, right? Like, you're gonna be reading for about an hour, and you're literally going to learn all about Flexbox. And it may seem like, well, who has time to sit down and read an hourlong article about flexbox? People read 500word blog posts, right? Well, actually, this is one of the most popular technical articles ever published. It's been viewed more than a 100,000 times, and as a result, he got inquiries from book publishers. He even had some course platforms reach out to him who wanted him to create some workshops on Flexbox, So again, he had substance. He knew Flexbox very well. He packaged it properly, and he profited. Lesson number three Publicize. You may have heard the expression in software development The last 10% of the work takes 90% of the time. Well, let me tell you publicizing your work is the last 10%, and it's gonna take 90% of your time. There is no build it and they'll come. You need to go out and tell people that this exists, and you need to actively advocate for people to read your own article. One place you can put it is Hacker News. I like to call it the Hacker News lottery because, honestly, there's like I could publish, like, the best article I've ever written on Hacker News, and nobody would notice, or some random article that I published might show up at the top one day because somebody submitted it. It's, like, totally random, and I can tell you I see totally random things on Hacker News. You see totally random things at the top of Reddit sometimes. But if you keep submitting, everyevery time you submit, that's a lottery ticket, right? And you need to pay to win or you need to play to win. So you can also target specific Facebook groups. There are a lot of really big Facebook groups. Some of them are local to your city. Maybe your alumni group on Facebook from your university or from your high school. Share it with your friends that way. Groups are a great way to spread it. You can also use LinkedIn. (Laughter) People do use LinkedIn groups. It does send, like, email digests. People might see it. And then I would also say use other people's audiences. So if you publish on a Medium publication, you're immediately, kind of, hijacking the audience of that publication for a moment to get their attention If you publish it in Forbes or TechCrunch or some of these other major publications that actually submit, kind of, oped reader posts Andand you can actually become a writer for Forbes or a writer for TechCrunch and publish right on there, and that way you're borrowing their credibility as well as their audience. So just to summarize... three things to remember Create technical blog posts that are substantial, package them for consumption, and publicize them like crazy. If you do that, you'll write blog posts that people will actually sit down and read. Thank you very much. (Applause) Great job.