this is a really cool course that teaches you how to use javascript and html to create a puzzle game that uses the video feed from a camera you will also learn a bit of html and sql radio has a unique and interesting style that makes learning the concepts really fun hi i'm radu and today i'm going to teach you how to make a puzzle game that uses the camera this whole project is done using only vanilla javascript and html canvas and a small part of it this one here is done using php and mysql to save and load scores from the database the game works on desktop computers but also on mobile devices like phones and tablets by watching this you'll learn many useful things that you can later apply in other projects even though some of these things are quite advanced i'll teach them as simple as i can and i'll leave the two most complicated things at the end good news is that they're also optional meaning that you can get a fully working game without them so don't be scared it'll be fun i promise also special thanks to beau from free code camp for allowing me to share this with you guys i hope you'll like it and if you have any questions do contact me via my youtube channel now let's begin we begin by writing the html page in the header we give the page a title this will change what we see here in the browser tab and we'll also link the two external files one for the javascript and another for the css these files are just empty for now then the body part of our document will be really simple for now we just run a function called main when the page loads and add the canvas element here which is what we'll primarily use to build the game it will be a canvas app if we refresh the page now we see the tab shows the correct title and we also get an error here in the console if you don't see the console in your browser try pressing f12 it's the shortcut for the developer tools in most browsers i'm using google chrome i think it has the most useful tools but it's really just a personal preference any one of them will work just fine now the error says that this main function is missing so let's move to our javascript file and implement it for now i'll just make it output the string main into the console to test if it works and it does it's very good to debug like this whenever you make a change otherwise errors pile up and it can be very confusing to deal with many of them at once but now let's see how to access the camera we'll use a promise to get access to our media devices we're only interested in the video coming from the camera and we specify that here what happens now is that the browser will ask the player for permission to use the camera when they give it the code will go here where we define a callback function in which we have access to the camera signal if the player doesn't allow the camera or there is some other error we will catch it and show it on screen when everything works out we initialize a video object we'll use a global variable for this and i will write these in capital letters to make it clear when a variable is global or not in the code we next create the video element initialize it to the signal coming from the camera and play it when video data is available we can start updating it on the canvas this update canvas function is what we will implement next but first let's also define the canvas here globally and add a reference to the canvas context object as well we initialize the canvas with the one defined in the html page previously this 2d context of the canvas provides all drawing methods we will need to build the game our canvas will fill the entire window now the update canvas function needs to draw the video onto the canvas so we will use the draw image method of the canvas context to do just that we also need to specify here that we want to start drawing from the top left corner which has zero zero coordinates now when i refresh something happens it shows the image coming from my camera my camera is just pointed at the wall here at the moment but it doesn't pick up any movement just yet we need to update the canvas many times per second to see this happen and we'll use the request animation frame method to make it work this method will call the function recursively many times per second and it will try to update 60 times per second if the computer is fast enough now we get a live image let me just put mr chibison here to make it less boring now you'll notice a white border here it's a bit strange because we said we want to draw the video at zero zero but the body element has some default margin and that's what we are actually seeing we'll remove that by going to our css file and changing the style of the body element by setting the margin to zero better now but we still get these scroll bars here which are not really necessary so i'll remove them by setting overflow to hidden now the scroll bars are gone but the video actually goes outside the screen we don't want that and we need to keep in mind that in general there are many webcams or phone cameras out there with different resolutions aspect ratios and so on so we need a way to resize the video so that it fits in the middle of the screen preferably with some space around it so that we have enough room to move the pieces later we'll use this scaler to specify how much of the screen space will be used by the image and i will also keep track of other related information in this size variable we update these values here when metadata about the video is available first we use a helper variable to find out the minimum ratio between the screen size and the video size and then we set the size attributes accordingly note that here one of these things will simplify so we properly preserve the aspect ratio and nothing gets stretched for the x and y coordinates we start off in the middle of the screen and go just half the width towards the left and half the height towards the top then to actually affect the image we must update the draw image method here this method can be called with a different number of arguments before we just specified the top left corner but now we also add the width and the height ok it works we now see the entire image coming from the camera before it was slightly cropped on the right we also get this 80 margin and if we change the value here we get a different sized margin instead we can also check to see how the application looks on different sized screens by pressing this button we can even select some specific device from this list but every time we change something we need to refresh the page to see it happen looks good how about in landscape mode need to refresh again we could actually make this resizing happen automatically by using an event listener for the window resize we then need to move this code in the callback function and also need to call this function here so that the code executes as before and i should also move these lines here too in this way the canvas will resize as well not just the camera stream okay let's see if we change the orientation yes it works no matter what the screen size we will get the proper fitting this time but even more important is that it will work regardless of the size and aspect ratio your camera outputs i'll demonstrate this by forcing my webcam to output a specific size note that not all webcams support resizing in this way and it may not work for you but you can try you can see it works just fine with the square aspect ratio let's try a vertical aspect ratio next okay works just fine i will remove these extra parameters now because we want to see the entire video coming from the camera this was just an experiment and i will actually comment out this event listener because we don't really need this functionality inside the app users are not expected to resize the screen like this i made it to demonstrate better how things work and avoid refreshing all the time plus you may need it in one of your projects we now define the piece class and specify a row and column index in the constructor we will have an array of these pieces and define it globally here we also need to specify how many rows and columns there are and i will store these here now to initialize the pieces we begin with an empty array and iterate through the rows using the i variable and through the columns using the j variable and add a new piece defined using these two indices into the array to be able to draw the pieces we are going to implement the draw method that takes the context as a parameter let's first just draw a simple rectangle here to see if what we did so far is working now we need to figure out the location and the size of these pieces based on the number of rows columns and the size of the video on the screen i will enter these placeholders here and calculate the exact values in the constructor the width and height of each piece is just the width and height of the area divided by the number of columns and rows respectively i set here the x and y to be so that each piece is defined to be at the correct location at first even though this is a puzzle game where the player needs to find out what the correct locations are it helps to start with the solved configuration when developing the game you'll see i realize now that x and y could actually be defined after we have the width and the height and then define them using the width and height like this the code is clearer in this way we now need a way to draw the pieces we do this here by just iterating through all of them and calling the draw method using the global context okay i think we're ready to debug now oh i forgot to call the stroke method here without it nothing will be drawn let's see i'll refresh and nothing is different just yet it's because the pieces array is empty we need to call the initialize pieces function and we'll do this in the console for now okay now something happens and it looks good three rows and three columns but it's not ready yet these are just empty rectangles drawn on top of the video look if i comment out drawing the video image here you can just see the grid each piece needs to crop a specific part of the video and show it we do that by adding a call to the draw image method here we use another version of the draw image method a more complicated one that accepts nine arguments after we specify the video we need to tell the left part where the cropping happens then the top part then the width and the height these values are relative to the video and whatever the resolution and aspect ratio it has now after we specify where to take the image data from we need to say where to draw it this is easy it's just that the piece x and y location and we need to use its width and height okay it now looks the same as before but each piece is showing the part of the video it's responsible for we can actually parameterize this function here to support any number of rows and columns and we just call it here with default values in the beginning we can test in the console by using different sized grids let's randomize the location of the pieces next we'll just write a function where we iterate through all of them and generate a random location for each piece we set here the x and y respectively we call this in the console and it's not what we expect the random values are between 0 and 1 meaning that they are all pretty much in the top left corner here i'm not gonna go into how half pixels work so let's just move on and scale these by the canvas width and height okay much better but you can see that some pieces go outside the screen here we can prevent that by subtracting the piece width and height here when scaling ok good now the reason why we see duplicate pieces once randomly distributed and others that are behind than in the correct locations is that we are not clearing the canvas before redrawing each frame if we do this here and randomize the pieces again we get what we expect let's test different grid sizes as well neat i actually want to have an idea of where the pieces need to go it will make debugging easier and maybe we can keep it as a easy mode or something like that so i'll move this clear wrecked call to the top set the 50 transparency and uncomment drawing the video we had earlier then i reset the transparency so that only the video is semitransparent but the pieces are drawn normally after that in this way the video on the background shows where i need to move the pieces but it's faded so it won't be confused with the actual pieces now to implement the drag and drop functionality for the pieces we need to add some event listeners to the canvas we implement a function for it here and begin by adding an event listener for mousedown with a callback function that we will need to define then two more event listeners for mouse move and mouse up will also be needed to handle the mouse down event we first mark down what is the selected piece by getting the one the user presses in the interface we will define this function soon but let's get the top level logic down first we'll store the selected piece inside the global variable which we initialize with null in the beginning or if no piece is pressed then if a piece is selected we calculate what is the offset to the top left corner of the piece like this we will use this offset while dragging so that the piece doesn't just snap to the mouse location like this it will make for a smoother interaction then on mouse move if a piece is selected we update the location to the new mouse location and consider the offset as well the mouse up event will just leave empty for now so how do we find out if the player presses a piece or not well all we need to do is iterate through all the pieces and check to see if the click location is within the bounds of any of them we need to check if x is greater than the piece is x and less than that plus the piece's width and if the y is greater than the piece is y and less than that plus the piece's height if so we just return this piece if nothing matches these conditions we just return null which means that nothing was pressed ok let's test i move the mouse over the bottom left corner piece i click and drag great but now i'm stuck like this i need to implement the mouse up event so that i can actually let go of the piece now the obvious thing that we need to do is set the selected piece to null but before that we need to do one more thing we check if the piece is close to the correct location where it's supposed to go and if so we snap it in place we will need to implement these new methods but first let's discuss why we're doing this the first reason is that it gives proper feedback when a player lets go of the piece if it jumps into place it means that the move was correct and the player can move on to the next one the second reason is that later we will need to evaluate if the pieces are in the correct position or not and it's very unlikely that the player will be able to drop all pieces in a pixel perfect way so this snapping will help with that as well final reason is that i think it makes the game more interesting and fun to play so to implement this functionality we go back to the piece class and add the two new methods first we check if the piece is close to the correct location we do that by simply calculating the distance to the correct location and checking if it's under a threshold i use a threshold that is proportional to the size of the piece here about 33 percent i just did some trial and error and i think it feels good like that if the distance is less then it's considered close otherwise it's not the correct locations should be stored somewhere and i'll do that here in the constructor because we already agreed that the pieces will be initialized at the correct location to measure the distance we just use a consequence of the pythagorean theorem i'm pretty sure you know it already but if you don't or want to learn something more about it check out the recent video i made about it i think i did a pretty good job explaining it proving it and giving all kinds of applications what do you guys think the snap method is really easy it just puts the piece in the correct location and that's it let's debug now i can go and click on a piece drag it and release i can release it anywhere i want and if i drop it close to the correct location it will snap into place and this works for every piece but one issue is that the selected piece is sometimes drawn underneath the others this is not good it depends on the order we are drawing the pieces since the top left one is the first in the array all others will be drawn on top of it but the bottom right one doesn't have this problem it's always on top we need to fix this by moving the selected piece at the last index in the array we first find out the index it's currently at then even though it should not be possible for it to be missing i check here just to be sure i then remove it using the splice method and add it again at the end of the array using the push method now no matter which piece i select it will be drawn on top of everything as expected but there's still one problem when i click here where multiple pieces overlap it selects the bottom most piece we fix this by iterating the pieces array in reverse order in this way we stop at the topmost piece that the user is clicking on now everything works well but one final thing we need to consider is mobile devices what we did so far actually doesn't work on those yet see even if i debug using this mode and i try dragging pieces around nothing happens this is because mobile uses touch events instead of mouse events so we need to support those as well we go back to the function where we add event listeners copy all three of them and rewrite what is necessary the touch start touch move and touch and callback functions will need to be defined next but they are easy to do because we will reuse the mouse event callback functions from earlier we just need to get the location here in a little different way and then we can call the other callback like this we copy this callback function and implement the other two now when we debug it works but an error happens on touch end that's because there's no location available then i mean if you're not touching where are you not touching so we actually omit these arguments here now everything works when i'm debugging here but some mobile devices have a builtin function that refreshes the page when dragging down we don't want this to happen every time a player drags a piece downwards so we disable it in the css file by setting overscroll behavior to none that's it for the drag and drop let's just see if it also works with different sized pieces next we add gameplay elements like the menu and showing the elapsed time we need to define some more structure in the html page a div that will contain all these new elements a div for the menu and the div for showing the time the menu will contain a select component for setting the difficulty there will be four different options and when the user changes these we will call a function called set difficulty which we'll need to define in javascript we also need the button here to start the game pressing it will call a function called restart that we'll also need to define in javascript so let's move to the javascript file next we add two new global variables to keep track of the start and end time we then implement the set difficulty function first we get the value of the select component we defined in html based on that we call the initialize pieces function with a different number of rows and columns i'm using a switch case structure here to avoid many if else statements it's a common mistake my students make the values i use here are just guesses pretty much but for the insane variant i wanted to have exactly 1000 pieces so i use 40 and 25 which has the most square aspect ratio then the restart function will set the start time variable to the current timestamp and the end time is set to null because we just started playing we also randomized the pieces at this stage if i refresh we don't see the menu anywhere actually it flashes rapidly before the page loads but where does it go we can use the developer tools to inspect the elements and see that they are pushed below the bottom of the page by the canvas we can actually try out different styles here to get it to work setting an absolute positioning with the zero top will do the trick for now so i will add this to our css file refreshing now it works i can press start and it will randomize the pieces each time and if i change the difficulty level we see the different sized grids coming up i thought the insane mode would be too processor intensive at first but it works fine on my computer at least i'm sure some devices will struggle though next we display the time i will define a function called updatetime that first takes the current time from the system then it takes the div we defined earlier to hold this value and sets the inner html to the difference between now and the start time we need to call this function somewhere so i will go to the update canvas function that is called on every frame and enter it here we also notice that this name is not proper anymore because now we update more than just the canvas here so i will refactor it a bit when i refresh now i press start and it shows the time here but it's in milliseconds and we should format it properly i'll first convert it to seconds by keeping the integer part of the milliseconds when dividing by 1000 then i want to consider this format so we need to know the seconds part between 0 and 59 and we will get it like this the minute part also between 0 and 59 can be obtained like this and the hour part is between 0 and 23 and we get it like this i doubt anybody will spend more than a day playing this then to format them into the final string i take each component and do a left padding with 0 if necessary i use a column between each part then we return this final value and that's it now we can use it here to format the difference starts to feel like a real game already don't you think but nothing happens when we're done we need to detect somehow that all pieces are in the correct locations we do that by adding an attribute here that will say if the location is correct or not initially it should be because the pieces are defined at the correct location but then when we randomize we immediately set it to false then when a piece is snapped to the correct location we set it to true again it's possible that someone grabs a piece from the correct location so we need to set it back to false here on mouse down then to check if all the pieces are correct we write a function like this it goes through all pieces and if even one of them is not correct the function returns false otherwise we return true we check this in the mouse up callback function because the game can only be completed when the player releases a piece the last piece that goes in the correct location here we also need to check if the end time is null because in principle the player can continue to move pieces around after the game is over and we don't want to update the time anymore after that we just set the end time here to the current time we also need to change the display here so that if an end time is available the difference to that is shown and not the difference to the current time okay let's see now timer starts counting same as before we play the game and now the timer stopped now we'll make this part look better first let's put the button below like this now we can move to the css file and position these in the center of the screen we say that the items should be 50 percent from the left and 50 percent from the top now if we leave it like this the items will move here so their top left corner is in the center screen but we would like them to be here so we need to add transform translate minus 50 minus 50 and now we get this now the text isn't clearly readable as such let's add the semitransparent background here like this better now we can align the items to center like this we can give the items some spacing around by setting a value for the padding i'm using a value of phi min here which means that the spacing will be five percent of the minimum between the width and height of the window i also set the black semitransparent border here as well now we can make the button look better we'll give it a larger font size and a bluish background color and white text good we can make the button more userfriendly by changing its properties when mouse is hovering it i'll make it have an orange background and black text in this case okay now when i hover it changes style you can't see my mouse here now for some reason but it's there and it looks like the default arrow to make it look like a hand cursor we can change it here in css nowadays there are many fancy features you can choose when styling elements like you can easily add animations with the transition property by setting this 0.3 second duration here we will get a short animation from one style to the other on hover i think it's really nice i don't like this border here so i'll remove it and i will make the bottom corners round by setting a small radius the font size apart from this button is rather small so we'll work on that next first i change it to arial i think that the serifs don't look very good in this case okay now i'll make it bigger same as the font size on the button i think it's okay now let's see how it would look like on mobiles as well it's definitely readable i think it could be a bit bigger but this will also do for now the text on the select component is not affected yet so we need to specifically add the font size there as well ok switching back to full screen now i'll change the mouse to look like a pointer when hovering this select component as well and style this element to be more in line with the button so no border a small radius and we need to remove the outline here as well okay let's try testing the game now i press start and it's not what we want really this menu should disappear at this stage and only the timer should remain visible so i will go back to the html and take out this element from here then in the javascript file we go to the restart function and set the display of the menu items to none now i refresh press the start button and the menu is gone but the timer is gone as well it should be there let's debug i switch to the elements panel and it is there it is just below the canvas so we need to change its style in css i want it on the top of the screen so i will change positioning to absolute set the zero top and let's have it center screen so i set left to 50 and i use the transform translate method again but only on the left side now i refresh press start and the timer is there next i'll show you how to draw a logo using powerpoint you can use a number of different software to do this i'm using powerpoint just because it's installed on most student computers so hopefully you have it too i use the rounded rectangle tool to start drawing a camera i can adjust the corner radius like this now i make a copy of the item by holding down the ctrl key and dragging it to a new location i will do a similar thing with circles now i will change the colors to just black and white for the circles and i will use the align tools to make sure they are just the way i want them to be i change the color of the rectangles drawn earlier to black and move the circles on top newer features of powerpoint have these helper lines appearing and they are useful i think but if you don't have them and want to have proper alignment just use the align tools we used earlier now i'm happy with how this looks so i will copy it and paste it as an image we will need to use it later in this format but now i want to draw a small puzzle piece so i start off with a rectangle about this size and i draw an oval here as well i will shape this oval to look more like the connecting part of puzzle pieces and i do that by editing the points of this shape right click edit points it's useful if you understand how bezier curves work at this stage ok i'm happy with this i copy it rotate it on its side and merge these three items into a single shape by going to merge shapes and union now i'll place this on top of the image copy of our camera align it a bit better and duplicate both objects on the right for the first copy we select first the camera image then holding shift press on the puzzle piece as well go to merge shapes and subtract for the second copy also select the camera image first then holding shift press on the puzzle piece as well go to merge shapes and intersect i now move this piece into place so that it looks like we're just completing the puzzle now select these two objects copy and paste as image at this point we don't need all the other items anymore we just keep this one as the icon and we'll use it to make a title next i just create a text box and write puzzle cam here in all caps i set the font to arial black to be similar to that in the html page and increase the size of the font i then make the p larger and i want it to be the same size as the camera so a bit of trial and error goes here and when we're happy with it apply the same size to letter c and we're almost done we can now copy everything and paste as an image once again but you'll see that the image has some weird transparent margins here it's how powerpoint works when text boxes are involved unfortunately but we can crop that out using the cropping tool resize the image to the size we want right click and save as picture then i name it as title.png and add it to the same directory as our code speaking of which we can now add the new image to the html file like this and i'll set its width to 90 inline here because there's no other style i will add to this then refreshing makes the image appear i think it will look better if we do one small change in css i will make the whole menu wider like this in this way the title image is significantly larger than the other text and the drop down for the difficulty moved on the same line as the label i think it's better like this let's add some sounds next first i'll define one using an mp3 file i recorded earlier like this i'll set the volume quite low because this will play whenever we drop a piece in the correct place it would be really annoying if it plays at maximum volume i think so let's now add it here in the snap method and test i refresh the page press start and yay it works but there is no sound when completing the game and there definitely needs to be something there instead of simply adding another mp3 file here which would make this tutorial really short i will remind you that it's possible to synthesize sounds in javascript to generate the sounds we will need to define an audio context and doing it like this will make it work on most browsers then i want to create a simple melody consisting of three notes played on piano keys here i'm writing their frequencies we need to create a function to play a single note it will have a specified key and a given duration how long the key should be pressed we next define an oscillator this will be responsible for generating the sound with a given frequency we set the frequency to the value coming as a parameter here we start the oscillator like this at the current time and we can also tell it to stop after the specified duration it is good to also disconnect the oscillator at the same time otherwise some hardly noticeable background noise can still be heard on some browsers i'm using set timeout for that and i specified the duration here as well now there's a problem because set timeout expects the duration in milliseconds but the stop method expects it in seconds so i decided it to be in milliseconds and need to divide here by 1000 one more thing we need to do before we test is to connect the oscillator to the destination which in this case is the default speakers on your device okay let's test i do that by calling the play note here in the console and we get an error looks like i don't know how to spell oscillator let me just fix that real quick and you can hear a simple sound for one second now we begin to shape this to sound more like a piano i will use an envelope to control the gain you can think of it as the volume in a sense i connect the envelope now to the destination and i change the oscillator here to be connected to this envelope instead forming a kind of chain then the piano sound has a powerful attack which means that it needs to go from zero to maximum gain really quickly here it happens in 0.1 of a second i set the maximum here to be 0.5 instead of 1 so that it's not too loud then the gain will gradually decrease back to 0 for the given duration again specified here in seconds now let's refresh and test another error i sure do many of those today it seems the problem is that i connect the oscillator here to the envelope before i even define it so moving it down here should work you can now hear the sound gradually fading during the course of one second and you can get an even nicer sound by changing the wave type from the default sign to triangle if you're having trouble understanding these things do check out my visual web development course there i use a much slower pace and explain all the different techniques i needed to make my augmented reality piano now let's compose the melody itself it will start with a simple note at first played for 300 milliseconds then i'll play a different note after 300 milliseconds and another one 300 milliseconds after that or 600 milliseconds from the starting point and what we get is this now this could work as the melody but you're free to make it sound any way you like for example it could sound like this now to play it when finishing the puzzle we just call this function here it sounds a bit bad because it overlaps with the final popping noise when the piece snaps into place i fixed this by adding a small delay here to the function call to store the scores we will need to use some kind of database i recommend going to the following link and downloading xampp it comes with mysql and phpmyadmin which is a nice user interface for managing database contents xampp also includes the apache server which we will need to write the backend php code after installing samp we go to the control panel and start these two services then we head on to the admin page from here we can open phpmyadmin and begin to construct our database to hold the scores we create a new database by pressing the new button on the left and we give our database a name now we need to create a table four columns are just fine and let's call it scores now every mysql table should have an id field we leave it as an integer type and mark it as a primary key and tick this checkbox right here so that it will auto increment this means that every time we'll add a new score we don't have to worry about its id anymore it will automatically be decided by mysql next we'll need to store the name of the player here it will be a string so we'll use varchar as the data type and put a maximum length of 255 characters here might be a bit too much but never can know what names people come up with next we'll store the time it can be an integer because i plan to store the number of seconds i can also add the comment here to clarify the format so i don't need to remember it later and finally let's store the difficulty level so that we can later group the scores based on that now we press save and we can see the table structure right here let's add some sample data to work with it's going to be some fake placeholder data for now we go to insert and start entering values in every field but as i said earlier we don't need to worry about the id it will be automatically generated by mysql i'll just add my name here and let's say it took me 50 seconds to complete the puzzle on easy difficulty then i'll add radu again and 100 seconds while playing a medium and again with 200 seconds on hard and finally 4 000 seconds on insane mode so now it looks like i've played the game on all difficulty levels let's add a few more people here like john with 20 seconds on easy and 1000 seconds on insane diana with 100 seconds on hard and 400 seconds also on hard michael with 400 seconds on medium and leo with 10 seconds on medium now we press go and all these 10 entries were added into the table we can click on the browse tab to inspect it now we can actually see here the sql query that outputs this entire table it says select everything from scores we will later need to write similar queries in php to communicate between our frontend game and the database this query right here could be useful to load the scores for example but it's not very nice as such it mixes all difficulty levels and is not sorted in any way hard to see who the winners are like this so let's head on over to search and say that we want only those entries with easy difficulty we can see how the sql query here is updated as well i think this phpmyadmin tool is very useful for learning sql syntax you can also practice writing the syntax by yourself by pressing on edit here we could for example add an order by clause so that the results are sorted by time now it's really easy to see that john is the winner when playing on easy mode we can similarly obtain the results for the other difficulty levels we just need to change the difficulty here each time we'll use this query later in php to get the high scores now to add a new result we use the insert keyword we specify the table name and the columns that will receive the data and then the actual values that go into it note here that the name and difficulty are strings so they need to be specified using quotes otherwise you'll get an error then we press go and get feedback that one row was inserted if we browse the table again we'll see a new entry for radu on insane difficulty now we'll practice these queries using php and because this is the first time i teach it i will take it slow i've moved all project files of the game built so far in the htdocs directory of xaap now i'll create an empty file called server.php we next open this file in our text editor and in the browser but note here the address is localhost slash puzzlecam slash server.php you need to write it like that because then the php code is executed by the apache server i remind you that you need to have xampp installed and both apache and mysql running at this stage now php code is quite different from javascript the syntax starts and ends like this and all the code goes in between if you want to print something here you use the keyword echo followed by what you want to print if you refresh the page you get exactly that now i'll teach you how to connect the mysql database we created earlier because it's also running locally on our computer we'll use localhost as the host the default user is root and the password is empty of course if you're gonna put this online somewhere you'll want to add some better security but i won't focus on that in this video then to connect to the database we use the mysqli connect function and provided this information if the link was not established we warned that the connection failed the die function terminates the php script as well if the code passes the if statement it will go here where we just echoed that connection was successful i'll refresh and connection was successful but if i specify a different host php will produce some warning messages and the program terminates after this die statement we also get an error message if we use the wrong user or password now with the successful connection we can move on and select the database like this and we can use the or keyword to call the die function in case of failure if the code reaches here it will output the success message we can test and see that it was a success because the puzzle cam database really exists if we mess up here and use a different name for example the code will terminate with an error let's now define an sql query as a simple string i'll use the query we figured out earlier using phpmyadmin to select those entries from the scores table with easy difficulty we can execute this query using the mysqli query function now this function doesn't actually return the result but an object that we can use to iterate through the results i'll show you we first initialize an empty array then if the result contains any rows we will use a while loop to fetch each row one by one using the mysqli fetch asoc function on the rs object we add each row to the results array using the array push function and then print the array using the print r function like this and we get an error i forgot an i here it should be mysql i num rows now we have the array printed out here but it's not sorted with respect to the score or in this case playing time as we saw earlier we can do that using the order by clause i'll also format this query a bit better so it doesn't go outside the screen note that in php the stop sign is used for concatenation not the plus as in javascript and many other programming languages now because we'll reuse this code to get results for other difficulty levels it makes sense to write this as a function that returns the results array we can then call it with easy as a parameter and get the same result let me just replace here the difficulty to use this argument and almost forgot need to specify the link here as well now we refresh and get the same result as previously but we can get other results as well by calling the function again let me quickly add the other difficulty levels as well now let's wrap all this into one function to get all the scores we don't need these print statements anymore we can just return an associative array with each of these results associative arrays are like javascript objects where we can give names to the keys now we call this function and print the result like this or to be more familiar you can use echo and convert this result array into a json string like this it's great that php has support for all these without needing to install any libraries i'll comment this out and focus on creating the other function we'll need to add the new score to the database i'll pass the information as the first argument for now i'll write the query as a simple string with hardcoded values here and then replace each value one by one with the elements from the info if you write your query like this it's less likely to make mistakes otherwise it's quite easy to mess up and forget the single quote or a double quote somewhere now we call mysqli query again if we don't succeed for some reason we will return false otherwise we return true to signify success now we can test the function like this by defining some info and calling the add score function using it we can wrap it in an if statement like this to see if the insert was a success or not and it claims to have worked let me now bring back this function call to get all the scores and see if it really worked and it did great now we're gonna change this php server to support both functionalities to add the score and to read all the scores let me remove this testing code first now i'll use a get parameter named info to send some additional information to the page let's first read it here and see how it works so i need to set here info equal to something let's try hello for now and you can see it is indeed printed here i'll change info now to contain information necessary to add the score and i'll write it as a json string now to parse this string i call json decode and get info as an object here which i can pass to our add score function we wrote previously and handle the outcome as before now we can insert the score by just visiting this address with some parameters now make it so that if we don't send any info it will list all the scores instead in this way we support both reading and writing to the database with this single script now let me address the elephant in the room yes this code is not very secure anyone can hack my scores database by going to this link and sending some data there even worse this data is not escaped in any way so they can even do some damage through sql injections here all these issues are not easy to fix and if i spend time on it now it will deviate too much from the project we are building a puzzle game not making the most secure thing in the world but because many of you are interested in security here's what you should do first escape the information here or even better use user prepared statement change get here into post it's more secure i didn't do it myself because i would need something like postman to test and i didn't want to install more tools here post is also the common practice when sending data so you definitely should use it here then you'd want to add some authentication here so that not everyone can make a request such as this you will need to ask people to register and confirm their account by sending them a confirmation email i don't usually do this for my small projects i feel i would be asking too much from those visiting my website and if i'm hacked so what i don't have any sensitive information here and i kinda like the attention all these steps don't make the system bulletproof but each of them make it a little bit harder to hack you could go even further like adding a captcha because someone could automate the authentication if they really want and flood your database with a bunch of fake accounts and fake scores captchas make it harder to do but not impossible you could design some kind of validity checking system here maybe record the start time end time and individual moves if the result doesn't contain pieces moving one by one at reasonable time intervals it's a sign of foul play of course one could hack that too by figuring out how the validity checker works and generating fake data that looks real but that's all i got so let me know if you have better tips on security i'm really interested to know what you guys think but now let's continue with the front end part let me put mr chibison here again in html i'll now create an end screen it will show the score and allow the user to enter his name in this input field there will also be a button to save the score on click we'll need to implement this save score function in javascript i'll also add here a button to show the scores with another function we'll need to define and another button to go back to the menu i will also create the scores screen it will contain an empty div which will eventually hold the scores and a button to go back to the end screen we'll need to define this javascript function as well now i'll copy this title image in both these screens so that they look consistent and speaking about looks i'll define a css class called menu and apply it to all these items this class will be the same style we previously applied to the div with id menu items so we just changed this here in css now we refresh and we can see all three screens overlapping each other we need to hide the end screen and the score screen in the beginning of course now let's start defining the missing functions in javascript first the one to show the end screen i will simply use the playing time as the score and i'll place it inside the element with id score value we also need to compute this time as the end time minus the start time we need to make sure the end screen element becomes visible too like this then the function to show the menu will begin by closing the end screen and then making the menu appear now if i refresh and press start the menu disappears as before but if i call the show and screen function here in the console the end screen appears and it looks good but the score is now something strange because we didn't actually complete the puzzle to get the true value for the end time it will be okay when playing the game for real we don't need to worry about this now pressing the menu doesn't work oh i forgot the parenthesis here we need to call this function here on click sorry about that let's fix this and refresh start call show and screen function in the console press menu and yes it works now let's move on to show the scores next i will copy this line so that the end screen goes away and let's make the score screen appear instead now i'll make the scores container initially showed the text loading because it can take some time to load the scores and we want to let the player know something's happening we then get the scores with the function we'll implement next this getscores function uses fetch to get data from server.php which i remind is located in the same directory here fetch returns a promise when the response is available we convert it into json this returns another promise so we need to write then again and here we have access to the actual data let's log it to the console to test i refresh press start call show and screen in the console and press show scores and now our data is here it still shows loading because now we have to format the scores and place them here instead the format scores function will generate a table in html i won't explain this too much i feel that this tutorial becomes too long if i do that and if you were able to follow up to here i'm sure you'll have no trouble understanding what this is i will say however that now when i have the results formatted for easy i will extract this functionality into its own function it's a really bad habit to write similar code instead of using functions and many of my students have this problem so i thought i pointed out here as well i now call this function for each difficulty level to show all results one after the other the final list is just too long i'll set the fixed height here and overflow to auto so that the scroll bar appears this is better i think now i press back and i guess it's time to define the close scores function this is easy to do it will make the end screen visible and hide the scores screen now i refresh and everything seems to work well except for the save feature that is not implemented yet the safescore function is going to calculate the score as the time it took to play the game and get the player name from the input field if no name is entered we give a warning and stop the function right here otherwise we get the difficulty from the select element and do a fetch to server.php using the info parameter where we pass the name playing time and the difficulty level to give feedback to the user i'll change the text on the save button to say ok during the fetch i disable this button so that players can't press it multiple times by mistake i also reset the text on the save button when opening the end screen again in case the player plays a second time and i need to reenable the button as well let's add the gray style for the disabled button and make the cursor a default arrow indicating that it can't be clicked now let's see an error of course looks like i forgot the closing parenthesis before i test let's also call the show end screen function here when the puzzle is complete and test for real this time okay works pretty well but my score here is in milliseconds instead of seconds but on second thought i think it's better to keep these in milliseconds so that we can better distinguish between people playing in almost the same time i'll format the score to show the number of seconds but i keep milliseconds in the database so that the ordering of the ranked list comes from that ok now the score appears to be the number of seconds and the scores table looks good too those two have zero because we now consider they played in 20 and 50 milliseconds but when we clear the database and people actually start playing this this problem will go away one thing that still bothers me is that the save button is on the next line but then it becomes smaller when it says okay and it jumps up i'll fix this by making the input smaller so that the button always fits on the same line i'll also style it to be more consistent with the other items ok great now we're going to do some fine tuning and work on styling the pieces to look like actual puzzle pieces to do that we go to initialize pieces function and iterate through the grid of pieces like this the pieces are stored in a list in this top down and left to right order so we can get the index of each piece by simply counting here like this now we take each piece one by one and i and j will point to the row and column where it belongs we now need to add information about these things to each piece let's call them tabs for each tab we need to know if it's an inner tab or an outer tab we'll decide that randomly with equal probability like this so this sign becomes either a minus one or a plus one telling if it's going to be an inner or an outer tab the second thing we need to decide is where will the tab be located on the edge if we consider this to start at zero and end at one hundred percent let's allow the tab to be anywhere between thirty percent and seventy percent moving too close to the corners is not a good idea i'll now set this bottom attribute to encode the information for the tab on the bottom it will be a single number between 0.3 and 0.7 if it's an outer tab and between minus 0.7 and minus 0.3 if it's an inner tab note how we store both pieces of information with this simple trick if we are on the last row we don't have any bottom tabs here so we'll set this to null we now do the same thing for the tab on the right and make sure i don't add tabs on the rightmost column the top tabs are not going to be random anymore because they need to connect with the pieces from above we need to set top to be minus the bottom value of the piece directly on top of it if we're on the first row we don't have a tab on the top we now handle the left tab in a similar way we use the value of minus the previous piece's write attribute now let's refresh make this console bigger and check here what the pieces array looks like so the first piece has a positive value here meaning it should be an outer tab the right value is negative meaning it's an inner tab we have null for left and top so looking good so far for the second piece we need to check if the left value is this number but flipped so let's see yes it looks good let's check again with the next piece good and now we get right equal to null because we are on the rightmost column now the next piece is on the next row so the top is not null anymore and it should be the opposite of the bottom of the first piece which it is good let's see the last piece now too has no values for the bottom and right and values for the left and top look okay yeah i think we're good let's now draw new shapes for the pieces using this extra information we won't use direct method here anymore but for now i'll just reimplement it using move 2 and 4 line 2 commands let me just add comments here to explain where each of these lines is going now refreshing doesn't change anything pieces are still rectangle shaped but now we have more control over this drawing i'm gonna need to know the minimum length of the piece and use it to define some visual characteristics of the tab relative to it like the neck tab width and height now let's first make a detour on our way to top right like this the location of the tab is given by the absolute value of the top argument we move on the vertical axis the tab height in the direction given by the sign of the top value let's refresh now and see what happens so pieces look a bit like houses with some kind of roof for some the roof goes inward like this let me disable drawing of the video for now it's confusing i think so now you just see the shape of the pieces but you can actually tell that those with the flat roof belong on top so we start to see that the shape of the pieces really helps when playing the game and makes the overall experience nicer let's continue i'll add similar detours for the other sides as well we refresh and look at that we get an interesting division now i think this could actually be another version of the game if so wanted it's quite unique looking i think what an error where did that come from ah i see looks like it happens when i click outside the piece this here is considered to be outside the piece because we're still using the rectangle shape for hit detection but the error appears every time i click out here as well can't believe i missed that we need to make sure the selected piece is not null before checking if it's close or not ok no more error also notice how every time we refresh we get different looking pieces this is really nice i think but now let's create the tabs i'll make two more detours one before this point and one after it and we use the value of the neck we defined earlier let me now quickly write this for the other sides as well i now refresh and it looks okay but you see some of the pieces have some weird lines sticking out not all pieces have it this one is okay because it has tabs on all sides the problem is that we add these new detours even when an edge doesn't have a tab we need to check if we need to draw the tab otherwise we just line two to the end of the edge and that's it i'll quickly add this to the other sides as well and now things look quite good and notice that because we work with values relative to the size of the pieces it will work as expected on every difficulty level when this size changes no need to do anything special here at all now this shape is still not perfect we need to add some curves we'll replace this line here with the bezier curve instead i'll define it with the help of two control points and this same endpoint from earlier looks like something's not right here i think i'm missing this closing parenthesis but let me arrange this code better anyway refreshing and now you can see what happened here it makes a curve instead of a straight line i'll do the same thing on the right side i just copy these lines in reverse order and change this minus into a plus here and here we basically make it symmetrical let's test and it looks okay i think if you want it to look differently you can change these values here like you can make the neck narrower or you can make the tab wider for example you could actually even have different properties for each piece if you want it's not too much trouble but i think it's overkill and i'm happy with this being hard coded here notice that this also affected the other tabs now they are thinner and longer i will make them all curved next by adding similar code in each of these sections this is where i would usually say that we should extract a function like draw tab or something but i couldn't think of good parameter names and it would actually make some things more complicated inside the function so i decided to leave it like that but the advice still stands just because i can't figure out how to do it nicely doesn't mean it can't be done okay let's see yeah nice and again it works on any size pieces now all we need to do is add the video back in i'll move the code right here and before it i call the clip method of the context and i save the state before the clip and restore it after the call to draw image so it won't affect the following pieces in a weird way now some of the pieces look great like this one but those that have an outer tab are missing the video inside it we fix this by taking the video with some padding on each side a padding equal to the tab height is enough because the size of the puzzle and the size of the video don't match we need to scale this tab height for the first four parameters like this note that i actually divide here by this size so essentially i'm simplifying here it would have been better to store the percent values only but i noticed this just when editing the video so now it's too late anyway this works or not looks like i have an extra parenthesis here it's supposed to close after the min method here now it works and it looks great only thing remaining is to handle when user clicks inside the tabs the outer tabs are not clickable and the inner tabs select the piece even when it shouldn't you would think that it's not a big issue but if pieces overlap like this you won't get the piece below it and it's very annoying you don't want to annoy your players now do you to fix this we will reimplement the way we select the pieces i will use a different strategy for this bear with me for a while as i implement some things that may seem unrelated first let's make a function to generate a random caller it will first generate a random red component between 0 and 255 and we make it into an integer using floor we do the same for the green and blue values and return it as a string using the rgb syntax like this now we'll generate a random color for each piece we really want the colors to be unique and it's very unlikely for duplicates to happen especially when the game has only a few pieces but on insane mode i don't know better safe than sorry and check if a collar was used before and regenerated in that case we'll pass this caller to each piece and now in the piece class we store it as an attribute then in the draw method we'll specify a second argument that tells whether to use the camera or not default set to true if true the code here stays the same but if not it will draw the pieces using their color instead like this i use the fill rect method here and add a padding of tab height so that the outer tabs are colored as well now let's test by setting use cam to false everything still works but now the pieces are more colorful and the camera input is not used anymore you can actually play the game like this based on the shape alone it's quite easy on easy mode at least now we did this change because i want to use the clicked caller to detect if i'm clicking on a piece or not like here it should not detect a click because there's nothing there and here it should activate because i'm pressing on a pink color the piece with the color i'm clicking on should start dragging we implement this by going to the unmousedown callback function and getting the color information from where we clicked on the canvas we get the image data at event.x and event.y as an array with four elements first is for red second is for green third is blue and fourth is the transparency i check if the fourth element is zero so transparent and return in this case we're not clicking on anything then this is not white actually it's transparent black but if we pass this part we format the color in the rgb string format and check to see where it belongs inside the piece we need to implement a new function for that but it's really easy i'll use this other function as a reference and pass the color here as a second argument now we loop through these pieces as before and if the color matches we return that piece simple as that now if you want to make the code more efficient you could store the pieces in a dictionary with keys equal to the color values and then do this lookup in constant time instead of linear but this method here works just fine we don't have that many pieces even on insane mode ok let's refresh and test it works but now you're going to say but radu so what if it works we want to see the webcam image here not some random colors and to that i say multiple canvases we'll add another canvas here i'll call it helper canvas and now in javascript i'll refer to it as well in the same way we did for the other one we then set its width and height to be the same as well now in update game i'll also clear the helper canvas like this and then draw the pieces normally with camera data on the main canvas but using the colors on the helper canvas and the trick is that now on mouse down we don't take the color data from the main canvas we take it from the helper canvas instead let me just refresh and you'll get it in a sec or a couple of seconds it doesn't work i forgot to change the id here to help our canvas okay now my elements show the helper canvas somewhere here or below let me just move it into screen like this i'll make it smaller so it doesn't overlap as much and i'll put it in the corner here now when i click somewhere on the main canvas the corresponding color value comes from this helper canvas so selecting the piece now works as expected and both canvases update at the same time making the helper canvas a reliable hit detector for our pieces this helper canvas doesn't need to be visible actually it doesn't even need to be added to the dom but it can be there as well it's useful for debugging i think i'll just set the display here in line to none and that's it let's test one final time that's it hope it was worth it and that you learned something from this and if you did please like and share this video with anyone you think is interested you can download the source code from my website it's split into parts so you can take it step by step if you want also let me know if you can think of a good strategy to play the game it took me one and a half hours to solve the insane mode with 1000 pieces there must be a smarter way of doing this anyway thanks for watching and see you guys