oh hey everybody let me check my mic test test test test test got that turned down all right just thought of something else all right let's get that right all right mute this there we go all right hey everybody welcome back uh to another live stream i am sam from python basics and uh bo and uh quincy and everybody at free code camp allows me to come here every other week and do a stream and i'm super grateful for that and i'm always very excited and we have quite a few people here today so if you're new here thanks for joining us um we usually just do a stream from videos that i have done before on my channel and there is a link down below to that channel um so if any time there's anything you don't quite understand or if i've gone over their micro videos of everything we have done here and also this is beau does a very good job all of these are catalogued on a playlist on free code camp's youtube channel after this you can just click over there and check out this is this is live stream 12 i believe uh cardinal you may correct me or not and we do have this is the 12th there you go cardinal does an awesome job for us he is our moderator so he will keep us on task um and uh cardinal just fyi i've done a better job i got discord open so there's anything you need to let me know that i will see specifically just hit me up over there on our uh dm okay so there are a couple things um nope not the fourth or fifth uh yes there will be replayed all right i hope the background isn't too bad i had to move some stuff around but okay uh let's just go ahead and get started so there are a couple things that i do want to cover uh first that we may not be aware of so we're going to be doing a random password generator should put that right there random and um and if you are new you do not know yet that i cannot spell so you will see misspellings typos everything so that's don't don't uh don't be alarmed you will probably catch um you will catch many typos so all right so in this password generator what we're going to need from python is of course something with uh random and then so we're not having to type in all of our uh letters and characters we're going to use uh the string module so let's just go ahead and look at let's bring in random first and put that into memory and really learn learn about it so what in the world does random do all right der random all right all right cool all right so well let's look at everything about it so it is a module that the core developers have already created for of four of us to random variable generators now we're going to touch on towards the end and also stay tuned until the end because we're probably going to get through this uh in under an hour and i have some extra stuff that i wanted to talk to that i'm going to sneak in at the end so there if you haven't heard pseudorandom there is no real random there just isn't because a human being will begin to repeat digits there's actually that that is no noticed and then a computer is based on logic so these are actually called pseudo random and i have a thought and an idea to actually go over a little bit of how that is actually deduced how a random number is actually calculated so but we need uh randomity um i think i just made that word up uh randomness and um then the actual characters that we're going to be using so what we're going to what we're going to use in our example is let's get to the bottom we're going to use choice see so help random choice choose a random element from a nonempty sequence all right that's pretty selfexplanatory then we're going to use shuffle so we need to look at this and how how we use it full all right uh i'm sorry just looking to see if there was any all right so shuffle this is super important uh and i like to really make a big deal about in place and um return so shuffle does in place it creates nothing it doesn't return anything so and you're going to pass it the sequence the list list there we go so now now let's look at string so string is another module that the core developers have have created for us and let's look at this before we get into it ah all right as key the characters that a computer knows how it tabulates and keeps up with all key strokes so every character is a signed and as key variable so we'll look at these momentarily but i want to go over them right now as key letters as key lowercase as key uppercase as key digits as key punctuation so let's just jump at it so string as this is another one that i always have a hard time with so if we look really close all right you got can you even use this in frame this is in frame all right we have lower case uppercase lowercase and capital excuse me or uppercase i don't know how all right so 52. so 26 letters and the english alphabet 26 we have lowercase and uppercase so that's 52. now letters is both lowercase and uppercase so we can actually break this out string dot as as key lowercase and boom i just get lowercase and then uppercase boom capital all right okay anything anything notable oh jan's here awesome oh jan please after after this um uh hit me up on discord i want to make sure we get you to be a uh moderator too uh because you've been around a while i think you sent me some stuff but that was not well we'll talk about that later uh glad to have you here um and glad to have we got quite a few people here today so glad we have a pretty large group and start asking questions if i have gaps right now please please ask any questions because this is when you ask a question somebody else has that same question okay so oh i think i was shaking the camera string digits all right oops uh what'd i do wrong string dot digits there we go so i get zero zero one two three four five six seven eight nine uh string yes uh is that what i did sting thank you good catch look i i own what i can and what i cannot do uh typing i actually be i actually used to be a worse typer before um i began programming because you have to type these things right all right oops sorry i thought i heard discord all right all right okay so now that we have our base modules that we're going to be using now we need to begin to create our function so guess what we're going to call this function so we're going to call it password now now we need to deal with some things that we you may or may not be aware of so we're going to be creating this function with um with some variability so we're going to need to take in arguments now some of them are already going to be set that we're going to have a starting point so if you haven't heard the term default argument or optional argument comment right now because we're going to get into it so if we need to go further into it just let me know because let's just look at one of our highly used highly used uh functions right here print so like i've done before so these end perfect example end is optional and it is defaulted to newline that's what that means so when you have a so i have to pass so when i'm using uh some it is expecting an iterable it needs to have one argument so then if i pass so right here takes at least one positional argument zero is given so we're going to set it up where we're gonna have one one uh one positional and then two two optional all right so let's just look and see what that is going to look like uh yeah if we have time we can look at uh how to replace um uh methods with with lists okay all right so what we're gonna do is we're gonna we're gonna we're gonna layer this password generator to um let's see how did i want to do this we're gonna have this hat be able to take digits and we're going to control the strength we're going to have let me get it up we're going to take length is it going to have digits and the strength of it we're going to have three scenarios weak strong and very now we need to pass this information on to the user and and how do we pass information on to the user of our function we have to use a doc string strength strength and we're going to set this up to true right now all right so doc string anybody have any questions of what a doc string is okay so the doc string is literally just this right here this is the doc string documentation string and this is passed along with our three quotation marks and we're going to tell the user what information they need to know so length of password if you num if you want a number and then and strength we're going to pass in week and i moved my camera so if i i'm squinting more than or excuse me i moved my light so i would get rid of shadows so if i'm squinting a little bit more than normal that is why so all right length of password num if you want a number and strength weak strong and very so that is what is going to happen if we then call password so now i have my documentation string right there boom let's do this again i wanted to be able to see if this was installing frame shoot is it yeah sorry guys all right let's move this up just a touch because i had a multi multiline there we go boom there we go so whatever you type in your documentation string is the information that's passed along when you begin so then the user understands and you can communicate even more in depth and then of course when you can even have even more but we'll deal with that at a later time all right so okay any anything before we move on to the actual structure of of the function anything good jan cardinal anything i need to know about before we move on that i might have missed okay is that light too bright do i look all washed out no okay all right so now we just need to jump at it all right where are the notes i need to get that ready all right so we don't need pass anymore so now we have excuse me so now we need to begin to account for our scenarios so we're going to have so we're going to take length then we're going to have weak strong and vary so we need to account for we'll deal with num in a minute but right now we need to have three scenarios thank you misspelled strength let's see did i do it right that time is it getting better is it getting closer okay awesome all right thank you cardinal i don't know exactly what you deleted but awesome okay all right so we're gonna need an if and then to do actually let's get our variables going first so we need to start separating these so we're gonna have string as key lower and we're gonna have upper because we want to we want to differentiate between these and we're going to have relative strength and move on from there as key as key upper now let's do digits and we know that's okay one two and then you might say why didn't you just do this well we i want to just have some consistency here so i'm going to do lower and it's less typing lower plus whoa i hit my i did page up yeah that's what i did upper then digits string dot digits and then punctuation punk'd string dot punk punkt i always i didn't know i misspelled this i don't think i'd actually ever punked tuation and then our password we're going to increment this so we're going to start out with a empty string all right any all right all right well everything that i do on this stream and also basically over on my channel is if somebody is beginning to watch this and has zero experience with programming and especially python that you can jump in follow along and it can make sense we keep this as basic as possible and try to move very slowly into advanced areas so i hope that answers a couple of the questions that i just kind of saw all right because they're because programming can get very overwhelming very very quickly if strength equals week so now i can change this to weak all right pass all right so now i have so i'm going to default this to weak boom all right so now so as you go through and as you change one thing change don't don't write this whole thing at one time and then try to run it because you're going to make a mistake i don't know if you if you've been over to my channel and seen the um seen the video on incremental development right right one functionality test it because you could have it fail you you could write uh you could write a whole section and it begins failing all over the place and you have no idea where to start so write one thing to change test it move on because when you go back and you start changing one or two and the whole thing just fails you just want to rip your eyeballs out so all right let's just incr incremental incremental incremental incremental improvement incremental change all right so there there's my little there's my little soapbox for today all right so we have this now this is how we're gonna handle uh any digits excuse me i've been a little congested recently all right so actually let's build on this so four we won't do the numbers yet so four i in range length then let's see where i am then i'm going to take my password and i'm going to increment it up with my random choice from lower and actually i just thought about it we didn't actually no we we did look at choice right yeah okay it's gonna randomly pick so i'm going to randomly pick from lower so right now weak is just dealing with the lower case letters and that's it so if i pass it and we already have it set on weak so if i do password and i pass it 5 i don't have it printing out anything print pass word actually this needs to be return pwd there we go so i have a password that is then print password five to make it look a little bit prettier there we go so of course it's going to be random again so just just like so so now i have a five letter password but they're all lowercase so that scenario is again pretty weak so now let's add well what happens if we want some numbers so now let's add some functionality that if num so now why did i just do if num and length increment down 2 then for i in range 2 password random choice digits and move on so all right now let's go over this so now i just hardwired this so if false so it's defaults to false so it's not going to include a number unless you change it to true then if this is true because this is so now if i go known num equals true so now when this catches true this is going to reduce so we're we're defaulting and hardwiring this into i want at least two of my two of my characters to be digits so i'm removing this down making this shorter by two then i'm going through here two times grabbing two digits then continuing on so now let's run this so now let's run this again now if we look we will deal with this later with some randomity randomness should have probably looked that up before i started to be able to conjugate randomness so i'm going to have two random numbers at the beginning and then the remainder of them will be characters so now that is our week so now let's do something with strong and we'll deal with this in a minute so i had my if that's my first condition and then l if strength equals strong so now what i want to do is i want to then include both uppercase and lowercase and strong and then for with very we're gonna add punctuality too punctuation not punctuality i knew that sounded weird sorry we're gonna add punctuation to to our random password all right okay so now so now we saw what we did with numbers so we're gonna do num if and let's see what we did we're gonna go so now with strong we're going to keep this as two and then with very we're gonna add a little bit of uh flexibility and a little bit more randomness so that's why we're not over we're not blanketing our number choices and then we want them to be very they we want them to vary each each of these so all right let's see so we got let me get where i see where i am with my notes we're on strong so same thing we're going to lengthen by 2 and then for for i in range 2 then password increment if i can increment my typing is not that great today everybody so i apologize uh then our random choice random choice digits and then we'll come out here and still do our passwords but now this for i in range blanks now here's where it's going to change where we're giving a little bit more depth of character we're going to use choice dot letters and actually all right so since i already created this and you may have typed this so we'll leave letter and letter the same so now we have upper and lower case here let me check my indention something didn't feel right all right so now we'll leave that copy paste and then now we're going to have strength and this is going to be strong all right does everybody understand what i'm doing so far all right so let's see all right all right so now i have my strong and i have five here let's up this to ten so now i have up i have digits capital and lower case all in together but as you'll know we have a problem here where it's it's too consistent it's if somebody starts seeing this they're going to realize all right so i only have to pick there's only digits at the front so we need to we need to handle this right now so random dot shuffle and we're going to have a problem here in a minute so wait a second shuffle a list hmm so that's a problem so we need to come here and go password equals list password we need to turn this into a list then we pass this so now now let's look and see we're gonna have another problem aha what is our issue what to remind you because this is what so help what did random what did random shuffle do who remembers in the doc string random not shuffle it's a very big issue that you have to pay attention to when you're reading the documentation this is it right here in place return none so it doesn't create anything so when i pass this it returns none that's why i get none right here so i need to then put this back i need to so i run that then return password pwd ah one more problem this is still a list so now i have to go uh do do do do so this is a list we got dot join password bam so now i have shuffled rejoined i'm using my join method on on a list for a string and now i have these random passwords so we have weak we have strong now let's go ahead and knock out now we need to deal with very so we've we've handled a lot of this so now let's go all right strength i'm going to type that pretty good equals very if num so now very we want this to be very strong right so we need to add a little bit more of some some randomness to this so ran equals random dot rand int two to four so right now i don't even know how many digits it's gonna have it's gonna have two three or four so i wanted to make this a little bit even even even more more out of my hands okay okay all right all right so then we are now we need to do some a little bit of math uh here just like we did with our two but now we need to handle we need to handle this so we got let me see where i am with my notes all right so and also to let everybody know that i've gotten pretty good at not closing out the shell and after the stream going over to my github so you can get to my github on any video link link on my youtube channel and all of this is there i have one one full consistent free codecamp dot py file that i keep adding to and then the notes the shell all the notes all the output for the day that i have in a file dated uh today and that's in its own uh folder free codecamp folder over on my uh github server on my repository just to let everybody know i have not been voicing that as much as i've been meaning to so all right where are we so we're at we're at our if num then we need to adjust this a little bit so now all these others were just decrementing down by two well we need to set up some functionality we don't know how many digits it's going to have we know with an idea with a random number so now we need to increment down by that and then oops then for i in range of ran oops then password and increment up by random choice digit and then i come out so then i need to shorten the length by my rand incrementation then for i in range ran so then also we're going to have random punctuality too we're gonna use that same that same uh for this right here to really get some randomness password increment random random dot choice punkt and for then we're just going to do some letters for in range whatever is left over so if you want very you're going to have typically a very long password random dot and then you could set some function functionality up be like hey and letter letter letter all right and i'm missing a there boom boom boom boom all right let's clean that up some so now copy let's go 15 and i we have very let's see how we did check the any good comments password equals password i love that do you know that people actually that's like the most used uh i think there's a list there was an old movie well i say old ancient to you guys old to me um it was called i think hackers back in like 90 1993 or 1994. had some uh pretty famous people in it that hadn't been seen yet before so all right all right so here we go whoa let's see where i got what i left out all right and ah whoa well that's not good let's see i left a whole bunch of stuff out length letter choice and then increment up random dot choice and this is supposed to be length my eyes are all over the place today everybody i apologize length choice dot parentheses letter there we go okay oh you have seen that you are you are right it had it did have angelina jolie and a couple a couple of others it was a very interesting movie okay now check this out oh good question all right so let's break let's break this out so what does what does this do right here it's all right help dot string dot join uh str all right help dot str dot join my fingers are not typing okay so this is a little odd and you might you might go okay this doesn't make any sense because you're passing it a list but you're getting a string most of the time you have a string and then you do something to it so let me let me see if i can do this right here so you're having a string that you're saying hey i don't want any spaces in it and this is the this is the list or the sequence that i want to put with this string that doesn't have anything in it so if i were to i know that sounds really weird so let's look at this right here so i have a list of a name that's sam then i take name and i throw it in a list name so now i have name and it's a list right so now i want you to make a string have zero spaces in it and i want that information for you to put in there with no with no space is the list with the contents of that the contents of name now and i can do i can put anything in there i want a space so then i do join name i get which happen to be the characters of my name with a space in between now this is where it gets really handy i want to put an asterisk between all of the characters which happen to be my name and again it's whatever string you want it's a it's a uh it's a reverse split think about that all right yes it it it joins and it takes the contents of a sequence and then whatever here's the glue that's what i want you to think about because i remember the first time i was like well why isn't join a list method well it's not because you're using this string then that's a string and then this is the method for this string with this sequence there we go all right really good question okay uh let's see let's see let's see all right cool i was hoping we would get done and um uh shoot i did not mute the tablet i hope that isn't too too disturbing so i actually wanted to go over we're going to do a little bit of bonus stuff um so let's go over some things that just are random that i've had on my channel that um actually let me make sure that this is everything that i wanted to cover all right yes let me check these notes right here yep all right so you guys have maybe seen um packing packing and unpacking well i want to show you this let's comment that out so i want to show you how to unpack with a splat and zip so let me just show you this this is a little bit of bonus so we have we have two lists we have student we have grade the grade that they're in and we want to put them together so i want to zip them together classes equals list equals zip so i'm going to zip just like a zipper you put one side to the other so i'm going to zip these together student and grade so now i put this into memory and i have a new list object with tuples with and it zips it one after another so that is a very handy tool but but now what happens if i wanted to unpack this how would i go through i could go in and i could go and really where how it's like i could i could chop this up well i remember when i first saw this this was the coolest thing so new student students and grades so now i can literally use the same tool but i'm going to use a splat character splat classes so i'm going to pass this back through and this is how you literally unzip so now i just unzipped everything so now i have new students and i have grades i remember that was so i have grade and grades so i just didn't type the same we got new students and students now all right so that's that's bonus one and i was looking through the other day and i haven't done a very good job of showing you guys because it's basically kind of like the question of hey what in the world does that join do because you've never talked about it so now let's let's kind of look at some string stuff right here all right that's not the one i wanted to see i wanted to see this all right okay x equals when i have it help help all right put that into memory x endur on x i have all of these methods right here check this one out i remember the first time i was sitting this trying to solve this problem it was a just a silly thing to make to to to make you think about it help nope center we're already pulling up help okay ah return a centered string of a length okay so if i pass in center and if i give what let's see i can't remember let's do this what does it do is it in place or does it return it returns so we got one of two ways so x dot center center equals 50. and then what do i want to have around it let's do let's do that so now check this out so this is 50 characters and help is in the center okay that was one of the cool ones that i liked um let's see and we'll go we'll go over more oh well that's not what i wanted to do oh yeah sorry i forgot i was in a different application over here all right so now here's another one that i like a lot okay oops okay comment this out so now i have a list of names and digits integers okay now let's look at help dot dir dot str uh a i is uh what am i looking for is upper is title is digit is uh is space i'm looking for which one am i looking for is numeric that's what i wanted is as key is numeric so i want to create a list of name equals we're going to do some list comprehension here false if str i is numeric merrick else true for for i and x let's run this name so boom so now i go through and what i just did is i took we increment we we go i'm doing for i n x print i right so then what i did is i wanted to look at because this was a string and it went through and i wanted to know the reason why i did it like this is because it knows if this is a here integer integer but still that is an integer just an as key integer or numeric so that was that now i cannot remember if we have looked at the help the help prompt on on any of these streams jan uh cardinal do you guys remember if we have done the help prompt because i'm sure with out of out of these 400 so there are some people that uh okay so when you when you don't pass in an argument for help you get the help prompt and this is where python becomes extremely powerful so you can literally because this was kind of like my journey okay so then okay so then you start bouncing around and then you have builtins up functions and then uh what am i thinking about oh keywords words there we go oh okay so if you've noticed that there's no way for you to run help on some things because you can run help on a function and on a method right then let's see what does four do oh so there is a lot of documentation on four okay so it goes through and it so you don't have to this is don't try to memorize anything understand what you want to do sorry hint okay so then we're talking about range okay so so now now you're going down this rabbit hole so what is four okay and it has a scenario range well what what's range okay and then i got 83 lines of range okay that that is the function okay so that is that is the function that has the stop or the three arguments so here's the two here's the optionals and we just go from there and you end up going down this rabbit hole keywords okay so what is this what is this while so then okay so i have this and then uh what it what is within i'm just bouncing around none what is none and don't don't confuse don't confuse this because that's not anything ahha so it's a none none none type so there we go guys uh that is i was really hoping i'd get to all of these things but this is a super important feature in fact that if you have a question and you can't get it answered anywhere jump over to my channel drop it in one of the comments hit up any one of us on discord and you're not in this you're not in this alone all right i believe in everything that code camp is doing what quincy's trying to do with bo uh running the youtube channel uh we are all to help you here in your python journey and the reason why i make the micro videos is because i remember the journey that i was on trying to learn programming and i was all over the place i'd see a video i'd do a video i would try to remember where i saw it every single topic that i've covered here so far is in a micro video over on my channel you're not going through this alone all right so i just wanted to say that if you're spending time doing this you're doing a very good job all right and free code camp is here uh i'm here you're not you're not dealing with this by yourself and you'll be able just sit down type solve some code write some code do a little bit of the time don't try to solve the whole problem at one time so all right guys there we go another great stream uh you guys are doing awesome i want to appreciate free code camp make sure you're subscribing to their channel as well joining if you can br buying any merch great organization wholeheartedly believe in everything that they are trying to do so there we go guys another awesome stream today and we will see you guys in two weeks thanks everybody