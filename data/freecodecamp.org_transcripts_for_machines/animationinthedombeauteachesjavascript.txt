you can animate elements in the dom with css or javascript this video is going to show how to animate dom elements using javascript without any frameworks first i will show you how to create an animation by programming gradual changes in an element style then i will talk about the new element.animate method to make animation possible the animated element must be animated relative to a parent container the parent must use relative positioning while the animated element must use absolute positioning so if you see up here we have the container my container and then we have the child element the my animation that's what the code is going to animate and if you see here we have the container that has the relative positioning and we have the my animation that has the absolute positioning we can use a timer to call gradual changes in an element style and when the timer's interval is small the animation looks continuous so let's look at the code so you can see when this button is clicked it calls the mymove function which is right down here so we're going to get the element by id get my animation and assign it to element and then we're gonna set the position to zero and then we're gonna start this set interval and we're gonna pass in the frame function that we're gonna run and we're gonna run this function every 10 milliseconds and we're going to assign this to id that's so we can stop the interval when we need to so in the frame function if position equals 350 that just means that the square is at the end of the the ba the box here let's put that at the beginning so if the square is at the end of the box we're going to clear in a interval and we pass in the id that's up here that just means we're going to stop running this function we're going to stop running the frame function every 10 milliseconds else we're going to move it so we're going to increment the position from zero to one and then we're going to to set the the top and the left style to the position the first will be one pixel two pixels three pixels four pixels five pixels just like that and then it's just going to animate across the screen and you can easily use different style elements instead of using top and left you can use the color you can use size any css element you can animate using this method now i'm going to show you a different way to animate using the element.animate method which is part of the web animations api and this method is actually the animation method with the best performance so let me paste in the code here now this is currently only supported in newer versions of chrome firefox and opera however there is a polyfill that you can use to add support for most other browsers check the description for a link to the polyfill and then you'll be able to use this all the time so this is going to animate the div item so i need to add the dip item to the html okay so here's the div with the id item and in the css i've already added some css uh it's going to start with the background blue position absolute and then the height width and the margin is just going to make it so it centers right in the the square so oh you can see the animation happening right now now let's go over the code that shows how this animation is created so first we get the item the get item by id item so that's that div and then we're going to call item.animate into the animate function we're going to pass two things this first thing we pass in is the keyframes so this is just an object formatted to represent a set of keyframes and then the second thing we're going to pass in is right here which is the options so let's look at the keyframes in the keyframes the it's just going to go from one keyframe to the next so in this first keyframe it's going to set the transform we're going to set the scale to one that's just a hundred percent so we're not actually doing anything for that and then we are going to set the background to red that's how we started and then the opacity to one which is a hundred percent so the first keyframe is basically just how we started now the second keyframe here what's going on to the next line let's pop this over a little bit the second keyframe we're going to do a transform have the scale go to 0.5 so 50 size we're going to rotate it 270 degrees set the background to blue and the opacity to 0.5 or 50 percent so it's going to animate between this keyframe and this keyframe and now the offset is optional if you don't have offsets it will evenly distribute each keyframe within the duration but if you have offsets then it won't be equally distributed so since i have 0.2 here it's going to go from the first keyframe to the second keyframe and 20 of the time and then it'll take 70 percent of the time to go to offset 1. the offsets on the keyframe have to be in numerical order so you have zero point two and one it always ends with one if we change that to um point five you'll see the animation will be slightly different so it's just the first part of it is going to take um half half the the time instead of just the 20 of the time so you can see the last key frame we put the scale back to one we rotate it to zero degrees and set the background back to red opacity back to red so for the options we have you set the duration in milliseconds so that's two seconds the easing we can change this to something like linear and let's see what that's going to look like so here it's not going to change speed as much between the different keyframes and then the delay is just how long it waits before the animation runs after the page loads and iterations we're going to keep going on forever but you can just make it go like two or three iterations direction it's going to alternate so that's why it keeps changing the direction that's spinning but if we put normal here and we run that now you can see it'll just always keep going the same direction and if you hit if you put reverse here will always go the other direction now all these options are optional and this fill here this fill is going to dictate whether the animation's effects should be reflected by the element prior to playing which would be backwards or it should be retained after the animation is completed playing which is forwards or you could put both and one thing to know about the keyframes up here is that you can animate pretty much any css property so transform background opacity these are all css properties and you can put different ones there to animate different properties so that's animation thanks for watching my name is beau carnes don't forget to subscribe and remember use your code for good