all right um so how many people are new to programming here anyone a couple people um this is kind of a talk for new people but even if you're not new i think it could help seasoned developers too so this is becoming a better programmer without actually programming let's see now obviously you have to do some programming to become a good programmer i mean but when i jumped into development four years ago i accidentally kind of stumbled upon an invisible step at least for me so my name is ryan johnson i'm a graphic designer and software developer at my consulting group uh i after college i spent about six years as a professional graphic designer and about four years ago i started working for this company in my consulting group and became a fulltime developer which is quite a switch at the time everyone told me you know do tutorials think of an application you want to make and create it and i kept hearing the only way to learn to program is to actually program and so you know like everyone else i used you know pluralsight code academy w3 schools udemy things like that even took some classes at otriplec and you know that honestly i you know optimist the large a large chunk of the process is developing so it makes sense uh you know unfortunately i'm not up here like with some kind of you know nerd upload i can give you all um instead i kind of the missing ingredient for me was i became good friends with my coworkers and i spent a lot of end up spending a lot of time with them and in that i kind of found my missing ingredient and for me that was full on immersion and just by being around people that loved programming and talking about programming with people i store i sort of started to absorb things and uh you know even even things that went over my head at the time eventually came back around and i understood them just thanks to talking with developers and and also developers seem to have this like obsession with development almost and it kind of gets infectious a little bit you know when i first started as a graphic designer i thought development seemed cool you know programming was wow you know i didn't think i'd ever be able to do that so it seemed so smart and it was kind of scary and the more i got into it though and got around people who enjoyed it it kind of eased that for me as i said coming from the world of graphic design it was all about you know our language was apple computers adobe skinny jeans and it was it was it seemed simple to me but i've done it all my life i guess um then i jumped into the world of development and all of a sudden it sounded really scary at first uh you know words like the dom and backpack and uh even windows i didn't use windows in a long time so and then some weird terms came about too like one of my first few months in development someone asked me would you rubber ducky for me and i was like no weird and even under the covers i have so many arguments with my coworkers because to me it should be under the hood but in the development world it's under the covers for some reason which just sounds weird to me so so with that hearing all these terms and stuff i kind of realized that it's more than just you know hello world and if statements it's and like i said at first it freaked me out but the more i kind of got to talking about these with people it i started getting relaxed and my big thing was i just i asked questions no matter what no matter how dumb it seemed for instance you know one time uh someone was talking about the view in sql and i had heard the view in as a you know part of the front end and so i was like in my head i'm thinking i must be dumb so i finally asked i was like what what is the view and sequel i don't understand and once i once they explained to me that it's you know this stored procedure type thing i understood it but i think a lot of people are afraid to ask or afraid to discuss things and i think it's important that you don't do that and like in a lot of these terms too when the first time i heard backpack i didn't even want to uh that sounds scary even when they explained it to me it didn't make sense but now that i use it you know monthly i guess it's not like something you touch all the time but i it came back around and it's like oh it was familiar and so it wasn't as scary the next time i'm going to kind of relate this um my idea here to playing guitar because i started playing guitar 11 years old it's something i've done all my life i remember even back then i made the conscious effort to always be holding my guitar because my feeling was guitars are awkward there's just this big piece of wood with strings i mean they're they're not comfortable and so you know yeah i still had to learn chords i still had to learn scales i still had to learn songs but just by holding that guitar all the time when i was watching tv when i was uh you know emailing someone whatever which annoyed my wife you know which annoyed my family i mean just i'm always holding my guitar it's a constant uh but because of that i became really comfortable with my guitar and eventually got better and better and to me that's relatable to this you know immersing yourself in that world you just pick up things that and you get comfortable so that when those different ideas come around it's no big deal and that kind of brings me to you know the next side of this just because like i said i'm four years in and i'm to me i'm still new i mean that's but i can already tell that i have to keep learning or else i'm gonna forget things and it doesn't just mean keep learning the one thing you do you know if you're a csharp developer it don't just focus only on c sharp i feel like it helps to learn other languages and other even things that you think you will never touch if it's technology related somehow it always comes back around it seems it's like in the four years i've done this i'll hear things that i'm like i'm you know elixir for instance i'm never gonna work on elixir well now i'm doing a side project that is elixir and so um and so with user groups you know i know we're all here for c sharp but i want to why not try some other groups try ruby or try you know you know whatever just look at what would interest you um and it helps you make friends in the industry and i think that's an important thing to do because you get discussing things outside of work and it can teach you new things that you never even thought you would need and it could come up on the job so and then that goes along with learning a technology don't work that you don't use a work and then also like i said i'm doing a side project right now um creating you know create a side project either alone or with other developers i think that's important uh because you you only learn so much on the job you know you you get kind of a lot of times you get doing the same thing and so you know for me i'm mostly frontend half the time and so i'm making these views over and over well that's going to that's going to make me just kind of become stagnant if i just do that so i met some friends and started working on a side project that's angular 6 and elixir and you know functional programming that definitely is a term that would have scared me at the beginning but i've been to some user groups and heard about it and why not let's try it you know and uh you know the other thing that i often hear with from people is that come up and do these talks they'll say they they learned a new skill just to give a talk it was just kind of giving a talk was an excuse to learn a new skill and i think that i mean what a better way to force yourself to learn something you know go sign up for something like this as nervewracking as it may be and next thing you know you know this thing that you didn't think you would have otherwise and or maybe even thought you didn't have time for otherwise so again uh ryan johnson um if you guys have any questions yes back here sorry okay what's a dac pack i'm not the best person to answer this question i feel like but you know what this here's a good thing to do now so since you don't know what that is let's do a talk on it so in our next c sharp lightning talks we can expect a talk on backpack come back for that one the other question okay so the question was how do you what's the best way to get over being afraid to ask questions and then the second part of that was uh how do how what's the best way to not sound condescending when you're answering i don't answer a lot of questions so i don't know about that one but even with that one i can at least say it's like when people ask me stuff with graphic design i mean i'm just because i've been doing it for a long time doesn't mean i'm the best at it and so i always try to keep that in mind that there's people way better than me and i'm reminded of it constantly you know i think my logo design was awesome and i'll get online and see someone else's and be like i suck but that's that's part of it so i think if you keep that in mind it's easy to answer questions that way and the first part of that question uh how do you get over the fear of asking questions i mean you if you really want to be good at something you just you're going to have to look dumb but even though if you know even though it feels like you're looking dumb i i think to those people it feels like you're being intelligent by asking a question so i don't think there should be a fear and also developers love to talk about the things they know they love to show how smart they are or something so uh it's not gonna you know it's not gonna make you look bad at all so another question yeah so ruby on rails when was it this thursday okay 11 30. so come to that and you can learn a new skill like i was saying rubber ducking so i can explain this one uh basically you know how a lot of times you'll be working on something in code and you just you know it but you just can't get it so you'll call someone over and they'll be your rubber duck they won't say anything you'll just look at them and explain what you're doing and somehow it comes to you every single time so some people use actual rubber duckies i guess i don't know it still seems weird to me i usually call it rubber goosing i don't know so