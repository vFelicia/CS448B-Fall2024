this comprehensive course will teach you how to turn your idea for an app into a reality all from a business perspective professor sluter is an experienced teacher and he's great at explaining things so anyone can understand hi in this video we're going to talk about the business of building mobile apps normally in this channel you think about apps and the technical parts of how to program them how to design them how to troubleshoot them how to make them work and now we're going to talk about maybe the business side of it so if you're kind of a business person or you're looking into changing your role from a programmer into a team lead or business leader then this is going to have some good advice for you so here's what's ahead of us in the next few videos in this video we're going to talk about the motivation for building an app because if you don't know why you're building an app you're probably going to fail in soon videos we're going to talk about effective design and making your app work for your users so you ask your user what they want and build exactly what they need rather than choosing the features that you like and are cool the next part is about marketing we're going to look at how you can actually turn your app into something successful that people want to use how do you make money on it and whether you support a business or you're trying to create a business we need to ask the principals about supporting and monetizing also many users just ignore their apps they install it once and then forget about it so what makes the difference between the apps that are sticky and the ones that get thrown away or ignored so there are some pretty standard principles for how to build an addictive app and increase user loyalty also what's the tools what do we do when we come to decide on which language which platform crossplatform which frameworks what's going to happen in the future how am i going to find employees to work for and now we're going to see all of these questions in one of the most critical technical decisions that you can make about building apps is choosing the right tools also not just the tools for building your app itself but the supporting infrastructure what's called the full stack involves not only just the things that you see on the screen but the databases behind it the cloud services the integration between websites and mobile apps and so there's a lot of technology that is unseen and if you're not a technical developer this could be a huge blind spot and so we'll talk some advice about how to build for a more scalable cloud service and now we're going to talk about speaking of your technical people how do you choose a development team what's the right way to create a job requisition what's the right way to find the right person that would actually help you and so we're going to give you some advice for hiring people and choosing the right people that will make their career a happy place if you are their manager and then finally what are some emerging trends so you don't want your app to be expensive and be replaced on a regular basis you want it to be able to grow and expand and what's coming down the road what things are we going to do with our mobile apps that we don't do very well right now and so that's some of the things that are ahead in the videos that are beyond now first of all we're talking about the motivations and so that's why you came to this video what reason do you have if you want to make an app so some people it's about money some people are solving problems maybe you are just trying to make things that people love to use or you're trying to save the world now you might ask why an app then if i'm going to build an app are there better ways to invest my money is the app the right solution you have to understand your problem before you begin typing obviously and so apps are expensive web apps might be better a good app for a bad business plan is probably going to fail and so make sure that you answer some of the fundamental questions about why you're building an app in the first place of course some people are going to say the motivation is just that i've heard you can make a ton of money as an app developer and an app creator well for some people yeah it's true there's a one percent club that seems to do very well at that but for the rest of us not so much maybe you have a good motivation to say my app is going to save the world some way i'm going to reduce carbon emissions i'm going to help people with anxiety i'm going to provide services for the underserved i'm going to promote racial harmony i'm going to make our government work better and so there's a ton of things that you can provide services for that you could put into this category of saving the world and maybe you don't even have to make much money at it but i bet in the long run if you really come up with one of these solutions that you say you are you're on the success track already even though money wasn't your first motivation however what you have to get right is this question here what problem are you trying to solve and so we're going to take an entire video in just another one or two steps here to figure out how you can identify what problem needs to be solved if you don't get this one right you haven't gotten anything right so solving a problem is the fundamental problem of designing and managing your app so in the world of apps there is this huge uh ocean of apps to choose from a very small percentage of those show up on the top as a matter of fact i think 60 or more are never downloaded uh most never make any money and so your pro your proposition isn't so much about how can i make money but it's how can i solve the right problem clearly there is an app for every need but there's not a need for every app so most apps are used once and then uninstalled there are a great many solutions out there that are probably similar to the idea that's brewing in your head right now and you better be darn sure that there are customers that you can identify that actually want to use your app and even more are willing to pay you money or desperate to give you money if you've got the right solution so what you need to do in your motivation stage of an app is to think about the value you provide so let's think for a second about one of the most popular apps and one of the greatest success stories in app development let's talk about airbnb if they were to state their value proposition you might think it was this one here they said airbnb allows travelers to stay in a room that is less expensive and better than hotel rooms now i wrote that value proposition i'm not the obviously the ceo of airbnb but i'm thinking this might be their value proposition i'm their customer and this is what they provide me well i'm kind of their customer but really their customer is not me i'm the customer of the person renting the room so the customer for airbnb is the person that has the property and so maybe a better way for their value proposition to be stated would be something like this i want to enable property owners to make money by renting space and so you can see the formula here is that in one sentence they can justify the expense and the business model that they're trying to build and so airbnb might be an app but really it's an app that is a business or business that is an app so your value proposition this is your homework you've got an idea right now for an app can you state it in this term that my value proposition for my app is something like x my business x is a service that allows y y is my customer that allows y to do z in a better way and so you have to be very specific on each of these what do i do who do i do it for and why is it better than the competition so do your homework see if you can write out a clear statement and if you can not only are you sure about what you're going to be working on but your proposed investors and employees and your entire organization has a clear vision of what you're trying to do so your business might need an app to do its service but a better question to start with is are there people who need to do why are there people that are willing to pay you to do it and so this is your homework before you even begin to write code let me give an example so i look at my phone and i have this app on my phone called all trails now i hate paying for software probably just like you i have microsoft office only because my employer pays for it i try to get the free stuff whenever possible now all trails is an exception to that for some reason i'm willing to pay thirty dollars a year for this app on my phone why is that well it's because i am their target user i love hiking i like backpacking and so if you look at what they're trying to say my proposition is you can plan ahead with detailed maps you can navigate on the trail so my gps tells me exactly where i am and so i don't get lost in the woods which of course has happened and so as a result they have identified exactly who their customer is they know who i am and even though it pains me i am willing to offer them money on a yearly basis because they do this better than anyone else and so they found their niche they found their persona they found their customer and they provide me value that i'm willing to pay for now here's the other example so if you are an elementary classroom teacher or you know somebody you could that does that you could probably ask him do you use class dojo in your in your room so you're probably not an elementary teacher just by statistically speaking but here's what it is 95 this is a huge market penetration they say 95 percent of schools use this app in their classroom so why in the world does everybody adopt it well you can see first of all it's free and so that's a pretty easy proposition and it does exactly what a teacher needs so all of your classroom tools in one place there's a good value proposition so you can see they throw an example in front of you how many groups do you want in your classroom you can see that they are grouping people with the ease of an app and they could probably just show this right on the screen in front of the classroom to say hey random groups today click or you might say what does this app do for communicating with my parents you could also do things like keep track of classroom discipline or give bonus points to students you can modify their behavior you can keep track of things you can translate in other words they have found what a teacher needs they have either lived in the shoes of a teacher they were a teacher or they know teachers so well through study that their app now rests in 95 of all classrooms here in the united states and so your goal then is to have a value proposition for your service that fits somebody that somebody might be plumbers it might be accountants it might be kayakers it might be chiropractors bicyclists it might be hair stylist so you don't want to say well my app is for everybody anyone that has a car no you want to have people that have specific needs people that have car seats people that have babies people that commute to work whatever their issue is you have an identified solution for them and so like class dojo or the hiker app they have picked a segment and they know exactly who they want to serve also here's the question about the motivation do you really need an app or do you just need a better website because here is a principle if you're thinking about spending a whole lot of money on an app you can serve a great deal of your customers through a properly designed website so this is called mobile first web design and you can see in the example that a properly formatted page is just as easy to use on a phone as an app is and if you do it right you can have one server one set of code one programmer and you don't have all the expense and hassle of an app store and so maybe you should think about does my service or does my solution really require an app or can i just make it better with a website so fortunately google has given us some advice on what things people prefer in which format so as you can see the top of the list is heavy on tasks that people want to use an app for so games why would they care for games well probably performance you have high speed graphics you have better downloads games just work better when they're an app how about tracking your physical activities you probably have builtin heart sensors gps accelerometers you can tell how fast you're moving uh listening to music navigation so there are certain things up here that are focused in on the performance or feature of the phone so obviously pokemon go is going to work with an app and not a website now if you look down at the bottom you can see the opposite of the spectrum so don't bother with an app if you're trying to do one of these things so search or browse the internet find things to do order take out find things to do or eat organize your leisure or business travel read the news so all of these are probably just as well done or even better with a website so just use your chrome browser that's already built in on the phone and then you don't have to worry about building an app so think about some of these issues before you go out and hire a mobile development team and invest a lot of money so one of the next things we need to do is think about the categories of apps that you might want to develop what's the competition in these categories and how much money can you make a second question is who is your app for and so knowing your user is the second video that i recommend that you look at next hi and welcome to the business of applications we're talking about mobile applications and the business of making your ideas work and so here's the agenda that we're looking through on the class so we're in section one right now which is motivations for building an app so in this video we're going to talk about the categories of apps and which categories are profitable which ones that you actually have a chance of in competing and perhaps the one that you're best suited for based on your expertise and so let's look at the categories out there and help you make a decision about that great app idea that's in your head which category would be best for you to compete in and so let's talk about some of the things that we could do so first of all fact number one if you're trying to sell your app you may get some money for it if you put a price tag on it if you do we can know this that the average price for a premium app on the app store is two dollars and 17 cents now that sounds pretty good if you made a million apps but if you're in the majority of people you're probably far below this because when you think of what an app is most people expect it to be absolutely free and so the best way to make money is not actually to charge money for the app itself but to get it in other ways and so you could probably think about getting inapp purchases or trying to sell advertising which apps do the best by the way so if you're trying to put a price tag on your app you should probably think of who is willing to pay for it notice at the top we've got technology and finance yeah both of those are kind of rich people things or they're actually pretty useful things that uh solve annoying problems look at the very bottom though if you're like me you probably think games are cool they're kind of neat to build and they're also some of the things that people don't want to pay for so you're going to have to come up with other ways if you're going to make money for your app than just charging for it now here's a principle that would make sense if you want to actually compare you with the average so really there is no such thing as an average when it comes to our apps so think of the big monstrous companies do you really think you're going to make something like amazon or you're going to make the next mcdonald's app probably not so if you're comparing apps think of how a realtor would come up with a price for a house you don't just take the average price for the city you take a look at your house and you compare the same number of bedrooms bathrooms same square feet location's pretty close and then you have a better idea of what your app can do so instead of looking at these top lists of the averages or the top 100 in the internet look at people that are doing something that is like what you're doing and so another way to do this is to try to compare on scale so if you know that clash of clans makes over 2 million dollars a day in purchases don't just think that your app can somehow make 2 million either so what you need to do is maybe divide so how many customers does the app serve and how much do they make in a day and you can come up with something that is a little bit closer to what you can expect a better way to compare yourself with other people in the app store is to use the median instead of an average and so you know in a median you just take the middle score of a value so if there are some really high end people which there are that way the median isn't so much affected so take a look at premium apps here so i just stole this right out of the google app play store and to see what they're advertising so what people are willing to pay for in an app can tell you something about maybe the app that you're thinking about building and so it looks to me like we have no games here we've got some tools uh the star walk i think that's a cool one where you can actually use your phone to track where things are in the sky and so sometimes premium apps are there because people are willing to pay for a service without having to look at advertising so a good piece of advice for coming up with the amount of money that you're going to make is actually not to think about the money at all it's to think about who your customer is and how you can satisfy them so if you can scratch an itch you can meet their need you can solve a problem they're going to eventually pay you whether you charge them at the beginning or along the way and so your priority should be to think of how to make a great app that they love to use let's take a look at the first category that you'd come across in most app stores i think most people would think of social media is probably the most common app that they've got on their phone and so it's a crowded field all of these things that you're looking at here are probably one or two or many of them on your phone right now they're huge though so think of how big the apps are and how far away you are of actually competing against them so if you're thinking about building the next facebook you could probably do that in a semester so one of the courses that we teach uh uses a social network and you build connections and you have a database and you can add comments and send messages to your friends and so technically we got the solution put together in one semester but realistically the app is still worthless because nobody's on the app the the real value of a social media app is how many users do you have and so maybe a good strategy for you to compete in this category is to think about augmenting or adding on to something rather than competing against it so unless you've got the next tick tock you're probably not going to bump somebody off these are tough categories to compete in but here's an example of something that you might think of if you were in social media so here's a tool it augments what facebook does or maybe you could come up with some kind of a twitter actual addon or something so think of the ways that you can make an existing app a little bit better now a great category for a beginner especially somebody that would be in one of my classes where you're learning how to program is to build a game so games are really a good place for you to start if you're just trying to experiment with the app store and build apps and try to get some customers not because you're going to make a lot of money but because games are a nice way to build an app that you can understand and what you can do instead of make money with your app is maybe just as good as you can add it to your portfolio what do you mean by that a portfolio is a collection of projects that you can show potential employers and you bring it to your interview you put it on your linkedin and you say listen i built this app and it's kind of like angry birds and it's got a bunch of graphics i used framework for building crossplatform apps i have a database i'm using a rest service i learned react and so if you've got all those keywords in there and you have this working game it's a really good project and i recommend that you do that if you're trying to get a job and maybe have someone hire you to be an employee for a company that builds apps and so you might end up working for pizza hut and ordering a pizza app instead of creating your own business but it's a pretty good job if you're going to be an app developer so i've got another video that compares the the prices and the salaries and the expectations about a web developer versus an app developer and it's worth checking out while looking at the chart here you can see that these are some of the most downloaded and they're also some of the most profitable apps that are in the market so social media and gaming probably dominate what we mostly think about about our phone purpose and what we do with it and so we're always on one of those two now look at this category this graph here is amazing um you can see that the value of daily revenue by category is like really skewed toward the games area and so twenty two thousand dollars a day is the average app revenue in the category then we split up the game category again and we can see that strategy games are the most profitable and so you might think oh great i'm gonna make a strategy game and get rich remember what i said about the uh the balance between an average and the median well this is where this math comes into play so the top game in the category back in 2016 was clash of clans and over 2 million dollars a day in revenue well then if you look at the 50th percentile which is pretty good you might squeeze out 150 a day well you could almost make a living on that maybe if you were just had no expenses and then if you look below you have the 20th percentile in other words the games that are probably the ones that you and i are going to publish they average zero dollars and so they might not even get downloaded another category that would be useful for you to experiment with if you're trying to get into the app market is this lifestyle category now for the life of me when i look at the apps that are in the lifestyle category i don't really see the theme what is lifestyle mean anyway i mean there's realtor apps and there's tinder and pinterest and it seems to me like baby monitors and eharmony don't have a lot as far as the commonality of how the app works and so whatever whatever this category means it it's it's something that affects your life so fitness apps is something i can understand what does a fitness app gain that's pretty good you can see that this graph here shows the top 200 fitness apps on their daily revenue whoever the first guy is he's making 45 000 a day you could make a living at that one and the average is 1500 so once again let's take a look at the the median score rather than the averages so the 50th percentile once again zero so expect that if you're if you don't have a billion dollar company backing you up you're probably going to have that zero number so when you look at averages you should probably just ignore them because they are not going to tell you anything about you and your experience at all take a look here this is probably strava so this would be a typical winning home run app everyone seems to like this one so you can track yourself you can analyze your workouts and share with friends and make connections so a great tool and it seems to be clicking with everybody that is into exercise and so that would be one of the better lifestyle apps that i can think of so the key of a lifestyle app is to find something that people do and make it so that it works really well for meeting their needs another category that is really useful and this one actually where you can sell things is the utility category so what's a utility well the utility is something that enhances the operating system or does some kind of a task for you so for instance this one here is going to figure out where your empty spaces are and make your uh make your phone work better so a utility could be any of these on these this category list here so you can see that things such as adding fonts for some reason chrome is considered a category of a utility i would think of you know things that make your phone work better things that encrypt your data things that make your spam calls go away those are good utilities and so anything that would enhance your operating system would fit in the utility category a close relative of that is the productivity category and so people are usually willing to pay for productivity if they're going to have something useful so these are some of the most commonly used things some of the services that people would use on a regular basis so dropbox cloud storage note taking microsoft office any kind of tool that is going to make your job work better and so productivity apps are something that you can probably come up with as well do you have a problem do you have something that you're trying to work on you have a notetaking app do you have some kind of a score card do you work with pictures what what what does your utility need to do and if you can find a winning solution you can see that sometimes we can actually charge people now utility apps is probably the one place where you don't want to put ads ads are annoying of course even people that play games don't even like the ads even though they get spammed with them all the time but especially don't put it in a utility app your utility is supposed to save you time not annoy you and so try to come up with a way that you can give them the free version and then go to the freemium model so that way they like their experience a category called shopping of course is going to be dominated by the big people such as amazon and walmart but you don't have to once again compete directly against them i mean you're not going to come up with carfax that's like just not going to happen right but what you can do is think about that strategy of augment rather than compete because people are going to be using their phones to make purchases so if all you need to do is make recommendations for purchases and then send them to somewhere to buy such as if you're working with an affiliate program on a store then really you have taken a cut you've taken the slice and you can make a living if you have enough people looking at your ad and making a decision so some kind of a price comparison now news and information another category that has a lot of variety in it so if you look here you can see that some of these are actual people that make news such as the wall street journal or the washington post once again good luck in trying to compete against an established newspaper what can you do well take a look at police scanner for example what they're doing is they're taking existing data and they're packaging it in a way that the user can see it other things such as your news aggregators so if you could come up with an app that is able to predict what the user is interested in you look at their habits and see what stories they read you can give them more stories that would be similar and you can probably make their news reading experience better and so you don't have to be a reporter you don't have to own the newspaper you just have to be able to organize the data and deliver to the user now here's a good category if you've got a specialty of what you know and you want to share it go with education so education could be anything like language learning or math those seem to be the two that are like the leading categories uh coursera is something that obviously you're not going to compete with if you've ever looked at coursera it's like universities across the world publish entire courses and coursera is just publishing those in a nice format but if you have some special content you might be able to sell it so for instance let's say you're an expert guitar player you could offer guitar lessons with your app or if you're going to help people learn reading or maybe english is a second language or if they just need to learn how to do a hobby do they need to learn how to ride their bike play ping pong they need to learn how to fix their car they need to fix an air conditioner i mean education is really what we hit the internet for and if you've got an app that can make it work then you've got yourself a market so here's a page that i thought was very handy for figuring out what kind of categories you want to compete in so this is kickstarter and i'm looking at the page called apps that were recently funded and so these are idea pages where you can think about what people are building now that really are not big yet and so there's room for uh competition obviously if these people are successful so you notice the first one that's on here it's called fluent forever it's a learning education app look at here the next one called seed time the fastest way to plan your garden kind of a utility free photo prints that one looks like more of a business than it is an app you can see that we got scripture listening uh we got learning to code so two educational apps here so i would i would go through this and just get ideas from who else is out there that is at pretty young stage in their in their life of their company and you might find some ideas that can help you trigger what might work for you so here's a list of the top uh educational category apps right now and you can see that we've got a few things that are doing math and language it seems that's a pretty popular one so let's sum up here what we're trying to learn so perhaps the best lesson is if you're trying to pick a category for building an app and choosing the idea that works for you then go for this first principle pick something you know a lot about because if you're trying to solve somebody else's problem that might work but it's going to take some very careful research and interviews and you're probably going to have to walk in the other person's shoes for a while but if you've already got an idea you've already got a problem you already got a field that you're good at then you know a lot of the things that you need to do principle number two make sure that instead of focusing on which app is going to earn the most money think of it maybe as which app can i build that will make people super happy with my product i'm going to make something that people love to use and then you can figure out the money later and so that's maybe the best principle for which order you think in and part number three if you have a mega category such as social media and you know you're never going to replace amazon or facebook then what can you do what you can do is create an app that can make the experience slightly better for the user and so those principles here are going to help you in which category you want to choose to build your app one of the jobs that you have to do if your app's going to be successful is identify a problem that people have and so check out this video that helps you do that the second thing is you need to be able to identify the user that you're trying to serve with precision you know exactly who's going to use your ad so check one of these two videos out for the next step in learning the business of apps hey welcome back to the business of applications in this course we're studying some of the motives and some of the design that you would do if you are building an application so we're in the first part of the course still we're talking about the motivations for an app but as you can see there are other course items that are coming so stick around and if you want to see them all make sure that you subscribe my name is shad slooter and i teach application development at grand canyon university so let's get into this subject today so we are trying to find a problem to solve that's pretty much fundamental when it comes to designing an application you have to ask yourself what's the motives why are you doing it and in this video we're going to talk about some strategies that you can do to discover problems that people have and how you can solve them here's the principle of what we're trying to present here in just one sentence that an idea that does not fulfill a need is really not a business opportunity so you've got a great app but nobody cares you might as well not even build it so here is a analogy that has been used in many different situations like this when you talk about coming up with a need for an app so are you selling candy are you selling vitamins or are you selling painkillers so let's talk about what that means because we're obviously not selling any of these but we're using them as an analogy so kevin fong gets credit for this uh analogy here so he's an entrepreneur from silicon valley and uh this is his quote so he says we divide business plans into three categories candy vitamins and painkillers so he dismisses candy as just junk it's things that we just discard without much thought we look at vitamins we know that they're good for us but don't really use them on a regular basis and he says we really like painkillers now when he says we he's talking about the venture funding people these are the angel investors these are the people you need to talk to to get money to make your business work and if he says we really like painkillers he says you must have a problem identified and people are willing to pay you for it then he says we especially like addictive painkillers and so painkillers are the products that you can't live without so let's look at each of these categories individually so a a piece of candy is something that is perhaps what you would call a game app something that's cool it's fun it could be a fad and disappears quickly and so that's the danger of of of a fun app so i know it's fun i'm wasting my time but i like it so have you ever played trivia crack yeah i played it too it came and went like within months maybe you're not the right age group to remember it but it was certainly a piece of candy it was fun they probably made a lot of money but it didn't stick around how about this one though clash of cl clans uh that certainly is candy it's kind of eye candy it's fun to play with just recently i checked the stats on it and they made 20 million dollars last month in revenue so even though candy can be a fad if you sell really good candy you're going to sell a lot of it here's the idea of vitamins though if you look at a feature or an app and you say this about it you say that's a really cool idea i could probably use it i mean you can justify it and say it is nice and all but you might forget about it you say it's good and then it doesn't stick around so for instance i have the amazon echo um alexa in our house they bought it for my birthday and it's fun to play with right so i can say alexa play some music and then off in the distance musical station based on your listening history alexa stop just a minute i'll be right back okay so i consider alexa to be fun uh but you know if you took her away from me i could probably still do life just fine so she's convenient to yell at to argue at and to have you tell some jokes but really she's in my case she's a vitamin she's nice to have now the painkillers though are a different situation so when you say this when you say something's wrong i need this now here's my credit card and by the way what did it cost that means that you've got a product that suits a need so well that you're going to be you're going to be covered with customers people are going to come to you asking when they can sign up and so sales are really easy and it's probably an addictive app because if people really want to pay you that much they're going to so i looked at my computer and i thought what are the apps that i must use i can't live without and pretty much anything that is made by google seems to fit this category so for instance could you live without a good search engine can you find your way around without maps can you find stores can you locate things can you send and receive email without thinking about gmail really those three are pretty successful now microsoft has office which has pretty much become the default standard for any kind of the utilities that i work with i know there's free alternatives but office seems to just come back all the time for instance right now you're looking at a powerpoint presentation i've certainly tried to get rid of powerpoint but i keep coming back to it so the idea is that you want to have a solution that is addictive and people cannot live without so that's really what a painkiller so here's a nice quote that says once we come to depend on a tool nothing else will do and so you've come up with a good painkiller solution for your app if you can build this app you're going to be rich you're going to have many many users but you can see that sometimes apps fit into multiple categories so let's talk about facebook is facebook to you a piece of candy is it a vitamin kind of nice to have or is it a painkiller so look at the first guy obviously on the top row he's bored and to him facebook is as good as playing a video game so he might just pass the time and then the second one is perhaps this mother here who is probably more dependent on facebook she's talking to her friends she's scheduling meetings she's finding out what's going on but look at the grandma down in the bottom she is isolated she's far away she lives alone to her having facebook or zoom or any kind of social media to her is a painkiller it is something that she must have and so i i certainly uh visiting friends that are like this have discovered their dependence on it uh you know they ask me for technical help to say i gotta have my i gotta have my app this is the only way i stay in touch with my friends and so facebook would like to be the pain killer for us all uh for me it kind of fits somewhere in the uh nice to have category i honestly don't check it very often so a single product can be different things to different people and so don't just judge your product based on one person's opinion so here is another way to find out if you're solving the problem think about higher needs rather than the immediate need of your program what does that mean so for instance our higher needs are things like we have a desire for fulfillment or you might say we have a desire for belonging that's certainly a higher need and these are strong needs need for recognition i mean look i'm checking how many people are subscribed to my channel what in the world is the need here so youtube is solving a need for me that i hate to admit but i'm getting recognition through this tool how about security security financial security security in your relationships security of your home physical security the security of your job future and so sometimes products can help us with needs that are just as basic as food and water now here's a way to find out really what people's motives are this is a technique that was used in the toyota motor company and probably still today it's called the five wise and the idea is that you ask a bunch of whys to find out really what's at the bottom of somebody's request and so it requires literal digging and digging into their mind and into their psyche so you define the issue by asking the question why five times you say why is this happening and they give you an answer and then you say why is that and then you ask then again why is that and then finally when you get to the maybe about the fourth or fifth level there's really no specific number but somewhere down there you're going to find that there is a stronger reason than the one that was first given to you so in the case of toyota they ask questions like why did the production line stop and then the quest the answer is well we ran out of parts and then they asked well why did we run out of parts well the the manager refused to order uh extra supplies and he said why is that well he was trying to do lean manufacturing and he didn't want to spend the money on excess inventory well why is that well our stock price is getting hit because we have not used their money efficiently and so you can see that there's reasons behind why the production line may have stopped and so then they can address those bigger reasons if they can identify the whys behind it now when we talk about a product we do the same thing so we would come up with different solutions depending on how the user responds so let's say we want to build an application that produces recipes now what kind of recipes do we want we want ethnic recipes do we want home cooked do we want quick do we want diet so all of those questions are going to be asked at the uh at the panel you might have of users and your interviews and so let's ask this so somebody does respond to you in a request for your information to say hey i'm building an app that's going to do recipes and you say you need to make them or you need to use them so why is that and so the person says well i'd like to eat healthier well don't just stop there you say why do you want to eat healthier well i want to live longer okay so why do you want to live longer well that's pretty obvious i want to see my grandchildren okay so why is that important to you why do you want to see your grandchildren are they not annoying enough already when they're visiting you and she says family is important to me so there is a value at the bottom of this thing about i want recipes and really what this person says is i want food to bring my family together so that's a pretty powerful need isn't it and so if we're building an app to serve this person we would have maybe a slogan right this on the left side it says the right food brings family together now that sells to this person in particular but we might ask the same question and get different results so we might have to slant our advertising or the design of our app to this the right food can make you pretty so listen to this question so this person says i want new recipes okay why is that well i want to lose weight okay why do you want to lose weight i'm 30 pounds overweight okay why are you overweight i eat when i feel bad i think i do anyway and then why is that because people laugh at me often so these are obviously getting into some sensitive areas too and so if we can provide something to help an uh a person overcome their deep emotional problems then we've got a painkiller app so the right food can make you pretty i don't know maybe that's a lame way to advertise it but if we can make a product that will help people lose weight not just to get thin but to be liked then you've got yourself a painkiller app how about this one the right food can help you get ahead so same recipe app but we've got a different motive going on now so this next interview the person says to us i want new recipes and so we ask why then they say i only have 30 minutes to cook okay why are you in such a hurry i work full time okay don't stop there ask again why do you work full time well i want more money okay obviously what you have isn't enough so why do you need more because wealth is a status to me and so the conclusion is time is money right so i want more time i want my food preparation to take little time i've got bigger things to do i've got bigger fish to fry and so we could advertise the convenience of these recipes as well so now we've got ourselves we've got these different types of opinions and remember the goal here the video is to teach you how to identify the problem you're trying to solve so if your solution is build an app for recipes and you talk to a variety of people you might find that your initial reason or what you thought was the reason for the app is not actually the reason of what your users say so i love my family i feel ugly i'm very busy these are all reasons that are being input into your why you want to make your recipe app so if you do some research and you talk to a bunch of people and you start to hear the same things over and over then you start to make conclusions about who we're going to serve who's the first person on our list of of things that we want so most of the people that we let's say we talk to are saying i want to find healthy food and so comfort and quick and easy were not the highest priorities so the next steps for us would be to build an app or at least to design the features about identifying the nutrition about maybe the the benefits for the food that you're eating and how it can affect your health so in this scenario that i just set out to you you would obviously then fixate on healthy food and why that works so if you'd like some more information about how to discover that niche where your app can suit a need that no one else is meeting take a look at the next video about finding a niche if you'd like to take a look at all of the videos in this course about building apps in the business of apps then take a look at this playlist here and make sure you subscribe and join me for class next time thank you hey welcome back to the business of applications this is a series of videos that i'm working with my class on how to make your business thrive using applications and so this is a seven part series and we're in part one right now which is about the motivations of building an app but you can see that there are other chapters that we're going to cover here so if you like what you're seeing here make sure you subscribe my name is chad slooter and i'm a professor of computer science and software development at grand canyon university so please join my class here as we learn the business of apps so in this video we're talking about the idea of finding a niche in the market and so since it's probably pretty hard to compete against the really big mega apps we need to find something that makes sense for you and so there's some strategies in this video for making your product work so let's talk about a product niche what's inside of it well when you think of a niche in nature you think of something where there is little competition and so that's what we're trying to find here in your market is to see where there is unmet needs also make sure that there is a market so you might have a great idea because nobody else is doing it but there's a good reason is because nobody wants it and so you have to find a overlap here between what people want what's not being met and then also it would be nice to make some money to be able to pay for your app and so with these three intersect we would find a niche now these are obviously hidden because if that was a problem that everyone knew about then there would be an app in that niche already and so what we're trying to do is figure out where you can find your niche now the word niche usually comes from biology so when you think of a place where an animal lives where there are few competitors and that is able to thrive and so that is the idea of finding somewhere where no one will bother you and so if you think of the dung beetle this is a great example of a niche where nobody seems to want all the dung that's rolling around on the savannah in africa except for these beetles and they've got it all to themselves so if your business is collecting dung then there aren't a lot of competition for you so here's what it looks like in the market so if you hear somebody say we are the uber of or we are the amazon of you've got this mega leader in the category and you are trying to do similar things but in a smaller category so here's an example so this was what something i found on reddit in the app ideas thread so taskrabbit is one of those service apps where you can find somebody that's willing to work on something that you're willing to pay for and then taskrabbit takes a cut and so they said hey there's a unmet need here personal beauty care and so perhaps this is an idea wow that's an idea so maybe you could develop it it would take an entire business of course but get started so one way that you can find a niche is to see if there are new areas opening up that weren't there before and so that's called following the trends so if you were to just do google trends you can find what's going on month by month day by day or maybe over a longer period of time such as what people are searching for in the year so for instance 2020 it was a year where these were the items that were trending they didn't appear before and then they showed up so maybe you could come up with an idea that way more than likely most of these are just ideas that are in the media so what's a better way for finding a trending use pattern for mobile apps so i did some google searching to find out what trends are happening in mobile applications in general so look at here here's a four trends that are shaping 2020 so this deals with technology so the first trend is they see that pcs are still in place and what's the next one here number two wearable ownership is growing okay so there's an opportunity do you want to make something with a watch or glasses so it looks like that's on the trend upward how about this one the smart home market is growing so connecting your devices that's kind of an iot thing so is there an app opportunity there so i know for sure that in the canyon ventures a section of the university where i teach there are companies that are in this market what did you say canyon ventures was it's the entrepreneur startup section where businesses come and recruit students to work for them so these are new companies and they're growing so smart home market is one thing that i've noticed that was over there let's see what else is here gaming gear is busy well 2020 was the year of the pandemic and so gaming was a major major growth area so maybe those are some things that you could find as trends so google places like this to see if you can learn something about what's coming so here's another site that i found that had something about trends and mobile development so here we got 15 of them let's see if there's anything that we could follow as a trend here's the trend that says iot is growing so application integration looks like the trend is going to continue off into the future uh apps for foldable devices oh i don't have a foldable device but maybe that's on the future 5g can you take an app and take advantage of faster internet connectivity how about number four uh wearable devices that sounds like a previous blog item that we saw before beacon technology so beacon technology what in the world is that it looks like we can have down here a description that says clients install this app and when they go near another place where there's a beacon they get a notification i'm kind of skeptical that that will actually be a trend i really don't want people annoying me any more than they are but hey they say it is uh mobile commerce well that's kind of like a given artificial intelligence okay so that's pretty much a good trend mobile wallets uh augmented reality i would bet on this one as a trend and let's see chatbots uh superior app security i'll vote for that one predictive analysis so that way we can have more ai and then ondemand mobile apps i kind of like that so the idea is do some research figure out what the trends are and then see if you can come up with something that is going to fill a niche before everyone else jumps in on it here's another idea if you can find an app or a process or a game or something that exists and add a feature to it add a twist and make it yours so here's an example words with friends it's really just scrabble but then it's added the multiplayer dimension to it some social media and you've got yourself an app that is still very strong and popular then you could also say well maybe words with friends just took a regular board game but you could also go look around at apps that you know exist so you look at one app and you look at another app and you think there's some overlap between those what are the features that i could do so if i could combine app a and b then i get what's called the twist and so you can invent a new app based on what you've already seen others do so really that's what a lot of inventions are it's just combining two other people's ideas into your own so there's hardly anything that's actually original here's an example of combining two apps so waze you haven't used waze it's basically a map like google maps and it allows you to talk to other drivers so you can plant a little pin on the map that says hey there's a police waiting here to give you a ticket and so essentially what they've done is take google maps and they've added some social media and enhancement to it and kind of made it a gamification so you can win points by taking trips whoever thought that driving would be that much fun but anyway waze was purchased by google for probably billions of dollars and so it was a successful spinoff of just the standard driving app now if you're trying to find a niche then maybe the most obvious advice of all is do your own thing what that means is do you have a specialty a need that you have to fill yourself there's not an app that exists for to do what you want to do for example here's an a fill your own need item just a quick glance at this shows me somebody came up with a brilliant idea to fix an annoying problem so this is a magnetic wrist and so it's just a velcro strap that goes around your wrist and with magnetic plates in it and you can glue all your nuts and bolts and screws and drill heads and even the pencil so you've got yourself something like a pocket but very much accessible or onehanded used pocket and so what a great idea this person came up with a simple solution to a problem that annoys almost all of us so i can see this as an invention for someone on their own needs but then quickly spreads to everybody else so what app would you build to fix a problem that you have and then only worry about finding customers later because if you like it more than likely somebody else will so if you're trying to find a niche then think about improving what's already out there so take a look at the landscape and see if you can fix it so when you compare competitors you're going to find features that are similar to apps that you would like to build but is there somebody that has an app that is missing a feature or you see it in the user comments for instance and the reviews in the app store if only this app would that is like free market research for you if you'll read through those comments and see what people would like the app to do that it doesn't and so you find a gap there it's called a niche also you would find if people are being annoyed so if advertising is becoming the best way for a certain app to make money you can guarantee the users are going to be annoyed maybe you could come up with a replacement for it you can sneak in on market share and then you can figure out later how you can be the annoying advertiser how about this if you're looking for competitors are you competing against microsoft or google or are you competing against a single programmer or a small team so that'll tell you a lot about what your competition is up to so there's only infinite resources at google and microsoft so don't even bother if you're trying to reinvent google maps now also think about updates if you look in the app store you're going to see that some people build their app and then forget about it so has it been five years since they've updated it there is a niche you could probably just walk right in do an update to the current ad and you can start picking off users how about poor ratings that's a pretty obvious sign that there's opportunities here people have a need that is not being met and there's your competition red flag to say i'm going to step in here and fix a problem that people feel but what happens if you look at your competition and they have good ratings well that just tells you that it's free market research as well that tells you what people like and if you build a similar app you better make sure that some of those features are for you so back to words with friends so if this is one of the most popular games in the world then tell me this when i look at the reviews why in the world are all the reviews currently showing up as one star and you look at it it's all about the ads and about how annoying the program is to work with and so people want to play this game but they really don't like to play this version of the game there's a niche they're opening the door for competition uh here's another one i've actually paid for this app many years ago because i wanted to have a good place to show podcasts and so i probably wouldn't buy the app today because if you look here you can see that most of the users are annoyed with it every time they do an update something breaks and so i don't know if a podcast manager is really a good app anymore because apple and google have pretty much taken care of that need right in their operating system but if you wanted to build one this one here would certainly be a good competitor to try to beat so do your research come up with a chart and go through um a bunch of competitors that you find that are similar to the app that you have in mind and so you just put down a chart to compare what's their popularity what's their notable features how do they monetize themselves what's their company size when did they last do their update and what kind of reviews are they getting and so when you have a comparison chart here you're going to see perhaps opportunities arise so this might become a large spreadsheet as you mine the data to find what you want so make sure that when you're doing your comparisons that you're not trying to compete against the monster companies do similar apps that are about the same size and complexity as what you're doing learn from what they do well and then see if there are some opportunities where they leave the door open so that's your ideal so where are you going to find this information so uh for beyond pod i did a search there at sensor tower and for this app you can see that it's kind of an c minus grade so what's the competition for what you're trying to build go look at their ratings go look in their app store and then check them out here on sensor tower to see if there are opportunities for you to take advantage of so that's some advice for how to do a niche now the next stage is to get some users together or potential users and ask them a lot of questions it's called listening to the user and so check this video out to see some advice and how you can do that well if you'd like to see the entire playlist for all the lessons on the business of apps then i'll put it here as a playlist hi and welcome back to the business of applications this is a course where we talk about the business of planning designing marketing your application so we're in the middle of a class that has several sections we're in part one right now which is on the motivations for building an app so we're identifying the problem and our users and trying to come up with what fits in the market you can see that there are other topics that are coming up so make sure that you subscribe if this kind of thing is interesting to you my name is shad slooter and i teach software development at grand canyon university so please join us for class and tell us what you're doing now what we're going to do in this video here is talk about the elevator pitch or you might call it listening to your users so you're trying to talk to real people about an idea you have to see if it actually is grounded in reality so here is what a lot of people would do in their elevator pitch so when you're an elevator pitch is usually about getting a job or trying to sell your business and you've got about 30 seconds and so here's your goal state what the problem is tease with a solution and then tell them how you can add value so here's an example of an elevator pitch so you might say the problem is we have a process that currently takes our employees about 30 minutes to accomplish and we can make that better if we put some software in place as a matter of fact my value proposition is that you can reduce this task to just four minutes are you interested and of course 30 minutes to four minutes sounds like a great value proposition so that's kind of the idea that you want to do when you're selling your app in one sentence you can describe what your app does and why people should pay you for it so what you should do then is you should probably have some kind of a prototype or at least drawings or something that you can show users give them the 30 second pitch about what it does have them look at it and then honestly watch them don't try to argue with them just see what they say you've got yourself a maybe a oneminute time frame window to get their first initial reactions which are probably accurate and then take the lessons with humility and either throw away your idea or modify it or run with it if people seem to like it so don't worry about your idea being stolen ideas are cheap everyone has a great idea but it takes a lot of work to make an app and so if you have an idea without any execution you've got nothing and so the app store has a a lot of people that put work into it they don't have ideas in the app store so like i mentioned be humble and be open so feedback is going to come in various ways if you show your prototype or your idea to somebody and they just are kind of confused means you're probably lacking clarity or if they say that's the stupidest thing i've ever seen don't argue with them just see if more people tell you that it's really that dumb however if you get a few good reactions like this one keep moving because of course your mom is going to think it's great your friends might be a little bit critical for you but strangers see if you can get some people to evaluate it objectively and if you can get some positive ideas then maybe you're on to something so speaking of ideas go to reddit there's a whole reddit subreddit on app ideas and here is where you can read about other people's ideas and post your own to see if there's some feedback so you can go ahead and steal right here because as i said ideas are cheap execution is everything so post your ideas or go look for ideas so make sure that you get the process in order so this here is what some people would plan for their order of operations they would say i'm going to create this great app and i'm sure there are customers out there which will then lead me to make some money so unfortunately this is probably a failure you got to find this in a different order so start it this way find the customers give them an idea of what you're going to build so build something very simple or at least draw some pictures that don't take a lot of time investment once you have the users that are going to tell you yeah i think this is going to work then you can go ahead and work on building something great and then following that you'll have the money so the next critical step in building your application is to make a user profile how to find the ideal person you have to be very specific so check out the video here on targeting the ideal user and if you want to see the entire playlist i'll post this here as the link as well so keep watching with me and subscribe and thank you hi welcome to the business of applications in this series of videos we're talking about how you can take a product and turn it into an app so the business part here is got several topics and we're in part one right now which is about the motivations for your app and so we're going to get to the others but so if you're interested in building a application and knowing how the strategies work we're looking at best practices for all of these topics so make sure you subscribe so my name is shad sluter and i teach software development at grand canyon university and so i'm inviting you to come to class and get an a plus education so in this video we are talking about a task called know your primary user and so knowing your users is one of the most important things that you can do early on in the development of a product or service so having a very targeted user is going to make you an effective person for how you design your product and how you interact with your people a piece of advice is make sure that you have a narrow enough focus about who your customer is so that you can say i have at least 100 true fans instead of a lot of publicity from people who really don't even care so the goal of this video here would be for you to have identified who the person is that is most likely going to buy your app or use your service and so you can literally come up with a profile of the age the type of work they do how much money they have what kind of hobbies they would do what bothers them and so if you have all these relevant things targeted then your job of finding out what your product is supposed to do will become easier so one of the questions might be can you just invent this profile or should you check to see if they exist in the real world and so trying to find out if these customers exist in the wild is part of the strategy here so one way that you can actually do some experiments to find this out and verify your assumptions is to create what i would call a coming soon page so here's an example so let's say you have a great business idea we're going to call it tech and the idea is that we are serving freelance businesses so single employees that are trying to make a living and so this doesn't exist it's just a vaporware you might call it but we would advertise with a website like this to describe what our features are and we would uh post google ads to see if we can get people that are searching for our type of service and if they click it they would be brought here and if they are willing to enter their email and ask to be put on a waiting list for when your service launches then you've got some data that you can compare with how many people click the ad how many people see your product and actually sign up or how many people just bail and go away so these are great ways to do experiments with limited amounts of money no software development and you can find out if your ideas are actually going to work in the real world here's another one go blog so go blog is in the works it says we're going to have a blogging community for people who are passionate about everything so this obviously exists already but we're going to see if people are willing to sign up for our service and so you have a landing page like this here's another one so uh here is a more of a longterm one so i have somebody that is trying to get paid it says get jobs get them done get paid with work week and do you have a small service work week is all about getting your paperwork out of the way does this sound interesting would you pay for this service if so go ahead and sign up so you can find out if people are interested now also this is a nice mailing list because if you actually do launch your product maybe a year from now you're going to have a whole bunch of people that are actually willing to download your app on the very first day which helps a lot with the google services here's another one here so a design and prototyping tool so we can take a look at uh tools to build apps so you might be the target audience on this one so we can build prototypes without coding here's the list of features looks like it'd be a great service so be the first to get on the list and get this installed on your phone if you're interested go ahead and subscribe and if you're ready for this we are ready for you so make sure that you can get some feedback about realworld situations so putting a landing page out there is one way now check your assumptions because you are probably convinced that your app is great but that's not the right answer you need to find out if other people are feeling the same way so conduct interviews start with your friends your family work with people that you meet and ask them these questions so how do you currently do activity x so for instance how do you currently manage your freelance operations that would be a good question from one of the examples we just looked at do you like your current process if so tell me about it if not what would make it better and then i show you the solution and here is the screenshots this is the outline this is what i think will happen do you think this would help you and then please explain and so this is a great way to verify that people would buy into your app and hopefully you have honest feedback to say nah or yeah and so then you've got something actionable so where are you going to conduct these interviews where you're going to find people that are willing to talk to you hopefully you have some targeted spots well you can start online so i did a quick search here for some comment reviews on youtube so you could publish a youtube video talking about your service you could sell ads to get people to watch it and then ask for comments to say is this a great idea would you pay for it so here's an example so apple just launched the purple iphone now my opinion of it was seriously apple has billions of dollars and brilliant engineers and the best upgrade they could come up with was purple however looking at the comments of this youtube i can see that there's a lot of positive feedback now i don't know are those people that were hired by apple to go out and provide some good feedback or these actual users so that's unknown but anyway there's some feedback that you could use as some research here's another go to reddit and sign up for the thread called app ideas and you can post your idea people can tell you whether it's a good idea or not or you might discover some other people's ideas now this specific idea i kind of liked have an app that uses gps to track your walking or running or cycling miles and instead of just showing you the map overlay it against a fiction map such as middle earth and you can see how much progress you make on a daily basis before you get to mount doom and so you could do other maps uh fantasy places so you could go to narnia or middle earth or you could have people crossing other continents you could climb mount everest if you were doing a stairstepping app and so you could have people set goals and have some fun doing it so this app doesn't exist it got 38 up votes it looks like so apparently someone thinks it's a good idea so you could go there how about this you could just come up with your own web page just say i'm gonna launch this and start to advertise it and get feedback from people so it might cost you a few dollars to set one up but you're going to have more information before you actually start spending the real money about building your app here's a great way to get user feedback in your own town so meetup is a nice app and website where you can find special interest groups in your community so i've certainly found a bunch here in phoenix where i live about software development and everybody at the meeting is looking for a job or they have interests in finding other people that are doing the same thing that they are and it never fails that people go there to learn from each other so we learn about who the companies are that they work for you learn about new software you learn about new techniques and this is a great spot where you could do informal interviews when you got a drink in your hand and you're just talking to people and trying to pitch your idea getting the feedback that you need show it to your friends show it to your family show it to coworkers show it to anybody that would give you the time and watch what they do so you can see their feedback whether it's confusion disbelief or maybe you've got some good ideas in there so refine your idea based on what they tell you if you got some money you can have other people do your reset search for you such as mintel so you can see that they will sell you a report from anywhere from 2000 to it looks like about five thousand dollars and they will actually do market research about trends about here it says families in the uk what they're doing uh health and wellness in china so you can find your report here and if you've got the money you can save yourself a lot of time so they'll tell you if people are willing and how willing they are to spend their money on certain things uh here's an example from mintel so about research in the united states so what people are doing with insurance and for forty five hundred dollars you can answer that question so if you've got the money you can save the time so here's another example of mintel's market research it says here hbo now users are twice as likely from any other streaming service to cancel their subscription when a specific show ends okay so if you're trying to do market research for streaming services you would want to know what did mint or what did hbo do that causes people to leave them so easily and what do other people do that makes them sticky and so you can gain insights and adjust your plans for your own product with results like this here's a great way to conduct your interviews first of all listen you're there to learn because the expert in the conversation is the customer you are trying to gather data you have a proposal and your your whole goal is here is to experiment and test it and see if it is as valuable as you think it is and if it's not you want to know why so understand what their problem is so your solution might not be quite right but if you could tweak it it would be the right product for them show them a prototype to see if concretely it matches what they believe so showing a prototype is a lot better than just explaining an idea the more specific and graphic and concrete you can make it the better they'll understand you then get a reaction so listen for suggestions see if they're confused see if they're blase you can measure pretty much on scales of 1 to 10 and what they feel like and actually give them that opportunity to rate what they believe with a number and so these interviews then are going to provide you with a lot of good data another way to do this is to conduct what's called focus groups and so you can bring people in and provide them benefits such as money or a good meal and just ask them questions so people will sometimes give you their time if you make it worth their while you can also hire these focused research groups from other companies that do surveys and i don't know if i would find them as a great value or not i think you'd probably have a good experience of doing it yourself and spend similar amounts of money but i know that they're out there so if you want to do focus groups you can get some more information so let's take a look at an app that i that i said i used in a previous video i said i used all trails what would an interview look like if they were coming up with the plan and so they look at me i'm a hiker i'm a backpacker and they ask me these questions so they would say currently how do you find good places to hike and i would say i read magazines i look at google images i look at the map i watch instagram and then i try to go from there but i really don't know if i'm finding anything good or not until i actually show up so how does that work for you the information is usually incomplete i must make a guess and so i would like it if there were actual more concrete suggestions so what features do you like in our solution well i would say i'd like to have photos of the hike the park where i go to i want to see what the national park trail looks like i want to have actual reviews from people that hiked it maybe just a week ago is there snow on the trail or is the bridge out those kind of informational tidbits are really important on user reviews so to me it looks like they did their homework they found their ideal users and then they asked them these questions and they incorporated exactly what was needed so like i mentioned earlier in another video i pay them money on a yearly basis which is kind of painful because i don't like to pay for software but in this case it's very well worth my time here's another application that i purchased so some time ago i was a math teacher and i was doing tutoring on the side and so i was helping people do their high school trigonometry their calculus and one tool that i kept buying for my students was wolfram alpha a strange name but it is the ultimate graphing calculator it can solve problems and show you visual solutions and so if you ask how do you currently solve math problems i use pencil and paper i use inflection points and vertexes and it's tedious i will pay you whatever it takes because you are you are creating a solution that that solves a painful problem for me and so a lot of my uh students paid for this on their own based on my recommendations so they obviously know their audience as well that's my point here is that they did their focus groups they did their user interviews and they met exactly what the users wanted now here's what's going to happen then so you do these interviews and you're going to have what you think then is a pretty good idea of what people want and so you must do these because if you have this we will build it and they will come attitude if you think that way you might spend a lot of time and effort when they won't come now this i think this comes from field of dreams the movie where uh was it kevin costner decided to put a baseball diamond in the middle of a cornfield and he said if we built it they will come and of course it's a horrible marketing strategy if you build it they might come so make sure that you verify your assumptions with interviews and tests pay for the google ads if you have to pay for the interviews because the money you invest will be well worth it and so what you're standing on right now is the left side of the cliff you are looking at what current data is you have uh other models to follow you have businesses that you can imitate you have track records in history but what you're trying to get to is this vision to say i'm pretty sure they'll come and so before you take that leap try to close the gap by verifying things let me give an example of a company that did exactly that so zappos owned now by amazon was a startup company some years ago that wanted to sell shoes online so they had an interesting problem they didn't know if people would actually buy shoes online so instead of building an entire distribution system they started a website and advertised some shoes at the current competitive retail price and they said buy shoes from us and so people would fill in the form and click buy and they would get an email so how did they fulfill their orders well amazingly zappos literally went to the store where the shoes were sold so they went to their local department store bought the shoes went to the post office and mailed them and of course it was a huge loss they took money to buy the shoes and the postage was completely expense right out of their pocket as well as the time and effort but their point wasn't to make money selling those shoes their point was to prove to themselves that people were willing to buy shoes in the mail and the experiment worked and of course zappos is worth quite a bit of money today and they're owned by amazon and so what you want to do then is to verify who your user is and whether he or she is willing to use your product and if it doesn't match then you can abandon the idea without spending too much money or you can adjust your idea so it fits exactly what your users need the next step is to figure out how to design the perfect application and so that's the next video and then if you want to see the rest of the videos in this course then check out take a look at the playlist here and you can follow along on some of the other topics so thanks for watching and welcome to class hi welcome back to the business of apps this is a series of videos that i'm doing with my class right now about the business process and the design of building an app and so you can see all the different topics that we're talking about here so we're in topic one right now which is the motivations for building an app and what i'm going to do is give you an activity so if you're in my classroom i would actually assign this and grade it to you if you're just watching along then take a look at what i think you should do next so what i'd like to assign is something to listen to about airbnb and lyft so these are obviously two mobile applications that are very successful leaders in their world so the first is an interview with the founder of airbnb so this appears on a radio program for npr called how i built this and so it's a very interesting interview it talks about the story behind how the business airbnb came into existence so this doesn't really show a direct line from point a to b for this business plan uh at the time it seemed very strange why would anyone want to stay in a stranger's home and why would you let anyone come in and sleep in your living room and so how did they create a new business model that has now control of more hotel rooms than any other hotel company in the world the second interview is also from how i built this and this one comes from lyft which is also a mobile application and they grew from a campus ride sharing service into a an uberlike company the greatest competition that uber has really and so with these two different interviews i'm going to ask you to take a look at five questions and so if like i said if you're in my class i'm going to ask you to write these out so the first one is after you hear these two people talk i want you to answer the question what is the core business of airbnb and lyft each of them have a different core business obviously but what i'm trying to distinguish here is that the app itself is just a means to an end and so if you're thinking about app development and growing it into a business um think in reverse maybe and so ask yourself what does airbnb do and why do they need an app to do it second question how does the mobile app enable them to function could they do it without the app could they do it without computers and is there anything secret about it that would make that success and so they had to do it at this time and no other to become in the business that they are also think about a wider scope so what besides the website or the mobile app does this company need to provide successful service to their comp to their clients so do they need people to answer the phone do they need quality assurance do they need sales people do do they need drivers do they what do they need to make their business run and so if you are thinking about i'm going to build an app business look at these two examples that are clearly app businesses and think of how much else they have to do besides create code and a website and then here's another one so besides mobile apps how else do they communicate with their customers so the mobile app i think is central but what other services do they do and then finally why are these two companies successful literally you could build either one of these apps as a semester project in one of my classes you could learn all the technical things about programming the interface putting the database together scaling it even on the cloud but yet you wouldn't have airbnb or lyft when you're done you would have an app with no users and so how did they go from the app stage to millions of user stage what was the secret what was the process that they followed what were the challenges that they faced and so what i'd like you to do in this activity then is to consider these five and then also consider your own project so likely you have something floating around in your brain don't you i mean you've we've all got an app that we would like to make and so i'd like you to then take a look at these same questions and apply them to what you're working on now or what you're dreaming about now and so using airbnb and lyft as case studies we can learn a lot about our own selves and perhaps if we have that in our future if you're interested in looking at the motives for how to build an application and some of the questions you have to ask before you even code then i have a video to check out here also if you'd like to look at the entire playlist for the business of mobile applications then take a look at the link that's here and thanks for watching and please subscribe hi welcome to the business of building apps in this video we're going to talk about an assignment that i'm going to give you if you were one of the students in my class so the business of building apps has several chapters and we're here in chapter one which is about the motivations for building an app so we're going to call this assignment activity 1.2 and so what we're trying to do here is examine the current marketplace of applications and see if there's any results that we could glean from the market and where there might be opportunities for you to build an app so the first thing we're going to do is look at app annie so i'd like you to go to this address and look at the top apps um what we're looking for are trends or for any gleanings of information about what makes an app successful or if it is so unlikely that we are going to succeed against them to see if there are any opportunities where we could find something that we might be able to compete against so for instance you're probably not going to replace minecraft or youtube or roblox as you see here but if we look down the list we might see some opportunities so a second source of information that i want you to examine is here at sensor tower and so you can see that it looks like the same kind of a organization where we have the top apps for each category so you can look at games and fitness and other different categories but if you look on the left side sensor tower provides more information than app annie does so you can examine the details of a single app you can compare in this section called app intelligence to know more about it and so for example here clash of clans we get some drill down detail on when they made their money and how much uh activity they see do we see any trends seasonally so if you're trying to compete against clash of clans this obviously is an important report we're trying to think of our own app though that's that's the goal of this course is we're starting to form our own opinions about what our app can do and who our customers are and so clash of clans probably isn't one that you want to compare directly against but find a competitor that you are probably going headtohead with and see what kind of results they have and maybe you can glean some information there so statistica this is another website that can give us insights into mobile apps and so i went to their web page and picked a current uh report that was here that says total value of global consumers spending on mobile apps in the fourth quarter of 2020. so obviously we see a kind of a gradual trend and then suddenly there is this massive jump something happened what do you suppose that might have been so what we're doing right now is we're just looking at raw data and reports and i'm going to ask you in this assignment to draw some conclusions so here's what we're going to conclude i want you to provide several statements at least three of the market in general so where would you find some opportunities that's really the market research here looking at what's going on with trends and where would you find yourself something that can lead to success or failure so it's an openended assignment here you are now a business analyst you're not just a programmer or you're not just answering questions out of a textbook what i want you to do is pretend that i'm your boss right and i look at you and i say find me a market opportunity go look at the competitors see where things are moving what is opening up to us and where could we possibly enter and so really that's a very high level kind of a question to say analyze and compare and make predictions so you're not in high school anymore we're trying to make you a business analyst so the conclusions that i want you to do are things that might look like this so we're going to say these topx apps accounted for 80 of all downloads so what would that do for your manager well it would tell us that there is some very dominant players in that segment or we might have a different kind of a observation so looking at our category so we'll call it category x looking at our type of app that we're considering building there is no clear market leader and so therefore you would tell your boss i think we've got a chance to become that market leader there's nobody yet that has dominated that space or we might say category x our category has increased in user downloads by a massive percentage in the last 12 months or contrary you might say what we were thinking of doing online donut ordering is actually not something that people care about and it's falling in the last 12 months i don't know what the statistics will be you're the one that's going to do the research and find that out how about this we we found a new emerging leader so app x recently created an entirely new category something that is unique and it is growing rapidly so we could probably tag along with them maybe and see if there's an opportunity to become maybe second or third in that category and compete or how about this you might find a conclusion that says x percent of apps get less than y per downloads per month so there's some category that we were considering but we realize nobody cares about there's hardly anyone downloading there so maybe that is your conclusion how about this one we could find a different conclusion that says only x companies account for 80 of downloads similar to number one and then similar we might have another dominant leader at the bottom that says there's only a few apps that are collecting all the money or new apps account for percent of some total monthly downloads so the conclusions that you draw here are not something that i can tell you exactly what the right ones are so that's what market researchers do is they try to find the needle in the haystack and so those are called market study conclusions so when you're done with that it's a better idea to present something to your boss in a summarized graph so this is where excel comes in where you can create pie charts and line charts and trends and then you can you can visualize your statements very easily and then finally i'm going to ask you to do a summarize so write a paragraph to answer the following question to say what category should i compete in if i were to build an application really that's the conclusion that's the whole point of all this research is we're trying to find an opportunity out there in the market so if we've got several opportunities that would be great and we can consider options a b and c but that's your goal here so for the deliverables i want you to create a onepage document and you're going to embed a chart and i want you to tell me where the opportunities are if i were your boss and you were the business analyst what should we be doing what opportunities should we pursue so if you're one of my students i will evaluate you on how well you can write and how well you can draw conclusions from a wide variety of sets of data i will put a link here so that you can see the rest of the course material and then see some background on how we came up with this also if if you're not one of my students then feel free to put these kind of conclusions in the comments below and everyone else can evaluate your work based on the youtube commenting system thanks for watching hi and welcome to the business of building applications in this video we're going to talk about an assignment that i would give you if you were in my class so this is a course about building apps and the business plans that go with them so we're in number one which is chapters about motivations for building an app and so that's what the activity will be so we'll call this activity or assignment 1.3 so the third one that i'm going to grade you on if you were in my class so this activity is going to be about writing down the details of a plan so a plan for building an app and building a business so what i want you to do first is think about problems that would be able to be solved with a business solution so this is where we're going to be writing in just a minute so background information here is to think about how other apps are solving problems for instance how to find a hotel room quickly that's a business problem or how to save money while grocery shopping that is also addressing a business problem or maybe how to visit a destination using a virtual tour guide maybe not so much business as just tourism but the idea is that each one of these could have an app that would be the solution to this person's issue so then what i want you to think about then are the personal interests that you have or the problems that you face in your own work those are currently things that are bothering you those are often the best kinds of solutions that you can invent and so that's where i'm going to have you think so what i want you to do is to think of a product idea hopefully you've already got one that's been brewing in the dreams of your head an idea and we're going to write about it in six different paragraphs so first of all i'm going to say identify what problem exists for the ideal user so we're thinking about what they call a persona somebody that fits the mold somebody that fits the profile of who would buy your app and so what problem do they have tell me that that's your first paragraph the second is more about that ideal user so the ideal user is you're going to tell me their age range you're going to tell me their gender what hobbies they have or where they work why they fit this category what things do they do on a frequent basis what preferences do they have do they have strong political beliefs do they have certain practices such as are they an environmentalist or are they a gun activist or where are they in the education world you know those kind of demographics and ideas that kind of categorize people so then the next question is and you're going you're going to write this paragraph is what do you do in your app that will solve a specific problem that this person experiences so we're doing the profile and now we're coming up with a solution so what does the app look like so here's we're making a an app plan right so your solution then is going to be what does your app have for screens the wireframes what what you know what's the navigation how do you get from the title screen to the first screen and so on and then i'm going to ask you what competition currently exists for your app so you've done some market research right who are the people that already have a solution that is like yours or adjacent to yours something that is a competitor and then what do you propose will be your distinguishing characteristics what makes you different why is your app slightly better and so in six paragraphs you're going to give me a business plan essentially why your app makes sense and who it makes sense for so then what i want you to do then is after you've written up this document you don't just turn it in and say i'm done i want you to take this and actually do some real world interviews i want you to get some user feedback and so you can go talk to your friends or your family or if you don't have friends or family you can post it on reddit or somewhere and get some user interviews what i want you to do is to describe your app you're going to show them the problem you're going to show them the wireframe or whatever you've got for pictures and then you're going to get the reaction so you're going to give them openended questions so in your interview you ask your mom tell me what you like about this product maybe your mom's not the best person because she'll just say i love everything that you do so tell it to one of your friends what do you like about the product and what do you think it's lacking what would you change about it did i get close to what your solutions are do you care about this and if you do what would you make a difference on a scale of one to ten then how likely are you to use the app if it were available today and of course maybe a followup question is would you be willing to pay for it and so that is your user interviews so what you're going to conclude then from these unit user interviews is one you've either got a great idea or two you'll get a gigantic yawn and people will ignore you so the summary that i want you to get from that is who did you interview and why did you choose them and then finally what did you learn did you get anything from them because you thought you were the expert when you started this process but you quickly learn that you are the student the real experts are the potential users and so what did you learn after you presented your ideas to them so then part three then we've created a plan for part one part two we've shared it with a few people and now we're going to do plan b you might call it and sometimes that's the best thing you can do is figure out what doesn't quite work so based on the feedback that you received i want you then to write what you did would modify what features would you need to add or people didn't care about what modifications would make your app better conduct new interviews then so you can go back to the same people or find somebody similar and see if there's a different response then after your suggestions were implemented and then finally i want you to re record any of the insights that you learned from these people so this is somewhat of a big writing assignment isn't it not only do you have to write but you have to talk to people and figure out what they want so then for the deliverables this is what i want you to submit to me i want you to write a three to five word page word document that describes the ideal app idea what your user is what did you put in for the features what suggestions did you incorporate from your users and what did you learn from these interviews and so if i were to grade you i would base your grade based on not only how you write but how thorough you were and how well you learned and listened to your users so really that's the goal here when you're designing an app is to conform it to what the users want rather than your own preconceived notions so if you'd like to see the entire playlist for this course i'll post that here and if you're not in my class then you can feel free to put these assignments in the comments here and let the youtube comment system do your grading for you and you can comment on other users too and based on what they think their app ideas are so thanks for watching and make sure that you subscribe hi and welcome back to the course that we're teaching right now called the business of building applications so we're talking about mobile applications and the process of design and running your business so you can see that we are in several different units of study right now and we're on the second one which is called designing an effective app however there's a lot more material here so if you would like to take a look at some of these others make sure that you subscribe to the channel and watch along my name is chad slooter and i'm a professor of software development and computer science at grand canyon university and so the course that we're working right now is called building apps and the business of design so in this video we're talking about the features that you would put into an early version of your app perhaps the first version of your app so application design includes these four topics that we're going to see in the next few videos so we're talking about the first one right now which is which features should you put in there the user interface answers the question of what does your app look like the ux or the user experience is how is the user experiencing the entrance the actual flow of your app the product delivery and things like that so the experience is the overall feel and then finally we have what's called the mvp which is called the minimal viable product and so getting your app to market involves making some very strategic decisions about how it looks like how your users experience it and how much you spend on the early development stages so taking a look from google we have some advice for what users think about what makes their application valuable so the question is what users find most valuable about their favorite apps and so if you're designing make sure that you focus in on these key features so number one on the list they're easy to use and navigate i suppose if you get that rule right you've probably made almost all of the right decisions there's always something new to explore that's number two and so in a future video we're going to talk about making your apps addictive or a nicer way of saying increasing user loyalty and so we'll be addressing that in its own topic and so then you can see down the rest of them they drop off quickly but the first one is probably the most important getting your app easy to use and navigation and so that's what this video and the next few are all about so we are in this process let's get context of where we are so in earlier videos we talked about the problem that we're trying to solve identifying a solution to have known need number two is finding our niche and so looking at the competition and finding a place where we're going to succeed and the competition won't crush us and now we're into this third one here about figuring out what user features are really important and which ones can wait till later and balancing the user needs and the costs and then finally the user interface and the experience is where we're going today so the question is if you've got a list of nice things that your users want you to create which ones are you going to prioritize so you don't want to create what's called a frankenstein app where it has every feature and nobody cares about it you want to address what matters the most so one way to do this is to take a look at your competition uh apps that are similar to what you're trying to develop and compare what they have so earlier we looked in another video about the opportunity here about an app called words with friends one of the biggest apps that you've probably seen in the games and we found a pri a surprising discovery here if you look at the reviews currently they're receiving mostly onestar reviews because of one single problem they're advertising so they're annoying their users even though it's a free app people will still expect a good experience and so if you're looking at building an app and you have a similar review problem in the app store take close note of that because you don't want to make sure that you do the same mistake how about this is there an opportunity here so i remember at one time it was kind of a joke to put on your resume that i'm a an application designer for craigslist or i am a css expert for craigslist it's almost like a friend of mine who was a architect for the aldi's grocery store and if you know anything about all these they pretty much look like craigslist they're a warehouse where they just throw boxes on pallets and expect people to shop there and so there is there an opportunity here craigslist was so dominant well there is i have certainly used offer up it's craigslist but with a good user interface and you've got yourself less spam going on you've got less corruption uh you've got a great communication tool the browsing and the the video the pictures are good um i haven't used craigslist since now here's what you want to do then if you're looking for some kind of an opportunity like that whether it's you're trying to kill craigslist or words with friends or likely some other app that you're targeting right now think of what you guys have in common so your proposed app and what the competition does that overlap will call analogies and you want to check to see if the user experience is good in those areas and if so then don't be afraid to copy it i mean certainly every time snapchat or tick tock comes off with something cool instagram is not afraid to copy exactly what they see there because we don't want to lose out on what's actually working now what the competition does and what you choose to leave out we could call the antilog that would be the antianalogy and if they are doing something wrong make sure you leave that part of it out and make your app somewhat unique and so that way you take the best and leave what they don't want so let me give you an example so here is something i found on reddit where a person was doing some research and their research involved comparing different weather apps that are available so you can see that this uh reddit thread is android apps so this person is talking about designing their own weather app and they did the research to find out who's out there and what they can do so you can see they created a table and they have all of the different uh currently published apps out there they talk about the weather providers the number of widgets that are there the hourly temperatures and all the features and so they go right through everybody's competition and come up with a pretty good chart to know what is available now so if you were to try to get into this crowded market and build the better weather app you'd probably want to look at this chart very carefully and see which features are working which ones that are really important to the users and which ones are just complete addons or even annoying and so you can tell that the research here is done with quite a bit of time and effort also in the typical reddit fashion there's all kinds of very honest reviews and feedback about people that talk about which app they use and which ones they don't like and what works and even in some cases you can talk directly to developer here in one of the apps and so do something similar to this if you are anticipating creating a list of features so once you get yourself a little bit of competition and you make a table like this then it's time to identify the main features of your application let's say you're going to build a social app so something along the lines of facebook or instagram and so you're going to put down the user stories or different tasks or different abilities that your app will feature so for instance one feature of your app would be to say users will create an account using current google or facebook password you put it on a sticky note so that way you can move it around users will be able to set up a profile that's another action that the users will do the main part of your app of course is post a public message with a video or photo or browse other people's posts and maybe comment on them able to write things or put a like and so this is pretty typical social media things now you put these together and you start to see the number of hours of work adding up and so it's time to prioritize which of these features are going into your app by the way there's nothing really unique on this app so what do you have that is the twist what is the unique feature or value proposition and that should probably show up in one of your posts so once you have most of the main features then you want to be able to put them into categories and so a user experience should have some kind of a cycle or process that they follow through and as well you should probably think about which parts of your application have good amounts of these features and which don't so think of the first problem called activation so which features help you activate your app or how do users find you you better have a feature in there acquisition means how do you on board the users get them from a interested party a curious party to somebody that's registered and somebody who is an active user then the retention part is what is the main point of your application it better be interesting it better be engaging it better be entertaining it it better be useful there's something there that is the main reason that people came now this is the main course and now then you get to the point where you say i want my app to grow so there should be some kind of a way to refer others whether you invite them to play a game with you or to share a photo or to at least get some kind of another download from another user and then lastly perhaps somewhere in here there should be a monetization so either you ask the users to pay you money or you show them an ad or some kind of a way that you can do a cut of business and so monetization can fit in one of these categories so let's give an example here so if we're talking about our social app we would probably say our activation comes because a friend invited you to respond to a picture and then the next step is the acquisition so as you have to log into the account you're invited to create your own profile and then you're hopefully going to respond you're going to either play the game with them or you're going to read the post or put a comment on it and then hopefully you share a picture and invite somebody else to look at it and then the cycle repeats and once again make sure that there's some kind of a way to make a monetization play here so show an ad that seems to be a pretty typical thing for social media now ads aren't always great but they're pretty typical as a solution so this is our feature map with the objectives so let's put in here the first one which was activation so the users will create an account so they're going to use google or facebook password so activation we've got that one covered we also have they will be able to set up a profile so we'll put that in that column retention means what are we doing that creates actual value or entertainment to the stu to the people that are here and so posting a public message with a photo or video would fit we can also browse other people's items and so we have an interesting activity going on that's retention and then we have the ability to write now you might be able to say is that is that part of the retention or that might fit into referral so maybe one of those two categories would fit now i've got some gaps though because i've only created two columns and i have three empty ones so i might start to say well let's add some new features that i hadn't actually thought of because we're not covering all the bases so we have a new feature called share a picture with a friend with either a phone message or an email and so that clearly fits in the referral category well we don't have monetization and acquisition filled in yet so what are we going to do there well how are we going to monetize well maybe people have a a desire to promote their photo or their picture or if we were doing some kind of a job posting we could pro we could promote your uh your resume or something that people are willing to pay for for other people to notice and so we'll put that into the monetization category here's another one notify the user when your post has been liked oh we all want to know that three people have seen our video and so we'll put that into the retention area so that's interesting how about this generate a web page so how are we going to get people to look at our images how we're going to invite them into the app well you can rely on people inviting other friends that's one way to do it or in this strategy we would create deep links and so if somebody is posting about a picture or a subject about something that would be hit in google searches a place a geography place or an event or a celebrity or something then we can hopefully get a few people that are doing web searches with google and we pick up them through web pages so then you've probably mapped out most of the columns by now and you have the basic features of your application now the the point of this video is to try to focus on limiting your desire to fill everything in the first stages of building an application you want to do what's called a minimal viable product you don't want to have the entire thing developed because that's expensive and it's still untested so what we're trying to avoid is a frankenstein app so frankenstein of course is the movie or the story of building a monster out of body parts and this actually is a photo from experiments that were done in the 1700s of using body parts with electricity so the danger of creating too many features is that you have created things that your users don't actually need so let me refer you to a good blog post on the subject so uh beware of feature overload a case study and so even though this was written some years ago it's still very uh applicable today so i wanted to capture this picture here so live chat was this person's company communication tool and the point of putting it on the blog was to talk about how bad the user interface was how many features that they've tried to crowd in on one item so look up close here we've got ourselves every feature possible and to the software developer it makes total sense they've got everything there but for you and me that have never seen the app before it's a little overwhelming where do we start what feature is most important and when you're trying to onboard somebody the goal is to leave them basically one option just the one option that they need to do next and hide the other features until they've become a little more proficient with the app and so this is i don't know if you could call it a frankenstein app but it's certainly overwhelming now if we scroll down a bit they came up with another version of the same tool now this one here is called live chat and it certainly presents a whole lot fewer options i assume all this all the features are still there you can probably find them if you click the right menu and then you're looking for those features but if you're trying to scare away your users with overwhelming amounts of choice then the first version is your goal so you can see down here the conclusion is the lesson learned product teams should learn to say no and that's the point of the video that i'm telling you here is that when you're picking your features for your first version of your application pick only the ones that are absolutely critical and simplify your app so let's do a summary of what we talked about so far so that for the features that you're going to include in your app make sure that you have them proven to be necessary you've already done your interviews with your users and they've told you what they think is the most critical parts of the service and so make sure that you include those also you might want to include things that are fairly easy to develop so that you don't invest a lot of time and money and so really what you're developing then is considered the minimal viable product or mvp and we'll talk about that in a later video so once you've identified the features it's now time to create the user interface and so if you want to look at that the next video in the series is exactly about how you can create an effective user interface if you want to see the entire list of course material then take a look here at the playlist that's in the other link so thank you for watching and welcome aboard hey welcome back to the business of building apps this is a course that will help you create apps and the business of making sure that it's a profitable business for you so in this course we're talking about seven or eight different categories so we're in item number two right now which is about designing an app but as you can see there are other chapters and other topics that we need to cover and so if you'd like to see some of these make sure that you subscribe and watch the others my name is shad slooter and i'm a professor of software development and computer science at grand canyon university and so welcome to class and please join us for others so in this we are talking about application design and so really those are four questions about how your app's going to look first of all which features are we going to choose second what the app looks like third what's the experience of the user and finally what goes into creating a minimal viable product or the mvp and so we're here in section two if you haven't seen the others please look at the other items in the playlist for this course so what does the app look like is what we're asking today and what that question is is what is the user interface going to be what are the principles of design and how do you make an effective user interface and so to answer that question we need to talk about a process called onboarding so onboarding is a way to turn a novice or completely ignorant person about your application into somebody who is a minimal user somebody who is adopting your program so onboarding sounds exactly like what it's it's talking about getting on a ship and so let's think about the process of a cruise company and adopting users into their system so you're the crew's client you're going on vacation and you show up at the boat what are the questions that you would have when you get to the dock the questions are going to be things like immediate needs where's my room does my key work or where do i put my suitcases so if you're trying to onboard a customer in this situation you better make sure that these questions are answered don't shove a menu in their face or give them a plan for how they're going to get off and do tours at the first island those are for later and so once people get installed into their room and they got their first cup of coffee and they start to feel comfortable what are their next questions going to be they're going to say what's the wifi password or when is supper or what entertainment is happening on the ship and so these are questions that you would present to the user when they get to this stage and so you might have a piece of paper or a poster in the room or some kind of a guide on an app or whatever you're going to guide them through the process of onboarding and so you want to do the same thing with your applications and so don't present them with all of the features of your user interface at the beginning just give them one or maybe two options and make it so obvious that they always choose the most logical thing so only show the most urgent and essential features of your starting screen and in our case since we're starting a brand new app maybe that's the only features that are in your app and so your user interface makes sure that the essential features are obvious and super easy to adopt so perhaps one of the best examples of making things obvious is google no wonder they're a good search company well they give good searches but there's really only one thing to do here uh you have a search item and you have this other i'm feeling lucky i don't even know why they still have that there i've never clicked it other than the first experimental time but anyway they're pretty simple they've got a great user interface now consider what they used to compete against yahoo was really the only other viable choice for search engines and what in the world are we supposed to do here so if you knew what you were after when you started yahoo you probably hit the search bar but they've got so many other distractions going on am i supposed to download a toolbar well no thanks on that one am i supposed to browse news am i supposed to get weather and there were a lot of choices and i think the strategy was let's just give every kind of idea possible to our users and increase interactivity there instead of focusing on one really good thing such as search they tried the buffet approach and other than giving away all of their user data in a data breach yahoo just was completely defeated by google for a number of reasons so don't be yahoo when you're trying to create an app so it's fun to hate people so let's go take a look at another one that i would like to criticize so this is adobe illustrator photoshop and illustrator are like the dominant tools for design and graphic arts so i consider myself somewhat proficient in both of these i teach them in school but the one thing that always bothers me is ironically the tool used to design user interfaces and choose layouts and wireframes in itself is a horrible example of a user interface as you can see if i want to select a color there are multiple ways to get to that and so adobe apparently thought that multiple ways is a good thing and the users have flexibility you can even you can even customize the user interface so that only you understand it and everyone else that looks at your computer is completely baffled and so this is an example of succeeding in spite of having a bad product and so what do these icons do if you look at these photoshop icons you can see that they have some kind of a purpose and then you click and hold on them for goodness sakes who have ever thought of that you click and do a long click on them and you get more menus that pop out beneath them the only way you can know what these are is either to have a youtube video from some 14 year old that's going to demonstrate the the process for you or take a class what software requires you to take a class in other words to become a user that's just telling me that there's way better solutions that could be done take a look at here's another example how to export a file so i choose export and now i'm presented with what a dozen different things to export in different ways please help us this should be a dialog box and so adobe ironically has the market on all of this here's their layers palette so what are you supposed to do here what is kind normal what is going on with these little icons at the bottom some of these are effects some are browsing folders it's a it's a complete overwhelming experience for a new user now if you're already an adobe user and you know all these features you're probably proud of the fact that you've mastered the program well good for you for the rest of us though we want to have something simpler so what is this thing this is sketch so a competitor that does a lot of complex things to be fair photoshop and illustrator are complicated programs they do very sophisticated things but there are better alternatives out there basically because of their user interface and user experience they have all the features but presented in a much more straightforward manner how many people actually need to read the manual for sketch what a contrast to what there is for adobe products here's another one that i picked up this one this is what happens when you let developers build the user interface so check this one out what in the world are we supposed to do here how many check boxes do we need every one of these should be hidden away in another separate section where it shows up only when we need it to be and so if you're a developer don't take offense there are people out there better than us i consider myself a developer there are people out there that are better than us at user interface design and so it might be worth your time or money to get some advice and at least get some plans from a user interface perspective before you go ahead and develop your first vision so here's the design order of what we're trying to create so let's get some context here so first of all we picked out what our user needs are we figured out which features are going to meet those needs and now we're on creating the views so every feature that you create has to have some kind of a screen to go with it the view and then finally we'll get to the navigation at a later point so let's talk about some of the ui elements that are going to make your app effective some best practices so this is just the 10 minute version of an entire profession so a mobile application should have some consistency you should probably have something as a the typical app so don't try to get too creative on your user interface here make sure that you have a bottom toolbar and a top toolbar where users can see the same thing on each screen so separate the functionality each feature that you're trying to do have its own screen so don't try to create the monster screen with 50 different check marks and different menus that you can pick from separate the tasks and put each task into its own view and now you need to imitate and say look at the favorite apps that you already use and know and you admire and just copy their design their their plan so some people say that user interface is like a joke what does that mean it means if you have to explain it you probably did it wrong so i pulled up some examples of people who are designing user interfaces so there's two things going on here first of all the user interface is each screen that is going to be in the app and the second part maybe we're getting a little ahead of ourselves but it's closely related is how they relate to each other so that's the user experience the navigation essentially and so what you want to do then is before you write code just draw pictures so you can do it as this was a pen and paper obviously not too sophisticated or you can get other tools that are actually nice to draw with and look like professional graphics here's another example of an app that's going to be a diet app for your pet and so the the the motive for the app is that healthy food is best provided to your pet by creating your own food in the kitchen and so this app will help you create recipes share them and be able to improve the health of your pet so every screen here represents a different task that's going to be done in the app and then of course we can see the navigation between them here's another example of a project that somebody's working on this is called the time bank app and so it's a time management so you can literally budget amount of time that you plan to do on each task and for each calendar day and you can borrow time from the bank and then when you run out of time you stop working on that task and go to another one so i don't know if i would use this app myself but it's certainly a novel idea and for some people this might be just what they need but the point here i'm showing you is that this person has thought about each task that the user plans to do and they've drawn it out in a very nice pencil and paper format and then shown the navigation between them and so you can see the link here it's from flickr and you can find out if this process is going to work for you so let me recommend you a resource i like the title of the book it's probably just worth that in itself don't make me think and the idea is that user interface is supposed to be obvious and so what are some of the things that steve would recommend that you would do to make a user app so extra credit reading for you go check it out so along the lines of creating a good mobile experience think about the thumb so as you design your screens the top left corner of the screen is hard to reach with a righthanded person for sure and how in the world are you going to put the main navigation menu in the top left corner if you are actually thinking about this so consider someone riding a bicycle and trying to select a new podcast item we're going to put the button they're going to have to stop their bike and use two hands if you put it in the upper left corner so user interface is about knowing who your users are and when they're going to use your app so fortunately google and apple the two main mobile application companies have not left us in the dark they've given us some pretty straightforward advice so check out their human interface guidelines and so i'm going to just scroll through here to show that they've got very good principles outlined here and so they're basically stealing every lecture that i'm going to provide to you so i'm just going to point you to them and you can see that there is an entire book worth of material here to figure out how to do branding and colors and typography and how to use icons and navigation so really this is the resource that you should be looking for if you're building a mobile app for apple so google has done the same favor for us with their android documentation so this is a developer page and you can see that they have an entire book's worth of how to make a good android app based on the principles of design and so you can see that they have an entire course worth of material here to follow so run from me now and go to the experts at either apple or google to see what they have to say i can't believe i just told somebody to stop watching my videos but go ahead and check them out and see if you can learn something about basic design from the experts so let's assume that you're not a very good designer well you can just buy templates that are pretty good they've already designed many of the features that you're probably thinking of so find a site like this so here is a design template for somebody who has a book app and so you can see that there are screens to show you individual books and how to browse for books what else do they have let's scroll down until we get to the next one so if you're into a cooking application so recipes likely we've got ourselves an entire ui layout for most of the screens that you can imagine for cooking education so 19 screens here you get the idea so each different type of app that you're going to see is got a template so it's probably worth spending some money here or somewhere else where you can buy a full template and user design already designed for you and all you have to do is adapt it to the specific details of your app so taking the time or investment to create a good user interface will help you in several ways first of all think about who you're designing for number one you have a good idea for yourself of what the final product will look like and not only you but potential investors and partners are going to have a concrete image in their mind of what your app is also if you hire a developer then and they have a great user interface to start with they're not going to have to make any decisions or inventions that is not in their area of expertise and so developers are good at creating something if they've already got a pattern to follow and so investing in user design is a great way to start the next phase of the design process is to talk about user experience and so check out the next video here about the flow and experience of a user in your app also if you'd like to see the entire playlist for this this course series then check out the next link which is a playlist of all of them so thanks for watching and welcome to class hi welcome to the business of building applications in this course we're exploring the business process of design and developing an application in a mobile field so as you can see we're in several different chapters of a course so we're in section two right now which is about designing an application however there are other sections that we're going to explore in other videos so if you haven't subscribed please do that now and then you can join us for all of this material if this interests you my name is shad slooter and i'm a professor of software development and computer science at grand canyon university and so if you're in my course welcome and if you're not and you're just looking along then please join us and receive a degree that will actually get you a really good career so in this section we're talking about application design and really there are four parts to app design we're going to first of all or we did already talk about which features that are essential in making a successful app the user interface is about what the app looks like in this video we're going to talk about the experience that a user has as he or she is going through the flow and the execution of your application we want to make sure that that is good because that's essential for retaining users and making apps addictive and then finally we're going to talk about the principles of mvp which is the minimal viable product that you would present to investors and to potential users it's kind of the version 1.0 or the beta version of your app that makes you either confirm or deny that your app will actually work so we're in the section called user experience or sometimes called ux so how is this different from the user interface well really the user experience is the is the overlap of several different things first of all the design which is what most people think of as the user interface the the technology that is there so what are the actual interfaces whether it's a tablet phone web page virtual reality or the third one is the strategy so what are you trying to accomplish and does the user actually meet those goals and so that is perhaps what we would consider the experience of the user so for us we would consider it that's a five star or a one star experience it has far more to do than the colors and fonts or the layout that you choose it's the whole process of your application so let's revisit a cycle that we talked about in the previous video so as your user is going through these four sections they are going to experience your application or the ux so first of all the application starts somewhere so how do users find you and then how do they get on board how do they begin the process of becoming a registered user and active in your in your app then the retention part is the addictive or the interesting or the engaging part of your application that keeps them coming back do you have something worth doing in other words in the retention stage and then finally referral do they invite friends do they have actions with other users is there a way that hooks new people to come in and repeat the cycle and of course then your audience grows and finally somewhere in this process you have to figure out how to monetize your app without annoying everybody so too many ads of course will ruin the user experience too high of a price and people might not even get in the front door and so there's a balance of where the successful companies have learned to use experience and monetization at the same time and they of course have a great program now here is a previous uh user layout that we showed in the last video on the user interface so user interface are the actual views each screen could be considered an interface however the process of linking these together and the logic flow of the program is just as important as how clearly they're drawing now the time bank here app is to have somebody organize their time so that they can decide how much they're going to spend on exercise or study or with their family or commuting or whatever and so it's a great way for people to bank their time i guess that's the the theory of this app is that you can budget your time and use it like you would money and so that's called the time bank app so i don't know if it's a good app or not but the process here is obviously done well you can see how the user experience will begin and end and all the steps that are in between there now what would make this even better is that if you put it into a process or a drawing tool like figma or something like that and you could test it out you could click the app you could watch the screens transition and then make some decisions and refinements based on a prototype so you could think of the user flow is the process of how the user goes from the beginning stages to the end let's take a look at an example here of what might be a shopping experience so the user opens the app they do a search for our products they compare several products so your user experience might be to show a table you know side by side comparison or a save to cart or wish list or some way to compare help the user figure out what they need to do then of course add to cart is what we want shopping makes makes the order and then make a frictionless way to pay it you've probably seen that before and then finally you receive confirmation and hopefully the amazon guy shows up at your door and rings the doorbell and you're happy and so the the confirmation process outside of the app is just as good as the experience inside the app so you can imagine that amazon and people like them have spent literally billions of dollars making this user flow so easy and so obvious that now i see on my phone one click buy so i don't even have to do the shopping checkout process make it easy make it fun and then i don't even notice that i just spent some money so let's revisit this user flow again the experience of what's happening so you can see that we have the four stages of our app experience acquisition activation retention and referral and so there's a different label we could put on the person at each stage so what's happening there so our goal then is we would think about what's in what's happening and who the user is is our goal is to make it easy for this to happen we want the user to install the app the next thing is we want it easy and obvious to register an account which is why so many people just use the google login or the facebook login no one likes to type in passwords and confirm their password retention is a really engaging or entertaining or something that is very useful something that serves the need and so we don't want to confuse or annoy our users in this stage it's the core of our application and then our goal here is for people to invite a friend and so don't just say invite a friend maybe invite them to play the game with you or invite them to share in a experience or to share a photo or somehow cooperate and so you want to make it natural in each of these stages and so that's the idea and the thinking of user experience is you want to reach the goal in each of these stages without sounding contrived or overwhelming or annoying in any way you want to make it the natural thing that the user wants to do and then of course if you're successful with all of these what's going to happen is the cycle will continue and you'll have a virtuous cycle of new customers coming in by word of mouth now the conversion rate is something that you would want to keep track of so once you have an app up and running you're going to think about what is happening at each of these stages and of course you're going to lose a few people along the way and what you want to do then is find out where the choke points are where are people dropping out of this experience and that's where you need to focus and refine what you're working on so are people dropping out when they get to the checkout what's going on are you having them create all kinds of confirmations and credit card entries or is that process smoothed out and automated and so you're only you are going to be able to figure out where those problem points are if you've got data on how your users are acting now expand your idea more than just about your app because the user journey begins before the app happens so they get an invite or they have some kind of a notice or they found you in the app store and so you want to make sure that that's a good experience the inapp experience is how smoothly it runs during navigation ordering or posting and then finally when you are done does your app provide just entertainment while they're in the app or are they going to receive a pizza when they're done or what's the goal of your service and so probably thinking about the beginning and the ending and not just what they're doing inside the app is going to help you as well so a good exercise to make this successful is to create what's called a user empathy map so you would identify your user and try to predict and live in their shoes what does your user say what does your user do what is he or she thinking and how do they feel about the experience at each stage so let's take an example here of somebody that's ordering a new item from a restaurant what do they say well obviously they said i want to order food or maybe they said i'm hungry or i don't want to cook tonight and then what do they do they open up the app they browse the menu and they do comparisons so you can watch what they're doing you can see how well that's working but you can also say i can try to imagine what the user is thinking what are some of the important items well they might say when's it going to arrive is this expensive will this food taste good is it going to be cold stale soggy are there people going to be rude and so you can imagine that there's all kinds of questions that would be in that person's mind and how are they feeling who are you dealing with well you're probably dealing with hangry customers people that want to order food and get it now are going to be impatient or they might be excited they're going to say oh good chinese food tonight i haven't had that for a while and it tastes so good and so this experience is far more than just coding and user interface this is about how users feel about your program and so the only way you can really know this is to talk to your users watch them observe them measure them and get lots of feedback and so the user empathy grid will make your user experience far more successful than if you just assume a lot of these things so qualitative user experiences are going to be things like this watch what they do so literally you could put them in a lab situation or give them the phone and just observe quietly did they complete the action without any questions did they get frustrated did they have to ask for help did the user do the correct answer did they did they or thought they were doing something but a menu led them down a false path did the user misunderstand something was the menu not clear or was it hidden did they even not know that it was a menu or was the icon just a mystery to them maybe they didn't know it was an icon and so all of these things that seem you that seem obvious to you as the developer are going to be measured did they have to try multiple times before they finally got it right if they if the answer to any of these questions comes out wrong then you either have to fix the app or just assume that a great deal of your customers will never come back and so user experience requires you to watch and observe and so here's a piece of advice that seems a little counterintuitive at first but it says don't listen to what users say observe what they do instead and so the idea is to observe carefully and watch to see if there are problems so if you were to talk about a range of positive to negative user experience you could put it on this pyramid here so at the very bottom of the pyramid we would say the application is useful in the fact that it does what it says it works okay so that's the minimum user experience we would want it functions then the second one up is probably just as important obviously it says you need to be reliable so reliable means not just that it won't crash but also it's reliable in the fact that it's consistent so one place where you would put a command is going to follow through for the rest of the application or you do a process that is repeated in similar ways also in convenience is this a natural and obvious and efficient way to do things so i know in certain applications that i use if i want to do minor things that require 15 clicks with a mouse i get angry i get annoyed it's like who designed this who used this obviously they never tested it out is your experience pleasant okay so that's getting pretty high now where people say i actually like to use my app it's attractive it looks nice i get a good feeling when i open it and then at the very top i guess we would call it meaningful means that overall it's a very positive impression i enjoy using the app and i will be back and so your ux is trying to course to meet the top end of this so in order to achieve the goals of this meaningful and pleasant experience let's talk about six principles that will help you whenever you're talking about making a positive user experience make it minimal find your way to do it without a lot of extra trim so remember the experience of the contrast between yahoo and google google is minimal how about intuitive groupings and so we think about the way you menu you can you organize your menus and your dialog boxes and the clusters of things that belong together logically fit together it flows naturally so you don't have to tell your users to figure out what to click next there's an obvious button or there's a process of sliding or or clicking that's that's going to be exactly what they expect make sure that the icons are obvious invent only new icons when there's doesn't exist one already so just use the standard icons that most applications use make efficient motions so in a mobile application think of your right thumb as the place that's going to do most of the work or if you're working on an application that covers an entire screen make sure that you don't have too many clicks or you don't have to move around too much now finally above all probably is consistency throughout if you pick a plan stick with that plan so you don't have to surprise users or confuse users from one part of your application to another now the next step in building this project is called the mvp or the minimal viable product so check out the video here that will give some principles on designing an mvp also if you want to see the entire playlist for this course uh click here and you will see a class list of mini videos so thanks for watching and please subscribe hi and welcome back to the business of building applications this is a mobile app course for people who are interested in the business of design and running a service so there are several options and several chapters that we're studying so we talked about the motivations and now we're in part two which is about designing an mvp or a minimal viable product there are other considerations ahead of us so if you would like to subscribe you can see these as they come out if this is interesting to you my name is chad slooter and i am a professor of software development and computer science at grand canyon university so please join us in class if this works for you now what we're going to talk today about is application design in part four down here at the bottom we're focusing on mvp which is the minimal viable product we've already asked about which features we should include in here what the user interface is like and how to make a good user experience so now what we're trying to do is come up with version 1.0 of our product that we can use to test out with users and show to investors so that's called our mvp so it's certainly not the most valuable player like you would see in sports but the minimal viable product so this term isn't my invention of course it comes from a book called the lean startup and so you can see that it's a new york times best seller and a common basic idea in entrepreneur circles so the term is defined like this an mvp is the product that in the shortest time can create value for one or more users on a continuous basis so some people have the idea that the mvp is like super basic and ugly and barely works and others are saying no it's more of a fully functional product that we can test out and so there's a range of ideas of what people think is mvp so what i want to do is to show you some advice and some principles that will lead you to a successful mvp and make your business work so we've all got a list of features that we want to put into our app and we need to prioritize them so the mvp are the core essential things that make our app work the future ideas we're going to call that version 1.1 maybe or two or three but we're going to leave those for later after we've proven that our business concept is successful we're going to see if users actually like what we made and if the investors can go along with us and so the mvp is just to get us started it's not really the full vision yet so we've gone from prototype which is kind of like the drawings and the wireframes maybe something that you can actually work with like with a clickable interface mvp is like somewhere in the middle and then a real product is still ahead of us so we're in the intermediate stages now so think mvp has limited goals and very close attention to how much it costs now mvp can be considered like an incremental process or it can be considered an evolutionary process so the first one as far as incremental is not an mvp so if you were to build a truck it is not the process of building wheels then frame and then a body and then assembling it because you really can't use the wheel by itself now if you were to talk about mvp you're going to say we're going to build a transportation device that's going to carry cargo well the first requirement is that our transportation device actually moves and can carry something it doesn't go very fast and it doesn't carry very much and the bicycle is a slight improvement on that it goes a little bit faster and of course the motorcycle goes fast but doesn't carry much the idea is that we have a functional product at each st each point of the the stage of development and so completely different than just building from the ground up and building foundation first and then building out from there so how much does it cost to develop a scooter not very much how much does it cost to build an entire truck obviously quite a bit so our investment risk in the scooter stage is quite low and that's the whole point so if you were to build a service that does automated coffee production you would consider an mvp like this we want to know if the users like the idea of walking up to a machine putting a quarter in and getting a cup of coffee do people actually want that well you could invent a robot to do it for you and that would cost a lot of money but if all you're interested in is testing out the concept then literally you put a guy behind the cardboard he makes the coffee and hands it through the hole do people like that and you really don't know if they how well they like it until you test it out so it's a physical a demonstration of what an mvp looks like so if people are having to place orders with you and you manually configure them and fulfill them that's fine now a good example of this process being manual is from the company zappos so in a previous video i told you they ran an experiment to see if people would order shoes online so that was a good question so instead of building an entire warehouse and then running a business to answer that question they simply put up a website that sold shoes if somebody ordered a pair of shoes they would take that email and it would go to the store and they would buy a pair of shoes from the retailer and then they would put in a box and mail it to the customer now obviously they had no markup there was expenses in doing all of that and postage so they were losing money in the process but they were able to answer the question is our minimal viable idea really viable will people buy shoes online and of course the answer turned out to be yes and so they turned into a big investment and eventually were purchased by amazon and you can buy zappos online today now the idea of trying to build a mvp relates directly to the user experience so we want to get our mvp to the top of the pyramid but not have a great amount of money invested so here is a way to do it wrong this is terrible okay so terrible is to say i'm going to take the strategy where i'm only going to build the easiest features not the most important ones and so we have a broad part at the bottom of the pyramid that says we have lots of useful things that we can do in our mvp the experience is bad but at least it works so we don't want to do that so how can we get better than terrible well we could get to the level that we'll call bad that's not terrible so what is bad well bad says we'll take a slice and we'll get a little ways up the pyramid so we'll have maybe one or two features they work but we don't really have that experience of what the end goal is yet so we can provide some value so we want to do better than that so let's go up one more so from bad we'll go to good so good says we're going to take a narrow slice so we'll have maybe one feature that feature is both reliable it's convenient and it's very pleasant and the experience will be good for that one thing so the answer to the question is which features capture the most value for the customer and so it doesn't do much but it does one thing very well now we can even do better than one step above this we go from good to best so best is we'll just skew the development a little bit so that maybe we'll have not two features but one feature that one feature is very good it looks nice the user experience was thought out and a user can use the product so they would like to have more features of course but the answer to the question is which features best demonstrate the value of my product and we make sure that that experience looks really really good and so we want to make sure that we can answer that question that's the point of an mvp so let's put it into writing here so the mvp answers the burning question is how will users receive your product this is really a mystery until they actually have in their hands and they can test it out so do they yawn at your product if they say this is really nothing special or is boring then you fail fast and you might just decide at this point not worth it the investors flee we abandoned the idea bad idea nobody likes it or we could say that the users come back with a mixed kind of a review they say it's a nice app but i would prefer it if it were slightly different if so then we know we have a roadmap for version 2.0 or if we hit it right and we have a great experience and the users are excited then we roll and we can start adding development advertising the thing marketing and new features are in the future so implicit in this discussion is the idea of keeping the costs low so your mvp has a a relationship to its cost based on the number of features you put in so keep that slice small one good feature and the cost of development is lower so instead of spending a hundred dollars an hour for your developers for each developer to create features that are really not critical then keep those out so there's an inverse also a relationship to the amount of acceptance and understanding that your users are giving you so they have a limited bandwidth of what they can give you for feedback so fewer features means you get the right feedback from your users so their understanding of what your app does is better when there's not as many choices so lower cost and more accurate feedback on the burning question so really the question is what features should be in our mvp answer that with three questions does the user need it how simple is it to develop and does it provide value to the company and of course we want those answers to be positive and then we know which features are in the mvp now does the user need it that's our first question obviously you have the core idea so don't try to chase down things that are nice to haves so then the next question is what does it cost to develop so not only do you have to calculate the cost of your computers and the time that you pay for your developers but you think of the opportunity cost you want to get this business started and so if you don't answer the question right then you're probably going to be losing in on opportunities that you could be working on now the last question is does it provide value to the business so the first value you can think of is revenue so one luxury you do have is that you can postpone the development of the revenue part until later because the goal is to find out if users like it and then get it get them hooked on it and so don't annoy them with your ads just see the if they like the feature first now double check when you get to this point in your development and you have an mvp you've presented it to users and they've given you feedback ask yourself am i developing anything that is truly unique this is a double check do my users see it as a differentiated product do i think that it's going to be an improvement where are we going with this that's the double check point now also keep track of your backlog because everyone's got these features that they are anxious to put in we know that we're going to promise the people that they're going to be there and that's what your backlog does so version two is going to have numbers uh four five and six and version three is going to have all the great things in the future but we're not going to invest money in those until we know that features number one two and three are the ones that users will actually adopt and so it allows the users to see the future and the developers can build something that they can adapt and extend and plan for in other versions so now you got your mvp in place you've tested it with a few users and you can answer the question truthfully now is this a good idea not only do i think it's a good idea but do other people like it and will it sell and so that is really the one goal that you have for an mvp is to test your idea and see if it's going to launch now in the next video we're going to talk about monetizing and marketing your app how do you get people to adopt it and use it and how can you pay for it if you'd like to see that click the video that's up here on the screen also i have the link to the entire playlist so you can see all of the subjects of the business of building applications thanks for watching and please subscribe hi and welcome to the business of building applications this is a video that will give you some ideas of how to complete an assignment if you were one of my students we're in part two of an of eight chapters of a course and this is about designing an effective app and so this video here is going to give you some details on an assignment if you were in my in my class at grand canyon university this is what i expect of you if you're not in my class then you're feel free to do the assignment but you'll probably have to just put your things in the comments below so what i want you to do in this assignment is to look at some design examples and so when i say design examples i'm talking about app design this is going to look at some people that really did a great job on how they would build an app so we're going to take a look at some people that know what they're doing and we're going to evaluate how well they've covered the basis and what we can learn from them so i'm going to show you three case studies three design projects that are posted online that we can look at and number one is about an app that would do pet food recipes and so this uh website that we're looking at for these examples is called uxdesign.cc and so the first one i want you to pick out is this one here called a stepbystep guide to the process of designing a pet diet app and so this is their first page i'll provide the link to this below so this here is the it doesn't exist this app doesn't exist this here is the the layout this is the sketch this is the the prototype for the app so you can see that when you look at this web page you're going to see that they started with this process of sketching out with literally a pencil and paper the wire frames what the app's going to look like and then you can see navigation links between it then the wireframes are a little bit nicer than just the sketch it's done with a drawing program and so it's a little bit easier to read and then this user created an inspiration board so they went to look at other apps that were similar to get uh probably graphics and uh color schemes and what they did for the the look and feel and then here is a nice uh design process so i don't know if you do this or not but iterations so you're going to design something and you don't take the rough draft and just start implementing it you create three or more things to look at so that way you can compare them and judge based on what you've what you looked at from a distance or you can provide it to other users and get their feedback and pick the one that people seem to gravitate toward so anyway in this case study you can see that the green one was selected by the user to say i think i did the best job on this one so when you look at these three which one would you pick i'm not sure if i agree is three the best it's kind of a personal preference and then when they're done here they have this fully formed graphical user interface they can see the whole app number two that i'm going to ask you to look at is a food ordering app so once again i'm going to take you back to the same website which is the ux collective and in this case the student created an app for ordering mobile mobile meals and so the steps here involved maybe a few other things notice that they used what they called a user persona so these are fake people but these people are representative of the ideal customer and so you can see that they have certain targets that means their preferences where they hang out online a little biography about who they are where they work and how old they are what they like what frustrates them and so these are the ideal targets for this application so that's called a persona that's actually a terminology that you should start using the persona the target person for my app then we're going to have a process here so this person not only thought about the user interface but they are considering the user experience so the user experience is how does the app work and how does the entire business work with the app what's the user going to experience from the moment they open the app to the moment they pay for it or get their product and so ux then the wireframes come next just like the previous example and you can see that they're designing uh very detailed plans for what the app's going to look like and then they organized it so more ideas from other users and more other apps and then finally you get to this this is a nice clean photo ready app that doesn't work yet it's just a user interface but you could provide this to your ideal customer or to your boss and have a very good plan on what you're going to be building so the third case that i want you to look at is this number three called the fitness app so this fitness app is a ux case study again so fitter me is the name it doesn't exist in an app form as far as i know but it does give you a pretty good idea of where they want to go so this case study has a competitive analysis so the competitive analysis will tell you who's out there already so obviously strava is like a huge market leader why are we building an app that replaces strava i'm not sure but the competitive analysis is supposed to tell us why maybe there's some weakness or some specialty that we can exploit so who's the target so we've got this pretty broad range we've got some segments of people who are going to be likely users of the app we have some interview questions so this is a great way to find out what is really happening in the minds of your potential users is remember in the previous activity and the assignment that i asked you to do was to go and talk to your friends and family and present your idea of your app and then get feedback so this is exactly what this person did here with the interview questions so why would you want to use my app what would you change if you could modify it and how much would you pay for it how much how how likely on a scale of one to ten are you going to use this app once it's released and so remember this market research will save you hundreds of hours and maybe lots of money because if you find that nobody cares about your app then don't even bother advancing beyond so next this user created a persona and empathy map so the empathy map is asking yourself what does this person think what do they experience so how do they find the process of exercising right now is it frustrating to them are they inspired or you try to have empathy for them not just in you know being a psychologist that listens well but an empathy in understanding what makes them tick then we get into the wireframes and the connections between them so the site navigation so they've got a pretty good idea what their app's going to look like now what i want you to do is after you looked at these three in more detail than what i just showed you i want you to write about what you learned so question number one i want you to notice a couple of things that these case studies followed a very common format there are certain ingredients in each case study and each design that they all addressed so what are the common sections of a user design document then the second is some of these you might rate as more complete or more compelling than others so which of these three do you provide or do you think what provides the best idea and the best guidance for an app developer to follow so if you were their boss which one would you promote and which one would you send back for a second try then the next question is that most apps in the stores hardly get any downloads at all clearly there's an app for every need but there's not a need for every app so based on the business ideas that are here which of these three do you think has any kind of a chance of attracting a crowd so are there success in their future or not so explain your answer so what i'm asking you to do is not to design your own app this time but take a look at other people's work and see if you can see success or failure in their future so now let's move on to the second part of our observations so let's talk about freelance work so freelance app developers sometimes browse websites like upwork or freelancer.com looking for jobs to bid on so if you were seeing these three apps that were up for development are there any one of them that you would be interested in bidding on assuming you were going to be paid several thousand dollars you were going to be paid well for your time which one of these apps would merit your time and then explain why you would apply for one over the other so you might have personal reasons such as it's interesting to you or you think that this person has their act together and probably has a clear vision or what's what's your reasoning so which of the three would you apply for if you were a freelancer and then think about your own app now so since you might not be a designer a professional designer you're probably going to imitate those that are so using these three case studies you're probably going to look at your own idea and follow the same format good for you because these are done in great formats so these case studies are meant to be imitated so which of these three do you think makes the best model for you to imitate in designing your own app successfully so explain to me what you liked about it and why you would follow their pattern finally let's talk about the deliverables in this assignment if you were in my class i would expect a onepage word document and i would expect you to compare the app design case studies did i say four i think i only showed you three if you're not in my class then go ahead and write the comments below in the youtube comments section about which of these three cases you thought were the strongest and why you believe they are i'm going to provide the link to the entire course so if you'd like to see the playlist for the business of app design please join me there also don't forget to subscribe if this content is interesting to you thank you and we'll see you next time hi and welcome to the business of building applications this is a course where you're learning how to create apps as a business manager so we're in part two which is chapters on designing an effective app and in this video i'm going to give you an assignment we'll call this activity 2.2 and the goal here is that we are going to try to develop what's called user stories so when you're designing an app you have to figure out what your users want to do and so the background here is that our user stories are a prioritization of all of the features in our app so it's a natural language description of every feature such as as a user i would like to log in so that i can have access to the application that's a user story tells me who and what they want to do so a user story is a short statement that is written from the perspective of the user so for instance you might say as a role i want to do something so that i can so for instance i might say as a manager that's the role i want to see a sales report to be sent to my inbox every day so that i can track the success or failure of my team and so that tells you a feature of the app that you want to build so your app might not have any of the features that look like that at all but that's an example of what a user story looks like now once you've got a bunch of user stories it's nice to put them into categories and so probably a sensible way to do this when you put it onto some kind of a sticky note or a virtual sticky note and then you and your team would get together to say which ones are these are the best ones which ones are we going to leave till the future so you can prioritize what things you need to do right away so what you would probably think of is essential mvp features first so mvp stands for minimal viable product we'll get to that later but the minimal viable product is the first version of your app it's probably not very scalable and it might not be perfect but it's certainly going to tell us what the app can do and you can provide experiences to the actual users and they can give you feedback on it so for instance in a previous activity we looked at a case study of a user for a pet recipe app and so i put a feature in here that might have been in that pet recipe app that says here as a user i want to search for recipes to them for my pet so that i can find something appropriate for his medical conditions okay and the reason why we would put that as a high priority is because in our interviews with our test users our personas we found that this was the most common request from our user surveys so we would be able to identify what it is and give it a priority number two they may have said here's another feature of the app as a user i want to read instructions so that i can prepare a recipe was also common from our users and we would also categorize it as essential to the core operation of the app that's really what our app does that's the main activity how about the third one let's examine that one too it says as a user i want to read about the ingredients that are in each recipe so that i can know what the health benefits are associated with the recipe this is essential it's a common request but for the app to actually work then the users don't really need that to see what the app looks like we could put in some dummy data here and just say hey if if this app were finished then you would be able to see the contents of your meal so we gave it a priority of one well it eventually it'll hit the app but for right now it's not going to hurt hit version number one so here's some future version priority so we've pushed these away and said maybe someday so for instance i want as a user i want to create a shopping list for the ingredients based on my favorite recipes so we said we're going to put this in version 2.0 because of the complexity of the development sounds like we're going to take some more time it's also essential to the revenue model of this app because we're planning on monetizing the app by taking a cut out of every item that is ordered from amazon so if we don't include this feature we won't make any money so that's why it's essential but remember in the first version of the app we don't have to make money the first version of the app we just have to prove that people like the app so we'll leave that as a future version number two i want to fulfill the ingredients on amazon and the order yep i mentioned one same thing here we're going to take a percentage of the sales and then number three or the third item here it says i want to track my pet's weight so maybe that's great but according to the survey we asked our people if they ever wanted to weigh their pets and and most people said no so we thought it was a good idea we put it on the on the list of things but our users told us otherwise so that's maybe an example of how you would prioritize user stories so based on what you can do and what your users want you to do so what i want you to do then in this assignment is to create a table so write all the user stories that you can think of that your app will do all of the features and you write them in that i as a user kind of format and then put them in a chart to say which ones are nice to have which ones are going to be pushed off to future versions so it's really just a table with a bunch of sticky notes so that's your deliverable i want you to create a word document with a list of minimal viable product features and then also put them in the future or the present categories if you were one of my students i would grade you based on the completeness of what the app looks like and how much thought that you can justify for each decision if you're not in my class then feel free to do this on your own as you're designing your own applications i'll put the link to the course playlist here so that you can go back and see some of the teachings that are going to help you in making this assignment come true so if this is good for you then please make sure you subscribe for the channel and i will see you next time in class hi and welcome to the business of building applications this is a course for people who are not only programmers but also business thinkers we're in chapter two of the course right now which is called designing an effective app and i'm going to give you an assignment so we'll call this assignment 2.3 and in this assignment what we're going to create are interactive user interfaces okay so in other words we're going to create a small prototype a demo of an app so the background is that i want you to create something that is functional and something that you can put into the hands of your users to test out and maybe you for the first person will be the the first person to test it so what this demo will do is will clarify in your own mind how the app will work you will find that there are some gaps in your logic or design and this will become painfully evident by how it works so you can show it to your potential users and business partners to see if you're on the right track so to do this demo we're going to use a program called figma so figma is free and so what i want you to do is to go log in at figma.com and get an account so that you can design an app you can see in the background here that i started designing a mobile app and it's got two pages on it right now so figma is pretty cool i want you to look at the tutorial pages to see how it works but it's so simple if you've worked with any kind of word or publisher or any kind of a page layout document you'll probably understand that you can drag shapes and resize them but then the cool part is you can click the play button and you can actually go through the app and see what the navigation looks like so here are the instructions that i want you to follow for sign up for an account at figma and then create a set of wireframes so that's the drawings of your screen and these will each represent one of the actions in your app so the actions are your user stories and then connect them so that way we can see the navigation links between each then run the app and test it out make sure that you haven't forgotten anything and that it works like you expect and then for you to submit it to me is to be graded i want you to do a demo and record the screen so you can record it with something like quicktime or if you use loom.com you can record your screen and have an a narration that goes along with it so the deliverables if you were one of my students i would ask you to submit a word document with wireframe drawings and in that word document you would have a link to say hey this is the video this is how i demonstrated my app and the prototype works and i'll show you all the features in it so if you're doing this without being one of my students go ahead and provide links in the comments below so that other people can see what you've designed and maybe you can get some feedback from them so thanks for watching i'm going to put a playlist link so that way you can check out all of the other items of this course make sure you subscribe if this is information that is valuable to you and we will see you in the next class hi welcome to this course here on the business of building applications we're in a section right now called the business plan so if you've been following me along you can see that we have several ideas about how to make a successful business app and so we're on part three right now which is about the business plans including marketing and monetization however you can see that there are other chapters in this course that we're going to cover and so if you haven't subscribed yet do that now my name is chad slooter and i teach software development at grand canyon university including mobile development and so welcome to class now let's take a look here at what we're going to talk about in the next few videos so we're on the app business plan cycle which i'm going to just put into four different categories we're going to talk in this section about your main business plan and we'll put it in a format called the business model canvas we'll talk about ways to monetize your app ways to market and get new users and talk about your relationship with investors if you're going that route and so this is four videos about the business plan of your app so now if you're interested in the business plan obviously you intend to make your app into a service or a product that people are willing to pay for so the plan that we're going to look at right now is called the business canvas model so unfortunately i can't take credit for the plan or the organization of this model here so this comes from a book here called the value proposition design which is a really interesting book you should check it out it's like a picture book with all kinds of ways to graphically show your strategies of how to make a business and so this is by alex osterwalder and you can see some of his uh people that worked along with him so we're going to take a look at nine business issues that he identifies that you must clarify so who are your partners what do you do for your customers what resources do you have what value do you provide why do your customers love you what channels do you use to either gain customers or deliver your services and products who is your customer and the profile what cost will you incur and what streams of revenue will you support your business with so let's talk about these individually now for some reason we can't just put these into nine different questions we have to organize them into this plan this board and so it makes you look smarter when you have a way to organize your things on a board perhaps i don't know maybe it makes it easier to remember but anyway we're going to follow the plan here this board so the key partners is the first question who are your business partners who are your associates who do you need to survive and the relationships with them what activities do you do what is the core service that your customers look for you to provide then we have key resources now these resources can be things that you possess or things that you must pay for or obtain and so this would refer to either the p the human capital that you have or the data that you collect or any kind of product that you're able to manufacture so value propositions are about your customers and why they think you are worth the money so do you make their life easy do you provide entertainment do you provide a service that they can't live without so the value proposition means why do people want to give you money and so you better have a good one a customer relationship can be the question is why do customers love you and why do they keep coming back or perhaps if your plan doesn't work so well you could do the opposite the channels refers to how you are going to reach your customers or how you're going to deliver your services and products and so what are your channels of distribution or your channels of incoming customers also your customer segments so it's ideal to have a profile the exact age the gender the location the hobbies the problems you have a profile that would tell you who john doe is and why he is your customer and also there might be a variety of john does that have slightly different attributes and so you segment your customers to figure out which ones are happy and which ones need improvement also the cost structure would you have an ongoing process that cost you money you subscribe to things do you have to pay people for giving you services that you pass on to your customers and so your cost structure is all about salaries and ongoing expenses and the last one is revenue streams and so how do you make money are people paying for your app are you selling advertising are you getting commissions and so those are all questions about revenue streams and so there you have it we've got the whole list here and like i said you have to put it on this board to make it officially your business planning board i don't know if you need this board but i i thought about it for a while and i realized i actually do remember all of these questions better when i see these icons in the in the layout so maybe you'll you'll find the same process regardless these are important questions that you must clarify if you're going to have a successful business and of course you're going to find that if there's a weak link in your plan that's probably going to require your attention and to make the process work better so to make this uh more concrete let's take a look at an example application so i pulled something out of the app store and i think i was looking for discounted restaurant coupons something like groupon and i found this app and it appears to have a number of users i'm not even sure if it's used useful in the united states or not but i don't think i've ever used the app but anyway i wanted to pick this as an example of how a process would go to think about how you would fill out this a business board so we have to have concrete examples right so eatago is a restaurant reservation app which offers timebased discounts that means probably discount of the day of up to 50 off every day for all of its four thousand five hundred plus restaurants there are no prepayments or hidden costs etigo is a 100 free at least it is to you the user and it's simple to use search and rejoice enjoy so the idea here is that this is an app but it's really an app that is a business it's a service you probably don't have to make the food but you do have to provide a stream of customers to restaurants to be successful and so here's some screenshots of what the app looks like you can see that you're getting groupon like coupons and you probably are going to be sent to restaurants that you're not familiar with and you're supposed to try them out and of course the restaurant is going to hopefully see you again and they will become your favorite place to eat so let's take this example and answer some of the questions that will go on this business planning board so let's start over so we have this key partners now if you were that restaurant app itago who are the partners well think of those 4 500 restaurants that are willing to give you the discount so those would be probably the key partners so i put down here restaurants maybe caterers food trucks hotels anyone that's willing to pay you to bring them a new client and so your key partnerships here you better make sure that you're really strong with these people and you are on good terms if these things go sour your whole business plan will fail and so that's why they're called key partners the second is what activities do you do so if you had to give the elevator pitch about this app you say hi i am shad i have this app called eatago and it what would you say put it in one sentence think about it well here's what i put so if you want to see my answer i said we match people with places to eat now there's uh there are other parts about discounts and things like that but that's pretty much it what are the key resources what do you have to have or obtain to make this thing work what makes your app valuable sometimes this is called the moat around your castle this is what prevents competitors from moving in and taking over your business you have a protective ring so what resources do you have that other people don't well you can probably say i have a lot of users hopefully you do it's probably the most difficult thing of making this app work properly is that you need to have a critical mass once you have some people i think that perhaps the data is considered a key resource you have a user list with knowledge of their preferences and habits so you obviously don't want to share that that would be a key resource think of your employees if you've got somebody that's out selling your product if you're trying to get new restaurants into your fold and into your collection then your key resources would be the contacts the sales people that are trying to get new restaurants to participate and so those are some things that i would say are key resources for this example what is the value proposition so think of it what what do people get when they use your app well i can see two value propositions one for the restaurant and one for the users or the clients for me as a client that's how i see it why would i download this app well i get free food or i get cheap food and i get to try something cool maybe a new restaurant i haven't seen before and then the restaurants what do they get well they get a stream of new customers so i would say the value proposition here goes two ways for this app we get a cheap meal and the restaurants get a stream of new customers now groupon some time ago was a hot item it seemed like everybody wanted to use groupon everyone was trying to get new customers in through groupon and i think it's cooled off quite a bit it was a it was an expensive proposition for the re retailers for the people that were giving away their services because they would get customers in the door one time and they never came back and i think that the value proposition was rather low but anyway here's another example of a app that's trying to do the same thing as groupon maybe they're more successful so your restaurants have to have some kind of a a payoff in the long term of course you give them the the first impression the restaurant's job is to make it a good one who are the customers and why do they love you so the customer relationships so i would say that your way to make your customers love you is that every time they open the app or they turn on their phone they get an alert that says hey there's a new offer you get a constant stream of good deals and interesting places to eat and that would make me want to open the app and keep it installed on my phone you can also say the key relationships with your restaurants is that you have a steady stream of good customers now i think some restaurants might argue that these are bad customers a bad customer for a restaurant is somebody that doesn't tip that doesn't pay that only works with coupons i know i'm certainly a bad customer when it comes to restaurants i hate spending money and so i usually look for rather inexpensive places to eat so i would not be one of the target users that a restaurant would be trying to get here's another one what are the channels so the channels for delivering your product and the channels for obtaining new clients so let's talk about this one we would probably think about a steady stream of people downloading and trying our app through social media so if you go viral that's great where you have recommendations from your friends but to get to that point you're probably going to invest a great deal of money in acquiring new customers so people will probably see an ad on facebook or maybe on tripadvisor or instagram or maybe they're googling restaurant names so you're going to have to spend some money to get their attention and so the channel is going to be rather expensive at first trying to get enough people to try out your app but i would think that those are probably good resources for getting new people what are the segments like i told you earlier i probably wouldn't fit one of these but here here are some segments that i would see are likely people who travel you know you're in a new city and you don't know where to eat people that eat out a lot obviously business lunches and maybe you're trying to target somebody that has an expense account at work maybe maybe not uh people that have expense accounts probably don't worry about 50 off deals maybe that's not a good customer segment there's going to have to be some research here obviously i'm guessing at where their customer segments are but people that eat out and like a variety of food are likely going to be good customer segments here let's talk about the cost structure where you're going to be spending money we're probably going to be spending money on ads you're going to have to be able to collect new clients you're going to have salaries if you have people working for you and so i'm just going to put down here facebook and google are likely going to be cost structure items that you are concerned about and any salaries that you have to pay so where do you make money you're giving away uh coupons you're probably going to have to think about your revenue streams as coming from the restaurants themselves it's not likely that i'm going to be a customer that pays to install your app maybe maybe not i don't know costco seems to be able to build people for shopping at their place i don't understand that why would you want to pay a hundred dollars a year or whatever from membership to go into your store usually i think of memberships is where i get something value not i don't get to pay you money but anyway maybe you have such a good deal on the app that people are willing to pay a subscription fee but i would predict that the most likely way that you're going to get this is that you're going to take a cut from every reference that goes in the door of the restaurant so either you collect fees from the restaurants or you have a subscription for a pro premium model on this and so if you look through all of these is it nine different items you're going to have the basic structure of your business plan far more than just coding an app isn't it you have to think about your customers and your relationships and your costs and your revenues so this business plan should be challenged by yourself by your critics by people that look at you by investors that might want to be interested in in starting your company might be able to sell this to your employees as well but you better have a clear idea of your business plan so in the next video we're going to talk about monetization so how do you make money different ways that you can get an income stream also if you'd like to see the entire course playlist i'll put that link here and don't forget to subscribe if you're interested in the business of applications hi welcome to this course here on the business of building applications in this video we're going to talk about the monetization that you can do and strategies for making an app there are other chapters in this course so if you're interested in taking a look at these you can also check out the playlist that i'll put a link for so we're on part three right now which is on marketing and monetization however you can see that there are other chapters coming up so make sure you subscribe and join us in class my name is chad slooter and i teach computer science and software development at grand canyon university so come along now let's take a look here at our app business plans really that's the subject here we're doing four videos right now that refer to our problems that we're going to have to face here so in the previous video was out about the business plan which is called the business model canvas in this video we're going to talk about monetization say that twice and then the next one is marketing and then following that we'll talk about working with investors so right now monetization there it is is trying to figure out how you can make money by people paying for you on the app or maybe showing you advertising and there's a multitude of ways that we can do this so let's get right into that so first of all before we do that let's talk about the app stores and the type of customer that you're going to get on each of the phones really you know there's only two types of phones out there there's android and ios and let's compare them and you'll be surprised at how much more money that goes to people or from people that run an apple phone so first of all revenue in the billions this is talking about app revenue and you can see obviously it's growing for both companies but ios rakes in a huge amount of cash in comparison to google when it comes to their app stores now this is not quite fair because this includes china and uh google doesn't sell apps in china apple does and so that's another whole story but anyway you can see that china will be a very big part of that market now the second is about the subscriptions so subscriptions are things like netflix or an annual fee that you would pay for the use of an app so not just a download but an ongoing thing and as you know likely there is a 30 percent cut that these stores take from you if you're selling an app or any kind of subscript subscription on it so if you download netflix it'll be strange that you cannot actually subscribe to netflix in the app you have to do that other website and of course there's a good reason they don't want to give 30 percent of their revenue to apple or to google just for the privilege of getting you as a customer so you can use the netflix app but you can't process any payments through netflix now as i'm making this video epic games and apple and google are all in court fighting this out because uh they've epic feels like this is a very unfair model but you know it at the first it seemed like a very good plan where you didn't have to pay for boxing up your app or running a store and selling cds and so that was the original impetus for 30 now let's take a look here at the markets so the countries that are involved in the largest number of dollars that are spent on apps or on subscriptions so you can see china is by far the biggest market not too surprising since there's over a billion people there and they probably all have iphones the united states of course a fairly large country uh japan europe and the rest of the world i guess are the third fourth and fifth uh people on the list here so think about who you're targeting and maybe that would impact on what kind of an application you're trying to sell so if you want to reach chinese people make sure you have an apple app if you're not interested in that then make sure that you target the countries of your choice here now also think about the value per user so if you were to take the total revenue that is being spent through each type of phone and divided by the number of users you'll get an idea that the ios user will spend about fifty six dollars a year on this and the average android person spends some six dollars so why is there such a vast difference well you can probably see at the very beginning when you filter out the cost of the phone people that are willing to spend a thousand dollars on a phone probably have more disposable income so you probably know me as a rather cheap person i use android phones and i use an apple computer so i'm not i'm not an apple hater but i probably am not a 56 dollar a year customer either the value per app sale is also quite dramatically different so the average person or the average app that is sold on ios is larger in its cost compared to android also take a look here this will probably explain a big difference of the two markets so this table shows the amount of market penetration for each of these platforms so ios mostly is in developed countries richer countries and android has a dominant market share in the developing world not surprising since the price of the phones are dramatically different so let's put some graphs on the screen just to give you a picture so as you can see the uk is roughly 50 50. germany mostly android the united states is one of those exceptions that has a great deal of ios users canadians are about 50 50. japan is similar to the united states with the dominance of ios so it makes sense that japan and the united states rather wealthy countries china the biggest market has a rather small section of ios however based on the population there's probably just as many or more ios phones in china that are being used as the united states just because they are approximately four times the population of the country on this side of the world also take a look at some of these at the lower end so i'm going to pick some large countries that have lower or middle income so india perhaps just as big as as china as population has almost no ios users and then if you look at indonesia another massively populated country you're going to see a domination of android and nigeria at the end is just the same and so the the point here is that if you're targeting wealthy countries and wealthy phone users then it might make sense for you to target your ios audience first if you're not really caring about if they pay for your app but you're more targeted at the actual service then of course this is not as relevant information let's take a look at the competition though just one chart here that shows an approximate this isn't any statistical thing but just to let you know that if you think you're going to crack into the top 10 your chances of becoming one of the super apps in the time usage is probably about as likely as you are going to become a movie star or an nfl quarterback so just plan on finding a niche and working with that and so check out another video here i'll put a link on it for finding a niche and comparing your competition so that you're not crushed by grand ideas that are just disappointments now let's take a look here at uh some statistics that come from google so i borrowed these from these slides from google research so here's one statement that they they make here to to temper your expectations half of the people that use applications have never ever paid for an app not too surprising most people just want free right and so why do people actually pay for an app or subscribe to a service well here are the top reasons number one it had the content i wanted so my prediction is on this survey it was probably netflix that most people decided to subscribe to or disney plus or something like that so you might be a sports fan and willing to pay for espn or whatever favorite movie channel you are on those are content is king type of applications the next one down it says here it offered features and functionality unavailable on free alternatives so i would say that's a pretty unique app if you can design something that nobody else provides for free that's pretty good uh i want an ad that is an app that is ad free so you can annoy your people so much that they finally pay the dollar to get your commercially free app that's that's one way you can get paid uh there were no free alternatives seems unlikely and the app had good reviews and so i would say if you would probably compare yourself to most others you would you would say this is a reasonable list of ways that people are willing to pay for your app so when you think about monetizing your app do you have such a strong set of content or value in your app that it doesn't exist in other places then you might be able to charge subscriptions or you might be able to have people pay you so that's some food for thought now let's talk about revenue models because there's lots of ways that people make money when they're trying to create an app so it's not just about selling your app and so i put together a list here of about what is it six or seven of ways that people can make money as an app developer and so let's go through each of these so first of all the first is you could just charge money for your app now look at minecraft that's one of the most popular apps on the phone of any type and you can see that it's 7.49 to buy now no one in their right mind is going to pay money for an app that's no good but everyone knows or in their target audience knows that minecraft is a really cool game and they're willing to pay it so it's not common to do this it's for a niche market uh people that need this or really are liking your service and it's good for complex or unique app that no one else has so if you can build the next minecraft or something like it then go ahead and put a price tag on it now the next item is advertising and so this is pretty much what you can think of as games right i mean every game that i've played shows me super annoying ads it works well on the ad model only if you have a huge number of users and so if you are the lucky few that get a a viral app that everyone wants to play you might make some money on an ad however if you've got a very narrow audience which is probably the more recommended route find your audience and and close in on the ideal customer that is not a good candidate for advertising because you don't want to annoy the few people that are really your true fans you want to find some other way to charge the money and so advertising revenue might be great if you are candy crush but for everyone else not so much the freemium is probably the best model that you can think of so it's the most popular model for making money it's more profitable to do freemium than by selling your app or by putting ads on it and also you can create quite a large audience because everyone gets to try your app for free and then if they bump into features that they really want they might be willing to pay you a subscription or a fee to get it and you can be guaranteed that people are pretty satisfied with the app if they've tried it they use it and they're willing to give you that extra freemium part then you've got a true fan and so i would recommend that if you're contemplating a business model think of freemium as the way to go so there's a free service there's the standard and of course the premium and so don't give away all of the great features of your app at the beginning hide some of those that are going to be critical but still give the user an experience to try it out and so i think almost all of the apps that i've paid for have been through a freemium model now think of ecommerce and you're trying to sell items so whether it's amazon or ebay or etsy or somebody like that you're going to have to have a massive business that will actually sell things and so good luck in competing against amazon ecommerce platforms however is a little bit different you don't have to be the store you can be the store that connects people to stores and so think of ebay you know then ebay doesn't sell anything they just connect people offer up it's like craigslist but on an app form that people like hotels.com or orbitz or any of the travel services airbnb of course is the biggest hotel business in the world and they don't own a single hotel room they just link you with people that have rooms and so an ecommerce platform is a great way to connect buyers and sellers and you take a cut or a sliver of the transaction fee so just this past week i took a vacation and rented a car through the app called touro never tried it before but it worked a guy met me at the airport gave me his car keys i borrowed his car for a week and paid him i was 300 and some dollars it was it was uh 40 off of what the car rental company was willing to charge me and it worked out as well as anything that you would expect at airbnb so think of a service that people need and uh people that are trying to sell something and you get in the middle and take a snip of the the credit and of course your profits will grow as your user base grows subscription models of course are the content people so netflix spends billions of dollars a year to get their own movies and so you know you're willing to pay your your monthly fee language apps seem to be a great subscription model because people can't learn a language in just a week or a month even or maybe even a year and so if you're doing a real good service that requires constant use then of course a subscription makes sense so i put on here spotify i'm a customer of them all trails i mentioned before in some of my previous videos where i want to find hiking trails and get maps of where i'm going and i'm willing to pay for an annual subscription because it's a valuable service to me so think of ways that people are constantly using your app and you provide information that changes over time or there's such a vast amount of information that they they can't get it all in one go and so that might be a good model for you with subscriptions in the last category we have our inapp purchases so these work really well with games so you know when you tried farmville many years ago you could play for free but then it took forever to grow your crops here's a list of games that are super profitable and all of them are free to play but cost you money if you want to play it quickly or advance to higher levels and so game makers have figured out that once you have people addicted to your game they'll sometimes pay anything even if it doesn't make any sense to continue on so you can see that they're selling ninetynine dollars a hundred dollars for pokey coins would you really pay a hundred dollars for an app not likely but somehow if you're addicted you're going to pay 99 for a bunch of virtual coins go figure if you're interested in learning how to market your app then watch the next video which is called marketing your app and if you'd like to see the entire course playlist i'll put that link here as well so you can see the business of applications make sure you subscribe and join us again for class thank you hi in this video we're going to be talking about the business of building apps more specifically we're going to be talking about marketing your app and collecting customers so in this unit we're talking about the business of building applications we're on part three which is on marketing and monetizing so if you haven't subscribed to make sure you do that to go back and see the other chapters in this course so my name is shad slooter and i teach software development and computer science at grand canyon university and so join me for class to see all of these topics and we'll learn together now in this video we're talking about the app business plans and so there are four sections about planning your business and we've already looked at two of them so we're on part three right now which is about marketing so how do you collect customers how do you get their attention and we'll talk about retaining them in a new video in the future but we want to get them in the door that's really what we're dealing with here so marketing your application so marketing is not just the idea that it looks cool but we have to reach the right people with a value proposition that makes sense and it's authentic to them and so what i'm going to do now is show you some discoveries that google provided me so the slides that you're going to see here are from google's market research so take this with a grain of salt because they think that search engines of course are the only way or the best way that people should work with but they have some data to support up their their their claims so it says here apps are often discovered outside of the app store so it's important that you have a good description of your app there's no doubt about it you should have a clear selling point when people find you in the app store however people usually hear about you in some other way and so family friends and colleagues are the most important way that you can collect new people so in another video we'll talk about making your app addictive and why it works when you have people making recommendations for you and so that'll be an important part of your app design is making a share button or invite button where people are required to join together to do something on your app and so personal recommendations are your best tool for gaining new customers however you can see that there are others that are just worthy of your time as well so making a good company website having a good description in the app store and search engines can work somewhat as well but those main two categories at the top are what we should consider are vital information now search is a driver in app discovery so it says here one in four people use search engines to find an app which makes sense you're looking for a solution to a problem and of course google is there to collect your ad now search is is more effective in certain categories than others so here are three so tr travel and technology and local apps so apps that are considered local i suppose for your own city or something like that so technology is good for search so for instance you say i want an app that can free up memory on my phone i'm going to go to google that's the first place i would look for travel of course i'm trying to find a destination and there might be a tour guide for the city that i'm going to or something like that and so a niche market for targeting people that are doing searches about it and so you can see the rest of them are not quite as good for your search results and in collecting new customers so think of the app that you've got your dream app that you're trying to build and see which category it fits in here and then you can decide whether or not that google search or buying ads on google will be a main strategy in gaining new customers for you so you'll be the best judge on deciding if that is a good channel so think about the factors that influence the download why do people click the button and install the app so here's some of them so why do people install well believe it or not search ads are effective in in driving app downloads so a search ad is perfect because you know the what's on the user's mind you you you've seen what they've looked for and if you can target that then it's the same same same strategy that that we've been using for decades now with uh targeting relevant ads to users uh i can't believe the second one here though it says banner and graphical ads inside of apps that must be uh skewed because you get all these uh when you when you play a game right you play a game and you get ads they're for other games which makes sense if you're into games you'll probably download another game if it looks fun and then the others are different ads for website ads and video ads so i think it's probably goes without saying if you know who your users are and you know what apps and things that they're already looking at you can probably crosspollinate you can probably get them to jump over into your market as well if you already know that they're in an adjacent market and so look for competitors uh interest and uh fun okay recommendations for others so why would you want to install here's here's another factor so recommendations from others number two or the second one on the right here is familiarity with the company and brand this makes sense because let's say you're um let's say you're talking about an airline app you booked a flight with american airlines and now you know that you have to check in with an app well you're gonna you're gonna choose their their app of course you're their customer so this isn't so much about acquiring new customers maybe is is serving your existing customers better so does your app provide something that their website doesn't and so i'll provide you a link with another question about why would you choose an app over a website because you might not need an app at all if your website's doing the job and so there's some other factors here is probably the most important is about price and so in a previous video we talked about how you can monetize your app and free apps with a freemium model where you have certain features that are extra money is far more effective than trying to charge money for the app up front because when it says here factors important uh 82 percent say price that means free right price means no price and people are not going to pay you money for an app that they've not really tested out get good ratings of course that goes without saying people with bad ratings are just going to scare away new users the description you better have a clear description and good screenshots in the app store otherwise people will probably not know what they're getting and then the others are reviews so most users expect their apps to be free but that deter it is also determined on the category so check the top app out technology apps so i can think of recently i paid ten dollars for an app for a technology app i had a an app that would allow me to extend my desktop screen to my um my tablet and so it was like having a second monitor kind of cool using me using the usb cord connection or even a wifi connection so i think i spent ten dollars or something like that and i'm not likely gonna spend ten dollars on most apps but that provided me with a portable second monitor and for where my kind of work it was great because i'm carrying my laptop to different classrooms and working in places that are not my office or at least i did before the covid scare and so i was willing to pay ten dollars for a technology app so if you've got something that is solving a technology problem that might be a good fee that you put on it however at the bottom you can see the other extreme is gaming people probably not pay you for your game they want to play free games because 12 year old kids don't have a lot of money and for them a two dollar fee is gonna be a game game breaker you know it's not gonna happen and so make sure that you know your audience so the next step in your business process is probably talking about investors and so the next video we'll talk about pitching your plan if you'd like to see the entire playlist for the business of applications i'll put this link on the screen as well the business course on building apps my name is shad make sure you subscribe and come to class with me again thank you hi welcome to the business of building applications so this is about mobile applications and the business plans that go with them so we're in a course that has several units and we're on part three right now which is called marketing and monetizing your app so you can see that there are other topics that are here so if you're interested in this kind of thing make sure that you subscribe and you can join me for class on other occasions my name is shad slooter and i teach software development and computer science at grand canyon university so welcome to class and please come again so we're in the app business plan area right now which is talking about money and how to make money and so we're in part four which is at the bottom here of this grid the investors that you're going to deal with so some of you will never get to the investor stage or probably will never get there because this requires a lot of momentum in your business so go back and talk about your business model first and how you plan to make money before you ask other people to help you out so investors are kind of scary it's a whole new field that is beyond what most of us computer science people are good at i mean we're building things that are built out of bits and bytes and user interfaces and now we're talking about managing money and partnerships so why do you want an investor maybe you don't want an investor but if you do you have to have a good reason so here are some of the reasons first of all you have to expand what's already going and you don't have enough capital maybe you need advertising to grow your your market or you have development of a new phase of your business and you're going to need some investment to help you there or these partners will have networks that will help you out so there are a variety of ways where you would want to bring somebody in but there are course drawbacks people don't just give you money they want a segment of your company and so if you give away part of your company you no longer own that and you lose equity so you may start off with 100 ownership of your company but by the time the investors are done you will be a minority owner of your own company you might even lose control of your company they won't like the way that you're running it and since they have the cash they make the final decision and of course there's always the possibility of conflict i think the most uh famous example at least from my world is steve jobs the founder of apple or the cofounder of apple was fired from his own company by the board of directors and of course the people that fired him nearly drove apple into the ground and were basically a bankrupt company and they asked steve jobs to come back so unless you're steve jobs you probably won't get that second chance but anyway investors have a lot to offer but they come at a price so the stages of growth though are maybe so far away that you're not even ready for that in the first stage usually most companies are in their what they call the bootstrap stage you look at your own money first and so you mortgage your house or you max out your credit cards or maybe you were just born rich but you have to have your own funds and then the second is you ask your friends and your family to help you and of course you give them a share of the company you say hey for ten percent give me a hundred thousand dollars and you can be a billionaire in ten years maybe maybe not but you have to have people that really believe in you because you can't really uh sell your friendships unless you've got some some pretty good plans so you could have some potential for problems uh business incubators are probably going to be in one of the stages where you're thinking about growing so you've got a product uh you need a you need some office space you've got some employees now and you got to have some some space and so governments usually are pretty nice they give you these incubation centers or these business playgrounds or i don't know what you would call them but these these uh low cost and early stage kind of growth they might even give you grants and give you some free money if you promise to hire people so where i work at grand canyon university we have a place called canyon ventures and so if you if you've got an app or if you've got a business please contact my employer they will give you free office space literally no rent they will give you access to internet and technology and advice there's only one caveat is that you have to hire my students which is a great deal because my students are really smart right they know how to program in different languages and well i've taught them everything i know so if you hire my students the university gets the benefit that they think is valued to them but you get free rent and you've got yourself a great environment where i don't know there's at least 50 companies now working in the business venture area and a lot of them with are dealing with technology and so you are networking as well as getting some free office space venture capital is eventually going to come where you've gotten a certain stage your company is working now when you get to this stage and angel investors are willing to give you large amounts of money millions perhaps if they have some questions that they can answer so if you ever watch shark tank these are usually the venture capital kind of stage where people have some track record to prove that they're making income and then far into the future when your app really hits it big then most people have what they call an exit strategy where they lose control of the company but they get a couple of billion dollars out of it if they're lucky and so they want to be bought out or maybe the company is unique and will stand on its own and will become a public company and so you have your ipo or your initial public offering and you sell stocks and so the idea is you want to be a partial owner of something really big than to be a full owner of something really small they say it's better to have a slice of the watermelon than to own the entire grape i guess that's the analogy and so those are the stages of your investment and the growth of your company and where you're going to get your funds to make it work so let's give some examples here of some apps that really hit it quite big so you might remember if you're old enough that instagram was its own company and it was growing quickly and facebook bought them they could see that they were a rising threat and so for a cool billion dollars facebook quenched that problem tumblr was purchased by yahoo well just recently yahoo was being sold by i think verizon is their latest ownership and tumblr is no longer part of yahoo anyway it's a old old business but they paid a billion dollars at one point for uh this web app uh skype famously purchased by microsoft for eight billion dollars and uh microsoft somehow missed it uh zoom became the thing in the coved era of working from home microsoft and its billions couldn't compete i don't know is skype that good or maybe not whatsapp was purchased by facebook for 19 billion dollars facebook obviously has way too much money that they can just buy their competitors i predict that in the future the government won't be so keen on letting them buy everybody and that starts to look like anticompetitive behavior if you ask me so most investors are thinking about this kind of a longterm payback their your business is going to grow really well and some other wealthy company will hopefully buy you and that's when they get their money back and so everyone gets rich in the process and hopefully the app continues on working as well as it did before large companies have a bad reputation of destroying good products just because they were competitors but anyway the owner gets the cash and hopefully the workers still have a job after the merger occurs now if you talk to investors they're going to have some very specific questions so these are some of them are you committed to your plan so they're judging you just as much as their product are you a trustworthy employee because if they give you a large chunk of cash they're investing in you just as much as your idea are you skilled enough do they think that you're a competent owner of the business they obviously are not going to invest money in somebody that will squander it how much money are you spending that's a huge question you might have a million dollars of revenue but if it cost you a million dollars to create that revenue your company is really at zero and so cost cutting is very important to investors how fast are you growing investors don't want to see a five percent annual growth in most companies that would be for a mature company but a startup has to be at rocket level acceleration because they expect to see huge returns because many times businesses don't work out how do you compare to the competition so do investors already own something or stock in somebody else that is your direct competitor if so then there might be conflicts uh who else is invested so you might come and ask for help from an investor but you've already sold most of your company to other investors and so they're going to come in and be a minority voice in your company they might not be interested in that how about this will you be profitable of course that's the whole bottom line isn't it and then finally how much of the company are you willing to give me and so this is a struggle do you really want to give away control of your baby to somebody else that just sees it as a dollar sign proposition because you are emotionally invested in the idea that you created so i'm not really a business expert so i i'm probably not the best authority to talk about most of this but if you if you watch the pitch on shark tank you get the idea people have a story of who they are what value they create and how successful they currently are and so some of the usual questions that i just went through here are the same ones that you get from the panel of judges on shark tank they want to know how profitable are you what your expenses what what your story who else is invested and and things like that once again as i mentioned at grand canyon university it's probably most other universities we have these panels of investors that are willing to take a look at companies that even our own students are working on and give them help and support and investments and guidance so find out who is doing this kind of work in your local area and attend the meetings and watch other pitches and maybe you can get some help as well with your own business plan now if you want to design a product that is truly addictive then there are some principles that we can go through here in the next video if you'd like to see the entire course playlist for the business of apps i'll put that link here as well and if you haven't subscribed make sure you do that now welcome to class and keep watching hi and welcome to the business of building applications this is a course for people who are not only developers but also designers so we're in the part three the chapter three of this course which is about marketing and monetizing our app or you might call it the business plan and so i'm going to call this assignment activity number three so what are we going to do in activity three we're going to write a plan that will tell us how we're going to make this a viable business who our relationships are with how we expect to get money and what our expenses will be so the background of this assignment is i want you to identify those things key relationships and strategies to make your app work so if you remember from a previous lesson that i have i talked about this diagram here that is going to tell you about all of the different parts of your business so this is called the bmc or the business model canvas and so it identifies all the key partners key activities key expenses how we are going to make our business run and so in one page you have a business plan so here's the instructions following this model i want you to create a onepage summary of the plan for why your application will be a viable business make sure that you identify the key relationships and the customers and the revenue streams that you are going to have in your business so then what i want you to deliver to me then is a onepage document so this can be a word document that has the plan and make sure that you hit all of those high points so if you haven't seen the video on the bmc then go ahead and check out the playlist and if you have seen it then get right ahead and start it on your thinking process of why your business is a viable business i would grade you based on how thorough you are and how thoughtful it includes all of these different items so if you need to include details then please do so if you're not one of my students of course if you're trying to create a business then i recommend that you create a plan that you can talk to yourself about as well as with your partners in any case i will put the course playlist here so you can see more details and the other chapters that we're talking about and i will see you in the next class hi and welcome to this video here that's in a series about the business of building mobile applications and we're in a class right now which is going to have several chapters and so we are on part 4 right now which is about building customer loyalty so if the other topics here look of interest to you then make sure you subscribe my name is shad sluter and i teach computer science and software development at grand canyon university and so this is one of the courses that i'm involved with so if you like this please subscribe and make sure you come to class with me so what we're talking about today is building customer loyalty or you might call this making your apps addictive depends on how you want to phrase it but the idea is that we want to retain our customers and make our app successful so why do people abandon their apps so i have a few slides here from google that will help us answer those questions first of all there's an opportunity here so if you're like me you're probably going to build apps that fit this category that they never get used after the users create them so there's a fantastic art in making an app that's addictive or loyal and so we want to find out what some of those principles are customers frequently never use their app for more than the one time they're forced to so you can probably relate i've been on airlines where they force you to download an app to get a boarding pass and i'm probably not going to fly for a long time so i just delete the app so we don't want users to treat our app as a necessity we want to make something that's attractive and even addictive why do people quit using your app well the number one reason is probably obvious they get bored with it it's the same old same old there's no variety so why bother so they just kind of lose interest or perhaps they had a need that they wanted to fill and your app did that and now it no longer is necessary and so those are some of the main reasons why people would abandon an app so google in their research says that sometimes we can reward users for coming back to an app so a coupon or a discount or some kind of bonus content and so when you get the alert on your phone that says there's something new or something valuable they'll probably open the app again so what we're looking at in this series is how to make those things happen if you're into a category that is about sales then of course discounts are going to be a big deal but if you're just in an app that's meant for entertainment or education or some kind of social media there might be some other ways that you can make them come back we have two goals really goal number one is that eventually you want to have an internal trigger that when they see the icon on your phone they are going to want to open it for some reason it's the first to mine solution so i have a question for you here when you have a question what's the first to mind solution that you think of well it's google of course google it what else would you use to find an answer they have successfully planted themselves in my mind at least as the solution to this problem how about this you're alone and you got your phone with you what do you do when you feel lonely well you're probably going to facebook or snapchat or some social media item or maybe your email or your texting whatever it is the solution here is to kill the pain of being lonely boredom so when smartphones were introduced somebody i remember once told me that we will never be bored again so it doesn't have to be just games sometimes looking at your favorite news site is a way to kill boredom or casual games how about this number two your customer loyalty goal is to try to create a compulsion okay now we're getting into some gray areas here about either your app being a loyalty app or being addictive apps well addictions here are actually a case uh here's one have you ever heard anyone say this i have to harvest my strawberries this might go back a few more years than you're used to but i remember farmville was an addictive app where people had to plant crops and they couldn't leave them alone here's one that's probably a little more up to date it'll always be in our consciousness i posted a picture and i went back three times to check how many people liked it so we're pretty much addicted to being liked how about this one just one more episode and so whether it's youtube or netflix there's more content than we'll ever be able to consume in our lives and we just seem to keep watching how about this one we have a dilemma as i've already raised is if you're going to try to design your app to be loyal or addictive we have a responsibility hopefully what you're building is something that is socially redeemable it's worthwhile and so you're not here just to say i want to make money on my app hopefully you have a higher purpose in your business plan than just to create money maybe you could have it a little better when you say like this i want to encourage people to practice healthy behaviors so let's say your app is to help people learn a foreign language or with their math tutoring or lose weight or to be able to save time or to connect with friends those are all great goals and so if you make somebody a loyal user in something that is a worthwhile cause then of course the morality of addiction is is pretty good however if all your building is something that will take people's time and money then shame on you how about this let's go to the hook this is a model that we're going to follow through a proven strategy that has been studied to figure out why people keep coming back to the apps that they do there's four items first of all there's a trigger that causes them to enter the app then there's an action which better be simple and it better be engaging then there's the variable reward so that the app did doesn't become boring so every time you open up the app there's something interesting and a little bit unexpected that you are wanting to see and so that way you're more motivated to return to it and then finally you have to have something from the user something that they have to do such as save their place save a file build a reputation or something that they invest in and so that they feel like they have to keep coming back otherwise they've abandoned some of their work and so this idea of the hook literally comes from a book called hooked and you can see the subtitle is how to build habit forming products so once again habit forming products can be a bad thing if all you're doing is hooking people on destructive behaviors so before you try to make your app so addictive that's that you're hooking users make sure that it's something that's worthwhile doing so let's review this hook there has to be somewhere to start you can't just put people on the circle without a beginning and so the external hook is really where we're going to begin so this external thing causes a trigger and then that comes to the action then that goes to the variable reward and the user investment and hopefully retriggering again so we need a trigger to get us started so how did facebook become a two billion user app well they had to start somewhere and so they made it a cool thing you're not going to be able to immediately launch a very popular app without some investment which is why companies require a bit of money to get started so here's one way to do it you can just buy google ads i kind of probably are going to regret this but i put into my google search find a car loan and of course you can see that there are no organic search results every single thing on here is an ad and i bet it costs quite a bit of money for those people to be placed so high so anyway if a person has a need they're going to go to google and search for that this is probably a way that you can start people on your app what is the need that your app serves buy an ad and you can acquire customers through paid ads of course this will be expensive at first but really there's no shortcut to getting new people into your app well once you've got a few people another way to get customers and to get them hooked or the initial acquiring stage is to have your social connections and so you're hopefully going to be able to send an announcement or a text or an email to somebody from a respected friend and they're going to invite you to come and so you can acquire customers through friends maybe your app requires that friend to comment or to play a game with you or to share a picture or something but we want to be able to make the growth organic because you can't pay for google ads for very long then the next item is once you've got an app and you've got it running they're going to forget about it your users will install it and ignore it and of course you better have a good reason for them to come back for example in this case it says hey two items in your shopping cart are on sale well if you're a shopper app and you installed it at one time because you wanted to save money this will probably bring you back into the circle and so this is all examples of the initial hook the part that gets you going so we want to reengage or to engage new customers so let's summarize the start so we can either do a search result or we can have a notification from a friend but there's another way probably the most effective way of all other than these mechanical and artificial ways we want to do it naturally we want to create an urge inside our user's mind to be either the first solution that comes to mind or a solution to a pain or a problem and so this is called an internal trigger so an internal trigger doesn't require any money it's what we want to get to that's our goal we want our users to have that feeling that they have to open your app so you look at your phone maybe when you're bored and one icon kind of jumps out over all the others so in my case uh instagram's a pretty common one i want to open it i'm curious what's there but what's the real reason that that app is in my habit cycle well there could be this fear of missing out i want to know what's going on what are my friends up to and what's happening in the world or i have this problem where i always want to seem to take a vacation i want to travel and so what a great app i can look around the world and find creative hikes to take in cities and beautiful places that i haven't been yet and i want to go or maybe you're more into the social connections with these social apps and you're lonely and you want to know what your family or your friends are doing well any way that you look at it an app like instagram has an internal motivation it's the trigger just by being installed and showing up on the desktop you're going to have a trigger to use it so how do you trip those internal triggers how do you get to that part in a previous video we talked about the five why's the five why's can bring you to the root cause of something so why would julie want to use email so that she can receive messages of course the second why in the list brings you a little deeper and why would she want to receive messages well she wants to share information quickly why would she want to do that well she wants to know what's going on with her coworkers friends and family well why does she need to do that see how the y's just keep piling on she wants to know if somebody needs her and why does she need to do that because she fears of being out of the loop and so there is that deeper need she fears something and we're going to meet that and that will become an internal trigger if we can solve that so that's the orange bubble that's what we've looked at is the trigger part now let's talk about the action so if you want to make an addictive apps what do we have to do in that action stage so the action is the main activity what do you do with your app you show pictures do you share coupons do you do something so that better have some features that will call our app experience and if you get that right then people will have that feeling of wanting to come back again and again so in the action there better be two principles here that are met first of all it has to be easy and then the second it has to be something motivating it's emotionally satisfying it's cool i like it and so those are pretty broad and pretty hard to define really so let's talk about some examples so if we were to say we want to have an ingredients to look at what causes an action we would say that there has to be three ingredients there's the motivation the ability to do it and a trigger now we've talked about motivations and triggers already the action part the part that you're trying to program and that your users are engaged with is number two how difficult is your app to use and like i mentioned it better be simple and it better be kind of fun so take a look here at the percent of ease of use we'll call this compared to the number of users that are actually using the product and so you can see pinterest in the top right corner is really easy to publish something online and if you look back in time the other ones are slightly more difficult and so the idea is make it so easy that the users can't not do it so how do you measure effort well you can measure it in several ways you can say it's time or it costs money or it's thought in consuming it's difficult to understand or you might do something that would be embarrassing and we'll call that a social cost or it breaks the routine and that makes it more difficult and so the resistance to making your app action happen goes up if we increase any of those ingredients if it takes too long if it's too complex if it costs too much money or if you're going to embarrass your users they're probably not going to do it and so we want to keep all of those things to a minimum now just a simple design in your app can make that difference so think if you were going to show a list of pictures you could do it with the results of an infinite scroll so that the user has nothing to do but keep moving their thumb and see what's next so that's kind of the instagram approach really no one ever reaches the bottom of their instagram feed however if you were to break it up into pages and just showed 10 pictures per page you would have a natural break and people would stop after one or two page links and so that's a real simple design of making it simple and easy to use one term that you'll hear in this in this kind of a conversation is the idea of frictionless frictionless is usually about buying things so amazon famously has the buy with one click button that's pretty frictionless they've got your credit card saved and you don't have to think too much or in your case maybe your app has a registration screen well don't do the one on the left you don't want to make that too much time or too much effort just have them sign up with their favorite social media account and so we've talked about the trigger and now the action so keep the action simple and have something interesting to do or something useful to do now the third one that most apps use that are very addictive is something called the variable reward so that's the third item in this list so what is a variable reward well the reward is the emotional response or payback that you get from using your app but the modifier is we want to make it variable so that way it is something that we would classify as cool or new let me give an example so pinterest is an app that has a variable reward i opened up the pinterest page today and took this screenshot i had no idea what i was going to get i look across here i see a craft it looks like some photos some poetry wow talk about variability and the neat thing is if you want if you open an app like instagram or pinterest or facebook or youtube you never know quite what's going to be there but you know you'll find something so here's another picture so i went to youtube.com this is just the front page and you can see that the youtube algorithm knows pretty much who i am i'm interested in technology i like hiking but i have no idea why i got this drum line or i got this guy that is a failed cash in transit heist whatever it's just something that is kind of interesting so check your youtube feed out and see if they are meeting your variable reward need of course you probably remember if you've studied this in psychology at all that variable rewards can reinforce behaviors and cause habits to form and so the experiment was to give pigeons a reward if they would tap a button they would get a seed they could get something to eat and so the birds certainly learned how to do that but then they taught the birds that if they tap a button they would get a seed only on certain occasions and it was like a slot machine it was random now the birds formed a stronger habit when they had to tap on the button that never gave them consistent results and so the habit was stronger when they weren't certain if they were going to get what they wanted so if it was consistently giving them every click of the button it wasn't so interesting but a variable that was very interesting and so humans are not a whole lot different so why do people sit and look at a stupid game that all they can do is press a button and watch pictures i honestly don't get the idea of slot machines but a lot of people seem to like them they are doing variable rewards now if i offered you 80 cents for every dollar that you gave me you would soon stop that ridiculous transaction but if we had it variablized we don't know exactly who's going to win then you would keep at it now b.f skinner a great psychologist of course in behavioralism talked about these three types of variable rewards so what kind of classifications are these we got the tribe the self and the hunt so let's reinforce this with what our apps can do to meet these emotional needs so first we'll talk about the self okay what does that mean so in your reward you're going to have some kind of a self promotion you've reached a new level you've unlocked a new feature you've gained a certificate you have accomplished something that makes your own capacity greater and so we'll call that your selfreward there's also a reward that we could classify as the hunt so finding something that's really cool before anyone else does and of course pinterest looks to me like a great hunt app so i'm not sure what i'm going to find there but i will probably find something and so there's a variable reward on this one called the hunt or here's another one the variable reward of the tribe and so sometimes when you make a post you can only hope that you'll get a million likes on it wouldn't that make you feel warm and fuzzy to say that i picked something that was cool and everybody liked me or maybe you're more into the technology like with stack overflow you answer a question or you post a post a question and people vote reward points reputation points and so who doesn't want to be known as a smart programmer and so that is a variable reward you never know what quite you'll get every time you participate so we've covered three of the four the last one's coming up here which is called user investment and so this one's just as important as the other three so what is user investment well it's something that you contribute and it makes the product more valuable some people would call that the ikea effect and so ikea of course is the company that sells furniture in a box and you have to put it together so first of all it's cheaper that way they don't have to assemble it but you also take a little bit of pride to say i built the desk so here's an example of an app that would have user investment so you play this game called gardenscapes for a while and probably you're planting vegetables in a garden and virtually you've gone through three seasons of harvest and now you're quitting the app and as soon as you close it it says hey stop i want to help you you save your progress you've invested your time so don't just throw it away or maybe uh you're in your airlines and they say you just took a flight and we'll save your travel miles and you'll come back so that's the idea uh here's another one where you can have a collection so you're under some kind of a music play or a video play app and you create a list of things that you like well of course that's a user investment when you use the app and the more you use the app the more it becomes part of you and that becomes an emotional attachment or maybe something a little bit like this is from linkedin so you start using linkedin you put your profile up your job experience and then you stop well they present this to you to say hey you're making good progress we're almost to this next level level up if you can just add a summary of your portfolio or put a photo on it and so they make it a game so that you can make different levels so your user investment is going to increase the people's emotional investment in your app and they're more likely to return if they know they've already collected something and invested the time it's the same principle that we have here when you have a frequent shopper card i'm more likely to go back to the a restaurant if i know that i'm just one punch away from a free meal so here's here's a kind of a statistic that i think is very telling so 71 of users will stick to an app if you can get them to use it three times are or more so you look at that uh 71 percent is pretty high so if you can get them to use it more than once you're on the right track three times seems to be a pretty good number so make sure that there's at least three reasons for them to return to check on something so our goal here is to reach the habit zone so the habit zone is going to depend on two factors it looks like so the frequency of your app of course how often they come back and the usefulness of your app so even though they might not be on your app every single day if it's something they really need they won't forget about it so i'll give you two examples here so google google is something that we use multiple times many times a day and it's pretty useful too actually but they're uh one of the most addictive or we'll call them loyal app user apps that we can find the other we'll call amazon so i don't shop on amazon every day but i'm sure some people do that are watching this i wonder if you could put in your comments below here of what's the most number of purchases you've ever made in a single day on amazon and i think the poor delivery guy that comes here every time i click buy well that's the model and so the idea is that your app should have either something so useful that they can't forget about you or something that is easy and frequently used and that will help you become part of the addictive app now once again let's say that with great power comes great responsibility so make an app that actually is useful and is something that people should come back to so don't just do an app because you think it's going to make you money make something that will make their life better and then you will have a good conscience about why people should come back and use your app again in the next video we're going to talk about which tools that you should use to build an app whether it's for crossplatform or single app platform also if you'd like to see the entire playlist for this course i'll put a link here for the course playlist so whichever i thank you for coming make sure you subscribe and join me again for the next class hi and welcome to the business of building apps this is a course for people who are not only programmers but also business analysts so we're in section 4 right now which is called building customer loyalty and this is a video that will help you through an assignment that i'm going to give you if you were one of my students that i am teaching at grand canyon university so in this assignment the goal here is for you to demonstrate that you understand hook so what is hook well the background is that in a previous lesson we said that hooked is the process of retaining loyal customers or in a more cynical way how to make your product addictive and so that your customers are stuck with you so the process of hook was these four steps we had trigger action variable reward and user investment so i'm not going to reteach all this that was in a different video so what i want you to do for the assignment then is to demonstrate to me that you understand how this hook process works so i'm going to ask you if you are one of my students to write a paper that summarizes these four steps in the hook process and of course provide examples when appropriate then i want you to look at your own phone and look at the apps that you most commonly work with so as you describe these four steps in the hook process i want you to provide examples of where you are being hooked what are the features of the apps that you currently use how are they related and how do they map to these four steps so obviously if it's something you use frequently it's something that makes you a loyal customer maybe even an addicted customer so the deliverables that i expect to get from you if you're one of my students is to get a onepage summary of the hook model telling me about the four steps make sure that as you do that there are examples given from real life in your personal experience where you have seen hook so if you haven't seen the other videos i will leave a link to the playlist for the course so that you can go and see what the information here is if you are not one of my students you can probably put in the comments below in the youtube section of where you have seen these places of hook happen and why they are effective in your life so in any case make sure that you subscribe because this might be a valuable information to you at least i hope it is and if you're coming back i will see you again in the next class hi and welcome to the business of building apps this is a course for people who are designing applications and the business decisions that go with them so there's multiple chapters in this course and we're on chapter four which is about building customer loyalty in this particular video i'm going to talk about an assignment if you were one of my students at grand canyon university this is what i would ask you to do for homework activity 4.2 and the goal here is to apply the hook process to the design of your own app now if you don't know what hook is make sure that you go back and look at the previous videos hook is the process of making an app work well so that way you become a loyal or maybe an addicted customer so what i want you to do now is to go and review the business plan in a previous assignments i asked you to create a business plan which includes your relationships uh your revenue streams and your costs and i want you to take a look at the app that you designed and all of the user stories that go with it so you will notice that when you have your user stories in a chart that there may be gaps of things that you didn't include of the hook process so think about this way hook is the trigger the action the variable reward and user investment so like i said that's been taught already so what i want you to do is with an assignment i'm going to have you to create a table so i'm going to show you a table in just a second so you can either do it on from scratch or copy the one that i give you and i'm going to ask you to review all of the features in your app and see if you can add some new ones that would increase your customer loyalty for each new feature that you add tell me where it fits in the hook model so for instance if there are four different things in the hook model such as trigger action reward and user investment then which of the features in your user stories map to those items and most likely there's going to be some gaps so what i want you to do is to add new features so for instance you might say you forgot to put in here as a user i want to share some feature of what i've done with other friends so that may have not been in your user stories yet or you might have something like as a user i want to be able to save my progress so that i can come back later and continue where i left off so that may have not been in one of your user stories i'm just suggesting that those are two likely items that you would put in this chart so the goal here is to review all of the user stories and see if you can fill in some gaps where you have not made your app very loyal friendly or addictive so if you were to submit this to me as your teacher i would expect to get a word document that would have this table in it and in that table there would be improvements and new user stories that are mapped to those four items in the hook model so if you'd like to see the entire playlist for the course i will put that here so you can go back and see what the hook model is and the other items for building apps are so if you're one of my students i will see you again in the next class and if not please subscribe and join us hi welcome to this video where we're talking about the business of building mobile applications and so we're in the middle of a course which has got several chapters and so if you like what you see here make sure that you subscribe we are on chapter 5 which is choosing the right tools for your mobile application so in this unit we're going to be talking about what technically you can do with a phone and maybe what works better with a mobile website so my name is chad slooter and i teach computer science and software development at grand canyon university and i'm glad you joined us so make sure that you subscribe to catch all of these and we will become better programmers and better business people as a result so in this section here about our business tools our application development tools we're going to have three different things to look at first of all since it is a mobile application course it seems strange that i'm going to say in this video why you should not build a mobile application there are some reasons why it might not be a good idea in the next video we're going to be talking about the companies and applications that utilize mobile apps in a very effective way and then finally we'll talk about crossplatform mobile choices what languages and frameworks are best and popular today so right now though i'm going to give you five reasons why it might be a better idea not to build your mobile app even though you may have started with the assumption that you need a mobile application so why would that be if the teacher is teaching a class on mobile applications it's because there are some pretty good alternatives when you compare what you can do with a standard web browser and what you can do in a mobile app so compare these two pictures on the screen which one of these looks like a better experience for the user so the point is they're hard to distinguish so you're at a store you can browse the catalog you can see all the products you can add something to the cart you can check out you can use your credit card almost everything that you can do on the mobile app you can do on the um on the website the website is designed to look good on a phone that's why it's called a mobile first design or a responsive design and so maybe your phone app isn't really a necessity at all because we can deal with a lot of things when we have just a mobile website but let's talk about some reasons why you would think that a mobile app is required and then we'll go to the reasons why you might want to just go with a website reason number one you need to have high performance so if your goal is to build something that is uh graphically intensive and like a game here then a mobile app clearly is the choice because you will never be able to create the same performance in your web browser such as chrome now the second reason is you probably should consider what phone features are available and if you need them then you build an app for example if you need to scan something you're going to use the camera also think about the other features of your phone it has a gps sensor so it's location aware it has an accelerometer so it knows when it's moved so you can tell if your phone is being shaken or if it's been turned around in 360 degree space the camera obviously is something that a mobile app will be better at than a website and then there are other accessories so for instance think of if you plug in some kind of an external blood pressure reader or some kind of a credit card swiper those are going to probably need a mobile app a native app and not a website so that's probably the biggest reason you would want to choose a mobile app but if you haven't thought of those if those are not in your scope then this is a reason why you shouldn't need a mobile app let's talk about push notifications so what is a push notification well that's the alert that shows up on the phone that says hey there's something new come back to the app and so if that's important to you then you can probably use a mobile app and not the website so you would probably be able to send emails to customers or text alerts but if you want to have the popup message then a mobile app is what you need also the value of the icon itself so when you have an app installed you own a square of real estate and if you're really lucky the user will give you the front page so that in itself might be enough reason why you would build a mobile app the user will come back they don't have to remember your web page address so those are good reasons for a mobile app but let's talk about if you would not do the mobile app and you would just make the responsive website why would that actually be an advantage so here are some reasons first of all mobile apps don't show up in search results very well web pages do and so when people search for a topic on google they're going to pick one of the first few links probably the first three definitely the first page and so you want to be able to design a web page that is optimized for your keywords your niche audience and so a website is a better attractor of search results also think of the probably the cost of your mobile application and this is a very technical reason one code base so a one code base means that you have a single server that adapts to a mobile phone to a tablet to a desktop and that all shows up in the chrome browser or whatever browser the user chooses the single code base is super important because you either hire another programmer or you split a programmer's attention to two different code bases essentially if you have an ios app and a android app and a website you have three applications as a business person you're trying to reduce cost and a having a single team or a single developer that is focused on a website instead of having three different developers or three different teams you've cut your cost in less than half using a single code base so i would say that is probably a powerful reason for a startup to focus on just a mobilefriendly website you don't have to have so much code and development cost also think of the technical problems so every time there is a update to the operating system on android or ios you're going to have to make sure that your app conforms to the new features of the uh of the the operating system sometimes there's new requirements sometimes there's permissions that need to be gathered and you need to go in to your code of your app and update it and if you don't you're probably going to have this occur you're going to have application crashes and people will hate you and give bad feedback now if you build a website this rarely happens if a website works on one client it's likely going to work well on most clients now there are exceptions to that and you can certainly create a website that crashes there's no doubt there but i'm saying that there are less problems with keeping a website up to date than there are keeping three or more different versions of a mobile app here's another important reason for cost there are no fees when you build a website so you would know that uh apps such as um the app store and the play store charge you a commission for every transaction inside of your app so if you're selling virtual goods or subscriptions they're going to take 30 percent of your of your profit or your whole charge not your profit but the whole price and if you if you make a transaction on a website no problem at all they would just uh not even see that this does not occur for physical goods so amazon is not paying 30 percent to apple for every time you buy a item from the amazon store but this does apply to subscriptions and virtual goods here's a term called instant updates so this refers to also the technical problems if you have to update an app you're going to annoy the user it takes a few seconds sometimes it's automatic but if you're doing an update to a website the user doesn't have to download anything just the next time that they visit your web page the changes are in effect so there are both advantages and disadvantages to choosing a mobile app versus a mobile friendly web page in the next video i'm going to show you examples of eight different companies that really nailed it when it came to designing their mobile app if you'd like to see the entire playlist for this course i will put that link here as well make sure you subscribe and come back to class with me thank you for watching hi and welcome to the business of building applications this is a series of videos this for a course that i'm teaching and we're talking about the business process and the management and design of applications you can see that there are several chapters that i'm going to cover here and we are on number five right now which is focused on choosing the right kinds of tools for the apps that you're building so if this looks interesting to you make sure that you subscribe my name is shad slutter and i am a professor of software technologies at grand canyon university so please come to class with me if you like this kind of thing these are the other topics that are ahead of us so there's still more to come now let's get right to the point here we are talking about the app development choices in the previous video i said several reasons for why you shouldn't build an app at all which is kind of a strange thing for a class on building mobile applications so check that one out if you haven't seen it now we're going to focus on this one this video about several examples of apps that really nailed it these are good products these are companies usually that make an app worth your while and then we're going to talk about crossplatform apps in the next video so right now we're talking about nine mobile apps that work so these are things that actually are worth your download what is not on the list are a lot of things that you would probably already like as apps so for instance this this example here shows a store where the mobile experience is very similar to the uh the app experience on a chrome browser and so really there's no advantage of building a custom mobile app for this so for instance amazon you can do all your shopping on amazon right through their mobile website and so it might be a good idea to have the app but not necessarily so what we're going to focus on here are people's apps that really require you to have a native app let's start with the banks so banks have done a great job of eliminating the need for the bank itself and so you've seen commercials where you can do all of your banking online you just take a photo of it and the bank will process with that photo also it's good for alerts and so banking has become clearly not just a computer item where you can add and remove and transfer funds but you can make payments mobile payments you can deposit checks and so the bank app that you have on your phone is likely a good use of your technology there i'm going to put mcdonald's in here now i could probably substitute the mcdonald's app for most uh most restaurants this is just one that i happen to use and there's a couple of reasons why i picked it one you can reduce your time through the drivethrough like in half you don't have to pay for anything it's already preordered also they give me all kinds of a location aware kind of ideas so i know the gps is watching me so it knows my patterns so i included it here as an effective mobile app that i use on a regular basis the next app i'm going to put on here is no surprise a lot of people would expect lyft or that other company uber we would might put in there why is this a good mobile solution and not just a web solution well i think the gps is pretty important here we have to know where we are and where we want to go and so the com the computing there is pretty high the graphics of the map have to be good and most importantly we have to know the gps location so i'm going to include lyft as one of those apps that is transformative without a phone you probably wouldn't be able to do it and so this is a great example now i didn't include uber i have a long memory of companies that i would consider evil so so just check the the news from several years ago about why uber might be an evil company so the next company up is walgreens now there's probably other good pharmacy apps out there but we'll just pick walgreens because well they're famous so what can you do with an app that you can't do with a website well first of all you can refill your prescription with a scan so your your phone has a camera and they've built the app right there so that it'll recognize which bottle you have in your hand and it will connect to your account also with walgreens you can have telemedicine so you can talk to the doctor or pharmacist without an appointment perhaps standing right there in the store or as you uh are on the way maybe hopefully you're not driving and talking but the walgreens app is going to eliminate the need for a lot of timeconsuming work and you can't do these things in a regular website so that's why it makes the list of a successful company app ikea comes up next so remember ikea is the company that will sell you furniture in a box and you have to assemble it so what does their app do that's kind of interesting or unique well they have a 3d modeling tool which is based on the technology that's in your phone like augmented reality and what's called lidar which is the kind of a radar system using light waves and you can place furniture in your house and take a look at it you can paint your walls and wallpaper your house virtually and you can see the results as you move the phone around so literally you spin around looking at your phone you see the room and then you have pictures of items of furniture and accessories superimposed over the picture so a great tool for selling their products i don't really know if this is effective as far as increasing sales but i liked it because it was the cool factor so maybe that will just allow people to look at ikea's furniture more often so personally i haven't used the app but i just think it's a great idea l'oreal is a makeup company of course and what are they doing that requires a mobile app well you can try on their products you can put lipstick on or makeup of any kind you can style your eyes and it's a virtual kind of an augmented reality experience as well so this is kind of an instagram or snapchat idea but they're using it to sell their products and you can see that you can probably click the buy button and you'll be happy with your results even though you haven't actually tried anything on here's an app that probably is just picked out of a classification of many golf shot so what is golf shot it's a program that allows you to see around yourself so if you select the golf course name that's in the list they have all the measurements to the green to the shortcuts to the sand traps and it's kind of like having a caddy that knows the course extremely well you can see ahead of you other similar apps to this i've seen is a peak finder app where you show the the mountains that are around you it tells you the mountain name it literally points to an arrow to the peak and says like this is long's peak in colorado which is 14 520 feet tall and in your golf game yes people get pretty serious about golf right they want to make sure that they have the proper information and you get a map of the course that you're looking at tells you a little dot on the map where you are how far you are to the green and so once again this is a great example of an app that requires a native app it won't work in a website so download the app it'll be worth your while and i predict that rich golf people are going to spend a little bit of money on an app if it'll improve their game i mean for goodness sakes they buy all kinds of expensive golf carts golf clubs and clothing so why not invest a little bit in your mobile app as well the euphoria chalk is my next candidate for a great app so what is it it's an app that you would use for the remote expert and almost all the examples that you would see on their website and other propaganda that they show shows a person who's a field technician is this person and he's looking at something very specialized and you you can see that superimposed over the picture where he's working is somebody else that is drawing on the on the tablet so the technician might not be familiar with this piece of equipment and so the numbers there say plug in here disconnect number two attach number three and it's an augmented reality solution again so a collaboration of people looking at an object even though they might be thousands of miles away so some years ago i was involved in a construction project where we were in mexico and the experts were in boston and literally we were trying to use video chat and cameras it was it was okay but this would have been better if we could have had this augmented reality where we would see and touch and communicate in real time as if we were both looking at the same thing and so that's a great solution obviously you can't do that with a website only health monitoring apps are a big category and it seems like android and apple and google and apple have already given us some great tools but there's probably a niche available for others so think of gadgets that must plug into your phone so in this case we're measuring the oxygen in your blood and you can't do that with a camera you can't do it with just a fingerprint sensor so there's this physical device that plugs into the phone and as soon as you have a physical device going through a usb cord or some other communications you're not going to do that with just a website you're going to have a native mobile app and so i know that like credit card swipers would be a good example of this so people that are in a food truck are going to be charging you with a credit card not with a machine except for except for their phone so another infamous example it was the company called theranos uh look them up in the news they're another one of those evil companies that i would refer to in my my longterm memory they had a plugin item to a phone and they claimed that they could replace an entire laboratory with a drop of blood on a microchip and the app would take care of all of the tests and it was a little bit of a over promise and a a lie a straight lie and so the founder of theranos is in trouble and in criminal court because of her actions so these are companies that have built apps that are great examples of why you need a mobile solution and not just a website in this next video we're going to talk about ways to create crossplatform applications and so that will reduce the amount of code that you have to write if you'd like to see the entire course playlist i'll put this link up as well and make sure that you subscribe so welcome to class and come back for some more mobile application development hi welcome to this course called building mobile applications we're talking about the business problems that are associated with building mobile apps in this video we are in part number five which is right here about choosing the right tools so we're going to be focusing on choosing the right development tools for a crossplatform mobile solution if any of these other topics are interesting to you make sure you subscribe and come back to class when these are available my name is shad sluter and i teach software development and computer science at grand canyon university in phoenix arizona so let's get started on our topic today so we are talking about development choices that are about cross platforms we've already asked the question about should we build a mobile app and then we've talked about some companies that really nailed it with a great solution that was mobile and then now we're here on the cross platform issues so let's get started on examining what languages what tools would work best for your company so really there are three types of language development tools that you can work with when you're talking about mobile development first of all there's native code so this is the android studio this is xcode with apple and so you're creating code that is running specifically for that phone also there are ways to create web pages that are called responsive design and so if you're a good web developer you should think mobile first and you might not even have to create an app and the third category the most involved here is hybrid apps using technologies that were originally designed for web pages but we've adapted them to work on phones so let's first of all talk about the native apps so if you're going to work on an apple or an ios phone you're going to buy a macintosh computer and install xcode this is the platform for phones as well as tablets xcode is like visual studio if you worked with that before it's an integrated development environment also the languages that you can pick from if you're developing a native for apple you're going to work with objective c or swift now swift looks a lot like you would expect in javascript or java objective c well it looks like nothing else maybe cobalt i'm not sure but objective c is certainly out of favor for most developers these days now if you're working with android you're going to be building a native app as well and their program that is for developing apps is called android studio so android studio looks kind of like xcode where you have layouts and then you have coding sections the languages that you're going to be working with are going to be either java or kotlin and so java of course is super popular it seems like developers have been working on java for decades and so if you've got java skills then you're ready to go with android with learning how the libraries of course work but you're ready to program now kotlin came along just a few years ago and apparently it is more efficient you get right you shorter code and it's developed specifically for android so the disadvantage obviously is you have to learn a new language if you're developing in android now what are the advantages of choosing a native app over some of the other technologies that we're going to show later so first of all if you want to have the best user experience possible for your app then pick native it's going to run and look like you expect an app to run it's a real app it's not some kind of a clutch now the next one that you might say is not necessarily how the app looks but it's how apple and google treat you they can tell when you submit an app to the store of how how it was built what platforms did it run on and i've been told you get a better rating you get higher reviews and more likely to be promoted on their store they want users to have good experiences however the disadvantages are pretty big too so if you are a developer and you're building in native apps you'll have to learn multiple programming languages so for some of you that's not a problem you've already got your languages in web development or other app development and you're ready to just adapt them to android so if you've already figured out how to program in java you're ready to go for most of the skills that you'll need for android and of course swift is very much like either of those languages so you're probably not going to be choking on that however if you are a brand new developer if you don't really know how to code yet you want to build a web app the native apps will be the hardest choice of the three so a big problem that businesses seem to face when they're developing native apps is that they're actually creating double the work for one app you have to create an android version and you have to create an ios version and that sounds easy if all you're doing is creating a simple app however apps can be complicated and require lots of planning so you're going to have to design your app twice you're going to have to build two different testing plans for it you're going to have to deploy to do two different platforms you might have two development teams that are working on individual parts of your app and also you have to maintain your apps so when things change on your phone you grow up to new versions your app is going to have to be modified as well and so it is double the work of just creating a single platform app so the second way that you can think of when you're trying to serve your mobile users is just to not build an app at all just pick a web page design that is responsive so i think almost every web page out there these days is using mobile first in their design so you look at a page and you on your phone and you notice it looks different than the one that you see on your laptop and your tablet is somewhere in between these are common web technology design patterns that frontend designers use these days and so it's not really an app but it serves the same purpose as maybe what an app would do your business has to connect to customers and make your page do both mobile and web and you've got yourself a solution so what are the advantages for just using web for mobile well obviously you don't have any extra coding you don't have to figure out how to create a mobile version of your company app you just make your web page function for them all also it's somewhat simpler to just create your web page so html and javascript might all all be what your your web page has involved with so i know that most web pages have java and csharp or php or ruby or some kind of a back end that is really doing the the server work and of course that i wouldn't want to discount your development there but you don't have to worry about compiling a web app to you and you don't have to worry about publishing it to a store or promoting it you just make sure that it has good google results or your typical web page seo and you're ready to make your mark so what's the disadvantage of using just pure web pages well apps work better on phones they can a web page can be slow and obviously it's not available offline so if your mobile users are out of range which they frequently are your web page just won't work so you're also missing out on an opportunity to promote your company if all you create is a web page the app store gives you visibility you can attract visibility you can attract customers you can get attention if your app does well in the web store or the app store also web pages don't do everything that you can with a mobile app so think of using your camera your gps your accelerometer and things that are more native and you will not probably get as good of an experience if all you do is a web page now the third category brings us into kind of a middle ground between those it's called the hybrid apps there are three ways to create a hybrid app the first one we're going to look at is a web view the second is compiling an app that will be cross platform compatible and the third is using something called javascript core using javascript to create native apps and so let's take a look at these together first of all if you're thinking about a webview app the technology that's probably at the core of this experience is called cordova apache cordova is an open source project and you can see from the diagram that it takes the usual web page using html css and javascript and then it does its little black box conversion and poof out comes an app that you can put on the web store it runs on apple it runs on android and what's that other thing there that square some kind of another third mobile tool i guess i'm not sure what that platform is but you can make your cross platform app using just your web technologies so the advantages of working with that are that it's simple if you're already a web developer then apache cordova will make your app out of the code that you've already built and there's only one code base so you create one app and it will compile to any of the platforms that are out there you can publish your app to the app store however it's not going to be as maybe popular as the native apps you don't have to have an apple computer by the way i think that should be said that if you're if you're programming in ios you're probably going to have to well you have to have a macintosh to run xcode so what are the disadvantages well web view apps look like web pages and they're just trapped inside a picture frame and so they will work offline but they look and feel like a web page so you're kind of cheating really when you're building a kind of an app here's an innovative technology this company called xamarin has built a nice niche for themselves they will take a csharp program written in visual studio and compile it to work with native apps so it doesn't use java it doesn't use kotlin it doesn't use swift or what's the other objective c it uses c sharp a microsoft technology a microsoft language and compiles into the native app that you're looking for so you have one code base to work with and you have just one language to work with so the advantages are pretty good so think of you're creating native apps you're not trying to shortcut anything and you have used only one code base that's probably the biggest reason that people would use xamarin is that they only have one version of their app that they have to compile so they keep track of all the errors in one place do all the testing in one place and do all the design in one place just one code base it's a great advantage and then of course it's one language so csharp is a very popular language professional developers use csharp for everything and so corporations have already got a good army of developers that can develop a web app or i'm sorry a mobile app using the language they already know there's one disadvantage that i can think of is that xamarin apps compile somewhat larger sometimes double the size of a regular native app that has to do with something of how the runtime libraries are attached to the app but xamarin is a good choice and it might work out for you if you're already a csharp developer or your company uses csharp as other apps now javascript code is the third type of hybrid that we looked at here or we're going to look at and really there's only one big name you have to worry about it's called react native so react is a framework that is used to create web pages it's super popular it seems to be like everyone's using react these days it's really javascript with some extra twists in it and it creates these super fast responsive web pages that are updated in partial manners it's it's really the best way these days to create a web app that with angular those seem to be the two types of web app technologies but we take react from the web world and now we have adapted it to the native experience in a app design so it will not just render react will render objects to a screen you know like forms and buttons and things but you can use the same technology to render native controls to the screen so react dom is what you would use with when you're trying to create a web app react native is what you use when you're trying to compile for a phone so the advantages of react native are that you use the same skills again that you did as a web developer so if you're a web developer using react you're ready to go and you're ready to learn how to use react native for mobile also you have a single code base again you only have one version of your app to test and to deploy and so react native is a great choice for crops across platforms and the key is that the native app performance is there the apps are really indistinguishable from the native apps even though they're written in javascript and so it's a great bunch of advantages and so for the disadvantages well i really couldn't think of any if you're already developing in in csharp with xamarin and just keep going with that or if you're working with java and android maybe you're fine but a lot of people are saying uh i've already got web development experience how do i get into mobile well react native is your best choice that's the easiest step for you as a web developer to get into mobile developments there's also another category that you could think of is that game engines such as unity and unreal really the two main competitors in this in this market are both able to export their projects to both android and ios and so you can think of there are multiple platforms you can export to an xbox or to a playstation but android and ios are mobile platforms that they can work with but game engines are not just for games either if you want to create a virtual reality application or an augmented reality applications for training purposes or for some kind of a advertisement then unreal and unity are probably going to work better than trying to build that app on android studio or something like that so game engines aren't just for games and they work great with mobile now before i end here i want to mention two other technologies that are emerging or at least they're somewhat popular first of all kotlin is the language that google prefers instead of java and they have a version now called kmm or kotlin multiplatform mobile and the idea here is that you create the majority of your application in the kotlin language and then you rely on the front end differences between ios and android and so this is fairly new in 2021 i believe and so honestly i don't know much about it other than the fact that it exists and google is pushing it hard now you would think that google has their mind made up on what their multiplatform solution is but check it out here so if you go to flutter.dev you have create faster apps and all this stuff and look it's also made by google and so flutter is a framework that uses the language called dart and its purpose is to create these multiplatform language uh apps as well and so both of these i've seen great reviews from people out there that are more knowledgeable about this stuff than i am but i certainly have my own doubts in my mind is what does google think i mean they have two solutions and they're promoting both of them and they both try to accomplish it looks like the same thing so those are probably interesting uh questions to ask let me give you an experiment here so i'm going to open up indeed and type in the word flutter and you're going to see that there are literally seven jobs seven jobs and some of them are about react native so this tells me that i wouldn't recommend this solution for a business that's going to depend on a technology that literally hardly anyone uses now compare this with what if we put in react native and i'm still in the phoenix area what comes up we have 65 jobs so that's literally a 10 times amount of mobile development talent that's out there let's see what cmm looks like we're not going to get a single result so this is telling you what is not available people don't use this yet and this is 2021 when you're making this video so let's just search for web developer to get a context of what this compares with right now so there are 399 jobs in the category of web developer of course that's going to be a lot of different technologies but you can see that mobile is kind of a niche and then a smaller niche than that is going to be react native and then minuscule is going to be dart and flutter and then even smaller is kmm so take that for what it's worth if i were the business leader i would probably not go for these technologies where you literally cannot find any job postings let's just do one more search here i'm going to search for mobile developer and see what kind of technologies people expect out there so i'm going to find a company that i recognize here so uhaul okay uhaul is headquartered here in phoenix let's check out what their requirements are what kind of mobile technology and platform are they up to okay this tells you what we want so android development they want android and they say java how about that so they're not using the most uptodate language let's go and check to see what some of the keywords are in their job description so it says here object oriented we're going to do mvvm mvc so those are design things android networking such as rest services and i don't see anything here about crossplatform it says here native applications so they're not even interested in crossplatform compiling so i would recommend that you do some searching around and see what other companies in your area are looking at uhaul might be an exception here but i doubt it i think that a lot of people just don't do the crossplatform solutions they're just not meeting their needs they're willing to spend the extra time to get a native so looking at this you can see that crossplatform solutions are not the first thing that comes to mind for some developers and it's probably going to depend on who you already have on your team if you have expert language skills in a certain area or if you're willing to take a risk on some new emerging technology so that's going to be up to you and how tolerant you are for risk in the next video we're going to be talking about the back end and where you store your data so that's really about the full stack solution and if you want to see the entire playlist for all of the topics on the business of building apps check out the other link and please join me again for class and happy mobile development hi and welcome to the business of building applications this is a course for people who are business designers and working with mobile apps we're in chapter five in this section here called choosing the right tools and in this video i'm giving you an assignment so we'll call this activity 51 and so in this activity what i want you to do is to make a comparison of the current available dev tools so we're talking about languages and frameworks and crossplatform and all of the other solutions that i've mentioned in a previous video in this course so the background is that you will create a comparison with the applications and the languages and the frameworks that go along with them what i want you to do is to identify what you think are the advantages or the disadvantages of each of them and so for a moment you can ignore the opinions that i provided to you in the video and come up with your own what i want you to do is to do some searching go find out the experts that are out there and so i recommend a google search such as search for xamarin versus react native versus flutter versus kotlin and you will likely discover some other tools that i have not mentioned but those kind of versus search key terms are a great way to find the blog articles that will help you out so i want you to search for google trends as well trends.google.com i think it is search stack overflow and look at their annual surveys of developers look in indeed or glassdoor or github and find out what's going on in the world and what the trends are for each of the languages that you're considering so these sources that i mentioned here provide impartial data points and statistics not just some person's blog opinion and so i want to know if the solutions are mainstream which is means that they're being used in the real world by real businesses so it's a good idea that you do a limited search so if you search for anything in that was published in the last year you're probably going to have some pretty good uptodate information so you don't want to pull something from 2003 and because back then there was obviously different requirements and different trends so read blogs read reddit threads and get a variety of viewpoints and opinions so this is a research project based not on academic journals but on real programmers so when you're done i want you to collect all of these viewpoints and i want you to give me a summary in a table that looks like this so the first column is to tell me which framework you're looking at for instance we could put react native in there and then advantages so what makes react native popular why do people love it or why do people avoid this that's of course the contrary how many people are using this tool is react native showing up in job search postings or are people just dreaming about what they think should be actually used and then how long has this been around because of course age doesn't necessarily justify why a solution is good but if you're picking something that was just invented yesterday then maybe it's not quite ready for you to build your business on it so if you're one of my students this is what i would expect you to send to me i want you to have a word document with a table and on that table you're going to have all the development tools and describing the benefits and the items that i just showed you a second ago so that would be a way for you to summarize what you've learned and i would grade you based on how complete your table was how well you're able to summarize what's out there and look for some factual data points to back up your opinions so if you're not one of my students make sure that you subscribe so that you can get the rest of this course i will put a link to all the playlists here so that way you can see some of the lessons that i've built and if you are one of my students i will see you again in the next class hi and welcome to the business of building apps this is a course that is supposed to make you a better designer and app developer so we're in section 5 right now which is called choosing the right tools if any of the other sections look interesting to you make sure that you check out the course playlist so that you can get all of them in this video we're talking about an assignment so i'm giving you homework if you're one of my students and we'll call it activity 52 in this i'm going to ask you to provide a recommendation for a development solution so in a previous activity we've created an app design we have an idea for a business we've got some wireframes we're ready to program but we're not quite sure what languages we need to work with in a previous assignment in a previous video we compared several different platforms whether they were single platform or crossplatform there's a lot of choices out there now based on the recommendation that you provide me i want you to think about the facts that you discovered and provide an application that fits your needs so not necessarily the most popular one in the world but the one that affects you the most so your team will have unique factors that may lead to recommendations that other teams do not have for example you yourself are an expert let's say in c sharp or maybe you have never programmed before i'm not sure what your factors are maybe the people that you are working with already have something in mind regardless there's going to be a justification for why you choose a certain programming language and a certain development platform and so really that's the goal of this assignment so here are the instructions i want you to write a one page document word document's fine and i'm going to ask you to make a recommendation on which language frameworks cloud services and databases and other tools that you think would be appropriate for your app and make sure that you provide a rationale behind it and so that's why i would grade a good good paper versus a poor paper is based on how well you're able to make the application so you might recommend a different solution than another student but you probably have good reasons to so here are the considerations if you choose a crossplatform solution it's probably because you're trying to save money or save time make sure that that is actually true before you make the recommendation so don't just go on what might be true but that provides some evidence to make that a real conclusion also something might be brand new but does that make it quote better according to some people yes the newest thing is best but businesses have to support a product for many years and so if something disappears you don't want to be stuck with a product that was abandoned by google also this implies that you're able to find employees that are able to come and to leave and hire new people that can come under your team so make sure that you have something that is relatively popular a business can have significant investments already so sometimes it's better to follow your company's direction that's already been laid out for you so even though you might be a java fan your company is using something else so whatever it is don't be too different from what's already been laid down so what i expect if you are my students i would expect you to send me a onepage document a recommendation for which language and frameworks and databases and cloud platforms that you would provide why you would choose those and the justification of course is a business case so if you're not one of my students you can put your own recommendations in the bottom in the comments below to tell me why you prefer one platform or one solution over another and if you're not one of my students please subscribe so that you can get in on the rest of the course now i will see you in the next class if you are following along so thanks for watching hi and welcome to the business of building mobile applications this is a course that talks about some of the issues that you're going to face if you're trying to create an app and a business that goes with it so you can see there are several chapters that we're going to be looking at here and we are now on the section called full stack considerations so if these previous videos look interesting to you then go back and look at the playlists and of course please subscribe if this is relevant to the types of projects that you're working on right now here's the other two that are coming up and i welcome you to join my name is shad slooter and i teach computer science and software development at grand canyon university so let's take a look at the first topic here on this section called choosing a database so this is really a full stack consideration we looked at the front end frameworks that you can use for building mobile apps in a previous video and now we're going to talk about how you store your data so we're going to divide this up into four sections types of databases that you can choose from each of these has its advantages and disadvantages each were designed to solve specific problems so depending on the type of application that you're trying to create you're probably going to select one of these four so we're going to talk about the purpose of each of these and how well they scale in other words how they go from hundreds of users to millions of users and which ones are going to work well for you in the end the first one that we're going to talk about the first type of database is sql now sql is the most common and the oldest most established and wide known type of language there is so sql is not really a database it is called a structured query language that's the type of commands that you talk to the database with and so if you know any programmers that have worked with databases at all they will probably understand these kind of commands so if you want to select data from a database you do something like this where you say select the type of data that you want and you tell it which table the data is stored in and the computer will return a list of data for you to put into your application so here is what it looks like in visual studio and you are going to in this case we are going to create a table of employees and insert some data into it and so this is the interface that you would look like if you were on a sql server also sql servers have arrangements so they put data into tables and they link those tables with relations and so a sql server is sometimes referred to as a relational database and so you can see that in this case we have an order system where each order is associated with a customer and each product is associated with each order and so this is a very important part of the design of an application if you haven't taken a course on sql and databases then i recommend you do in the degrees that i teach where it's computer science and software development this is a fundamental class that we do early in this in the students career and we use sql databases throughout all of the applications that we create in their experience and so you likely will do the same thing in your job if you are a software developer so here are some popular titles mysql is the first of the category here it is free it's open source it's used by pretty much everybody and we use it in our classes as our primary database postgres has a few more features and people that use it really say they love it microsoft sql server is also used in our courses and of course microsoft is a major player in any software development oracle was the major giant that started the whole corporate database structure and people kind of loved to hate oracle but it's still used by large businesses everywhere the next type of server that we're going to talk about is the nosql server now nosql also refers to not only sql so it's not just the opposite of sql the most common way that you would create a nosql database is to store your data in documents now this is an example of a document of a user and if it looks like a json text file that's because it is and so that's the way nosql documents are are structured you have properties and then you have values that go along with them so there's no tables there's no joins going on here it's very simple and so there's a few advantages to that and also some drawbacks here is a second one we have user of susan and the first one was mortiver now you notice the difference here is that not all of the data is the same so in this case with susan you notice that we are able to have a status called active and it's a boolean value of true so in a sql statement you have to fill in all of the data for all of your users the columns are very closely defined they're static they are very restricted which makes the computer work well with it but sometimes your business problems change and so nosql databases allow you some more flexibility so you can have different types in this case we have vicky a third user and you notice we don't have very much data on her at all now we could add that data later or we could delete data from her but the idea here is that a nosql document is more flexible here's what a sql statement looks like or a select statement i should call it a select statement in a nosql database so we have db.users.find and then we put in another json object and the results come back and look something like this so this is an example from a mongodb database and you can see that the results are easily translated into a web server or any kind of a application that can parse json here's another example we're trying to do a query from a list of users and so you can see that there are a variety of pieces of data in the user object from strings to integers to booleans to arrays so nosql is very flexible in the type of data that you throw at it and it works very fast if you're just going to read and write lists of data so let's compare these two different types of technologies so this is a structure of a sql database on the left you can see that a database is composed of tables each table is made up of rows and each row has multiple columns in it so that is a correspondence to a document database where we have the whole thing which is a database each table represents a document collection so for instance in the tables of your database you might have a collection of users well we still have a collection of users in a nosql database the rows represent each user and so in the collection each user is a document and then for each column such as the name id age weight serial number or whatever properties you wish to assign to a user you're going to have those referred to as fields in a nosql database and so the two components are both there they're just organized and named slightly differently let's also talk about the contrast here between a sql database and a nosql database in some of the design so as i mentioned nosql databases are very flexible you can change them later but in sql you have to think about many of the decisions that your application is going to need right up front and that's a process called normalization or a normalized database so you have relations between tables and the advantage of a sql database is that you don't duplicate any data if you have a user's table there's only going to be one place where the user name is stored and the age and his id number and and so forth and so there's no danger that you're going to have duplicate records of a single user and so you're guaranteed to have good data so a sql database will never have duplicate data if it's designed right now on the other hand on the other side we have denormalized data when we talk about a document or a nosql database we're going to be talking about lists and you're going to have a lot of data duplication so the amount of storage space is going to be larger but that that disadvantage then turns into advantages when we come to the number of seconds it takes to run a query let's do an example here so let's say we have a blog application where like an instagram people post a picture and then they put a comment and then afterwards we hope that other people come and rate your photo and put comments on it and then you can reply to them and you have a whole comment thread and then maybe later someone else comments again so a pretty typical example of a social media app now would this be easy to develop in a sql database or a nosql database well we actually do this in one of our classes we create a blog app and we use a sql database but let me give you some suggestions here of maybe why or why not this is a good idea so let's take a look at if we had this data for our blog app and we had it in the the data was stored in a sql table format so i have a users table here on the left you can see there's an id number for each user and a name on the right side we have the comments table and so each comment has an id number and it's associated with a link on the id number of the user we have the date and the text so if we say i want to get all of the comments for a particular photo i would write a statement that looks like this so this is a sql statement that says i'm going to select or i'm going to pull out the data from two different tables and you can see i have a mixture of table names so i have the comments table and the users table then i'm going to join them and i join them on a common number so you can see that the id number of jerry is a thousand two and over in the comments table you can see that there's a user id number for that comment which is also a thousand and two so we know that jerry is the person that posted this first comment and so we're going to pull these two together when you're done you're going to have a joined list so this this table here is a generated table it doesn't get stored anywhere it's just created every time we want to pull data from the database and so then this is produced in a nice sequential format that we can use our in our application to print to our web page so the pulling together is called joining so i'm going to pull together the id number from one table i'm going to pull the name from the other table i'm going to pull the date and the text so joining tables literally means reading twice we're going to read from the users table we're going to read from the comments table we're going to create a list in the computer's memory and then provide that to the application so you can see that the strategy here will will create a more cpu time all these joins require processing but we only save the data in one location so we save on disk space now let's go back to the same blog app and let's see how it might be designed and implemented using a nosql database so it's the same comments we got a photo and we've got a bunch of comments so here's what the data would look like so first of all in our database we would have likely a list of users and so you can see a bunch of json objects it's the same data but now stored in a json format now what are we going to do for the comments we're going to produce maybe another collection called images the images will have each image will have an id number and probably a string to tell us which photo is saved to the disk and following the image id we're going to have the comments and so you can see that the comments is a list of lists of no more json objects so each list is going to have some duplicate data you notice the word or the name gwen appears twice in here so we're saving gwen's name into the comments now that's a horrible misuse of the normalization rules that most students learn in sql programming and so we're breaking rules we're duplicating the name gwen however there is an advantage for doing that because when we go back to the application we don't have to do any joins we can just say read the list sequentially there's no computing to do just read and print and so that makes it very fast now the disadvantage is let's say gwen changes her username now gwen has been printed in her database let's see twice here it could be a million times we would have to programmatically go back and search for all of that duplicated data and rename gwen to her new username so that's a bad thing obviously so read sequentially is fast duplicating data saves time on the cpu but it requires extra programming and oversight to make sure that your data is in a good format so let's compare these two here because these are the two most common database technologies that you're likely going to choose from so sql is what we would call structured if you know what your data is going to look like then sql is a good choice if you're not quite sure what your data is going to look like then nosql is a more flexible alternative sql databases are more difficult to scale and we'll talk about scaling here in a minute but scaling means going from your first hundred users to the first million users or records or whatever it is so a large database is more difficult to handle in a sql server also we have the i've mentioned no duplication of data so only one copy of each record is stored in the database which makes it easy to keep track of what the username is for example you can change data in one location in one location only so that's very consistent if you have a lot of updates going on and let's say you're changing records and you have only one copy of that record then obviously it's a onetime operation if you change a piece of data that is duplicated a million times in other locations every time you do an update it's going to be thousands or millions of updates each time the user creates a change sql sql databases are very good if you have lots of uh joins going on to say i want to collect a little bit of data from this table that data merge them together and create a new list and no sql is not so much in as far as the document store goes and so why would you want to choose nosql then well it's faster you can also scale it largely and it's really quick if you're just doing a lot of reads and so you're going to have to analyze your business process and your application to decide which type of technology fits better so rule of thumb the default in my choice maybe it's just because i'm old but sql is the first choice and if you can't use it with sql then you go find an alternative and i have some data maybe to show why that is a good way to think here are two popular nosql databases these are the document store databases so mongodb by far is the most popular firebase by google is used as a realtime database which has some other advantages so if you are looking at a database your application automatically triggers every time there's new data coming in and so it's some things that you really can't do without uh doing a lot of programming loops let's talk about another database called a graph database it's a different type of feel altogether so if you're if you've taken any courses in algorithms and data structures a graph is a perfect way to model a lot of data so on a graph you have things called nodes so each node kind of represents a record so let's say we have a node called a person and we'll give that the term the label so this node is a person the properties of a node are just like the columns in a in a table so we can say that gene in age 39 is this person so you could imagine lots of different properties going on now we have different types of nodes so let's make a application that keeps track of movies and who likes the movies so in this case we have a purple node that says the name of this node is star wars so we can then put relationships between those so this person likes the movie star wars since the year 2021. so that's a relationship so there's three pieces of data here not just two the the link itself is another record so it keeps track of either a oneway link or you can have a twoway link well then let's take a look at the idea of linking these because in a sql database we already have relations we have links between tables that's what it means it's a relational database so it works well if you only have to worry about one one depth of your relationship selects like for instance this user created this list of comments perfect it's a one depth one step depth of relationships and so there's no reason to create a graph database if that's all you're doing however if you have more indirect relationships like you want to know in a movie how many people were actors and then you can also ask and the actors how many different movies were they in and then you could start to get more complex to say did they like their experience who liked the who liked being in the movie which actors did not like the movie but were not in the in the in the actors list and so when you start to get these multiple questions about who was where and what they liked and who's related to who and then who are your friends of your friends then you start to get very complex and that's when a graph database starts to make sense so here's an example of some real we'll call it empirical data so neo4j is a graph database it's the most popular i believe and here is an experiment that was made some years ago so we have a depth of queries going on here so you can see in the left column we have depth of 2 3 4 and 5. so the depth means who is a friend of a friend so that's that's what we're asking here but now when we get to the six degrees of separation kind of a question is who is the friend of a friend of your friends of your friends of your friends and now your traditional database is no longer a good solution so you can see that they asked that question who are your friends friends friends friends friends and where do we go for the time computation well you start making joins in other joins and stacking on top of other joins and you can see that sql has an exponential time frame here and so by the time we had the depth of asking who are your fifth degree friends uh the mysql database didn't even finish its computation in an hour of work now compare this to the graph database neo4 and you can see that it is a very fast linear time requirement and so literally in two seconds they could ask to the fifth degree who your friends are and so same computing platform same amount of memory and all that and so the algorithm itself of how the database is designed is superior when it comes to that kind of a question so if you have a social media type of application that has these strange queries that can ask about relationships and very flexible types of questions then maybe neo4 or other graph database technologies is for you now this is obviously the suitable solution for this kind of a situation so we have friends with and who likes who you can see the graph going on here so if you have many relationships between records and you're going to be asking questions on a regular basis for instance facebook how in the world can you recommend friends when you have friends of friends going on then this is probably the the right tool for you so let's take a look at linkedin for example here this is an image that is about types and the relationships on linkedin and to me this is just asking for a graph database solution because as you can see the profile has different groups different companies companies that you like companies you follow and so they're able to provide job recommendations to you based on what's in your resume and then who who you like and where you follow so this would be very difficult to compute if you were using a standard sql database so here are two recommendations if you're interested in looking at more about this so neo4j seems to be the market leader but i'm going to put azure cosmos because it's a microsoft tool that is used on the cloud the azure cloud service and so they're going to be pushing that if you're using their service here's another kind of database called the full text database now full text sounds exactly like you'd expect for a search engine so let's say you're google and you're trying to index every page on the internet and somehow when you type in a keyword search they give you instant results so what they do is they have this inverted index set up so for instance if i'm looking for the word fantastic i don't have to go search through the entire collection of documents that was already done for me instead i get search results that are based on document numbers and so i will have a list here of document 1 4 99 284 and 9 42. those are the documents that contain the word fantastic and of course you can probably wait that with better search results by pushing those numbers around based on the number of times the word fantastic was used or whether it was used in the title or whether in the body of the text you get the idea so that you have an index of where the words are in your documents and that works exactly like the index that you find in the back of any textbook you're looking for a specific term the index will tell you which page number it is on so that is like the google search of your book it tells you where you will find the terms that are most valued to you so a full text index is going to be the kind of solution if that's the problem you're you're facing so elastic and splunk are two database technologies that you should explore if that's your kind of a problem now the next section here is how are you going to scale your database from your first 100 users to the millions of users that you're likely to encounter so let's start with an example here a very concrete example of kevin systrom who is the cofounder of instagram let's hear what he says about his app and before you knew it we actually had overloaded our system and it was a very small naive system it was a single computer and a colocation space somewhere in la everything was on one computer yeah it was it was nothing more exhilarating than seeing all those people streaming and nothing more crushing than than seeing you know people posting on twitter or on their blogs and saying like oh another startup that doesn't know how to scale like oh like so clowny we were both i mean at that point like running on zero sleep for two days just devastated and i was like this is it we built this great thing and we totally messed it up so if you get so lucky that you're going to have an instagramlike problem then you're going to have to do some solutions so i looked up to see what kind of technology what databases that are being used in instagram they started off obviously with a small server and they have since completely redesigned their app and so you can see that their technology that they're still relying on is a sql database and cassandra which is kind of like a mongodb it's a document storage and it's allowing them to have both relations and the ability to scale horizontally now let's talk about your goals here your shortterm goals if you are building a startup and your first version of your app you're probably only going to need to worry about your minimal viable product and so scaling is something to think about down the road but right now you are interested in proving the concept does your application appeal to users and so you're only going to have to talk about a hundred or thousand people for your first version your working version needs to be something that literally just works and so scaling is important to think about but not to invest too much time now build your first version as a rather simple architecture we're trying to get something put together quite quickly fast development and so don't worry about the scale yet i mean it's not a bad idea to think about how it's going to scale but don't scale it scaling now is much easier than it was 10 years ago so you can at least plan for it but you don't have to make your first version scalable now here are some considering considerations will your application have unbounded growth if you're building an internal app for a company you know that your company has five thousand employees and you'll never see any more than that then obviously there's no worry about unbounded growth if you're just having a few records however if you're collecting a terabyte of data every day and adding it to your database then you're going to have a problem now we're going to scan or span multiple servers if we have a scaling issue so you need a technology that can be split into pieces is there going to be a high volume of transactions for instance if you're creating a database that has an iot device thing where you're recording let's say the the heartbeat and blood pressure of every user every five minutes your scale of volume is going to go exponential and so yes you will have a scaling problem if you have those kind of issues then i would recommend that you think about a nosql solution because they scale much easier and mongodb is the first to mine one for in my categories when it comes to a nosql solution so when you talk about your mvp app you're likely going to be thinking about maybe some limited number small number of records it doesn't have to be hyper fast it can handle interruptions you can you can shut it down to do backups for example your expertise you want the most common solution available because you're going to be hiring people and the usual first to mind solution is my sequel so and my sequel are the first two things that come to mind as a matter of fact those are the only two solutions really that we focus in on our college students so when i'm teaching new programmers how to develop an app and they've never seen a database before and they've never written a query really my sequel and microsoft server are the two solutions that we work with most of the time for sql and then for a more advanced we would call it maybe our junior level or senior level students to see something else besides sql and we don't even branch off to be beyond those two because they're very common and they meet a lot of needs but let's talk about scaling let's say if you are trying to do scaling you can have either two choices one is called a vertical scale and the other is a horizontal scale so this is vertical scaling we start off with a small server it says here we have about a three thousand dollar computer it has one terabyte of storage maximum and we can handle about 500 concurrent users before it starts to get slow and so we invest three thousand dollars and we host one server well then our application grows we have a constraint and so we just buy a bigger server we add more memory and more storage and a better cpu and things work great but you can see that the cost then is no longer three thousand it is fifty thousand dollars we have a hard drive then we have multiple power supplies it's a pretty nice server and then the maximum server that we might be able to afford is a million dollar computer i guess we're getting into small mainframe size here now and as you know mainframes were built to handle large amounts of data but there's a limit to how big you can build that mainframe and so that is vertical scaling and so you can see that when we get to a certain size we have to wait until a newer computer is invented our scaling and vertical format only goes so far and you notice the cost starts to escalate too because as you know when you buy a laptop you can get twice the processing and twice the storage but the price isn't just twice it goes in an exponential format so most of us buy computers that are 80 percent of the market maximum at the time because well that's a reasonable cost performance tradeoff so just for kicks i went to find out what the biggest things that you can buy are right now so what is the largest hard drive available on amazon so it looks to me like 16 or 18 terabytes is the maximum that western digital is selling right now and what's the cost here a 16 terabyte hard drive right now is 600 and free shipping now what if you want to get a bigger one than that they actually create these things called a raid set so raid stands for redundant array of independent disks and so there are multiple hard drives in a box and so even though you might have a 36 terabyte drive literally you're getting multiple drives and so there's a physical maximum that we have at any point in history and history has always told us that we can never get enough storage space and so this particular hard drive is 2 600 and so you can see the cost starts to get kind of high now there's a better way or a different way let's call it of scaling so instead of scaling by buying bigger machines we can just buy more machines so that's called horizontal scaling and that requires some coordination so we build a server and then we have a server manager or sometimes called the master server he's the traffic cop and he controls what's going on the other servers that are being controlled are called slaves and so we have this master slave relationship now if slavery doesn't ring true to you then we've got other terminology we'll call this the conductor or the primary server or the source server or the coordinator or the traffic cop anyway the idea is that we have somebody who is managing the other servers and those can be called followers or secondary servers or replicas or nodes so it depends on your type of terminology but we have something that is controlling other computers and so that master server is obviously an important piece in this scaling system so you can see in the configuration i've set up here i bought three servers and they contain two servers that actually hold the data so one server is used just to coordinate things and the other two hold the data so what does that do for us well we could have multiple servers that are the followers and they all are controlled by the master now as you can see that the cost here does not increase exponentially we don't have a million dollar computer anywhere in this list so we have seven computers that are storing the data of six so we have one computer that is overhead and the other ones that are actually doing the work now there is no technical barrier then to the size that we can add so we probably will find some number that the master is able to control but that's pretty big so we could add a master computer that is massive and then lots and lots of small ones that are the followers and that's when you get these server farms we call them these data centers where you have this hardware that's in the shelf that is relatively inexpensive it's completely replaceable and you get the scale of manufacturing to bring the price down and so these data centers can be the size of football fields and you put them near a source of cheap electricity and in a place where you're not going to have earthquakes or floods and you have literally data warehouses for amazon or microsoft or google humming away now you have a problem so what happens when one of these servers fails obviously we don't want that to happen we're going to start duplicating the data then so let's say this server is going to store a file maybe it's a large file we're going to then make some copies of it so let's take three copies and the master server is going to choose three locations in our data farm where it's going to put that so in this master computer we're going to have it keep an index so the index looks like i'm using number one three and five if we start counting at zero then one three and five is the location of this file so why do we duplicate it well obviously if one piece of hardware fails then we want to have that respond by maybe making another duplicate somewhere else and so we have some redundancy also think about how you could read the data let's say file server number one the first one here is busy then we can read it from another location and so the hard drives never really get maxed out as far as having an amount of traffic now in practice what we also do is we we take data and we split it up into blocks so let's say we have a huge video file and we don't want to store that all in one location do we no we we create segments so we split the file up maybe into three pieces in this case and then we make duplicates of that and now we have nine pieces to spread around our servers and so the segment can be put on different servers so that way it's load balanced the server can have a maximum storage space and the cpu both shared and then we take those segments and we scatter them according to some algorithm to the entire collection so now we have two things going on we have redundancy so one server can fail and also we have the load balance so that no one server has to do all the work so let's take a look an example of a failure tolerance so we have three different servers that are all serving a file now one of these has a disk failure and it shuts down and we've got a problem the alert then is sent to the master traffic cop and he says take this one offline he looks in the index and says where do i have this file well i see that it's still stored in two locations so we're good now i'm going to take that file and i'm going to duplicate it and put it on another server so it selects one according to its algorithm and now we're back to three so the fault tolerance is there to keep us well now that works with files let's talk about how you would be able to split up something like a sql server and to scale a server horizontally is difficult it's called shards so a shard is a way to split up your data so in this case let's talk about a readonly shard so a master shard is pictured here on the left so we have a table of users and we know that these users are going to be updated very infrequently people don't change their address very often and the application might read from those user tables very frequently so every time we create a new order we want to pull the user data that's that's an example so if read is the constraining action then all we need to do is make duplicates of each table and that's a readonly shard and so when a request to read a user comes in we can just get it from one of the shards so let's say we have an example of where we want to write data we have an update or we add a record now that is going to then replicate that data to the shards and so that way we have a a way to spread it around now when we have a read data we would have a scheduler program and then we would select one of the shards that is not very busy and give him that job and so then we would read from one of those three now replicating shards increases the data base response time or the performance i should say so if you're reading data from a lot of different uh tables then just spread those tables out make replicas of them and then the least busy will respond to your request it's not very scalable for write operations and so sharding is usually thought of in a different way where we split up data so let's go back to our data set and we'll talk about how we would shard this when we have millions of rows so your performance of your database is suffering and you realize it's because you just have so much data how are you going to do it so we're going to shard that so we we're going to start with our entire data set and we notice that there are ways that we could split it up so in this particular data set we can see that there are 50 states in the united states and we have roughly spread the users across those 50 regions so we could create a separate data using a shard map so let's say we split up the dates the states from 1 to 50 and now we start to split it up now in practice you can do a range like this you can have a range of zip codes for example or a range of state names we could also do a hash value so we could hash a name and then put them in a particular range based on the hash results or you could come up with your own scheme so somehow we want to equitably distribute these around in this case we're going to put everyone in the iowa region in shard one and then shard two we're going to make another table called users and that will be for the illinois people and then shard three will hold all of our ohio users so now the data table no longer exists in a single location it's now spread over three servers so theoretically each of those three now can grow to the maximum size of hardware that we're allowed to provide to it so this here is our shard collection so now when we have a read operation who are we going to ask well let's say we have a request that comes in to say where's wendy i want to get all the records that are associated with wendy so we ask our master shard map wendy is located in illinois which server do i need to ask and the response is i found wendy in illinois which is shard number two okay so now i'm going to ask the same question where's wendy and i'm going to select all of the records associated with wendy and i go to shard2.userstable to get that data so there's a twostep process in getting data now you can see that there's a lot of programming going on here so we have shards and we have different load balancing techniques there so sql sharding we'll call it it does allow the scaling of horizontal growth we can add servers it requires extra programming and some extra requests that go on with the process so here are two solutions for mysql galera cluster is a sql mysql solution for sharding data so you don't have to do all the computing yourself and then i think it was 2016 or so where my sequel 8 now includes something called group replication and so it does the same process where you can shard different things now in my opinion that scaling a mysql database is kind of like trying to squeeze a square peg into a round hole mongodb was designed originally to scale horizontally it's very easy to split up a document you don't have to worry about fragments being separated and so even though sharding works with sql it wasn't designed to work that way in the beginning and so perhaps not the best design in the long run so now it's your decision time so i'm going to present you basically with two different solutions you can choose a sql solution and then you can also pick from a nosql those are really the dividing lines so what are the factors there so consider first of all what you already have in your organization are are you already using sql in many of your other projects maybe it's a good idea just to continue on with sql almost everybody that programs in any kind of database already knows sql is a common skill but it's not universal and so as i mentioned at the university where i teach everybody learns how to program in sql and they do it pretty well is something that we add on as a second choice and i wouldn't call them experts at and that's probably common for a lot of systems so the most common tools that you can work with both of them are free are either mysql or mongodb now let's take a look at some practical uh statistics from your area so i did some indeed searching for job postings in phoenix where i live so i just typed in job postings that have the keyword sql in it and you can see that there were 1480 through 82 jobs that referenced they want sql and so you can see the first one says a java developer not a surprise that you need sql how about this searching for nosql and the number of jobs that re reference no sql drops to 253 and they still want a software developer and nosql is apparently part of the job description let's get specifically let's talk about mongodb as a solution 116 jobs and then my sequel references 218 jobs so if you didn't catch all that here is a graph that shows you or a table that shows you all of these so you can see that sql is a super common term people are using it all the all the time and everywhere and nosql is is not dead i mean it's not insignificant but it's certainly less and so if you wanted to see that visually you can see that sql is way ahead as the most common solution that most people think of when they're building software applications so when it comes to cost though really it's not a big deal almost every database solution has a free option linux servers means that you don't have to pay licensing to microsoft however your cloud hosting is going to be where the cost hits you so the amount of storage space and the amount of computing power that's being used in the cloud is going to affect you no matter which of the solutions that you choose uh at the beginning though remember that if you're choosing single server solutions you're probably going to be okay for your first version of your mvp now the next consideration that you should think about is how you communicate so rest apis is an important topic that you need to understand about building mobile applications also if you'd like to see the entire playlist for all of the considerations of building apps then i'll put that link here as well make sure you subscribe and thank you for joining me in class hi and welcome to the business of building apps this is a course that is designed for people who are doing business case studies on application development so we're in the part here called full stack considerations which is about choosing the right types of storage so activity 61 is an assignment so if you like homework then you've come to the right video so in this i want you to evaluate the various types of data storage that are out there so we're looking at database design so this refers to sql or nosql databases or some of the other now the background here is that i've already given you a lesson on the different types of databases that are somewhat popular and so we can just say that we know that various types exist so while they share the same goal of storing and retrieving data each of these different designs was solving a different problem and so the goal here is for you to be able to identify that so as you go through the course readings that i provided or the other videos that i've made in this course that i want you to research these categories of databases so there's a relational database a document database sometimes called nosql and then there's a graph database and we pick search engine now there might be others out there that you will discover along the way because there are certainly more than just four types of databases so what i want you to do then is to summarize what you understand about each of these and so tell me the strengths of each type and the weaknesses and if you want to include history about when they were developed and who fixed who created them and what they were trying to fix that would be great too provide examples of applications that would be appropriate for each of these types of databases of course they're designed for some specific purpose and then finally think of the app that you're building or you're designing in this course and i want you to then make a recommendation for which database or maybe a combination of databases would work for the particular app that you're working on so you have to understand how these app or these databases are designed and who they're supposed to help and then make a choice on which one would probably work for you so if you're one of my students i would expect you to submit this to me send me a word document send me a paper that explains the strengths and the weaknesses of each data storage technology and so since there are four different categories that i've mentioned here i would expect at least four four paragraphs probably an introduction and a conclusion so then the final is not only to tell me what the four differences are but which one you think is going to be probably appropriate for your solution so if you're not one of my students you feel free to put anything in the comments below that tells me about your experience with these types of databases which ones do you use that are somewhat out of the ordinary do you have a strong preference between my sequel or for example and why would you choose that so if you'd like to look at the rest of the course i will provide a link to the playlist here and if you're one of my students i will see you soon in a new class and if you're not a student please subscribe and come back as well thank you hi and welcome to the business of building apps this is a course that's about designing and running a business with mobile applications we're in part number six i believe which is the full stack considerations and so we're thinking about storage and online services this is an assignment video so if you like homework then you're at part 6.2 what are we going to do here i want to make this assignment an exploration of api services so apis or application program interfaces or people might just call them online services and so in a previous video we talked about several different things that were available from google and microsoft and we want to make sure that we're aware of what things are out there we don't have to reinvent the wheel in many cases so apis provide data and communications and computing for us for example google maps is an api and you'd be a fool to recreate an entire map application since there's one already available that you can just insert into an existing app so what i want you to do is to demonstrate that you understand how they work and which ones would be appropriate for your app so in a previous video we've already designed an app and now i want you to see if there's some features that you can utilize and make it better so as i mentioned microsoft and google have a lot of different apis that are open and free and all you have to do is sign up and configure them so these services range from a variety of things such as maps speech recognition and artificial intelligence so i'm not going to elaborate the entire list because there are literally hundreds of apis that companies like microsoft and google are providing to us so what i want you to do then is to examine the app that we're building and designing in this course and see if there are any opportunities for services that are out there that we could utilize so write a onepage paper with a recommendation for which if any of the services the api services would be appropriate for you to include in your application so make sure that you justify your decision so i don't want you to choose google maps just because you like maps if your app has something to do with maps then of course google maps makes sense but don't pick an application just because it's interesting make sure that it satisfies or supports one of your business goals so if you're one of my students this is what i would expect you to send me i would expect a word document that's probably about one page and it would list any of the services that you would find useful on google or microsoft or some other similar service and why they would be appropriate to integrate into your application so if you're not one of my students then feel free to leave in the comments below which apis have been useful for you in your apps if you'd like to see the entire course playlist i will provide a link to that so that you can see some of the videos about the business of building apps and make sure you subscribe if you haven't because this could be useful information to you if you're an app developer so thanks for watching hi welcome to the business of building applications this is a course for managers who are trying to create applications in the mobile platforms so the chapters that we've covered so far in this course include all of these topics that you see on the screen in this video we're talking about hiring the team and so we're going to be talking about development roles if any of these topics look interesting to you make sure you subscribe and also go back and check the playlist for this course my name is chad slooter and i teach computer science and software development at grand canyon university so welcome to class and i'm glad you're here now we're going to talk about dev roles mobile development in particular and so we're going to talk about forming a team and presuming that you are going to be probably in the hiring role manager or if you're the startup founder who are the people that you were going to want to work with you so you're going to have these four here you'll have a product manager a designer a frontend developer a backend developer and there could be more roles but we're trying to keep it small here to save some expenses so we're going to focus on these four now you don't necessarily have to have four people you might have just you and you have to do all the roles or you might find some people that can do multiple things hopefully you can and then you can save some money so let's talk with the first one here a product manager so a product manager is probably somebody that's got some senior skills they've done this before it's not their first application so their goals are pretty much this number one they have to figure out what problem they're trying to solve and so this famous picture here about the project and what it was described as what it was implemented as and then finally what the person wanted is the tire swing so if you haven't figured it out yet most of the videos in this course are for you the project manager or the product manager and your goal is to do some of these things figure out what has to be done the second thing that a product manager has to do is execute make sure that we have a plan we know what things we're working on first which ones are most important what the users want what the users should not see and we'll move this plan forward also we're going to measure our success and this pretty much works with testing out our application with our users our focus groups and our early adopters and then we're going to modify our goals so everything in this course so far has been pretty much a product manager's kind of work so look back at the chapters in the playlist and to see what your job is so i did a quick search and picked out one of the roles that was advertised currently here i live in phoenix arizona and aaa was one of the items that came up when i searched for a pm or a product manager so what do you have to do well here's what they say so you have to ma manage and monitor for defects uh monitor enhancements to existing systems identify customer needs uh solicit input meets commitments made to customers in other words you have all the responsibility but you don't do the work yourself you direct a team you get the resources applied to it and you know what's going on and you make sure that you get the resources applied to what you want to do so what do you have to have well they want a college degree it looks like they pick five years plus experience so you know their product manager is not going to be the first thing that you do out of college you're going to be scrum certified so you're looking at looking managing teams sprints you're doing the agile software development kind of a role and then it also says that we want uh expertise and sql and proficiency and programming so they want a experienced developer that now is stepping into the manager rules so this is probably your most senior member of the team now let's take take a look at the next item that identified as one of your team members is your product designer so a product designer is going to be the person that makes your product look really good obviously and so user interface is the first thing that comes to mind when it comes to a product designer this is a person that has some artistic talent maybe has a degree in product design maybe a degree in fine arts the second thing is called user experience and there's a slight difference there so the user interface is what it looks like the user experience is how a product acts and and feels to the customer so navigation as you can see what's being drawn here is the logical flow of how you get through an app but user experience can be broader than just what you see on the mobile app so for instance the last time you ordered anything through amazon you had a user experience your user experience was that the app worked well you clicked buy and somebody really hustled hard to get that product to your door they rang the doorbell and by the next day you were happy and if you didn't like the product you could return it without any cost all of that is a user experience so it's not just the bits and bytes on your app it's the process of how the business works and so user experience of course is a pretty critical item if you want to keep your customers so what is a qualification for somebody who is a designer so not just user experience but we're focused in here on on more of the designer people so you can see their goals according to peterson technology partners here in chandler arizona they're looking currently for a designer and they want this person to create storyboards and wireframes and user flow diagrams create prototypes and interactive designs sounds a lot like what we did in earlier activity in this course also we're going to be thinking about thinking methods to construct concepts that can be tested and validated with users so remember in a previous edition of this course or the previous lesson in this course we talked about finding the niche for your product you build something you show it to your users and if they don't really care about it or they don't care for it then you don't include it so this is what they mean by testing out your hypothesis with a group of potential users actively participating in discussions and workshops with key key stakeholders so the point here is that the design is a pretty early part of the process of building a product and crappy designs just make a horrible first impression so whether you have a fulltime designer or you purchase the services of an of a contractor a designer's an important part of your job so here's some qualifications that they say let's get a bachelor's degree they didn't mention what kind of a degree but where i work at the university grand canyon university we have an entire degree called web design and they are artists firsts and programmers second and so i've actually taught some of those courses it's pretty interesting when i asked my students to pull out a piece of paper and draw some diagrams i expected like most of my courses that i've taught before that like in math or in programming people might have a pencil might not have a pencil well these designers not only had a piece of paper it was a it was a tablet a square tablet of high quality drawing paper they had a dozen pencils of different shades of gray and of course colors they had rulers and protractors and the work they did was threedimensional and shaded it was it was like if that is your approach to taking notes or making a concept come to your mind then you're probably a designer most of the time though i'm teaching courses on how to manage database connections and how to do encryption and security and and honestly friends in my course you know who you are you can't even draw a square with right angles so there's a skill here for people who have this innate artistic talent and they like to use technology so some of the technology that you'll be working with of course is css which is a design language sas is a kind of a quasi language that helps you better with css adobe products such as photoshop and illustrator are probably things that you have memorized and work with on a daily basis their experience level they're asking is they want somebody that does some ui and also ux which is the user experience and so there are some qualifications for a person that you want on your team now we're going to have two developers here we're going to split this role in the front end and the back end so let's talk about the front end so the front end is probably somebody that is a javascript expert they're going to be able to build a webpage that looks nice you might call it this you might call this person a designer so your designer and frontend developer might actually be the same person so that's kind of typical i've met a lot of designers that are very good at programming in javascript so there's certainly an overlap there and so here's some of the tools that you'll see frontend people working with css javascript and then these two frameworks angular and react seem to show up all the time so pretty much you want to react expert if you're looking for a frontend developer now we're in mobile systems here so what i put on the screen applies to web development and somewhat to mobile development so mobile developers are going to be working with the framework of your choice and so check out a previous video that i made for how to pick the right framework which will depend on who you hire then for your frontend development so your backend developer this person is going to be creating the logic the business sense and the databases in the background so you are probably going to be able to pull this back end designer or developer from other types of programming so you don't have to be a web a mobile developer per se to be a backend person you'll probably do similar things in other applications so front end is of course the user interface and the back end is how you manage the data so those are the common splits now let's revisit these developer roles so i've mentioned four we have the product manager the designer the front end and the back end developers however we've left out some things so there are roles such as who's going to test this thing so frequently you expect your developers to be able to do their own testing that's a good thing if you're the manager you're going to ask those questions in an interview not only can you write code but tell me about your experience with testing frameworks how about security we don't we can't afford a security expert or a security team so once again you might be asking your front end and especially your backend developers what do they do about security what are some of the practices they follow and maybe some of the examples they've built in previous applications if you don't know anything about security then of course you want to hire in that expertise what about sales what about marketing of course those are not even technical roles but you're going to have to have that maybe that's your expertise and what you're trying to get done so a pretty obvious question should be about yourself which of these roles are you good at and hopefully you are the product manager first of all because that's the business of building apps in itself but if you can do the other things then you're well ahead of others now a common practice that you might find in some entrepreneurs is that they are the product manager role or the marketing expert and they really don't know how to code or program so from experts that have done this and created their own startup applications the usual advice is learn to code yourself so you can at least build part of the application and you can talk intelligently to the people that are doing the core work of your app because if you're ignorant on that you are flying somewhat blind and you'll be less effective now here's one way to look at it then if we had all of these four what's the cheapest way to fill these roles well there's you so can you do all of them if so then you can maybe grow slowly but you're on the right track how about these let's let's see if we can do some outsourcing or replace them so let's start with the designer so a designer is not something maybe that has to be continually managed it's a onetime thing so maybe you could outsource the job or do it yourself or if you have a frontend designer that is also your frontend developer then you've got that one covered or you could buy a template so see if you can get rid of one of these or two of these roles here's another way you can combine things so the front end and the back end developer can combine into what's called a full stack developer so if you have one experienced programmer that can do both the front end work and the database and business logic in the back then you've saved yourself an employee so by the way if you're looking for employees come to grand canyon university because what we're creating here are full stack developers so they understand various languages such as c sharp java javascript and php and several types of databases so there's a commercial to hire my students so there's your roles now the product manager we're going to leave as you so that is probably a key position that only you can really do well now here are some principles that probably should apply thinking about getting a let's let's assume that you're in a small company if you're in a big company already then this might not be a big deal but remember this that employees are your very best assets but also their most expensive parts of your business employees require work to manage and so startups need to keep the management simple and costs low so a lot of small teams don't even have an hr department for example so at this stage of life i've been in several different roles including the technician and the manager and now as a as a professor and so some of the principles that i would put out there is work with a small team with people that you really really trust and appreciate rather than trying to get a big team be very careful and very deliberate on how you hire make sure that you get good recommendations check the references don't take a risk because hiring the wrong person is a painful and costly mistake and so you'll save yourself a lot of stress and the stress of somebody else if you put the person in the wrong role that maybe they don't really want to be in so in the next video we're going to talk about how to create a job requisition how to identify the actual experiences that you need to hire if you'd like to see the entire course playlist i'll put a link here for how to see all of these chapters make sure that you subscribe if this is valuable information and thank you for coming to class with me we'll see you next time hi and welcome to the business of building applications this is a course for people who are interested in creating businesses that work with mobile applications now in this course there are several chapters so if any of this material looks of interest to you make sure you subscribe or go look at the playlist for the channel now right now we're in this section called hiring the team and so we're focusing on the skills that you need and how to manage a project and so let's talk here about the differences between mobile development and web development and the skills that are involved so this might mean that you are either looking at it from the perspective of the manager who is trying to find a competent mobile developer or perhaps you are more in the career path of becoming a developer and you would like to compare the differences in what's required and what kind of benefits that you can get so first of all let's talk about the overall market of talent pool that there is this is a stack overflow survey result chart from 2020. every year stack overflow the website asks their users about themselves and about their preferences on on development tools so one of the first questions is what do you do and so you can see that a great deal of people classify themselves as developers on stack overflow and they say that they are either back end full stack or front end in their main categories so those three main groups there are probably web developers that's usually the default expectation and you can see down in fifth place at 19 that they consider themselves a mobile developer so it's a minority of a job market but certainly not invisible obviously all of us use apps and so this is going to kind of steer the decisions about where you would get your talent pool first of all let's talk about the need for why a company would want a mobile application so let's take a scenario where you are an established company so we're no longer talking about making a startup out of thin air with a mobile app so you're you're a business that sells products and you probably have stores and you have a lot of employees the people are going to find you through a web search probably through google and then people want to come back to your company again and so returning visitors are likely going to back to their website and then finally we have what we call our regular customers the frequent transactions and they're going to install the app so we go from google to website to app and so if we were looking at the company called expedia that's probably how it would happen they would search for cheap airline tickets maybe expedia is a search result if the customer is liking the service they come back to their website and then they use it so often that they get a better performance with an app so my my point here is that the need for a mobile app for a company like expedia might be really in third place after they get their website going so here's how it looks then we have contact with new customers through your web page and you retain your customers through your mobile now you might say i want to choose mobile in my application development career or in solving my business problem because of certain things that only phones can do so for instance you're trying to build a virtual reality app well obviously you need a device like a phone how about a phone app that is gps aware or has augmented reality such as a selfguided tour of your neighborhood or maybe you have a map app and you're going to require google maps and a gyroscope with a game of course is going to be hardware driven or maybe you have some kind of a camera specific app more than just taking photos you might be scanning images or working with barcodes and then finally augmented reality is a cool tool that allows you to look around an environment and place objects such as a new piece of furniture or apply makeup to your face or in this case as you can see the example you can see examples of signs virtual signs that appear on the street and so all of these would probably guide you to hiring a mobile developer or to developing a mobile solution rather than a website now look at the contrast and overlap of where you would learn how to do this thing most people when they start making themselves into software engineers or software developers they would probably learn how to make things on the web so since that's the most common medium that most of us work with so this big bubble here represents all the skills that you would need for a mobile or i'm sorry for a web developer now we have another overlap which is mobile development now i'm not quite sure how much there is an overlap probably more than i drew here because everything that you learn in a good software engineering degree is probably going to translate right into mobile development so maybe i could have overlapped at least half of that here's the point more people out there in the job market are already skilled in web development fewer in mobile development web languages are similar to mobile technology as a matter of fact some of the cross cross platform tools such as react native are best learned first as a mobile i'm sorry as a web developer and then applied to the mobile environment and they apply so well that a react developer can probably pick up mobile development and react native quite easily many businesses can then just find their mobile development talent right within their walls they don't have to go out and hire a mobile developer they just need to train their existing team with a few new skills and away they go so consider that based on what you need on your team whether you're hiring from scratch or you already have some people to work with you should know that there's overlap in these skills so the trends that seem to go this way are we have native apps as the first choice for building a mobile solution and then what we would call crossplatform apps which focuses in on javascript sometimes and so native apps were the first and the 100 percent only solution and of course if we have any alternatives to that that's going to eat into that market and then the cross platform solutions seem to be on the rise now i put here javascript apps so that refers to react native probably there are other multiplatform tools such as xamarin which is all in c sharp or kotlin using crossplatform compiling is somewhat crossplatform flutter and dart is another combination so just putting javascript here is kind of misleading but the idea is that the trends are trying to get crossplatform solutions and a lot of that looks like web development so if you're a native app developer you're going to know android very well or ios very well but they're very independent if you're trying to do crossplatform work you're probably going to also know quite a bit about web development so anyway that's the trends i see is what the market is trying to do and i don't know if the crossplatform solutions are always the best but that seems to be where we're trying to go now let's talk about the skill levels and the complexity so on the left side we have web development at the very beginning if you've never done anything before you can build web pages quite easily with a tool such as wordpress or maybe squarespace or something that is just as easy to use as a desktop publishing tool such as publisher or maybe even microsoft word going up from there you can call yourself a web designer so you start to learn a bit more about css from javascript and then if you try to get to the full stack you have the database in the back end and so that's kind of the progression that i would teach my students and probably you've learned as well if you're on that path in the mobile development it seems like we skipped that first stage there might be some tools out there to create mobile apps without code but i i don't really know how successful they are so most of the time when i teach app development we jump right in with somebody that knows java and we start working with pretty complex code and then finally you get to the top end where you have the full stack again in a mobile app so my perception i could be wrong maybe you could correct me if you put these corrections of course in the comments is that there seems to be this bottom rung of the ladder that is missing on the app development side so more than likely if you're in app development you've got more skills than somebody that is just beginning with cody this was reflected in some salaries so on the left side we have what i searched for and i think it was indeed.com they said an average salary on the in the united states for android developer was about 120 000 and slightly less for the software engineer which is more general and probably focused on web development is is the majority of their work so you get paid more as an app developer probably because as i said the difficulty level's a bit higher and your skills are probably a bit more advanced so the conclusion then uh your mobile app either you're an established business or it could be that you're just starting directly with a mobile solution and trying to launch your startup that way i mean instagram for example you use a mobile app only if you need some unique capabilities most of the time you can build an app without building an app you can build a mobile friendly website so a responsive design website can get orders and present information to your customers quite easily and so you might not even need a mobile developer but if you have these unique capabilities in a phone and you want to use them then you'll obviously need to make a map and make an app more challenging for beginners and then better pay so that's the column for mobile the case for web development is that it's more widely utilized so you're going to find people that can work on your projects and you can hire them if you are a web developer you're going to have more choices to pick from and also if you decide you want to begin in one or the other then i would probably recommend that you start as a web developer if you're a beginning programmer and you can transfer those skills later to mobile after you've maybe got a year or so of experience in the next video i'm going to help you with the scrum and agile process and so that way you can manage a team using today's most common methods if you'd like to see the entire playlist for this course i will also put that link here so make sure that you subscribe if this is good information to you and we'll see you next time hi and welcome back to the business of building applications in this course we're talking about the management and the business decisions that go behind creating an application whether it's for your business or for a startup but it's about mobile apps and the process that is used so we're in this section here called hiring the team and so we're going to in this video talk about managing your team and using the agile software process if any of these other chapters look of interest to you then make sure you subscribe so that you can come back and watch them later my name is chad slutter and i teach software development and computer science at grand canyon university so welcome to class so we've got one more section ahead of us and then we're going to move on to other greater things so right now we're talking about managing the team with agile and so agile is a software development process so sometimes you're going to hear in your life the letters the sdlc the software development life cycle and so this goes from the concept of an idea all the way to where you retire a piece of software and no longer use it so the sdlc is a way to bring sanity into a complex process trying to bring some structure into managing something that frequently fails right now there are two basic ideas for how to manage any kind of an engineering project waterfall is the traditional method that's been used for centuries and agile well it's the newest name for a process that is incremental and so agile is preferred and probably has some good reasons to be preferred in today's market so here's what the previous method looks like this is the waterfall methodology and you can see where it gets its name because one step of the process is completed and then falls into the next so in a waterfall methodology you try to imagine all of the details of your product up front and you would design a very comprehensive guide to how to build it and so you really create it twice in your mind once in your idea and then second on your paperwork and then you give it to your engineers and they develop it now the design then of course is structured it's static it might be what you want but it might not be as well and the risk is that if you have left out any details they never get addressed and so this process leads to expensive dinosaurs that people abandoned and so waterfall methodology though it sounds logical in practice it has some issues and the issues are is that we're trying to do all of our thinking about the product up front at one time and we don't usually do very well good job of that so in comes the second type of software development which is iterative we develop a feature and then test it out and show it to our users and incrementally we increase our product and so this has been proven to be more successful in the long run and to get that process working we use the process called agile agile or agile scrum because scrum is a meeting a name for a meeting that we do on a regular basis in this process so really it's agile software development so what we do with agile software development is we start with a project backlog which is kind of like the waterfall technology where we say we've got a pretty big picture of what we want their app to do we list all of those features but we don't implement them all we just implement the first one or maybe two we create what's called a sprint backlog which is a short list of things to do and then within two weeks to 30 days we do a sprint and then finally we have at the end of a short period of time at the end of our sprint we have a product that works we can test it out now it only might be the title screen and the login but at least we get a view of what the the design is so it's a very minimal product it only has a few features but we can show that to our users and then they can decide if we're on the right track or not and if we're not then we've only wasted two weeks of time or we can make adjustments so that we can make corrections for the future to make this work we do a few principles one principle is called self organizing your teams you put people together and they have their specialties but we give them the autonomy to work as a small group and so this grid here might show you how you would organize an entire company of agile teams and so you can see that there are four people or four teams and each each person then is got their own thing so if you you might have a bigger team than four but usually small teams work best so you can see the specialties specialty such as somebody that's in the ui design somebody's a software developer it looks like we might need some data modeling maybe a database expert but the idea is that we try to come up with these little pods of people now when you come up with these groups it's important that you pick the right people on your team of course we all want the people on the top right corner of our team they have high capacity they're well skilled at their job and they're anxious to get started so we'll give them a green light so the low capacity people are your second choice which is they don't really know what they're doing yet but they're really anxious to get started and then the other two on the left the willingness part that's harder to cure so if we were to respond to these people as they've been given to us maybe you're an agile team leader and you've got this mix of exactly these four people what are you going to do with them well first of all the green we're going to promote we're going to give them flexibility autonomy we're going to let them run their own schedule we're going to make them creative the low capacity people are going to make mistakes of course and so we're going to pair them up with somebody that knows what they're doing we're going to give them training if they don't know what their language is or if they haven't worked with a certain technology as the manager you're probably going to want to keep track of this person you're going to help them out share with them what you know or pair them with somebody that does now our third person here is our high capacity but low willingness and so you as the manager of the team are going to probably have to clarify why we're doing what we're doing so oneonone meetings clarify the goals the directions why this why this sprint is necessary what the vision of the company is try to clear out any hesitations they have maybe they need a schedule change maybe they need something more interesting to work on but you've got to find out why they're not so willing and then for the last part where you've got these incompetent people that really don't know what they're doing they're just toxic and you should probably fire them now so when you look at your agile team you want to make sure that you can get as many people in the top right quadrant as we can because you're going to make them work kind of independently you're going to put them in colocation areas hopefully where they can see each other frequently and so studies have shown that the further away people are isolated the less effective they are in solving collaboration problems so unfortunately with the covet plague that we experienced in 2020 many of us didn't have the chance to work with our teammates in the office we'd started to do remote work but the ideal is to have a close relationship where unplanned meetings can occur quick questions where you can have people show each other ideas you don't have to wait formally to present something you can either go with an idea or abandon it based on immediate feedback so if you do find yourself in the remote work situation which is probably the future try to do as casually as you can as you can see in this case we have a mix so some people are remote some people are close by but the idea is to keep up a constant flow of communication so that ideas can be tested or approved or abandoned quickly now one of the things that you're going to work with on a project is the product backlog now a backlog sounds like you're behind but really what it means is a product feature list and so that feature list is going to be everything that your app needs to do and so you can see in the left column of this board we have sticky notes every sticky note is going to describe a feature of the product for example let's say on one of the sticky notes it says i want to display all of the orders of a of a of a user in a date range and print a report so that's a feature now that feature is going to take somebody some work there's going to be lots of other features and each one of those is going to require a sprint to be able to get the work done but we want to identify which which features in the backlog are the most important and when we find the first important ones we're going to put them into the next column the sprint backlog so a sprint as you might recall is a short period of time maybe two weeks and we will work on a few items from the product backlog and then you can see the rest of it we're going to move them on until we get done now when you have a sprint planning session you and your teammates are going to pick out some items from that product backlog and you're going to take a look at what needs to be done and prioritize them so you might pick some feature because it's easy to do or you might pick a feature because it's critically important for the app but whatever the reason is you're going to move those items from the product backlog that are going to be currently busy and put them into a sprint backlog and they will get your full attention for the next two weeks so our sprint backlog then is our guide you're going to put that on a board and you're going to talk about it every single day so your backlog is everything that has to be done either in the app or in the case of the sprint backlog everything that needs to be done in the next two weeks and then of course completing those steps is a daily task so now we've gotten to the term called sprint what are we going to do in that sprint and how long is it going to take so a sprint typically is two weeks long the first day is the planning meeting so that you can decide what the next goals are and you can see that every day of the sprint is a scheduled meeting probably early in the morning that says your daily standup so a standup meeting is where you literally do not sit down so it doesn't take too long so for 15 minutes you give a brief update on what you're doing and then when we get to the end of the sprint you can see that there are two items one's called a sprint review and a sprint retrospective so you can kind of look back to see what went well and what didn't so the product increment is what we're trying to create in a sprint so an incremental product is something that is like i mentioned less featureful than the full thing but still enough functionality so that we could call it shippable so shippable means you can show it to your client you can show it to the customer they can test it out and give immediate feedback on it so this is the magic of why you do incremental development is that if the product is a failure you can find out right away so instead of building a billion dollars worth of software you spend a hundred thousand dollars worth of software and then you can change it or reject it before you waste too much money so an incremental approach saves money now the daily scrum is where you're going to get together with your teammates and what are you going to talk about well really the agenda is three questions you're going to tell everyone in your team what you did yesterday so yesterday i created the report that would show all the orders from a certain date range and it now converts into a pdf file okay so there's my accomplishment today what will you do today well today i am going to make that available to users or i'm going to make it available to administrators some other new feature and so something concrete and then is there any impediment is the third question so is there something blocking you do i need help do i need a new uh permissions to something do i need to understand something do i need someone else to do something for me but in the daily scrum you have those three questions now if this is a good way to manage employees because you know what they're doing they can report and they can report to each other so if you have a lazy employee that is just out at the beach and he says what did i do yesterday and he really doesn't have anything concrete if that happens for too often then it's obvious who is the dead wood in your tree and will probably either be terminated or looked over for any further enhancements now when you get to the end of a sprint we're going to call this event the sprint review what we want to do in a review is just to look back at what we created so in this case you're probably going to have your team around your computer showing you the product the digital project you made and in front of us is the man in the chair he is the customer he is the person that is paying you and you can show off this is show and tell to say here's what we made this is exactly what you told us and at the sprint review this is his chance to say i don't like it or perfect you did it in a creative way i love it and let's keep going in the same direction so the sprint review is that periodic checkup point with your client to make sure that you're on the right track now the retrospective is also at the end of the sprint and we just look at our own work process and we ask is there anything that's working really well or is there something that we should change and what can we commit for the next sprint so a retrospective just kind of gives us a chance to do some self improvement if this is relevant to you then check out this other video on the four roles that you would expect to see in a software development team also if you'd like to see the entire playlist of things that we've talked about in the business of apps i'll put that link here as well so thank you for coming and join me again for class hi welcome to the business of building applications this is a course to help you as a manager of a small business or a team in building mobile apps for good solutions we've got several chapters in this course that we've already covered and we are coming up here to number seven which is called hiring the team in this video we're going to be talking about writing a job requisition and a good job posting that will get the people that fit your needs we've got one more topic ahead of us which is called future trends my name is chad slooter and i teach computer science and software development at grand canyon university if any of this looks interesting to you make sure you subscribe so that you get all of the information that will help you succeed in your venture so in this video we're talking about writing a job requisition and attracting the right people that will make your success a reality so first of all we're going to talk about the difference between an internal and an external requisition so if you're writing an internal wreck it's because you're working at a company that needs to know these basic things and so i probably don't need to fill out the form for you you can see what your company would like but i would predict that you're going to be asked several of these things so you're going to be picking a title you might not have any liberty and what you call that job because there's already predefined jobs you probably have a salary band that you are offering to your employees so you don't really know exactly uh what your upper and lower limits are until you talk to your boss and the company controller you will probably have some requirements that you put in there and you probably have some kind of a contract and so sometimes you see the words salary and exempt or nonexempt which is rather confusing so exempt means they are exempt from the rules of overtime and union representation so these are the people that you can have work 80 hours a week and not pay them any extra money you'll probably be asked to set a budget so how much do you expect to pay here and of course you're trying to find somebody that will be willing to work less than that now quite different as the strategy of producing an external posting because this is what your candidates will see not the internal documents so the differences are because there's differences in goals the internal documentation is to meet your business goals your hr requirements and to budgeting probably so when you write an external document you have to clear away any of the language that you're comfortable with as an insider of the company and think about people that are on the street or working at other companies and they don't know anything about you and so you're trying to target the language to the people that will likely fit the role the best so you probably want to start off with this question about what do i really require for this person to have on the day they enter the job and what would be nice to have because if you put too many requirements of course you're not going to have anyone actually apply so i picked a few job postings out of indeed.com that are currently being posted where i live and you can see here that this was for a mobile developer and the company called signing day sports so i don't know anything about the company other than the fact that they are looking for a mobile developer notice they have the qualifications listed here so they are looking for a degree they want some experience and they they mention some specific languages and frameworks that they work on so it looks like react native is what they're building in so they've already decided the technology and if you don't know that technology then you're probably not a very good fit however you can see that they have familiarity as a requirement so these are the nice to haves and so things that are not necessarily directly on the job and the first day so you have to distinguish between things that you need to have and then what you're willing to train them on so if you find a really good employee who has got most of the skills then you can probably make them work here's another one you notice they use the quote must in capital letters so they obviously have a hard fast rule so this comes from the nikola motor company so this is a company in phoenix that makes electric trucks and i think they want to be the next tesla anyway they're looking for android development so specifically you must have proven experience in android but then notice below they have some other things that they probably will not get in most of their candidates so the android compose framework so if they find somebody with the android compose framework they're going to guarantee them they're going to have an interview likely so next let's talk about what would be beneficial in a crossdiscipline candidate so if you're looking specifically for somebody with experience in another field this would be important to put in your job requisition in the public so we're looking for the core developer skills here but you might have other things such as somebody that's worked in a travel environment before have is your product geared toward travel agents or for online purchases of airplane tickets or something then maybe you would want somebody that's worked in that field are you working in a medical plan are you is your app serving doctors or nurses or hospitals then if somebody comes to you with a degree in nursing and software development which would be a quite an odd combination that would be certainly a valuable thing and of course your automobile mechanic could be another example one of my students actually has these two things now and wants to find a job working where some software is in a garage environment military experience a lot of students that i teach come from the military and they're trying to transition into a new career and my career advice to them is if you are looking for a job as a software developer why not go back to the military and work as a civilian if you are serving military clients with your app then maybe these are the kind of people you want to hire people that have worked in the military they understand it and they also know how to write code and of course education comes to mind as if you're trying to serve schools so it's not really essential that your software developer is cross professions is it you'll have to decide that but if it is important to you then you probably want to put it in as one of those nice to haves how about the intangibles so you're going to have a variety of people looking at you and they don't really know what you expect so think of your own expectations of what your team is going to be and see if you can filter out the people that really don't matter so for instance are you going to be working in close teamwork with like agile systems or are you looking to hire a single loan developer so that would be important for the people to know upfront before they apply to your job so some people have strong preferences both ways now the question is what is your preference so if you're looking for a certain person make sure you put it in the description what is your parameters what are you going to expect your software developer to be are you going to have strict guidelines deadlines are you going to have code that must be written in a right format do you have specific languages and frameworks that they must work with or are you going to be so flexible that they can choose their own technologies and their own ways of building things so if you're comfortable with either one of these then you probably should specify in your job requisition how you want it to look because once again people are going to waste your time if you offer them a job that they really don't fit with how do you handle ambiguity so are you going to have very detailed designs are you going to require people to create detailed designs or are you more flexible to say let's just see how things turn out and what is the uh what is the structure there be very clear about what you expect whether it is either very strong or very weak in your picture also when you look at job postings i see these two very often so what kind of intangible do you have at your company are you called fastpaced and goaloriented or are you more flexible and work life balance is important to you now honestly i've never applied to anything that had the word fastpaced environment in it because i really think that a place like spacex would be an awesome experience if you have 180 percent of your life to give to them however i have other things in life that i do besides work and so a job description that had fastpaced environment would likely just turn me off and say i don't think i would turn out for more than a year in a high pressure system like that so how are you going to treat your employees are you expecting them to work as a startup and dedicate their whole life or are you looking for them to produce a balance between what they do in their time away from work and what they do at your job so whatever your expectations are it's probably a good idea to put them right in the job posting now there's also some hr language that you should include in your posting so probably required by the company policy or even state law to have nondiscrimination phrases you should have probably some company language the company probably has a statement of their purpose or they have something that goes into every job description and so make sure that you include that or if you're your own company and you're a startup you might want to think about what your story is why would people want to work for you if you're the greatest thing in the world then tell us what it is so you're trying to sell yourself when you put the posting out there are you going to require citizenship or will you provide visa and sponsorship that's an hr thing how about this remote work or onsite work are you comfortable with each so if you're comfortable with remote work you can have a wide group of talent from all over the country or even around the world and if you're if you're a more face to face person then of course you're going to be limited by the people that live in your area so that's a decision that you're going to have to decide based on your comfort comfort level with that that system so whatever the case is make sure that you are up front with your employees of how you expect them to work here also think of adjacent skills so you might have your must have lists but don't be too restrictive on it because you want to have enough people that can really do the job even though they might not have the exact experience you need so a software developer with web experience can probably transition into mobile development pretty easily it depends on how many experience years they have languages also are very similar so the syntax of java and swift and c sharp and c plus plus and javascript they're very similar obviously those that are experts in each of these are going to argue with me to say there's huge differences but honestly these are all the descendants of the original c language these are c like languages and so if you have an expertise in one of these then you can probably pick another language that is in that same family also think of the structure of how software is designed and architect so the model view controller the mvc frameworks and the and this the setup there are very similar no matter whether you're working in php or in java or javascript a lot of the strategies and designs are the same so if they've got heavy experience in a framework that's not the framework you're on they're probably going to have a lot of lessons that they can carry in and so adjacent skills work well so let's say if we had a situation where we have a react native developer that's the job we want and you get these applications that come from people with expertise in cyber security or a web designer or a database administrator or embedded systems or electrical engineering don't throw them out and don't restrict them from applying if you are willing to do the training so once again think about what is essential and what can be trained i would rather pick somebody who is an expert web designer and it can demonstrate a great portfolio but yet has not learned react native they've proved themselves in some other field that is adjacent and so you might want to think about inviting related degrees and related experience to apply if they can prove that they're a good employee now i would also recommend that you ask people to apply with a portfolio a portfolio of course is a collection of things that you can see that people have actually done so let's take a look at an example of a portfolio and you tell me if you would like to hire this person or not so holland a coin was one of my students for several years at grand canyon university and she just graduated now she created for herself a portfolio of everything that she's done in her university experience so let's take a look at her projects so she's built this tool here in java spring so you can see that right away she knows how to program in java and she sorted it nicely so that you can see each of the languages that she's worked in and the projects that relate to them so let's say i want to see what she's done in java and let's see what is going on in i heart rate so i heart rate was something she did in the spring of 2020 you can see all the different languages that she's built with the design and the final product of what it works with so i believe this was a watch application so that an apple watch that would just record your heart rate and put it into a database and then you can have some web reports to go along with it so i recommend to all my students that they create one of these portfolios because it demonstrates in a concrete way what you know how to do so as an employer you get to know a lot about your candidates just from looking at their portfolio as a matter of fact there's not really very good information that you can gather at a job interview just by asking them questions and having them tell you generic answers so a portfolio is a great answer to the question is can you build an app now there's probably some other things that i failed to include and how you should write a job requisition so those of you that are looking to hire and have hired people tell me in the comments below what has worked for you the next video in this course is about the future trends of technology and especially with mobile if you'd like to see the entire playlist i'll put a link here so you can go back and catch up on all the great things about the business of running apps please subscribe if you like this and welcome back to class hi and welcome to the business of building applications this is a course about mobile app development in this section which is number seven we're talking about hiring the team now this is an assignment video so we're talking about activity 71 so if you're one of my students at grand canyon university this is what i'm going to assign you for homework what we're going to talk about in this assignment are the team roles now in a previous video we talked about four background specialties that would be in a lot of teams so this is the project manager the designer the front end and the back end developers now there are probably other roles in a team but we're focusing on these four so in this assignment what i want you to do is write a twopart paper that compares the responsibilities of these four roles so essentially i want to ask you in part one of the paper what do these people do what's their essential job function and how do they add value to your team then the second is in your particular situation based on your expertise and your company or your startup company where are you going to fill these roles who are the people that are most likely to join you now that could be that you're going to fulfill them yourself or you've got friends in mind or you've got a way to go and recruit them so this is the twopart solution here so instructions for part one i want you to answer the question what important service do each of these members provide what education and experience would you expect that these people would have so if you were writing a job posting and trying to hire them what kind of experience and education would you put as a requirement what strengths does this person bring to the team so is a designer just as good as a developer or does one do something slightly better than the other in part two i'm going to ask you if there are any opportunities for you not to hire them so for instance can you double them up can you outsource the role do you have to pay a full time now are there any of these roles that can be combined into a single person for instance do you have a friend who is a developer and a designer or are you good at this on your own so what is your case what's your situation how are you going to save money which of these are the most expensive to fill so based on your market research which of these do you think are the most critical and you would never outsource or which of these is where you could save some cash so then for your role are there any roles that can be considered minimal or are they all equally important to the development of your app so only you can really answer that based on how well you work now describe your own set of skills how strong are you in those four roles is there anything that you feel like you would want to do yourself or is there something that you feel inadequate on and you would want to hire it out so that's part two and analyzing how well these four roles would fit in your team so if you're one of my students this is what i would expect you to send me a word document that has two parts so part one is a description of what these four roles are and how they add value to the team and then part two is a recommendation for you personally how would you plan to consolidate or fill these roles based on your own expertise and the people that you already work with and so that's the goal here for this assignment so if you're not one of my students feel free to put in the comments below what you think of these roles and how valuable are they for instance is a designer a critical person on your team or have you worked on a team where the designer is you as the programmer and how well did that go for you now if you would like to subscribe you can see the rest of the channel and see what the ideas are on this course i will put a link to the full course so that you can see the other videos and the lessons about app design thanks for watching and i'll see you in the next class hi and welcome to the business of building applications this is a course on mobile development and the business decisions that go along with it so we're on part seven here which is a seven of eight chapters and we're talking about hiring the right people for your team so this is a homework assignment video so if you're one of the students in my class at grand canyon university this is what i'm going to ask you to do so we're going to write an internal requisition form so if you are a hiring manager let's say you're now in a medium to large size company you're going to have certain documents that you have to fill out to justify why you need a new person on your team so put yourself in the role of a team manager of a medium to large company assume that there are multiple levels of management and multiple departments in the company in other words a bureaucracy so what i want you to do is to assume that you're going to fill one of the roles in your team that we've talked about in a previous activity so remember that was the project manager the designer the frontend developer and the backend developer or if you've got another role that's just as critical and i haven't thought of then you could use that one too so what i want you to do is to write an internal requisition so think of how you would justify adding a person to your company so sometimes companies are very hesitant to hire because people are expensive so what we want to do is justify it with a certain goals so in the first part make sure that you include a job title that re that coordinates with the rest of the company so don't invent something new see if you can figure out what your company already calls people make sure that you get the right department and you put your name for the hiring manager and you probably have to just justify it by what this person is supposed to do right a job description and then you have a reason why a person is needed so did somebody quit or are you creating a new position so depending on your company one of those would be easier to justify and get authority for hiring than the others would so let's keep going with part two of what you would put in the internal requisition so you'd have to do a salary estimate so you don't just invent numbers out of thin air you would have to justify it so if your company already has very fixed salary bands you might call this a person level a or b or 3.5 or whatever your system is and if you don't have a system like that then you would probably have to justify it based on averages from websites like salary.com or someone that is like glassdoor and they are estimating what is average for your area so remember we hire people at average salary and then we say to our customers that we hire the best in the world so i don't know how that works but anyway that's usually how you justify a salary range and then you put a start date on it to say this is a going to coordinate with either our fiscal year or maybe a project start date and then we have the number of hours that we plan to work so sometimes you can hire parttime and of course fulltime equivalent would be 40 hours a week and then how long is this going to work so are you going to have this person as a permanent employee or are you going to keep them on until the project's over so that's some of the things that you would justify in an internal requisition so i forgot to put a few others so contract type is this permanent or is this uh temporary what are the qualifications are you going to expect to have a degree what kind of degree or maybe just work experience so trying to fit the role is appropriate of course and then the budget so you can put down what you expect to employ the person as and of course the game is you try to find somebody that will tell you that they're willing to work for less and if they are then you hire them so i don't know if that's morally objectionable but i think that's how most people do things now if you were one of my students this is what i would expect you to send to me you would send me a word document that has the internal requisition for a position on your development team filling out all of the details that are in the items that i just showed you so this isn't really a thoughtprovoking assignment it's more of an exercise to investigate where you work and find out what kind of things that are out there so your requisition at your company will probably look like nothing similar to what other people's are doing but it will not be identical and if you're not working at any company then of course you've got some flexibility to say what you would think would be a likely way to requisition a new an employee if you're not one of my students then you can put down in the comments below what you think about the experience of how your company works and how difficult it is to justify a new person on your team make sure you subscribe to the channel if you haven't so far and i will put a link to the entire playlist for this course and other courses as well so that you can join me again in the next class thanks for watching hi and welcome to the business of building apps this is a course about mobile app development and the business decisions that go along with it so we're in chapter seven of eight chapters we're talking about hiring the team in this video we're talking about an assignment that i would give you if you were one of my students so this is homework so activity 7.3 which is about creating a job posting so remember we're trying to put you in the role of the team lead and you're trying to justify why you should hire somebody now once you've got approval for that how are you going to attract the right members to your team so we're going to actually write a job posting using examples that we would find on indeed or on glass door or other places and we want to apply the principles that were taught in previous videos of what makes an effective job posting and how you can make it fit with the people that you want to hire so choose one of these four roles whether it's the project manager the designer the front end or the back end or if you've got another role in mind you could probably use that but somebody that is relevant to your app development process and we want to be able to study the materials for this topic so that means i want you to go back and look at previous videos that i've created they give recommendations for how to post so what are we going to put into our job posting so this is some of the things you're going to have the job title a clear summary of what the job will do the responsibilities on a daily basis or on a monthly basis or whatever your plan is we expect to put the qualifications there so how much education and experience or licensing or certifications does this role need what are the benefits that you provide to them and describe your company why they should work for you and so some of the recommendations that i put there earlier would give an idea of the style you are and what kind of a fit that most people would want to apply for so make it look attractive but of course make it look realistic as well so what i want you to then do is to take a look at what you wrote and do a one page self evaluation compare this to where other people have written so yours will be different than what you would find on other companies so for instance if you worked in phoenix where i do you would probably think find things like for intel or american express or carvana or paypal some of those are the big companies around here how do they differ from what you plan to do and so what i want you to do is to say if you've borrowed from another posting compare the two so i think frequently that's how a lot of job postings are created is that the manager copies and pastes from a other company's work and then tweaks it so if that's your process then tell me what you changed what you deleted what you added because it's probably not identical to other companies as well so that's what i want you to do is evaluate what you wrote so if you were one of my students this is what i would expect you to turn in send me a word document that has the job posting and then following that an evaluation kind of a critique of why this works what makes your posting effective what did you emphasize and so that would be a reflection to on what you just wrote so if you're not one of my students then feel free to write in the comments below about some of the greatest job posting errors that you've seen things that are laughable perhaps or things that would make you run red flags you might call them of why you would never apply to a company based on what they wrote in their job description so make sure you subscribe to the channel so there's lots of other points to this course and there's a playlist here that would give you the other items so thanks for watching and make sure that you come back for the next class of mobile app development hi and welcome to the business of building applications this is a course for people that are business leaders or entrepreneurs so we've covered several items already in this course and we are on the last of our chapters so we are going to look in this video about 12 trends that i see in the next decade or so regarding mobile technology my name is shad slooter and i teach computer science and software development at grand canyon university so if this looks interesting make sure you subscribe and then you can come to class with me on a daily basis so let's get started here we're talking about 12 mobile tech ideas that are coming or developing in the near future and so some of these are here but they just don't work very well and others will grow in popularity so with the first one that i'm going to put on the list is cloud computing and cloud computing is far more than just running a server on the cloud it means that you are able to offload a great deal of the work that your phone does as a low powered device and put it in the hands of super computers so the best way to show you what is available is just to go to cloud.google.com for example google is one company that has great cloud services so what do they do they have everything from machine learning and ai to storage to ways to make your finances work so you don't rely on your computer as much as you used to to actually do heavy computing items so for instance think of the voice recognition tools that are on your phone right now so siri and cortana can understand you pretty well do you really think that your phone is doing all of that voice recognition no it's not they're sending your recorded message to the cloud and the super computers in the data centers are doing the analysis on your voice and then immediately send back what they think the text is and so all of these cloud services are a huge variety of things from voice recognition to all kinds of processing power and your phone doesn't really have to do the work it just has to connect you to the place that does the work for you and so i see cloud computing growing even more than it is today so the next trend that i see a greater emphasis on is artificial intelligence and so the major software developers like google and microsoft have great tools that allow developers like you and me to simply plug in libraries and functions and apis and we can just take advantage of it so i'm not an iai expert but i can add ai to my phone apps because of these plugins you can see that this is microsoft's collection of things let's look at some of them that we can understand so the top right corner it says text analytics so with just a simple plugin with an api call on your application you can do sentiment analysis it says on any kind of text that is either written or spoken to you so you can find out if somebody's in a good mood if they like your review if they hate your business and the artificial intelligence agent will give you a score and so that that's an ai example and you don't have to do much programming other than tell it analyze this so the next item here in the center is the ai route planner so for instance when you start using google maps or microsoft maps you don't have to compute the the best route that a car should take there's a ai agent that is doing that for you and so like i said you don't have to be the ai expert you just have to be a programmer that knows how to access data points and endpoints of apis so look at the other things there's language understanding and video indexing so you can actually analyze videos as they've been processed and computer vision down in the bottom is also where you can recognize objects that are in the field of view of a camera so this is where ai is as of right now i just see this growing and ai agents becoming better and better and helpful in their in their process of making our apps more and more powerful so so i don't mean that ai is going to become like the overlord robots that are going to control our life and ruin our civilization ai is just a matter of doing computing that makes the apps work more efficiently so the next item up is cross platform development so the reason why i say this is going to be a trend in the future is because people are talking about it a lot and trying to do some work on it but look here at the actual statistics about what apps are in the store today so you can see that the android store is much bigger as far as the number of apps go and the overlap here shows the number of apps that are crossplatform they've been developed in tools like react native or flutter or some other tool to have one code base between the two but the majority of apps are written in a single platform environment why is that is because that's the best experience for the user and the actions actually work well and so there's a lot of improvement that needs to be done on crossplatform application development and so i can only see it as a trend that will increase google is putting quite a bit of work into their crossplatform tools such as flutter and their current edition of kotlin is compiling the guts of your application right now and leaving the user interface to custom development so there's attention being paid to this and so i would expect that it's only going to grow from its humble place that it is in right now the next is mcommerce so you've heard of ecommerce of course is when we've turned stores into websites so mcommerce is the idea that you can run your entire store on a mobile phone there's a couple of reasons for that one is the idea of responsive design applications so if you have a web app that works well on your phone and your tablet and your computer then you can use your phone in a greater degree so when you're out in the store or the warehouse you don't have to have your laptop with you and so that's one reason why computing on the phone is growing and eventually will hopefully replace your desktop for the majority of the purpose that it needs so you've probably seen this in some of the coffee shops you've been to where they don't even have a cash register or point of sale computer they have a tablet or they have an ipad or something like that and so that is m computing that is running your entire business on a mobile platform and so i just see that as a great way for people to save time and save money and save devices so m computing will probably be a growth area so consider that an opportunity if you're an app developer so virtual reality shows up next so virtual reality has been a great thing for the future it has always been a great thing that's going to happen in the future right now virtual reality pretty much stinks this is how i see it is people get headaches they get nauseated it's as good as the 3d televisions were what some years ago it was a great technology that the engineers loved and they promoted and nobody bought them because nobody cared that their tvs were threedimensional and it seems to me a little bit like that right now with vr nobody really is buying into this even there's a great deal of research being put into it so the potential then is amazing if we could get vr that doesn't stink then we are going to have a great view for the future so right now mobile phones on like the google cardboard they're pretty much dead if you go walk through goodwill or any secondhand store or any garage sale you're gonna see all these uh headsets that were designed to hold mobile phones and obviously everyone tried them and nobody liked them so what's this what's the current share so if you look at the actual headsets that are designed for virtual reality for playing serious games and you plug into xboxes or highend computers you're going to see that oculus is the market leader they have about fifty percent of the share of all the models that are currently connected to devices this is a data here that comes from steam so we're talking about games here and you can see that oculus has this rift and quest and the rift ii or the wrist rift s i'm sorry and so they're obviously the leader so if we can get a mobile phone to work as well as an oculus then maybe we'll have some potential there so let's keep it in the future category for a little bit longer virtual reality may eventually become really cool and people will adopt it augmented reality probably has a little bit better future because as you can see the applications in augmented reality allow you to stay in touch with the real world you don't have to stumble around in a headset so the people that i work with at grand canyon university tell me that the best experience that they have in their students and working with ar is with the microsoft tools so microsoft makes the hololens and they have version 2 out and you may have seen in the recent news that the pentagon has awarded some contract worth billions of dollars to microsoft because they have this augmented reality headset that really really does work pretty well in comparison to the others so you can see a couple of applications here is that here's a student it looks like and he is uh pulling apart the spinal column of a of a model here and you can look at it in detail even though you're you're still looking at the world around you it's just kind of the superimposed image over your glasses so here's another application of the technology looks interesting so you go to ancient rome and you see these ruins that are maybe half there or 90 percent destroyed with an augmented reality app you could get to see what the original looked like and so you go to a museum and instead of looking at the skeleton they might show you a more realistic view of a model of the dinosaur so right now ar is kind of quirky it's kind of gimmicky i don't really see this as a necessary item that you have to have and so we'll keep it in the future then remember this is a video about what come what is coming what's going to be developed and what's going to improve a great deal so we can still keep ar as a developing and growing technology so take a peek here this is a google's developer website for what they currently have for augmented reality and so you can experiment with this as you can see you can put cartoonish looking models on the street or on the table and they've got plugins that work with android and unity and unreal and ios and so right now you can do the cartoony kind of a guy standing around your neighborhood so go ahead and experiment with this if you want to become a developer that works with augmented reality now i mentioned so the technology is not particularly useful i don't know of any apps right now that you must have that make this work other than pokemon go so maybe uh maybe you'll be the guy or the girl that comes up with a great solution why we all have to have our phones for an augmented reality app so no doubt in the future we're going to be seeing higher bandwidth so 5g networks currently are being rolled out as i'm making this video what will that mean for mobile developers well you're going to see some trends which means you're going to have greater emphasis on connecting to the cloud resources your gps will be more responsive you can have higher resolution video conferencing you'll have better response times you're going to have always on services and the iot revolution the internet of things will become easier to develop and ar will be better and what's going to then in decreasing trends well if your phone is working well with 5g then less dependence on the computers you're going to have fewer disconnections you're going to have less reliance on the storage in your phone and they promise us that our batteries are going to last longer so less energy consumption so those are some trends that will accelerate as we have higher bandwidth now iot or the internet of things is a growing field and i honestly think that mobile developers are in a great situation to figure out how to use this so i picked off this page here from microsoft azure iot edge it's called and so the idea of internet of things is that we're going to have a different trend instead of more computing on the cloud we have more computing on devices okay so that's the complete opposite of the trend that i was showing you earlier so what this means is that they're working as i once i say they i say we're talking about electrical engineers and computer engineers they are designing apps that are super low power and have higher abilities to do computing so if you have these tiny little things that require almost no energy and can do a lot of processing on them which is obviously impossible for most of us to think of right now but if that goal is met then the iot will it will take that that heavy cpu usage from the cloud or from the core and move it to the edge and so less computing power is going to be needed in data centers if we can make the iot devices better and more strong so what are the iot devices you ask well hopefully you can understand that those are the smart devices so don't even you don't have to think about the smart coffee pot anymore iot devices can be embedded in things like concrete and so you know what's going on with your bridge what's the vibration and what's the load what's the temperature so you build things into materials you have home security systems right now which are current iot devices but if you think of every object with a smart chip in it from your car to your ballpoint pen to the chair you're sitting on to the medical devices that are embedded in your body all of these things are considered iot the internet of things so really iot is another form of mobile programming mobile application development so if you're a mobile app developer then you're in the right field for the future wearable technology is going to be more and more so right now you've got the smartwatch you've got maybe smart glasses we've got the tools here right now at android developing sdks so you can build your own watch apps right now security is going to be obviously bigger and more important than ever in the future so you're looking at any software developer best practices guide whether it's apple or microsoft or google you're going to have best practices in mobile development going on all the time so make sure that you include security as part of your design blockchain is going to fit directly with that increase on security so currently we're all using our phones and credit cards to make purchases so we're kind of on the top row of this model here where we're the customer and there's somebody in the middle that's taking a cut from everything that we do with our credit card and what we want to do or it would be nice maybe is to use virtual currencies and uh blockchain type things to just do a direct transaction so we cut out some costs so right now we have the model on the left where you add a credit card your app and then the transactions are made through your bank so in the future maybe we can have direct payments using bitcoin or something similar and so i expect that that will be a trend that will accelerate in the future here's something i haven't actually experienced much of myself but i see it as a trending topic that will be in the next few years is beacons so a beacon is a small radio server that can tell you that there is a phone nearby and then you can get a message so in this case somebody gets an alert that says hey would you like a special drink now you can do this right now with gps and so maybe if high bandwidth and improved gps accuracies are are with us then beacons are really just redundant they're not even necessary but it's not a tool that's in common use right now so maybe beacons will be in the future so i'm kind of skeptical that this will actually be something that i would care about i as a consumer i want less annoyances not more annoyances so i don't want beacons telling me hey you got a new alert i mean i try to shut off the alerts that i have on my phone already because there's so many but anyway beacons are something that people are working on and we'll keep it in the future if you'd like to see the entire playlist for this course then take a look here at the link you can watch through all the things from designing an app to hiring your team to choosing the right platform so i appreciate you coming make sure you subscribe and you will become a better mobile application developer hi and welcome to the business of building apps this is a course that will help you as a business manager and a team lead for mobile development we're in chapter eight of this course so we're near the end we're talking about future trends of app development and this is a video for doing homework so i'm going to give you an assignment if you're one of my students at grand canyon university this is assignment 81 what i want to do is take a look back at what other companies did in past decades when they were predicting the future so we can learn from the past and predict how well we will predict the future so for the background i've got a couple of videos that i want you to watch so first of all called in from 1987 called apple's future computer the knowledge navigator and so in 87 apple provided a vision of what they thought we would be doing by today and so it's interesting to see that they got quite a bit of it right but it's kind of funny to see where they didn't get it right either then they have a second video that was made in 93 which is called your world your newton so the newton of course was the early version of a smartphone and the technology was kind of bulky but for the time it was very compact and some of the features that they thought were great we don't use today so both of those are great ideas that apple had in the past so these videos were created at a time when personal computers were still relatively new think apple ii and the early macintosh the internet was still 10 years away and smartphones were still at least 20 years away so these were fairly forwardlooking videos so what i want you to do in this is to write a onepage reaction tell me what you thought about apple's predictions what predictions did apple get that are in common use today in terms of percentages what do you think their their grade should be how good were they in the quantity of correct predictions and which features did they show in the video that were complete failures why didn't they succeed why were they not adopted were they too clumsy were they just dumb ideas or what do you think went wrong and then what did they not anticipate very well so are there things that they forgot to include in the videos that we do today and why did they miss them so let's take a look at how apple did and based on our monday mac monday morning quarterback ability looking in the in the hindsight let's find out what we think they did well and what they did not do well so if you're one of my students i would expect you to submit this to me as an assignment send me a onepage document a word document's good that will evaluate the apple's predictions how well they did where they got it right where they got it wrong and what you think our prediction ability is for the future so that's how i would grade you based on your analysis so send that to me if you're one of my students if you're not one of my students go feel free to add into the comments below what you think about what apple predicted or there other companies that had just as interesting predictions in the 80s or the 90s for what we would be doing by now i'm going to add a link to the course so that you can see all the videos in this course called the business of building apps and if you're one of my students i will see you next time and if you haven't subscribed yet do that now thanks for watching hi and welcome to the business of building apps this is a course about mobile app development and being the business manager in the process so we've gone through a whole bunch of material and we are on chapter eight which is about future trends in this video i'm going to give you an assignment so if you were one of my students at grand canyon university you now have homework this is assignment 8.2 what i want you to do is to analyze the current state of development tools the process that we can consider things that are working well so look at stack overflow for example and they have a customer survey or a user survey that talks about what is popular so they analyze which languages are growing in popularity which frameworks are growing and of course which ones are declining so through this survey we can understand the current trends and we can predict the direction of certain languages and frameworks so what's emerging and what's fading away so the instructions what i want you to do is to take a look at a survey data and based on that what are the current trends and then applying that to what you're working on right now such as your application your business your plan which languages have you adopted and what do you think their future is are they good in the future or not so for instance if you've adopted xamarin for your choice of development tools what do you see in the future is it good or is it gloomy and i want you to also think about a cost estimate so based on what other frameworks have done in the past how often do you think you're going to have to release a new version of your app so that depends on the operating system of the phone of course as well as the language itself and so if you're one of my students this is what i would expect you to send me i would expect you to send me a word document that analyzes the trends and the technologies used in your application so what's growing what's shrinking and how future proof is your current app if you're not in my class then you don't have to submit the assignment but please in the comments below talk about which languages that you see are emerging or dying what have you adopted and which are you abandoning so if you have not subscribed yet to the channel please do that i will also provide a link to the playlist so you can see all the videos about the business of building apps and if you're one of my students i will see you in class next time thanks for watching hi and welcome to the business of building apps this is a course about mobile application development and the business decisions that go with it so we're in chapter 8 here which is about future trends and this video is a homework assignment so we're on assignment 8.3 so if you're one of my students at grand canyon university listen up because this is what you're going to have to do so this assignment is about the future of mobile technologies so what i want you to do is to create a paper that is going to examine what is growing in possibilities for the future so future trends are technologies that are currently gaining popularity and they might not be quite there yet so they have significant obstacles to overcome so if you want to see a background video on this i have taught my own lesson on my opinions and what's there but i'd like you to do your own research as well so here's the instructions i would like you to write a paper that answers the following questions so which predictions mentioned in the topic readings or in the lessons that i've given you do you feel will be the most successful so express your reasons for why you think they will be successful so for instance virtual reality and bitcoin and augmented reality or things like that so what did i mention and which ones do you think are most promising which predictions do you think are most likely to fail so just because something gets a lot of press doesn't mean that you think it will be where you would put your money so explain your reasons for pessimism and so based on both of these optimistic and pessimistic views you would probably think about what you would put your investment in in your own business so how could they provide solutions to you and so in this course we've been talking about your own app your own idea your own business and what future plans do you see so we're talking about five to ten years from now how would you think your app will grow so if you're one of my students this is what i would expect you to deliver to me i would expect a word document that's maybe about a page long that evaluates the likelihood of success or failure for current emerging technologies so you're going to give me a ranking your top five let's say of what things are in the future and why you believe that they will succeed now if you're not one of my students go ahead and write in the comments below what you think is probably the future of mobile tech if you'd like to subscribe make sure that you do that be and i will put a link to the playlist for the entire course so that you can go back and see all of the great gems of knowledge that have been shared here on the business of building apps thank you for watching