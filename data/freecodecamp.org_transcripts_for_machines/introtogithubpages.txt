all right how's everyone doing today everyone's good good okay my name is Joe Matthews at Joe Matthews on the tech Lahoma slack channels you know you can at Joe Matthews me anytime and I'll come show up mysteriously and on Twitter Joe Matthews okay see and I want to talk today about github pages I love github pages it's a weird obsession and I think Kimberly caught on to that it's like do a talk do it and so github pages is an awesome service allows you to host HTML CSS and JavaScript and a little bit of extra functionality too for free dollars three dollars people and that's pretty amazing and it's pretty rare out on the interwebs to get that without ads or anything like that kind of harkens back the Geo cities days a little bit but much better and the fact that it just works and it works well so I could go on and on about get up pages I thought about doing like you know just a good five minutes of just talking about how much I loved it but instead I have an official github pages video and this is at pages github calm and we'll go through a tutorial from that site as well here in a little bit but let me just go and play this video real quick if you're a software developer github helps you build all sorts of great things things that help people things that could land you a job things that could change the world and some things that might not so how do you tell the world about all the great things you're building billboards Direct Mail these days you build a website and there are lots of options out there but so many of these options can be excessive or overwhelming even for someone who develops software get up pages lets you turn github repositories into elegant websites to showcase your portfolio your projects their documentation or anything else you want to share with the world there are no databases to set up and no servers to configure in many cases you don't even have to know HTML everything just works if you're already using github it's the most direct path to create websites for you and your projects so how does it work well github serves all of your project sites from a personal URL tied to your user name or organization github looks for web content for your projects on a special branch for sites tied to an existing repository this branch is separate from your code but you can also create a site for yourself for your organization by creating a repository with your github pages URL as its name and adding web content to its master branch you can even drag and drop your files straight into your browser to upload now if you want to build something a bit more ambitious like a blog or structure of documentation get up pages gives you a streamlined publishing experience with the help of Jekyll Jekyll is an opensource tool that transforms plain text files into websites but it also supports things like variables templates and drafts which give you more control over the format and presentation of your site now no matter which path you choose github pages lets you treat your website's content with the same level of care as the source code and all of your projects because your website's files are part of a github repository you can maintain them using the same family of tools and workflows you already use on github you can use the github flow to manage changes to your website you can even write tests and have github report the status back to you before merging those changes in when you're ready to publish changes just merge them in github automatically builds and deploys your site for you this frees you up to focus on the content of your site instead of worrying about how you'll get it from your computer to everyone else's browser try out github pages with one of your projects today navigate to the Settings tab of your project and use the automatic page generator to create your first site get up will populate your page with some basic content that you can customize with markdown if your project already has a readme file you can import its content here too when you're finished editing choose one of the prebuilt beams and publish your site if you need to make changes to this page you can always rerun the automatic page generator or edit the files directly on github for now if you browse to your site's URL you can see it's up and running with a few clicks you can have something beautiful online but this is only a fraction of what you can do visit pages github.com to learn more about all the possibilities github is the place where you can build great things get up pages gives you a way to share those great things with everyone thank you get up it's a great video alright so that went through a lot and github pages can do a lot and its essence it's a simply a web server you know you have index dot HTML you have your CSS and JavaScript and it hosts it just like Apache or nginx would that's pretty cool stuff but it also has some integration with Jekyll as it showed and that allows you to do a whole lot more but there's though there's a first step in all that and that's the create a github account so bear MIT bear with me while we go through this and you can do you can join github I going to get hub comm /join alright and so for these examples it's a little hard to see I know but it says show me gh pages and that's username I chose for all these examples and I got the email address and another password and so we move on to step two which is to choose your plan let's go with unlimited public repositories for free should be open we should share our software and step three tailor your experience I just go ahead and skip this to get skip this step it's kind of like a social media thing what are you interested in it's also kind of a survey type of thing we move on and you're presented with this lovely screen and so you know you might be asking ok what now how do we get started with github pages alright the command line tutorial so the same place that had the video earlier there is a tutorial on pages github com and this is the command line version alright and so this is what the the page starts off with what it looks like it's very nice site and by the way the documentation for github pages and github documentation general is amazing that's my opinion but it's amazing just just take my word for it so the first step you know head over to github and create a new repository name username github Dino dot IO for our examples that's show me gh what was it pages dot github that I oh and you know so we're username put your username alright next step go to the folder where you want to store your project and clone the new repository so I just go ahead and hit get clone or type in git clone and then the address of your repository remember it ends with github io all right then go ahead and change directory to the user named I could have that io that should be the folder name after you clone it and then hit that run the echo program command and go ahead and send that into an index.html and so all that index.html will say is hello world and then we get at all get commit and then the the dash in for message initial commits and then get push and the dash do to indicate that you always want to upload to origin/master alright and then you're all done so you go to your file browser and go to your username github I oh and might you know in our case it's showing me github pages so you see at the top show me github pages github that I oh and there you go hello world and that is my presentation for today thank you thank you not really so if you're like this guy you know you might say what just happened and so you got get clone CD echo get add git commit git push so these you know there's a lot of Linux tool knowledge here and not everyone's up to speed on that so raise of hands like who has some experience with HTML CSS JavaScript almost everybody awesome who has experience with the Linux command line tools involved with that a lot of people you know those that don't don't worry because for the rest of this tutorial we are not going to focus on Linux tools and we're going to focus instead on going through you know going the the easy button route and adding files to the repository violet via github com the web interface which is pretty cool alright so to get to get started with that go ahead and click on new repository and then you're presented with oh okay yeah we have to verify the email address can never skip that so go ahead click verify email address and your pot back here go ahead and click on new repository again and then go ahead and plug in the same thing it did on the tutorial for you to type in in this case show me da gh pages github I owe and then we need to click initialize this repository with re me this is important because if you don't do this it won't give you some of the options going forward and so this kind of populates readme dot MD file that basically just says the name of the repository and that's it that helps us get on to the next steps so the next step so after you you know click great repository you're presented with this beautiful page and the button that we want to focus on right now and as I can see here laser points working so there's a readme and here it shows you the readme right here and that's all that's in our repository so we're going to create a new file so you click that create new file button and then that presents you with some options and so you got to name the file we're going to name it index.html kind of like in the example the command line and instead of just putting in hello world we're gonna you know put a little bit more boilerplate in here you know make Google happy a little bit and so we do the doctype HTML we do the HTML element the body element h1 and then hello world and then we have a paragraph that says I'm hosted with github pages alright and then we go to the bottom and you could see like if you don't type anything at all it's going to give you a message that you can use you know create index dot HTML is very reasonable so if you look at your get history 50 million or get you get ajust a bonus there and so go ahead and commit the new file I click on that green button at the bottom and then you're presented with hello world again but this time you did it without having to know any linux knowledge and for everyone in the room at this point I think you know you feel like fin over here and your mind is just blown you're like what can't I make right now what can I put on the internet right now you know and be responsible of course be responsible and so let's let's talk about some more practical examples so let's talk about Nyan Cat nyan nyan cat all right I had never pronounce it right all right and so we're gonna convert code pin it convert a code pin to github pages and so everyone on you know if you take go to free code camp you know some of the projects on there they have you use code Bend you know kind of demonstrate your work and cope in is an excellent tool and show you a little bit what it looks like I found this one nyan cat follow Mouse a code penned by Bruno Cunha and this is a pretty cool code pin and so your you know your you know I don't the bottom will just would normally show you you know the result of these you know of this code but I'm kind of hiding it no spoilers that sort of thing so we have the HTML the CSS and the JavaScript indicated by the three arrows and so what we're gonna basically do is copy this into github pages and so let's go through that so we're gonna create a new repository this time it's kind of called Nayan and then we also have to initialize a repository with readme that way we can add files right away and so the first files do mange is let's just go ahead and type that in the top copy and paste the JavaScript from the code pin next one is main dot CSS this is for the CSS now and we're just gonna go ahead and copy and paste that in alright this one's important we got to do the index.html so I did some more boilerplate here and so code pin is nice and it does a lot of this for you already you know when we switch it to github pages we're gonna have to take some steps to go ahead and make sure that it can find all the files and so very simply you know say the language is English Google was like okay you're English now then we have utf8 and utf16 and those are the files that we just created all right and the result is oh okay so we get a 41 for 404 file not found error and that means we have to do a little bit more setup so if you hit click over to settings and then you scroll down so sorry go back a little bit so this is the settings on the repository so you click on that settings and you go down to github pages and it says you know where's the source at by default it's none and so github pages is disabled by default on anything except for pages that start with you know basically your user name github not i/o so if it's anything else like in this case nayoung you go ahead and have to go through the settings and choose master branch all right and then after we save that one minute 37 seconds later we have a it shows after you refreshed hit f5 it'll show you the option where you know it you know your your site is published that's awesome so if we click on to that just to show you the URL there is my github username which is show me dot dash D H dot pages show me get out pages that github dot io and then when we click on that we have the nyan cat follows mouse that's a little bit of credit I put at the top of the HTML and but not a cat's not moving something's wrong here even Simon Cal here is just absolutely bored about this you know it wasn't exciting at all and so I think something thought something is amiss and we go back to the code pin we go to settings and there it is jQuery mange yes everything is jQuery yet so if we go and copy this will paste it up here in the address bar we get a you know a bunch of you know compile minified very hard to read javascript so we do a control a copy everything control C and then create a jQuery Minjae s file go and paste that in there it looks a little different because there's no word wrap and github pages alright so we go back and so you save this and then we need to go back and edit the index file so we go we go back we click on index.html and then right here we have a little pencil looking icon that you click on and that allow us to go back and edit so here we had the main jjs that we did before and we want to go ahead and put this at the top of that so this is jQuery Minjae s paste that in there a few moments later we have an adorable demonstration so let me click on this hopefully this will work and now an eye on cat follows the mouse just like planned and that is amazing simon cowell be very happy about that so let me hole I have to close out this really quick report consumes all my memory all right go back okay so I wanted to go over a react demonstration and so we got some happy Tomatoes up here I think if you're in the know you know this is going to be a Pomodoro timer example and so this demonstration is to show you you know you may be literally reacts and you want to get that react app on the web and you don't want to have to pay for that so this is kind of a demonstration on how to get that done I did not write this timer because you know I work and stuff I kid but uh someone put a lot of time into this this is forked from Alfonzo Paso fir I'm gonna guess that's how the name is pronounced and in his original repository is react Pomodoro and see if I can bump this up a little bit more alright so I fork that forking and github just basically means stealing someone else's code and it's allowed everyone loves it alright and so here we have the code here what you notice though is there's not an index.html anywhere so how is this even working how we're going to be able to display this and that's the it mentioned it in the video and that's the github ghpages github pages branch and so we can click on the branches here click here and we notice that there's a github pages click on that and that's very different this is the same repository different branch and it's a different world and so this has the index dot HTML you know it has all the CSS right here the images JavaScript even some music which is awesome and so this basically allows github pages to actually render the website for you and so if we go ahead and do the demonstration of it so to quickly talk about how that works so you're working on your react app on the command line this is the nerdy and earlier side of things and you know you serve it up you view it you love it so what you do in that repository is you go ahead and build it and you could build it anywhere but you might have to move the files but if you can choose a place to build a build it in the root directory of the repository and then you're going to have a bunch of files that will show up on get long or get get status so go ahead and create a new branch called github pages gh pages switch to that and then that you know that repository should be empty don't create it for a master just create a new branch and then go and add those files to the root directory of the repository commit those files push those files and hopefully write a script to do all that for you so only have to do it once and that's how you kind of create a github pages branch in one way one way to do it and so if we show you that so here is this is you know this is live from my github pages website here let me see it's hard to see but that says show show me github pages github that IO which is you know my username for this demonstration slash react Pomodoro and so this is cool if you don't know about Pomodoro it's a great way to stay concentrated throughout the workday and so you have 25 minute intervals once that runs out you go and take a break that's the social click that you have five minutes once that bet goes back to a Pomodoro you do that for time you get for pulling my doors under your bill I think it's four and then you go ahead and do a coffee break which is 15 you do that throughout the day and you have free time but you also have 25 minutes of concentration and you can click down here it's a link that they included and it goes to the Wikipedia or Wikimedia yeah Wikipedia article for Pomodoro Technique so great thing to check out I love Pomodoro retire timers because it's a great project to start off with and this one was done very well it also has if I go back see here it also has you know the option it's very where am I going Maduro so go back to the readme here and so you can also create an icon on your phone and that's the beauty of react and modern JavaScript frameworks once you start learning that it's good stuff and you know Pomodoro timer or any kind of timer like that is a great way to start and they also help you get organized all right oh no oh no there it is okay so we need to talk about Jekyll just a little bit Jekyll is a kind of out of the scope of introduction to get hubpages Jekyll is amazing and so if you go to you know Jekyll are be calm there's tons of documentation is great documentation it's a little technical it requires Ruby on your computer and so you just follow the install instructions for Jekyll and you can get up and running with that the and what Jekyll is is a static site generator and that allows you to do very complex things and compile it to three files you have your index.html you have your job your JavaScript file any of your CSS file and that allows you to do pretty amazing things and so you can create blogs with that you can create very very dynamic looking websites but essentially it's a static site and that has an advantage of being extremely fast and so as opposed to a serverside rendered page static sites will load up quickly no matter where it's hosted at it's very very cool stuff Jekyll is built into github I think the cofounder of github created Jekyll as well and so there's a little preference on that side there's other static site generators but I wanted to show you this page the second link down here is a really long link you know it's helped at github.com articles using Jekyll as the static site generator with github pages they could have made that a little shorter I think but if you click on that you get a github page with amazing documentation that goes over all of this and see you ain't bump this up again okay and yeah so here's the overview about github pages in Jekyll about Jekyll themes on github and so the themes are amazing I'm going to tell you so the relatively responsive and means you can use them on a mobile device and they're great for blogs they're great for sites they're great for demonstrating your code you know or your project you know or your garden if you're you know blogging about your garden anything like that yeah and so it goes over adding themes yeah customizing CSS and HTML and so setting up your github pages site locally with Jekyll it goes over all of it and it's all tuned for use with github pages so close out of that all right and so you can't talk about Jekyll without talking about so here's the Jekyll site by the way so it shows you simple static blog aware and it gives you a little command line example of how to get started with it it can be that easy if you're on a Mac you know or if you're on Ubuntu or another Linux distribution or you're really tech savvy in Windows I got Jekyll working on Windows and it seems to work fine I use Windows subsystem for Linux I haven't tried any other methods but Jekyll is great I've used it a lot and I use it almost primarily because github is just so well integrated with it so what that basically means is that you don't need to do anything on the command line you can use Jekyll without ever installing it if you know what to do it's kind of a catch22 so if you put the right files in the right places places on github then it will go ahead and compile the site for you using Jekyll and keep it uptodate it's an amazing system and so you can even have new blog articles I'd like to do maybe another end up talk just about that but it's very indepth but it's kind of difficult you kind of have to learn Jekyll before you can use it on github pages without having it even installed so that brings up Hugo so Hugo is my favorite static site generator this thing is fast I mean fast and so they give examples a lot of propaganda and we can call everything propaganda so it just describes on their side how you can have thousands of blog articles I barely I think I have one blog blog article I've ever written but I like the fact that if you have thousands of blog articles it can go ahead and compile that all to a HTML CSS and JavaScript within seconds usually less than a second and so this is written on go go the the go language go programming language and go is it's much like C and it is fast and so it's compiled as well and so go go and Hugo can be used almost on any platform and you really don't even have to go through a lot of the difficulty of and of going through some installation procedures with other things like Jekyll you just install it's just the exe on Windows or you know it's a binary in Linux in Omak and a lot of package managers already have Hugo ready to go and it's very similar to Jekyll has a lot of niceties you know they're very complementary to one another Hugo was inspired by Jekyll so Jekyll is the Original Gangster and it's you know arguably still the best in that regard but Hugo is has a lot of features that make it appealing and they even have a site so go Hugo dot IO right here is the as a site to go to to learn more about Hugo in general and then you have a link here go Hugo dot IO hosting and the deployment hosting on github so there's a site dedicated to just using go here to go with github pages and so that's really cool and that is also a use case and this is one of those cases where you might have you your your markdown files you know what you might call your source files in the repository and then you would compile it to the github pages branch just like I talked before about react that's one way to do it to keep the code clean that way when people look at your repository that are not just confused as far as what's going on all right and so here's the go Hugo website selfproclaimed the world's fastest framework for building websites and I'm not gonna argue that how we do it on time good so I wanted to push the limits of you know seeing what's you know github pages can do and so I found this it's playing Wolfenstein 3d in the browser to go a little do it a little story back in middle school is in a typing class I didn't want to be there I can type really fast now and that's thanks to getting done with the lessons I got a play Wolfenstein 3d and you know you gotta understand you know I was I was young you know probably thirteen if that maybe twelve and that's one heck of a reward you know get done with your typing lessons get more time on Wolfenstein 3d so we're playing these on old Mackintosh's you know color monitors were just a brand new thing and this this game was the game back in that day and so click on this and I do believe this is uh was originally created by either Bethesda or it for an anniversary for Wolfenstein 3d I don't know too much about it the the readme files a little cryptic I work this again and so this one this time is from Jacob site Alan and and so this code works and it's a lot to push through a web server well essentially your browser's doing all the work the web server just has to give you the files so it's not it's not that big a deal in that regard but it's pretty amazing what you can do in a browser and I really just wanted to see if it work so just go through see if this will work live oh my god it worked I was having issues in Firefox so Chrome is the way to go with Wolfenstein 3d in the browser sorry Firefox so you go new game I don't know how loud this is gonna be and we gotta go I'm death incarnate was good we're going to the max difficulty go level one just to show you works just fine oh there's baddies I gotta go I gotta go I'm a pacifist I just got to get to the secret spoiler there's a secret here oh that got me I'm pretty awful I don't want to spend too much playing time playing that all right so that's Wolfenstein 3d the browser you can see up here well maybe can't see but it's show me github pages github that I Oh slash wolf3d and and basically I just I forked that repository and it just worked and so this this is another page that uses github pages branch and I think just a little bit of cleanup is done I don't know if anything's changed actually yeah see it's so full 3d to index dot HTML that's about all the changes that were made and that's that and so I think that went a little bit under time we're still doing good on time it's anyone had any questions anybody oh we got a question here limitations so I think you maybe saw a little bit of it when I was doing the the nyan cat example where basically if you try to reach out to a CD in a content delivery network it won't want to pull those those in basically the web server only wants to link to websites within that repository or assets within that repository and so as you saw what I did I kind of pasted that into the browser copy and paste that into its and you own file the repository and that got it up working again you could put that in if you do if you're using node you can probably put that as a part of the build procedure to go and grab those get the freshest and latest if you want to do that and a part of you know you know NPM in general is that you know whenever you build it it's going to do that anyways I think I think you know you have to update but I think that's the biggest limitation I haven't seen any limitation as far as Java syrup goes I haven't dug deep into it I don't think because you know get up pages just giving you giving the user the files it's like here's a JavaScript file an index file in a CSS file and as long as those aren't referencing external sites you get that in and then JavaScript you just just run on the user's computer as is and so you know as far as grabbing assets through JavaScript I think that might be possible linking to another server that might be possible but if you're linking to another server you know why are using github pages in the first place or it could be an API so you get to do a Twitter API through JavaScript possibility possibly there's no way get help can prevent that in essence there are some limitations as far as Jekyll themes go basically what out like so if you wanted to go the route of using the web interface no command line at all and you wanted to do a Jekyll and a blog through github pages you basically be limited to a certain amount of themes I do believe there's ways to overwrite the themes make them better improve on them but if you just want to use it as is there are only a certain amount of themes that github themselves support and in addition to that if you were to do custom theme there's only certain amount of plugins that github will do automatically for you without you having to go to the command line to do it automatically and so I think that's done to protect themselves because that codes being run on their site and so that they're really kind of protective about what Jekyll is doing on their servers and so you have the the Jekyll official official plugins only and besides that I don't think there are any other limitations that I know of do you think of anything in specifically no can that answer your question any anything else you guys down here no yeah I don't know I don't think you can use PHP because B the question was can use PHP and I don't believe so the PHP would have to be run on github servers and I don't think github would like to take that liability because that phq just go do anything it wants in essence basically the Jekyll Ruby is kind of acting as the PHP but only when there's a change so only when you update your repository does the Jekyll kick in and and and start looking for those changes and adding files so no PHP yes yes yeah I got some nods from some JavaScript aficionados it's it'll be in the JavaScript code right guys so you can I there may be ways to salt that that's beyond knowing that we're getting nods now we're getting nods now yeah I think it's a very complicated subject I think I think tokens and keys are best left to the server side and at that point it might be worth looking into getting a virtual private server to host your stuff on which is a whole another whole nother talk so I'd say the quick answer with this based on like the how many these I got I would say no I would not put the tokens in the JavaScript you could wouldn't wouldn't want to do it though oh I didn't know that okay yeah so just repeat that a gig is kind of the limit to the repository so I was thinking about hosting all my roms on there I'm not gonna do that now not gonna do it and what you say the bandwidth limit was one 100 gigs a month that's a lot that's a lot and so if you keep your site simple if you're even video I think you'd be fine unless you just blow up and you're you know you know news channel 9 links to your your your github pages I think you'll be fine but in general if you're especially if you're just doing a blog images and texts are pretty cheap all right did that satiate all your your early yearnings about github pages I think so I think so all right we're good we're offline