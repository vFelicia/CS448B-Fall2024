foreign well hey everybody uh glad to be back today um hope everybody has had a good uh week off hope hope everybody had a chance to go back and relook at some stuff and uh well i'm glad you guys see me um but yeah i was able to get a lot done uh sorry for uh uh being gone um super excited to get back to it so all right today we are mainly going to be looking at recursion going to be really understanding how to interact with the command line you also may know it as the dos prompt which is basically what i grew up calling it the command line i remember the first time i heard that i was like what is the command line uh and then actually somebody on twitter hit me up uh for dictionaries and i was like absolutely we could do dictionaries because i was uh kind of wondering if those two were going to round out our time but if you're new here thanks for joining us i'm sam uh from python basics and um i am partnering with free code camp and doing an entire series on uh the building blocks of python so all right let's just go ahead and get into it so glad everybody's here there are four four previous videos um and i believe beau has made a playlist so after we get down here don't don't go and jump over there but after we get done here you can go and check those out and then also there's a link to my channel and every single topic that we have done here there has been a micro video on that so that is that is our intro so all right recursion what that is is basically it is when a program or a function calls itself until completion and a perfect a perfect example of a recursive function is uh some sort of countdown or in math factorial so let's just go ahead and get into it as everybody know uh what factorial is has anybody ever seen that so factorial so we're gonna just go through everything so basically the math of factorial is if we were gonna do three factorial in math it would be three times two times one so three factorial is six and as you could only imagine how quickly this goes up so if we were to do six factorial well i appreciate that uh six factorial so six times five times four times three times two times one you could leave off the one now there's also one important thing about factorial it took me a while to really kind of wrap my head around this and understand what what why and how so one factorial is is one zero factorial is also one because you still have one set that's basically when i had somebody explain it and then i think i read the same thing a couple times so even zero factorial was one so that is important when we're going to be starting to build our uh function out so let's go ahead and get to it so before we get to our recursive function i will actually want us to build a factorial function so let's let's just do this all right and that went the wrong way but i hope everybody has had a good week i see we have uh some of our mainstays back in chat so that is awesome glad to have you guys here i do not have a video um on factorial i didn't want to get too much into that math but i'm sure you could go and search um what is it math oh oh i'm trying to think matt mathfax.org i i think is one of those things one of the places oh you can't post links okay yes the uh bo is out he's usually at master control uh watching this so he is on vacation so i am i am in complete autopilot here so when i hit the stream button it came up and then so we're gonna be up until i hit uh in the stream so uh hope all goes well hope uh my internet hangs in there it's some bad wet bad weather around here but all right um yes oh yeah actually i saw the other day that uh bo and then put up a nine al nine hour algebra uh video that is crazy there's i these two hour live streams uh take it out of me so um and just fyi i'm not feeling that hot this morning so uh i think i can make it all two hours but just if we cut it a little short i want you guys to know so all right our factorial and so we need to figure out a way to count down track and go forward and then i want to show you guys this then we need to plan for if it's negative so all right we're going to have our total we've got to have some sort of count now when we're using multiplication what happens so we need to plan for this so if we multiply something so we're not counting at zero where our total needs to start at one so when we multiply anything by one we get that that we get that uh product almost said sum almost broke broke the biggest okay so somebody does have yes so good um i'm pretty good at math not super super awesome no i i only what you'll begin to notice is it i will only speak to uh what i feel extremely confident and that's why and i've done these basic uh tutorials for now coming up on five years so but again when i that's why my channel only only focuses on uh python we've touched on some outskirts of stuff but that i i try to stay in my lane as much as possible to uh keep my keep me out of trouble all right so we're going to be doing something over and over and over and over again until a certain condition is met not a certain number of times yes certain number of times but that that amount will change every time so i could go and have it loop through take the len but do a range function on lin that gets a little dicey when we have this awesome tool while so while while x is greater than 0 then we're going to increment up right and then also we're going to touch on uh we're going to actually build this into um how to find the odds of a powerball and a little bit with comma placement and a little bit of f string and uh i like this lesson because it has a lot of stuff in it so all right um i will try to stay on task so now we're going to learn how that we can increment up by multiplication so then we're going to go up and then we need to we're going to multiply up multiplication increment and then we're also then going to then decrement so check this out because as we go we're crossing each other so if x was 5 then we want to multiply we take our total so then we start there our total is one oops total equals one then i'm gonna multiply increment that up by five right so then my total is five let me make sure we don't have any good questions okay all right so now then then x was five so then i need a way to then track this so i'm going to decrement x by one so then x is four then i'm gonna go in increment up multiplication by x so now tote is 20 but then i need to come down one more here so does this make sense so as we're going through now this is a little bit more labored but i want you to wrap your head around what is going on because recursion can get a little bit more dicey and i really want you guys to see and understand this because as this goes through it it can be very overwhelming has everybody even heard of recursion i just uh jan you're always awesome and very interactive have you heard of recursion still trying to figure out how long the delay is in chat i know okay cool all right so awesome uh this isn't this isn't too foreign but factorial is an awesome way for recursion all right so now also there is one big distinction that we need to also make sure we understand because right now if i were to print oops then when i get done i print total or tote and call what was i doing so then i have a list let's get rid of these we'll test those in a minute for test and tests wow print fact don't know why i've got text on my mind today so all right all right so now i have a little bit of a problem and i did this wrapping this around to show you something because with recursion i can't use print i'm going to need to use return sometimes the this can be okay so and and that's absolutely fine i remember the first time i ran across it i think i was i was in high school doing uh algebra maybe and i heard about it but all right so this is an example of returning none and when you use recursion it you cannot use print because you're going to be creating something and then using it again so let's get that part down now also this isn't very perfect because and i just wanted to show you this and also check out what that's 8 12 18 and then 100. so that is how big 100 factorial is and how quickly python is able to to do it i remember one of the first things uh well not the first thing but i think java begins to have a problem after uh 13 factorial if i if i recall just the way that its building blocks are so just one of those things how uh python stands out all right so that is a very makeshift very bare bones beginner um beginner how to do factorial so now we're going to now we're going to clean this up quite a bit let's do this comment that out any questions of how factorial works at all so all right now we are going to build our factorial recursively with recursion and i remember because i think i did a function and i was uh had a run time error and i inadvertently was calling it on itself and i think it was a hello function when i was first starting so i accidentally uh did it or did a uh recursion and it just hung up hung up hung up hung up hung up and then in this instance you will literally be putting the function inside the function so let's just go ahead and let's move this down so now we're just going to keep this clean and we're going to use our same wow fact x i think in this one i use m so all right so now we need to handle we're going to be really really accurate here so when i said factorial 0 is 1 we need to handle this so if in less than negative one oops i'm sorry greater greater than negative 1 then we're going to do our two conditions of if it's 0 or if it's greater than 0 there but we're gonna handle this first negative all right so now we have a nested condition so this is how i want you to think about it think about your number line so it can handle a factorial can be zero through positive cannot be uh oops yes greater than negative one then we're gonna do then we're gonna check if it's zero return one then everything else follow through sorry like i said a little out of it not feeling that great today so now let's handle if n equals zero then we're going to return one and just to remind you in python whenever the return is hit it comes completely out just jumps ends ends everything it becomes dead code after return that was uh one of the little nittygritty things that i finally ran into so everything dead you don't ever need a break whenever you hit return maybe you can just throw in a return if you want to and it just kills everything and everything after the return is called dead code all right i don't know why i have this pin here okay so now let's get into it and i'm going to lay this out so else return and i knew i spelled it wrong because it didn't go orange or yellow i call that orange all right so n times and it's literally this simple but we're going to talk about it n minus 1 going forward so all right here we go let's get over here let's make sure i have this sized right okay good let's get here to make sure anybody got any questions so far that's a good way to say it so all right so if you want output print prints things to the screen but it returns none it does not create anything so most of the time you're going to be creating a variable and wanting to use it later so you can literally take a function pass an information assign that to a variable and you have created you've created that information print just puts it out to the screen print prints out anything you want it to print so when i go when i'm gonna go and run this like when i was up here and i wrapped i did this to kind of foreshadow i wrapped um where was it i wrapped my right here i wrapped that with print and that's when it returned none okay so now i'm gonna leave this here and nothing's going to happen it's returning and creating actually i may show you well i don't want to get too far into the woods off this um maybe next week we can just do things on print and return for a good good solid section but yes this is what the takeaway here is return creates something and then you can take that and assign it to whatever you want if you just wanted to print it out to the screen great but if more than likely you want to then link those things together and you could take a function yep that's exactly it because it returned it it returned something so you needed to go and link that information and assign it to a variable and then there's going to be times where it's going to say in place return none you cannot assign that to a new variable there's documentation on uh is it sort believe it's i think i believe it's a list sort yes you'd need to make a cop that's why you sorted go back and look at the documentation on that that's why it says return none in place you cannot assign a new variable so that's why these distinctions are very very very important at the beginning of your python journey is to understand the difference because you will get hung up on things so all right yep that is exactly it and that's why i love this so much so all right so basically this is what i want you to think about so it's going to be going in or five five times then this is how this is so then it's gonna go parentheses then 5 minus 1 then it's going to go again then times five minus two and as this goes through it's going to be and then there then it will wrap again then it wraps these two there we go then five minus three then it wraps those around so it goes down and down and down i think this goes right there there but you're starting to get the idea so this nests and nests and nests until it gets down to so then that is another factorial inside of that then it's a factorial inside of that then a factorial inside of that then a factorial inside of that until it exterminates down to there so let's get rid of this so now now let's run this all right we have our tests right here right and then let's do zero and negative two let's add those back now why is this going to fail i gave a hint why does this fail okay that's not too big of a delay all right i made a passing comment anybody remember because it returns does not i did not have a print so now this is also why recursion a recursive function needs to be returning needs to be creating because then this this will not work or you have to get extremely over complicated but we're making our progress here so then i have my negative i have my uh 1 of course equals 1 then my 0 equals one because it is still a set of zero so it is one set equaling one and then i have my uh my catch right here else return negative all right so now now let's jump into something that i do like the math on and it shows so i know you there are a lot a lot of us a lot of individuals on today that are outside of the country outside of the united states does anybody know uh how the united states does our lottery um with the little with the little bouncy balls and they go in and then they pick pick a pick a bouncy ball and how the odds work on that has has anybody seen that because i don't know how much to go into it because now now we're going to spin off and we're going to use a factorial to then figure out the odds of winning a combination of numbers anybody anybody ever heard of heard of uh heard of that all right the stream looks good alright well cool well we will we will get into it so all right let's see we don't need these anymore so the way that the odds the way that the odds work for this uh lottery powerball and here's what was genius about the lottery officials of what they did so when i was growing up there were have no idea okay so basically it's a big tub and 50something balls go go into this and they each have a number on it and they bounce around and people buy tickets and they wager each ticket is worth i think two dollars now and they can either let the computer pick six random numbers or you can go in and pick six random numbers and people tend to have a methodology they wage they they pick the same numbers it's birthdays it's street names but when you have 50 balls bouncing around and you have to pick them now you do not have to pick them in order just anything because then if you had to pick them in order i actually don't i think i saw the math on that but all right to give you an idea of how the math on this works is if you have 50 50 balls to pick from then then you have and you pick six of them so here's the math on this it's 50 factorial let's let me make sure i have this right then it's 50 factorial times oh shoot i have it here but it's uh 50 factorial 49 factorial 48 factorial 47 factorial 46 45 yes so that is the how exponential this is and you go through oh cool uh free code camp has a new supporter that's awesome well thank you very much so now we're going to take this new tool that we have and we're going to yes yes it is absolutely now it's not as complicated as having to have it in order which i don't uh like i said math we can tiptoe out of math pretty quickly i'm i'm good right up until the beginnings of calculus but i digress here now here was the genius part of what lottery officials did they added a powerball a whole whole only section and what they did is they removed a number you only had to pick five numbers then a powerball and everybody actually thinks that that is easier and it's actually harder so it was 50 factorial 49 factorial 48 that's 47. now here's where it gets weird so 47 that's 46 45. so that was the old way one two three four five six so see how that number's smaller so when they removed this and then they gave a whole other bin of 50 more numbers so it actually goes back to 50 factorial i think what it is so they actually made the odds more challenging but everybody who is gambling and buying these lottery tickets they think they only have to pick five numbers and this other one is easier it was genius when i first had a math teacher assign it to me so now we're going to use our python knowledge to actually calculate and build a function of how in the world to calculate the powerball odds and it's actually quite interesting so let me get the right one oh and we got and if i can hang in there we got some very cool stuff with the oh where did it go i thought i had it right here sorry guys all right let's bring this over here all right did i really not save it all right well here's here's the math that i pulled out so this is this is what the math is because then you pick one and you go forward and the this is this is it right here and we're going to be putting this into a function and then we're going to learn some other cool stuff that i don't think we have gone over yet okay i did have it i had it on another screen i should have put this all in one place all right so now what we're going to do is we're going to build a function and we're actually going to use uh some i think somebody's got a couple comments all right observe so we're gonna use a default argument we're going to do a we need to have a loop a while loop so let's get in here def odds almost pick and power so if if it's going to have power or not all right has anybody ever seen this before what i'm doing right here everybody understand this anybody because it this is super important and we're just going to go over it because if one of you if you have not seen my video from yesterday on my channel if you have the question somebody else has the question so i i'm usually pretty thorough uh yeah d uh it's a default argument so optional argument default argument so it is you have to pass these two you do not have to pass in power it is already set for you on false all right so the way we're doing this is and we're going to use a inter number of regular balls number of balls picked yep and if if they are using a powerball so basically you will be asked for the number of powerballs so basically this function is for anybody who could because there are different lotteries in each state then there are some that have states that share so you could take this function and apply this to any lottery and then you could understand the odds that you're dealing with and you could figure out if you're into gambling you can figure out which ones have the better odds so all right now i'm going to show you something uh who remembers us looking at the math module anybody remember us looking at the math module because i like um i had a couple of tv teachers and they explained it look i will show you how to use the shortcut way but i need you to prove that you can understand where it's coming from so the math module actually has a factorial built in for us so i also wanted to show you recursion but there's a tool already out there most everything that i'm showing you there's always a tool out there but if you start using something you don't understand how it works especially under the hood of all kinds of things you can get into trouble uh with you might be like somebody was just getting something to return or they thought they were getting something to return and they weren't it was only printing out to the screen so if you don't understand under the hood and how it works you can you can get into a little bit of dusty things so all right let's peek inside our math our math uh module so der on math helps if i close this out all right and it's factorial they're right there so we're going to do a shortcut from math import factor fact all right does everybody understand this alias and this import line right here so this is a shortcut because right now this is my main level math and if i wanted to get to factorial i would need to use math dot factorial then pass in 3 and i get 6 to come out but now if i were to if i were to do this from math import factorial then i only have to type in fact oriole 3 but then if i alias this now all i have to do is type in three and i get it so that is that so if you are lazy and don't like to type a lot and you will come up with a fast way to do it you and i can be friends okay so here we are okay now there's a couple more things that i need to show you which are very very good so our result is going to be like i said we're just going to do this return and here's our math so it's balls uh two two parentheses then division and you wanna get all these parentheses so you can make sure you have order of operation order of operation pemdas i remember i don't think i actually committed pemdas to memory until i started teaching python and i was volunteering at my kids schools because they uh one of my kids very nice math teachers asked for some help and i actually got a python lesson out of it so that's kind of an example so all right pemdas parentheses exponent multiplication division adding and subtracting so those are the order of operations that's the rank that the rank and importance and the order you need to do first parentheses trump exponents exponents trump uh multiplication and division and then then you do adding and subtracting but you do parentheses that is what you do first then you do those other variations they go in order and uh order of importance and uh set set rules and python oops sorry guys that was probably really loud those are the rules and python is built upon those rules so very important that we know them now now we need to handle so that's our output but we need to handle a couple things here so this right here so no matter what we're either going to be multiplying this by one i'm sorry to hear that jan is anybody else having any any other buffering issues uh or is that um because i it looks like the stream is good on my part uh is anybody else having any issues okay good because like i said i had to reboot my my router before i got started today because my upload was atrocious so i'm trying to make sure you guys don't have any issues okay so now we need to handle some things and one of the first things we need to handle has is this has anybody ever seen uh the the value for bullion so that's what it is but has anybody ever seen a value anybody ever seen this anybody ever seen that where true act true and false actually have a value to them so i remember when i saw that and i thought that was the coolest thing so we're actually going to take this technique and we're going to utilize it right here so this i remember when i saw this and was going through it and somebody did an example and i was like i know how i can do this and it's going to be so cool so all right first if if the power is if there is no powerball we're just gonna multiply this by one and go on about our day so there is no powerball so so here's here's the balls did i close this out let's see got one something about that didn't feel like it got the right number one one two one two one one two okay there we go okay then so now we need to set this p underscore ball to 1. so that was that was the way that i do this so we can have this just on one nice little condition so if this is false this is just set to one going about your day so now watch this then if power if power then take input powerball equals int input enter number of power balls close this one close that out close that out so what i'm doing let's see so what i'm doing here you could say does power equal true but i don't need to be that this is very passive so if i turn this true this is true and then it moves on so right now it's false so when you have this you could literally have this go through and make this i could i could make this a p ball right so it's already going through and set this so i wanted to get your guys's mind to wrap around this so if power so i could i could play i could play into this where power could go back and forth and then if we go on so i just wanted to show you that because i remember the first time i saw this so if this is false i don't have to say if if power is true do this i literally just come here and go this is false just come down here and multiply that and i have this just b1 and move on about our day so now this returns so i need to do print odds and i'm going to pass okay good you can't see that alert um i'm going to pass in would i say 50 which would say what example do i use oh and then we need to do our formatting because where our eyes are used to seeing parentheses i'm sorry commas so 69 balls six and let's just close that out right now so let's run this spelling is a problem so let's see so 719 million 264 832 to 1 are the odds of winning the lottery with 69 balls and six choices so now now let's change this up and go true so now enter number of powerballs 26. so now it has gone it is even worse so now we need to all right i clicked off so now we need to oh very cool we got an uh we have another uh supporter so that's very awesome well thank you guys all right so now i want to show you how to add a comma into python's output oh that's supposed to be six not that there we go because now it goes see now it's a billion see how that one little tweak of adding a fresh batch of batch of numbers goes in so now it's over a billion to one all right but i have to go through and highlight or i do you may not have to you may be able to see that so first i'm going to show you how to do this with old string format and then we'll jump into wow f string all right so now uh so boom it can be i was showing that you could go and make and assign oh okay the powerballs are are their own little set of numbers and it was to kind of trick people into realizing that they had a brand new set of numbers to go in so it was you have this one container where five balls are picked out of then you had this auxiliary container and you had an additional brand new batch of numbers to pick from that started back over and it actually increased the probability because they are more there's there's more numbers everybody thinks that it was going to be easier because it was a its own small container but it was actually just adding another set of numbers to have a larger factorial problem to it so that's why this little this little trick that they did made it worse but somebody who's not as in depth and again we're heading we're probability and statistics we're heading quickly out of my element but i i was able to really wrap my head around this this math problem and it was one of the basic ones that i really got a lot out of with uh probability uh the last number needed to win a lottery must be the last number chosen by the player i don't know exactly if i understand that but um no it the the powerball idea was to add uh add a larger probability to it but it actually people thought it was easier to pick because then they only had to pick five numbers out of the main container which with another one so all right let's let's learn how to use a let's see yeah dot format let's bring this in and there we go sorry i'm going to show you this the format way and then i'm going to show you actually let's get rid of this so we don't there so the way that python has this let's see where to go it's literally this simple all right so python understands that this i'm wanting to place a comma in our standard grouping of numbers all right oh yes yes yeah okay yes i that then that will be yes the pow the powerball is chosen last and it's kind of for a more exhilarating choice yes the power the powerball is chosen last and it's you usually a red a a red number but again i don't i don't play the lottery there are people who could there's all over here in the states there are uh we like to gamble a lot we i i don't partake in it i don't judge anybody who does but there are all kinds of uh gambling and lottery and things like that but all right this right here will print everything into a nice comma setup so now i didn't have to go through and do this now this is how the f string works and i like to show you actually we'll leave this here we'll copy it that's what we'll do and yes i don't like copying and it's literally just like this oops and we place this just in front of it and then get rid of everything else so let's go over all right so now with f string it is still this setup and you just that's the what you want to have happen to this output so there we go so that is an f string format for adding a comma to numbers and this is a string format layout so there we go i don't know i thought this was absurdly cool of how simple and clean and clear in python it is to just add commas to uh numbers with placement so all right any questions about that before we move into the command line who knows what command line is or dos prompt or terminal i think in apple uh terminal so i'm going to show you two ways to get to it the easy way the same way or the more challenging way so uh python just understands this that this is uh inside this inside the formatting rules it understand well that is you would have to do that manually so with in in uh i can't remember if i've done that so what we do oh i do actually have a video and i need to find it somewhere uh how to format um a telephone number so that has three three and four i'll have to find that but that's a hyphen but python understands because it's consistent with numbers that you're going to have and it understands exactly what this means it's a it's a basically it's a setting so um we we would have to use that i can't remember we're using regular expression but you know what this is why i love this interactive you guys are so smart let me make let me make some notes for next week so we're gonna do telephone and i think i have one for social security numbers too i think so telephone and social security number social security number all right uh and actually somebody told me asked me a question about our social security numbers because i think they were from new zealand and their numbers are actually in batches and uh to know when you were born here in the united states our social security number is built on geography so the first ones are uh what state you are in and then and then then the group and then it recycles so we have uh and then just like our area code we have three digits for the area code the exchange and then four numbers so you can get the idea of how big and complicated how big and complicated these numbers can get over and over and over again so each each area code can have a certain number of prefixes and then every prefix can have ten thousand combinations because they're uh numbers of four so ten times ten times ten times ten ten thousand that's what is so cool because like i remember that i got really easy so when you have a three digit number number of choices times number of choices times number of choices one thousand or just when you do that because you have zero zero zero and nine nine nine okay all right so command line uh go down to your search bar type in cmd and you get your command prompt you can't see that sorry i got this sized up just like this and you type in cmd and you get your command prompt or for our example or what we're going to be doing is pull up your python file your folder where you have all of your python and typically it's going to be in your app uh app data local programs python then whichever variation of python you have let's get out of that so right now all of this is in my python3832 and then literally you just go to the search bar type in command line i remember the first time i saw this i thought it was so awesome you literally go to the directory that you're in and that's vital to what we're about to start doing so we need to do a couple of things we need to understand how python interacts with the command line before we can really do anything all right cool i'm hanging in there we got an hour in i think we're doing pretty good are you guys you guys hanging in there you guys are doing pretty good so if you're new here it's top of the hour so if you're getting getting all set up i'm sam uh with python basics and i live stream on free code camp on tuesdays uh for two hours and we go through uh it's a very large very vast very try to be as indepth as possible about the basics of python programming and down in the description below is a link to my channel which has every single thing that we cover on here i'm literally just regoing through all the videos i've done before i started a live stream on my channel to have a longer format and then free code can't reached out to me and i thought it was an awesome idea to just help more people i love python i've been studying it for a while now and i've been teaching it for about five years and i just think it's phenomenal so all right right now we are on we are in the command prompt and i have so when you type in python now because i'm in that folder i get it now i also have my path set up and if you're not sure how to do that i guess what i have a video for that on my channel uh we can maybe look into it if you have a great deal of problems but literally now i am running i am in python just just like this oops didn't need to do that so let's come up let's come up here and i want to show you okay i promise i will stop doing that at some point but literally 8.1 this is the exact version this is the shell that i'm running right here all right so we need to learn how python and your computer are going to interact so we're going to learn about the cis module now i'm going to show you this this is the only module you can't touch python says no we're not going to let you get to cis and but the os brings in cis and this is as close as you can get but you can also bring in sis all right so bleh so the way that we interact with the command line let me go through i think i got some pretty cool notes and i want to make sure i go through this so the way that this is is i'm going to look at help on sis.org v if no argument is given built mutable sequence a list built in a list so now let's i forget how many times i got to go through this all right so then i'm going to back out of here i forget that okay uh quit cls all right if i lost anybody yet is everybody good still so now what i'm going to do is copying close this out so here's my here's my file so import sys print sys dot arg v does anybody recognize arg v args arguments and then argv variables so now if i run this i want to show you what comes what comes out so now i could do i need to save this and i knew i didn't save it if i shown everybody this let me let me do this my asterisk right up here i know this isn't saved because i have an asterisk i love working with young people and i ask them if they press f5 and they say yes and they say it's not working and i can walk up see here's here's the trick this is why you're so lucky to have me i have screwed up every single way possible so i know where all the pitfalls are that's my that's what my superpower is uh i'm not that smart i'm slow but my superpower is i can mess something up and then i learn from it so all right i did not save that so what i'm doing right here is now i gotta go free code camp so i'm calling the file free codecamp.py how are you uh oh i completely forgot that all right doesn't like the spaces so we're gonna use our temp we're gonna steal import system want to get into that print i was using my temp file today so print arg arg v and then control sleep error transition and then we're going to go temp underscore one all right so python temp underscore one dot py how are u so what this does is it returns it returns a list right here so sys.org v takes in everything splits it but completely ignores python so i also i love this example because since we're already here in the interpreter or we're in the file and python understands that this is a our computer understands that this is a dot py file so i can just run this and this prints out i want to draw your attention to this this is a list but this is the absolute path i think we've talked about absolute and relative this is relative because i'm in right here so i want to show you right i'm sitting right there and then i'm relative to this path directory subdirectory path directory subdirectory all all the same so this is going to spit out all of the arguments excluding this because this understands this is the program we're going to use so this is a list this is important to what we're about to do so we're going to take a condition and understand what we have and then move forward so what we're going to do we don't need this anymore so i'm going to comment that out because we know not to delete anything so it's a list so if lynn of sys.org v greater than one print uh hello sis dot our v one else print a standard awesome hello world bam all right so let's go through didn't mean to do that see how many times i hit f um so temp py all right so let's go through this so on this input python takes it takes all of it right excluding if we pass in python it knows it goes hey you want that you want that program go on from there all right and then everything thereafter put this in a list just set it off the side put it into a list if you want to deal deal with it great if you don't i still have it so what i'm saying is i'm telling python hey if this list is greater than one i want you to then do this and we're going to print out hello and index the list at index 1 place that here and hello so now if i were to do this i get hello sam so if it's greater than 1 come to the list index 1 so then also print just so we can see uh print actually we just want to do sys.rt save so just so you can start to wrap your head around this i'd we can look at that i know there's i know it's in here i know i've had it with numpy i don't know with math i don't know if the math module i don't know if you guys see in chat uh if it's looking for trigonometry i can't remember if math has it but i know numpy has it all right so i just wanted to do this and print this out okay it is because i know oh okay don't know numpy numpy is one of the really big building blocks of it was the beginnings of it then people came along and added to that so all right let's get through this and then we'll chat and actually we may be wrapping this up i'm really not feeling that great so all right let's uh let's at least finish this out and we'll see if it passes or not okay so we had our standard um where we took in our our list our arguments from the command line our sys.org v right our list right up here anything typed on the prompt excluding our program to run so it takes that turns us into the absolute path then any other things split on the white spaces all right so i took i gave it the file and i gave it another bit of information and argument if it was longer than one so this has len of two this is index zero this is index one so i've had this print out so now now let's do this with more than one and then maybe we'll talk about numpy in a few minutes i'm going to try to make it to 10 30 and then if this passes we'll we'll move on all right so there we go all right so now i want to take in two let's see if of if when cis.org v equals two print so we'll do this in a minute we'll go over this real slow print f hello sis.org argv then our slice close that out then lf blend.sys v equals three print hello did i close this out nope v then one close close i hear you are close close close close else print hello world all right save so here we go this hello world sam and then 43. so let's go let's go through this oops i'm so out of it today i'm sorry guys not gonna be allowed back all right so let's go through this really really slow so there's my there's my list of one two three one two three then one two one so because i passed in just one argument this scenario i just get hello world just pass in the file name then i pass in my file name and my name equals two do this file name name age three arguments do this indexing with name and then age all right uh well okay this is very fluid and you guys are here to to learn python so let's take a minute and just peek at math jan did you say that uh uh it does have some i guess i can't remember yeah okay um because the question now are you referring so yeah it has uh sine cosine tangent are those are they and then even degrees do you see that have you run have you run dur on math and then you run help on math dot cosine and return the cosine and it's measured in radians okay okay i thought i can get away with using yeah oh a note numbai is actually more for matrices and things like that really highend math uh but i knew i knew it had some and uh law uh yeah you should be able to and i mean it's got uh i knew it had pie and power so here we need to while we're tiptoeing around this i want to show you this so we got help let's do help on math 301 lines so the only problem with a couple of these i do not like and i don't complain about document kit documentation very much but there are some times where all right so we need we need to talk about this and this is a better one so you see these right here and you think all of these are all of these are methods summer attributes okay so method you have to call with the parentheses i can't even tell if i'm in focus okay you need to call with the parentheses and call them now these right down here are attributes so you do not you just call them okay all right these have value all right so you do not need to have and you typically have them when they're down here in the data so these these how you did these are how you differentiate attributes and methods i don't know if i've actually explicitly said that it took me forever to realize that i was like why why when why how do you know to not use the dot or the or not to use the parentheses and when to use the parentheses they are typically right down here so all right let's see where i am with notes to get us this close to uh 12 does did does uh the command uh to the sysdark v does all this make sense before we move on all right well very cool all right let's just go ahead and get into it so actually we had a somebody on twitter reached out to me last night i was putting out there that was going to be back today and got quite a few response likes and retweets and thought it was very cool i think beau even uh retweeted and liked um uh the tweet so i thought that was very cool and uh also for those of you who are here and have gone over to my channel i just want to tell you guys thank you very much because uh i've passed 3500 subscribers and that is very humbling for me so all right i just want to tell you guys thank you i love this love doing it so much and um just for you guys to hang out with me and choose to spend your time learning from me is extremely humbling so all right dictionaries they are absolutely awesome jan you are very welcome i appreciate all the time and support uh you're always here you're very very vocal and i really appreciate that because that keeps me on task and knowing that i'm going in the right direction so all right what is a dictionary do you guys uh just give me a feeler uh it's a it's another type of container with python and so variables are variables um and where where things become powerful is the type of container with which they stay are contained in and in a dictionary are the curly brackets square brackets are lists curly brackets are dictionaries so type d dictionary and then we run uh help on dictionary 121 lines you're good all right aha you can iterate through it and this is where it becomes very very powerful key value so now and there's also one thing that is very awesome about uh dictionaries you can have so one one of the three rules in python is a variable cannot be a number excuse me can't start with a number so it can't just be a soul number it can it can end with a number it can't contain a number but it can't just be a number or start with a number so but a key can and the way that you these are associated is so if i were to uh d equals 1 sam so now d the key 1 is associated with sam so this is a perfect example of let's say you have a situation and you're going to be counting things and you have no idea none whatsoever how many of whatever you're counting people like you you're you you're gonna have people come coming to a game you have no idea how many people are gonna show up a dictionary is one of those tools that you have this container and you just go through and you increment and count and go up from there and then have any information associated with it so before we get too far into it let's just do some simple things and then we will there we go all right all right dictionaries all right so i want to look at this and then the other so i showed you this okay that's one way d then t t so type d is a dictionary type t it's also a dictionary so you have two you have two ways and we're gonna there's a little bit of foreshadowing of how we can get through to this so all right i already showed you this so one and then now also i want to show you another way so d now this that can i bet actually i know exactly where you were coming from this is where it gets a little odd is that the key is wrapped in a bracket so i bet that's where you got that from and that is a little confusing so the main list excuse me the main dictionary is wrapped in curly brackets but to get to a key to get out the value you do need to use brackets so i bet that's exactly what you were doing sorry uh what was my main example that i don't want that anymore we're done with that so we have sam oh my goodness i'm just going through these notes oops there we go so i just saw that the last time or the original lesson on this was two years ago because i was 41 when i did this because that's what my age was then so all right so here's my key now i want to show you this so then you call this like this close this out so my key i'm passing in this key to this dictionary and get this value all right now let me show you this so this is a way you kind of add one and then here's just creating fruit equals bracket banana close that out so you get your colon then i have three of these comma apples i have one of these and grapes close that out i got two grapes all right so then i call fruit so then i get my key a value and the whole dictionary just like that now i want to show you this for i in fruit print i you only get out the key all right when you're looking at it so lynn of fruit how many keys are there okay now you can literally because if you've messed around with json at all so that's just pulling information out uh off web uh web pages you're doing inquiry so to understand how a dictionary works you need to understand and the example we're about to do is putting a dictionary inside a dictionary i believe and i want to show you this so but i also want to show you how to pull everything out so we're going to run dir not fur dir i should not have got out of bed today sorry everybody uh dur on fruit let's see i got keys i got i got items i got values okay so all right let's let's see let's see what keys does so we got fruit dot keys all right so i got banana apples grapes okay fruit fruit dot values let's see what these are aha so three one two all right what does items do food dot items oh wait a second all right so this is this is kind of cool this is kind of cool so now okay okay okay i got four for i in ryan fruit i got i just got the keys but if i do help okay okay okay so i'm going to get this help on items let's add a fruit items all right i get items uh what do i want to show you i'm going to show you this is what i want to show you right here so it's actually in the documentation just like this so now when you get items here so our items comes out how did items come out huh so i get a tuple so this is kind of like unpacking so now i need to unpack this so key value and dot items sorry i thought somebody was here so i unpacked this so key value so now when i run this all right i can tweak this a little bit more uh i have v three so what am i doing okay so you can swap these around so i know in my key value pair i'm going to get the key first then the value key first then the value i have to unpack that and assign it so if you're anything like me i got it i got to unpack it put it the way that i'm going to see it and then i literally then can just come through here and place it wherever i want to all right let's see so all right guys like i was saying i think we can pick up here i i'm not feeling that hot we got 90 minutes in so um i think that is a great stopping point uh sorry everybody for cutting this short and i'll extend my my apologies to to bow in them but so super glad to be back please i love all the feedback i think we got so we're gonna do more with uh yes absolutely um so glad to have so many people here um well i i appreciate that i i thought i would get going and get okay but um just um nope but we'll be back next week uh absolutely love the um hit me up on twitter or uh with ideas because or go to my my channel um and see the things that we did you can go to the playlist of the first 100 or 200 because we have not even made it out of the first 100 videos from my channel so the idea of these live streams is going back over those so then you're able to go back and search for micro videos on all of these topics now there is some things in here that we have that i have not expanded upon but um well i'm glad you guys are getting out of it uh something and i'm very humbled that you guys come and spend uh all this time uh with me so um you guys have a great week great rest of your day and we got some things brewing so that we can we can uh always be in contact there's a there's some folks helping me out but as always guys i greatly appreciate you guys watching hope you got something out of it and i will see you guys next week bye guys