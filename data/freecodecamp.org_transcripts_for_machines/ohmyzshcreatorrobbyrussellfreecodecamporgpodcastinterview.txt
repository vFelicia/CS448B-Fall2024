we're here with Robbie Russell founder cofounder of Planet argon Studios and creator of the very popular oh my zsh uh open source repository and Tool yeah thanks thanks for having me joining us from beautiful Portland Oregon uh his adopted home yeah I've been here for 20 what year is it 20 2024 oh my gosh uh it'll be 24 years in uh July I guess that I moved here so yeah more half of my life now yeah and uh originally from California G yeah I grew up in yeah just south of uh like Silicon Valley my dad worked in Silicon Valley and hardware and we lived in a little small suburb town that was kind of on the edge of very Southern there's like I don't remember if it's actually the furthest south town in Santa clar County but yeah it's um it's kind of like at the time is very farmland and you know track houses and stuff like that and so was maybe about an hour and a half or so South of San Francisco and maybe 45 minutes south of San Jose yeah and uh Gilroy that's like garlick town right is that is that the like the world capital of garlic the crop it likes to call itself that um I don't know that it's actually where most of garlic is produced nowadays I think most of it's actually produced in China um but yeah there was a huge uh garlic scene there if you will uh it smelled like garlic people it's either you loved it or ha it if you drove through our town um coincidentally the town just north of us had had a lot of mushrooms that they grew and so their Town smell like poop can I swear on this podcast smell like but they were like slightly wealthier town and so there was this weird competitive thing and like your town smells you guys are poor down in gory they made the the the fossi and bargain yeah our Town's going to smell terrible but we're going to be slightly better off than our neighbors exactly um so yeah I grew up in the garlic Capital world and all I wanted to do as soon as I became a teenager was figure out how to get out of living in gy and move to a some sort of city Urban environment that's what I wanted to be around yeah right on man well uh obviously you found Portland to be like a a good place to be because you've been there for like basically your entire adult life most of it um you've got like a very um I mean you're very very portlandian in like pretty much um your interests and things that you do you're like very outdoorsy from what I understand and um yeah like what what inspired you to go to Portland specifically and uh it was really cool by the way hanging out eating tacos with you it was it was good that we got the chat and um I didn't I didn't know what to expect from the conversation and yeah we had a number of tacos and talked about all facets of life um with you and Abby over there at free Cod Camp um who's become a really good friend coincidentally um thanks to free code Camp uh we can talk about that if you want to but um yeah think about why did I move to Portland well the short story is that I didn't know what I wanted to do with my life my career I didn't have any like real I was painting houses for about three years prior to moving to Portland I I since I was 17 I dropped out of high school halfway through my junior year and then ended up getting a job with like a painting company that my my one of my uncles worked at and learn to sand and touch up and eventually learn how to paint and take care of wood and paint roof the things that are on I forget what they're called flashing flashing and all the the things flashing gutters yeah flashing is like the metal stuff that might be covering like there'll be like you know air vents on top of a house anyways I got to learn how to paint houses for really fancy really fancy houses in uh Santa Clara County um like we occasionally work on you know multimillion dollar houses for people that work in Silicon Valley or maybe they were like they they're like um like one of the players or something from like the the San Jose Sharks a hockey team like their big you know big house they were building up on the hills and so I got to work on those types of projects which were not like kind of get in and get out short projects they were very much like we would be there for like a month two months working on painting and prepping and painting working as their house was being built and making nice cabinets and so we would make paint or cabinets like the big style at the time was making cabinets look like they were basically White plastic even though it was like really fancy wood I don't such a weird how Styles change over time quirky in interior decorating train right so I learned a lot about like the craft and how much work went into prepping before you even pulled the paint out right before the paint dries and then touching up and taking care of that stuff um when I was a teenager after having dropped out of high school and so that's that's what I was doing and I'm like I actually thought I might if you do I think in California I don't know if it's like that all states but before you could start like your own say painting company if I had I I kind of had a little bit of aspiration like oh maybe one day I'll I'll run a painting company like I think I could probably do this and have some people maybe work for me and I'll just work in construction but that also the reality was it would mean that I'd be working construction and I didn't find that you know it's funny that we talk about diversity in Tech over the years and I'm like construction was there was a lot of cultural diversity um where people were from and stuff but it was mostly male dominated and I didn't really like working with just men all the time and so I thought that was you know that that was actually one of the things I thought it was a very toxic environment as a I kind of saw myself as this kind of anarcho uh punk rock kid who was trying to like you know pushing you know like I want my gay friends to be able to get married and like here I'm going to work every day and everybody's talking in very conservative and very maledominated environment and kind of objectified women and when whenever we'd see women on the like the job sites that was like always like you know there's a lot of cat calling and stuff and I'm like this is not an environment that I feel like I want to spend a lot of time in um so anyways we that's a whole story and of itself so I decided I wasn't going to do that forever and like this is like I didn't want to work around that environment forever so uh I wanted to move to a city and I didn't make very much money painting and I didn't and I was like well I was kind of doing some odd jobs here and there doing some like tech support stuff and so but the price to live in Portland was technically cheaper than it was in Gilroy interesting and it was like it was a city that had vegetarian restaurants like punk rock scene um I can go see music it felt relatively clean um as a city in the sense like you walk around downtown and there' be like you know some gutter Punk kids and I'm like well worst case if I don't find a job here I can just be a gutter Punk kid and get a dog and just kind of hang around and um I'll just I'll figure it out I'm just like maybe kind of glamorized this like DIY lifestyle and Portland has exuded that I I would have loved to moved to Berkeley or Santa San Francisco or Santa Cruz but I couldn't I couldn't afford that those are expensive cities to live in I didn't know it wasn't programming or anything at that point um much to speak of anyways um not thinking that would be a viable thing and the other part of like wanting to move out of California was that I felt like everything was kind of driven towards hey if you should work in the computer industry that like my father worked in Silicon Valley he just retired a couple months ago he worked in hardware and he was always like you need to you should really be interested in software he was always trying to encourage me to get interested in software buy me books on softare I always I always had computers around I had my very my own computer which was always like my dad's the one he basically would grow out of I got the one he get the he get a 386 I got the 286 he got the 486 I got the 386 and so it just be I just learned how to work around with computers a lot as a kids using them to play games and using some of the the software that would come on it making cool little spreadsheets and stuff like that or Ms paint or playing weird games on the you know command line games and stuff like that but uh I just never resonated with me like learning how to programming I just thought it was it it didn't seem like an interesting thing for whatever reason it was like because it was always presented as like hey if you learn if you write out this code into this you know this editor thing um andun run it then you can play the game and I was like okay so I'd be maybe typing what it was doing for I get bored like I've just like you know basically rewriting something from a book yeah under the computer I'm like I'm can I go outside and play with my friends I'm G to go do that you know this is like can I just play the game someone already did it and yeah you're basically doing rework I mean there was definitely a time where there just wasn't enough memory and like it was more practical to distribute printed copies of the code and have people type it in themselves but I'm sure that by the time you were a kid that that time had passed and it was more like a an exercise yeah it was more of the exercise like learning it was never really presented as like well if you get it to run and then we can then change it make different you know modify it to do something a little differently let's change like we never had that conversation so I never that there was never that little aha moment of like o I can do something different with it um and so I wrote a couple blog posts in the past about like how my my dad failed to teach me or get me excited about programming um when I was young and I think it was just like we're that was the ingredient that I think I was missing was like wouldn't it be kind of neat if we can make something to do X Y and Z and then let's figure that out which I think speaks to how I learned about things and why so so very practical kind of appli like you don't seem to me like the person who Geeks out on technology for the sake of Technology itself it's all about what can this technology do for me exactly um the you know I think if he had you know I played I played you know Little League baseball and things like that as a kid and um so what like I remember I was really interested in stats for for our team and so we would track the stats for our game you know for for all of our players couple years I would do this and then I would like and my dad and I would like put some stuff together in like a spreadsheet and then like regenerate this thing and I bring a print out to the team you'd be like here's your stats for the season you know like here's your on based things and your your batting average and pitching details and so we could track some of that stuff over time because uh there wasn't like a web page or anything that kids this you know this is all late 80s early 90s yeah period of time and so if we had had a conversation like wouldn't it be cool like if we could build a little tool that maybe every week you come back from the game and like plug in the new numbers and then it would regenerate the report or something like that probably would have I probably would have that would have resonated I think really well with me but it was that wasn't what we did we we learned I got to learn how to use spreadsheets and stuff like that I think it was like Lotus 123 or something back then but so I still got to learn how to use the tools that you could use and you know like build spreadsheets and stuff like that and coincidentally another thing my dad kind of encouraged was we were always bu building our own computers so we would go buy all the parts and then we put it together and so I learned how to do that with him and I became like this weird thing where he would kind of show off to his friends because they would want to get a computer and maybe they weren't they didn't work in the computer industry um that's I'm just going to say the computer because that's how I refer to it that's how my dad and people referred to it like oh they work in computers that's kind of what we said like now it's like everybody works in now we use like we work in Tech and that's a weird yeah thing to call it as well but the there was this like we' build it and then we like you know maybe a neighbor would get their first computer and then I I would be then sent over for a week or two every couple couple like maybe an hour a couple times a week to teach them how to do stuff on it and so be like here show them how to like open up Word Perfect or how to use the spreadsh thing or how to teach the kids how they can start the games themselves you know and put the floppy thing in here's how to install it but then here's some shortcuts you can add to your DOS prompt to like here's the commands you you you run to like launch you know to play Commander Keen or something and so that became something like I kind of was good at maybe teaching people how to do things like it um and showing them like well if you know if my dad's kid kid could figure this out I could probably figure it out you know like so I was kind of paraded around in that sort of way like some of the so it sounds like the fact that your dad was you know encouraging you and that you had Hardware on hand I mean uh that you did have kind of like uh what many people would call like like uh an ideal kind of like um ground soil for growing as a potential developer in growing up around the tools uh having somebody in your life who was already making a living from these tools and and that kind of seed the seeds of later on when you were you know considering your options uh potentially getting more into computers maybe you could talk a little bit about that that period where you wanted to go into business and pot you you were ambitious you wanted to have uh a company that was potentially going around painting but you you weren't like in love with the kind of construction work culture will what what did you do how did you go about uh ultimately creating a consultancy like what what was the uh process in between those two points there's there's a couple of factors and you know I haven't really spent a lot of time reflecting on this specific point but I feel like in this conversation is kind of highlighting something that I you know earlier I mentioned that I kind of was I I in during that same time that I was painting I was obs obsessed with DIY punk rock culture East Bay East Bay Port um and East Bay um in the Bay Area in California uh it was like a lot of punk bands came out of that area there was like a lot of small record companies that were like it was just like kids that were maybe four to five years older than me had running record labels selling stickers through cataloges and I started one my my very first business was a sticker company and it was like Punk stickers.com and I was like I'm going to oh you had punk stickers.com you had that domain did I did pretty good domain um and then I lost it and I recently just negotiated buying it again but I don't know what I'm going to do with that uh we'll see um but the idea was like I wanted to sell stickers for bands and and make and also political activist stickers and there was someone up in but so I like looked up to these people that had I we go to like anarchus Book Fairs in San in San Francisco and stuff and like people were like all these selfpublished people that were writing books and Zen and so I had a Zen as well and I was like for like music related stuff and I was like I was just really fascinated with this idea that like there's I was finding a community people that were kind of kind of content creators selling like their Wares but kind of being a little you know just doing your doing it yourself and not wanting to work for someone else it was more like I'm going to go find my own thing and I think that was very much a an ethos of that era with like indie film you know was like people like I think I would like I would have loved to I just wanted to do something interesting and I what you know I thought was interesting and creative that I can kind of build my own destiny and not end up working my biggest fear was ending up in a cubicle in Silicon Valley I'm like that's my intive with computer industry was I'll be working in a cubicle somewhere there will be Windows way down a hallway um far far away and not that you know I I go to my dad's my dad worked in hardware and specifically in hard um hard drive manufacturing yeah and so I would go to the I would go to work with them every once in a while which I enjoyed cuz I would get this meet all these interesting people from all walks of life and people coding and and going in like the the the clean rooms and stuff and seeing stuff how stuff was built but there was but I was like there was something about that lifestyle for whatever reason I don't I don't know if I was like subjected to some maybe it might have just been like punk rock music and being just like rebelling and like I don't want to do what you want me to do dad which was probably to get a safe job in Silicon Valley like my grandfather did my grandfather worked at like he worked in Tech as well like was a traveling consultant and worked at like Atari early on and like so there's like I always had like that was like that was like my legacy of like this is what you're supposed to do and I was like that I want to go do I want to go kind I want to be a musician I'm going to make stickers I going to do my own thing um which I think was even like when I thought about being a painter and having my own company was more like I feel like someone else is making money off of my time why don't I just go do this myself and I don't know that I thought a lot about building a company that would have employees necessar so that was like that definitely cuz I I think I was always skeptical of people in power you know in leadership positions and so I think there was a there was a little bit of that and so uh which I think comes back to the how Planet argon started in the early years of I'm trying to think how to th thread the needle there because I'm kind of going back a little bit there but there's yeah but going to Portland was very much a hey I want to I'm going to go see if I can make it and do something on my own and ended up coincidentally my first job in Portland was a job in a cubicle doing tech support for a couple so you got a taste of like your your greatest fear essentially um just like like circumstance propelled you into a situation where you couldn't deny your destiny as an IT worker as a Dilbert character indeed uh exactly Dilbert character uh I was obsessed with Dilbert back then um but and then that show so during that period of time where I'm doing it support for about 200 people in the company and I started to you know basically a lot of going around help people fix their stuff that was problems on their computer um setting up new machines because we were hiring a bunch of people you know that's doing you know part of the onboarding and and and helping people upgrade their systems but people would come with a lot of similar questions you know things and I was like oh it'd be really easy if I just created like this I had already started making we pages and stuff like that for like my sticker company for my zen and some other like little personal projects and some for for some bands and stuff like that and so I was learning how to build some web pages because I wanted to my first entry into programming kind of like really doing anything like web based was like being able to I wanted people to make a request to order some stickers and so I'm like well how do I build a web page and so I figured out how to like I couldn't I was going to pay someone to build me like a form that could collect data from people and so I I learned how to maybe do something with like I remember if it was Microsoft front page or something eventually I learned how to do it in like with some CGI scripts with pearl so I was like just picking up some books I'm like how do I have like a form saved to like a CSV file or a text file and I can FTP that file down and see if anyone ordered any new stickers um and that that was like my entry into kind of doing a little bit of programming but it was because I wanted to sell stickers so how do I make that happen and so that those types of skills start to slowly start to accumulate so by the time I'm um actually at this job doing text support and I'm helping people I start putting together some web pages like on an internet um because I knew how to like spin up like a Linux server and run what what year was this approximately uh that job I moved to Portland in 2000 so that was like you know fall winter of 200000 um I was starting to do some of that stuff and so so that company you know they they were an event management company and so we did I was helping people do a lot of like CSV or Excel file dding stuff and like so I'm like here's like I could build like a little script to help out with some of these CSV D duping things I started making like tutorials where it' be like a bunch of screenshots so like here's how to set your out of out of office Auto repes so it doesn't create an infinite loop with someone else that also is on vacation that can be uh problematic that used to happen back then on email servers um but so they there was the company started to notice that I was doing this and there was another department of the company that was actually like a web development team for our custo like the company's customers and they're like hey why are you doing all this web stuff like why aren like that should be us that's doing they were kind of like a little bit like why are you so was like territorial a little bit and then and in 2001 they they announced some layoffs and then I did not get laid off but then they called me and do they're like hey if you want to keep your if you want to stay working here we have a role we think you could be a junior web developer for us because you're already doing some of this stuff so would you consider moving over to this other department and I was like oh I get to just do that stuff all the time and not have to go around people's computers and and like and like do I get to keep work and and you can get to keep working on the internet because everybody started to really like it and um that was a whole thing of like I remember them even thinking like it was like a new idea for them and it was only because I just started doing it and I was like ah I'm just going to make this to make my job easier and here's a link you can solve this problem yourself now um so I moved to the the web team and so personally I was like learning how to do some stuff with pearl and PHP but the company they weren't going to touch any open source stuff like that they were all using Microsoft um ASP back then net had I don't think it had just come out I remember going to the net launch though with that team but so they so during the day I was learning how to do stuff with Microsoft SQL server and kind of learning they're basically putting me on these repetitive projects where I was spinning up these like complex registration forms for these events and I would then go home and like well how do I apply what I learned at work today in this other technology stuff that I'm way more excited about which was like open source because it was all that open source World resonated with a DI iy mentality there was a lot of you know free stuff out there I could just download and spin up a website really quickly for some project for a band or for some activist project I was being a part of and so I I was kind of doing this like my Moonlighting thing was I'm doing open source stuff at night having fun with you know trying to learn how to Tinker with things and building my own projects and then uh and building some really really horrible like PHP minus schl things and if anyone really went down the rabbit hole and searched me on Source Forge you could find some probably embarrassing code there that was probably security written and should not be run anywhere but it was running at my company on their internet they would allow me to use the open source stuff for the internet stuff but not on our client work that was too risky um to go into that t but anyway so Planet argon started in 2002 as me saying you know what because I started realizing I was I was building up all the skill set and people started asking me like hey will you work on this project for my business like I have a consulting company where I do this thing and can you build me a website that I and I was like well yeah I can do that but but I'm going to I will only do it if I can build some functionality that you allow you to make changes for yourself like a CMS type tool or something so that you don't have to call me every time you want to like change some copy on your website um because I don't I don't want to do that you know yeah that's like the the first evolution as a freelancer is like you you realize oh no I'm these calls are never going to go away like exact there will always the updates needed made I need to figure out a process essentially of like delegating the change back to the client exactly so that's that's kind of how that the Consulting part started so 2002 is when Planet oron created as this thing and and coincidentally my partner at the time she was a designer and so so she and I uh girlfriend at the time we so we would occasionally work up on work on projects together and so the so the day like I remember sitting there in our apartment we were talking through like hey let's she already had like a design thing so she was doing design work with some clients and that would be like print and web based digital stuff like brochures and things that she would do and I've had this programming skill set and like okay maybe we can collaborate on some projects so I had my business and she had her business um but she was there the day that like Planet Aron started and like touched almost she did the first website designed my first business card she was there when we talked through all the different bit U naming ideas and before we came up with the idea for Planet argon and how that came to be own story but yeah yeah what is the story behind that so so I like uh so for a long time I would make it be kind of a mystery and I would always give this book to my employees I don't know if You' ever heard of the author um Tom Robbins by chance I haven't uh he's pretty well known in the Pacific Northwest he wrote like even cowg girls get the blues and there one of his books called still life with woodpecker and it's about an anarchist um terrorist coincidentally but and like an ex princess who fall in love with each other um and there's this whole he has anyways he the the main character is a redhead and there's the way the the the author is very Kurt vona esque in some ways but he'll have these like chapters where he goes off and these big random rants about or ramblings about things that are completely unrelated to the story but anyway I love this book when I was like you know late teenager and Planet argon there was this like Back stories about where like the pyramids came from was actually there's a theory that like it came from the redbeards which uh like redheads with their technology because they were sent away from this other planet sent to planet Earth because they were obnoxious human beings and so they were redheads were so went not visually seeing this conversation I I have red hair so plan discriminating against your own essentially uh Planet argon is where red heads came from According to this book as like a kind of like quirky little Side Story thing um because they were obnoxious and the people there did not want redheads there and I don't blame them we're we're horrible so anyhow interesting so so it's not Rel like because I think I've heard you ask uh in the past maybe on the your podcast like what's your favorite noble gas you'd think it would be argon and you know we've had I think maybe four or five phone calls or a company people trying to purchase argon and so i' always wonder if that was the business I should have went into but uh really like people people want to buy the actual yeah gas for industrial us maybe Planet argon sales argon uh no we don't but neon's my favorite noble gas like that just some cool stuff but argon I've seen some really cool use of it um there's a like a children's uh science museum museum here in Portland Oregon that they have a bunch of stuff in the show how different gases look and so there's some cool stuff with argon as well and so it can look it can look pretty cool I don't know a lot about all the noble gases admittedly when we had early on in plan Aron when we had when we start we have employees and we were offering hosting services and we had all of our own servers in Iraq all of our servers were named after noble gases and and it was like Xenon and argon and neon and so I have uh there there's yeah you run out pretty quick though you do you do so we had to like kind of like go a little bit outside of that and eventually we're like let's just we're we're running out of noble gases maybe we should stop doing hosting as a business anyways I don't want to have to touch physical Hardware anymore on than yeah yeah and um so let's talk a little bit about like the great middle because I think a lot of people create a consultancy and it's just them and maybe their significant other a few friends and it is fine and it provides a livelihood for the people involved but you've done something different in that you've stuck with it for a long period of time I'm I'm sure you've had lots of opportunities to go work at Big Tech and do stuff like that but but you've kind of stuck to running this consultancy and growing this consultancy um and I'd like to hear about the growth and how you managed to grow it and what what that process was like and maybe some of the pain points I I can definitely interject with the other questions I'm going to step back and just kind of hear what what were those first few years a growth like for you yeah well the first few years there was like no growth uh uh so 2002 is when I started as a you know the Moonlighting type of thing where I worked on some projects here and there um you know it was just enough to have to file taxes you know um but I was I still had a job you know full a day job and then I ended up working actually briefly at a another consultancy that actually got that worked in open source specifically and they're they were known for being experts in post Rescue all and so I was I went there for about a maybe a year and a half or so and it was like and that was was a pretty small company of like less you know there was maybe four or five of us consistently and I was like you know what I think maybe I could do this on my it was like again that like kind of like uh naive kid that's just kind of like you know at the time I'm like 23 thinking I could probably do this I'm doing all the project management I'm doing the coding like working with the clients I'm like I kind of get this I kind of understand and I'm like I want to maybe work with different some different technology tools so I I quit that so I can do Planet earon fulltime so that was uh early 2004 is when I officially was I'm out on my own um and to to to make plan argon work or not um the so here's what happens I'm doing that I'm you know trying to find work doing primarily PHP some Pearl a little bit of python work um and I was really excited about I think PHP 5 was coming at the time and it was going to introduce some more o related stuff into the language and I was like this is object fored yeah this is what I was uh kind of I was this is what I want to work with and and then I'm also I have a band I'm playing music at the time um and I was like I had been in a couple bands to this whole time as well it's another thread there but the I late 200 maybe like November 2004 I'm look I'm always looking for jobs on Craigslist because that's where you would find work a lot of time for like these Contracting projects so people would be looking for so i''d be scouring Craigslist in different major cities across the US people looking for like I I have this PHP website I need help you know and then I might get like you know 20 to a couple hundred hours worth of development work out of those contracts so I would just respond that's that's how I would def find work was like things through Craigslist and there might have been some other websites but that just one happens to be a top of mind and then one day in Portland there was an ad for this company that I was very well aware of called cdbaby.com oh yeah and Dereck sers yes so they were looking for a PHP developer here in Portland and I couldn't think of anything more perfectly aligned with like the DIY here's this person who started this business where it was helping independent musicians sell their CDs online because that's how you did it back then we you would literally like you make your CDs and you would send CD Baby a box of CDs and then they they would put you in their store and then they would handle the Fulfillment and the shipping and so they had a huge Warehouse you know maybe like four miles from where I live right now and I was like I knew that a lot of people worked there were musicians that worked in like the full field I'm like that sounds perfect I'll be a programmer I'll get to work with musicians I might make new bandmate friends or this might open up opportunities and maybe maybe open up doors for my music because I wanted to play music that that was really my dream was like I want to be like I want to make make it as a musician and yeah we haven't talked about that but it was like that was one of the creative Outlets that I really started to get into around that era of my life and so I emailed you know responded to this Craig stat and I applied for a job thinking I'll stop doing this Consulting work because I have to con I'm finding work all the time but like if I could work at CD Baby yeah I'll just stop doing this yeah so I didn't start planning thinking like oh it's going to become this thing I'm going to do for the next several decades it was like this is what I can do right now so I can get by pay myself but and maybe something interesting will pop up so I was so I applied you Derek quickly replied to me and he's like hey let's chat I he's like can I come to your house or come can I come to you and we'll have like a little kind of informal interview so we did that he he came over to my house one day like you know in the morning around probably around this time of the day and he had I remember he showed up with a he had stopped at maybe like Whole Foods or something and showed up with like a big little plastic container of pineapple and he was just eating pineapple 900 in the morning I a bunch of it and he's he was like I made some tea for him and we chatted for a couple couple hours about programming and kind of him getting to know a bit more about my background as as a software developer he's like oh this is interesting he's like I'm talking to a few people and then like the next week I went out he had me over for another interview went out to their warehouse we had a couple more conversations and he essentially verbally offered me the job he's like great because here's the deal Derek at the time was the only developer that had ever worked on any of the code there he was looking for his first programming hire that would basically start to replace pretty important take over for some stuff yeah and to fix the you know invariably you know Hodge fge code base exactly and for this operation that was running really successful he's like I have to focus on other areas of the business now I can't be just head down as in COD code all day so he verbally offers me the job he's like and it's I think this is maybe late November early December of that year he's like let's he's like I'm not ready to like start you before the end of the year let's let's let's connect in January I'm going on vacation after January we we'll we'll reconnect and talk about next steps and I'm like great I'm going to go work at my my dream job you know a 23 24 year old kid um then this happens uh comes back from beginning of January he's like hey can we have a quick chat make sure he's like so change the plans I'm like what he's like so I got stuck in a blizzard um during the holiday break and I had this book called programming Ruby U it's a famous book in the programming world it's like it's a pi it's called the pickaxe because there's a pick like yeah the pi book and he's like I and there's this thing called Ruby on Rails I want to do it all in this I want to rewrite everything in this like I'm so excited about this I love rub like I'm so excited about Ruby I want to redo it he's like but you don't know Ruby yet I'm just learning it I found a guy that lives in San Diego that knows it's already on the court team this guy named Jeremy I'm moving to Portland to help me rewrite everything and so he said if you can pick this up I'll hire you then so so dream shattered take a moment being like okay that's it is what it is it's not the end of the world it's just like okay I get it I had also heard of Ruben ra about a month before i' watched the video there famous like video about like creating a Blog in like 15 minutes or something I was like oh that SS interesting so I was like all right I'm going to start playing with it and start like kind of getting into it I'm like kind of excited about it I'm like well and there's a carrot if I could pick this up and get good at it and understand enough like I'll go work with you know Derek and this guy named Jeremy you know in in northeast Portland at this warehouse and work in Ruby I'm like that great there's a job I I think there's a job here I could pick this up you know so I start diving in more Ruban rails and there's not a lot of documentation because it's new and I have to like figure out how to look under the hood and make make sense of things and so I started like well so that I can remember this I started a Blog I called it Robbie on Rails um and I started blogging very very regularly um and like modifying my own blog tool and I'm working on you like start teaching like showing like how I'm doing things I'm like I had started working on this one project um called my band spot which was like going to be a CMS for bands to manage their own websites because it was something that I had built in PHP for a couple of bands in Portland and I was like oh I'll rewrite this in Ruby and Ruby on Rails and then I can show Derek look I'm I'm I'm learning all this stuff anyhow that kind of Ruan rails that it's like hard to compare it to anything else they seen maybe and like AI has been its own interesting thing in the last years but I feel like with new technologies that come in and just like change the trajectory of like the community like so quickly Ruby on rounds at that time was just like it w it's it's hard to really explain but it was it it it just made our life so much better as a software as software developers that it basic B became this thing because I was blogging about it these startups started contacting me and being like hey will you work on our project for us can you help me build this thing because you apparently know about it because you're talking about it you know on your blog and so my Dynamic of me scouring Craigslist looking for PHP jobs and competing for like you know I'm trying to ask for like $50 $60 an hour and other people like well I pay this one person 15 can you can you meet me at 25 and I'm like yeah how much do I need to work this week um to all of a sudden people asking me hey can you will you work on our project with us I have this new startup idea and so that stuff started picking up more work like that people people were coming to me and I also part of it was like another thing because it wasn't just that I was just blogging Planet argon also because I was I always wanted to work with new versions of technology and and be able to host that easily I felt like a lot of cheap affordable hosting was always going to be like way behind on what version of PHP you could use so I remember when PHP 5 came out I offered shared hosting for PHP 5 people people that wanted so if you're a developer you could do that or you wanted to use the brand the latest version of postresql here's an environment that you could do that with and so you know a month and a half into me really diving into Ruby on Rails I started offering Ruby on Rails hosting to people and so I started getting interesting so it's just a server that was configured to already have a lot of that stuff running so you could like multitenant or whatever exactly Multiplex uh a lot of clients on the same machine yeah this was before we had like virtualization being like super common and things like Zen uh xn at the you know came a couple years later basically I just knew how to set up like there was some open source stuff for managing shared hosting with PHP stuff and I figured how to change it so that it could also like spin up a ruby environment for people so people could back then you would just include all of your you know your your gems as part of your repository like your subversion Repository or a c CVS or whatever you're using and so or you would SFTP your files into your this home directory that you had and like I just would everybody would have their own database running and and stuff like that so I just learned how to like I could fit like maybe know 80 to 100 customers per server um and because none of the projects were that big in terms of traffic like they could all kind of coexist and and it worked out okay um and then eventually if you wanted to spend more we would make you know we put you on servers ahe had less customers on it that you were sharing space with and that's that's how that model worked back then but that so I had those two things happening I was blogging and I was with the hosting stuff and then companies started contacting me to be like hey will you work on this project people also asking me hey would you interview for a company you know you mentioned like getting approached by you know opportunity so you know maybe fast forward four five six months um Derek from CD bab is like hey you want to chat again I'm like my my my my my situation had changed you know quite quite a bit I was like oh I'm actually I just got a book deal with O'Reilly um and be weird for him like you go from like some long shot like maybe this kid will actually learn it and to having like an authoritative book uh or blog and and a you know potential book deal with O'Reilly which you know at the time was basically the king makers yeah of the tech press essentially like if anybody was an expert like like having an Ry book meant you were like the definitive expert qualified to write on the topic what was what was going to be your animal you know on what's your animal cover uh did they let you choose by the way no um and and that's a whole another story but book never got finished because the company grew too quick and so that point I turned around the job I said Derek I'm like I'm going to see where this goes um and people were approaching me and maybe there was still kind OFA I didn't really have employees outside of it was me and and my kind of like my cofounder who uh who was starting to get more involved in some of the projects that we're working because there was a lot more design involved it' like start a project so we were she would design stuff and I would build stuff and so we were doing that and we're just being I was being very active in the community there was no Ruby there was no rails conferences or anything that that that was like a year later before those started and so it wasn't like speaking engagements outside of like the local so where was the community I mean it was people reading your blog were people like on IRC yes IRC yep was meeting lot of people through IRC because so people you know Planet argon had we had a IRC channel for for people that were hanging out because they were customers and they would all like help each other we had our forums we had there was the Ruby on Rails Channel um and then there became this kind of like little back channel in the rubyan rails Community um called The Caboose because it's kind of like the back of the train and we were kind of like the this became this like little hodge podge group of people that were were kind of early adopters through rean rails and kind of people that were maybe more businessyoutube exactly you know he's just you know he's working on you know selling snowboards on on you know on the internet and stuff like that and um so we were all like helping each other in this back Channel like kind of like basically it was just because it was just like a subset because the r on Rails channel would be like hundreds of people and this one made maybe be like 30 to 40 people there's a photo of us somewhere on Flickr like at the first rails comp in Chicago where everybody that was around for that photo like that was like a big group of the people and that was like the first time a lot of us got to meet each other in person um so it was just like that Community was definitely IRC based and blog based um we were all kind of like referencing each other's blogs we used that was back when we would have like a little list of other blogs you recommended people reading you know like I for what what we call that but kind of like a web ring typees thing and um and there was someone that um kind of you know looking back at that early that first one or two years of Ruban rails like someone was there was like a Ruban rails blog site it was kind of like an aggregator that kind of brought all these like blogs you bringing all the RSS feeds into one that was pretty popular it might have been like Planet Ruby and rails or something and at like after like a year there was some Milestone and and then they announced like who was the most prolific blogger in the ruband RS community and like I was like twice as many blog posts as anyone else that year wow and because I was just sharing what I learned as I did it and um and that so a lot of people knew me as Robbie on ra stuff like that so that opened up a lot of doors and then later in that year so this is like fall 2005 this is when we grow couple large projects get come my way one of them is by a design company that had a project they were doing a winter Olympics project for this small shoe company that's based in um Oregon called Nike and they were their headquarters here and they were working on a couple projects for nanki one was the Winter Olympics and then there was also going to be a World Cup website and they wanted to build this backend system and they were like excited about using Ruban rails we were like the only people I was like one of the only people on the west coast that was like actively doing much Ruby on rail stuff at the time and I knew these people in their local Ruby user meet meetings that I would go to and I was like hey this project is too big for me can't do you want to come help me do this because most nobody was getting paid to work with not not very many people were getting paid in Portland to work on Ruby on Rails like they were curious about it or even to work on you know just program with Ruby in general but they like to dabble with it it was like they like their hobby thing you know they were getting paid to do like I remember so I ended up kind of recruiting maybe seven or eight people and they were working or like an office attic bought some like folding tables and some chairs from used furniture equip like office furniture um store and all of a sudden it was like eight eight people working in the Attic on these projects and I was like I don't know what happening but I'm like let's just see where this goes in worst case um this doesn't work out for more more than a few months then I just go back to working for myself or I'll just go talk to these companies that keep wanting to maybe hire me so that's when we became an agency was it was it was very quick it was a big project so so you had eight devs yeah like basically like and then did you feel pressure to go out and pound the ground and get business to be able to support those devs well at the time I was turning away work wow so you you could literally put all eight of those devs productively to were were yeah they were they were going to be busy for the next few months because there was a couple projects I mentioned those Nike ones there was this other startup um and I remember I our estimate for that yeah I mean Nike like maybe the biggest Portland company yeah um to get them as a client early on that's that's definitely a feather in your cap well we were subcontracted through a designer to be clear Nike I do not think they would have hired us directly um we were probably way too small they did later we did work with Nike for many many actually still kind of work with them now but um we're almost wind it down with them but we we Nike was one of our was been one of our largest clients over the years so um eventually we were mature enough of a company for them to take seriously but the um but yeah during that period it was like we had enough work for people so they were basically hir them all as contractors um in like maybe October November that year and then and then towards the end of the year we're like all right well let's let's take a real look at like it was a so proprietorship at that point so the business model like the entity so so you had liability yeah so January 1st 2006 we became an LLC and then I offered all those people jobs employment jobs and most of them took a job that meant that they were going to get to work with Ruban rails and that's what they were in Ruby and that was exciting and there was basically just the people that I knew locally that were excited about it I didn't it wasn't I don't remember any any other way of thinking about how to weigh them up if they were going to be good people to work with if they were uh good employees so the interview process was like kind of nonexistent because you just already knew them yeah I just met you know I met them a couple times at like the the local Ruby Meetup maybe we we you maybe we got a you know coffee or had lunches together um maybe grab a drink or something and I was like I'm just going to throw these this rag tag group of kids at the I want say kids but we're all like in our you know probably mid 20s at the time I was like let's just I just let's just see what happens and worst thing as I go back to doing we all go back to what we were doing right yeah and the thing that I knew I felt like I had some at least a skill set was because I had already had a couple you know years of doing the Consulting work that I knew how to at least like do a little bit of negotiating I knew how to do think about the sales process and knew that I needed to spend time on marketing and promoting the company and reconnecting with customers after you wrap up a small project like a few months later to see what else is going on so you can get recurring work with you know like I that was so so maintaining that relationship and and having it not be a oneoff but uh you know a an iterated game so to speak exactly and the and meanwhile I felt like a lot of the software Engineers that had been experienced with they just wanted to work on the code and they were really excited about the tech itself and I think back to what you were you know we were talking about earlier in the conversation where I was interested in what it could do for a company so I was like I felt like I was in a much more natural I mean I was super excited about playing with Ruan rails and everything but I was like what can I do with this what kind of web apps can I make for people what kind of business problems can I solve look how much quicker we can build this thing for these people and it was also an overlap at the time with like a lot of like web design and ux improve improvements in maturity I think in the industry where there was like a lot of patterns you can pull from web standards browser you know things that were happening it's just like a web standards being as that was like its own thing the fact that we were even geeking out about like HTML and CSS consistency as a industry was like that overlapped at like at just the right time that it just made I think Ruby on Rails came in and so all new web apps could use these new patterns and so they looked and felt better and for users and so like I feel like it kind of just all got bundled up into that thing like oh rubben Ra's applications feel better because you're using all these new standards and so there was kind of this weird thing where like because you're using these new standards you care about the end users and that's going to make better for your business and and look how much nicer things are yeah versus these clunky web apps that everybody would be throwing together because it' be a bunch of software web developers designing the interfaces quite often and they were just like they weren't great they were just making it you know doing their best and they weren't really thinking about the design side yeah and I think bootstrap came out like shortly afterward and was pretty widely adopted by the r on Rails Community as well and that that kind of standardized and removed a lot of the decisions that you had to make as a developer um yeah and that's like really the strength of rails in my humble opinion is the convention over configuration um just like this works well enough let's not split hairs and so while a lot of people might have been like um you know saying oh rails is not high performance or enough or I needed to do specifically this thing you were just getting down to work building stuff for clients exactly it was just I I you know it was a little bit of a David Goliath battle too back then it was kind of like look this is kind of Underdog thing we're like coming through and we're like no we can build really sophisticated applications with this technology that people were like skeptical to say the least like this isn't mature it's funny because now you know 20 years later or whatever uh it's I feel like we're having similar conversations like oh ruon RS is like this old thing nobody wants to use it anymore it's too mature too mature and like we go back to when I used to have I used to have to have conversations with large companies that like someone at their company had heard of rubben like I really want I'm they were like really proponed like we want to build this web app for this internal thing but I need you to help me convince the CTO that this is a safe decision this is not going to like ruin us somehow or going to plague us with security things or just we're going have to throw so much Hardware to keep this thing running I mean were you doing a lot of like full codebase rewrites like Dereck sers was asking or were you just building new functionality out with rails a lot of it at the time early on was new functionality new web apps um and the I think it probably took about a year and a half two years before we started getting calls from companies to help them come in and repair their existing Ruban rounds applications but there there was a couple projects that were were rewrites or kind of modernizing their existing platform a bit so like maybe there's a part of some web app that they were using like hey we want to put we want to build a new interface for like there was a company that worked in travel and they wanted to build a new interface for travel agents um that could interface with the same database so one of the things that I was kind of you know air quoting known for in the community was being a big post rescue y person but also being understanding that there's a lot of Legacy I came from a world where remember I mentioned earlier my previous job I was working at a company where we specialized in post and I I had a the database to me was like always like this thing that never assume that you're not going to have you're only going to have one application that interfaces with that you may have multiple things that are interacting with it so I always felt like a lot of business rules should be in the database which was like a hard Paradigm for me to wrap my head around when I got kind of adopted Ruby on Rails for yeah because you're doing like migrations in code essentially as opposed to structuring your database in a specific way and then adapting your apps around that existing kind of schema right yeah well technically uh database migrations didn't exist in rubs when I started using RS uh you saw you all of our first scheme is you had to do all your write out your SQL create table statements alra table statements that came in maybe a year two years into rubian rails after I started using it and I think probably help I don't remember if they adopted that from somewhere else but it was definitely like a big game changer but it was more of the you already have a legacy database that has some different application how can we make a ruon rails application work with that same data set and make maybe new reporting tools or some new interfaces on it so I was writing a lot of I wrote a lot of articles in some Library ruby gems that were for like working with Legacy databases so you can put active record and have it connect to some um like Microsoft SQL Server thing or an Oracle database or some old MySQL plus database where the DAT the naming conventions are wildly not what we would consider normal in the Ruban rails Community just like a different way of doing it so so but then you can make it feel more rails likee and so get the benefits of building web apps quickly with rbrand rounds but still getting to leaning on an existing database and having to work around database triggers or store procedures and how do you make that work within the rub rub Ruban rails world and so that was like a part of my I guess my Niche was because I had that skill set and I was like how do I work around and still get to use and leverage ruon rails um so we would get pulled in to help out with companies that were trying to have like a hybrid system there's a lot of companies sneaking rails in on this very small thing and and like their dream would be like and then eventually we'll show that this works like a trojan horse eventually the whole comp going to Mo rails but we have to prove out the concept with this exactly so that there was a lot of like that type of work that came kind of came our way as well and then over the years we ended up realizing that a lot of our typical clients that were startups they would not be our clients you know two years down the road because they didn't figure out how to make their startup work right and so most startups do not uh get product Market fit they don't get traction and they are not able able to raise subsequent rounds um yeah yeah but but obviously Planet argon from a sustainability standpoint is is going strong I mean you're like almost 22 years in at this point uh how big is your team now we are I think approximately 14 15 people at the moment um it's funny like every time I get asked that question I don't exactly know I have to look at the slack Channel um it's always like kind of weaving in we do bring on contractors here and there as well we've usually got a couple interns um so that numbers in terms of working directly with with clients and like I guess selling the clients is that something you do a lot of yourself still yeah I do a lot of the business development at the company so I'm usually one of the first for people that companies will talk to and kind of like help make sure it's a good fit for the company we're not like a large enough company to really have in it's interesting people always talk we invest in like we have a marketing person that helps out with our marketing but when it comes to Sal sales uh there's this interesting thing because the type of work that we focus on now is more on helping organizations that have already invested a lot into their rubyan rails infrastructure and platform how to help them modernize that how to help them like do some refactoring projects or we are their primary development team because there's a lot of web web apps out there where a company might have had a small development team internally build or maybe they worked with a small agency or a couple of Freelancers to build some internal tool but it wasn't like a it was never intended to be a thing that they were going to have consistent fulltime software Engineers working on they don't and they're not really set up like they're you know it's you know they're a travel company and they're like what we don't know what to we don't know how we would keep like two three software developers busy fulltime right so they have these apps that need support and but they need more reliability than say just working with a freelancer and so we're kind of like in this space of like you maybe for aside from the companies that have their own engineering teams that use us to help them with make some upgrades and modernization type projects or refactoring uh we're kind of in this interesting middle sphere of like where when you outgrow like your Freelancers but you're not really thinking you want to grow into having your own fulltime team we end up being so so a lot of our companies were on regular retainer with them where they are basically reserving time with us every month for us to keep an eye on their application to respond to bug fixes error alerts performance issues and they always have a backlog of feature improvements and updates that they're looking to make and so we're we're their team you know and so we so our our developers are working across multiple clients like in a given week so it's a little bit Contex switching but they're all it's all ruby and rounds for the most part and so we're just like so our business model kind of went from working with startups and helping them estimate out their you know their product Market fit and hoping that they figure out how to sell this thing and so that they can get more budget in the future to keep investing to now we're like hey you already invested in this thing you know you need to continue investing in the upkeep of it and keep things updated and um and we're not afraid to roll our hands you know or or roll our sleeves up and get dirty on older applications because a lot of projects come to us and they have not been tended to um in years because they're like well we had a couple people work on it and then that person left and then someone came in and they never upgraded it and now 5 years has passed but we you but 30 people at our company use this application every day we need to know that someone can take care of it so since we've been around forever we've seen all flavors of that over the years and so we can come in be like yeah we can stabilize this and work on a plan to help you upgrade this and interesting so so a big selling point of uh getting Planet argon to work on your uh your code base it sounds like first of all you've been around you're not going anywhere so there's that peace of mind associated with like Hey we're going to get these people up to speed on how our code works and they're going to be able to continue to maintain it uh for a longer period of time and it's not like a freelancer where they're going to um move or um just change careers or something like that like that a lot of that risk is mitigated and at the same time it is a lot less expensive than having your own you know developer staff just maintaining that project and and in in many cases sounds like a lot of these uh particular projects are not such that they would warrant having uh a bigger team no and and I think I think some companies fall into a trap where I've speak with some developers like yeah I'm like the solo developer on this project for this company and I've been working here for a decade and maybe five years ago they had a cooworker another developer they have they have coworkers but there's like but like a peer you know what I mean and like I can't kind of see where you're go is this is the tacit knowledge Time Bomb basically like they walk out the door and like suddenly nobody knows how anything works exactly this this story is like one of the most consistent thing this is where this is another one of the so it's interesting I'm actually helping a company right now and so I'm kind of like in a weird way I get one of our service offering is kind of like it's you know Under the Umbrella we do Consulting right as well and but a little bit of was like um like business I want to say family therapy for teams of like you know I will you know it's it's it's almost guaranteed that always like once every 6 months I'm going to get a com we're going to get a call from some someone that works at a company that maybe has 20 to 50 employees and they have one software engineer that's been there for a really long time and they're like hey we have a situation we've either there's enough work that we tried to bring in additional people and people leave and they cannot work with this person that's been around forever and this is right they come in and they're like great I'm going to come in and be some you know New Blood on the project and a year year and a half later they quit and they're like I can't work with that person um but then they're like but that this person has been so dependable for us over the years and we're really nervous about losing this person but but maybe it's time for them to go you know and they're in this weird situation like can you come and help us assess this like can interesting so almost kind of like U you're you're doing like a uh like a case like a a briefing you're you're going in as the investigator to like try to understand the situation and recommend courses of action yeah or just like can they help them understand can we survive if this person were to leave you know there's always like people talk about like oh what what happens if someone gets hit by a bus you know why we document things and this is why documentation is important and or why we re reate automated tests so that we know that if someone new comes in they know that they're not breaking everything well that sounds great but also when you're a really small team the reality is if no one's reading your documentation and you you're able to keep a lot in your head you start you start making concessions on what things like things that might help a healthy development team work and flourish you like well you deprioritize some stuff and you continue to do that and then people come in and they're like Hey where's the documentation like well you know I've changed this thing six times and no one's ever looked at it so I just I haven't maintained it in Forever you know like the read me file hasn't changed in five years and you're just like okay I get it I can be empathetic to that I understand how that happens when you're working in an environment where you're putting out fires you're being reactive to like hey you're keeping everything running and you're like kind of like thinking about someone spinning a bunch of plates at the same time you know and it could be a lot of work for one person to oversee the whole system but if there's no one to collaborate with consistently whether it's because of you're doing because you're just not great to work with or because you don't trust that other people are worthy of being part of your team whatever this situation is um or there's just not enough budget to warrant mult multiple people to be to work with you uh which ends up being quite a common thing you know this this kind of problem will resurface and so then the companies like what have we invested in or we screwed if this person walks out the door but also maybe they need to leave they need to leave and so for whatever reason I think I can come into those situations and and be fairly neutral I understand how the developer gets there I understand how the comp or the business owner might be really concerned about this and I can like I can talk with these people and kind of Na you're kind of like the Rockstar Whisperer almost a little bit but you know I'm trying to not use the Rockstar thing too much uh they usually just come in in like trash hotels and leave and um but it is it's it's an interesting like come in and maybe I have enough I'm well known enough in some circles that people give me a benefit of the doubt that I'm not coming in and just like telling someone what they want to hear so I mean do do people see you and like panic because like oh no no they they brought him and that must mean I'm like on my way out or no or like are you often able to like repair the situation or or just by introducing a collaboratory like discourse are you able to fix a lot of the uh kind of like documentation not getting updated tests not getting written things like that it's a great question the I've had some successes I've had I'd say the companies have had some failures with trying to correct the situation and where where it works out for everybody it doesn't always end up working out for everybody in some of those situ and I don't I do not believe I have a reputation coming in and like help helping people lose their jobs um I think I'm much more on this side of probably much more on the side of like helping people keep their jobs and maybe making some incremental changes but the people have you know it's like a it's in some ways it's like getting pulled in for like a you know like a physical therapist you go in and like try to get some work done and they show you all things you're like oh great I do these stretches every day this will be good for me and this will this pain will go away you know and I know that if you don't do the work consistently then you're just going to end up at the you know the physical therapist in five years and they're going to like you're like oh yeah I remember I did this before so there is a lot of like people need to want to change some of how their approach their work and stuff like that and so that's that's the thing I'm you know I've been you know coincidentally in the last couple years things that I've been doing is first professional development is taking a lot more curriculum related to improving my coaching skills like okay I'm I'm a coaching these situations how do I better talk with these people get them to think about their and help them solve their own problems rather than me being super prescriptive and like I think you should do it because this is what planet argon does and if you just do this it'll be great for you everybody kind of needs to figure out come to some of those aha moments themselves right um and which I think was also an important thing to learn early on as a consultant especially for designers that if you I always felt we always when we've had designers on our team if they work on working with a client on a design I honestly believe that I've seen way more success if the if the through that collaborative process of a designer working on things that if the designer can help the client feel like show them how their ideas is what manifested the current version of the design versus like a designer going away and coming up back with some magical representation of what they thought they heard the designers that always felt like made it appear that it was actually so much of the client's idea and they just materialized it like that's to me like an effective consultant effective coach is like helping someone see come to this kind of like realization and kind of coaching them that way and and also being aware enough to like that you might not know the best answer and you got to find something that's going to work well for them I'm not saying you're manipulating them but I think it's more of a there's a there's a strategy there I think that can be yield better results collectively so the um so when in these scenarios around coming in and helping helping out things it's a lot of like a strategy that we'll kind of take on um is doing this right now for one company where you know I'm participating sitting in a lot of their meetings and taking notes asking questions asking the dumb questions I always like let me ask a dumb question I said that if you say that like a bunch people disarms people pretty quickly I think um because then you can ask the questions you really want to ask but um and not have to rely on assumptions but like start thinking about like if you if we come in like show them that we're going to use the documentation like hey we want to like one exercise will be we want one of our developers to get your app up and running in their local environment um and like maybe a goal would be how hard is it to bring in someone else to come into your team get acclimated to your system your repo or multiple repos and be able to deploy a small bug fix maybe even just change the footer copyright date or something on your on your web app how painful is it for a company for for someone to come in and do that that because I feel like changing the date in the footer if that takes several days to be able to get to that point like is that unless you're bringing on regular people maybe that maybe not be the biggest concern but if you're a company that's concerned about like hey feels like everything's slowing down I feel like those are like sometimes symptom of that and like you can look at those types of how hard is it to do some really small tasks and people can come in and so I think if you can start removing like addressing those things you start to highlight a bunch of of other pain points that makes it difficult for people to come in because a lot of those companies that are calling us they're not just calling us because they're like hey help us better understand the situation they are truly calling us because they're like hey things have you know like our product backlog seems Log Jam things like our delivery time is taking forever I I'm starting to lose confidence in my team's ability to estimate when we can release something so that means I can't promise our customers that this new feature is going to be out by X because I just don't believe it anymore because it's like we're almost there we're almost there and then like months pass and they're like can you come in and like can we hire your team to come in and help us build these things but they're like they also know they like I don't think it's going to be that easy they know like you can't just throw more people at the problem it's like how do what's going on here what can we do to smooth the process and onboard new people so that other people can contribute to this project and I think if you have a piece of software regardless of the framework you're using if if it's difficult for other people to come in and work on it I honestly think that that's not a a good good sign that you have a great software developer I feel like that means you have a developer that's keeps everything in their head and that's that's not it's not it's not the end of the world especially if they're like in personally invested in their company but if they're an employee and you don't really feel like you can trust someone else to come in and take over for them yeah that's that's a concern to me and I always I remember thinking I remember we had a project manager once who was so organized with how they Pro like their process it was so consistent and how they documented everything they did I was like you're making it so easy for someone else to come in and just take over your job and they're like and that's why you keep me and I was like aha that's great that's a great it's it's very much counter to the intuition that a lot of developers have like by not documenting things like I've got all this proprietary knowledge in my head and uh it's my uh I guess my retirement plan is is like carrying around a whole bunch of details about the code base and uh and not you know writing those down anywhere that's my job security so so you you found it to be the opposite like companies will actually acknowledge like oh because this person is so transparent with everything that's a that's a strength it it should be seen as a strength it should be seen as a strength but is it seen as a strength by a lot of managers or do a lot of managers be like oh well we can replace this this person really easily with like a you know a cheaper developer just out of college because they've documented exactly what they need to do does that kind of transparency hurt your longevity at an organization to some extent that's a that's an interesting one I you know I was speaking with someone recently uh because one of the things we also offer now is recruiting uh as helping companies hire people because I know a lot of people in the industry that may have jobs that they like but would be open to talking to someone and so I'm like I am pretty well connected I can try to connect the dots and maybe I can make a little bit money on that introduction but aside from that um I talk with some people and they're like I got asked what's your opinion on uh how long like a 10 year how long of a 10e developer should have at a company and they had and this was from a like a pretty seasoned software engineer um that's been at a company for maybe like five years as a engineering manager he's like a he manages a team and he he's heard from other people in the company so he's in Engineering Management but he's heard from other parts of the business leadership that there's a curiosity about how long should we keep developers because if we're not cycling in new people and getting new fresh ideas one we might be getting stagnant but two um May maybe there's a competitive thing with salaries you know maybe we can hire people further away or whatever and there's other things there but like so he's like he's like he's like have you heard a lot about that so admittedly I don't feel like I've had a lot of conversations like about that that that was a recent conversation I had and I was like oh that's interesting because I've always think it's be great to have say for a long time but sometimes I do think from like a growth perspective if you depending what people's if you as a software let's just assume most people listen to this or software Engineers is your goal to be at a company for a really long time or is your can build like a longevity and like have uh make a mark for a specific organization that I mean I come from a maybe you know a couple you know a slightly different area where like the idea of working at a company for a long time actually sounded good to me when I was young I'm like oh I don't want to have to switch jobs all the time and like like hopefully I'm not like losing my job or getting laid off on a regular you know every five years like that I think that maybe in some ways me thinking I'm going to do my own thing was a way to avoid that because he would see that play out and still my dad worked at his last job for like 25 years you know yeah what about your grandpa he check he that's a good question I don't I don't know how I think he actually did a lot more job hopping because it was early on when like he was like he at least he moved a lot like the family moved for work a lot and so I don't know if that was like maybe the manager he worked more in like management maybe that was the manage track in the you know the 60s of moving like they go to their Minnesota then they moved to Illinois and then they moved to California yeah I mean I definitely have heard from older folks uh you know my grandpa stayed at the same company basically his entire career as an engineer um you know my dad has run his own practice with like similar partners for right most of his career uh it's it's pretty um common for like people from that they were born in like the the 40s 50s 60s to just stay at a place assuming that they can get a good job and like this definitely holds true in Asia for example in Japan like they have the whole company man notion like you get a job at a company and and ideally you stay and there's like the social contract where they teach you new skills and you keep getting promoted and additional responsibility how do you feel about that like do you think that that is a good fit for most developers that you know or do you think most developers do want to be changing a lot uh I I wonder if it's a I don't you know it's such an interesting thing I think you know for me you know I've been doing working at plan Aram for such a long time now you know like it's funny plus years and I'm like there's a part of me like is this where I retire I don't know the answer to that I don't know like do I still have a business in five years is always running a Consul consultancy is a complex mess of like es and flows and hiring people having to lay people off if there's down ears and stuff like that it's it's just a cycle and then but but at least I get to kind of control the narrative to some degree at least I feel like I'm slightly in control at times most of the time not but you know I think about when people are work for the general software engineering like if you're I'm just wondering if there's a certain element of like do you I I wonder how it's going to impact us when we're for for people that are in the industry and are and are employees somewhere and aren't maybe not in control of it I honestly think that the thing we don't talk about is age as very often as being probably one of the most common biases of you know things that we're discriminating whether we we want to talk we openly mention it or not but I do think I we talk about diversity in Tech but you know rarely do I see a a lot of startups where you'll see some older people in the company you know working there people that are in their 60s you know getting hired and and I've been in part of those conversation like ah that person's like it's hard to teach an old dog new tricks and stuff like that they're not going to like so there's a interesting challenge there I think if people maybe I think some sometimes people will find that themselves having they're kind of stuck in a job or feel like this is this a Ive space now at their their last 10 years of their career because they're maybe nervous about rejection trying to put themselves out there and I don't know how this is going to play out over the next several years you know le as I as as I get to continue to get older um you know there's kind of these weird phases we get through and like sometimes people think that like I'm not up to date on the newest things and like what are these kids in their 20s doing nowadays and but where's that kind of where's that where does that go at some point when people are feeling like they can't get a job somewhere else and so might they stick around just for fear of rejection or or because they've been rejected and like well at least I have a stable thing so I'm just going to sink in here and maybe my opportunities are not going to be drastically there's not going to be a lot of other growth opportunities whether that be salary or promotions but like I can at least stick in this is kind of my area that I can control and there's I'll stick here until I retire um a lot of startups probably aren't they'll talk about retirement plans but do they think long term about like what's a 20 30 year 30 year career look like for someone at their company they're still trying to figure out how to make the next few years work let alone think about that far they can talk about we've got great benefits but you know I mean like startups are going to get acquired there's going to be all kinds of creative destruction the notion that you could get a job at a startup and still be working there 30 years from now I think is probably not realistic for not you know in a majority of cases but a lot of that is because developers tend to work at a startups especially over here on you know the West Coast where you got you know you got Seattle with all the startups you got San Francisco and uh you've got uh you know the Bay Area with all the startups I I do think that like if you go to like a more traditional kind of like industry like banking or hotels or you know um hospitals or any like i' I've heard the statistic that like twothirds of developers work outside of proper Tech and I think in those roles you know it may not be so unrealistic to just work at the same company Long Term but from your experience working like What proportion of the companies you work with are tech companies to Planet orgon how would you define what a tech company is Quincy yeah so I would say a tech company it would be like the product is some sort of like app or software tool like at last is a tech company they have you know this Suite of software tools you know Salesforce is a tech company is you know Ford a tech company I would argue they aren't because they're a car company they may position themselves as a tech company but like that's just a very small aspect of what they really do which is Source parts from around the world and design cars and you know make sure that they meet all these different regulations and stuff right so the tech part as much as they may emphasize that is actually probably a pretty small proportion of the number of people on their team that are doing just that I mean you could argue like Finance is Tech but it's not really Tech in the sense that probably a very small minority of the people who work in finance are software Engineers same thing with like media and other Industries like that so I I I would say very specifically like tech companies like Microsoft is a tech company you know so so I I think I would reach for that Common Sense kind of definition of tech and not um not like a marketer type definition of what constitutes working in Tech no that that I think that's actually a really good way to kind of frame it I I think the thing that I I struggle you know I've talked about this in the past on some other podcasts and stuff like that I've always struggled a little bit with tech because I felt like it was too encompassing I think we kind of overuse it like oh we all work in Tech because we're all software Engineers I'm like well you know you you work in finance right or you're work in healthcare you got to think about Healthcare regulations like you know yes there's some software within that healthcare related company but it's is that it's it's just an interesting I guess you're using Tech to solve some problems I suppose but I feel like I was like is is the is your skill set as a software engineer just that you're really good at knowing how to code um solve problems with software code or that you know how to solve problems in that specific domain you know and you buil up that skill set and so like if someone's working at a Healthcare company and they want to go work at a Banking Company you may may not want to put like you can talk about all the health healthc care stuff certifications you might have and all but you're probably like I understand certifications and compliance type things that would make it I'll have to learn this in the finance industry but I can figure it out but I don't I'm not going to show up day one knowing all of that and but so I think you could you know if anyone listening is like domain expertise from working in a specific field as opposed to like nobody has domain expertise in tech tech is kind of like the uh implementation detail through which the product is created I can I can speak a language uh well there's some people at the company they need to speak this one particular language yes I can do that um may not be like but can you talk about these other Concepts and the this stuff in the domain so I think that's you anyhow so your question was how many like What proportion of your uh clients at Planet orgon are what I would narrowly Define as tech companies in the sense that they're creating software products um it's interesting uh even the companies that I'm we've definitely worked with a lot of tech companies over the years I think right now it's probably in the range of like 15 20% of our clients okay okay so so that that kind of matches with the global like the actual like us industry is Tech is just a small part of that right yeah um so do you think that uh a developer going to work for like one of your you don't have to name a specific client but like what do you think the chances are that a developer going to work for one of those clients would likely be able to work for 20 25 years and you know get the the gold watch and get the retirement and all that stuff I don't know if that stuff really still exists anymore but but basically be able to save up enough money that they could actually retire at some point like and and that they don't have to be careerly jumping from job to job just because it pays like 10% more each time and and that's the strategy of course many developers employ conventional wisdom is if you change jobs every 18 months or so you're going to maximize your income over time by by doing that and that if you stay in your current job you're less likely to be able to get AR raay because you wield less bargaining power because everybody wants to stay their job they don't want to have to go through the gauntlet every 18 months of trying to get a new job right true but like what proportion of those clients do you think that like people could realistically plan to work there indefinitely you know I mean you take like take Nike as an example like that is definitely a place people can can persist for a long time um the it's interesting because I think there's a lot of uh companies are that we're working with where they're a lot more distributed now and I think that sense of identity in organization and the remote world is hard for me to wrap my head around in some ways like we're a remote company now we weren't up until the pandemic and interesting so you let your lease go we let our lease go you know we had but when that happened we had already talked about maybe downsizing and maybe having s hiring people a little bit further away not just focusing on you know because basically we were 90% of our team would always be based in Portland and so I was like who are the best people that we can afford in Portland Oregon you know who do we move out here we would move people um you we move people here maybe two years before the pandemic we'd moved them to Portland you know and so and we'd also have to think who else is opening up shop in Portland airbnbs you know setting up an office and are they potentially now a competitor for our talent you know um because they use Ruby on Rails for some of their stack at the time and so those are the things you used to think about in a location based thing so I'm thinking about like company people sticking around at a company for 25 years 30 years and in a remote world I'm just like there's a part of me I like have some trouble wrapping my head around what that looks like and the sense of like longevity and getting that go you know like and there's there's been companies that have been able to do that for you know the last couple decades I'm just not as familiar with them I don't have a lot of reference points I'm just like yeah because there's another part of me it's just like it feels very you know like it seems like everybody that works to plan enjoys it they raid us well we got you know awarded you know one of the best places workplaces you know it's like this online thing last year and I'm just like but but it feels different for me you know just being completely honest I'm like this is a really different thing era for me or I'm trying to get R my head around how do you bond with your team and what is what is what is it what is what is it that you like because we don't have I'm not able to make you waffles on January the first first the first day first business day of the year that was always a tradition like how do we we don't what is it about some waffles in like one of those uh those boxes with the dry iceers something the probably would very good waffles so I think is it's an interesting thing where I'm um to answer that question like I have no clue like and I'm not going to pretend that pretend to know I'm just like will people want to work and sign into someone's whatever in 10 years whatever the equipment of someone's slack is and every day and chat with each other for like at some point you're going to want to chat with other people I don't know so yeah I mean who knows maybe we'll have teleportation or something like like or it'll just be like trivially you know easy to get around the world and we'll we'll figure it out some sort of system that doesn't emit tons of carbon every time we get on a plane who knows uh but uh yeah I I can definitely see like remote work throwing a a wrench in like longterm planning and and like our intuition for team Rapport we're fully Re remote free C Camp and we've got about 30 people around the world working on the open source code base and working on instructional design and uh you know like we we meet for you know one 30 to 45 minute slot each week and the rest of it is just kind of ad hoc meetings and stuff and how do you build rapport well you know we're flying people into Dallas to to hang out for a while What proportion of your team is in Portland though now let's see there's what four so there's four of us here now um two of them we hired after the pandemic started um so only one person because my business partner moved out of moved moved out of the area during the pandemic so um so yeah we have one person that was pre pandemic from Portland that's still with us so we've just had to get used to a cycle of constant change so I think that also speaks to why it's harder for me to wrap my head around plus long term there and like now I'm thinking more of like there are certain types of business entities we can we have had clients that we've been working with for you know 8 to 12 Years yet we've been able to show them that we can have Engineers on our team come and go and we can manage the projects keep continuity and persist like some collective knowledge about how to keep these projects running and stuff like that so that's one of our so there's a now A Thing part of me it's like longevity is important with employ I want employees to want to work here as long as they are but also 10year length is less of an emphasis now I think because I'm just like this might be a really good opportunity for someone for a few years you get a lot of experience maybe at some point in their career we're either really good place for someone early on in their career as a junior developer to get exposed to a lot of stuff that could be really valuable to them and we're also a good place for people that are further along in their career and they're maybe they've seen a lot and they're like you know what I want to apply some of the skills to a broad range of problems and I can bring in all this knowledge I have across get to work with lots of different projects Now versus just working at one company so that's kind of our our recruitment strategy in some ways now is like we can hire both ends of that and like the people that are kind of in that middle part of their or early middle like ambitious part of their thing we're not we don't we're not set up to like have lots of promotions we've got like a couple tiers yeah um and that and we can't keep raising our hourly rates at the same rate that your salary range wants to increase go work at that startup that's getting funded and can offer those other things like what I promise you is you're going to get we're only going to ask you to work this much a week we're going to work on different these types of client projects it's going to be a little messy you're going to need to be okay with that but you're going to get a lot of exposure to things and we're not going to call you on the weekends or in the evening to work on things unless there's like a really big fire that we need your help with otherwise we just want consistent stability and we want to do good client work and enjoy the rest of our what the other projects we've got going on in our lives yeah I mean that's a huge selling point for an employer to just be able to say no we really mean it we're really serious about you know the 40hour work week and not having to be like patched in constantly on slack or whatever right um so yeah cudos you for uh figuring out kind of like a proposition where you can compete with you know companies that have way more money to throw at developers um one of the things that you know strikes me talking about uh longevity in careers is you know maintainability in software and continuity in having that code base that's been a core focus of yours and I'd like to shift gears a little bit and talk about the maintainable podcast excellent podcast which I've enjoyed listening to before I do I just want to point out that earlier I joke that teleportation might be possible in like 15 years I just want to say that I think that's probably the least likely technology that we'll have and I don't even think we'll have teleportation in the 24th century when Star Trek is happening I I think it's it's such a hard problem that I doubt it will actually exist so that was a joke for all the uh physics people that are listening in uh the doctors all the people out there that are like the philosophers um thinking that I I don't want them to walk away thinking that I think teleportation is going to happen anytime soon so um you've done 160 episodes of maintainable 160 episodes so you've really you know maintained that podcast and you've optimized for you know longevity in that podcast what's the core focus of the show consistent conversations I think is part of it a consistent formula the the the way I look when I started the project there was a couple things you know you know useful to mention about how I think about approaching new projects like when I started that particular the podcast but how I think about projects in general now um but I knew that I wanted to have conversations with people that I felt like would hopefully still show to be relevant and valuable in then you know 10 to 15 years after the conversation was had and so I wanted to have conversations with people not not about what's new what's exciting what's the newest trends I mean that stuff occasionally you know trickles into the conversations you know like teleportation we don't talk about I don't talk about the future and stuff as much and um mainly because I don't know it is and I'm not g I'm not a good predictor of these things but what I do know is I've seen a lot of consistent problems resurface regardless of the technology platform I also wanted to have conversations with people that are not specifically you know I I'm I'm a Ruby on Rails software engineer was Robbie on Rails think that's my company's core Focus for the most part we also do some react and some other stuff I don't personally do much react maybe written like 20 lines of react code my whole life um it's not the it's not the thing that kind of excited me because again I'm more excited about what can I do than what I can do you know what the the technology itself was and we already had enough client work to keep me busy working with Ruby and rail stuff so the so when I did the maintainable software pack podcast I want to have conversations about what were some good different people's perspectives on what it meant to be a to maintain your software to what it what wellmaintained software looks like what it feels like what it's like to work with it on a regular basis what's what is it like to join a project where there's already a lot of existing code because I think a lot of people in the education because it's just the way it ends up working sometimes is that you you get to learn how to build new things what when you you get introduced to programming and again like I we talked earlier at the very beginning of the conversation it was like hey if you write all this code you can play this game but it'd be like what if we could modify it how do we make how do we update it how do we improve upon it how do we make it easier to develop with how do we remove developer friction that stuff is the stuff that I'm most interested about because I felt like Ruby on Rails when I was interested like it removed a lot of friction made a lot of decisions for me and It produced better easier to build things but then it didn't prevent problems from occurring still within teams knowledge getting lost documentation problems um how we think about testing and how we have conversations about technical debt and overdue upgrades and how do we work with people that don't understand what tech de Tech debt is or do we even use the word Tech debt yeah let's just describe Tech that very quickly like two sentence explanation of what that is for anybody listening who doesn't uh understand that concept yet yeah this is a question I ask almost every one of my guests and it's very rarely consistently the same so if even my definition is going to be my version of it so I see Tech Deb is um the things that are that have accumul like kind of we use this metaphor because because it kind of goes back to like you you get debt and you pay it off is kind of like you know in the you know when you're getting a loan for something and we've kind of we've taken that and maybe stretched a little further in our industry some you know I don't think I like to use the word technical debt but I like to talk about it in the sense that it's it's I think the best example of it and it should be six two two sentence I'm not doing a very good job at that uh defin this is why it's I think it's why I love asking the question is it's hard uh to answer clearly because it's I think of it as like the you've made some intentional decisions or maybe even subconsciously decided to forgo something to get something done now but you're probably going to later going to need to later come back and revisit something but maybe something's good enough for now or you've said this is going to get this this code change is going to get out the door but you know we probably in you know down the road a little bit we're going to need to go back and revisit this thing because this is not going to scale for whatever reason and so there's that where's that balance between is it is it a debt or is it just like a concession that you made a tradeoff it's kind of like I think tradeoffs is maybe is a better way to frame them sometimes but I think another way to look at is like you can go to any team you be like what are like ask every developer on a team five things that are causing you friction in the code base or things that you feel like we're we should have changed a while ago everybody can probably sit down with an hour or two and make a good list of five things will they all match I don't know um but that might go into a technical debt backlog and then there's kind of Maintenance work that needs to happen so you're building new features and occasionally you need to go take care of some like overdue behind the scenes updates refactorings upgrades you know migrations is from one search engine tool to some other you know fulltech searching tool what whatever the thing might be because it doesn't it's no longer being supported or it's you know it's going to be a problem down the road so it it's kind of like was not a super clear answer but basically like you're kind of debt financing getting things now yeah and you are going to eventually have to pay the piper so to speak and uh fix those things if you want to have code that continues to work one one thing that I want to make sure everybody listening to this realizes that that I think a lot of people may take for granted nondevelopers and developers who are just getting into the field it's just how quickly software starts to break down there's a craft an important part for teams to figure out how they're going to regularly it's like when you you build a a a physical building and no one's kind of confused about their needing to be regular upkeep on it right and so I think it's we talk about I want to have this conversation with a lot of with with our industry because there are times where we build things for whether you're you're working on a part of a team or maybe if you work at a company that's founded by probably some people that understand software you understand this but I work with a lot I've worked with a lot of companies over the years where they build something and they're like What's the we need an estimate buil to build this piece of software and so someone built it for them and then they're like great thank you we got we need talk to you later and then they're like hey there's a bug like a month later like what do we do about this there's a performance issue or this weird Edge case so there's like regular okay we need to spend money on we need to invest time developer time into just taking care of those types of requests but they don't always realize that there's all these other little things behind the scenes that they're not requesting or their users aren't requesting but are just like hey look there's new versions of things there's security patches that have come out um Apple has their own chipsets now and the version of Ruby that we were running on is no longer supported or no one's compiled it yet for that and so if we get a new our developers get new laptops all of a sudden we can't spin up the application we need to upgrade Ruby and we need to patch things out in the production servers what have you there's security patches that need to get deployed so all these like little things that need to happen but your team needs to have like a cohesive workflow for regularly taking care of that stuff you can automate some of that stuff now with some tools but you need to take care of that stuff and there's but there's still a lot of things that are just more like code Centric things that like oh we designed it this way because that was the pattern that was kind of invogue at the time two years later we're now we're starting to see that we're having to work put a lot of workarounds because it's not quite we didn't quite use it the way we thought we would maybe we need to revisit this part of the application to simplify it or there's a lot of companies that you know there's a lot of conversations you know 10 years ago about let's all move to microser like you know let's break everything out into lots of microservices because then everything's kind of these bitesized pieces and it all fit together and it won't matter if the microservice isn't there our team is scaling like crazy we're hiring 50 new Engineers every six months that's what going to keep happening so this will be the best way to keep everything kind of scaling for us and then fast forward 5 10 years and they're like the team's now 20th of the size and responsible for the amount of microservices that a team that was four times as big generated and they're like this is too much for us to keep in our head heads and what how do we manage all this stuff and so that becomes a maintenance problem and just like thinking about as your the decisions you're making at different points in the life cycle of a software project can come back and haunt you and and I want to have those stories and let people know that they're not alone that these are common things and also to remind people that most of software engineering isn't getting to be there day one to spin up the new application and get to build the new features a lot of what being a software engineer is maintenance work making small up bug fixes figuring out the quirky performance problem trying to understand why something was working in a really weird way retesting things and so that's the conversation I'm trying to have with guest on maintainable awesome yeah it's a great podcast and uh one question I had for you is like just off the top of your head for somebody who's totally new to listening to the podcast who's been doing software development for a while wants to be learning more and thinking more about maintainability of their code and of their their company's codebase and everything is there a particular episode that just jumps out at you is like oh this episode like I'm so proud of this episode you know it's a good question thinking about a couple that come to mind you know you know this is this again this is over almost five years of episodes 160 episodes yeah um so for that sort of like early on you know I'm thinking of Sandy Mets oh yeah as is one was one of my favorite conversations on there very famous rails developer yeah and rubius and objectoriented programmer and just like hearing her talk about like oh I'll just be in a in like a ruby object in a class file in a ruby thing and she's like I just start adding more classes to the bottom of the page and I'm just like what are you talking about um it was I learned a lot from that conversation um yeah that's one that quickly comes to mind I'm include that uh link to that in the show notes the video description on YouTube uh everybody check that out I I am also going to include do my shell which is just this fantastic article that you wrote many years ago and and you actually came on the free Cod cam podcast and read it uh Episode 34 uh back in 2018 uh so like instead of trying to drill deep into the story of Zell om my Zell and uh the open source you know boohemoth that you have set into motion uh I'm going to encourage people to to listen to that but one thing I do want to talk to you about is the Synergy uh you have this very popular uh one of the most ubiquitously used certainly on Mac uh tools uh command line tools and you also have this podcast about maintainability you of course have your uh Robbie on Rails blog that you were updating as of you know four or five years ago um and and of course you've got the consultancy planet argon and I wanted to think about like how those have those kind of like Voltron together to create like the ultimate like lean mean like Robbie Russell publicizing machine over the years like like do people come to you and like oh yeah I'm a huge fan of om my Zell or I'm a fan of the podcast like does that resting client work for you all you'd think you know I get this from a lot of people and they they're surprised to find out that it it doesn't really I can't say that like a lot of my clients probably give a or even know what the hell om Zell is occasionally I'll be on a call with a client and they might have some engineers and then they they they might know who I am or know about omz shell um and and so they'll come like oh I was talking with some because it's usually someone in like a different department it's like I'm working with someone like in some logistical part of some company and they're like this like this manufacturing company and they have like a fulfillment center and they're I'm talking with someone there and they're like hey we have this thing built with rubby on RS blah blah blah you people showed up in our Google searches and seem to be reputable um so I feel like we can talk about these things like I also have a podcast or omell is another thing so the thing that I I think it's helped the most though is we do get ref referrals you know we get referred from peers in the industry so that does end up being a way that we've gotten some of our projects over the years um where it might be Freelancers or some other agencies that are deciding to no longer be an agency or they maybe they got acquired or interesting so if an agency is going out of business so to speak then they'll they'll kind of like pass on their clients to you they try to like help them help rehome them it's like a natural thing like you want to if you have a long relationship so sometimes that they have like one or two big clients and they're like well this is something they've been working like we have we had a client that came to us or a company come to us a couple years ago with a large client that they'd work with for like 15 years um a couple different Technologies but they primarily use Rand rails and they're like yeah like the owner of the company had some health issues he's like I'm retiring closing up shop and this isn't like I want I want to put them in good hands and you you seem like you can probably carry them the next 10 years can you be that company can we can we trust that you they'll be in good hands so that stuff that that occasionally happens and so if you're running an agency you think you're getting out of the you know call plan Aron anyways uh but as far as like that the the other part of that the you know it was funny this last year I went to um a conference in where was it it was in Amsterdam called rails world and I was there I was I I I interviewed the rails core team that hosted like a panel discussion like an AMA thing that I I ran and I I I was meeting people there that knew me for omay Z shell and they're like why are you at this conference like why why rail it's interesting so so like you got your om my Zell like super user fans and then you've got your rails blog fans from back in the day and then you've probably got lots of people who you just just know you from your work argon right like so it's almost like they're like three different kinds of Robbie Russell fans yeah only like connect the dots no they don't connect the dots and so I was like at the rails conference I'm passing out omel stickers to people and I love that I mean it's like and like a lot of people like I didn't know you were a ruby developer I didn't know like I'm like I'm like I'm like oh Mya wouldn't have existed if it wasn't for the ru and rails Community like all of the original ideas came from other rubyists and I shared it with my Ruby on Rails community and they shared it and GitHub was written you know was written with Ruby Ms and it was one of the first big siiz project open source projects on GitHub early on and it's all kind of like connected in this weird way but like you know fast forward 10 15 years and actually yeah I think om Zell turns 15 years this September August or something so which is wild to think of that that's had its own lifespan but it's not but it was it came out of like a rubyan Real's developer working with his coworkers and wanting to have some consistent uh shortcuts and little tricks up their sleeves to to improve their their their efficiency and the command line yeah yeah awesome well congratulations on being able to interview the rails score team by the way that's a really cool honor yeah so we're getting toward the end of the podcast we've been talking for a while and we we've covered so much but I just wanted to delve a little bit more into your you know very interesting personal life like I don't have a lot of guests on here who are in a post rock band and you know play guitar and do sets and release albums and and they've been doing that for a long time maybe you could take a moment to just talk about what post rock is uh for the uninitiated and like what your particular band uh how you all approach it and maybe what the name means like a what is aula is it just like like a place or oh um so the band is named The Mighty moua Missoula okay moua I didn't pronounce it correctly it's a place right uh there's a place called Missoula Montana in the United States uh which is named after something else uh as well so so first on the name the the mighty Missoula is a reference to many many many years ago this before most of us were in on in before there were a lot of humans there trying to remember how many years I forget how many years ago it was there were a series of large floods that swept across the Pacific Northwest and helped carve out a lot of like the Columbia Gorge which if anyone doesn't know but the Columbia river goes Cuts between Oregon and Washington and quite a bit of Washington state is is like a massive um River and so there were floods that were basically started because there was this uh glacial Lake in where where is now like modern day like Montana where is this huge glacial Lake and it like I think it bursts through about 12 times and just would flood all the way almost all the way to the Pacific Ocean like that's how massive of a lake it was that it would just sweep across and so drastically impacted the a substantial portion of you know the United States was underwater at this point flooded you have any idea what like geological ERA this was like double check it's the um this was during during the end of the last ice age okay so and so when so the the band it's called The Mighty Missoula and that's a reference to these floods one of the ideas was like the Missoula floods or something like that and we thought that was too obvious so we went with the mighty missula and people could ask us what the name meant and we like well there's these floods it's a GE geology nerd type thing um because and it kind of shaped the Pacific Northwest um landscape quite a bit there's lots of areas you can see where where the flooding impacted there's debris and like huge rocks in the middle of like areas that do look like why is there a huge Boulder that's like 50 feet tall yeah how did I get there um because it was it was a rock and a big flood anyhow um the so the mighty miza is we're a post rock band in like we're basically we're instrumental kind of art rock band and post rock is a genre of music that's you know it's funny now it's like it was trying to be not kind of break some of the rules of standard rock music and try to like let you you can just like drone on about things and not have to follow a lot of super consistent formulas for how you write and produce your music it can be more ethereal atmospheric um I like to think about the music that I listen to when I'm working whether I'm writing code or I'm emailing I don't like to listen to a lot of music with vocals and so a lot of music that resonated to me and like early on in my you know think back it's funny music ends up you know being this like thing that you can connect to certain periods of your life like um I remember listening to like a lot of Boards of Canada and which is not um postrock but you know there was mostly instrumental yeah similar drum stuff qualities in terms of being something you can kind of like listen to in the background and it's yeah you know like the ambient of the 1994 everybody called that ambient back then right and then it would just feel like I guess like Apex Twin s ambient Works to ambient right exactly and so there's so like bands in that realm if you know couple of bands like sear Ro is kind of considered a post rock band um explosions of the sky from you know from down in Texas where you're at um MW Gods Speedy black Emperor you know I was listening to a lot of this stuff in there you know like 2001 2002 um got to see explosions of this guy the very first time they played at some small Club here in Portland Oregon and I was in a goth rock band at the time this was probably yeah maybe 3 and two or so and went to the small club and saw them CU I found their music on Napster or something and went to go see them play and I remember thinking they're a band without vocals how interesting could that be and I went there and I was like this was like one of the most engaging shows I've ever been to I was like just enamored by what was happening how I felt with the music and I was like and I was in a band that didn't really like my singer all that much and the drummer or the bass player and I had talked about like it'd be cool we always like when we're just jamming on stuff before the rest of the band gets there and we start working on our music like like just noodling on things like let's start our own project so I my first post rock band was back then it was called the vacant we did that for a couple years and then Planet argon took off and the Bas player she got pregnant and our lives kind of went a different direction and then so for years I wasn't really playing music but um about I think maybe going back like seven no probably like nine years ago now I think I was like looking at my equipment and occasionally playing with my guitar I was like I need to collaborate with people again and and so I didn't feel like I was progressing personally by just playing like I'm like oh I'll work on my own music and right stuff I play a couple different instrument I can't do drums or anything but I can at least make some interesting ambian type music with guitar and some bass and stuff like that and some synths and such but I was like no I want to work on a project with other people and like let's see what comes out so posted out on Craigslist you know found a drummer found a bass player over appear time start putting together a band we you know we start writing some songs we pick a name we record an EP and then our drummer moves away for for journalism school I have to find a new drummer and then like he has different skill sets can do a lot more recording stuff as well we our skill set drastically improves our WR songwriting evolves write another album then the pandemic happens we're stuck at home we during the pandemic we were we our album release so we printed vinyl we were releasing our album April 2020 we were planning like our you know launch show you know album release made vinyl we were super proud of this thing we're like we're going to put together a tour that summer we're all stuck at home um okay maybe not and so then during that period we IID wanted to work on some more ambient stuff like let's strip away the drums our drummer can do a lot of s and and soundscaping type stuff so like we we all stuck at our home so we decided we would make an ambient album and we would pass files around the cloud it was all cloudbased themed um so we did that as a way to continue writing together and build up some new skills during that period and that way we knew that when we got back together post coming out of you the the next album that we're working which we just finished recording a month ago and we're now in the the final mixing stages right now so that'll be released sometime this summer um so that was pretty exciting and last year we got to go play a festival in the postre f in Indianapolis so we did a tour across the country to that and back and played a lot of shows with anywhere from four people in the audience to you know several dozen you know type of thing to playing at the festival with like hundreds of people there and that was pretty exciting but yeah it was it I'm kind of I kind of look at it as like it's it's a hobby I'm not this isn't going to be my career by any means who knows but it's kind of like a little bit feels like cosplay sometimes um like it's like we're banned we're we're doing this fun stuff but like it's a fun hobby and and it keeps me you know out of the house a couple days a week to go work with other people on and it's not my project it's our project I might have posted the original Craigslist ad and so I think in some ways I'm like the leader a little bit I have that project management skill set but I'm not but it's our band it's like yeah do you ever have to like kind of like suppress your manager I mean you're a CEO so like you're used to like figuring out what needs to be done and like listening to everybody's opinions and then making a decision and people are expecting to go along with it that that doesn't really work in your band though right like is it more democratic or or are you somewhat autocratic it is it's it's a lot more democratic sometimes we'll have conversations like who cares the most about this particular decision there's you know I gu like our our drummer I mentioned has like a lot more he went to school and he has a background in in uh Sound Engineering so like things on that realm we kind of defer to him to help make a lot of decisions and kind of guide us and teach us through it but he also has a really good knack for being a good producer which is you know and and that's and someone that can help unblock us or help like when you're recording something in front of other people and you're trying to figure it out it's like I think I think about music I think everybody has this idea that you write the music and it's all perfect and you're going to play it the same way every single time and it's like that's not what happens I just watched Quincy do the uh intro song like three times um and they all sound a little bit they all sounded great three different times um different ways and that's that's the way it works so like sometimes you're kind of like you don't remember how you did something or it doesn't quite feel the same when you actually go to record it and and like someone has an idea like no do it the way you did it originally and you're like I don't and there's there's a performance aspect as well it's like sometimes I want to play the Baseline just like it was on the record but maybe mechanically like I get tripped up by some sort of like jump or something like that yeah and uh yeah so can't reproduce everything and yeah you don't necessarily want to that's why people are you know still bootlegging grateful Day concerts uh I mean how many concerts have they done and there's probably a recording of pretty much every single recording and fans will listen to all the different versions of like very similar kind of like I guess and jazz is an entire art based around the notion of having like kind of like a motif if you will and then like diving into you know jamming essentially it's true the um it's just that's the thing about so to answer your question yeah I don't feel like I have to put my CEO in hat very often I mean I'm usually the one that's like over looking finances for the band and like dealing with some of like the the paperwork when we're negotiating some stuff for like a a festival or shows or something like that but um but otherwise yeah everything else is very collaborative and and and I kind of like let them drive a lot more of some of the songw writing I might have like some guitar ideas I have and but they're definitely I'm surrounded myself with people that are much better musicians and so I get to kind of grow with them which is a thing that I appreciate about like the types of projects that I do like you mentioned omell the thing about omell it's like I might have planted this flag once upon a time that here's this kind of concept and the structure I have and then and immediately I was like please contribute and now we've had over 2,000 people contribute code to the project and so I'm just like it's it's become what it is because of the people that decided they wanted to participate and they felt like they could and maybe I made it easier for people to contribute in some way or at least made it inviting and that that's helped you know after we finish this I'm going to hop over to an omell maintainer meeting with the two other people that help maintain the project and I've never met them in person yet actually hoping to do that in a few months actually um but it's just like I I just Sur and that's why I don't I didn't like being a consultant an early era Contracting thing you know outside of my you know I mentioned my partner that was a designer we would work collaboratively but I didn't really get to feel like I was up leveling as a developer because I wasn't really working with a lot of other peer developers very often just kind of like figuring things out myself and so I felt like I've excelled the more that I've leaned into working on projects that involved other people to help get the thing done and other skill sets people that were better programmers or deeper programmers in certain things and there was Project managers and there was a designer and there's and the collaborative aspect of working with the client or other people to bounce ideas off of and like to review my code or for me to review someone else's code that's that's the world I like to live in and so like we'll talk to a lot of people that are Freelancers and I'm like I don't understand that that world like how you've decided that that's the thing you want to do I'm like what's wrong with you why don't you trust people U I'm kind of jokingly saying that and and it's like but what what is it that you're like I want to just go do my own thing and maybe and that's like an interesting thing for me to wrap my head around because that doesn't make sense to my brain but I um so even though I thought I wanted to DIY it it was always about like I wanted to do my thing but I didn't think that it was going to become this thing with employees as soon as I had that around me I was like oh how could I do this any other way this is way better yeah well so to some extent your DIY spirit is like a victim of his own success a little bit Yeah Yeah well uh I just have one closing question uh because you know Portland seems to be like a really key aspect of your life you know you chose to move there you've stayed there much longer than I've ever lived in any one city um and if somebody's going to Portland for the first time what is something they hands down should consider taking a day to do if they're ablebodied to leave Portland and go out to the gorge and go on some hikes or a hike somewhere there's a couple great gr hikes feel free to write me I'll give you a list of a couple things depending on your I would say your ability to threshold of how much pain you want to endure or not um so that I mean there really like so much of like the thing I love about Portland is so close like 30 minutes away and you can be hiking in some pretty gorgeous areas um reminds me that early on there was a rails conference we we we shuttled a couple buses we rented some bus charter buses and we took a bunch of Ruby on Rails developers hiking one afternoon as a way to like let's go do this and like let's show you outside but if you're in Portland one thing that I would do like inside the city is honestly I think just like you know it's like cliche to like talk about if I like wandering the coffee roasies and getting to check out different coffee shops and stuff like that something I enjoy doing in any City so maybe it's I feel like that was more of a thing more of a Portland thing early in the air and so I still think about that which kind of just got me excited when every time I travel now I'm like I want to go find the coffee roaster STS and try coffee but that was more I feel like that still leans on being kind of slightly more of a Portland origin type of thing so I think checking out some of those old coffee roasteries is a thing and is there a specific Street a specific Street where like a lot of them are collocated or no they they're all kind of around now um like the what ends up happening is like the places that are on the the more popular streets they might turn into chains and then it depends like I don't want people to judge me because I'm like oh Haw ha's ha's still cute um but I'm like actually I don't know if any of the roasteries there are the like actual roasteries over there right now so they're all kind of like scattered a little bit okay but Hawthorne is like a destination that a lot of people might like if you're a total Portland novice and you're just looking for a single word remember Hawthorne it sounds like is uh get hop in the the taxi take me to Uber uh take take me to Hawthorne and stuff on it right exactly that and Andor uh and then hit the pals on Hawthorne but if you have time go downtown and go to the big PALS like that's still our our independent bookstore there is PALS huge so definitely spend hours there awesome well Robbie it has been an honor to have you on the podcast again everybody who's listening to this be sure to check out Rob reading of uh his St my Zell uh article uh which I'm linking to in the show notes also check out that Sandy Mets episode of maintainable and uh I'm going to also link to one of your recent live sets that I found on YouTube uh from the mighty Missoula um and uh yeah thank you so much for coming on thank you for maintaining om my Z shell which like I think most of the people on pream team use it probably on a daily basis um and uh thank you again for just being so so giving of your wisdom from running a consultancy the past 22 years and all the lessons you've learned and being so candid this is really means a lot because people can this is like the unvarnished like implementation details of running a to right yes I don't have a uh I don't have a a publicist to help me figure out how to better frame my narrative and thank you Quincy thanks for having me on thanks for everything that you and code Camp are doing um thanks for introducing for being part of the reason why I've met such a good friend here in Portland Abby through Abby editor for free code Camp uh you've almost certainly seen her work even if you haven't directly read an article by her I need to pick up that book uh getting things done as well I'm excited about that new book on freeo Camp press check it out uh Omar rosenbom wrote he he is a git Enthusiast to say the least he writes like a 300 page book on git so that's wonderful check that out yeah until next week everybody happy coding