hey everybody welcome back to code 30 things in 30 days with css3 today is day number nine and we are going to be building some modern layouts using css we're going to be using some media queries and we're going to play around to create some modern layouts so i'm going to show you here in my browser the final result i'm going to scroll down here we have modern layout number one just this is basically just a structure so we're not creating like a web page or anything per se we're actually just almost wireframing in the browser so you can see here we have the header this blue background is what um delineates the header down here we have an article with body text and over here we have an aside so we're using html5 for this and then at the bottom we have a footer and so we're going to style that to create that layout and then obviously you can use that layout to create modern uh basic modern blog layout modern layout number two we have a header up here again with a logo on the left side and a simple navigation on the right side we have a left hand sidebar using an aside html5 tag an article in the center and then a right hand content sidebar and then the footer and modern layout number three uh we have basically a little bit of a flipping on the header here so we have the navigation on the left the logo on the right then three articles in a three column grid and then the footer and so up here we're going to be working with that in our sandbox we have the i have the html already written for you all you have to do is use the css to create those layouts and so we're going to do that today in this lesson day number nine let's jump into our code editor so download modern layouts in this lesson go ahead and do that get yourself started pause the video do what you need to do and then open up the sandbox.css feel free to familiarize yourself with the codes the html and the final css so this is the html you can see here that in the sandbox we're using uh html5 tags so sections headers articles asides and footers and we're just identifying each section with a class so that we know which section we are styling in our css and there's a little bit more involved in each example in each layout example and then in the final css you can see all of the final css so if you need to go ahead and refer to that for a reference or anything like that you can certainly do that jump in your sandbox with css and let's get started with the very first layout modern layout number one all right let's start with uh the class of layout one article so i'm selecting the class of layout one in our in our index here you can see each of the sections are uh titled with a class layout one two and three respectively we're gonna start with layout one article we're gonna give it a width of 58 percent and then we're going to float that left let's move down and style the layout one aside we're going to simply give that a width of 40 percent and float that right and then we're going to go ahead and say layout 1 and then footer we're going to clear both because we want we need a clear fix for that that's going to create an issue it's going to collapse the two floats are going to collapse that uh on each other so the footer is going to create an issue but i want to actually just hide that for now and let's see what we have in our browser let's head over to our sandbox and you can see here the header is fine we haven't done anything with the header we have the article which is the uh well the article tag and it's floated at 58 and then we have the aside at 40 so those fit nicely but of course uh the footer here is collapsed up into those elements and that's because it needs to be cleared it's a very common um web design issue when you're coding with floats so all we have to do here in our browser sorry in our code editor is clear both you can do clear left or clear right but we're going to clear both so that we can just get it over with so now back in our browser you can see that that modern layout number one is complete and it looks fantastic that literally took seconds now let's move down to modern layout number two this one is where we're going to have the logo be on the left side the navigation on the right we're going to play with the aside the article and the side so we have two sidebars and content in the center so jump back into your code editor give yourself some space and we're going to add modern layout number two using our styling conventions we're going to select layout 2 the class and then we're going to select the header within that and then logo so pretty specific selector and we're going to say width for the logo is 20 we're going to float that left and then we're going to give it a margin of zero now if we go below that we're going to do another thing here and we're going to say layout to header and nav all html5 tags here trying to be as semantic as possible with 78 and we're gonna say float right margin zero let's save that and see what happened in our browser so we have the layout looking nice for the logo and the navigation we're using the 20 and 78 and the problem here is uh the parent container the header has collapsed on itself because now it has nothing to hold it open and that's where we're going to use a clear fix so let's jump back into our code editor and we're going to do a little bit more um solid of a clear fix here it's a little bit different because this is the parent container that's collapsing rather than a sibling element that uh kind of collapses within uh you know up into those the layout that we created in our modern layout number one the parent uh container here is collapsing on itself so we're going to do a little bit different of a clear fix so i'm going to say and it's uh it's very simple and very nice so we're going to say layout 2. header this is going to be a virtual last child a little pseudo element there and then we're going to say display is table content will be just an empty string and then we're going to clear both that's going to create an element a pseudo element using the header after so at the end of the header there's like kind of a ghost element that you can create using this pseudo element here and we're going to make a display table that can't collapse the content has to be an empty string for the pseudoelements because if there is no content it won't appear but if you have content and we're just going to have an empty string you could put text in here and that will show up but we don't want that and clear both just to cover our bases let's head over and see what happened in our browser okay over here we're going to go down to modern layout 2 and that solved the problem right here so the logo the navigation and the header all look good because of our simple clear fix to prevent collapse let's move on back in our code editor we're going to jump down and we're going to style our article so we're going to say layout layout2 article we're going to give that a width of 50 of the entire container parent container margin left we're going to say 2 percent and we're going to float that left and let's select again here the layout to a side and a class of side nav so that is the aside html5 tag with the class of sidenav so that is going to be a navigation on the probably the lefthand side here let's say width is 23 percent and we're going to float that left and then let's move down one more layout two and we're going to say a side and a sidebar which will be on the righthand side and we're going to say width 23 and we're going to float that right we're going to save that check it out in our browser modern layout number two so we have excuse me our left navigation bar here our article and our sidebar great the problem is our footer is collapsing up into those elements you guessed it we need to clear fix but we're just gonna we're just gonna actually just do a simple clear rather than the the clear fix we used for the header so let's select the layout two and then we're gonna select footer and simply say clear both that will solve the problem over here in our browser that looks good modern layout number two beautiful now let's jump into modern layout number three that one is going to be where the logo is on the right the navigation's on the left three column grid for the articles and then the footer at the bottom so let's jump back into our code editor and we're going to give a little comment here and say modern layout number three and let's select layout three header and then logo width is twenty 20 float right and margin zero layout three header nav and we're going to say width 78 float left and then margin zero and now that is going to create a problem with the header being collapsed like we did before so we can type that out again layout number three header pseudo element after we're gonna display table we're gonna add the content as an empty string and clear both i will solve the problem for that so let's go back and check out modern layout number three our header looks perfect with our navigation and our logo now let's make those that three column grid with the articles we're gonna say layout three three article we're gonna select all of them we're gonna say width 32 float left and margin zero two percent zero zero now if i save that and we view that in our browser let's see what we have we it looks like we have an issue so we have two articles here the other article is falling down here and it's falling behind the final result element so there's one two and three so there's a problem there let's jump back over the reason what the re what that problem is in fact just to tell you is there's a two percent margin on the right of each of these articles so that means there's no space for it to fit on this right side so if we remove that two percent margin on that last element it will fit perfectly fine so let's go ahead and do that so i'm just going to have a comment so we know what's going on clear the margin the last article to allow it to fit within the layout simple layout three article last child we're selecting the last child cool css3 trick there margin zero so instead of giving it an id or a class and then styling that class it's just messy not very semantic we're just using css to style that we're not messing with the presentation or the html we're just specifically using css three to fix that problem awesome now this is going to create collapse which we've seen so we're going to do the simple clear fix again we're going to go layout 3 we're going to select the articles element that is the parent element of the three html5 articles and the after uh pseudo element uh at the end of the articles div we're gonna say display table content empty string clear both that will solve that problem let's view that in our browser all right and here we are modern layout number three that layout looks awesome we have everything lined up the footer is being cleared so we don't have any more problems there that looks good and now we could leave it as is but it wouldn't be a modern layout if it wasn't responsive so we're just going to do a really simple responsive fix here so if i were to actually adjust this you can see that the percentage maintains the layout but the text it doesn't really look very good so it's not actually that nice the layouts will maintain regardless of the size of the window but we don't actually want that because you have two to three words per line and that's incredibly unreadable and we don't want that so basically all i want to do is remove all the floats and the widths and just reset that so everything stacks when you get to 768 pixels which is like a like a brand new iphone in horizontal or landscape viewport mode so let's go over to our sandbox.css and we're going to leave a comment and i'm just going to say simple media queries for responsive layouts and then we're going to select the media at media screen and there's many ways to write media queries this way is just a nice simple way of selecting a specific one so this is media screen and max width in parentheses the value is 768 pixels that means screens not print or like a like a like a reading device like a kindle or something like that screens such as your computer or mobile devices and max width this is the most important part of the media query the max width of the viewport being 768 pixels and you can find that information online really easily the viewports the common viewports for excuse me media queries so i'm gonna select layout one i'm gonna do this uh basically i can combine a whole bunch of selectors here so article comma i'm gonna go layout one aside layout two header logo layout two header nav layout two article layout two aside and the class of side nav and also class of sidebar and then we're gonna go layout three article layout three aside layout three header class of uh something with the header with the class of logo i'm selecting logo within header whoops comma just one more here layout three header nav now it's possible i could have what i could have done here instead of written everything out is just selected all articles all asides all headers but then i'd also have to select all logos side nav sidebars that would be fine too would be probably in fact it would be a much cleaner selector but i just wanted to be specific in this case float none width 100 percent and the margin gonna reset everything to zero two percent z uh sorry zero zero two percent like that save it and then check it out in your browser let's see how these all stack when i make this viewport smaller so 768 should pop up here soon there we go that was 768 around there see that switch so now all the layouts just stack and they have two percent margin on the bottom of each element so it's just a nice simple responsive layout so those are some basic modern layouts using css3 and media queries that's it for today's lesson day nine modern layouts hope uh this shed some valuable insight onto on how to use css3 to create some pretty straightforward layouts a lot of these layouts are what you see in uh common and popular web pages nowadays and these uh these layouts kind of concepts you can modify them and change all the sizes and the widths and and organize things in whatever way you want and that's the beauty of css3 you're you have the flexibility to do literally whatever you want in terms of creating layouts so hopefully those examples were nice and simple and kind of gave you some ideas thanks for hanging out with me today with day number nine and i'll see you tomorrow for day 10.