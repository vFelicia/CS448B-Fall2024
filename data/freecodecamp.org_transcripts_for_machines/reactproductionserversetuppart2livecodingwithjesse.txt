hey everybody I'm getting a message that my my stream status is bad so let me know if you can see this if you can hear me my seeing anything in the live chat I know there's a delay but alright awesome now I got it's kind of a long delay on this alright so yeah I had some some issues like two minutes before I was going to start the stream where everything was freezing up so I shut down my my webpack server and my goal server that I was running and I close some windows so hopefully hopefully everything will run all right I have up on the screen just kinda the same reminder that I've had for a while I'm not really going to go over it strings are going to be sporadic the next couple of days and then next week it will get back on schedule the only thing I do want to know is I'm going to be at syntax con I do have permission to do video there either live stream or prerecorded video so if there's something in particular in particular that you all would like to see please let me know you can let me know the live chat when the comments or on Twitter however you prefer okay let's just checking it yeah it looks like the stream is good nobody's nobody's saying there's anything wrong with a stream so just a recap from yesterday where yesterday if you if you were washing it was uh I got stuck on one step of setting up the server a really easy and early step and that's setting up an alternate user account so we don't have to use route all the time and the problem was when I went to copy and paste the SSH key I didn't get the entire key so I was trying to go quickly didn't get the very end of the key and when I pasted it in obviously it didn't work so that was the problem so it's kind of nice that it wasn't you know something more serious but that happens so I should have thought I know later on some people in the livestream suggested that it might be that issue then as soon as I saw this suggest and I I kind of knew that that was probably it so that's that was the problem so now I do have a user and it does work so we're going to login today as this user I set the length for this live stream for an hour instead of a half an hour because I'd like to get through as much the server setup as I can hopefully all of it that's a little bit ambitious so we'll see we have to install nginx and node we'll probably set up on maybe we'll set up the SSL I might wait since the URL that we're going to use it's just a test URL it might not be the real one so we'll see and then hopefully we can get a chance to configure our server our node server using we're going to use Express and see if we can actually get this this app running the site running on the server so I don't know if I can get it done go longer than an hour I have a meeting at 100 p.m. Eastern Time so I can't go any longer than that and it is a meeting about this website so I've been working like crazy to try to get a lot of the changes requested at the last meeting done they were basically just minor user interface changes just some content changes and things so nothing big I got most of them finished I do this show to kind of show you how what things are like for me so I'm not I'm not usually one to complain that much I don't like it but just to let you know how things are going and be completely honest I'm starting to get a little bit burnout because I've been working a lot of hours so just just to give you an idea just to show you I'm going to throw up by my tracking of my hours I know this is probably small but you just see the colors so this is my my time sheet so in a normal day I'm contracted to work seven hours so anything green is over seven seek you can see the additional hours are all here so I'm like at least a week of overtime now just for this month and we're only halfway through the month I don't this so this is like just a lot of work for me recently and the frustrating thing was you know yesterday I put in like eleven and a half hours but I think at least six hours of that was spent in meetings so I don't know that's just a crazy amount of meetings for me that's above average but it's kind of it's frustrating we got a tight deadline and that happens so it might not be like this for all frontend developers but sometimes it just happens you got to put in a lot of hours because you have a deadline there's there's interruptions so I ended up going home and doing some work at home the tough thing was I was supposed to take my son to his karate lesson and I couldn't I had to text my wife from a meeting to tell her I wouldn't make it so that's that stuff I'm not going to get to see my kids for a couple days this week because I'll be at a conference so I really wanted to be able to spend more time with them but instead I ended up going home and doing more work and then putting them to sleep and staying up and doing more work so now I'm now I'm tired and I'm running on on caffeine so with that said I'm still going to try to do my best get this done on time and be happy at my meeting but that's that's just how it goes it's not always like this but occasionally you get a project with the tight deadlines in and this is just how it is so sorry for the you know the complaints the little whining session but I just want to let you guys know how it is you know without sugarcoating it so hopefully next week we launch and things will slow down enough for me to get back to a normal schedule and also when you're working this fast you don't get the time to try out new things and learn new things which I like to do on projects hey everybody everybody's saying hi in the livestream which I always like to try new things but when you have a tight deadline do it you just have to fall back on what you know will work and what you've done in the past so you don't really get to to develop as much at least that's been in my experience so hopefully I get a project with a more reasonable deadline next and you can try out some some new cool stuff all right so enough about that let's get to it if you want to follow along and I'll say this right off the bat I'm going to ignore the live stream a little bit but at the end I'll try to catch up but I think the only way we're going to get through most of this is if I don't take very many breaks to answer questions in the livestream if I do miss your question like and you have to go and you can't stick around for the whole livestream I'll try to answer it at the end or you can put it in the comments and I'll send an answer to you when I get a chance to see it later on so in the description I've linked to two tutorials on digitalocean the first one we did yesterday and that was how to set up a boon to on a digital ocean droplet the second one is what we're going to start with today and that's how to install nginx I just so somebody yeah somebody was there yesterday and that's what was it was the issue it was it was a copy and paste error it's kind of embarrassing but I was just trying to go too fast and didn't doublecheck that I copied everything that the problem was actually normally I would open my like my SSH key on my machine I would open it in an atom and then I would see the whole thing it'd be easier to copy and paste but I didn't actually want my my key to show up on the screen so if I would have opened it an atom and just Auto opened it it probably would open right on the screen that I was on since I had Adam open on that screen so instead I thought well I'll just use Nano to open it whoa evidently uh it's a little bit more difficult to copy and paste in Nano maybe it's just me because I don't do it a lot but that's that's why I did it so I thought I got it all when I was at trying to copy it from nano but I didn't that happens I guess all right so we're going to step one of that nginx tutorial I think it's the second one I linked in the description oh no the links are broken alright let me throw your link right now and the live chat see if this one works thanks for the headsup about the broken links I will try to fix that after this videos for people watching later can can get the right links alright so you don't really need to follow along it Anton if you don't want to with the instructions but it might provide a little bit more explanation I'm gonna make this a lot bigger so we can see that should be big enough let me know if it's not I can make it bigger first things first we're gonna log in there we go see it works yeah necessarily spend so much time one I get I mean it was at least 10 minutes right that we spent trying to figure that out and couldn't figure it out so it works now alright so step one remember we're going to use sudo now because we want to we need to have root privileges to be able to run a lot of these commands so that's why we use sudo in front of almost everything we use it for and then we're going to say aptget update so this is just going to update this this is like the package manager for Ubuntu the aptget we're going to update the package manager when you're using sudo usually the first time you use it you type your password in and then if you use it very like quickly after that they don't make you type your passwords you won't have to type it all the time alright so we're up to date and now we're going to run sudo aptget install nginx alright and let's see it's just warning me about how much disk base I'll have left after I install this on a good yes everything we're installing today should fit on a five dollaramonth digitalocean droplet at least it did the last time I did that which wasn't too long ago maybe a few months ago all right step two we need to adjust the firewall if you remember yesterday we had a firewall and we allowed open SSH well now we have nginx and we need to allow nginx to work with the firewall because nginx is going to need to communicate with the outside world with people requesting to check out the site so let's just list and see what we have okay so all these right now are possibility that we can open up we're going to at least right now we're going to enable HTTP since we don't have an SSL setup okay so that's our command really simple straightforward UFW allow and then we type the name in single quotes we type the name of the application we want to allow all right let's let's just check this let's check the status to see okay and we have it on the list as being allowed now we're going to actually start the web server so the command we're going to use this is step 3 on the documentation if you're reading it okay this just lets us know let it start it so we can see it's active running okay it's been running for about two minutes and we're actually going to we're going to go to the page just to make sure that it's working and in the instructions it says go to the IP address but I've already pointed this sub domain to our IP address so if all you do if you've never pointed a subdomain before you go into wherever you have your domain hosted at whatever your registrar is or if you've changed your name servers wherever those names are is appointed to you go in there should be a place where it shows you all the different subdomains that are associated with your domain where the MX records are that handled an email for that domain and you can just add another one type with the name you want for the subdomain in this case it's test and then you want to select what's called an a record you put your IP address in that a record save it and then your sub domain will point to where you want to go when you're messing with that stuff just a word of advice take screenshots or or something to remember everything all the configuration because if you mess it up and you don't remember what it was supposed to be it could it could really mess up your site people won't be able to get to your site it could possibly make it so that email doesn't work on that domain so you don't want that to happen especially if you're working on a big site or client side you know site that has maybe a lot of subdomains you know you just you want to be careful about that so make sure you you only edit what you need to edit and you have a backup so you can restore it if you need to all right so that's working so we'll move that off and I just glanced yeah I did say yesterday we would disable the root user so we have we didn't do that did we okay for some reason I thought that that was part of those instructions that we are following along maybe it was in a different spot so I'm not going to try to find it right now in the middle of the video if we have time later on I'll try to do it or at some point out I'll try to find it explain it but yeah I do I really do want to disable the root user and I did forget to do that yesterday so thanks for bringing that up I'm actually just going to type that in the search bar and leave it there so that I see it when we're done okay let me get back to my tutorial okay so we're going to skip a little bit in tutorial since we don't really need this um let's see okay we can go to step four step four is just going to show us how to stop and start engine acts how to restart it we're not going to go through these because we we haven't changed anything yet this just shows you the commands in case you're not following along we run sudo systemctl all together start engine X we can do the same thing but just instead say restart engine X just stop and start immediately when one command we can reload engine X which can be used if you change the config but you don't want to actually stop and start it and mess up your connections you can just reload and then the changes will be enabled engine X will restart by default it will start if you reboot your server you can disable this and it's the command is just enable disable engine X these are all assuming we're saying sudo systemctl first then disabled engine X and then to reenable it you you just do enable engine X so those are all really straightforward step 5 if you're falling along just goes over some of the directories that are important for engine X and that's it for now for this for this part of it we are going to let's uh do you get well let me let me ask you would you like to see how to set up an SSL because we can do that step now or we can just skip it and try to do it later I'm going to wait a second just for the delay to see if I get any response here I'll go ahead and bring up that tutorial just in case we do want to do that okay we've got a yes I'm going to copy and paste the link to the next tutorial in the live chat and then I will add it into the description as well after the video after the live stream ends so if you want to follow along we're using is the basic instructions on digital ocean for how to secure nginx with let's encrypt on Ubuntu and the first thing we need to do is install cert but so let's I'm just going to copy and paste this because it's a long one okay so this is going to install cert but for us all right we need to confirm by hitting answer great okay we're going to update our package list right I'm sorry I said the first command would install it this is pre prerequisite command so obviously that the aptget install command is what really installed it I am going really quickly you can read more about what's happening well right now it's actually installing it but you can read more about it in the the instructions on digital ocean that I just length okay let's we're going to be on step 2 now and we're going on the web route plugin and so the web route plugin if you not following along I was summarized a little bit what it's saying it needs to check a file in the directory that's cooked it's going to be dot wellknown it's going to be the name of the directory so we need to allow access to that directory so we're going to edit or nginx config to allow access to that directory so let's go and I'm going to show you in the instructions it says use Nano to do this but I have an easier way so let me bring this up here if you've never seen this before I know the fonts really small I'm not I'm not sure how to make the font bigger on this right away so sorry about it being small this is FileZilla it's just the client that normally you can use to like FTP and to server in this case I've set it up with with SFTP so it actually uses the same SSH key that we were using the SSH in on the terminal I like this better because I can open the file in my code editor which is Adam on my my local machine and it's so much easier for me to edit this then if I try to edit it with Nano so that's where I'm going to differ a little bit from these instructions it's entirely up to you some people are really good with terminal editors especially some people were just like really really good with them and can go really fast I'm not one of those people so we're going to go to the directory that says we need the actually the theaters work now I remember what happened last time I did this hmm all right the last time I did this I remember I think I had an issue with this because my user did not have access to these files so normally you'd have to run a syn sudo so the way around this is actually I guess it's actually good at this point that we didn't disable the root user I don't recommend doing this or leaving this this option open but for now this will speed things up for us I'm going to actually make the user root and now I'm going to shut it a previous connection now I'm going to try to go in with this okay there is a way that I could have just let my user edit those files and log in like that but I don't want to have to do that because it will just take more time right now but that's probably the better way if if you had more time but for now we can work we do this then we'll switch it back to using my user and then at some point we can just totally disable the root user but this should speed things up for now if anybody has more experience with this and this is like really crazy let me know if there's some reason why I really should not do this I would like to know all right so we need to get it going to nginx it is and sites available and default so I'm going to click view / edit and there we go so now let's open this file and Adam and it's so much easier to edit like this okay so now we're going to continue on we're going to add this ssl to the server block so this is Oh when you see your nginx config when you see this hash sign that's basically like a comment tag so these are all commented out there's a lot of stuff that's you know just examples of what you could use so we want to add this inside our server block so this is our server block it's a server and then we have this open bracket and then it closes where's it clothing at all the way down here okay so closing lay down here so a lot of this stuff is commented out at this point but we're going to just add this location under here it should be good right there we'll certainly find out saying if it's not but I'm pretty sure that'll work I just saved that so I just hit control s or command S and we're going to hit yes and now this is saved on the server if I had left it to where the user we were using for for this was Jessie instead of root when I would have tried to save it it would not have let me save that because I wouldn't have had right access to that file okay let me know if I'm going too fast or if I'm losing any of you and I can I can always try to explain a little bit more or slow down a bit okay we've gotten through the first half hour and you're not I'm not too bad on time we'll see if we get through it all and now let's go back to our terminal and we're going to do sudo nginx T this is going to check if we have syntax errors in our config file and everything is okay awesome since we don't have any errors I'm going to restart nginx so I'm not going to type this all out but you can see it's systemctl restart nginx and we've obviously you suit up okay so everything's restarted and they give us the next step is a really long command where it wants to know the path for our Webber and the the name of our domain so what I do I'm going to copy this and then I'm going to come over to Adam I'm going to copy in here and edit it here since it's easier to do it here than on the command line I can take advantage of the slight benefit of multiple cursors so we have test our catechetical comm it doesn't matter how many times I try to spell that we're catechetical is always hard to spot see it easy to kiss okay I think I did it right and I think this is the default path for nginx so I'm assuming that this dis will work because we didn't change our path okay so now I'm going to copy that paste it okay enter email address okay so now this let's encrypt is going to ask some questions to set up the SSL so okay so that's my work email and I'm just going to agree and share your email address yeah sure they can send me stuff and you see we're getting a new certificate uhuh oh shoot I forgot to put WW for my I wasn't thinking so if you want to do a subdomain and you want it to be reachable with with or without the WWE actually have to make two records and I don't know why I forgot to do that because I've I've done it a lot but for some reason I forgot so actually I don't really care about that right now so what we're going to do is let's just go back here and let's take out the w w since this is a test I'm not I'm not worried about it so we are gonna have to go through this again so just be was it like 15 seconds last time congratulations it works see if you I was going to go in and change that record for this subdomain I would just put W W test and then I would point the a record to the same place we will do that when we switch it over the main domain for the site is just going to be catechetical com we'll do that then but for now since it's just test it's not really worth the effort alright so we have our certificate and it's that easy to get in SSL so there's really there's no excuse to not have an SSO it was free and it takes five minutes Oh somebody did comment if you're using I is it is a bit different so yeah Windows is a GUI base so yeah it is different totally different instructions for that and I don't work with it we have other people here that work with the Windows servers and so I've never had to I don't even know how to do that okay let's go next step it says we can check if the files are there I'm not going to check because I'm pretty sure the default locations always always works I'm just going to skip that for now but if you wanted to there's if there's a command you can use to check to make sure that your your your keys for your SSO are there we want to generate now a a strong diffiehellman group okay so I am going to do this it does take a few minutes but it looks really cool on your terminal when it happens so let's let's do this so this is the command that we're going to use it's super long so once again we copy and paste this is what I say it looks kind of cool I like this I like this thing I once was doing this at home and we had somebody visiting and they saw my screen and like asked me throw some sort of hacker or something because they thought it looked really crazy which I'm not but it does look really cool okay so while we're waiting on that I'll check the little bit in the live chat someone says a PC user they're not familiar with the Linux patch yeah unfortunately things are going to be slightly different if you're doing this on a PC some of the commands are the same and one thing to remember too I am now logged into a Linux server so I'm no longer on my local machine so even if you're on a PC if you SSH into the Linux server you're using Linux commands so unless you're using a Windows server these are going to be the commands you're using whether and it doesn't matter how you access that server you can access it through the browser through digital admin panel you could be using I mean you can access through the browser on on Chrome OS you can be on a Mac Windows or Linux but no matter what you're still executing these commands on a Linux server so even if you are on a PC it is good to know these linux commands because odds are at at some point you know unless you're going to be doing like strictly you know Microsoft based like dotnet development then at some point you're probably going to do some work on a Linux server yes you see this does take this they go up it should be done soon it's been a minute or two already I'll just skip ahead a little bit on the instructions on step three we're going to configure SSL on the web server so if you remember at first talking about the the firewall which will switch later on but in the firewall we did not allow nginx to serve AC TPS and then in the nginx config we only had things going through port 80 which is the normal port for regular HTTP traffic but we need to switch it up and go through allow SSL traffic to go through I think the port is 433 I think that's the default port the wind up using 443 sorry 443 so we will need we need to go to our configuration files again as soon as this is done I could probably log in on a separate tab if it starts taking too long and try to get some of the other stuff done and Alberto and the live chat you suggested if you want to practice with a Linux server use VirtualBox and install Ubuntu on it yeah that's that's good advice if you don't want to actually pay for a Linux server or you can use I mean doesn't have to be able to you can use a different version of Linux if you want you can probably do it in docker as well if you use a docker container with whatever version of Linux you want I'm sure there's some other some other ways that I'm I'm forgetting if you use something like cloud 9 so that at sea 9 io they start you off with it's a cloud development environment that you can access through your browser and it was free I think it's still free they give you a terminal right there in your browser and you can practice those commands and there as well that's probably the most user friendly of all the options that that I mentioned that I'm seeing here in the live chat I would try cloud 9 isn't the only cloud development environment there are a few others as well so try try that out too because then you don't have to know anything about setting up your own your own server it's already set up for you and you can just practice the commands well sorry guys this is taking longer than I remember it taking okay all right it works okay somebody mentioned them that in the live chat cloud9 is free but you have to get your credit card info so you know what I do remember that now when I signed up for it you didn't and then they changed it and now you do have to add a credit card so you can still use it for free and they won't charge your card but you need to have a credit card for that so yeah a little bit of a barrier to entry there I'm trying to think did it get acquired I the change came I think maybe right after c9 got bought out that it was a while ago this so I can't remember exactly what happened okay so now let's go to step 3 and we need to configure nginx to use SSL we need to create a config sentence mr. all right so it's saying that we want to use Nano to open this and edit and create the the file but like I said I don't want to use an ax so this is going to differ sudo and instead of Nano I'm just going to say touch and then I'm going to copy some of this in so if you're not familiar with the command touch that just creates a file I'm assuming that this will work on it blue tube I know it works on the Mac and we need to change it to our domain okay and then now we can bring up our FileZilla window and we're close swear T in the nginx directory here so now we just need to go to snippets and here we go there's the file we just created file size zero because you don't have anything in it yet but now we can view and edit it so we're going I'm going to copy and paste copy and paste our SSL stuff we need to change example.com to our domain which is catechetical I love that it autocompleted that for me I don't have to try to spell that out every time so I'm going to save that and wait yes and I don't think we need this file anymore so we can go ahead and close it out okay the next thing we're going to do is we're going to make another snippet and when you could do this all in one config file if you break things out into snippets it can make your file a little bit more clean so if you've done this before this is not exactly how you do it it you don't have to do it this way and in fact I've seen different tutorials on digitalocean that do it you know either way so I think it just depends on what would you prefer and how long your config file is going to be is whether or not you want to break it out I don't know if there's another advantage to it or not you can let me know in the in the live chat or the comments if if you know okay all right about quarter after okay I can probably do this for maybe another half an hour I want to leave a little bit of time to prepare for the meeting that I have at 100 p.m. Eastern Time so let's keep working we're going to go we're going to make another file we need to make another snippet here and I've just copied the the path and now let's check it out let me refresh this and you can see it's appeared here let's edit okay and they give us some uh some boilerplate security config I may go in and edit this at some point so but this will work for now and I'm going to go through all this right now but it's just a lot of ways you can configure things and they do they give you a link in the in the directions where you can go to read more on you know what these things do so yeah so like I said these will probably get adjusted at some point but for now this will work so I just saved that said yes and now that'll be it'll be saved now we need to adjust our nginx config so let's go back let's see if I still have to still have it open there we go I still have it open so our sites available substituting them so it's asking us to make a backup of our current so that's this probably good idea let's make it back up so let's let's run this command is going to copy this command because it's long I'll tell you what it does though this is just copying the CP it's going to copy this file which is default and it's going to make another file exactly like it that's default dot bak that's our backup so now we can we can mess with our default without fear that we're going to break everything you know beyond repair so now we're going to open up that default which we already had open over here su su this is the default file so we don't need to open it again if you never closed it and inside the server block you want to find that server listen 80 and we had this SSL configure so we're going to modify this and we're going to allow basically we're going to shut down traffic on port 80 like unencrypted traffic and make everything go through through SSL so I'm going to copy and paste some of this and then we are going to have to put in our own our own domain so anywhere we see example.com needs to change and remember we haven't used that ww but yeah actually we do want to redirect all the WW stuff but we don't want to yeah what we don't want is wwe.com redirecting to the HTTPS version of WWE champ because we don't have an SSO for that so either now or at some point later on we'll have to redirect WWE traffic to not use that WW and that should prevent anybody from getting an error message saying you know hey this there's no SSO the site's not secure things like that so let's go change this test Dodd's catechetical comm oh man my Spotify just quit on me got a put on a second I mentioned in a previous video that I always play music in the background and it helps I don't get distracted by voices uh you know in my in my building and also it helps me to talk louder because you know everybody talks louder and they have headphones on listening to music okay alright I'm starting to slow down a little bit on I think two reasons one I don't want to mess this up into I am a little bit tired today so sorry for the slow pace for those of you who don't know anything about this it's probably better that I go slower if you're a little bit more knowledgeable you might be getting bored so I apologize okay let me um let me bring over just so you guys can see where I'm at I want to actually bring this over and this is those the instructions on digitalocean that I linked to earlier that way you can actually see where I'm at and follow along so we just did this step and now we're on this step we're actually going to start a completely new server block here and let me duplicate this as well so that when I switch over I can copy and paste more easily because I'm going to need to switch back and forth so we need to go at the end of this server block and we'll just make another one I know a lot of this is already here and we could just uncomment it but I think it'll be simpler at this point to just copy and paste what they have and a tutorial maybe maybe not let me see if it's close enough then actually let's not let's do this and now we can open another block here and we don't need that closing tag because we already had one down here we can uncomment on this stuff so that will open up for 443 to listen there and now we need to include our snippets remember we made those two snippet files and this is where you think these could be added in here but to make things less cluttered we just include this and we do need to change that example now whatever we put in these snippets is going to load as if it were right here in this document but we don't have to to have it all in there so it's kind of nice makes a little bit more clean and let's see alright this should work sent because we are redirecting everything here anyway so all this other stuff that was uncommented it should be fine to keep it in this server block instead of this one actually let's move this one down I'm not on a percent sure that this absolutely has to go here but we'll give it a shot so we've saved it I'm going to upload it we're going to skip over this alternative configuration here because we don't want a low of oh such a traffic right now now we need to adjust our firewall so I'm not going to look at the status we can we already know we looked at it earlier in the stream we know so far we've only done HTTP and instead we're going to copy and paste these first what we're going to do is we're going to allow full so we're going to allow nginx full which would be both both types of traffic and then we're going to delete so this is kind of an odd way to do the command and we're not saying disallow or disable we're saying delete allow okay which is scoops and I forgot there we go forget that a little single quote now we will check the status just to make sure it worked and here we go so we have nginx Kol all right let's check our nginx if you remember we did before we use this command nginx T and that checks for syntax errors all right everything is good so we did a good job I was a little bit worried with my editing of that file trying to do it quickly that I would mess it up but no syntax errors might be some logic errors but we'll find out soon enough now we're going to restart it so the changes will take effect okay and here's we're going to do we're going to do an SSL report and this will let us know so I'll do it right here we do need to change it to the domain that we're using so test up catechetical con okay we'll let that go we'll come back to in a second is it'll take a minute we want to set up Auto renew okay so this is important the the biggest at least that I know of the biggest of using free SSL from let's encrypt is that it expires I think it's every three months yeah so every three months it's going to expire you have to renew it so if you don't want to have to mark your calendar and manually renew then you want to set it up to Auto renew so we're going to go into this this crontab if you're not familiar with cron I I believe it's short for like chronological so they're basically things you can do at given intervals in time sorts of things that will automatically happen on your server so the way to configure this it's it's a little bit weird but it looks a little bit weird but it makes sense once you you know once you get used to and see it so for this I am going to use Nanna so it it actually gives you a choice to use them or actually I've never used this one uh but we're going to use Nano and it even says Nano is the easiest switch using to her Nano all right this is what it looks like all this stuff up here this is you know all just kind of instructions it lets you know a little bit more about it but we're going to skip down here and just edit actually can we let's let's just copy so we don't mess it up we're going to copy and paste and whoops what did I just do okay that's weird okay so I'm actually going to move this so it's it's more closely aligned with the spot it's supposed to be in because this just shows you the the border I don't think this space will mess it up oh but we'll see when it's time to renew let me know if it messes it up I can't remember if I put the space in before or not so let me just show it it it does well I can we can just run it straight from straight from here says run the following command at 315 a.m. every day you can choose any time actually so this is C this is minute hour right so let's change this and go to 104 the reason being everybody that's done this tutorial in just on the default is putting this in is the time to renew so maybe it would be a little less stress on their system if if we renew it a different a different time I mean I'm sure they can handle it but just in case we'll go set it for a different time okay and then the rest of it is I mean this renew is actually the come in we want to run to renew the certificate quiet means it's not going to output information and it's not going to ask questions and wait for us to input right because we're not even going to be doing this it's being done automatically so it will get no input if it asks this part of it is going to reload nginx if it's actually renewed we do need to reload it for the changes to take effect you probably don't have to run this every day so if we wanted to edit it you could run it you know you have 90 days so every day is probably overkill but it's not going to our system resources or anything to run it every day if you wanted to so we're just going to save and then if you're a nano you save by hitting ctrl X to exit that might be a little weird there's no it doesn't say st. anywhere so you go to exit but it's going to ask you first do you want to save I'm going to type Y and then it asks us what we want to name it and we'll just go with whatever the default is and so now we have the Auto renewal set up and let's go back and check our server setup all right and we got an A Okay not bad I wanted an A+ I'm not going to try to figure out why I got the Y I got just the a right now normally I can get an A+ on on a Linux server so I'll have to figure that out later on but an A is still pretty good and that's it that's it for the SSL portion of it I'm going to go now to our our node setup and let me bring this over I'm going to copy and paste this in the live chat this is where we're going now and we're going to go so we've done all these things right we've set up a bun we've set up our hostname we've done we've set up nginx and we have our SSL now we need to install a node okay so let's just follow the instructions I don't think I need to do this because I'm already in the directory I need to this will just take me back to the home directory I guess we'll do it just to be sure but I mean you can see obviously I'm in I'm in the home directory see I didn't actually move anywhere so I'm just going to use the default up probably if I if I have more time maybe I would check to see like okay is there a newer version I usually do check and see you know is there a newer version of this see when this was done this was like November 1st 2016 it's not that that long ago but maybe we might want to run into a version of of node but this version should be fun and let's see we're going to run it I'm not gonna inspect this I've done this before when I run this I'm not going to expect inspect it right now because we ran out of time but basically this downloads the script you need to install everything as a bash script so it's like a set of instructions that it'll run automatically and now by running this I'm basically saying hey up you know run all those instructions in that batch file so we can see it it's doing its thing it's getting node it's getting it at least all the all the stuff that we need the next step is actually going to you know run this install node all right it actually tells us down here that the next step is to run this to reinstall it'll probably I'm guessing it will ask us at some point if we want to do this because it's going to take up some space oh I didn't that's odd it usually does okay now we're going to install this build essential this is necessary okay it asked me that time this is necessary for some packages to work so we don't have to install NPM separately you can see here it says we've it's already come packaged with what we had run previously okay and just to make sure this works we're going to okay I know I usually don't go straight into Nano but this is really simple so we're just going to put it in there and all this is going to do is I mean it this is JavaScript so this should be somewhat familiar if you're used to JavaScript we just have a variable here a variable HTTP this require HTTP okay so now we're calling this HTTP we're going to create the server right we're gonna give it a content type and it's always going to say is hello world it's going to listen on 8080 that's like the default kind of port that everything always is on and so that's all it's going to do so a request is going to go to nginx but it's going to get passed along to note note is actually going to process that request and then pass it back out then well that's that's the idea let's see if it works have we not gotten we might not have gotten that far yet right we may have to do some configuration for per engine expert to work like that but we can test it through the terminal as well so we're going to control X and save yep there we go so we need to make that file executable by default it is not so this is how we do that now we can run it so now the server is running right so it's running on port 8080 so as we can we can test this we have to open up another window so let's see it's the stage at and what is my let me find my IP that should work there we go and oops didn't copy okay so Kuro if you're not familiar with curl uh this is going to grab we give it a URL and it's going to grab the data from that URL and in this case the only thing is a little world so it does work now this is not ideal right we've lose I don't need that right now this is not ideal right we run this manually and then it just sits here we have to open up a whole nother tab or what happens if some have you know this crashes we have to log back in our server manually we don't want that so we want it to automatically we want to be able to start it and then keep working in the same tab and then have it automatically restart if something were to happen and there are different ways of doing this in this case we're just going to follow the default instructions here and we're going to use p.m. we can actually stop this if you want to stop a process you hit control II hit controlc and then that stops whatever server you're running and that's the same way like if you're running wet pack pack locally or you're running a server with uh with gulp same thing control C alright so we're going to install this that G flag means globally so when you use NPM if you want to install something for global use not just in that particular folder you put the G flag in the command alright and now we can start this same thing with PM there we go alright so we got a bunch of cool stuff here and now it says that we have we have this running it's the name is hello and you can actually do have a custom name there flags to be able to name it whatever you want and it's online tells you you do it gives you some stats about it there's also a dashboard that you can work in so if you go key metrics you can have kind of this live dashboard that runs in your browser so you don't even have to use the terminal to check up on the status of your application skip this if you did this all right so we want things to run when the server starts up this is how we set that NPM ah I didn't notice it sudo that's kind of weird guys the sudo there there we go okay all right so we're going to copy this and let's actually let's see if we can get the one that it put out let me check the time all right hey we're going to be I got to wrap this up so I get ready for my meeting we're actually almost to the point where this thing is going to run you know we just have to finish up this and a lot of this is not you can see some of its optional that second step that I mentioned you have to do with nginx this part is just allowing nginx to pass through things to the node server see and that's it so really the only step you'd have to do after this is just editing your server block and nginx to look on to pass this through to port 8080 for localhost and that really is it and then at that point instead of having it instead of starting this hello j/s file that we did we get rid of that hello j/s file we could actually use get to pool or repo of this next this react site that we're using and we'd run and set we've been running next we were running the dead version of next let me show you yeah so we run windowing yarn run dev okay but actually I'll show you in my package JSON file what we want to run if you're on the server you can run you could run yarn or if you don't want to spoil your on the server you can just leave it with NPM which is fine too so you can run NPM next build and that will build your application and then start and when you start it now that will be running instead of the hello J s file so when someone goes to your site they'll see your react application I'm probably going to do that later on today so I won't show you that but really that's kind of of all the steps we've just done it's not too difficult to do the only tricky thing is like you want to run this with p.m. so you want to make sure I have never gotten yarn to work with p.m. so I always have to use NPM as the command instead so like I said you would you're on NPM build in an NPM start but other than that that's the only kind of trick that I've ever the only snag I've ever run into with that so so the long video today don't have as many people sticking around as we usually do I totally understand this is kind of dry it's not nearly as fun as the purely frontend stuff which we'll get back to that no more server videos now at least not for a while so if you're sticking around still thanks I know it was long I know I I don't know if I could have stuck around for this into our video I will I'm not sure exactly when the next time I'll be streaming is I will try to stream the next couple of days when I can from the conference or basically from where where I can get good enough WiFi to stream otherwise I'll have to do some prerecorded videos and then just upload them whenever I can get some a good connection sorry I didn't get a chance to go through all the live chat today I will save this chat and I'll look if someone had some some questions that didn't get answered please post them in the comments if not maybe I'll try to save this and maybe in a later livestream answer some of these questions hopefully if you ask that your your tuning and again or can at least watch the video later on oh cool I'm glad we had some people so people were still here they're still watching awesome good I'm glad at least it means something you got something out of this it's tough stuff and you just got to practice it and the thing is if you're doing frontend stuff you won't really do this often enough to really you'll memorize everything you're always going to have to go back to the instructions and there's all you're going to be so parched that you just forget and mess up on so that's how it happens but it is something that you may have to do one day so it's good to at least have seen it at least once alright so I only have a few minutes to get Sam I'm eating now thank you so much for watching I'll have some videos for you soon and I'll see you maybe tomorrow maybe the day after have a great day