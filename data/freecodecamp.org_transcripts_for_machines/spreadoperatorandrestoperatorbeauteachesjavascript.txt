the spread operator is three periods this operator allows expressions to be expanded in places where multiple arguments elements or variables are expected i will also talk about the rest operator at the end of this video the rest operator looks exactly like the spread operator here are some common use cases of the spread operator you can add elements of an existing array into a new array so here's the first array search to add and we have two array certifications in here algorithms and data structures and frontend libraries and then also we have our main array certifications and we are going to add the search to add into it so responsive web design and then right here is the spread operator three dots and search to add normally if you put search to add here it would add this complete array within the other array but since we have the spread operator right here it's going to just add the elements of the array into the new array so now we're going to have a bunch of different elements including the elements from the search to add and if we do console.log we'll see that they're all strings in this array there's no array within the array and it just lists all these different certifications another use case is that you can pass elements of an array as arguments to a function so let's look at this code right here so we have we have this function add three numbers and there are three arguments x y z and then it's just going to add all those numbers together and put and put it to the console now we have an array called args with three elements zero one two we're gonna call the add three numbers function but instead of passing three individual arguments like the function calls for we are going to pass this array but we're going to use the spread operator that's going to spread out this array into the individual elements so if we run that it's going to put 3 here it's going gonna add those numbers another thing to know is if there is a fourth element in this in this array and we run that we're still gonna get three it's actually going to ignore this fourth element in the array when it spreads it out because the function only calls for three items okay the next thing is you can use it to copy arrays so let me put some code here we're going to have your the first array one two three and now this is how you just copy the array you would put the spread operator and then up the first array and it's going to spread out the first ray into the second array and normally if you didn't copy the array when you push new item onto array 2 it would also push on to array 1 if they were referencing the exact same thing but in this example we're going to show that we're pushing on another item onto the array and when we console that log you will see the the arrays are different r a r and arr2 are now different because it did not push four onto the exact same array they're completely different arrays you can also use the spread operator to concatenate arrays or just put two different arrays together so we have the first array zero one two the second array three four five and this is one way you could do it the r1 dot concat are array2 but with the spread operator there's a new way to do it we're going to say that r1 equals we're going to spread out the array one and then we're going to spread out the array 2 and then that's going to create this is going to concatenate the array 1 and the ray 2. if i just comment this out and i can say zero one two three four five uh the great thing about this is you can just actually add more elements while you're while you're concatenating them so let's just try that example really quick and so you can concatenate and add more elements and you can if you want you can put the second array at the beginning the first rate the end and it just gives a little more flexibility than just the concat function okay now i'm going to talk about the rest operator like i said before the rest operator looks exactly like the spread operator it's just three dots but it's basically the opposite of the spread operator the spread operator spreads or expands an array into its elements but the rest operator collects multiple elements and condenses into a single array element since it is an array you can use array methods let me give you an example of that so we have this function here multiply we're going to pass in two arguments or is it more than two we're going to pass a multiplier and then we're going to pass in an argument that has the rest operator right before the args since these three dots are being passed in as an argument into a function that's how we know that it's being used as the rest operator and not the spread operator so when we have the rest operator and then we have the name of called the args we can actually pass in as many arguments as we want into this function so when we are passing in things into this function the first number we pass in will be the multiplier and then everything else we pass in will be condensed into an array called the args and then look what we're going to do here we're going to return the args.map since it is an array you can use array methods like map and we're going to map each element to this we're going to return multiplier times the element basically it's going to multiply each element in the args by the multiplier so if we have var array equals multiply 2 one two three so this is the function the first number two is the multiplier then one two three goes in as an array an array containing one two and three and now we're going to map each of this one two three into this map function we're going to multiply each item one two and three by the first thing that we passed in which is the multiplier so if we run that you can see at the end one two and three have also all been multiplied by two so we get two four and six thanks for watching my name is beau carnes don't forget to subscribe and remember use your code for good