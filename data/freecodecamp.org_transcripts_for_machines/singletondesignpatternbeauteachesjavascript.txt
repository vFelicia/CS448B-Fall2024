the singleton design pattern limits the number of instances of a particular object to just one the single instance is called the singleton this is useful when exactly one object is needed to to coordinate actions across the system you may use a singleton as the source of config settings for a web app or on the client side for for anything initially with an api key singletons also serve as a shared resource namespace which isolates implementation code from the global namespace so as to provide a single point of access for functions name spacing your code is a primary use of singletons a wellknown use case for this is jquery jquery itself is a singleton because singletons involve a global instance many people don't like them but it's important to know about them there are many ways to create a singleton i'm going to explain one implementation of a singleton that comes from eddie azmani's book learning javascript design patterns so we're going to create the singleton here as this function and we are going to create a varan instant a variable called instance that stores a reference to the singleton now we are going to create what properties and functions are inside the singleton here so first we're going to create the private methods and variables now this is basically just an example of how it would work but anything here are going to be the private methods and variables we have the private method which just does the console.log in private var private variable i am also private private random number with we just get a random number so none of these methods and variables can be accessed from the singleton instance they can only be accessed from within the singleton so here are the public methods and variables so public method is a function consulate log the public can see me and the public property i am also public get random number function return private random number so that's the only way that you can get to the private functions and methods and variables is if one of these public methods and variables references it so the get random number public method is going to reference the private random number variable and that's how you can get access to it down here is where you're going to get the instance of the single 10. so um all of this co let me go back up for a second all this code is in this init function this init function returns all the things that the singleton is going to do and then down here um as part of the singleton you are going to run that init function to get the instance of the singleton the only function on the singleton variable up here is get instance this is a public func public method and this this function is going to say if there is no instance if an instance hasn't been created then instance equals init where we're going to run that init function up here and it's going to give us all this all this however if a function has if an instance has already been created we're just going to return the instance that's been created so let's go down and show how you would use this here's where we're going to create an instance of the singleton var single a equals my singleton dot get instance var single b equals my singleton dot get instance now this instance is going to give us the same instance as before the way we're going to demonstrate it is this this random number math.random so each instance should have a completely different random number inside so first i'm going to just show single a dot public method is just a method up here that says the public can see me and then console.log single to a public property it's going to do the i am also public now here's where we're going to see that they're the same instance console.log single a get random number equals equals equals single b get random number so different instances should have different random numbers so if they're the same instance this should show as true so i'm going to run that and look the public can see me i am also public and true they are both the same instance so we can create as many instances as we want but they're all the exact same instance well thanks for watching check the links in the descriptions for more information about singletons my name is beau carnes don't forget to subscribe and remember use your code for good