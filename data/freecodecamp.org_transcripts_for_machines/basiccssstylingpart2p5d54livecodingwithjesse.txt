hey everybody welcome to live coding with jesse i'm jesse and today we're gonna do some css work uh just like we did two days ago on the live stream so we're gonna uh style a different part of uh of a different template but it'll be the same same basic process we're going to check out what the markup looks like that we're given so we although we do have control over the markup uh there's we would have to edit it in a lot of different places so it will make more sense for us to just style it as is for now to get things ready for launch and then afterwards we can think about okay now that we have more time what's the ideal format for this content and then we can change it or hopefully more likely i can get some some student workers so since we're doing this project for university we can get some student workers to to format the data properly since that's something that you know you could be trained to do on one or two of them and then do the rest you know really without supervision so that's the plan today i um i expect to do for the stream to be maybe like an hour an hour and a half i will warn everybody the last hour or so i've started to feel like not really good so i hope i'm not getting sick but uh to be honest with you i didn't eat anything for a long time this morning and i just had coffee and then i ate a bunch of gummy bears and then since i'm so smart i ate chocolate after that and then i decided to eat real food so it's probably my own fault for eating like nothing and then eating junk food so anyway hopefully i i'm all right i apologize if uh through my own fault i i can get really sick josh's great diet yet i know it's a terrible diet i um i was talking with somebody another developer on instagram and um uh they were talking about this bulletproof coffee i don't know if you ever heard of it but uh i had tried it a long time ago it's like coffee mixed with butter and like coconut oil or like other oil that's like basil coconut oil right you you blend it all up and um and then you drink it and it's supposed to it's supposed to like induce ketosis which like gets energy right to your brain a lot better uh and you feel full after you drink it you don't need to eat so i said i was up at like two o'clock in the morning so this this was really this is like three o'clock in the morning i said you know what like i think i'm gonna try it and then later on i took the kids to school i said okay i'm gonna go to the store and get all the stuff and then i'll i'm gonna try it i won't eat and then i'll um i'll let you know how it goes so that was my plan uh and it went pretty well until i ate all the junk food and then uh after that i started to feel not so good so i don't know if it was the bulletproof coffee or this junk food i'm guessing it is probably more like the junk food but the coffee itself was was pretty good so anyway let me get started enough about my terrible diet today uh we're gonna get started for those of you who are new to the stream uh this is the format i do my normal everyday work uh that so i'm a frontend developer i work fulltime for a small university we're working on the university's main website of transferring it from an old content management system to a react based system so um right now we're just going to work on some css in that part of it but if you want to see the whole process start to finish there's i think this is video number 54 so we've done quite a lot to get to this point so it's totally understandable if you have questions and uh feel free to ask you know as many questions as you want and it looks like there's some problems with the stream what is the issue with the stream all right not sure what's going on with the stream hopefully y'all can still at least hear me video might be choppy now i'm trying to figure out what's what's messing this up right now um but anyway we split things up in a pomodoro session so i'm gonna do a 25minute session where i mostly code don't really look at the live chat too often and then i'm gonna take a break i'm gonna answer questions in the live chat and then we'll do another 25minute code session and then after that we'll take the whole rest of the stream to uh answer answer questions so uh we're definitely beginner friendly so don't feel like you know you're this isn't the place for your question it definitely is uh and we'll do our best to help you out give you an answer at least try to let you know where you could find an answer okay it looks like the stream is back it's back up i don't it seemed like the internet almost just like cut out it's possible somebody else in my i'm i'm working from home right now somebody else in my house might have been playing like uh youtube or netflix and messed it up oh john says it could be the weather yes that's true it's been really windy lately around here and i know like i haven't had a power outage yet but there have been power outages elsewhere so that certainly could be affecting things all right so let me make this bigger because i know this is way too small for anyone to see and let's start the pomodoro session uh it's probably still too small let's make it a little bigger there we are and actually i was doing a little bit of work on the server file so let me commit what i've done there before we get started okay uh i did do a little bit of extra work styling the page we were working on on the last stream so nothing major if you want to know what what else i've done check out uh the latest few commits the uh link for this repository is in the description and so uh we're just doing a basic get ad if you're familiar with git if you're not familiar with git this is just a way to track all the changes that happen in your code that way everybody else can see the progress but you can also if you mess something up you could very easily revert back to a previous state in the project so that's why we use get and uh so i'm just saving the project at this particular stage with a little note about what changed in the project that'll give us like a nice like save point to go forward and that way if we really mess anything up we can always just go right back uh to this point so i get it's good if you're familiar with like video games and they have a save point at the game uh in in the middle of a level or something like that's a good way uh to like basically think of git is creating lots of little save points in your project that you can easily uh go back to oops yarn cm all right so if you notice the stuff going on in the terminals a little bit slow that's because of the the streaming software that i'm using uh it shouldn't be that slow on your machine unless maybe you have a really slow machine already uh so let's see okay all right so while that does its thing we can get started uh with me showing you all what we're gonna be working on today so let me move this over to the screen here we are okay so this is a department page so the last time we were working on a major page for major or uh program so originally i'd called it a major page but i've come to find out that actually the the better term to use is program so if you hear me use those words interchangeably then i mean they mean the same thing for us for this project so this is a department page and in the department pages we we now have this section here which is links let me show you what it looked like on the site let's see i have this open on another screen but i did there we are so here's the site as it is right now the old version of the site i didn't want it to be on a different screen oh well uh so we've got we already have this section that's uh that we brought over and that looks fine this section we're just going to leave out for now the core curriculum has been around for a while i don't think we need to say anything say this on every single department page uh we already have all this data saved as a post type so we're going to put this in but we're not going to worry about that today in the same way with videos we have a lot of these videos already saved i i don't think we have them categorized yet but once we get them categorized it'll be pretty easy to pull these in and display them on the proper pages so all we're worried about today is getting this data that shows up here you know in this little block in this menu and now we're going to try to take so this is what what has come through which looks a lot different than how it's displayed otherwise uh and we're going to try to style this in a way that makes sense and that is going to be able to be applied you know across the board on all these department pages so first things first let's check out what markup we have here i mean already looking at it i'm seeing that everything's repeated there's the actual link and then there's the i guess the title uh which it looks like they're the same so we ought to be able to just completely hide this text title and then just keep the links and style those uh how we want to style them so let's see how this is and i'm gonna let me make this a lot bigger for you all cause i'm sure it's not that easy to read let's see if we can go up one more okay that should work and gonna move this down a bit about let's let's make this very small there we are that'll give us a lot of space here so hold on my music in my headphones is really loud it's distractingly loud so let me turn it down a bit okay that's that's better um okay so all right the heading is there the heading's fine it wouldn't be a bad idea if we act if we did have a heading though uh up here we'll have to add that in so we'll see the primary focus right now is getting this styled if we have a little bit of time before the stream's over then maybe we'll make sure that we get a title here for all the department pages uh if we're not already using a department page template then we may even want to create our own template for that but we'll um we'll get to that when we need it and what just happened i don't know why it refreshed maybe i clicked something i'm not sure all right so the heading's fine well i'm sorry the uh this h2 is fine for now uh the headings here i think we can completely get rid of and then what we'll keep is this so let's let's hide these so it looks like there's nothing else with a heading uh on this page and i just want to double check up here make sure there's no title hiding out here and it looks like there's not okay um yeah so first things first let's hide all the titles and then see what we have see what it looks like obviously we're gonna have to style this what's this department menu department menu oh okay so we we have this data here as well i don't think i have this data all together for every department yet but the plan is to put it all together so um yeah so if we have time maybe we'll work on this little section here as well it's displayed as a totally separate part of this which makes sense like these aren't programs um yeah okay so i guess we can we can test this out right here uh in our in our dev tools and so let's go here and just add i'm going to add this in we're going to say display none there we are and so that's taken away all of these we've already we have these break tags here but i believe we're already displaying none on those um so we don't have those we're displaying on these link tags which is fine that's it's as it should be where's our content yeah uh the markups messed up it this is just how it was automatically done in the old content management system so uh if you're looking at this markup and saying like what is this stuff then you're entirely right in thinking that it's definitely not ideal um all right all right let's work on all right so each one of these is wrapped in an item okay let's work on this item then and then we can style the uh the a tag inside of it i want item all right if anything i'm doing in devtools if you're not sure how i'm doing it just let me know um you know i know if you're not familiar with devtools then it may not really be obvious how this this stuff's working uh but i'd be happy to uh to explain it so if you put it in the live chat now i'll get to it as soon as this pomodoro session's over which will be in 15 minutes okay so for the items let's say display block and that'll make this these will all appear like on top of each other here's different programs so already that looks a lot better now let's go here to these a tags so there's no other a tags on the page right now so well except for down here which i'm not worried about these yet so i'm just going to style these as like just regular like a tags but what we'll want to do though is make sure that when we do the css we only target a tags that are inside these item tags that should be specific enough that it it wouldn't apply like let's say if there happened to be some inline links that it wouldn't mess those up all right so we first thing we want to do is um uh text decoration none that'll get rid of the underlines let's make sure our font size is is a decent size so let's do a font size at least 18 pixels there we are uh that's nicer let's do 18 pixels and i'm not a huge fan of that color line height 1.5 there we are okay so we bump the line height up to 1.5 which which gives us a nice spacing here i don't know that we've decided on a standard color for links for this site yet let's see what let's see what colors we can we were using that gold weren't we um let's see what was that i can't forget the hex value or i can't remember the hex value for that uh let's i can grab the hex value from this header area who grab that and then let's do color and let's give it that gold color and see how that looks all right what do you all think gold color for links do you like it do you not like it is it too light it definitely matches with the color scheme more it doesn't stand out as much but it i think it's okay i think i'm gonna try to keep it like this that way you all get a chance to look at it more i can look at it more and then i'll be able to get feedback later on to some other people that i from some other people that i work with all right so let's keep it like that so i think the other things that we've done i can just remember and put that in the css but i'm going to copy this uh since we have a bit more for this one let's go over to our code now and let me get rid of some stuff or shrink some stuff that we really don't need and let me let's see i want to make sure what we're using make sure i'm using the right template for departments and this is okay no we're actually using the page template for the departments right now was this the one that we had trouble with oh i see um this template we were using some old styles with okay all right here's what i'm gonna do we're gonna make if we don't already have one we're gonna make a uh css file for department pages and then on another stream or maybe i'll just do this on my own we're gonna convert this to use the latest version of apollo and the newer way of getting data from graphql which this one's using the old way when we started this project the the newer way wasn't available yet so we're just going to forget about this for now because i want to keep this mainly about css and we'll work on that later and for now let's just go in here to our styles folder and we're going to do department dot css all right so now we have that and uh let me do what did we say this would be item in uh a tag right it was an a tag yeah and then we're gonna put that in there and our indentation is not great we'll fix that okay and then we have the headings right yeah our heading is going to be display none and finally we took the each item and we gave that a display uh block okay so i think that was all we did for a css a pretty basic so far and what we'll likely end up doing is taking whatever css we have here for page.css and we're going to use that in our department css kind of as a base and we'll get rid of what we don't need and we'll change what we do need but for now i'm going to put it in here since we will need it although you see in a second it's really going to be unnecessary because what we'll do here in our page template which is what we're using right now for department pages temporarily where is this page.js so we want to keep page.js uh as like unopinionated as possible in terms of style because this is our default like fallback for content that we don't really have any uh specific styles for so we want it to be able to work uh just basically like display text nicely and not mess things up too much so i don't want to keep it like what i'm about to do here uh for too long but it should work just for now just to test things out all right let me check my time to all right we've got time we'll definitely be able to see if this works so i added another link tag as you can see here if you're used to just regular html and not necessarily react uh just think about like we we have our head tag and then inside we have our link tags where we were importing css so that part should be very familiar and so in addition to page.css i'm going to put this department.css file that we just created right and that's lower down so given the cascading nature of cascading style sheets of css this will override whatever is here okay so you can see why everything we just copied over it's kind of pointless right now because right we already have it on the page uh but this way it'll just be one less thing that we have to remember to do when we do um split this out uh you know this component and update it so that it'll work with what we're kind of like the latest uh stuff that we're doing with apollo if you're interested in the updates that have to do with the latest version of apollo we did a stream on that a while back so if you just kind of scroll back through through the playlist of what is it project 5 playlist you should see some streams about apollo like upgrading and and um that way you'll get the latest so if you have used apollo before but you're not really up on the new things that'll be kind of a nice stream because we don't cover everything apollo does just the latest stuff just the changes and just kind of go over how we update existing apollo uh code to that uh that latest stuff so you can see here like we're using this query element uh this query component okay so let's save that and make sure save it and i just want to make sure i saved this as well i think i did but it has happened before that i've thought that my code wasn't working and the real problem was that i never saved it all right so we're going to go back here and we're going to hit refresh and hopefully all our styles still stay alright wonderful it works let's double check and make sure that all our styles are working and they're not being you know overridden by anything so it does it looks like yeah all these work obviously uh the things that we've set to display none are are displayed on and we don't have to test that we can just see and our display block is working on our items the only thing that's different is now we see that these a tags don't have the styling that we applied so this is this might be a good time to apply as a standard for all a tags the text decoration none and this color so let's go back and do that now at least at the very least we can do that in in this file and then maybe in our page i am going to have to so we are we do have some global styles i don't want to get into that though because this is for basic css so uh for those of you that are more familiar with react and material ui and what's going on with our project the better place to put this what we're about to do is probably in uh those like the global styles that we we have uh coming uh from material ui uh sorry about the stream quality here it's kind of dropping out uh we're really sorry about this i haven't i don't know what's going on let me double check my machine really quick because there's maybe i have something running that i just don't i didn't realize i had running maybe it is my internet connection all right on one of my other screens i'm gonna run a speed test really quick just to see if the connection is fine then i know it's something on my computer uh but if the connection's bad then i'm not gonna be able to do anything about it right now and i may as well just try to continue as best i can with the stream all right so speed test is running right now um over here let's just pull out this and we'll put it for now i'll just put it right here and all we need really is this i'm going to save that and then since we had let's see we have open i'm just going to paste this in a few of these other places for now okay so let's save that and let's say this okay the the upload speed is actually a bit slow right now from what i should have so it's possible that uh that the internet is the issue so hopefully we don't have too many uh more issues here all right my timer went off so let's do it at five minute break here i'm gonna go back to the the chat i'm gonna scroll all the way to the top and just try to work my way down let's see if i don't get your question during this break then just hang on i'll get to it at the uh after the next pomodoro session so hey i there are a lot of people saying hi hey everyone thanks for watching rjpd geeks point says why you are all time i'm i'm not sure what you were trying to say it seems like maybe there was a word left out there so if you're still watching uh let me know what what you were trying to ask there i see a few more of you are saying hi asking how it's going uh not bad actually i'm feeling pretty good now it's going going well uh dinan jay says how can i make a page responsive without using any frameworks um yet media queries so um phoenix mentioned that um yeah media queries so let's just let me show you we have some media queries going somewhere in here right where are they here we go all right so like this you know so we'd have a media query so right now this is a little bit of responsive stuff here so when it's when we have a small screen oops where are we at okay when we have a small screen the width of our main container is 90 but then when the screen gets bigger than 600 pixels we only display 70 all right this makes sure that our content isn't spread out really far on wide screens but then on small screens we want to make sure that it doesn't have too much padding and becomes like all squished and really hard to read so that was just like a very simple example of using media queries for responsiveness so if you're not familiar with media queries definitely like look up the syntax and uh so like mdn is mozilla developer network is a great place uh to look up syntax for for different web related things and just copy and paste some of these for a long long time i could not remember how to do media queries from scratch i had to copy and paste them all the time and even now occasionally i'll forget the exact syntax so um yeah like don't don't worry like if you don't get it right away it took it took me a long time and um you know they're a little tricky uh solely as how do you get your developer tools to be so dark couldn't find the option okay let's do this real quick because uh so if you're in your dev tools in chrome and you go up here to this menu this three dots and you click it you go down here to settings i guess you can get there by pressing f1 as well you go to settings right here in preferences under appearance for me it's the third option here i'm assuming it'd be the same for everybody you just go to the theme and you hit dark theme so by default it's this light theme which is too bright for me i like the dark theme dark theme for everything uh so i switch it to dark that's a lot nicer i think a lot easier to look at so that's how you get the dark theme see uh hammy says the gold looks good but a little darker is better okay cool maybe we'll um we'll mess with the um kind of the darkness there for that maybe we could go a little bit darker and make those links pop a little bit uh fruity spirit says how many more sessions are you going to do in live streams um if you mean sessions in this stream we're going to do one more pomodoro session if you mean sessions as in like live streams i'm gonna keep doing live streams till nobody wants them anymore i guess um so for this project i have no idea how many more streams it's gonna take but i mean we may like eventually this project may just turn into more like maintenance mode and we'll just come back to it every once in a while and then we'll move on to another like main project all right let me try to do that uh i'm gonna stop here and i want to make sure that i remember where i left off at so i'm going to mark this down okay uh let's go back here let's do our pomodoro and i'm gonna do one more session i'm refreshing this to make sure that this is applied okay so that is applied let's take a look at this color though and let's see if we can make it a bit darker so i'm going to click this color oops in dev tools i'm going to click on the actual like the the box that displays the color and if we go in here and we shift this we can see like the rgba but i want to go to the hsla and which one are we gonna do hsi is it this one a light so if we change this l value would it what is this like hue saturation is this light i don't remember what all those are i can't remember what everything is i'm not like a designer uh you know i do some design stuff but basically this l value will give us the color will basically be the same but it just makes it a little lighter or darker so if we go a little darker here and then we check it out see now we have this hsla value and if that's the value we want if that looks it definitely looks darker just comparing it from here to here we can go with that and we could take this out and now in our code where do we have this here so in all the places where we just had this and we can now change it so we'll save it there let's save it there oops i wanted to completely get rid of that oh that didn't work out i wanted let's make sure i did it right here i did and then finally our department css is going to be oops there we go so now everything is that darker value and if we refresh we should be able to see what it looks like even in line oh no i just saw it said the color um the color picker thing is uh hidden behind my face ah sorry about that okay but that definitely is darker okay so we'll keep it like that for now i like that idea we've done that in previous projects before never with this color but with a different color and it worked well to make things more readable all right let's see all right what were we gonna do next this part i think we're gonna style this part next i do want to take this this title here yeah this is too much space between this title and this so let's see let's give it a margin bottom of 8 pixels all right that's nicer i like that better give it a font weight of 400 yeah that's different yeah and then what color is this um let's do our color as and i forgot to write rgba okay all right so this is what we're gonna do for our h2 title uh basically what we've done is we've decreased the margin on the bottom because before it just kind of was there it didn't really look like it belonged to this list we also decreased the font weight the font weight was a little heavy it was kind of overwhelming and it stood out i think too much on the page and then we also uh changed the color so i believe i couldn't find the value but from looking at it it looked like it was solid black we changed that to be um black uh with an opacity of 87 okay and that's what we did here with the rgba value uh and that softens the black a bit it's still very readable if you look at it it's like okay that's still black but it definitely makes a difference um and that's that's the standard kind of black value for uh material design okay well we rarely ever use uh like solid black alright so let's grab this value and let's add it in uh put this all right i need to get like auto format for my uh css that would be helpful and i'm gonna give it a refresh just to make sure that's all working okay looks good all right now we can get down to this part here and uh we'll style this a bit so department menu apply all right phil let's do it just like we did with this section first thing we're gonna do is just see what we're dealing with uh in terms of markup mobile title okay so we definitely hmm let me think about it so the first thing we have here is uh and apply link do we want the apply i will leave that in for now yeah we'll leave that in for now i guess it makes sense to have an apply button you know down here somewhere link text faculty classics that's odd all right so let me um let me just think out loud for a second here so these links we have linked text as a separate element but then within the a tag the name doesn't match up with the link text so this says classics but what we really want is classics faculty they have the summer ancient and biblical languages institute and that that does work okay here's what i'm thinking i'm assuming and maybe i'm wrong here but i'm assuming that every department page has a link to that department's faculty and that link is going to follow the same structure of being name of the department slash faculty if that's the case we could do something very similar to what we did in the last stream uh where we didn't use what was given to us from the markup and instead we created our own element in react that created that that link for us and then we didn't have to use the markup that was given to us that would solve our issue here of having to somehow use this link text um instead of the text that's within the a tag so we'll do that and then summer ancient biblical languages institute yeah we definitely need to keep this and then for the apply link there we definitely don't need to pull in the apply link from here we know what that link is it's going to be the same on every page all right this is this is going to be tough because i don't even really want these links i just want to hide these links and create elements and react for those but i want this link let me see you know let me bring over another example of what's happening here uh so let's see let's see what the business department has are you serious we don't have a business department page oh i know what it is it's a weird url um it's like something like that what is it um i just have it oh there's only one c okay all right so we have the faculty link here and then we have this mba four plus one program hmm all right i'm gonna check the uh chat quickly to see if you all have any um any input on this see all right so yeah uh binary 64 is saying do last of type the only thing i'm thinking is it's not i think there are some programs that have more than two here so they'll have multiple ones so it won't always be last of type all right uh i'll just have to here's what i'm gonna do and i i probably won't do it on the stream right now because we only have 10 minutes left and i just want to stick to css but what i'm going to do longer term i'll just have somebody go in and remove all those links because we don't need them short term what we can do is clean the data as we as it comes in so what we can do is put a function in in our component that searches through this data and finds this apply now and so basically the call to action stuff we can take that out cta link we can take pull that out that's not going to be a big deal we can do that with with css and just hide it um then for this one we can take out faculty and we can take out uh any a tag that is linking to faculty right so we're we're just gonna search for that and and remove the stuff so it'll be a little tricky but once we get it working like it should be fine we've done similar things in other components already and then basically once we remove those two everything else that's here will be okay and that will want to use it so for right now i'm just going to style this and just make sure that you know we get rid of this stuff at some point uh so let's see how we want this to look so first of all these menu items should be display block okay great and then even department menu yeah we you know what let's keep this title oops display block and we're gonna font size let's go 24 pixels and font weight 400 there we go all right not exactly like this but now that i look at it uh this could probably be made a little bit smaller so i'm okay with this for now uh then apply now apply we're not going to worry about these ones we need to get rid of the link text so anything that's linked text is going to be display none great and then anything that's an a tag inside of a menu item which so we can do now like menu item a is gonna be um font weight let me put this 400 okay all right so not bad and remember you know this supply now won't be there classics won't be there so essentially the apply button if it is there it'll say apply this will say classics faculty all right not bad so i mean that basically matches what we have here okay so let me move this trying to remember what we did all right menu items are displayed on our display block our let's make our cta text and link which one had the mo this one had the most right all right we'll start with that okay so we want our menu title and then i'm going a little bit fast here because i know we're running out of time for this pomodoro section menu item menu item get that yeah any item and then cta text cta link a display none set and then menu item a actually let's do item a and then that should be it i think that's everything that we did let's refresh just to be sure nope i forgot one thing and what was that the item link text that's it all right so we want to do link text okay why did this not uh you know what i didn't add the uh weight the correct weight here font weight 400. there we go all right so now that's going to be fine that'll give us what we wanted should did i mess up the name for this mobile title yep i messed up the name mobile title okay let's check our time awesome just in time okay so i went through that kind of pretty quickly and uh what we did was i just took advantage of when we were already using those same styles instead of typing the styles out again we just added you know just with some commas we added in uh some more element names for our display none for display block and for uh how we style those menu items which are links the only new stuff we had to add was this mobile title which really we probably could have used something similar to what we're doing here but i mean overall okay yeah i say that i mean that's it's not perfect but it looks a lot cleaner it looked broken before basically i mean it looked broken if you remember we had duplicated texts all running across the page now that looks like it's supposed to be like that you know whether or not someone thinks that this is a good way to do it or it's a pretty way to do it it looks organized like it was it was meant to be like that uh which is better than broke all right cool so my timer's up there i'm gonna get started with getting this all up to github and while that's running i'm going to go back to the live chat sorry i'm going to go back to the live chat and answer some more questions so first thing what happened looks like the last time i tried to do this it timed out the endtoend test timed out uh i didn't even notice that okay um all right so let's try let's run this again we're gonna retry that last one hopefully it'll pass so while that's running i'm gonna scroll back to our left off at which for me was the time stamp uh 2 25 p.m eastern time and have you tried the new atom uh i have not used adam in a while so uh no i guess not what's um what's new okay phoenix is asking what would i say adam i used to use adam all the time like for years i used adam and i really liked it but um if you're using it on a computer that was really fast and powerful it was fine but it was a little sluggish you know on on a computer that wasn't so powerful visual studio code seems to be more performant so it's a little bit quicker so i've switched to visual studio code i really like it there's a lot of nice features i mean really in terms of features it seems like you can get plugins to do the same thing for atom and visual studio code if you want to so it really comes down to the performance and visual studio code does seem to be a bit quicker even though adam and visual studio code both run on electron for whatever reason you know the team that worked on visual studio code was able to get better performance out of it i have heard some of the reasons why but i'm not going to get into them now because to be honest with you i'm not knowledgeable enough about electron to even know if those reasons are are reasonable um he says a stands for anchor yep yeah it's an anchor tag okay john says the link styled in the gold color alone doesn't really say click me i'm a link okay it could be missed i'm gonna take that in consideration uh i'd like to do at some point some tests where i can actually watch users and what they do so i'm going to make sure i i think about that when i'm watching them so basically i i like to just have users sit down and i tell them nothing about the site and i just want to watch what they do first where they go where they scroll what they click so if i notice that users are clicking on things that are gold then probably it's not going to be a big issue but if i notice that they're always scrolling past and never clicking then i think we'll have to we'll think about changing the color or at the very least changing the color of the links that we really want users to click on like apply and donate would be the the two major links that we want people to click on and did it did it again all right so the tests aren't really failing they're just timing out because i'm running my streaming software i'm running obs so it's it's making everything else slow okay uh then let's just run get commit um no verify um okay so what i just did there uh not you don't really want to do this too much but i bypassed the test and so i did a manual commit and i bypassed the test because i know that what we just did should not mess up the test right we can see that it's that it's working here right all right so now let's check the status and we'll do a get add and we're going to do git commits and i'm going to bypass it again just so that because i know the indian test will probably fail uh just for timing reasons having trouble spelling today uh m so then the no verify flag is that's what skips the test and then the m flag is what allows us to write a commit message in line so we're gonna say and um we'll check the repo in a minute uh when this gets pushed because we have this um you know what i take it back i was gonna say we have the same test running now uh with travis on github but we actually don't have the endtoend test working yet with travis so that that wouldn't test but i was gonna say we would have like a backup there we will eventually uh ray cubin says hi how often do you use uh tomato time uh every day i use it all the time even when i'm not streaming i i still time myself with it it says uh he also says does it really work um yeah i think the pomodoro technique is very helpful so i i definitely recommend it uh darshan asks is jquery a way to update css elements or are there any other uses of the same uh yet you could update css with jquery you could also update css um with with regular javascript if you wanted to and there are even ways to do css with javascript in the context of react there's actually a lot of different ways to do it heidi says is it good to use frameworks like react or do the job with css uh i really like doing it with react and if we were just writing like react components and not having to deal with all this like data that is coming with this weird markup then we would be doing all the css like in a more react friendly way using one of the variety of options out there for css and react uh but because we have this kind of unique situation where we're dealing with data that's being pulled in we have to do it i don't know that we one of the easiest ways for us to do it is just using regular css in linked style sheets so i'm not saying that's the only way but that's kind of the most straightforward way for us to do that right now and it is ultimately just a temporary way to handle things uh for now um binary64 asks is that next 5.1.0 actually i can't remember what version we're running we have been keeping things pretty up to date let's check it out i believe i have my package json open over here yeah so since i i just pushed all that code to github everything that we've done today is available uh in the github repo so the link's in the description feel free to go check it out uh you can use the code for whatever you want uh it's open source you can even submit pull requests to this project if you want to get some practice in or help out where's uh next yep 5.1.0 um he says don't stop the live streams jesse everybody likes them i have no plans to stop in the live streams um alexander says keep on with your live streams i like it a lot cool yeah i i'm pretty sure i've said this before but i will continue to do live streams um one for as long as you all think that they're valuable and helpful to you and also as long as i can like i have time to right now my boss is very open to me doing live streams like while i'm at work either working from home or working in the office as long as that doesn't change it should be pretty easy to keep live streaming if that changes it'll be a little bit more difficult uh because i'll have to do it outside of my normal work hours i still want to keep it going though i'd still like to make it work but the times that i stream will probably be a little bit weird at least for my time zone uh so the stream may be like five o'clock in the morning so i can get a stream in before all my kids are awake or something like that uh abby schick uh thank you for for this awesome tutorial oh you're welcome uh thank you for watching and emmy says the good thing is that we can ask questions at the real time and jesse answers us um i do my best to answer i don't know that i always have great answers but i i i do my best there are a lot of other people in the live chat that that know the answers and give really awesome answers better than i can give binary64 says hey jesse have you tried next with css sorry for all the yawning i'm gonna drink some of my energy drink of choice g fuel and uh as usual i am not yet sponsored by g fuel but i'm open to it that was kind of a running joke i'm only half joking though seriously i if g fuel sends me free stuff i will talk about them every time i stream uh okay i haven't so binary 64. i have not used that yet i i will have to check that out though because that sounds awesome binary says but setting that darker value more than once feels dirty binary says only 96 of my country support hsla hmm i never even thought about that so is that an issue is a browser support for hsla an issue for for a lot of browsers i've ne i haven't come across it and what is there a fallback if that happens would it just fall back to the default blue link color then or could i do a fallback or i have like two color values and one is a hex value i mean i guess what would be the point i should just translate that into hex anyway binary says did you do an npm upgrade to get next 5.1 uh what did i do well yeah i mean basically we use yarn so the equivalent in yarn uh that's what we did i be i'm pretty sure that's what we did uh darshan says can you specify margins uh in br tag for a particular breaking between two items uh yeah you you could um you could definitely style them you know however you want phoenix says uh br tags are almost appreciated or deprecated sorry um and no one uses them nowadays uh yeah yeah that's right i mean normally you would just add uh margins and things to your elements directly and instead of putting those brs in between i do see br's like like wysiwyg editors sometimes add them automatically so i i rarely see like code written by people that has have a lot of brs in them i'll put them in like in email templates and things because you kind of have to use oldschool stuff for email templates anyway um so like you you will still encounter br tags out there uh but normally it's because they're auto generated by something uh but so if you do encounter them then yeah you can style them however you want but if you're creating the html yourself then you probably don't need them you're better off just styling like whatever components that you're going to put the div in between instead just give those components the margins or padding uh let's see binary says can you take out those br tags after each item tag and move css um yeah i mean i could take out the tag so i could either manually take them out which would take too long right now so i'm not interested in doing that right now or i could use a function that when the data comes in it just automatically takes out all those tags um but the easiest way and what we're doing right now is we just do display none so if anybody wants to look at the markup and dev tools it's going to look ugly but to the average user who's not going to bother to look at the code there's no difference between taking the break the br tags out completely or setting them to display none it's um i just read where michael was calling john mr john so that's uh a while back my daughter was on one of the streams my oldest daughter and she she called john mr john uh binary says how does it get from wordpress into next.js we we are using graphql so we have a plugin called wp graphql that we've we're using on the wordpress installation and then we can call that that graphql uh endpoint and we can query that using apollo so we have apollo running with next.js with react and so that we can we can query that graphql uh plugin running on wordpress it grabs all the data and sends it to us so that's how we're getting the data in slowly says i'm forced to just to use just the right side headphone because i can't be ignoring my wife i must make sure i hear her i i do the same thing sometimes i'll just pop up like one side here uh so i totally understand that uh let's see uh i got auto scroll down to the bottom so sorry i'm trying to find find the where i left off at uh yeah binary so uh binary is asking some questions and phoenix says you know that they could just watch some of the older streams which i mean that's cool um but i don't mind the questions because i assume like there are probably more people uh watching now and later on that are also new the stream so i don't mind explaining some of these things over again uh because it'll probably be helpful and i mean there there are a lot of streams right now so it's it is gonna be pretty crazy to watch them all uh maybe i should try to do a better job of explaining what's happening like maybe write up something that can go in the description to the video that's like just a um a summary of what we've been doing because even i mean i don't know that i've ever actually done a full summary in any of the streams so that might be that might be good to do i probably won't get to it today but um i'll keep that in mind as as something that would be helpful to do also i think the readme file on the repo does have a little bit more of an explanation as well so that could be help for anybody that's that's not sure what exactly we're doing uh check out the github repo that's linked in the description and the readme file uh that comes up the first thing you'll see the that'll come up does have a bit more of a description of like what technologies we're using and and uh what we're trying to do how many says why are you always testing on mobile size uh so i like testing on mobile size especially when i'm streaming for two reasons the main reason is we expect our audience to primarily use mobile devices to view this site so i want to design it while looking primarily at the mobile view or the really small screen size that way i'll make the decisions with that in mind if i did it at widescreen like as much as i would try to keep in mind the mobile it would not be the same and what i would end up doing is putting more on the page than can reasonably fit on a mobile screen so it would always feel like the mobile view is is like the secondary view but i want it to be off i want it to feel like the mobile view is primary and then the desktop is the secondary view uh so it's just kind of a different way of looking at it i mean i don't know that it's right or wrong it just depends on your audience and what what you expect what kind of devices that you expect your audience will be using primarily the second reason why i do it especially when i stream is because uh like we can see you can see a lot more of the dev tools here so i can make the font size larger and it still works so it's just kind of a practical uh way to to do this when i'm not streaming i can have this spread out on two different screens so i i could do full screen with the whole screen filled up with devtools stuff and it would be you know more doable that way uh spar wheels says is it possible to make this site just using html css and javascript any frameworks yeah for sure yeah you could you could definitely do that uh the tricky part would be though handling all the routing so like we have clientside routing happening so if you wanted clientside routing like trying to make that on your own is a bit tricky uh and then all the data like you would obviously not want to hard code all that data that would be huge like your code base would be insanely huge uh so you would want to be pulling in the data from somewhere so you would have to handle that um you know how are you pulling in that data you know probably using fetch um so it would there would be a lot of complicated things that something like react handles for you and then the same like if you're gonna pull in the data with fetch search engines are not gonna see that so are you going to server side render on your own uh so it's just like there's there's a lot of things that at first sight it seems like hey this site would be so easy to do with html css and javascript well okay it would except for these other things like how do you handle all the data bringing all the data over how do you handle um users who aren't don't know code editing data how do you handle serverside rendering how do you handle clientside routing like there's all these other issues that just like okay react just makes sense here because it takes care of so many of those other things for us let's see darian garcia says is this being uploaded elsewhere because i'm not seeing these questions on here i'm not i'm not sure what you mean so where what what questions are you not seeing and uh uh darian says yes moving forward i've read it's best to design uh mobile as first and that's where the market currently stands yeah yeah so i mean that's in general i think it's safe to expect that more and more people are going to be viewing the web primarily through a mobile device but there are still some instances where you may have uh users primarily viewing your site on a desktop like i'd say for instance um if you were designing an internal website for an organization where everybody was in an office setting and had computers like desktop computers uh they may be more likely since it's what they're used to to just access work related stuff on their desktop computer so you would check the analytics and you know you may have a situation where it's you know overwhelmingly desktop uh users so depend depending on you know whether people want to view it on their phone or that's anything desired then maybe you don't want to do mobile uh mobile first development uh for that so i mean there are still some cases where you may not want to but just in general i think that mobile first development is the way to go uh and nestle says uh you are too good thanks uh you're welcome thanks for watching uh idoc uh for the win says uh i really want to learn uh css and javascript um well cool yeah uh definitely check out the uh free code camps oh darian just said that all right so good advice yeah um check out freecodecamp.org and you can get free lessons uh that'll start you out with html you'll move on to css and then you move on to javascript it'll just keep building you up and you can learn a lot just through that it's a really good resource and feel free to ask any questions if you're ever watching this stream i'll be happy to answer you know answer your questions some of what we do will be kind of way beyond if you're just starting out learning it it might be a bit hard to do my best to explain it it looks like the the stream health is not great right now so i apologize if things are getting choppy i i hope at least my voice is still coming through all right uh since i'm not really coding right now that's that probably matters more than anything which that makes sense my kids just got home from school so odds are one of them started playing or attempting to play some videos she's let's see uh idoc says do i really need to learn html first i already know that uh no you can you can skip over so you don't when free code camp you don't have to uh do all the lessons right in a row you can skip around so um i don't know i'm the type of person that i usually just start from the beginning i it just like feels right to me to start from the beginning and i i usually just fly through you know the basics but occasionally i do pick up some some piece of information that i missed you know i just never knew or maybe i had just forgotten so i usually do get something out of the basics but it's probably like mostly a waste of time uh so yeah that's entirely up to you whether you want to go back through html stuff or not but you definitely don't have to oh and it looks like phoenix and um uh darian also had similar similar thoughts there about you know it really doesn't hurt to go through uh the html stuff again even if it's just a refresher oh michael says i i restarted and uh and beat free code camp because it added some new things cool yeah i'm gonna have to check out the new stuff on free code camp as well it's been quite a while since i've done any of those exercises darian says this is amazing i subbed if you need help with documentation i'm more than willing to help just send me a ping oh okay cool yeah um you know darian i i definitely welcome help for sure um if check out the repo and if there's any place that you you want to help let me know maybe i'll open up some issues having to do with documentation um you know i'm definitely open with that and i'm open to help out like help try to find somewhere for you to contribute if you if you want to uh divya says how much do you recommend to learn vanilla javascript and then go on with node.js and react.js right now i learned node and i want to move on to react or angular 4 please god i mean if if you've already learned node then i'd say you're probably fine to go into reactor angular i mean i obviously prefer react but there are a lot of people uh good developers that use angular and build you know cool stuff with it um but yeah i you know if you understand node then i don't think react will be you know that difficult for you uh to to work through uh let's see michael says is there a way to find out what files are importing a function from another file like which files import from init apollo um i mean you should be able to see let's let's check it out where's where is where is this and initial follow where do we have this at all right where do we have there we are and i thought it was by the queries okay so in init apollo i mean we should be able to see everything that's being imported should be up here so we we shouldn't be able to use anything down here that isn't already being imported from up here um and then if it's a particular function from something up here then we would need like so for instance like this inmemory cache so we're using inmemory cache dot restore so like the dot restore obviously we're getting from inmemory cache does that make sense is it possible to get a job after completing free code camp's frontend certification uh yeah people have people have done it uh i would say i mean the important thing is to make sure that you have a good portfolio and have really like built some things contributing to open source projects helps a lot and i mean applying to a lot of places having a good resume and a good like good connections really help so there are a lot of other factors that would go into getting a job but in terms of learning the skills you need to start building things your frontend certification will definitely give you a bunch of those skills and then you'll pick up a lot more on the job uh but yeah there are like on the free code camp forums there are a lot of people who have said that they've gotten jobs after going through free code camp so some of them just front end some of them the whole thing like and everywhere in between uh me says right now i have to complete the advanced algorithms and the advanced projects and it is going well i guess but i don't know where to look in order to get a job uh yeah i mean there's check out i think where i look uh stack overflow uh jobs has a lot of of good job listings for developers linkedin has a lot of job listings so just between those two places you'll find a ton of jobs uh yeah i would i would try there first and just everything that you're even remotely qualified for apply to even if you don't meet all the requirements still apply because you you never know maybe they won't get anybody that meets all the requirements uh so it's it's always good to try at the very least you know if they give you an interview even if you don't really have a shot you'll get practice interviewing you know you'll make some connections at that place so it's it's always worth it to apply yeah uh so michael yeah in terms of finding out where all these things are i i don't really know of any other way to figure out where they're all coming from i mean to me like as soon as i saw the question i i just thought like hey we'll just see where the import is stuff is coming in um and then that would at least point you in the right direction where those files are uh me says thank you you're welcome you're welcome i hope it helps uh michael said the stream cut out when i was starting to answer the question oh no uh michael you may have to uh watch the recording then if you can't see this um but you know if you go into the init apollo.js file and you check out everything that's in the top here where it's importing from you know then you can see like where a particular function is coming from like the restore function is coming from the you know in memory uh cache which is coming from the file called apollo cache in memory so um and then if you hover over that it actually shows you where in the project that is so it's within the node modules so that's that's how i would go about finding stuff all right and i've reached the bottom of the live chat uh so here we go we're gonna come in right at about an hour and a half for the stream so i had uh i think i had said we were gonna do about an hour an hour and a half so i guess i'm right on time here uh thank you all for watching thank you for all the help and advice and i had a lot of great questions and answers in the live chat today is friday so i i hope you all have a great weekend i will probably be back monday uh probably like in a stream earlier in the day so maybe like a morning stream for eastern time zone um oh sorry so uh i il yes or else i'll work on that remind me in the next stream about how to pronounce your name correctly and i will definitely uh definitely do my best to remember that um but anyway yeah again have a wonderful weekend uh i will see you all on monday