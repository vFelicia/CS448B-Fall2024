You may have asked yourself at some point using Git 'how do I undo that last commit?' We've talked about how a commit has a commit ID and that it's really important because of the metadata that includes. Now let's talk about some ways that you can undo commits and especially which ways are the safest. My best suggestion for changing a commit in any way is to use 'git revert'. Now, when you revert you're not technically undoing the commit you're actually creating a new commit with the exact opposite changes of whichever commit you'd like to undo. This means the commit ID remains unchanged so it's absolutely safe to do even on commits that you already pushed to the remote repository. There's other ways that you can undo commits too, but you need to be a little bit more careful about how you do them and if you're actually using these commands on public commits, commits that are on the remote repository. 'git reset' is a very popular way to do it and in a lot of use cases is the best way. Now, maybe not so much to undo history but to change the words that you use in a commit message is 'commit amend'. 'git cherrypick' doesn't so much undo a commit but it's important to know that it does actually change that commit ID. So, to recap if you want to undo a commit 'git revert' is the best way to go there are other options, but always be cognizant if you're changing a committee ID if that commit is on the remote repository.