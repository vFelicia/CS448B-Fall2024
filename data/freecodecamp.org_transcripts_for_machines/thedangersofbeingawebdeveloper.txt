thank you it's a an enormous pleasure for me to be here today and when i rehearsed and went over the target first i was wondering whether i should say something along the lines that i'm not sure whether i'm throwing mark under the bus or he's throwing me under the bus here so we'll see how this turns out i'm jens i'm a web developer and i want to start very simple here and the simplicity here should probably start with that i only want to say that i've been web development for about 20 years now i worked for small companies for mediumsized companies for larger companies and i had the pleasure to work freelance and as a consultant and to work on my own projects and on other people's projects and all of that and researching a bit and publishing and blah blah blah so the only thing i want to say with that is i i feel grateful that i got to get to know our field from a variety of angles and i'm very happy about that and i'm happy about that particularly because i think our field and i like to be liberal with terms sometimes some people might call that quite in precise but i like to call it liberal that i also lump together web development and web design at times so here i want to keep up a development focus but don't mind me sometimes bleeding into web design as well and i think overall and that is is one thing i want to emphasize here now in the next next few minutes is how great of a field we are in and how great the neighboring fields are and i'm also a thing that i was wondering about when preparing this was whether i should really keep this metaphor that i had in my mind and it's one that i stole from someone who is talking to writers and i like to read a lot and i like to pick up books where on any kind of subject and as i publish and as i write a lot i picked up a book about writing and this book was by rachel aaron i believe and it was one of those heavily promoted books on amazon and i read it and i took a few things out of there overall contain some nice advice and then one metaphor stuck in my head because i feel like not only am i terrible person to tell jokes i don't always feel like i can tell good stories and so she used that metaphor of if you want to tell the story you take your characters you put them in the tree and that is supposed to symbolize at least you can pick one tree there and you put it all on fire and then you try to save your characters and i later thought like is this a good way of structuring a presentation and i didn't think about it any further that happens and so i will start with that we will put some things into a tree and there are five things or families of things i want to emphasize in this first part things i find exciting about our field about web development and design and also when starting to prepare i thought like well the first thing to notice is like how it's really easy to get into our field the first thing to come to my mind was that there is low equipment cost for instance anything with a screen would do any computer with the screen would do now that seems a bit very simple so i thought the next good thing would probably be that it's really easy for us to start get into our field and i've made the mistake in earlier years that whenever people approach me about how do i learn web development how do i learn web design i scared them by telling them read the specs go and read the specifications and then people normally left and went elsewhere and it's still something that i try to not give this advice anymore but what i like about this is if you think about other industries and other fields then you notice that oftentimes it's much more obscure and much more expensive to actually get to excellent sources in order to learn a craft and i think we're in a kind of a first i thought like privilege but that would push it probably but we are in a great situation that we do actually sit on heaps of materials of excellent quality for free so specifications and rfcs dry as they may be they're still excellent in order to start getting into our field and then for practicing that of course is also very important for us in order to actually learn our craft and for practicing there are also hosts of interesting options i think and the first one probably being that it's very easy to just work with local tests and local files so we can fire up text editor here in doctype html title foo p bar and as you can tell like i'm alluding to a very simple simple form but valid form of html that you can then save and open your browser and then you see like bar like as we just keyed in the content for a paragraph very simple to this day by the way whenever i want to test something css or something like that i just work with static files local files local test files very simple and quick to do and then another thing then that is i think in a nice peculiarity or characteristic for our field are of course that we can use and work with our own websites and if i can get a quick show of hand who here has their own website that is a good number and and and i feel like you will all know from your own experience then how this doesn't just start with the practice that you get by running your own website but it starts a thing with a deeper commitment so you own your own side you feel responsible for it you feel committed to it and then starts all that practice that you get and be it that you start and that by the way these days is my recommendation really for people who want to get into our field to actually start with our own website because of the commitment because of the practice we get even when it's just a business card type page even that can be useful the commitment the options that we have to try things to design to code to to work with something that we own and that we identify with to some degree hopefully not too much and then of course like we have other people's websites and i think ironically at first i thought like i make a snarky remark about that how we run other people's websites and sometimes bad things happen there but that would be a bit too much because normally very good things happen with that because yes we do practice and yes we also sometimes we need that as a playground too in order to grow and learn as professionals this is this is useful but it hones our skills and we're mostly in the line of working with other people's sites and so there are like all these practice opportunities which i believe are actually unique about our field the really special thing then about web development and design then i think is the great power it really comes with and also at first i thought about should i go and talk a bit about full stack stuff and i do struggle a bit with that term and i do struggle a bit with that term when i pick up books again i said like i like to pick up random things and there was this book lately a great list of resources about frontend development and the author tried to define full stack development and said like well it's really hard to define but that is of course not a real definition then for something but it felt like to me like yes that is a bit unclear and the worst thing for me was always the implications a term like this may have for quality if quality is a priority for our work because if you have a blurry term and you throw in a host of technologies then does that all imply that person is an expert in all these technologies would be an interesting thing but it's not that important here really because i think we have a much better term a much more interesting term and a much more powerful term that we can inherit ironically from the agency world where it's about full service and i find full service really really really interesting because so full service first and foremost means in the agency run if someone needs a website or an app you develop a concept you design you code you deploy and you launch you monitor you optimize and if you're lucky i like to be a bit cynical about things when you are lucky then it's all it also gets maintained of course in the agency world this is tricky because normally you need maintenance contracts and blah blah blah but maintenance in the agency world to me seems always a bit tricky and difficult but more from a client angle actually than from an agency angle because from the client side you need to think about maintenance going down the road in many cases but back to full service as professionals as people working in our fields we many of us are venture to say work either for agencies at some point in their career or the way with agencies at some point in their career or they run their own websites as we've just seen like many of us here and in these capacities we do touch on this i believe we are all familiar with this to some degree we all write some concept or have some idea about something conceptual at times we do design we develop when we have this development focus of course we do code and we bring stuff online and we monitor and we optimize and we market and everything so i think all of us have a full service kind of profile and yes to varying degrees some of us are well let's assume like developers will normally have their strength there some of us have also certain design background or even stronger there and others will find it easier to say optimize something whether that's for search engines or for conversion or whatnot and then others like yeah have again different profiles for me personally i guess i tend to always overestimate my design capabilities but i'm definitely very sure that i have no marketing talent so there i know where i stand in the full service run a little bit at least the thing again is the power now so when we have an idea about something about an app or inside we are in the situation that for us we we can quite possibly actually execute it quality considerations left aside now or at least we know for the things that we can't do who we can contact who we can work with what we can do and we all probably know people like who approach us and say hey i have this idea about this app or a site and then they talk about the idea and we feel like oh it sounds kind of interesting maybe we want to contribute in some in some way and then we don't have the time or they wouldn't i don't know it's just not financially interesting or anything like that and then months later we meet them again and nothing has happened because they are literally i think we meet people like that they have great ideas but they don't have any idea where to start they don't know what to do they don't even know how to ask well apparently they ask us and we should know and we could probably do something if we have the time and the interest and stuff but the point here is that we are actually in the situation to execute on that and i think this is one of the greatest things about being in our field like what a unique situation and position we're in and then there's complexity and at first that might sound odd right i mean it doesn't exactly sound like something to be excited about but i believe it is because um actually thinking about i used to work as a factory line worker at some point as a summer job and after day one or two i didn't need this belt anymore that other people were using first for the screws and stuff not to say that i was so quick or something like that but the work was so damn boring that i was adding excitement by i don't know like changing the way so i walked around the line and stuff like that in order to work on this and there were people like working on this for 20 years and then most of the students working there were already fed up with this after two hours so it was really interesting to see that and we we are certainly not in the field like that but there is literally so much complexity that i think it challenges us in very interesting and very constructive and very useful ways and i actually believe we should accept these challenges sometimes for me people are a bit fed up like oh my gosh web development last 20 years changed so much like all these things and then they don't want to then they don't feel motivated anymore and they regret like that things have changed the way they change but i think we should accept that and we can't even feel excited about it and also as a little story in the early 2000s i was working for a java software company i was the only in inhouse web developer i was working on the corporate side and i worked on client side and these were the days really dark days where even netscape 4 had to be considered and there was ie5 and ie6 and nothing really worked and compatibility issues and support issues and still at days where we had tightened the grip on html because we all wanted to write this strict xhtml and we wanted to use those 100 properties that we had in css and now we're approaching 400 or something like that which really like it's not just linear growth like things got really complex with css and i'm really torn on whether i should get started on that or not but complexity so i was bored i was like okay i approached one of the founders i'm like lars i want to become a software developer and that is actually one thing i wouldn't say now and i i wanted to be a software developer and he's like sure we pair you up with our programmers and here are some things you can work on here is a book and i started reading bruce eckel i think thinking on java i don't i'm not even sure how many thinking on books he has written and i started doing that and i was just lucky that i started reading other books i started reading steve cook's don't make me think and nielsen's homepage usability and then stanford university's bj fox book on persuasive technology which is a really interesting book still about human computer interaction i read robert bringer's elements of typographic style and also a lot of books by edward tufte on information design and i can highly recommend tufty really because not just for our field as professionals but in general because we deal with information design in a lot of other places of course in the media and newspapers and there is astonishing degree of problems like with graphs and charts and they sometimes distort the information that we really get and i think tufty gives a nice very pleasant access to this matter so it's quite enjoyable to deal and to actually learn about the subject and all the books that are listed i think like we most of us would have read one of those books if not more or all of them so they're really excellent books and i was just lucky that i ran into all this excellent literature and yes it's not development stuff but i realized wow this isn't boring there is actually so much more to our field and it all relates to my and our work so for me of course back then it was this personal decision like did i want to stay in web development or when do i want to get out of there and i stayed and it was that moment where i realized no this is not boring there's a lot of complexity and this is really challenging this is really interesting this is really cool and and i believe well the excitement carries me through each day yeah so complexity then now as we progress from how we get into our field to discovering and acquiring powers to getting to appreciate the complexity of our field then we see that we can also give back and i see prime two prime ways of giving back to the community into the field and that is one on the other on the one hand that is open contributed to open source projects and then two doing translation work and if i can get some hands again like who he contributes or has contributed to open source projects and who here contributes with translations this is cool like i suspected that on the translation end we might be a few it might be fewer people i think this is actually the really this is a very interesting piece because we are and we are getting to learn more about accessibility i think today like we are actually making content accessible so we're we're helping that more people can get access to let's hope excellent information so whenever you read an accent article or whenever we read a super boring spec we can go out and translate it and make it available in our mother tongue or whatever we are capable of speaking and that is great and then of course we can so apart from yeah making that accessible we we and helping helping the field this way and helping the projects this way of course like if when we run our website we host the contents there we sometimes get a nice kickback too just as this extra incentive if we then choose or if that's important for us on the other hand for open source contributions they're the only thing that i want to point out probably is that there's no to no change or no contribution that is too small uh i believe it's very important or it does not it's not necessary that we become fulltime contributors to a project but that small edits like whether that's fixing typos improving code snippets and so on go a long way actually in contributing and helping other people in other projects and for me personally that means whenever i folk a repository and i go over something and i have routine checks and routine scripts go over my code base and sometimes say they would compress images or something like that i would play that back into the repository and i think these small things are absolutely legitimate and they help so it's not needed that we say become like yeah again like we invest a few hours every week in order to become like really like strong contributors and supporters of an open source project this can be simple things and small things that we can contribute and i think this is pretty awesome about our field that we can actually do this so that we have this option to give back and then as a fifth point that our family of points if you want that like to call out is also that option we share this with other fields of course but it's still a bit different for us the option that we publish our ideas or commentary or research that we can do this again another benefit when we run our own site we can do this there and then we can do this for magazines and we can do this for publishers and we have a great opportunity there or great possibilities there in order to again like learn and grow through teaching in a way and then also to build a reputation this way and i find that's unique and if not for the medium because this is our medium and there are probably more options and easier and simpler options for us to go out there and publish than this for other fields we have several advantages there with these things i want to close this first part and move on to setting everything up on fire and the way i want to do this is actually not analogous like i will not take the points that i made earlier and try to refute them or anything like that what i rather like to say to do is like take some perhaps different aspects one for instance practicing and that is such a big topic actually because practice is really important for us i hope we can agree on this it's important that we touch code as developers need to be able to code and as designers we should also be able to design something now and it's clear to us that when someone registers a domain a dreamhost does a oneclick install of wordpress goes to squarespace and generates a logo goes to paletton and generates some colors and then goes back and downloads the theme and changes some colors and updates the logo at that so a developer nor a designer anyone can do that and of course what i'm referring to is an entire line of business that allows people to set up sites like that but we have similar situations in other ways in other aspects of our work because if you want to really push it on the other extreme if that's developers we just go and write our css write some selectors some declarations we test and then well off we go preprocessor linter who cares and i exaggerate of course but if you think about it then what is the difference really so we leave everything that is related to the craft really to tools because anyone here not anyone here anyone outside we could ask like hey this is the basic syntax of a style sheet how about you go and write something and the question sometimes is like is that is there a noticeable difference then they might struggle a bit like finding like the declarations that they need in order to do something and of course it would take some work but what is the difference really if at the end of the day at the end of our work we leave everything else up to the tools by cleaning it up sorting it like optimizing it in whatever fashion and i do not want to say that our way of writing css this way is so so wrong and i will not make suggestions here but it goes beyond that we have other tools that do similar things for us and the trickiest thing is we want that to not just because of convenience but we actually go out there and this is a page of the google book where at least where i picked it up is like whenever you see things being done repeatedly and you can automate them then go and automate like for efficiency and productivity that is really important and that there's a conflict there so if we go and try to automate everything and try to use tools for everything use scripts anywhere then that has an impact on our craft and we need to be aware of this that's probably all i want to say here this is one danger that we need to watch out for and i've at some point pushed out this idea certainly not new certainly not just coming from me this idea that we need to make our lives difficult at times and this is not something that any one of us can tell the other person because we need to be honest enough that we notice and see where we have struggle what we can't do well enough in order to then decide we don't use tools for these things but we understand the technology and we understand how to really do it on ourselves and for me as an example i like to focus one of my the areas that i like to focus on a lot is maintenance and maintainability and i intentionally i'm not a masochist well not sometimes maybe but for some projects i don't use a condom management system nor aesthetic side generator or anything like that i maintain it manually and i have one side i think very small fortunately thankfully 38 languages and i maintain it all by hand and this is painful but it is painful in a good way because when i notice that i up then okay i learned something there's not a script running in the background then compiles it or i have just one piece where i change it now i intentionally made it a bit harder for myself so that i know when i screw something up that i feel the pain so that it's not a tool remedying or like that i never noticed that i screw up in the first place or worse in a team environment that somebody up else cleans up the stuff that i've i've done and this is an example for that so where we intentionally make our lives more difficult where we focus on practice where we focus on actually really understanding and mastering our craft also thing that i've not not even alluded to but you can see that clearly i think in the power camp our industry and our field allow us to work alone you can work freelance and selfemployed and you can even as a consultant i think you can spend a lot of time alone and then worse and i i really like i don't want to make this a topic here but i think there are some problems around that worse we romanticize and we glorify this idea of the digital and the global nomad you can just work anywhere just go to the caribbean and handle your client projects we say this is like great this is an ideal this is like the ideal worker these days and i'm exaggerating again just for the emphasis but there are problems to that and i'm not talking about like what this really does with you like whether it's really that favorable and desirable to leave you all your friends and family but the thing is when we work alone on stuff and when we work alone on stuff for an extended period of time there is a chance that we forego any kind of criticism and criticism in the sense of scrutiny not in a sense of negative feedback by all means just scrutiny and we know that pair programming peer reviews code reviews are useful for that reason just so that we have an eye on each other like that we can check like is there something that we can do better or is there something obviously wrong or something like that up to the point where we outright escape reality and that probably sounds good i don't really have a good example for that but i guess you can really push it very far and so it's something that we need to watch out for uh that when we work alone this is an option that we have it comes as a perk of our field and we will see at a later point then too like how it is actually also very tempting to do that but how is something we need to watch out for that we need to guard ourselves against and then the power in general and this guy having no limits and actually there should probably say we obviously have touched on the point of choice where you can work alone in freelance where you can hire with agencies or multinationals or you can try a lot of things in our field up to founding companies and we see great examples for companies in even like in web design and development if i think about jimdo in germany for instance or wix in the us for instance companies that of course like target like people like who want to run websites and we are in that business and so on i find these are interesting examples for companies that are successful i think they actually had their ups and downs but as examples for where we can push a very development and the designcentric idea of our profession and so what happens there is and i don't necessarily see that and observe that that much when it comes to career choices that people are literally waiting for months to decide whether they want to work freelance or whether they want to work for a company but we see this i think in technology and tool choices and then also when work when people when we work on our own projects that we lose focus that it's that with its power that we can't do anything leads to that we actually do anything and that is problematic and with that comes some sense of inertia too that sometimes we get a bit slower because first we need to evaluate this and that and maybe how do we choose and and and things like that so there are effects of this and then in the next aspect the complexity of our field now now we get to some of the drawbacks that it's got really obscure now what's right or wrong and in the technical realm as we know there often is right or wrong sometimes there isn't there are good number of questions and i think we are then venturing more in design and usability and preferences and so on you don't have a right or wrong but for some technical questions you can clearly say something performs or works better than the other but it's gotten really really difficult now to tell when that is the case and i would venture to say that this affects us as experts as professionals just as much as anyone else like whether we're junior or more expert or more senior and i think there are two reasons for that one thing is like something i think we all struggle with in a way and that is probably the simpler reason that it's really hard to tell like who is an expert how do we judge that is that like that person has published something or worked for a company or has written this project or like what is it how do we tell like whether a person like really has a point somewhere and maybe we find out we can't really tell that because we can all make mistakes and of course on the other side of the spectrum there are good points that junior developers and junior members of our field do or do make so we sometimes get feedback from people who aren't really long in our field and they can make excellent remarks and point us to things that we have completely overlooked so the expertise thing is one thing the other thing then and i will try to not make this too academic because i don't think that would help us that much but there is a problem in the way we argue and i will give an example also out of a field or an area dear to me and that's frameworks development and you can perfectly imagine a person a saying hey yes absolutely use a frame always because you can quickly get something out of the ground you can quickly work your project and quickly see whether this is working or not proof of concept and then you get a person like me who says oh my gosh please do not use the framework because sooner or later you want and what you want to tailor a framework an external framework can never know what you intend to do with your site so it comes with too much code if it comes more often than enough it comes with too much code then too little because obviously you pick the stuff that covers your needs but it will always cover more than those so it has bloat in there it's thus it's not efficient as does it has therefore brings performance issues and there are also security problems with that if you're always continuously hooking up to thirdparty services or servers or something like that or always need to watch for a third party now you have these two persons and they tell you something contradictory one says don't use them yeah that says do use them and of course like we already see what's the problem here because the premises and the goals are different the person like favoring and advocating frameworks and let it be something else too like could be libraries or something like that it's really saying like here speed of execution is important and proof of concept and the other person says like no quality is important and security so premises are different the next thing there is like we need to i guess like this is fairly easy to follow but it is something that we need to keep in mind both as recipients when we follow arguments and then also as the ones bringing them forth when we write we need to be clear that they're that it's important that we make clear the premises of our arguments what are we after and then we can still run into situations where you read five that we get five different expert opinions they are all different and they are all right and then you have other aspects where of course like you have several people you they all give you some answers and they're all wrong and it's just gotten difficult to tell and i think we perhaps just need to acknowledge that it's gotten really hard now and that we stay careful when it comes to judging solutions and judging commentary and judging our views because of exactly the situation so it's important that we keep in mind that we argue properly and i don't think like since this is really something you can dive in academically where it's about like the logical construction of arguments that this is probably not a problem that goes away that soon not in the landscape that we're in right now where we face that ton of complexity the different technologies the different tools the different philosophies the different approaches the different mindsets etc and then the fifth point i want to make here where we put everything on fire is that instant publishing as nice as it is as it is to get a kick out of publishing something on our website the kick we get out of publishing an article for magazine the kick that we get from publishing our first book or the second or whatever that this is also something to guard against because yes we probably get some reviews then at later stages it seeming it must make some sense what we're saying and what we're doing and yeah probably something useful in there but it is a problem too because we get this gratification we get this kick but it is also a danger that it it messes with us in a way that we think like there is something more to our work that we are somewhat special and this i want to use to actually quickly jump to the next points where we try to get ourselves out of this situation and i can already say i don't have five points again only three more and they're also not exact matches to what i've just described we've seen i hope that our field and our neighboring fields are really special and i think they really are but the thing is we're not and it's funny because i do not want to make this a hobby psychologist thing and i don't believe much in this idea that we say oh no we are all special and then we're not again or something like that and then we get into some i don't know where you end up then but this is where this is going when you start arguing this way of course we are valuable and we are people and everything but our field gives us unique opportunities very unique advantages but it's not that this makes like special in the sense that we are also entitled and i think entitlement these days is a really important thing to keep in mind and i need to caution myself now not to again like get on this track of hobby psychology here but there are these indications and these ideas that whenever we look around in society people for actually very for quite opposite reasons actually the people who are doing really really well seem to feel really entitled about everything needs special treatment and then we also have people that would do really really bad poorly and they also feel entitled and they also feel they need special treatment and we have that and i want to stop my commentary on that there because what do i know but the thing is it is something that i think affects us too there are unique options and opportunities in our field unique powers that come with it okay let's just be grateful for this the other thing that i think we can look at more closely is focus and i want to start with a little story there i picked up a book by gary keller last year it's called the one thing i think is also pretty popular and i read this book and i'm like ah okay awesome focus and the idea is really like you pick in your work life and in your personal life etc maybe also for your day you pick your one thing that you want to focus on the basic the essence of the book is pretty simple so what does jen's do i sit down and open up a spreadsheet and as a selfemployed person working on my own stuff i'm like i'm listing all the different things that i'm doing i come up with this list of 50 items i say yes okay yeah focus and i was marking through and axing out like these things that weren't important or fun like yeah they're not important ended up with a list of 45 items that is not focus and it took me actually a major personal earthquake earlier this year where things were pretty shitty and i was like i don't really work on stuff right now but for some reason i need to like i need to do some things and i was looking at the different things that i was doing and thinking about them and also like feeling a bit more like where's my heart at because i was trying all sorts of and stuff and projects here and there because when you're selfemployed and when you really look into making a living and we again we have these options right we can focus on content size affiliate marketing there are people making thousands of euros with that so why not do these test balloons and as looking at it and end up with two or three things i was like okay yeah that okay but didn't set out to get through a major crisis but at least i'm focused now and i do not wish this to anyone else here that is necessary or and i want to suggest that it's important for us to go through any kind of crisis in order to get there but i do believe and i strongly believe that it is important for us to focus that we are aware of where are our priorities and by the way things get of course as always they depend they get more subtle for instance if you are a junior developer or designer or member of our field it does make sense to try things to cast a wider net try things don't be too focused just look at everything but the ones for us more senior here i think it is important that we focus that we know what is really important what are the projects we need to look at what are the technologies you want to be really good at so what is it that really matters and where is our heart at i think this is really crucial and then lastly this is odd thing too and i will try to explain this just a bit because we've already talked about working alone and stuff like that and then also what the options that we have on our field like do with us and for me try to think whether this is such a useful start but i'll try it this way in my time at google and it's a high performance environment never really struggled there it's not to say that i can do all these things that easily no the reason why i didn't struggle and i only noticed this years later was that i had already carved out a niche i have my specializations and i suspect many of you do too you specialize in something and the interesting thing about specialization is it's actually a very smart way of evading escaping competition because when you're a specialist in something and when you work in an environment where it's the only evidence when you're the only person doing this stuff so it doesn't mean that on the on the whole planet you're the only person doing this no but it suffices if in your company or in your team you're the only person doing something you're a specialist and it's harder to compete against you and what i'm saying trying to say is and i need to start another thread here there's an excellent book by alphycon called no contest and not only does he argue that we as humans aren't inherently competitive but rather the opposite we are cooperative we get where we are and we got where we are through working together through cooperating and i deem it actually really terrible thing when we keep on telling ourselves these stories that we are all competitive and that we would eat ourselves alive and all that stuff i think this is yes we are cooperative so now when you look at it if we assume that we are cooperative and then another point cohn made we are in an environment full of structural competition as he calls it where in education in the workplace in society you have all these circumstances that force you to compete with your fellow beings humans the english leaves media mentioned that's bad news so i mean we all need to be better and we all get we compared and judged and assessed and so on i think this is terrible and for me it was funny like because i noticed like i'm inviting i'm taking on competition i don't mind competing i don't want to but if someone is pushing me i compete but then i think the strategy is nice if you think about yeah you specialize or you work alone on things and so on because yeah you're competing in a way but you're also not and then as we've seen like some other issues come up because you isolate yourself in a professional level and so on you have different issues then so the point that i try to make here is just let let's not fix the world here i have no idea how what we are supposed to do about structural competition in the workplace no idea this is not my cup of tea really but it is important for us i think to be aware of this and to look at it and figure out like okay well maybe it affects us at least acknowledge that closing then i want to really with the what i wanted with it want to do with the opening remarks and with what i've split in here and there that our field web development design and also the neighboring professions are awesome they're fantabulous like it's really fun there are a lot of lots of great things about our fields like the what we learn there the opportunities that we have like the growth path that we see there the many options i think like are fantabulous so that's all i want to really say now and that's why i'm personally also very excited now to see all the other talks and to be here be on telegram now for today and tomorrow thank you