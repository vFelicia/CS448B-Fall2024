you hello everyone and welcome to the third episode I think we should call them episodes of the project Euler in which we're going to continue our journey to solve the project Euler problems okay so look at that my mouse disconnected that's a good thing how are you today let me see if everything's right let me know if you can hear me let's see alright I think we'd have a bit of a delay so yeah just let me know when you can hear me for those of you don't know my name is Tory pop I'm a software developer engineer program good sorry about it alright yeah I was checking the stream okay get so apparently it works so yeah I was as I'll be saying I am for it pop I am so far engineer I have a youtube channel I do coding tutorials and live streams and if we could camp I started doing this project order challenges I think three or four weeks ago and this is the third part we did the first five in the first stream then we did next seven I think and now we're going to continue I don't know how far we can get I haven't prepared I mean I didn't wanted to have the solution ready so that we can solve them together which is good because we can see how's the proach maybe we have to Google some things to learn about callouts I guess we're going to see when we get there yeah this time the chat will be opened so make sure you don't spam that much [Laughter] yeah so project Euler I saw someone asking what project Euler is so is a series of challenging mathematical or computer programming problems meant to delve into family unfamiliar areas by the way I'm nothing oh yeah so my mouse apparently wants to die today so basically it's coding challenges and of the free code camp curriculum we can do it in JavaScript which is nice if you haven't saw the previous live streams I suggest you go and look over and also you should start looking at them on your own and then maybe check in with us to see how how it's going all right let me see I have here another battery to change my my dynamic Mouse just a second hello everyone I see so many people that's crazy ok let me change this yes sorry about that but didn't know that my mouse is being fancy today let's hope it won't die again or I just have to use some other batteries all right well if I think the chat has a 30 second delay so what I would suggest you use the chat is for questions and okay let's see if this works now for questions and if I get stuck maybe you can help me last time Laurent helped me a lot so okay so my mic does I'm my mouse doesn't want to work which is fun we're going to start with the pause on the free code camp we're going to use JavaScript okay let me get some new batteries just a second all this work okay just give me a few seconds painted you all right I have to go to get new pair of batteries yeah it is a delay from the chat and the live stream so keep that in mind I'm not sure what's the latency but it might be a delay of a couple of seconds up to even 20 seconds so it depends on how they setup the stream but yeah alright hopefully now the mouse won't die see this is a developer's journey sometimes you your mouse will die when you need it the most okay good taking too long to replace batteries yeah I'm doing my best buddy alright so let's see the problem we are going to start today it's the large Sun what is it about oh look at all these numbers okay let's see work out the first ten digits of the sum of the following 150 digit numbers okay so I think we need to add up all these numbers and keep track of the last 10 digits okay let's see we also have here test number I think what they will provide us is just this big number yeah but although I see here is an array Oh 150 digit numbers okay so we have these numbers which will be inside of an array and we need to add them up and only return the last ten digits Papa reporting hello our pub okay so how will we do this what I'm thinking is that we basically only need the less than digits of all the numbers we're going to add them up and then store the result in a 10 digit number right I'm not sure that we need all the number so for example this part because they'll add up and do some things let's see so we have 3 6 9 10 for the test number we get oh the first ten digits okay so now the last all right for some reason I thought that it's little less than digit you okay so then we kind of neat add up all the numbers mmm and we go up and store the lessthan yeah first and not last okay you so let's see Laura do you have any ideas how we can approach this I guess we can keep adding the digits the good thing is that they all have the same number of digits right so we can kind of go one digit at a time and store the result yes some people in the chat are kind of route so don't do that not sure why this is not as I said I don't have the solution from the beginning we're going to do it on it well at the first kill and we're going to see the approach and how we what's this well what's the way to get to the solution so yeah yep let's start by doing this approach we're going to look over the string get the numbers and add them up you know ending number in a result numbers let's see how that works result number will be a string well or we could use an array let's try that so we're going to have an array and we're going to take is in the test numbers we have two strings which is good so we have 50 digits we can go forward i 0 i LS that 50 i plus plus and here we can get digit 1 well be well I kinda need let's see you know we know that intestines we have to string so we can do something like array of zero and the index will be let's rate at went fifty minus I so fifty I right because I is zero we want this digit then I is one you said at the beginning donate all digits for every number the most rabid leads are able to the sum well yeah we kind of need all the digits right because they might add up and change the last well the first then right try that so digit 1 digit 2 will be array of 1 so this string and 50 I okay so we have the two digits and we want to add them together so result numb well we're going to push digit one well let's just keep one and two one and two so one plus two right now this will work so here we're going to have 0 plus 8 will be 8 5 plus 3 will be 8 2 plus 5 will be 7 and so on the only issue will be for example here where we have 4 & 6 when we add them up it will be 10 so we have one extra for the next or than the next addition so we need to account for death okay let's see we could use a boolean to keep track of that so has what may be over ten and will be false so if one plus two and we had variable numbers but let's work with this and see how it goes if one plus two is bigger than 9 so it's 10 11 up to 18 we want over 10 to be true otherwise over 10 will be false and here when we push we kind of want to keep track of that also so 1 + 2 + / 10 if we have over 10 we want to add 1 otherwise we had 0 right but then here we also need to account for that right you might have so let's see we have four we have nine plus nine is 18 so we move one let's see an example here yeah so this is the perfect example 4 plus 6 is 10 so we move one here and then 7 plus 2 is 9 but with one from the previous addition we have 10 again right so let's create a sum and do 1 plus 2 plus is over 10 we can do this ternary thingy so then we add the sum and then we check if the sum is bigger than 9 if it is then we set it true otherwise we set it to false this should work so at the end now we're going to have an array let's see result now and let's counsel that law get here we should have an array oh there are strings good good good good good so we need to convert them to strings sorry from strings to numbers yeah not a number okay fifty minus zero so we don't have an index 50 we have an index 49 so minus I minus one thank you our pan in the name of liquor can for your donation yeah yeah thank you yeah it's kind of a bummer some people are just mean yeah and you can see other issue we have now we are pushing the twodigit numbers into the Sun and we don't want that so we can do module stem and then it will cut off that part okay so now hopefully if we did a good job we have the correct calculation for these two numbers and let's see so we start from the right and we need to end up here so the first 10 digits we have it other way around so the last 10 digits here let's see do we have something yeah look at that 8 3 4 8 4 2 2 5 2 1 so we have the answer here which is good which is pretty pretty good we just need to get it up right okay so instead of returning the result now we want to do a result now that let's see slice minus 10 so the less than numbers we want to reverse it like that we want to join it as a string like that and we want to convert it to a number like that so now if we run this test we should solve the first one here which is good you yeah that's true by the way for those of you who want to chat and also want to support this nonprofit which is very helpful I think they helped hundreds of thousands developers well guess if Amelia's with the articles and everything I don't know the numbers exactly but it's very helpful I promote them a lot if you want to support it you can become a member and then well you will be able to chat in the live chat okay good so we kind of have it for one well with two numbers what we have here is let's see 150 digit numbers so let's see we can do it with the pairs of two right I'm thinking yeah so we can kind to the pairs of two and then keep adding to the number let's see and all of them the number will get pretty pretty big so it will be more deeds here we have 50 digits but at the end we're going to have probably 51 digits 52 digit 7 I don't know so we need to account for that let's see we could store the result number in this array well we could store the first number right in this array and then add the second one to eight the third one to eight and so on and so forth and at the end we're going to have this big big big number is just that we're pushing here so that means that when it kinda need to push again yeah it's not not the best approach I'm thinking how we can do that because we don't want to lose the first n digit you you we could change the digit of the index instead of pushing so this works with two numbers but with more members might get bigger and we need to count for that or there is a better way can't think of a better way now you so let's do it manually once so we're going to add these numbers and these numbers and so on and so forth and at the end we're going to have a number from these two numbers right which as of now will be pushed in this array but then we kind of need to use that array and add up this number and the only issue with this approach we are having now is that well we kind of go over only 50 digits but this is the top the sum might get bigger I know that in node I think there is a big hint a library which could save us but I'm not sure here because if we just add the numbers so if you do something like let's test nums of zero plus test noms of one while this is concatenation we can convert them to numbers yes you can see that we have plus 49 but we kind of have the do we have the four digit Oh okay we kind of have the digits here hmm welcome and as a supporter thank you on behalf of wicked camp yes so I think we over well we overcomplicated this let's see I'm going to comment this out just to save it for now and we're going to return let's do the good old reduce we have the accumulator the item and we want to add the accumulator the number parts in item and we want to start from zero all right let's run this and see what we get well we kind of need this big number what happens if we say to string aand what happens if we do think substring zero to ten amazing [Laughter] let's see substring I always have to look at substring so I want numbers I think it's with like splice from 0 to index well doesn't seem to work though substring to really so what's happening doesn't it work for two string let's let's do this in the console as we can see exactly what oops what it looks like if it's a string it or if it's a number okay well look at all this because if you have a number 8 plus 8 it's this color say purple nice but if we have 8 plus 8 while we have the codes so we can use this array like that and we can apply the reduce on it like that and you can see that we have a number so now if we do two string oops yeah we get the string so what if we do substring now or substa let's zero ten okay so here it works which is good we kind of want not ten we want 12 because well we have the dot two it's inclusive so we want this and want to replace the dot with a string yeah look at so we add this although there are strings and we get a a plus 49 not sure up to how much it goes and then we use the reduce to add up all the numbers inside accumulator then we converted the string we get the 11 characters we want and we replace the dot seems to work let's see we use this here so yeah basically what I did at beginning it was pointless although you can see that oh the console.log doesn't work because we're having this oops so we don't have the call of the large side my bad sorry large sum with the test numbs yeah look at that yep the only issue is that it's not the number and we can convert it the number adding a plus well look at that it was much simpler than I originally thought pretty crazy yeah sorry about okay so we add up all the numbers with videos we convert the string to a number and then we convert it back to a string we get the first 11 characters and we replace the dot okay can I think if you save this and we go to the next one I just want to see if it will remain saved okay overcomplicating added highest yeah it doesn't oh well I guess we just have to download the code good doesn't matter how big the number is it at the end you need the first ten digit I would throw away the very small widget not sure what do you mean with that all right good so let's see the longest Kaulitz sorry if I mispronounced your name or I don't I think it's a name right who is this guy but or maybe not the guy it's conjecture okay okay let's see what it says so the following iterative sequence is defined for the set of positive integers and becomes half of n if n is even or n becomes 3 n plus 1 if if n is odd I've heard this before using the rule above and started with 13 we generate the following sequence so this is odd okay and we end up to 1 yeah I sat down but and I just didn't like it it can be seen that this sequence starting at 13 and finishing at one contains ten terms one two three four five six seven eight nine ten yeah although it has been proved well it has not yet been proved sorry it is thought that all starting numbers finished what which starting number under the given a limit produces the longest chain well one the chain starts with terms are allowed to go above 1 million once okay so that's the read it again because my English is not the best so which starting number under the given limit so we have a little limit produces produces the longest chain note once the chain starts the terms are allowed to go above 1 million okay this is interesting we need to find which number produces the longest chain okay one way would be to do the brute force and check for all the numbers created create a sequence and then see which is the longest but we kinda don't want to do that have another idea in mind so yeah if we do the let's start with that but you'll see that it will time out eventually so we have the limit and we need to start which starting number under the given limit produces under four let I equals 1 I less than the limit because we want under the limit we want to check the sequence so let's see we're going to write a function which will do the calculation and it will check to see how long it will take right okay let me think so let's write the function check length I'll check call length of the number okay and here we can do it a while number is different than one right oh and I guess we can start with two we want to do this thing here so if it's even if number modulus to zero we want to do number / yeah Thank You Lauren by the way let me know what's the delay of the chat let me know when you hear this I probably may need to set up a lower natural cold just so it'd be totally faster okay so if the number is even we want to divide by two else we want to do three times number plus one so this will be while is different than one right okay if number is one then want to return what this will guess we can say get call it slight otherwise we want to say here length which will be zero and here in the wire loop will increase the length plus plus and we're going to return the line like that okay good now you'll see that this won't be the best approach because for every number we're redoing all these calculations and it will timeout but let's let's just start with this and then we can adjust it okay oh boy it's pretty pretty delayed okay so we want to return the number for which the length is the longest so we want to save the number well D number this will be I don't know this will be two by default and then we want to say the MaxLite will be zero so here we're going to get a linked from the Catholics length of the eye which will be the number so we're going over all the numbers right up to the limit we get the length and now we're going to check if length is greater than max length then we want to do two things first max length will be learned we want to reassign the max length and we want to change the number I just added D number no it's not the best but we have the number here so I want it to be special and the number will be I and here at the end we can return the number let's console the clock this and they should hopefully work you can see that for 14 it works which is good well it worked for all of them oops yeah okay guess what I was thinking that it will be way too many calculations because for this number for example it will go up to 1 million so for all of the 1 Million numbers or you can see that why okay so up I guess oh you can see sorry let me about this so for 1 million numbers it will do all this and it should take a lot of time but apparently trans and it works so then we shouldn't worry I was thinking about doing an approach where we kind of store the numbers and their length so for example we know that from five to one it will take one two three four five steps right from 13 to one it will take that so I was thinking your Mac is too fast I'm not sure if it runs on my Mac or under servers yeah so what I was thinking is to store these numbers and whenever we go over a number and we already have it so for 16 all right let's sport to for example we have let's see one two three four five six seven eight nine ten yeah so for 13 we have ten for two we have two right although it's weird we only have one step but okay oh it accounts for the chain never mind so if we store the to having the length of two that it's chain to be two then whenever we find two again we can just use that right for example for five we know that we have a length of 1 2 3 4 5 6 so we will just use it whenever we get a number which is 5 instead of doing the calculations again we already knew that for 5 at 6 right memorization okay Thank You Laurent yeah something like that but because it works yeah something like a cache so I was thinking to have a big object with key value pairs then number on the left and the length on the right and we could always check if we have that number in the object then we could use probably a set will work better but I it said that much so oh wow it works like this that's a challenge for you if you want do the second approach I will just move on because it will probably take a lot of time and well I guess we better do another one right okay let's see lettuce pads or Latisse pads hopefully it not miss pross it starting in the topleft corner of a 2x2 grid and only being able to move to the right and down there are exactly six routes to the bottom right corner how many such routes are there to a given grade size okay this is interesting I have no idea how to do this yeah this will be the end Lauren do you have any idea how we can approach this oh boy so mmmhmm and thinking now here and we have two choices then here we if we reach here we have two choices here we only have one choice I'm 100% sure that there must be some kind of algorithm but I don't know which one but the heavy mind is using the matrix well checking all possibilities let's see yeah this is fun okay so can we find out how many approaches are therefore from the point so here we have one two three four points which can go one two ways and one two three four points which can only go one way and that's six let me write this down for a twobytwo do have topples in JSI solved it with arrays of positions like x0 y0 and start topples not sure those are also yay so we don't have a lot when it comes to or we have six routes for a 4x4 we have 70 routes that's a lot 420 we have that number 49 to 640 thousand six hundred and twenty you solve it with arrays of positions how far you I see you've played a lot wait the project Euler how far are you ah so we could do with X&Y as you said let's say so this will be 0 0 0 1 0 2 1 0 1 1 1 2 & 2 0 2 1 2 2 and yeah I don't really have a clue we could because let's say we're well we are here right so we can go to the right and down and well when we go to the ride we can only go one more yeah these problems are getting harder and harder let's see if we as I said from here we have two directions here here here and just one there we kind of have an eight what will be the result for three I'm thinking if we can kind of use that number somehow because there must be a formula I'm sure there must be a formula I'm just trying to guess what could it be and very curious what's the the number for three and maybe we can see a battered should I start drawing those yeah so one two three or five six one two three four five six now a position like 0 0 plus move right is like adding 0 1 move down its what zero but yeah but then you have one two one two or will you go here also and let's see one too but then you kind of end up to it too yeah I wish we had the the solution for three maybe we could find a pattern then one two three one two three a formula 2 but it's super advanced Matt and I do not understand it yeah 1 2 how many can you run your I wouldn't want to to draw four 3x3 could you run your script and tell me how many routes we have for three and maybe then I can think of something help me out here Lauren this is why I want to do maybe we can find some kind of formula or wait think about it kind of have something but yeah for three yeah I'm going baby steps hmm this is interesting let's see what Google says about Latisse pads maybe we read some documentation and nor days of this pad combin atronics a lot this pad is in well a lot of things here I don't understand I am NOT very very Matty person though keep that in mind these pets are often used to count other combinatorial objects similarly there are many conventional objects that count the number UPI is think here okay yeah pretty interesting you Northeast Latisse pads have close connections to the number of community come by nations which are counted by the binomial coefficient and arranged in Pascal triangle okay 4x4 74 seventy okay is it cheating because looking this up hope not it's not we make the rules so I see the Pascal triangle here which is you have ones on the sides and then you kind of add them up as you go right so one with one it's still one with 2 is 3 1 which is 4 1 is 5 K 4 with 6 is 10 with tens fifteen fifteen or twenty thirty five thirty five seventy okay so the numbers and diagonal is like you can see here we have six which is for two by two right six and then for 4x4 sorry I think for 3x3 we have 20 and for 4x4 we have 70 and I think wait if we go this down this road we get the number so let's see the next one 5x5 will be something like six 2021 six okay let me think again so here will be half six here we're going to have six plus 15 which is 21 here we'll have 21 plus 35 which will be 56 and 56 plus 70 will be what 126 yeah but we need this number so that number will be 126 times 2 252 and we don't have 4 5 but I guess that will be number okay but how can we code this now our approach will be well pretty much the same but the other direction here we have northeast but we want Saudis soda straight down and right I'm thinking of an approach to heaven array let's see so we need a triangle which will look something like this 1 1 2 1 1 2 3 2 1 right yeah one two one wait no so one one one okay so I missed a couple of steps one one and then we have 1 2 1 and then we have 1 3 3 1 ok so they add up so one does anyone understand what I'm doing here something like that but the next one will be one for sorry this is three six four one right so we can need to go down these three and we get our result this will be our fort so the center of this number will be 2 by 2 which is 4 ya know so forth how can we find it so two by two is four and we have the fifth row from the pyramid I guess let me move can I move everything to the right yeah I want to the next one and the next one so two more 1 5 10 oops this kind of going to put 0 here well let's start let's star 5 & 1 and here we have 1 615 well 15 will be this it will have 30 and on 2010 plus 10 so 20 will be X I'm going to write down what we have here 6 & 1 ok so we have a star to be 10pound to be 15 or no as that's the hashtag X to be 20 okay so if we want the 3 by 3 1 2 3 4 5 6 7 and the seventh number here in the center hmm so this is what we want for 2 by 2 this is what 1 4 3 by 3 Oh one two three okay so they kind of go odd number of fashion I guess this is per one by one 2x2 3x3 okay now how can we convert this into code we need this pyramid and if we find this out we'll going to solve the problem it'll be another approach that you took Laurent but oh well we should eventually reach that okay I'm thinking so here we have an array with one digit with two digits 3 sorry yeah an array with one I had one number two numbers three numbers four numbers yet so our array should look something like this so first one will be this yeah this is the PI well let's see I don't want to mispronounce yeah Pythagorean treat a Pascal strike okay yet so we can use that good so first one will be dead the second one will be one one the third one will be one to one the fourth one will be 1 3 3 1 okay how can I get from this to this sing sing sing sing tink so we could kind of start with an array which has this just the 1 and the 1 1 and then when we construct the next array we do this Plus this now doesn't work we kind of have always except for the first one we have ones and deep sides and then the middle this one will be tasted but then this one will be these two okay okay your your was brute yeah probably your was better and just I don't know doing the baby steps to hopefully get there okay have an idea we start with this array and for the next items we do we go over the element well when we construct this array we'll put one and one at the end and in the middle we're going to go over this array and add up the numbers right now when we construct this array we put 1 and 1 on the ends and then we add this 2 and this 2 and so forth right good so then we're going to have the pyramid and our answer oh I can't got it so our answer will be let me think so the array des with backtracking yeah I think Thank You Michel in for donating the to two pounds thank you in the name of picker camp yeah probably that will be a better approach but I don't know those I think starting with these problems I kind of have to learn more about all all the other items and stuff but yeah thank you thank you for joining and for donating okay so yeah where were we good so we're going to have our past call triangle I could it could just well I couldn't do it for all these numbers but yeah we're going to start with this and the next item so first we need to figure out how many items we want to have and then when we create the last C so this is the answer for the one by one this is the answer for two by two this will be the answer for three by three sorry so one two yeah this will be for too much yeah exactly twenty okay so we need this Pascal triangle linked to be let's see for 2x2 we want it to be five four three by three we want it to be seven one two three four five six seven so 3 times 2 plus 1 2 times 2 plus 1 the next one will be 4 times 2 8 plus 1 okay good so we're going to do a for loop for let I will be 0 and we're going to go up to great size times 2 plus 1 and we're going to start with index two because we already have these two there yeah now in the Pascal triangle we want to push something okay I forgot here I pause pause so we want to push something this something will be the new array which we need to construct based on the previous array yeah kind of Hecky but hopefully it will work so prove prover a will be well let's just call it triangle I'll just call it three easier to type three three and try Hey okay index I minus one so we're going to get this array and for this array we're going to use the previous array and we want to do something with it create next light using the previous light let's call it that hopefully it makes sense for you it does in my mind but who knows okay and the next create next line we're going to use a line function and here so what you want to do first we want to have a line array now so we get that line new line will have an array of one and one and in the middle oh you know what we can do it like this have a 1 and new line that push a 1 at the end so we have this part right okay and we need to construct these numbers so how are we going to do that we have a line we want to go over the line so for let hi zero I less than line that length if I could type I plus plus length again and here we want to add Const um well be line of I plus line of I plus 1 so this one and this one and then in the next loop if we are here and want construct these two we get these two and then this do okay and we want to go up to the last number so we don't want to get this because we don't have a number after it okay and the new lines are going to push the new item then we push that one at the end and then we returned in your line does it make sense hopefully does let me comment this out let me counsel that plug this and now if we did everything right at the end here in the three array we should have this look at that how beautiful like it okay and what we're searching for is pretty much this number so the last array the middle number so const last ray will be try that a slice minus 1 and const medial number will be less the ray of index less tray that length so let's see this one is one two three four five six seven eight nine and we won the element at index zero one two three four so / and met that floor right now n divided by 2 is 4 point 5 then we delete the 5 at the end of that 5 and we get the middle number Lester ray okay something's not good so we slice let's see the last three oh so it's oh I see so we don't want to slice here we kind of want to get a last item my bad so three that length minus one okay get so then we have the last array or the last line I think we can use that last line just be more thoughtful about it and then the middle number will be seventy okay Hey look at that it worked yeah a lot of thought process about it well behind it and we kind of needed to see this and when we had that well yeah so it might be cheating maybe not we did it well we didn't copy anything so we created our own so yeah it's not cheating right okay I hope everything's working so we can go to the next one I kind of want to download this let's see yeah good save that there all right yeah hopefully you got it it was probably the hardest one we did so far okay let's go to the next one Apple it'll be easier all right so let's see problem 16 power digits son 2 ^ 15 is 32,768 and the sum of its digits is 26 what is the sum of the digits of the number 2 ^ okay this will be interesting I guess if we do consult a clock here so we see the result and if we do net that pao2 to the exponent okay Thank You Laurent so for 15 it works for 128 yeah so that was something I was afraid of and for 1000 we get this number oh hey and we need to add up the digits of this number we have here a plus so this number has 302 digits pretty nice weight pretty nice not really but what happens if we do / 10 so I'm thinking if we could somehow get the digits okay we could use Martin and divided by 10 to get digits I think but yeah okay the big number will be this and the Sun will start with zero and while the big number well big number is the big number is what so we keep removing the digit so for example if you happy 15 we want to remove this digit add this digit plate remove it so on and so forth so while this number is bigger than zero cheating will be to use the formula directly round sickles okay so let me copy this this will be the formula for the previous one so two times n factorial divided by n factorial times n factorial okay it is crazy nice yeah so this was the formula for the previous one pretty clever but who knows I knew they had to be some kind of formula because at the end is PI tag Pascal's triangle and it has all sorts of crazy things going on okay let's get back to this one so while the big number is bigger than zero we want to do something like that some plus equals big number modulus ten and big number divided by ten well I guess we can do mat that floor big number by ten he's big only okay okay it's really not bigger all right so some twenty six again this works for this number this should work for 128 yep so we kind of miss there something yeah what about one thousand okay thing is not working correctly what is it they kind of lose I think what if we don't floor yeah we want to chop off digit can we do it should work though yeah so it chuff's the numbers but yeah let's also see cause last digit I hope it is and we add this I want to see what's the last digit also will it get it right six four zero two four six six four four eight 006 why is that six oh oh well yeah that's weird though see here it works here it works here it works here it doesn't work anymore that's weird why is 8 you you why is this 0 6 and this 8 is there some JavaScript shooter or who knows oh you know what occurred instead of doing this I could just say to string and substring minus one and here we're going to add the last digit like that so apparently no sub strings oversteer okay good yeah this seems to work better I don't know these numbers though so hopefully these digits are good yeah not really you can see that it gets this +10 38 we don't want that you you another approach I still get confused why I didn't work with modulus tan you I'm thinking what would what could we here let's see something else I want to check its modulus tan what's the difference we have 1 6 56 and we need 166 so it's a 10digit different but then well then difference here is 8 here is 8 here is 6 so that's probably they should you you and I don't know how else could we do because we get these plus 38 so we go don't get full number with begins we could have done it Oh you do we need to convert to an array of digits and just store everything in our array I wouldn't find that you and thinking so if we do that we start with two and then we multiply by two we get four to six yeah you so multiplication with two is like adding the same number twice right so if we have ace an array with these digits and we want to have well the duplication of this we just add this number again and we can add each number with each number like that in your array the reason why I want to convert this to an array because it will be easier at the end to use reduce and get all the digits although I'm still yet surprised why modular standing doesn't work maybe because the number is too big huh weird so I guess let's do that approach I'm thinking so we start we're going to have summer if we start with two then four then eight then not 16 but either 1 6 or 6/1 you then we have not 6 1 + 6 1 so 6 + 6 will be 12 so we keep 2 1 plus 1 will be with 2 and with the one before will be 3 and if we do this approach at the end we're going to end up with well this number but in our array can just add up the digits so how we do this so we go over the digit and we multiplied by 2 and if the number is bigger the next loop will get +1 okay kind of tricky but yeah let's keep this here and I'm going to do this sort of thing how far we need to go well we're going to the for loop okay so let array will be a two and four let me push this up a bit for let I less than zero sorry I 0 I less than exponent so if we have 2 then we multiply it once ok that works yep so now we want to go over the digits of the array multiply them and if it's bigger than 10 we want to move the digit we kind of did this before right so yeah array that 4 but I think we're going to change this array because money we get from eight to six one which is sixteen we kind of need to push a one there at the end which will be interesting Oh so for let J equals zero J less than rate of length J plus plus and here what we want to do so array of J will be array of J times two good if array of J now is bigger than 9 1 turay of J to be J modulus 10 so we chop off D well second digit and we want to keep track of some kind of boolean let over 10 we kind of did this before this will be false and if that's the case then over time we'll be through else over ten will be false okay so we multiply it reverse the array yeah well I want to rather push then pop you know because we the multiplication is kind of from there right of the side of the number right if you have something like 1248 times 2 you do something like this right so we do do 2 times 8 16 oops and then we keep 1 + 2 times 4 is 8 plus 1 is 9 then we have 4 + 2 right so that's kind of the approach you do this is why I'm doing the numbers reversed so when you multiply you just go well hope it makes sense okay so we multiply it if it's bigger then we chop off the digit and with over 10 is plus okay and we kind of want to do the same thing here again let's so yeah new value I guess will be this plus over 10 if it is then we add 1 otherwise we had 0 and the new value will be this and if the new value is bigger than nine then we chop off that digit and we add it to yeah okay yeah over ten will be through so we had it next time all right yep this should do something not sure yet what let's return the Ray let's see what we get yeah okay he definitely didn't work so why is that Jay so it goes over the rail length nope it should go so it goes once Oh so we kind of want here if over ten at the end if we still have over ten then we want to do a array that push one so yeah yeah find out so this works now what we did is that so we have 2 4 8 16 so when we have 16 we kind of did 8 times 2 we added 6 but then we didn't have one so we kind of want to push one at the end and now hopefully well if we do let's see 2 to the power of 10 should be okay that's to the power of 11 yeah so two to the power of ten is 1,024 two to the power of ten yeah 11 is this so we're off by one why because we start here so let's do minus one okay yeah to the power of 2 is 4 to the power of 3 is 8 16 32 and so on yeah so we have all the digits now even for this big number look at that and at the end here we want to use our dear dear reduce method accumulator item box item 0 and voila so this just adds up all the digits in this array well all the numbers and there we go for 1,000 we have 1366 for 128 we have this and for 15 we have this if we run this should work let's download it and move on but let me go over again hopefully you understood it but let's see we can remove this although and I don't know why this didn't work in why I didn't get the last digit correct but nevertheless we just created the number and edited digits in an array under the calculations and at the end we add up all the numbers hopefully this makes sense it does in my head but yeah alright let's go to the next one how much time we have left we could let's see the last one and if it's too hard we're going to leave it for the next one or the next session if not we're going to date today let's see number letter counts okay if the numbers one two five I've written out in words oh boy one two three four five then there are three plus three plus five plus four plus four letters in total all the numbers from one to given limit inclusive or written out in words how many letters would be used note do not count spaces or hyphens for example three four to three hundred and three hundred and forty two contains twenty three letters and 115 contains twenty letters the use of end when written out numbers is a compliance with British usage he's in compliance so okay let's see one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen twenty three 3 + 7 10 13 + 8 10 six plus so many sevens 13 plus one two three four five six seven okay seven at 820 all right okay okay okay okay okay good good good but not so good let me drink some water you okay the good part is that we only go up to 1000 inclusive limit inclusive so yep no thinking we have so many variations so let's write them down 1 is 1 2 is 2 3 is 3 4 is 4 5 6 7 8 9 and then we start with 11 so right 13 let me know if I ride them wrong 14 if you hopefully right tomorrow all right heaven throw them in a way sixteen seventeen eight he'd this doesn't look right if he'd yeah okay so it's 15 not five teen okay 19 and then 2030 the good part is that we start with days 40 50 60 70 baby a tea and okay which one did I mess up hopefully it didn't because well pretty much these are all the different ones starting with 100 well 100 and then we have 200 300 600 and we can kind of use this so if you have 638 700 50 for stolen and so far who have zero oh boy and we don't have zero to start with with one okay I'm thinking I'm thinking let's just get some random numbers and see if we can find some fancy way today so 876 800 and of 842 115 okay so we get the end also when we have over 100 many conditions we could check if we well by default and chair is misspelled yeah true thank you we could start by checking well what's the link well I guess if a number bigger than 100 if that's the case then we already have 100 which is seven characters then we have the end of Glee yeah if it's bigger than 100 101 right 101 I think it's and yeah okay 100 and so that's basically whenever we have over 100 then we have like 10 characters already which is good we can get rid of that next the only she will be with 1000 here but yeah that's another story if number is 100 well we can just return that 100 right 100 I'm just trying to think about some conditions we could use and if the number is a thousand one thousand how do you spell that thousand right thousand so that's eight that's returned 11 oh wait so yeah oh yeah so it's good it's good because then we need to add them up okay good wait what's there get now if it's bigger than 100 we'll start with ten and then well we need to get all the digits let's see digits the the number the string this will convert to the string we want to have an array of numbers use modulus he yeah but the thing with modulus is that so for the first one will work right although if we have the second digit is one then we kinda need to use this kind of thing other than that yeah that will work so what I want here is the digit so we have all the three digits digits of zero this will be the first one so the hundredths place we can use this so if we have this as an object count yes you and for all of these instead of one we have three here well we have the numbers and letters right so here we have three four two five four three so cumbersome do but I guess baby steps three four six five four seven five four eight four four nine okay good so that could work because now we have the digits of zero and we could use this count so we can have count of digits of zero to be added to the son kind of right because for example if we have eight hundred and something we first add Oh eight dead could be a fixed number so we don't yeah all right wink wink yeah so many things to think about what's the prettiest solution for this problem oh well so if we have eight hundred and something we already added a hundred and tooth be tan and then we kind of add so if you have seven hundred the digit of the first place will be seven so seven is what five where but yeah it works so we add five to the Sun now the only issue is that if we have exactly seven hundred then we don't have that end so I guess we can check here if number modulus 100 is zero because well wait one second so this accounts for hundred and and here we don't have that hand no end because we have exactly 700 600 so we can start here with left some equal stem and here we can just do some minus equals 3 so we kind of remove that and because it's a fixed number so 800 700 otherwise we have 700 and something right hanging good so we accounted for that okay now we for that digit the first one which was easier we're bigger than 100 a case we have three digits the hundreds digit then for the tens digit we have the digits of our of what one now this will be tricky any number other than 1 & 0 then we're going to use the days oh boy okay because if you have 890 something but I guess this will be I'm thinking thinking yeah it's just so bruteforce I don't really like it though but yeah let's continue and hopefully basically all of this will be a function to get a word length and we'll get the number and here at the end we're going to return the Sun if we have and some otherwise we just return but whatever whatever we want but well whatever we have okay let me do this too so for 10 is 3 yeah I don't like the pro to do so many test case eleven is office seven also eight you seven again you 9 eight eight then here we have 26 six do we have any other special numbers we need to worry about by five six or seven seven now six and six again okay this well we have this here but oh well we already know that this is seven okay so what I want to do is whenever we have so here we have the tens digit right then state it if the tens digit is bigger than one then we already can use one of these right so we can do some class equals count of digits but count of tens digit plus zero this is the property of the object we want which will be well seven zero eight zero okay now else if it's one we need to do all of these thingies the 11 and 19 could be Narae with index 1 tonight yeah may be special case and well we already have them here so I guess we'll work with this object properties so if it's one we kind of won the count of ten digit plus the well last digit what's that D let let's ditch I don't know how it's called the digits of two last digit so heck so so heck well and the last digit we kind of want string it so last digit so if we have something like 1/7 sorry this is not the house if one so if it's 816 so I want 6 1 & 6 60 and well I'll sit zero so then we go to some plus equals count of less digit at six and six 806 but here again we could have 0o but we kind of check that there okay all right so we don't have to worry about that we don't have to worry about that now we kind of did probably if we didn't mess up anything we didn't numbers over 100 does it over about ten you I guess I'll save just to be clear digit is zero then we just add the last digit okay yes something's wrong here what Oh all right let's try our function which should hopefully give us the right answer for this and this Oh Polly let's see cancel the clog get word lengths of 340 some is not affected good let's start wait wait wait wait wait sir yeah let's uh equal to all right so now it's defined 21 close but that really [Laughter] speaker than 100 it's modulus by 100 is not zero so we don't subtract so we have 100 and yet so that's one two three four five six seven and yeah okay next we split the digit let's see digits what we have here three four to get here the sum will be threes of Oh okay fifteen by fifteen console dot log we put one here and some and here we put two and the Sun just to keep track okay so it's ten then three yeah this is five all right good so that's the next up we want to see so 340 port so it's bigger that means that we go here three so three plus some so we get 40 which is 640 okay good oh and we didn't do the last one well I guess this is just the last digit so if a last digit is bigger than zero we just do this right okay one two three good what's rock 4004 at 4040 sorry yeah and then this is wait wait wait wait wait what I did so for T and this is 5 and this is I guess for teen forty now let's do it yyeah or Tina gay so that's eight [Laughter] all right so we get 23 which is 23 which is good let's see for 150 get plenty for 115 yeah so we go here we add this yeah I guess if it's one then we need to do this if the digit is 1 so 115 we don't care about the last is what otherwise we kind of care so if tens digit is different than one then we do this so hacky but it works which is good oh boy started to get tired so 414 I guess all this should work what else let's try for 667 so let's see 667 so we have three we have seven three five and five wait a total of ten turn 23 23 okay so apparently this works now the only issue well one of the issues is that we don't account for numbers less than 100 for which we kind of need to do this thing okay so let's remove this from here delete yeah it's not defined okay because data digits here okay so let's do this digits up here getting so complicated it's hard to keep track and it's probably buggy so if that's the case digits of one zero I guess what we could do is get the digits and reversed and now instead of digits of 0 we have bits of 2 because it's the last one if the numbers bigger than 0 would then 100 if it's 100 and that it's good 2007 okay we can keep that and now instead of having tens digits the same but this will be zero alright so now we kind of reverse the number and we first check if it's bigger than 100 we add what we want for 100 otherwise we kind of do our thing with digits and less digits and all that so let's see four five we should get fined for 504 what about 17 9 is that true 17 9 yeah look at that what about 10 3 okay what about 110 so 110 she's 3 seven three three that's a total of sixteen well it's all folks what about thousand you 1,000 hopefully that's 1000 so 3 plus 3 6 8 11 all right so let's do one more what about 67 so 67 which is five plus five ten look at that works okay you yeah so we have the special cases we have another console somewhere this but now this function should hopefully work properly and we can kind of go over here to let some for left eye's one I less than limit I plus plus and here we just get word length of i and some plus equals and return some okay and here we cancel that log son which were five is fifteen all right so it's not good yet let's see why you okay Const length will be days I want to debug it so I put it here add it here and then I do concern that log I and linked I want to see all the light okay oh I see it didn't go up to five maybe that's the only issue we have them correct look at that pasa what about 150 well that name of the castle now we missed by four okay what about one thousand we miss by 20 so probably one of these is messed up thirty how do you call those numbers so 11 12 13 13 some of probably some of it is messed up and probably deaths Oh 16 hopefully that's the issue otherwise 96 well we kind of don't use this so byebye let's go back to this okay what would be the issue or characters difference you nine eight seven so yeah just something very very very so it's a number which only pairs like four times you whoa look at that I got it this is six not seven and this is also six look at that nice so that was the issue perfect okey this was totally mess but well we kind of have it now which is good let's run the test and let's download the solution save it and never speak about it again I'm so securities how someone else did it let's see from project Euler def net here we can can act on my location we can go to this numbers letter counts and I think I need to sign Ain let me do it of offscreen although not sure what's my you I have no idea what they used guess let's register you win the spelling bee contest for a nonnative English speaker I am pretty happy okay I want to create a new account here I think here on the platform if we submit okay so username taken so I can create that let's see awesome so I managed to log in you can see that they did a couple here so what I want to do go to 17 let's see if the number that the hominin would if all the numbers from 1 to 1000 inclusive were written out in words how many letters would it be so we already have the answer which is this we can check this broad platform only gives you the problem and then you need to submit the number all right so now we can go to the archives and wait you and see how else people did it I've see their love of Java C C++ can I check JavaScript for some reason now you I think yeah I had some issue sorry about that I had to restart the Mac but yeah this will probably cut off from the livestream [Laughter] yeah but I am back yeah so we were looking at at what some other people did to solve this hopefully went back let me know if you can hear me yeah okay I can see myself alright sorry about that so yeah you can see here that one I know one person Harvey mojo did something similar with what we had if it's less than 20 if it's less than 100 okay and oh boy let's bite another thing can we have something I know but yeah pretty similar approaches can find Java crypt probably no one directly JavaScript let's see this page nope this page yeah I won't check all the pages oh wow yeah so you need toward decimal to word that small word probably smarter than I had but yeah oh well all right thank you all for joining I'm sorry for the interruption at the end hopefully yeah it should have picked up yeah let's run this submit and way completed that so today whoa look at this why don't I have my that's weird all right yeah that night works so today we completed five more challenges which were pretty tough especially this one no the this one this one was the toughest but well with a bit of googooing and thanks to our Wikipedia buddy we could find out one solution to solve this all right thank your for joining I hope you enjoyed it I hope you learn something feel free to continue the challenge feel free to do with them on your own next week we're going to continue and see how far we can get thank you for joining have a good day and I'll see you next time bye