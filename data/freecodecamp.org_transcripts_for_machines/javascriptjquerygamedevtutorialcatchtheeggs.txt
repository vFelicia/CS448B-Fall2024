in today's tutorial we'll see how to build the cast x game using only html css and jquery i'm arshad and before we begin the tutorial let's see a demo and the final version of the game so this is a game we have some x falling down and we have a basket and that moves with the mouse okay we'll have to catch the x to update the score and we'll have 20 lives when each egg falls we will lose one life and the speed of the eggs will increase after a certain interval okay so that's it this is really simple game so let's see what we have here we have a container this one and we have a place to see the score live and help a help texture yes and we have three hands one branch 3x a basket and a floor and of course the reset button okay now let's see the files that we are going to work with we have an index.html file style.css script.js file a function.js file and a variable.js file i have already done the index.html and the style.css file so that i won't be redoing it but i'll explain it okay let's see what we have in the index.html file but before that let's go and open this in the browser okay let's close the other one okay we have a very basic html template with a head and a body in the head there is a title and a link to the style.css file and in the body we have a container and inside the container we have so many divs the first one is the score help div which consists of the score and the life and we have the branch div and we have three divs with the same class hen and different ids and one hen two and hand three and we then we have three other divs with the same class egg these are for the eggs and but with different ids egg one egg two and x three we also have we also have a data attribute here that doubles i one two and three uh i'll explain this later okay and we have three similar divs with the same class bullseye and with different ids we'll say one two and three okay next we have the basket div inside that we are showing the score and then we have the floor and the reset button and before ending the body we have included jquery.min.js and the collision detection.js file i think you know you all know about jquery we are using jquery scripting to script the game and the collision detection is uh it's a simple function that returns when passed to divs it will detect whether the divs have collided or not that's very simple okay okay our scripting will uh be in script.js function.js and the variable.js file as as you can see i've already declared all the variables that are required for the game i'll explain it later after i explain css now let's go to css let's see what we have here the html and body nothing like just width height margin and phone family and for the container that's this red bordered div the container has height with a margin left to to make it at the center of the div a margin left of 5 percent and position is relative and border overflow and background color simple css and next we have the score help div which uh has a text array in sender font size and background color then we have the branch whose position is absolute which has a height of two percent and width background and top then we have the common class hen for all those hands its position is also absolute and height width top and a background image we are using a background image for the hand all those three hands and background size is covered and background repeat as no repeat to position it correctly and then is it index of hundred and to style each of them to position each of them at three different places like this one here another one here and the third one here for that we have hen one left as 20 percent and two forty percent and three and sixty percent and we have the common class egg it's like the hand position absolute top and the background color board radius and that's it that's pure html there is no you know images for that and to start it separately egg one is positioned left calculate twenty percent twenty percent is the left of the hen okay so now the left of the egg is at the left of the hand but what we want is to position the egg the x position the x center position should be at the center of the hand so the calculation would be like 20 plus 8 divided by 2 this eight percent is the width of the hand and minus this is the width of the egg so that its position center will be at the center of the hand likewise egg two with forty 40 and x3 with 60 calculation now we have the bullseye which uh display will be none this is the common class of those table size and this bottom height with background we are using an image here okay and background size background current and z index 11. and now to style it separately to position it left is almost the same as x 20 40 and 60. next we have the floor which is this one it's position is absolute height with background color bottom and z index nothing much and then we have the basket which height width position bottom and the background we are using any png file here of a basket okay and the background repeat and background size texture and sender and z index now the score one which is the score that is displayed inside the basket it's a position color font size top and left that's it you can play with this if you want you know next we have at last we have the reset button whose border position height with background color and everything else and the restart button is hidden when the game starts so its display is set to none okay so that's all about the css and html let's see it here you can see it here yes everything is looking fine like i said before the variable.js file i have already declared some variables to use in our script this are just variables this basket i have selected the basket object container container object hen the common class hen x common glass egg egg one two and three restart score span score one life span floor basket height container height egg height x initial position before the game starts that will be the pass in defect.css stop okay score live speed max speed counter score updated things like that and the basket top it we don't have the basket stop css stop so we calculate it by using container height minus basket height you know that gives basket stop container height minus basket's height that will give the basket stop okay sorry okay using the life variable we are setting the life spans text as life which is zero or sorry it's five it's set to five already okay now before we do anything let's go and include the script.js the variables.js file here variables.js okay fine let's see the life gets updated yes life is getting updated so let's start the scripting before that let's include script.js also script.js is included so everything we are going to write will be in send the document to ready function so dollar function let's uh the game will be our function this will be executed repeatedly that's how the animation works so in order to do that we'll have to use a javascript's default method called the request animation frame and inside that will pass the function which here is the game now we don't have anything in here just console log one two three in order to uh execute this repeatedly we'll have to call this inside the function again so let's see whether it's working or not console yes one two three is getting printing repeatedly so let's go there and remove this this one main thing the request animation frame it returns an id which can be used later to stop the animation let's assign it to a variable called anime id you know we'll have to update it here also okay i'll show you the use of cancel animation frame the cancel animation frame if we pass the anim id there first let's comment this and see open the console and see how many times it gets executed i hope request animation frame of the game the game sorry if you don't have the console.log here console.log one two three okay it's getting executed like repeatedly so if we uncomment this cancel animation frame anima id it gets executed once and then it stops when the code read this code it will stop the execution of the this animation the game okay so let's leave that okay see first we want to move the egg first let's concentrate on egg one instead of doing everything so how are we going to move the egg down this is the egg one now its top is 18 so it doesn't matter whether it's in percentage or pixels if we increase the top see all the x coming down so that's how we bring the x down so let's write that first let's make the function egg down of first let we have already selected egg one in the variable.js here so first let's play with egg one egg down let's go and define this function in the functions.js file function egg down let's change this variable to egg okay so in order to increase the top of the egg we'll have to we'll have to get the current top so like egg current position it's a variable is pass end off will have to use passing because otherwise the x css stops px will come with each see egg dot css top that's x current position so here using x dot css top we are getting the x css stop now we'll have to set the x css stop so egg dot css top is egg current position plus say 2 pixels let's see what happens nothing is happening it's good oh i think i forgot to include the function.js file in the script yes that's true function stretches functions to test okay egg one is coming down and it's going out of the container and that's not what we want before uh setting the egg to its initial portion let's move the basket how are we going to do that we let's before everything document dot on mouse sorry mouse move function and let's catch an event there basket we have selected already dot css left e dot page x so whenever the mouse moves this will set the basket css left as the mouse is exposition let's see whether it works or not yes it's working perfectly so that's working now we'll have to bring the eggs to its initial position when it hits the floor okay let's do that first okay let's do it over here if check egg hits floor of which heck say egg 1 let's write this function first define this function over here function egg hits the floor how are we going to do that we have the egg and we have the floor and we have the collision detection function so it's really easy if collision of egg that we have passed and the floor that we have selected in the variable.js return true else return false that's how we'll check whether the egg hits the floor or not script.js fell if check against the floor if it's true let's uh set the x position to its initial position that's that was uh somewhere like behind the hen and we have the x initial position here it's already declared so let's write a function set egg to initial position and we check the egg one okay let's define this function function.js function setting to initial position changes to x one egg one two egg so how are we going to do that same that we did here egg dot css stop let's copy this paste here instead of a current position say egg initial position okay this will set the egg.css top to its x initial position let's see whether it works or not egg is going to hit the floor yes the loop continues now there's one more thing remaining with the floor and the egg when egg hits the floor we'll have to show the bullseye let's see how we can do that see he this is the place where we are checking whether the egg hits the floor or not so let's do it here if collision of a coma floor say both sides show bulls eye of what egg this egg that would be egg 1 that's passed from the script.js file let's define this function showable psi so now we'll have to identify which bullseye to show so you know what to do that that's why i told you at the beginning of the game i will explain about this data attribute you know when this object is passed when egg 1 is passed it will have access to this data attribute and this is set to 1 so that it will be easy for us to understand which bullseye to show see it here in action say bullseye num okay is egg dot attribute if one hits the floor now the x that attribute uh will be one if it's two it's two and if it's three it's free okay we have the bullseye num here now let's show the bullseye hash show so this will show if it's egg one this will show bullseye num will return one and this hash bullseye plus bullseye numb will get select the object will say one with id bullseye one and it will show it now let's see the egg is coming down it's going to hit the floor nothing's happening let's see showable side of egg egg dot attra okay okay it's date double sigh the attributes name is data double side okay that's why it's not working i guess sorry see if x is coming down it's a floor yeah both sides shown now we want the bullseye to disappear so if we hide the here itself say hide we won't be able to see it because immediately after it is shown it will be hidden so let's do something else let's call hide bullseye function from here and pass the bullseye num here okay and let's hide bullseye function and this uh possible num paste this here bullseye bullseyenum.height no not like that let's put this in a set timeout function so that it will execute after some time say 800 milliseconds let's see what's whether it's working or not hits the floor so the bullseye yeah we'll say it's gone now the second time once i came and it's gone yeah that's what we want now next thing we want to check and return the position of the um no before that let's uh reduce the score when they reduce the life when the egg hits the floor let's do that first okay so this one where if egg hits the flow show bullseye and decrement life okay function decrement life we already have the life variable set so life minus minus and let's show in the life span life and there's one more thing that's the life this uh the no life is only yeah lifespan or text life see that here we have the life yeah it's decrementing that's done now okay now let's uh write the chord for catching the egg which means egg hits the basket so in script.js so if check it hits the floor and say why is this okay let's write it here or or check egg heads basket of egg one yeah okay in both these situations we'll have to set the egg to initial position okay so check it gets a basket function check it hits the basket so in order to do that check whether if collision of egg coma basket we can return to else return false yes when it hits the basket it's going to the its initial position let's update the score also when it hits a basket yes it doesn't show let's update score let's write the function function update score which will update the score we already have the score let's and let's update in the score span dot text score then there's one more place inside the basket that's i think it's score one yeah score one dot text all these variables are inside the videos.js file okay score yeah let's see when it hits the basket whether the score gets updated or not see the score is changing okay now that's done but we have a problem here this is a successful catch but there is one more successful catch if the egg hits the side of the basket also the score increases that's not what we want right so we'll have to add one more condition during the egg hitting the basket the collision of egg and the basket we'll have to check one more condition that is the x top is still less than the basket stop so that we can see that egg is still just above the basket it's already collided but x top is still above the basket so let's add that condition over here okay okay all these will come inside that if we don't have the x stop underscore top at top is percent of egg dot css top yes save and i think all we already have the basket stop here yeah container height minus basket height yes that's static so if egg top is less than basket top okay when the egg collides with the basket make sure the x top is still less than basket stop because when the x top is greater than basket which means it already this situation like the egg had already passed the basket okay we don't want that so that's why we are checking x top is still less than the basket top when the collision happens then update score and return true just check that okay that's not updating this code okay now if you do this yes now that's after the score and that's a that's a catch yes okay now let's i think everything is done for catching the egg operating the score if the egg hits the floor showing bullseye and what oh yeah decrementing the life but then here is a problem it's getting like it's decrementing more to in order to stop that let's go to the script.js this is getting called every time so we don't want that to happen so we'll have if life is greater than zero then do this else say else this is a new stop the game and let's pause the anime id or we'll get the animated there see stop the game go to function.js function stop the game you all know that cancel animation frame is the thing that we are animal id let's see with the five so four three two we'll have to wait two and one if it hits zero yeah the game stopped so that's what we want now let's do the same for all the x but before that let's uh write a small condition here see if this condition then say static to initial position and let's write an else condition here else egg down it's just pretty simple right if okay it's the floor or or it gets a basket then set it to initial position that time we don't want that to come down this is javascript so it won't wait for the if this else is not there it won't wait for the this um execution to happen and it will process this so the egg will come down even if it's the floor or the basket we don't want that if egg hits the floor and or the egg hits a basket we will have to set the egg to its initial position or else we'll have to make the x come down that's it now let's do copy paste this for all those x the x2 and x3 see x 2 copy paste paste and paste and this will be x3 copy paste paste and paste yes okay actually here i'm not using a completely using the visual studio codes all features here okay that's why i'm pasting coping and pasting every time okay now see all the eggs are coming down yes it's it's floor yeah game got over we still got one minus one but it's fine it's okay we can write a conditioner when the score is getting updated if it's not less than zero updated okay now let's see whether the score works or not if i cast the egg yeah it's working fine yeah three four and five yeah so that's one more thing to do because now the eggs are falling it's slow you know throughout the game the same speed okay let's change that we have the egg down function in here we are using a static variable like an integer too we don't want that we can choose the speed over here script.js no variable.js we have already declared this the changes to speed and let's change the speed when some condition is satisfied let's say when the score is a multiple of 10 like 10 if it's 10 will increase the speed by one and if it's 20 will increase the speed by one and like that the speed increases so where are we increasing the speed score it's here yeah after increasing if let's check whether if score percent 10 is 0 then speed plus plus so in order to test this let's change this to two one and get that egg two see the speed increase four yeah increase seven increase yeah that's we have only given life to five okay so this changes to ten so that increase and one important thing should be a maximum speed otherwise we won't be able to we won't be able to uh see whether the egg is has collided with the floor or basket okay so let's do that and and score is less than or equals max core max no no it's not score it's speed speed is less than max speed so there's a maximum speed for the x if it's more than that we won't be able to this is just a div and collision so if it moves with more speed the function will not be able to check in that moment whether it has corroded or not okay that's the issue here we so we're dynamically changing the speed we are again we are updating the score we're decrementing the life everything now let's when the game is over let's show the reset button that's very easy restart dot slide down let's give an animation slide down okay the next fall okay it came down but nothing happens when we click that let's restart dot click function just reload the location okay yes yeah yeah restart is working fine so that's it isn't that simple that's what i said it's very simple um you can play with that you can play with the life you can increase the life you can change the way the score is or life is reduced or the score is increased and the speed is increased so feel free to play with that i'll update the code in github and provide the description provide the link in the description so if you like this game and if you write like my tutorials please feel free to like the video share the video and subscribe to my channel so until next time bye