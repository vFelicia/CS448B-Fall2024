you well hey everybody uh glad to be back hope everybody is well we have a second moderator with us today so i want to appreciate them so they are going to keep us on task i believe we've thrown out the discord server but yeah whole community is getting larger but if you are new here thanks for joining us i am sam from python basics and i do a biweekly stream here with on free code camp uh they have been gracious enough to allow me to take over their channel for an hour or so every other tuesday i really enjoy doing this um i should have looked i never remember cardinal help me uh is this 12 or is this uh 11. i can't remember but we have been doing streams for a while bo uh he does a fantastic job uh allowing me to do these streams and i we have our own playlist so you can jump over there if you are really new saw some comments before we got started today but all right what we're going to be doing today are some actually real problems that i ran into in my learning process 13th today is the 13th video that excuse me stream that we have done and right after the streams are concluded they go uh they go back and are uh stored and then they get kicked over to the playlist and want to appreciate quincy for allowing me uh this wonderful opportunity to be with you guys uh every so often so okay second conversion so uh epic time epoch time however you say it uh time in the computing world is uh tracked by seconds the base baseline time is uh january 1st 1970 actually something that's older than me so but what but then what you need to be aware of is well what does that mean i have 10 000 seconds well let's actually build something that is going to allow us to figure out how much time is actually passed i haven't actually checked do i have my mic off or on i didn't even check that because i muted it earlier but we are all good uh okay so we need to think about how in the world are we going to do this so first we need to get our header uh line going so we're just going to take in an x and do this so for those of you who haven't thought about this and you're very fortunate i have because i i would say i'm a uh a a nerds nerd all right so anybody have any clue how many seconds are in a day anybody ever thought about it all right um and that is absolutely fine if you are a beginner everything that i do is thought of and the purpose of what i do is if you have no clue ever have you ever done a line of python that's absolutely fine my whole channel is dedicated to that so down in the description below is the link to my my personal youtube channel python basics and uh starts from the beginning and goes on over 800 videos so all right so we know there's 60 seconds in a minute uh 60 minutes in an hour 24 hours in a day so there are 86 400 seconds in a day so if we think about how in the world we're gonna do this correct we need to have buckets to divide this out and if how would we go about maybe starting to fill up these buckets because we've we're gonna have to uh okay sorry i was looking at some comments don't know what the lag is but uh see we got a really substantial number of people here today so i'm actually kind of excited all right um so we need to fill up the largest bucket we want to track so our first bucket is going to be days and then we're going to fill up any leftover from there so what what tools do we have at our disposal to find out what is leftover so we have we have one way that we find a remainder but then there's another way to know when we fill up a full bucket so we're actually going to utilize the floor division all right so let's think about this so if i have 72 seconds and i divide it by 60 so i want to know how many minutes that is well that's 1.2 but the dilemma here is all right so now i'm going to take 1.2 and then i have a mathematical problem so okay so then i'd want to multiply this by 60 to then know that i have one minute and 12 seconds no we don't want to do that but if i go through here and i use my floor division oh okay so then then i can go through and set this up where are my notes sorry then i can set this up and maybe then know what i have what i have left because then i do this so then i do my modulo aha so now here are two of our basic operators that we've known and seen actually we are going to use command line today we're going to toy around with that and find specific files that's going to be something that we're going to have a good time doing all right um okay uh all right so we need to get this going so first we need to figure out we need to fill up with our largest bucket first right so we're going to take day equals and we we know that we assign a variable with the equal sign and we link that information together so the first the very first thing we're going to do is we're going to take our 86 400 so if this fills up one of these i have a full day so let's print we'll just go from here oops and i think i've talked spoken to this oops we'll just do 86 400. we'll just make this all right so i have one day and before we get started we want to i want to lay out this format so it's going to be day and close this out and as we go through we'll add to it okay so how many days we have one so what i'm doing here is i'm not going to write all of this at one time i'm going to go through and incrementally change this so all right okay so we did over here where i get so that was minutes so all right let's take our uh seconds and we have 86 400 right so then i'm going to take my seconds divided by 86 400. and i get one hmm okay so then if i if i go if i change this to let's see let's say 9 thousand so i go seconds floor division eight six four zero zero still get one but i don't know how many how many hours that is because so i could go ninety thousand minus eight six four hundred okay i have thirty six hundred seconds left over so then how many are are in an hour 60 seconds in a minute so okay hmm but i want to make this a little bit neater because i want this to be uniform i didn't want this to be how is this used well if you're tracking time so uh if you're just joining us what we're doing right now is a second conversion so computers uh typically uh a windows and uh unix track in seconds so seconds going by so if you're having larger lengths of time go by in events you need to know how to convert this over you can use the time module to uh to see the actual date and time that that epic time would be but if you need to know the length of time we kind of need to think through this problem all right so now i could do this or i then make a new variable where i come up here and i go hours then make sure i'm going to do this right so then i go x modulo 8 6 4 0 0 then i do floor division on 3600 which is our seconds times our minutes and that's how many seconds are in an hour so 86 86 400 seconds in a day 3600 seconds in an hour so that's what i'm doing right here i'm filling up my day bucket if if i do so if i change this to right here if i drop this down to 80 just 80 000 i will have zero days right so let's keep this 86 4. sorry i have i have one day but now let's change let's add hours so now now i do fill up the day bucket first because if you go in reverse you're automatically going to be overflowing the second bucket we're going to do days we're just starting with days we could go weeks months however you want to actually i guess days and weeks months they vary all right so fill up the day bucket now we're going to fill up the the uh there we go oops and we need to get this formatting right so now that we have multiple so we're going to go f and then day and then colon h and if you do not know what i'm doing right here is i'm doing string formatting so here are my placeholders and here are my variables all right let me see if i close this all out so now i have let's see 86 000 now we need to make this a little bit larger actually let's get another one seconds let's do our 90 000 because this should be so now i have because there are we found out that we have a remainder at 90 000 seconds we have one day one hour so look what we got filled up this bucket here's our mathematics for our leftover after we fill this bucket then we come down here we stair step it's kind of like nesting dolls if you think about that if you've ever if you guys have ever seen the very cool awesome russian nesting dolls smaller one inside a smaller one inside a smaller one excuse me smaller one inside a bigger one inside and it just stair steps down you can take them all out and repackage them very beautiful do we have anybody did i call them right are they nesting dolls there's probably a better way do we have anybody in here from from russia that could maybe educate or correct that hopefully i did not offend anybody all right so we fill up our day bucket fill up our hour bucket now let's really see how well i did let's uh let's change this to 91. okay uhoh so do i have some remainder possibly probably so so now now i have this new bucket right here that is going to have that is one ish maybe so if i do that let's see okay so i have this so i do have a remainder so let's go back to floor division and i think i just made a mistake all right no that's right all right so now we need to do minutes and of course this is simple uh then we go x pull out how many seconds are in an hour so i'm here to here now we need to do our floor division on this is re really really simple so but we are not boom placeholder brackets i don't see chat i should probably have discord open so cardinal and jan janet and cardinal you guys are doing a great job thank you very much anything anything super that i might be missing let's see all right gotcha awesome yeah cardinal i'll leave i'll leave you open on uh discord so if there's anything i'll just glance at that all right cool okay so now now we're getting real real close and i did not put minute inside our placeholder all right and we need to do blue okay days hours minutes okay aha this is actually turning out to be pretty okay so we got so apparently 91 000 seconds is at least one day one hour 16 minutes so now let's try to get some really uh let's see if we get some obscure so 90 1 1 2 1. see what that is so now we have seconds left and of course this is a super easy one so x modulo all right and placeholder let's clean this up a little bit because seconds there we go oh so that has some remember okay so if i go and add seconds i think this is 114 thousand 108. changes the format actually yeah this is starting to do it so what we do know is from before of how to get this nice and pretty in standardized format oops not five of them so if there we go so what i'm doing right here is i'm saying i want this variable in this placeholder and i want two digits i guess for the day i could i might need well we'll keep it standard zero two then for hours of course there's two digits for minutes there could be two digits and for seconds there could be two digits so the reason what the zero is is if you'd like it to have a zero in place or two character places use a placeholder with zeros or have it be empty so that's that's what we're doing right here i kind of like the zeros but that's my preference so all right um that that is that is that uh the f the f in print um is the f the f leading so string formatting string formatting has evolved over time throughout the python world and this is the most recent because you could do this let's copy i'll show you one of the older ones that you may have possibly seen before so we get rid of the f string and you go to format dot format and then you place in d hour minute seconds and i get rid of the variable here you may have seen it like this before so we'll we'll cover both did i get all the bam there we go so i get the same result just looks a little bit different yes absolutely so this this is um and then there's even a precursor to the string formatting which was uh very cumbersome and not elegant so the process of this and this is just another one of the hundreds of examples of why i love python so much is it's constantly innovating constantly becoming smoother so what the argument was is should we need to type all of this at the end or is there possibly a way to clean this up and this to me oops looks pretty darn clean because now all i have to do is just add an f in front of this instead of coming all the way out here and saying hey i know this is a string even though i'm putting this in a string and going from there but it's just f string so all right let's see oops all right so let's continue on now we are going to oops that's not where i wanted to go uh next next next next next well i hope everybody is uh having a good time and getting something out of this i sure do truly enjoy python so if you're just joining us in the past few minutes we're here for about 23. have about i had about an hour time today so uh i'm gonna try to squeeze all this in but thank you for joining us today i'm sam from python basics and uh make sure that you guys are supporting uh free code camp it's a wonderful organization uh they allow me to come and stream every other week i was doing weekly streams but my schedule has gotten a little hectic which is nice so still want to do these things because i truly believe everything that beau and uh and quincy are are believing in so okay now automating the next one that we want to talk about is automating file names so what i ran into in a situation was i was pulling down a tremendous amount of data happened to be stock data and i don't know if we'll do that screener here i don't know if there's a big enough interest on this channel so i'll probably send out some feelers and see what you guys think so i was getting a tremendous amount of data with the with the grab that i did with the api and i was only going to be able to grab so much and then i was going to grab all of those files that i had these objects these happen to be json objects that came back and so i was going to save them pickle them because there's a process in python to save variables to files because or as files as a file object so it dawned on me that i could go and save these but then i said do i want to sit there and figure out how in the world i'm gonna manually do this well then it dawned on me that when you click on a link to download a file you get you get either the file name or maybe even something after it like the date so that's what i did so the how i handled this challenge was i took import time so time is a module that is built in too i didn't even check and see do i have this sized oops that's too much we'll do that in a little bit so that is built in to python the core developers have put this in for us and let's just look at this wonderful handy little tool right where is it not good at my alphabet sometimes boom so time dot asc time actually we're not going to skip a step we're going to use our help so if you don't know what the help function is it is your best friend same thing with der so der comes from the command line we're actually going to touch on that a little bit so when i run dur don't pass an object into it i get everything that is downloaded in any objects and variables that are live at this time and so then if i pass it an object it is going to give me all of the tools that go along with it methods variables attributes and any functions now then if you want to delve deeper you use the help function and the information that is associated with that whatever object you pass you then will get everything ac time so i wrap this up okay let's slide this over a little bit aha convert a time tuple to a string boom so this is what dawned on me so as i'm going through and grabbing these files i can literally sit here and catalog and then it really just expanded upon itself so then i now have a file digital record of all of these requests that i make and i have this handy little tool right here now we're going to run across a couple of problems that we're going to have but we know how to fix them so if you haven't heard me say it on this channel the purpose of everything that i like to do is i like to give you guys tools for your toolbox and make sure that you guys fill them up so that when you run into a problem you're just not walking around with a hammer going i know how to do this and i'm going to beat it over the head no we're going to expand your all the skills that you have so that when you run across something you will be able to revert back to it uh and one more thing so i've gotten pretty good at saving this shell and and then uploading it over to github so if you've not clicked over and uh subscribed to my channel and you can just watch one of the recent videos i tried to go back and put it in as many of the old videos but it is standard and you go to my github there's a rolling script that that is the free codecamp dot py file and then everything that we've done over here in the shell is its own folder excuse me it's its own file with the date of today or the day of the lesson okay that being said let's get going on how in the world to do this so here we go slide that down some so we need to import time all right then so let's get let's start with just f file fname equals time dot ac time so then f name so here we go aha so i have this this information right here but i will tell you in the windows world that we need to fix these spaces and these colons right here so let's do that so and we'll we'll stay we'll stay uniform to what my real problem was so then we're going to then i can sit right here now if you do not know let's let's touch on this who knows how to change something in a string so now that i have so i have my dir so strings are immutable but i have i have a handy tool that and let's try let's see if i can do my alphabet again replace so has anybody seen the replace method so we need to do this okay all right you could do regex but we're not we're not getting we're not going to go int or string okay uh int would convert a string that isn't that is an integer to an integer and if i had an int here i would wrap this to convert that to a string now what we're going to do is we're going to look at help.str dot replace okay self return a copy ah so this is an important word return a copy all occurrences of substring old replacement by new so old new okay so if i go name let's try it over here oops name underscore or f name underscore double place and i know i have a problem with a blank and i'm going to replace it with an underscore to solve all my problems and all my worries cool so now here i am now i want to see who was paying attention all right so why didn't that work return a copy so this is not in place or return none so this is this is create so i need to come up here and i can literally so actually we're just going to do this like this equals f.name dot replace okay see okay all right c has changed the original it hasn't changed the original exactly all right what's the quick question so what this does is this is creating something new so if i were to change this to underscore two and run this so i have here print print file name and print file underscore name underscore two i have i have my original and then this makes a copy this returns this does not change in place it does not affect the original at all okay yes the live streams are available later and you are able to rewatch them and go to the playlist and watch all 12 videos at one time and if there's anything there's anything in here that you just need more of over on my channel is a breakdown i have ex i have micro videos and i like that term so much because one of my subscribers came up with it i'm not creative enough to do that so what we're actually going to do is i'm going to do this we're actually going to come up here and merge and merge and do these on the same line so i'm going to show you this right here so i don't need this and we're going to do replace with underscore so now we just don't even really have to worry about this so this happens all at one time so i'm creating a string object i'm going out i'm saying i'm telling my computer to hey grab me grab me this um grab me this time this time stream object with the date and then i need i have an issue i want you to throw this into uh i want you to change this right here now there's a little little trick right here that we do have a problem so i commented that we are going to be making a pickle object we're going to be pickling these files and we can talk about that at a later time i don't think we'll get into this so i need to add an extension right now because this is a file name right so i'm going to need to know where to put it so i got my oops plus because i can concatenate p k l close that out run this again oops and where am i ah saw it type thought i changed it typed it exactly back the way i had it so now i have this wonderful file name right here now i do have one little problem windows does not like that file name equals file name dot replace and i'm going to replace my colon with a i can't remember what i replaced it with ah another underscore i always like underscores i don't like dashes don't know why i wish i had a good reason why i didn't like why i don't like dashes so now so now i have a this huge section i will have all these files yep i just got the colons great question thank you okay um all right so now i have all of the files that i'm going to have later now you could set this up right now and be storing these files and knowing which ones to go and grab if you have a moment and you're just going to be grabbing these files these json objects turning them into files pickling them and coming right back now now let's say time has gone by you did not same save all of these file names but you know that you have all of these pickle files that are out there these pkl files and you want to go to your computer your directory your your folders and find all of them so now now we're going to look at the command line a little bit and because this is where this is where python actually has this so we're gonna we're gonna delve into dur a little bit in the command line so all i did was type dir dir directory so now i want to show you this so you can actually go in so if i type star.star what i'm telling windows is i want all of the files no matter what it is the dot in any any type of text after i get it so now watch this so der star dot i remember when i was first learning computers a long time ago you might need you might need all of the exact files the so now what i did is i typed star dot exe all of the exe files so now in this folder this folder right here windows will now spit out all only only but all of the files that end so if i were to go d i r uh a or a star dot star i get all of the files that start with an a capital and and lowercase so now the reason i show you that to show you this because now we are going to um now what we're going to do is we're going to learn about a very cool a very cool um module called glob i wish i knew the story behind why it's called glob but we're just gonna do what we do oops helps if i do glob cra glob globa okay because let's do let's run help on glob okay we got path file names glob path return list ooh this looks promising help glob glob huh turn a list of paths paths or file names okay path is how to get to the information that took me forever to realize so if you see path that's not just path to the directory it's the path to the information the file the path all right so now literally it's going to be just like so where am i so now we're going to let's combat this out and import glob then i'm going to go files equals glob dot glob and i want all my so i've i've done this i've been pulling all this data for a month and i'm going to throw it in a data frame which we'll be building to that and we'll deal with pandas i love pandas i uh numpy pandas beautiful soup these are all the things that we'll get to but i don't ever want you guys to be afraid we will do these in little baby steps um how do you eat and i i love all these how do you eat an elephant one bite at a time how do you move a mountain one spoonful at a time all of these things are centuries older than i but just put one foot in front of the other and then there's the famous disney movie that i love to quote just keep swimming just keep swimming just keep swimming just one day more alright so now now that i have this right here so now i'm going to print files so i literally have said glob.glub pull this in and here are all of my pickle files that i have so far to date and in this in this folder i guess i thought there were more in this folder and okay sorry i was looking at all right so now that so then i can go through here and grab all these files pull these in and we'll do that when we get going on our an api well actually that's what i think we're getting close to sorry i thought i saw somebody pull up getting close to if there's enough interest because i don't know how this would be too specific but i'm actually kicking around the idea of teaching you guys uh or making doing a doing a uh stream on uh the ameritrade api for stock screeners because that's actually basically what i other than teaching that's that's what i do um is that i pull down stock data and look at it and manipulate it and go from there so powershell without downloading python yeah apis are fantastic especially i mean it's a soupedup it's a soupedup uh module that somebody else wrote so all right let's see let's see let's see all right so we need to let's see where else are we we got 16 minutes all right we need to look at something so here's a great here's a great thing to think about all of these things that i have you guys do especially especially this and especially what was it two weeks ago with our random password generator there's a way to clean that up and have that be much faster but it's to get you everybody to think because i was such a one directional thinker and one directional problem solver but when i started programming it just opened my eyes of how and i really loved challenges where i would write a program and when i was first writing them they were horrible they were so lengthy well i think i showed you guys my first attempt at solving a um the uh oh my goodness prime numbers how if if a number was a prime number or not it was it was horrid it was absolutely horrid and then i just made it smaller and smaller and smaller and that that's the point get it to work it's going to be ugly it's fine if it works fine then go from there so now the next one we're going to do is we're going to think about if we have a list uh let's see x x equals 1 43 5. 27 um 19 and we have four in there okay now if i say find the largest and smallest well my goodness we can go to help and here's the awesome thing you type in hilton's options wow cannot spell today sorry guys is it builtins ah yeah builtins oh my goodness there we go so i have all of these functions that are already here for me so i have max okay builtin function max you get a list of arguments single uh iterable okay then men okay so i'm sitting here so if i say find the largest or the smallest this is this is just i mean this is a joke right so i take x and then min so i go from there it's 43 and one ooh all right all right so now what happens if i say uh all right find me the second largest and the second smallest oh oh okay so that's that's a different problem so now i gotta i gotta put my little thinking cap on and how in the world would i do that okay well wait a second i have another so i want the largest and the smallest and only if i could have them on the ends sorted so now return a list okay return a list so we learned just last time that return means it creates yeah cardinal if they're if they're they're distracting and jan if they're distracting other people just uh look this free code camp is a wonderful opportunity we're going to keep this python centric and programming there are people here who are dying to learn something new want to better themselves if you're not here to do that this just may not be the place for you so i'm spending my time doing this we have two awesome moderators spending time keeping this in line so we're going to be mature and we're going to be respectful of everybody's time so guys if they're doing anything uh that's not productive just kick them thank you very much all right so now if there was a way for us to have this in a structure so sorted returns something so bam but since it returned it did not change so now and we know from indexing so if i want this one and this one i know from indexing it will always be if it's the second largest or second smallest however we want to do this and then also we have we learned about key a while ago with our sorting sorting our horse races finding our finding our fastest sorting our list of lists we found our 20 25 bingo second max awesome i love that i think that's philippe philippe is exactly correct for the second largest we can index forward and we can index backwards remember when i found out i loved about indexing and i just thought it was so cool so python is a zero indexing uh language so zero one oops sorry one two three four five and to be consistent so you don't have any repeatability negative one negative two negative three because we're already utilizing zero we already have that set up so it can't be this can't be zero because this is zero so to differentiate to then basically if you want to think about it it loops around and i never thought about it until about three years ago when i was explaining it to a young person and they were grilling me on how it came to be so you can literally loop around and just go from here all the way around so five four three two one zero negative one negative two negative three negative four negative five negative six there so if i want to then print second and do that in strong second our gist to second largest negative one and print second smallest x one bam now and all right so something oh negative 2. got ahead of myself there we go now let's look at if i were to change uh sorted dot reverse i want you to look right here this is important about sorted reverse defaults to false so it's just going to go in ascending order does it say there it is an ascending order let's just say you think about things largest to smallest so we change reverse to true so now this is this is flipped around smallest largest just like so boom okay uh yeah here's just a nice little mental challenge because we're at 53 minutes let's let's just yeah let's just go ahead and do this one it's very cool so ran across this little puzzle a while ago so it's called random walk so you're you're to a meeting early and you have you're gonna be given a certain number well we can do we can do this two ways we'll have a more advanced and then a basic so you're going to be given um a number of units and that's how long it takes to go around the blocks so you go down a block up a block so if you're given uh it takes an equal amount of time so you're given east west south and north and we'll talk about the units in a minute and if you end up you only if if you end up back at the same place it's true if not it's false so how in the world can you tell so all right let me say that again because i fumbled around so i apologize so if i give you north south east and west on a city block you will end up back in the same spot because you will let's open up paint make sure this is centered so wow that is horrible all right so then if you start here you start here let's get a larger yeah and then you go north east south west you end up back where you started so how would you be able to do this so there are of course a perfect example of a way to solve this problem but here's just another way for you to think about a problem and how would you solve it so let's get this up and running so the first the first way that i did this the first time i tried this challenge actually let's kind of talk about this for a minute so i had a question posted i had a comment posted on one of my videos and i identified with this because this is exactly what i did i would read and i would read a question or i'd follow along it would make sense makes sense makes sense makes sense and then i would be given a question very similar to it but i could not get it i would it would just i'd go i don't know how to start and that was how i was in school i was not a very good student everything that i know in python it's all self self taught aha i love that if east equals west and north equals south then true that is a wonderful solution that is exactly that's actually where i stumbled across later so what i actually did my first attempt that that was one of my later attempts what my first what my first one was and i will just show you this and then we'll and then we'll talk here i'll bring this over because i need to go in a few minutes but i will just paste this and you guys and we can look at it free code camp so i started to just go back and redo code so i would start with the absolute basics then rewrite oops then rewrite the code again so i'd already solved it then i would just rewrite it again and again and again until it be until i could repeat it on my own and i understood it so you have comprehension you have understand comprehension and then repeat that's what i found out so if you're read if you're watching this and it makes perfect sense and then we turn this off after we're done and you just and then you see a problem and you just don't get it you're not alone okay you're not that's that's why i started this channel that's why um streaming on free code camp that's why i started the discord server you i i was alone i did this all i was i was sitting here all alone tried books tried numerous channels pieced all this stuff together started teaching at my kids schools and then this cemented and then i found out what i could do with python and merge the two things that i love and now that's what i do so if you are watching these videos watching today and you have seen these before and you go i get it but then once i stop once the video stops i stop getting it that's normal write something you understand repeat it repeat it repeat it and then venture out you're not suppose this this is weird this is literally another language now there are some of you on here can speak multiple languages i only know english and i can read python that's it this is literally another language this is actually a formal language it's very strict speech is informal that's a little nerdy thing that i've read all of the studying so all right all right so this is this is my first instinct so here's the one with actually the timed walk that i did so i actually thought about it about coordinates and this is how cumbersome this was so if the if the length of time and the walk didn't match of course they weren't back in time all right so then i started assigning values to north so north north was one and i think i gave east positive so north and east were positive and west and south were negative so if you went if you went to the east one and you came back west one so you'd be zero and then same thing so it didn't matter how many so if you walked east four times and as long as you walked west four times you're going to end back back at the point same thing with north north and south so this is where i did is i did my my coordinates up and down and up and down and then i go well that is that's really not pretty that is really not pretty and then this is what was posed to me so you're given a list of the directions north south east and west and i was like and i learned about counting with so now let's see to do put this in so walk walk is a list right so then i run dir on walk which is a list object and python will tell me hey if you if you don't know type this is another awesome tool another builtin so walk the list the type of object that it is is a list i can count so i can count what is inside of it so how does it how does it really work so i go help dot walk or i can type list count return number of occurrences of value okay so i want to know how many norths are in my list how many souths are in my list and i created variables north south east and west so that i did how long is the walk so if basically if north and south are equal to each other equivalent in python two equal signs is actually the equivalency test and and is a very good keyword so we need to go here we need to talk about this and then i'll start wrapping this up word oop let's go to the help prompt because i do not like this is i had i have very few complaints about python i do not like that you cannot run help on uh a keyword but you can get to the keyword through the health help prompt so i type in and oh here we go so i have a boolean operation and you're going to test if two things are true so let's see what this does so true of course is true does true equal true it's true so true and true true true and false so they both they both have to be true for and now there's an or just one of them has to be so i did north is north equivalent to south and east and west equivalent to each other and in this instance i did the one about time are is the length of time the length of the list the length of the walk so all of these if all of these are true then bam i ended up back at my original location in my allotted amount of time okay there we go and i gotta run guys but absolutely uh amazing stream today thank you to jan and cardinal our two awesome moderators uh jan has been i want to give uh both jan and cardinal props jan has been spreading the word for the discord server cardinal is actually uh the creator of our discord server so one appreciate um cardinal and just i absolutely love this community i never want you guys to feel alone that was the original i didn't want you to struggle with learning was the original idea i wanted you to have a place where you could find every single concept in a video that you can watch come back rewatch however many times you wouldn't have to dig through a very elaborate video going where did i see that where did i see that another one other thing don't ever delete any code don't throw away anything don't delete a file save it put it in the cloud don't throw away anything so there we go guys thank you so much for watching make sure you're buying some uh free code camp merch think you saw my shirt earlier uh wonderful organization they're doing some fantastic work truly appreciate getting to be here with you guys uh don't forget to click over to my channel uh subscribe there got videos five times a week coming out have our discord server so you're never alone somebody is always on somewhere so there we go guys as always thanks for watching and we will see you guys in two weeks bye guys