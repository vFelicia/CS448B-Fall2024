all right this should be let me mute everything else that we don't need all right this should be up let's see got a good light streaming all right i forget how much of a delay there is all right everything looks good cardinal you hear in chat let me know all right so i gotta click over here here we go all right look i got my shirt i was able to meet up with uh quincy a couple weeks ago we chatted had an awesome chat so want to say thank you to him and he got me a shirt and i told him i would wear it every stream but i realized i just have this zoomed in so apparently i'm gonna have to work with my webcam but hey all right everybody uh we have all these awesome contributors uh uh i spend uh all my time as volunteers so if you guys could go down below and grab something a shirt a cup a hat should ask for a hat i should have thought about that maybe maybe i'll go on and buy a hat but uh just go down and support free code camp uh quincy and bo and his group are doing an amazing job all these everything here is uh 100 free and they are doing a great job and uh i want to help out as much as i can because like i said with the chat with quincy uh really kind of see what he's thinking and got going and i just i think the organization is great so there we go all right so what in the world am i talking about about chicken nuggets and itter tools is uh is everything let's see is chat back up and running i know i restarted everything let's see all right good cardinal is everything good i should probably have discord open so i could see you just one on one that might be an idea for next week all right okay cool so chicken nuggets so actually i stole this uh project from uh someplace else but the idea of the chicken nuggets is you have and it's from a very wellknown organization they have combination of chicken nuggets of 6 9 and 20. and the challenge is the problem is uh for you to write a function to take it started with started at least 50 and what we'll find out is we'll use the skills that we have um uh you guys can just put in chat and uh we have uh some awesome moderators and they'll make sure that what um uh uh what needs to get through gets through um so all right but i digress so the challenge was take i want 50 chicken nuggets what combinations of our six nine and 20 to get 50 and then really even sophisticated what happens if i wanted 53 chicken nuggets how would we go about that so let's just get into it and then what we'll find out is we'll we'll write a little bit more and we'll see how in the world can we get basically every combination and then we're going to look at a very awesome module uh itter tools all right so i got about an hour so let's just jump into it so if you guys are new here i'm sam from python basics uh supporting free code camp so make sure you're going to get something today and uh we're going through all the videos that i've already done so you can see down in the uh description below um anything that we're we've done here and you didn't quite get it there is a video for it alright so let's get at it nuggets i get all right pass so let's just kind of think about this first so we have oh i didn't even check can we see this i need to shrink that didn't think about that boom so we have our combination we have six we have nine and we have 20. so how in the world are we going to do this we need to think about this like a did i keep the picture of the odometer i did or the flipping clock so this is the way i want you to think about this and how we're going to solve it and how we're going to lay it out and then how we need to design it let me make sure you can see this okay so we have 6 we have 9 and 20. so we need to revolve through and as we get back to a certain number of combinations of one then we need to flip it over i was thinking about an odometer but then i was hard to find a flippy oldtimey odometer than i thought about a bunch of things but i'm a lot older than most of you guys so um found this image of a clock so this is what we're going to do we gonna we're going to start with six so we go one two three four five six seven eight nine ten then we're going to flip over to nine and then we're gonna and then we have to reset then we're gonna come through and go one two three four five six seven eight nine ten flip over and then another one so what does that sound like the tools that we already have does anybody have any i have way too many um all right let's see no this is not our first video this is cardinal you might be able to help me this is our 9th or 10th but you can also click down in the description the playlist has every single playlist that of all these videos bo has done an awesome job of consolidating them but all right so basically this is how i want you to think about this this is nested for loops so we're just gonna pick an arbitrary 10 and we're just going to hack through this at first we're going to go 10 6 combinations then flip over to 9. then we're going to do 10 more 6 combinations flip over to 9. then once we get to 10 9 combinations we're going to flip over to 20. then as we're doing this we're going to check and see if this total are total because y is going to be our total number of chicken nuggets let's just do total let's change that i had y in my in my experiment so i probably need to change that to two there we go and then where's my other y i got a couple y's in here because that will be confusing to you it makes perfect sense to me all right total and one more total so then we need to think about our challenge with our loop and then how to get in and out of it so we're gonna i'm gonna just kind of walk you through so we're going to be taking all of these combinations and a lot of them aren't going to work a lot of them as we go through these at one point we're going to have one two three four so four if we have four combinations of six that's 24 and then two more uh 18s or two more nine which is 18. so 6 times 4 is 24 and then 9 times 2 is 18 18 and 24 that may not be any combination we want so we're gonna let our program sort through all of these for loops and go from there so all right let's get our let's get our layout so then we're going to need to collect these and see and it's good good practice and experience so basically our first general idea is we want to know how many combinations of these different chicken nugget packages to get 50 chicken nuggets that's our starting point all right so we need to get some variables going so we got 10 or excuse me uh 20 9 and 6. so 20 9 and 6. let me flip over here to chat make sure i'm not missing anything global great question all right this means that a variable inside a function can be moved in and out and um because a variable by by default is a local variable if it's inside a a function and it typically cannot be pulled out so i wanted to do global so that when we are going and we want to test and look at our dictionary that has all these combinations we can just pull it out so that's what i'm doing right now but yes that is absolutely true cardinal thank thank you very much it is the 10th all right so cardinal is uh our mod um cardinal's been around a while uh been very helpful and has moved up and is actually an admin on uh the python basics discord and also a moderator on this free code camp stream so just want to say thank you as always to cardinal okay so we need to get a for loop going so we have three different combination values so we need to have three for loops yes that is the absolute idea so we need to then go through and set up a function so each time through this iteration that we need to then so um that math uh formula right there is absolutely it except we're just gonna use these because that variable's gonna just go through so that is exactly it so let's just get at it and then we're gonna look at some pretty cool stuff but this is just a great just a great thinking problem how in the world can i go through and move through all of these combinations to test it so for i in range 10 and this this was just my first hack my first attempt at checking this there are tons of better ways to do this i haven't looked at this since i first solved it and i've wanted to wait years to go back because i know there's better ways but i have not wanted to test it until um we got together and to do this to see what actually comes out of it because there are much better ways all right so this is going to be our 20 nugget combination so that's our that's our outer that's like our um on our ring going around just like this so this we're going to cycle through our sixes all the time we're gonna cycle through our nine loop every 10 times through and then we're going to cycle through our 20s every 100 times through does that make sense every time through so 10 10 go arounds then move up to here so basically this is our singles our tens and our 100s place all right okay so now then we go and we're just nesting all of these for range 10 should get chat open all right that's just our test right now we're going to test for 50 to kind of wrap our head around it because there is a threshold where below that a combination of these will not work but in the original instructions for this problem 50 and up works for every single one and then i'm gonna we're actually gonna use our skills that we have about um try and accept to see how low it can go to go from there so all right here is our that's our um nine combination and then now we're gonna do our hijk in range but yeah our first mental starting point is 50 so we know it'll work all right but yeah guys this is not for spamming cardinal has instructions to just uh remove and then boot because we are here um uh for learning purposes light like i said um all this is free um and we have best intentions in mind and we just wanna have a good clean supportive community all right thanks thanks cardinal all right so now we need to test and see how in the world we need to do this so this is a little junky because again the i wanted to show you exactly my first attempt at this all right so and that function that mathematical function actually has to keep saying function but if we look over here i think somebody already threw it up but it's going to be k so if we go i think i changed it around so it's in in order so this is our 20 this is our nine this is our six so we're going to stay consistent so i times t plus j times n plus k times let's see k times s so this is our loop right here here's our variable every time through i i times 20 j times n k times s all right so now we want to test this and i actually have this here and i was going back and i i peaked a little bit and i was like i need to exactly know so we're throwing in into into the dictionary because i remember this was very similar to my first way that i solved our primes oh my goodness if you haven't seen that attempt at how to find a prime number on my first example it was horrid yes tt is the total number of chicken nuggets that we are t ttl that we are wanting so we're going to input so our first attempt is going to be 50. so we are going to input nuggets 50 and we want to get out the number of each combination how many 20s how many nines how many sixes because i think what i originally did in this go round was i let it go through every single combination and then i sought out and then you could actually then see because you're going to see well the editor i don't want anybody to be over overloaded all this is is the python editor because i know that it can be challenging uh for new people to find the right editor and feel like they're overwhelmed i just use shell when i'm doing when every single one of my tutorials it's the it's the python editor script and and then um the shell because that's sufficient thank you cardinal yeah cook if we're not we're not gonna spam here all right okay so now here's my thank you cardinal all right because in my experience um there can be some uh issues for um where programs are and files are laid out for new people and pride charm can be very overwhelming and frustrating so if you have experience with pycharm you're very easily able to put this into your pycharm program so that that's that all right so then i'm making so right here is i have my key value i'm putting these in and i want you then to be able to go back and look at all the combinations that are here so far so here's my key and then i'm going to be assigning the value and it's going to be my k where did i change this nope let's stay consistent i j k so what am i doing here so each time through it's going to get the total it's then going to write this key to this dictionary and we're going to see the values again i know this doesn't really have a purpose right now but i have no problem showing you the absolute really ugly stuff that i did when i was first learning to program so now what in the world am i doing here so then we got to come out here break actually did i yep then if ttl equals total then break then no all right for those of you who don't know you can deindent a region boom yeah that works let's do that and then yeah here we go and if total equals tote anybody see my mistake i missed a equal sign so let's go through this real slow because i think we have probably quite a few new people yes we are going to print um but all right so break only moves you out one for loop so as we come through we need to kick out each single time so all right so here we go one two three one two three all right so now i need to now we're gonna now we're gonna get some printing and this is yep all right one two three y then x y and two sorry i just realized off the top of my head that i rearranged these and i didn't change it six piece then you know i don't i know you guys are i want you bored out of your mind so this is one this is zero and this is nine and this is 20. all right so i just realized i changed that last part didn't catch that so now when this reaches when this is reached our total our tote of our combinations of each of these matches this stop stop stop and then print out the combinations and i need to then come here and one two three close this out so why am i doing this like this because i want this on multi lines so when i use my three quotation marks this is it's a multiline um control of a print statement so this is my f string formatting and i want this to come go in to my that needs to be sorry ttl when this is here then out of my dictionary grab my key and that needs to be ttl as well so you could change this where once this total happens again this i wanted to show you how ugly my first attempt at this was sorry let's just run it uh oh actually we need to pass in uh nuggets 50. okay so the way that i had this come out is i said i want the total so there's my total that i pass in then i want to see how many combinations is six so that's what this placement is because i'm writing this to my dictionary i need five six piece and i need zero nine piece and i need one t one one t one twenty piece now all right so let's pass in let's pass in a test to see so right now i told you 50 works about 49. oh okay so i get 220 piece one nine piece okay that's pretty pretty uh uh what 40 hang on let me see if i remember all right uh 47 how do we get that how do we get 47 so three three by s so three sixes a nine and a twenty piece all right so now we're just kind of hitting and missing so now let's let's change this up so we know we have skills to do some things like this so right now if i go and i change let's just see combo so now i just want to test a bunch of range of numbers for i in range let's go 0 through 100. now we know 0 is going to throw an error so let's just let's just try this nuggets i and humble append i then accept print i no results and i think i just changed that up on you guys so now bam that was fast so let's see where does this so of course zero zero zero so we can't find one two three four five but we can find six then we can't get seven eight nine so as you can see we can go through and i'll just show you but from if memory serves 44 literally from 44 chicken nuggets to the end of time you can find any number of combinations so as you can see right here no results is the first as the last one at 43. you could even find 40 was it 39 blew me away so yeah you can have 39 and of course 36 is uh really simple it's just 6x6 but this was an absolutely awesome example well yeah i wish i could speak uh other foreign languages my my younger son is doing spanish and my older son he's he's been talking about trying to learn russian so all right now let's get on to some cool very cool stuff we got 30 minutes and if if if this gets buried um you can always just click over to my channel from the description down below and check this video out and i think i am probably going to redo it but hey just to remind you guys it's been 30 minutes since i've done this make sure you're going to buy a shirt or a hat i should i think i'm going to buy a hat so i can have it on to buy a hat and sorry about the the dot on my face i'd forget it the time of year is changing i usually don't film this time of day so i need to hang something in front of hope it's not too disturbing for everybody other than my normal face being being being on the screen but all right uh let's see okay uh itter tools let's just get after it so what what is ittertools let's get down to the bottom um import iter tools enter iter tools so here is a bunch of methods from itter tools so let's run help on iter tools 692 lines let's bring this over just a touch so we're going to go through some of them uh i think the one you'll like the most we're going to skip accumulate because i wasn't sure what our next topic was going to be but we are going to do operators because but we need to learn about operators before we can do accumulate that is a perfect example but um uh count we're going to do what we're going to do today uh if we do have if we have time we're going to look at chain we're going to look at a chain from iterable combination count and then we're going to use the tools that we have to go over a suggested video that i had that i was able to tie these all together but if you guys are new here um i thought that this would work because there was a lot of chatter about how to practice for loops and all of these things make sure you check out my video from yesterday about filling up your toolbox so that's why i'm probably most excited about this video or this stream today about itter tools because once you learn learn these things uh if you you you when you have a problem you want to make sure that you have a variety of tools instead of just walking around with one tool that you have and you keep trying to just use that hammer because everything will start to look like a nail that's an old oldtimey carpenter saying okay so yeah here we go uh chain um count yeah i i think count is probably one of the coolest and then we'll just head on so let's let's comment all this out there's our stuff from two weeks ago all right so from like i said we're gonna do chain first so from itter tools import chain so chain is a very cool one so does anybody not know what i just typed from intertools import chain so durr on editor tools so now so here's my module iter tools then here is mine let's see if i can do my alphabet um there's chain so now once i run so if i wanted to run help on if i wanted to see the documentation for chain in my shell environment right here i have to do it or tools dot chain now with this keyword from i jump into itter tools and i pull out just chain so now when i run this i come over here so here's the documentation for itertools.change so the chain method in inside editor tools chain class inside module itertools now that i've done this i can just run help on chain so i've grabbed chain pulled this out and now this is a function method sorry boom just like this all right so now what let's see what in the world this does so x equals abc y equals d e f e f z equals g h i had to cheat on my alphabet so for i in chain x y z and print i so chain will literally link all these together boom and then make a new iterable and as we know we can iterate through an iterable and this just uh kick them straight out to wherever you'd like them to go now now let's say we had these in a list so we got x y and z throw this in a list now let's look at um yeah so now i have chain here right i have chain and i run dir on chain so i'm one level inside of chain now from iterable this is one of the rare ones where a method then has a a method all right is everybody following that so yep very nice very very nice somebody already caught the um uh args and that means it can take an endless amount we use this on our uh oh i can't remember but that is a very good very good checks very good catch so now now that we throw this in now we go now i throw it in an iterable a list so for i in chain dot from iterable i could have just hit but i don't want to do that so then i pass it this and i go print i i get the same result but if you already have a list and you don't need to go through you can just slap that in there all right now we're getting close to some of my favorite ones all right i don't need that anymore let's just and again if you are new what i have been doing and i've been i'd like to say that i'm very successful so i've been adding so uh down over on my page what you'll see is um i know the more recent ones the older ones are not but the more current ones um no it's not better than pycharm it's just you don't need to do anything to it to run a because actually pycharm then pulls in the interpreter and runs it off here this is the bare bones i am here for new new new people to remove any concerns any fear any i'm i'm here to tear down the um the the any any any any fear or any um anything that can scare new people away because a new person learning programming the likelihood of them running into a challenge of any type slows them down from learning i want to show them how they can start solving and writing code with the littlest of of challenges you don't have to go and get other software i'm here to teach them how to learn how to learn to program how to get success under their belt then they can go off and solve other problems and learn about what interpreter they want or what editor they want to use okay all right so sorry about that little tangent i just saw but no i'm not going to get into a discussion about what editor to use did it's that i'm here to show you guys um uh how to program all right uh combinations combinations from iter tools import combinations mnations as co b so now now what now what did i do so now i got now i just told you what this was now i changed it and added this all right so i've thrown up another keyword called as that's called alias aliasing so i'm bringing this in but before we had chain brought in chain right here well now i don't have to type like if i did this and do it as c chain would be called c so now combinations is called com okay so now when i do c o and b it has been aliased referred to nicknamed comb all right so cool that's what that is so now letters a b c d e f g all right okay that caused a allout war saying that i'm not going to talk about editors i'll see a few people left all right okay all right so oh i got sidetracked i know where i was talking about github so i know on my very on my current videos that get published it has a link to my github i have a running file of the free code camp dot p y and then i also throw in the notes of the day from the shell so you can see everything that we typed live or ran it will be dated today's date always the current date and then the free code camp dot p y it might be just fcc dot p y it that is the running um extension and i add to it and i edit it every time after class uh right now what we're doing is we're running through um we're running through the module itter tools we just did we got done earlier uh this morning going through a how to write a function to capture um uh chicken nugget combinations if i wanted 50 chicken nuggets how many combinations of each packaging quantity would i need so there we go that's that and then now we're on our third example or excuse me our third method for um intertools we're looking at combination right now and what we're going to do with combination is i want to see well i don't want to misspeak too fast all right x i want to run combinations of letters and if i spell right it's even my variable 3 so all right so what am i doing should probably run help on commv okay very good documentation here all right so it takes in two two arguments an iterable and the quantity of the combinations from that interval so if i were to pass range three excuse me range four so that's zero one two three right then i want all i want all the combinations of three of those all right and there we go so now to kind of that is can be a little much to see from in my experience so that's why our example is going to be for uh letters so i want here's my here's my iterable it's seven letters and i want all the combinations of it's going to be this this this so let's just let's just do it so why and i'm going to print these out we're going to do list comprehension join i for i and x boom so this is making then another iterable of all the and i want to then join them and that's supposed to be dot uh now let's run this and see what in the world we get let's bring this in so we can see it and this is the example that i love to do there are 35 combinations so i want you to look at this so abc boom then a b d a b e a b so we're here we're here right here a b f then a b g then it moves over ac and it's a c d then a c e so all right does everybody see that so i have all i have this string i have an i have a string i have an interval and this iterable is a string and i want three of those with all the combinations and python has this wonderful algorithm that goes through and goes okay you just want three of these and you want all the combinations of an assortment of these three which happens to be strings so it's that's the first one and then it moves over and does the first two then it comes through and it skips over to c and d so then a c a and c say stay stay stationary then d e f and g as we can see we got here's here's a great example so i want to show you so it's a c and g so a c and g then it moves over to a d a d and e so boom boom boom so as it's going through because if it were to do any combination any other pattern than this it would have duplicates right so this shows you how to logically think about an assortment just like our combination and our wheel of flipping around like an odometer or a clock so all right it is 47 minutes after so it's time to make sure we're going down and buying a shirt a hat a cup i think there's a mouse pad something make sure we're supporting uh free code camp it is they're doing an absolutely awesome job all right so let's see all right okay we got 13 minutes let's see if we can fly through this because you guys i remember when i saw this one so now we're gonna do count who remembers next who remembers next yes you can watch this video after beau has this set up awesome thank thank you cardinal all right so from editor tools import count all right what in the world does count do it's so cool oh yeah let's just look at it count it or tools count help count it's so neat oh wait a second what is this okay first first value zero it's equivalent start step so oh look at this we know a double underscore next means this means that when we create an object a count object we can use next on it and here is the awesome thing about count every other time we have a generator object and we use we use next it is exhausted right it has a stopping point so a generator object has limitations count does not it literally just starts you will never run out so all right let's just let's just look at this so count equals one so now i put in i call i call x right so i still call x right x count stays one until i call next on it call next on x one but then it's done something now it's two they work together so if i want something to be counted and i don't want to have to keep up with it and i don't and i know i need to use next on it but i don't know where that ending is going to be like a list of customers a list of accounts i don't need it to end i don't want to have to go back and go oh my goodness kind of like what we did i doubt i doubt any of you remember but in 2000 uh we had an issue where all of the birthdays nobody thought we'd ever ever run into um 2000 so all of the birthdays were basically built into 1900s so we had to go back and change everything so we set a limitation so now everything has been removed so this next is just like that so now when i call let's call x again x stays there until i call next on it and now x x is three and it just it just sits there and these work hand in hand so all right i think i got i got nine minutes let's see and then i gotta go i gotta i gotta get moving i got i got a lot i got a lot to do today so i hate that i hate that we only get an hour today but still and also probably gonna we're probably gonna be going to two weeks um okay chicken nugget problem many okay christian let's see for the chicken nugget problem uh we'll have to cardinal make a note of that question right there from christian and see and help me remember to look at it because we got nine minutes i want to try to do this different ascending so i was going through all the notes whenever i have so this was an awesome question that came up and it worked perfect for inter tools if i remember yeah so how in the world could you do a number pyramid because here's a perfect i love number shapes especially uh pyramids triangles uh diamonds it's an outstanding exercise for for loop understanding okay so how how in the world could we do this using the tools that we have very simply it's all right start equals oh we got to bring in our awesome toolkit all right so from iter tools import count so then count 1 by 2. so what what did did anybody notice what count does help help count all right okay so start or count it takes a start and step step is the iteration so we want to go every two so we don't have to handle we don't have to handle the spaces we're going to use the tools that we just added another tool to our toolbox then our num is going to be count we're going to start at 1 count 1. all right so 4 i in range four then print this is one two three okay that looks right times 3 minus i i forgot how convoluted this was excuse me and all right so what does n do anybody remember all right i know i'm flying through a lot so what does inside the print oh that's not right and that's ugly that is absolutely not right this needs another parenthesis there we go and we check that yep i got it so what is my end equals uh empty string who wants to comment that puts it on the same line absolutely more correct it suppresses the ret the new line because the default for print right here shoot let me see yeah i think i got this sized right the default argument for end is a new line every time python runs unless we change it it's going to return to a new line didn't pass anything new line moved down so when i do this i get two lines so actually i've never done this so this is why i love if i then suppress it i'm back to getting one line so this automatically gives me an empty line so when i pass it a empty line i get two because the default is so i pass an empty line new line and i suppress a new line i'm back to one line so cool this is why i like doing these same examples over and over and over again because it makes me think it makes me better so you guys the question is look this is super important if you guys have a question ask it even if you kinda or if it's something you just learned ask that same question because somebody else doesn't know that that information all right how do do for j in range next this is where it gets cool next start boom boom print oops print next num then end and i need a space and i think there's one mistake in here i think it there i left it on purpose all right so we need to go this is it right here assume awesome so let's see what this does why why does this just run and taper off because i'm running through and i need to make sure that i have a starting point so there we go so all right well i think that is a great stopping point and but look you guys are asking a ton of good questions and i just want to again we got another 15 minutes went by just make sure we're supporting free code camp but look i just can't tell you guys this enough just keep programming just keep writing just keep asking questions there are a ton of ways and a ton of resources free code camp is a perfect example my channel fills a gap of the micro video if you can't find something i promise you it it has a simple small video on my channel every single one of these topics has its own video the chicken nugget example it's its own video you can go through some people uh love these long formats other folks want these small things when they're working on a project and they can't remember or don't know and it's fine but don't ever delete anything if i can tell you that i wish i would have heard that forever ago when i was starting to learn to program don't ever delete anything comment it out save it archive it however and also make notes in the side when i'm off here i go okay uh it's it's the starting point because look you're gonna come back a year later five months later two months later and go what in the world was i doing what did that mean make notes over here because look when you get skilled up and you're passing this on to somebody else you know what that variable means somebody else is not going to that's very clear if i were to have that as x nobody knows what does x do start is very clear it's the starting point and then you have a comment over here make sure you're making notes for yourself don't ever delete anything reach out ask questions be part of a group look this is already hard enough don't be on an island don't do this by yourself and always always always make sure you're filling up your toolbox with new skills new problems and then here's the thing that i love after you've solved a problem you're like i'm so big and bad i've done this i've done look this is garbage but it worked okay get it to work get some success under your belt i used to love hearing well you need to go get some confidence how do you go get confidence you go get successes i want you to go get successes i want you to go learn how to do a problem solve the problem go back do it a month later solve it again you know what you're going to write better code i remember if you guys haven't seen the ones that i showed you about prime numbers go go look at the live stream that i did on free code camp i showed you the iteration of how i did it the first one that i did was disgusting but it worked but it was what the skills that i had at the time i used what i had at the time and then then i got more skills then i filled up my toolbox and i went from there so all right that's my little rant for the day but two weeks i don't think i'll be able to be back in town for next tuesday uh does not look that way right now so i don't want to i don't want to set it up and cancel it because we might be going to one every other week so let's plan on that but please please please guys make sure you're going and checking out my channel down below seeing if there's anything there that i can help you with uh join our discord buy some free code camp merch make sure you're helping them out make sure you're subscribed and join their awesome organization i love the opportunity to be able to do this it really truly is is an honor so i appreciate beau and quincy they are doing some phenomenal work all right guys i'm heading out today uh thanks as always make sure you're liking subscribing sharing um and helping out somebody look if you want to get to be a better programmer go go show somebody something you've learned it'll it'll cement your understanding sorry guys thank you as always and uh i will see you in two weeks bye everybody