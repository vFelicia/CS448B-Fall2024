in my last video on animation i demonstrated how to create an animation using set interval and element.animate in this video i will demonstrate another way called request animation frame this way of animating is similar to set interval but is more optimized for animation the benefits of request animation frame over set interval are the browser can optimize it so animations will be smoother animations and inactive tabs will stop allowing the cpu to chill and it's more battery friendly the element.animate method discussed in my last video is simpler and has better performance than request animation frame however it's not as widely supported yet so let's see what this code is going to do if you look on the side you'll see what happens when i hit the toggle button it starts this animation and i see it just repeats but if i hit the toggle button again it stops the animation and then i can press it again to start it again or stop it again so it's all happening because of this window.request animation frame this method tells the browser that you wish to perform the animation and request that the browser call a specific function to update an animation before the next repaint so in this example it's calling the step method and the number of callbacks is usually 60 times per second but will generally match the display refresh rate in most web browsers and you can see in the step method right here the callback method is past a time stamp which is the time the callback begins to run so let's actually go through the whole thing you can see up here we have the button toggle animation and it's going to run this function down here toggle animation so this is either choosing to start the animation or stop the animation so if the toggle's off then we're going to set to true and then we're going to run the animation window.requestanimationframe and then we're going to call the step function so that's how the step function initially starts however if it's already running we are going to else we're going to set the toggle to equals false and we're going to cancel animation frame so if you call this method cancel animation frame and then put in a stop id it's just going to stop the animation so this stop id comes from up here whenever you call window.requestanimationframe it's going to return an id and then if you'd call cancelanimationframe on that id it stops the animation so let's go back up to the step function like i said it's going to take its time stamp and then you can see some of these variables were initialized up here if start has not been assigned yet or the progress is more than 400 star is going to equal timestamp so progress this is how we're going to determine what pixel we want the square to be at on the screen so we're just going to take the timestamp that was passed in minus start and you know the time step will always be increasing so when we do time stamp minus the start which was the first time stamp it's going to slowly be increasing as the time stamp increases now that's going to be milliseconds so if we divide that by 10 it will equal the number of pixels we want and we're going to add 50 just because we don't want the square to start at the very top of the page we want it to be below the button and then we're just going to set element.style.top to equal progress plus px so the number of pixels that we've gotten from this progress variable and then at the end of the step function we call it again with the window.requestanimationframe and pass in step so this is just going to keep calling over and over again and every time it's called it's going to pass in a new timestamp and that's what's going to increase the number and the progress which will increase the the top style and we'll slowly make it go the square go down so let's see that again see it's just going down and then when we toggle it it's going to call this cancel animation with the stop id and it's going to stop well thanks for watching that's request animation frame don't forget to subscribe and remember use your code for good