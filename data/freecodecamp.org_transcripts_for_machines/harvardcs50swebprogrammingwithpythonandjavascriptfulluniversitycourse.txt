this course from Harvard University picks up where cs50x leaves off diving more deeply into the design and implementation of web apps with python JavaScript and SQL using Frameworks like Django react and bootstrap Brian you will teach you topics such as database design scalability security and user experience you learn to write and use apis create interactive uis and leverage cloud services like GitHub and Heroku hello world this is cs50 and this is web programming with python and JavaScript with cs50 Zone Brian you this course picks up where cs50 itself leaves off diving more deeply into the design and implementation of web apps with python JavaScript and SQL using Frameworks like Django react and bootstrap we'll start by taking a closer look at HTML and CSS languages that we can use to describe the structure and the style of web pages after that we'll introduce git a Version Control tool that we can use to keep track of changes we make to our code and also to allow multiple people to collaborate on the same project at the same time after that we'll dive more deeply into python exploring some more advanced features of the programming language and in particular how we can use it in order to create Dynamic web applications using a web framework known as Django we'll leverage Django and in particular its ability to deal with data working with SQL models and migrations to create web applications that use a database in order to create interactive user experiences after that we'll dive more deeply into another programming language JavaScript exploring how we can use JavaScript to create Dynamic and interactive user interfaces writing code that responds to events and also manipulates a web page in response to some kind of user interaction after that we'll explore some best practices in Industry including testing to make sure that our code works as expected and also continuous integration and continuous delivery to allow us to rapidly make changes and deploy those changes to our code whenever we're able to make those updates and then finally we'll consider concerns around scalability and security as we take our applications and move them from our own computers to the web where anyone can access them we'll talk about how we make sure that these applications are able to scale and how we're able to make sure that these applications are secure along the way you'll have an opportunity to put all of this into practice by building web applications of your vario this is cs50 thank you all right welcome everyone to web programming with python and JavaScript my name is Brian Yu and in this course we'll dive into the design and implementation of web applications in lectures we'll have an opportunity to discuss and explore many of the ideas and tools and languages that are Central to Modern web programming and through HandsOn projects you'll have an opportunity to take those ideas and put them into practice designing multiple web applications of your own culminating in a final project of your own choosing throughout the term we'll cover a number of topics in this world of web programming beginning with HTML5 and css3 two of the languages that are Central to the understanding of web pages HTML is a language we'll use to describe the structure of a web page and CSS is a language we'll use to describe the style of a web page the colors and the fonts and the layouts and the spacing that make the web page look exactly the way we want it to look after that we'll turn our attention to git a tool not specific to web programming per se but that we can use in order to Version Control our programs to keep track of the different changes we make to our web programs and to allow us to be able to work on various different parts of the web application at the same time before merging those pieces back together after that we'll take a look at python one of the first main languages that we're going to be exploring in the course which is a language that we're going to use in order to build our web applications specifically we'll use Python using a framework called Django Django is a web programming framework written in the Python programming language that we're going to use to make it easy to design and develop our web applications Django in particular makes it easy to design web applications that interact with data so after that we'll turn our attention to SQL a language that we can use to interact with databases in particular looking at how Django allows us to use models and migrations to interact with data and allow users to interact with data all the more easily next we'll turn our attention to the second of the main programming languages that we'll be exploring in this class JavaScript and looking at how we can use JavaScript to run in users web browsers to make web pages just a little bit more interactive in particular we'll use JavaScript in the context of user interfaces looking at modern user interfaces and exploring how it is that those interfaces work and how we can develop those user interfaces with a combination of python and JavaScript next we'll turn our attention to testing and CI CD or continuous integration and continuous delivery which are tools that we can use in software best practices to make sure that we're able to design and develop code more efficiently and testing in particular makes sure that as we make changes to our code we're not breaking existing parts of our web application by making sure that we have a whole Suite of tests that we can use to ensure that our web application is always behaving as it should and finally we'll turn our attention to scalability and security on the internet thinking about what happens as our web application grows larger as more and more different users start to use our web application how do we load balance between those people and what do we need to change about our database to make sure lots of users are able to connect to our web application at the same time moreover we'll look at the security implications behind designing our web applications what might an adversary do if we're not careful and how should we proactively be designing our web application to make sure that it's secure but today we begin our conversation with HTML and CSS two of the languages that are foundational to understanding web pages and how web browsers are able to display those web pages and we'll start with HTML or hypertext markup language which is a language that we can use to describe the structure of the web page all of the buttons and the text and the forums and other parts of the web page that the user ultimately sees and interacts with our very first HTML page is going to look a little something like this it's going to be textbased code that we write that a web browser like Safari or Chrome or Firefox is then able to look at parse understand and display to the user so let's take a look at this page one line at a time and get an understanding for how it works even if you don't quite understand all the nuances of the syntax there are probably a couple of things that stand out to you you might notice the word title which probably reflects the title of the web page for example which in this case appears to be the word hello and then down further below we see that we have the body of the web page that seems to contain the words of hello world so what is this webpage actually going to look like well let's take a look at it we'll go ahead and open up a text editor you can use any text editor you want but for this course I'm going to use Microsoft's Visual Studio code and I'm going to open up a new file that I'm just going to call hello.html inside of hello.html I'm going to write the same HTML that we just saw a moment ago and we'll explain each of these lines in due time but recall that we had a title of the page that says something like hello and then a body of the page where we said something like hello world for example so this is our very first HTML page and if I go ahead and open that HTML page as by opening hello.html for example inside of a web browser what I'll see is something like this in the body of the page I see the words hello world and if you notice up here at the top of my web browser I see the title bar where I have the title for this page which in this case is just the word hello so this is our very first web program that we've been able to develop just using HTML and now let's explore in more detail how exactly this program works so here again was the web page that we were just looking at and this very first line here doctype HTML is what we might call a doctype declaration it's a way of telling the web browser what version of HTML we're using in this particular web page because depending on the version of HTML the web browser might want to display different information or I might need to parse the page a little bit differently each version of HTML has had a slightly different way of indicating that version but this line here doctype HTML is our way of saying that this HTML page is written using HTML5 the latest version of HTML after that our HTML page is structured as a series of nested HTML elements where an HTML element describes something on the page and we might have elements that are inside of other elements each of those elements is indicated by what we're going to call an HTML tag enclosed using those angled brackets and right here we'll see the beginning of the HTML tag which means this is the beginning of the HTML content of our page down below this slash HTML means that this is the end of the HTML content of the page and in between is the actual HTML content of the page which might include other HTML elements you might also notice that in this HTML tag we've specified what we're going to call an HTML attribute some additional information that we're giving about this tag in particular we're giving it a lang or language attribute which is equal to e n or English this just tells the web browser or anyone looking at the HTML of this page that this page is written in a language and the language it's written in is English and this is helpful for search engines for example when they're looking through many different web pages trying to figure out what language each web page is in we can just tell the search engine or anyone else who's looking at the page that this page is written in English now inside of the HTML body of the page we have a number of different elements that are going to describe what we want on this page starting with the head section of the web page which describes stuff not in the main body of the web page the part of the web page the user sees it but other information about the web page that's going to be helpful or useful for web browsers to know about for example one important thing that the web browser needs to know is what is the title of the web page and here we see a title tag again indicated by the word title in those angled brackets followed by the end of the title tag indicated by a slash before the title and in between the two title tags is the word hello which means the title of this page should be the word hello and that's all the information we'll have in the head of the page we'll add more information there later but for now all the web page needs to know is that it has a title and the title is the word hello next up comes the body of the page again indicated by a body tag and that ends with the tag with Slash body meaning this is the end of the body of the page and the body of the page again is just the visible part of the page that the user can see and what do we want inside the body of the page for now we just want the text hello world and that's the information that's going to be displayed when someone visits this webpage and so that's all there really is to this HTML page we specified in the header that there's a title of the page called hello and inside the body we're saying the page should say the words hello world and if you want to visually think about the way that all these HTML elements are structured it can sometimes be helpful to think about an HTML page in terms of a tree like structure that we call the document object model or Dom and so here for example is what the Dom for this webpage might actually look like here on the left is the HTML content that we just saw a moment ago and over here on the right is the Dom the document object model the treelike structure that describes how all of these HTML elements are related to each other so we start up here with the HTML element and this parent element so to speak has two child elements within it head element and a body element as we can see here we're inside of HTML we have a head section and a body section and the indentation here that we're including in the HTML text it's not strictly necessary the web browser doesn't care what the indentation is but it can be helpful for someone who's reading the page just to see the indentation to understand visually that the head is inside of the HTML element and the body is inside of the HTML element too so inside of the head element we have a title element and inside of the title element is just the text the word hello and likewise inside of the body element we also have some text the text hello world so thinking about HTML and HTML documents in terms of this structure can be helpful for understanding which HTML elements are inside of which other HTML elements and that's going to make it easier for us to reason about these Pages later on and especially as we later transition into the world of JavaScript JavaScript is going to make it all the more powerful and give us the ability to actually modify parts of this Dom as well but we'll certainly get to that in due time so now let's take a look at some of the other common HTML tags and HTML elements that we might be interacting with in our web page and we'll start by thinking about HTML headings so big Banners at the top of a page for example some headline that describes what a page is about so I'll go ahead into my text editor and create a new file that I'll call headings.html and the structure of this page is going to be pretty similar to the pages that we've seen before already so I'm going to start by just using the hello.html text and paste it in here I'll change the title of the page instead of hello we'll go ahead and call it headings but inside the body of this page now I want something a little bit different I'm going to inside the body of the page use an H1 element and say this is a heading for example so H1 is a tag that I can use to create a large heading at the top of my page like for the title of a page for example so if I open up headings.html I might see something that looks like this a big heading at the top of my page that says this is a heading H1 where the H stands for heading and the one stands for the largest possible heading and in fact HTML gives us a number of different tags that we can use in order to create headings of various sizes so for example I could also say H2 inside of which I say this is a smaller heading if H1 is the largest heading H2 is the second largest heading so if I load this page for example I now see the H1 at the very top this is the big heading and then beneath that I see this is a smaller heading the H2 and it turns out there's also H3 H4 H5 all the way down to H6 which is the smallest heading such that if I load this page now I have a big heading a smaller one and then here's the smallest so we can often use these H1 H2 H3 tags just for visually organizing text inside of a page if I want the title of the page but also I want titles for each of the various different sections and subsections that might be contained within that page as well so those are headings and now let's also take a look at some other elements that we might want to add on web pages we see not just titles and not just text but we might also see lists for example like if you've ever used a todo list program on a web page for example you might see a list of things that you need to do or other web pages might display lists of information and it turns out that HTML has two basic types of lists we have ordered lists for things that are in a particular order like item number one item number two item number three and we have unordered lists for lists that don't have any particular order so just bullet point bullet point bullet point for example and both are quite easy to use I'll go ahead and create a new file and we'll call this lists.html and again in list.html I'll copy the same structure from hello.html We're again going to have doctype HTML just to indicate the version of HTML most of the heading is the same I'm just going to change the title from Hello to lists and then we're going to replace the body of this page to show some different information here so let me first show what an ordered list might look like something that has numbers one two three and ordered list as an HTML tag is just o l o l for ordered list so I can add a tag that says ol and now inside of my ol element my ordered list element I need a new element for every list item list item we're going to abbreviate to just Li so the l i tag in HTML is what we're going to use to designate an item inside of an HTML list so here for example I could say Li and then first item and then I could do the same thing Li second item and then again Li third item so what I have here are some elements and then elements nested within other elements I have an ordered list element inside of which are three other HTML elements three list items that are each indicating each of the individual items that are inside of my HTML list I can now open this up by opening lists.html and this is what I see I see an ordered list where I have item number one first item second item third item note that I didn't actually need to in the HTML anywhere specify the number one the number two and the number three when the web browser reads this should be an ordered list my web browser Chrome in this case just adds those numbers in for me because it knows what an ordered list means and it knows how to take the HTML that I've written and display it in the way that I intend to to the user now in addition to ordered lists that all have numbers one two three we also have unordered lists that are just bullet points bullet points of information so I could up above add some more content to this HTML page I can say here is an unordered list and just as an ordered list we represented using the ol tag in HTML ol standing for ordered list likewise we can use the UL tag in HTML to create an unordered list U for unordered so here we're going to add a UL tag and again my text editor here is automatically adding the closing tag here this slash UL meaning the end of the unordered list and many text editors will do this now just so you the programmer don't forget to add that and now inside of this unordered list we're again going to have some list items also using the LI tag here is one item and here is another item and here is yet another item if I go ahead and refresh the page now I'm still on list.html I now see that on top of my ordered list I have an unordered list where each item instead of being numbered one two three is instead labeled with just bullet point bullet point bullet point where each of these bullet points and each of these numbered items is a list item element or An Li so hopefully now we can see that as we start to explore these various different HTML tags and nesting HTML tags inside of one another we're able to create more and more interesting web pages as a result so let's explore now what other types of web pages we can create using other types of HTML elements in addition to lists one thing you might imagine is that one of the important things on the web is not just displaying text but also displaying other types of media like images for example so how might we go about doing that well I can for example let's go back into my text editor let me create a new file that I'm going to call image.html which is going to contain some code for displaying some images I'll go ahead and go into hello.html and copy this text into the page again change the title to image and now inside of the body I'm going to add a new tag called image and the image tag has a couple of required attributes remember that attributes are what we saw before things like adding a lang equals en to the top of my page to indicate that this web page is written in English for example and the image tag has a couple of required attributes that I need to add in particular when I display an image on the page I need to specify what image I actually want displayed for example so I might specify image SRC short for Source if is going to be equal to what image do I actually want to display on this page and it just so happens that inside of my folder where I have image.html I have an image called cat.jpg so I'm just going to specify cat.jpg as the file name of the image that I want to display and it turns out that images also have a second required attribute in addition to the file name or the link to whatever image I want to display I also need to provide some alternative text a text based representation of what you're going to see on the image because in some cases some web browser might not be able to render the image correctly you might imagine if there's some error rendering the image or if someone's on a slow internet connection or if someone's using a screen reader and therefore can't actually see the image we want some textbased representation of that image as well and so I'll provide some alt text some alternative text that can be used to substitute the image in case for some reason we can't display the image and the alt text that I'll use in this case is just going to be the word cap for example and that's all I need now notice in particular that something a little bit different about this image tag compared to other tags that we've seen before in the sense that it doesn't have a closing tag in the sense that the body had a beginning of the body and an end of the body our ordered list had a beginning of the ordered list and the end of the ordered list with list items in between it doesn't really make sense for for an image for example to have the beginning of the image and the end of the image and some content in between because the image is just a single HTML element that can't really have anything inside of it so in that sense we don't actually need a closing image tag the image tag is selfclothing it is its own beginning and end so we can just say we want an image to be here that is cat.jpega with an alternative text of just the word cat for example so now if I open up image.html we'll see that what gets loaded is quite large a picture of a cat and I can scroll around and see this entire image of course this picture of a cat is probably larger than I wanted it to be I probably when my user visits this webpage I don't want them to have to scroll all the way to the right in order to see the entire cat so I can actually add additional HTML attributes in order to modify the size of the image that I'm displaying and later we'll see we can use CSS to do a similar thing as well but for now what I can add is an additional attribute and say that let me give cat.jpeg this image tag another attribute that in this case I'll just call width and I'll say that width is going to be equal to 300 because I would like for this image to be 300 pixels wide for example so now if I refresh this page I now see that the same cat image appears except now it appears at 300 pixels wide exactly so I'm able to add additional attributes additional information to control how an HTML element is going to appear in this case I want to control its width and it automatically scales down the height to make sure that the image is proportional as well now on the internet in addition to just displaying information on a single page it's also common for a page to link to other pages in fact that's one of the main important values of the internet is the ability to go from one page to another via these links and so one thing we might reasonably want to do is add some links to our page where if you click on something you're taken to another page altogether so let's take a look at an example of that I'll create a new file based on hello.html and I'll add laying equals English for good measure and I'll call this new file link.html where here we're going to practice with building some links into our HTML page I'll copy the content of hello.html again call this link in order to create a link I'm going to use a tag called the a tag short for the anchor tag and the a tag takes one important attribute which is called href for hyperlink reference which is going to specify what page I would like to link to so if for example I wanted when a user clicks on this link to go to google.com then I'd set the href attribute of this tag equal to https colon slash google.com for example then inside of the a tag I would specify what text I want to display what text should the user see such that when the user clicks on that text they're taken to the web page in this case I'm just going to say something like click here for instance now if I open up link.html this is what the user sees they see a blue link that says click here and when the user does click on that link they're taken to https colon slash google.com and it turns out that we can use this href attribute not only to link to different websites altogether but we can link to different pages on the same website so for example if I wanted to link to that cap page that I designed a moment ago instead of linking to google.com I could instead just link to image.html and now if I save that and refresh or if I open up link.html again now I see a click here link where when I click on click here now I'm taken to that page cat image.html that happened to have that picture of a cat from before so using these anchor tags and href attributes we're able to link together multiple pages so that if we have a website that has many different web pages we can connect them all together by using a combination of these various different links so now that we've seen images and links and lists what other HTML elements might we add to our web page well one thing we might want to add are things like tables just other ways of displaying information so let's go ahead and create a table and look at what HTML elements we can use in order to do so so I'll go back here to my text editor create a new file called table.html using the same starting HTML we'll call this page title or table and inside the body of this page now there are a number of different HTML elements that we'll need in order to create a table because as you might imagine a table is really composed of multiple parts we have our big table but each table is really just a sequence of individual table rows and each of those rows is really just a sequence of individual cells of data within that table and so that structure that we're imagining a table that consists of individual rows where each row consists of individual cells is exactly how we're going to represent this table in HTML we're going to start with just a table tag that's going to represent the entirety of this table but inside of the table we might have different parts we might have the heading of the table we would have the body of the table so in order to represent that I'll add T head that's going to stand for the heading of the table the stuff at the top of the table that might indicate what each column of the table means for example and let's see what columns do I want well let's go ahead and add some table headings which I can represent using the th tag H for heading and maybe I want in this webpage to display information about various different oceans for example so maybe I have one column for the ocean and another column another table heading for the average depth of that ocean and another table heading for the maximum depth of that ocean and that'll be the very first row of that table The Heading of the table but in addition to The Heading of the table we also have the body of the table so underneath the T head I'll go ahead and include T body body for the main part of the table where all my data is going to be and that body is going to consist of individual rows of a table so I might have a TR which here stands for table row and inside of this table row we'll go ahead and add some individual data points inside of the table so inside of my table row I'm going to have one table data point or TD for table data that says Pacific Ocean for example then another table data that says 4280 meters and then another one for the maximum depth of the Pacific Ocean which is ten thousand nine hundred and eleven meters and in fact this these three table heads as well at the top of the page the ocean the average depth and the maximum depth those should actually probably be in a row of their own as well because the very first part of the table that is also a row so I'll go ahead and add a TR short for table row and inside of that TR put these headings I'll go ahead and add one more row just so we can see what this looks like and then we'll take a look at the page and then go back to this code I'll add the Atlantic Ocean to which has an average depth of 3646 meters as well as a maximum depth of 8486 meters as well so when I open up table.html now here's what I'm going to see I'm going to see a table like representation of the data it's not just one thing after another after another anymore it's structured in a table now granted there aren't any borders and I can probably add some colors and spacing to make this look a little bit nicer but I see three columns ocean average depth and maximum depth where this very first row is what we might call the table header the very top of the table that's defining what all of the columns mean inside of that table header is a single table row that has three table data cells ocean average depth and maximum depth then beneath this table header represented in bold is the table's body or the T body element inside of which we add two rows one for representing the Pacific Ocean one for representing the Atlantic Ocean and then we had data cells in each one of those rows for representing each of the individual cells that's located within this table so this is what that page ultimately looks like and let's take one more look at the HTML just to get an understanding for how all of these tags interact with one another and no need to memorize all these tags right now slowly as you begin to design HTML Pages you'll start to get more familiar with what HTML tags are available to you and certainly all of these HTML tags are things that are easy to reference if you need to look them up it's very helpful to be able to look up something like how do I create a table in HTML and then you'll be able to see what the various different tags you'll need to add are in order to generate the table that you're looking for but again just to recap here we have a table element inside of which are two child elements TI head and T body inside of each of those are one or more table rows representing using TR inside of each of those are three table data cells representing using TD and so using these nested tags elements inside of elements inside of other elements we've been able to build something far more complex than just a bulleted list we've been able to build an entire table that has information as well But ultimately our web pages should be web pages that don't just display information but that also let users interact with that information in some way for example you might imagine that on Google's homepage for example it's not just unchanging there's a field where I can type something in and anytime users can provide input to a web page we generally call that a four or someplace where a user can fill out a form in order to provide information to the web page and so now let's take a look at how we can use HTML in order to create a form that's going to display some information so I'll go ahead and create a new page called form.html again using that same HTML as before call the page form and inside of the body of this page now let's say that I want to create a form that gives the user an opportunity to provide their full name for example how do I do that well the first thing I need is a form element some way of saying here is going to be a form and now inside of that form what are the various different parts of the form well there's really two parts that you might imagine to this form one is a place for the user to actually type in their name and they probably also need some way to submit the form some button that just says submit such that they can click on that button in order to submit the form so how would we do that well in order to create an input field we're going to use an input tag whose type in this case is going to be text there are a number of different ways the users might provide input to a forum they might type in text they might choose from a drop down menu they might choose from a radio button option or they might provide input as by clicking on a button for example in this case we're specifically using the type attribute to say that when the user is providing input in this way the type of input that they're providing is going to be some kind of text then we might provide a placeholder some default text that's going to be inside of that input field the first time the user looks at the page so for example the placeholder might be full name that way the user knows that what they should type into this place into this placeholder is their own full name and then finally we're going to go ahead and give a name to this input field now this isn't going to be something that the user sees when they visit the page but anytime you submit a form when we receive that form in our web application something we'll explore later on we need some way of knowing which input field corresponded to which value and so we're going to name each of the input Fields just so that later on we'll be able to reference them and for now since the user is typing their full name here we could just name this full name or we could more succinctly just say name as the name of this input field after that we have an input field where the user can type in their name and now we need some way for the user to be able to submit this form so we might say something like input type equals submit to say here is a way for the user to submit the form type equal submit means this is how they're going to submit the form when they're done completing it now if I open up form.html this is the page that we're ultimately going to see when we load this HTML this entire page just contains a single HTML form but that HTML form contains two parts the first part was this input element here that allowed an opportunity for the user to type in their full name they type in their full name into this input field and when they're done they can click the submit button to indicate that they would like to now submit this form of course right now this form isn't going to do anything when we type in our name and click submit because we haven't added any logic in order to handle this form but later on as we transition into the world of building web applications using python we'll see how we can design a form such that after the user submits it we save information to a database or display some sort of results back to the user all by using the power of building these web applications and connecting them to these sorts of HTML forms and HTML forms can actually get quite a bit more complex we'll take a look at another example for instance let me open up forms 1 form1.html which is a form that I built in advance which shows a number of other ways that users can provide information as input to an HTML form here we see an input whose type is text meaning we want the user to type in their name as text but you might also imagine that if a user is logging into a website for example they might in addition to typing in a textbased name or username or email also provide a password and generally if you've been on a website and you've typed in a password the password characters don't all show up as the actual characters for security reasons they generally show up as just little dots on the screen hiding the actual characters that they're representing and in HTML we can do that very easily by just saying that the type of this input is password if they're typing in a password our web browser will know not to actually display those individual characters in addition to just text based input we also have radio button input as I alluded to a moment ago so here we have a number of different radio inputs where the user might be able to select from a number of options choosing their favorite color for example from a number of these options and finally just to take it one look at one other additional feature of HTML5 in fact a new feature of HTML5 is something we might call a data list where we might have the user choose in a drop down from a number of different options but we want to very quickly filter down or autocomplete based on those options so if the user needs to select what country they're from for example we might have an input field and specify that it's going to be associated with a list called countries then immediately below that I have a data list element whose ideas countries where here I'm going to specify these are all of the options for what country we could have each one is inside of an option element whose value is whatever country they could select and we have all of the countries of the world listed in these option elements so this input here is going to allow me to select one option from a list of all of these possible options so now if I open up form1.html here's what that form ultimately looks like I can hear inside of the name field again that word name shows up because it's the placeholder I can type in my name here and inside of the password field anything I type is going to show up as just little dots instead of the actual characters because the type of that input field was password instead of the type being text in favorite color I now have the ability to choose between various different favorite color options in a radio button format I choose from one of a number of options and finally inside this country drop down I have the ability now when I click on it to see all of the countries but as I start to type letters like u n i t it filters down to only the options that I actually care about so here if I type in enough letters eventually I see United States and I can click on that option as well so HTML5 builds in these additional features to make it easy to implement something like a text field where it will autocomplete based on the text that you provide you can just specify that it is inside of this data list and then provide a list of all the possible values and then HTML and your web browser in turn will take care of the process of rendering that information in the way that you expect it to be displayed so those are just some of the possible HTML elements that we can ultimately create by using these various different elements that we Nest within each other and there are definitely other HTML elements that exist as well you can begin to explore but all of them follow a very similar pattern that we're going to have some tag that might require some attributes additional information about the HTML to give context to the web browser for how that element should be displayed maybe that element needs to have a particular source for an image maybe it needs a link in order to link to somewhere or other information as well and then inside of that element you might Nest other elements so that your table has rows and inside of those rows we have other cells and you might imagine nesting elements inside of other elements inside of other elements but right now so far all of our web pages have been rather simple they've just been we've described the structure of the page and we've described we want to list here we want to form there what we might really like is some way of specifying that we want to style our web page in some way we want to add color we want to add spacing we want to add some sort of other layout to our page as well and in order to do that we're going to use a second language that we're going to call CSS short for cascading style sheets in particular we'll use the latest version of CSS css3 which gives us the ability to take an HTML page and tell the web browser how we would like it to be styled instead of just black text in the same font on a white background we can begin to specify particular CSS properties of how we would like this page to look to make sure that the page looks the way we want it to so let's take a look at a simple example now of CSS to take a look at how we can add some CSS code to our page so I'll go ahead and create a new file that I'll call style.html just to demonstrate some basic ideas of adding some style to our page and we'll go ahead and copy the same hello.html from before and maybe in addition to hello world I display an H1 some big heading at the top that says like welcome to my web page for example so now if I open up style.html this is what I see I see a big heading at the top that says welcome to my webpage beneath which is just a text hello world and now imagine that I want to add some style to this heading at the top of the page maybe instead of being left aligned I want it to be centered maybe instead of just being black texted like to change the color in order to do that just as we've used attributes in the past to add additional information to this particular HTML page we can do a very similar thing with CSS we can specify that we're going to give this H1 element a style attribute and that is going to be equal to and then in quotation marks we're going to provide all of the CSS properties that we would like to add to this particular element so the way that CSS styling works is that we can give elements individual CSS properties where a property is something like the color of the element or the alignment of the element and each of those properties has a default value but we can change its value to something else so if for example I wanted to change the color of this heading so that instead of a black heading it displayed as a blue heading I could say for this H1 I would like to give it a color property and then to give the color property a value I say color colon and then the value that I would like to give to it so color colon blue for example followed by a semicolon will change the color of this H1 element to Blue and my text editor is automatically showing me a little square that shows me what this color blue is actually going to look like this isn't part of the text it's just my text editor being helpful so that I can see in advance as I'm writing this code what the color is actually going to look like so now if I open up style dot HTML here's what I see instead of a black heading at the top we've changed the color to Blue and there are many other builtin colors that exist within HTML that we can use in order to change the color to whatever we want if instead of blue I said I want the color to be red for instance I can refresh the page and now the heading is red and there are many other colors I can change the color to like spring green for instance and that's going to be a particular shade of green that displays just like this and so now we have the ability to add various different style properties to individual elements I can say take this heading and change its style so that the color instead of being black is going to show up as blue instead and if I want to add multiple CSS properties to the same HTML element I can do that as well here in the style attribute I can say that in addition to saying that the color is blue I'd like to give a second CSS property to this element I'd like to say that the text align property should be Center for example the text align property controls as you might imagine how a particular HTML element has its text aligned is it all the way on the left all the way on the right or centered and if I change the text align property to have a value of Center well then now when I refresh this page I see that welcome to my web page is now both blue and it's centered I've changed the color and I've changed the alignment of this particular element and HTML elements don't need to just be styled directly they can also get their style information from parent elements so if you recall again that Dom structure where we have an HTML element inside of which is this body element and inside of the body element is this H1 element and this text you can imagine if we wanted this styling to apply not just to this heading but also to the hello world text I could move the styling information move this style attribute change it from the H1 and escalating it to this body and if I move the style to the body then everything inside of the body is going to be styled in that way so let's now take a look at an example of that to see how that works if I take this style information and I move it so that instead of associating it with the H1 i instead associate it with the body then now when I refresh the page I see that both parts of the body both the big heading at the top that says welcome to my web page as well as the text hello world both have those CSS properties applied I've changed their color to Blue and I've also changed their text alignment to be centered instead of just left aligned but if I do want it to just be that heading then I can move it out and say that I just want to apply the style to that one individual heading now one thing that we might imagine might become a problem over time is that imagine if I had multiple headings that I wanted to style in the same way for example let's say I have a second heading that this is a second heading that I also want to be styled as blue and centered as well I can refresh this page and see that right now that is not the case and I don't want to make the entire page blue and centered I only want these two headings to be blue and centered so what I could do is I could just take this style code from the H1 and apply it to this H1 as well so that both of my H1 elements now have the exact same style code and I'll go ahead and refresh this and now we see this is the intended Behavior I have two headings both of which are centered and both of which are blue but what we want to start to think about as we start to build web applications and especially as our web applications start to get a little bit more sophisticated is to think about the design of how we're building our web pages and how we're building our web applications and in particular anytime we find ourselves copying a lot of the same information from one place to another that's probably not the best design and you should start to think about how might you design this a little bit better it's not great design one just because there's some redundancy that probably doesn't need to be there but also because it makes the page a little bit more difficult to change and a little more difficult to update if I instead want to change both of these headings to be red instead of blue then all of a sudden I need to change my code in two places I need to change the style attribute on this first heading up here and I also need to change the style attribute on the second heading down there what I'd like to do is to somehow just be able to write the style code once and then have it applied to both of these headings and in fact there is a way to do that what we can do is instead of doing what we might call inline styling where we take the CSS code and place it directly as an attribute of an HTML element we can move our style code to an entirely different part of the web page recall again that at the top of our HTML page we have this head section that just includes information that's useful to know about the web page but isn't actually part of the body of the web page the content that the user sees this head section is a great place where we can begin to put some style information information about how we would like for this web page to be styled so what I can do here is instead of putting these style attributes inside in line with these HTML elements I can inside of the head section of my web page add a style element where in between these the opening style tag in the closing style tag I can add any of the style information that I want and here's the way that syntax is going to look I first need to specify what types of elements am I going to style and in this case I want to style all of the H1s so I can just say H1 and then all of the style code is going to go inside of a pair of curly braces where I can say I would like the color to be blue and I would like the text align property to be centered so now here's what I've done I've taken the CSS code that used to be down here inside the body of the page actually as an attribute of these H1 elements and I've moved the style related code to a different part of my page altogether now the style information is inside the header of my page inside of the style element where I've said for every H1 element here's how you should style it The Styling is in between the opening and curly closing braces here and I've said that every H1 should have a color of blue and every H1 should have a text align property of Center and that is then going to apply to all of the H1 elements that my web page happens to find inside the body of my web page so there's a couple of advantages here Advantage number one is what we talked about a moment ago I don't need to duplicate the same code in both of these H1 elements I can write it once and say apply this styling to all of the H1s that show up in the page an advantage number two is we've been able to factor out the style code to somewhere else just to make it a little bit cleaner so that instead of having a really long line you might imagine if we had not just two but maybe five or six or seven different CSS properties that would have taken up a lot of space on one line I can instead in a more readable more organized way move that style related code to the style element at the beginning of the page just to make it easier to read easier to visually understand and just to clean up the body of the web page as well and that's going to be another of the key themes that's going to come up again and again in this class this idea of separating things out so that every piece can sort of be independent of one another our structure of the web page inside the body is separate from the style and we'll see the same sort of idea appear again and again as we begin to try to design web applications well so now if I take this exact same page and go ahead and refresh style.html we'll see that we see the exact same thing both of the headings still show up as centered both of them still show up as blue but now we have the advantage of having only written the style code once instead of needing to write the exact same style code multiple times in the same way but it turns out that we can even do a little bit better than this because one thing you might imagine is that if I have a web application or a website that has multiple different web pages it's probably going to be likely that each of those web pages might need to be styled in similar ways if I have a big banner at the top of one web page then in other Pages related to that page I might want the same Banner styled in the same way using similar style information and right now our CSS code is specific to one particular page and it's not going to be easy to then take that same styling and apply it to another page if I wanted to I'd need to copy the exact same CSS code put it inside of another page but then we run into the same problem of duplication where I've now had to repeat myself across multiple different pages putting the exact same CSS code across all those different pages so there is an improvement we can make and the Improvement we can make is to take that CSS code and just move it to an entirely different file so instead of putting this style code inside of a style element inside of this HTML page I'll just create a new file that I'll call styles.css inside of which is going to be all of the CSS that I care about I want to take every H1 I want to change its color to Blue and now I want to change its text align property to Center and now inside of my HTML page I no longer need to include any CSS at all instead of this style element altogether I can just link my CSS code in that CSS file called styles.css to this particular HTML page and how do I link the styles.css file well I can do so again in the head section of my web page using a link tag where I can say I'd like this link to be the relationship is it's going to be a style sheet meaning what I'm about to link is going to be a style sheet for this page it's going to describe how I want for the elements on this page to be styled and then just as in the case of a link to another page I used href to specify a hyperlink reference what I want to link to I'm now going to specify using an href attribute what CSS file I would like to Now link and in this case the CSS file that I'm going to link is styles.css that is the file that just so happens to contain all of the CSS that I would like to apply to this particular file now if I refresh the page I see again nothing has changed in the last two revisions the pages stayed exactly the same as far as the user is concerned they still see two headings both of them are centered both of them are blue but now the advantage is that here is my HTML it's shorter than it was before and in particular there's no CSS that's baked in to this HTML file at all I factored it all out into the separate styles.css file and now if I have multiple HTML files that are all using the same styling I can just link them all to the same styles.css file such that they're all using the same style information I don't need to repeat myself and If Ever I need to make a change across all of those pages I just change the styling once I change the styles.css file and then all of the web pages that are linked to that style sheet will update as well in order to reflect those changes so again we've been able to factor out some of this style information to a separate file just to make our lives a little bit easier all right so so far we've now seen how we can use CSS in a number of different ways to add some basic style store Page we've seen that we can take an element and change its color we've seen how we can take an element and change its alignment move it from left to line to right align to Centered for example as it turns out there are a lot of different CSS properties that we can add to our HTML elements in order to style them in various different ways more than we'll have time to talk about in this lecture but now let's just take a look at a couple of the most popular most common CSS properties that we can add in order to make our web pages look the way we want it to and one of the most powerful tools for CSS is controlling the size of various different elements by default HTML just used a default size for everything on the page but if I want to more precisely control how big any particular element is I can use CSS in order to do so so let me now create a new file that I will call size.html we'll start with the same HTML code and call the page size and now inside the body of my page let me just have a vertical section of my page just some section of my page that's going to have some content and I'm going to put this inside of a div tag now this is the first time that we've seen a div in HTML you can think of a div as just a division of the page some section of the page that's going to have some content inside of it and we use div because it makes it easy to reference a particular div or a nest information inside of other pieces of information or just to divide and break up our page into multiple different sections here inside of the body I'm just going to have a single div that is going to say something like Hello World and now I'm going to add some style to this page in order to control the size of this div to control the size of this section of my web page I could use inline styling I could Factor things out into another file but since I'm only dealing with one file for now I'm just going to add a style section to the top of my web page just so you can more clearly see how the style of this page is going to map on to the way that we're modifying these HTML elements and I would like to style this David in a couple of ways one thing I can do is give the div a background color let me change its background color to Blue for example and then I can say all right I'd like to give this div a width and a height some size information I can say go ahead and give this div a width of 100 pixels and maybe a height of 400 pixels so now when I go ahead and open up size.html this is what I see I see in a 100 by 400 pixel wide vertical or rectangular section of my page I see the words hello world and so you might imagine if you have multiple different elements on your page as your web pages start to get a little bit more complex you probably want to have some more precise control over how wide or how tall any particular element is and these width and height attributes can be very helpful because I can very easily change the width to say like 500 pixels for example and now when I refresh the page now I see that the width of this page of this div this section of the page has actually now gotten a lot wider and so we have the ability to control size using CSS go ahead and close some of these pages that I no longer need and now take a look at some other things that we can do in addition to controlling the size and let me change this color to something a little bit lighter something like orange such that now if I open up size it looks like this I'll make this a little bit smaller let's try 200 by 200 pixels it looks now like this you might imagine there are some other changes that I might like to make like this hello world for example is very close to the edge of this particular div it's right up against the upper left corner of that div I might want to change that by adding what we might call some padding to this particular HTML element some space just so that the content of the element isn't so close to the border of the element itself so for example one thing I can do is inside this div add some padding say maybe I want 20 pixels worth of padding on the inside of the element such that now when I refresh the page we see that we have some padding along the outside of the element so that hello world now shows up not right up against the edge of the element but inside a little bit as well and if we have a particular HTML element that maybe is too close to the edge of the screen maybe it's too close to the top of the screen we can also add space around outside of the element by adding what we call margin to the element as well so I can say let's give it 20 pixels of margin inside of this div and then refresh and now we see that whereas before this div was very close to the upper left edge of the screen now we've moved it 20 pixels away from everything so it's got some space on all four sides of it so that's how we can now use margin and padding just to make the page look a little bit nicer to the user so objects are not too close together or too far apart ing again is on the inside of the border of the element I can add 20 pixels of padding for example to make sure that the content inside of the element in this case the words hello world just have a little bit of space from the border and that's padding on the inside of the element margin meanwhile is on the outside of the element we add some margin along the outside of the border to space the element out from other elements that might be nearby to make sure that there's enough space between the border of the element from the top of the screen and also from the left and also the bottom and the right though there's no objects there that we're currently creating space from so by combining width and height and margin and padding we now have the ability using CSS to make sure that we're able to lay out our page the way we want to lay out the page so that elements have the right amount of spacing from each other and are the correct size so now let's take a look at some other features that CSS is going to give us in addition to just changing where particular elements are like centering text or adding size and margin and padding we can also use CSS to change how elements actually look we've seen it to change the color of text changing it from one color like black to another color like blue but we can also use CSS to be able to change something like the font that we use in order to display text modern web pages don't show everything in the exact same font usually some designer is choosing what font they want for any particular web page so let's experiment with those possibilities I'll now create a new file that I'll call font dot HTML inside of which will be an HTML page called font and inside the body I'll again just have a div that says hello world same as before but now inside of the style tag here up in the head section of my web page I would like to add some font information to this div and in particular there are a number of different font related CSS properties that I can add to control the font of any particular HTML element one thing I can specify is the font family specifying what font would I like to use in order to display this text and maybe I want to display it in Arial for example which is a common font used on the internet such that now if I open up font.html I now see in aerial the words hello world different from the text that I was using before you can also specify multiple different fonts not all Computers support all fonts so I could specify that just in case Ariel isn't supported fall back to any Sans serif font any of the fonts that don't have the little glyphs at the edge of each of the characters so now if I refresh the page because my web browser supports Ariel I don't notice anything different but you might imagine if you're using more complex fonts that not all web browsers have or support you might add some backups just in case the font you want isn't actually available in addition to a font family I might also specify a font size how big I want the font to be inside of this div so I can specify that I'd like the font size of this div to be you know 28 pixels for example such that now I refresh it and now this div appears using larger text and I can also adjust as like text editors let you specify whether you want it to be normal text or bold text I can specify a font weight for this div and say that in addition to being in font aerial and size 28 I would also like for the font to be bold such that now I refresh it and now the font shows up as bold and using these CSS style sheets we're able to selectively apply The Styling to only particular parts of the web page if I have another underneath this div some more text down here for example that additional text that's outside of the div isn't going to be affected by the CSS styling such that now if I refresh this page some more text shows up in that same standard default font provided by my web browser and not the custom font that I have specified to apply to only this particular part of the HTML page so that now is the ability to add fonts to our page too another thing that we might want to do is to be able to add some sort of border around our HTML elements so maybe I want a line to be able to separate this entire part of the page from another part of the page so I could add a border by going to this div and saying let me give this div a border and maybe I want the border to be like a 3 pixel solid black border for instance I can specify how big I want the border to be I can specify whether I want the border to be a solid line or a dashed or dotted line and I can specify what color I would like that border to be as well so now when I refresh this I now see I have a border around this entire section around this entire div inside of my web page and you can imagine these borders being helpful for styling various different parts of my page so for example if we go back to that table that we were looking at a moment ago when we were dealing with Oceans Where I had ocean and Pacific Ocean and Atlantic Ocean this is structured in the format of a table we have rows and columns but it doesn't look great right now I might like to add some styling in order to improve the way that this table looks for example so let's give that a try I'll go ahead and go back into table.html that HTML file I was using before where I had this table and let me now add some style information to this table I might say that for this table I would like to give it a border that is maybe a one pixel solid Glock border such that now when I refresh the page I have a 1 pixel solid Blackboard room around the entirety of the table all right that's great but I also really wanted to border in between the rows and the columns as well in particular every table data item I might like to have some additional CSS applied to those two so I might say for every table data cell again TD stood for table data and those were the individual cells within my table I might specify that I would like those to also have a border that is one pixel solid black such that now I refresh the page and now each of my table data cells also has a border around it now this applied to the table data cells in the body of my page but it didn't yet apply to these cells up in the heading and that's because those were th elements table headers and so here we have a couple of options I could specify once more table headers I would like to give a border of one pixel solid black but when I do so you'll see that it does create a border around those table headers but again one thing that should be crossing your mind now is that there's a fair amount of redundancy here some repeated style code that shows up in multiple different places table data cells in the body of my page I really want to be styled in a very similar way to table header cells and so it would be nice if I could somehow consolidate these two different CSS selectors these ways of me saying style table data style table headers I'd like to combine them into one and you can in fact do this in CSS there are a number of different CSS selectors ways of choosing elements and one of them is just called the multiple element selector that if I want to select both table data cells and table headers then I can do so by saying TD comma th and delete these three lines down there what these three lines are now saying are that I would like to style all table data cells and table headers in the same way and I could even combine table if I wanted to for good measure but I'd like to give all of them a border of one pixel solid black such that now I refresh it and now I see that they all have this border around them now most tables you see on the internet don't have both a table or a border around everything in the table and also a border around each of the individual cells usually those are collapsed just into a single line and it turns out that CSS has an easy way for you to do this as well I can add a CSS property to the table called border collapse and just say I would like to collapse all of the borders in the table just going to show you there are many many different CSS properties far more than we'll be looking at today but they're easy things to reference so you can easily look up how to collapse borders in a table and then find a CSS property like this that you can then use and apply to your web page so now I refresh that and now I see that I have a border just a single border around all of the cells in this particular page next what I might like to do so though is like add some space around here like it seems like these these text is very tight against the border of this table so in order to do so I want to add some spacing and recall again do I want margin or padding margin is facing around outside of the border of a particular HTML element whereas padding is inside of the border so if I want some space inside of the Border just to space out the text from the border itself then what I want is padding inside of all of my table cells so I can say let me add five pixels worth of padding inside of all of my table data cells and table header cells refresh the page and now here's what the resulting table looks like just by adding a little bit of CSS specifying what border I want around the edge of the page specifying a little bit of padding inside of each of the cellism my table now looks a whole lot nicer than it did just a few lines of code to go when I just had the HTML structure of the page and not the CSS to describe how I actually want that page to be styled and notice again that in doing so we were able to use one of these CSS selectors I was able to say that I wanted to use the multiple element selector which is just this comma here to specify that I would like to apply this styling not just to TDs but also to THS as well we'll take a look at some additional examples of CSS selectors in just a moment but next let's turn our attention to some more tricky instances where we might want to apply styling to multiple elements at the same time let's imagine and let's go back to style.html where we had some style code where I had one heading I'll call this heading one and let's give myself two other headings heading two and heading 3. all of these now are H1 elements that are going to show up the same way such that now if I Style and say I would like all H1s to show up with a color of blue then when I open this page where I have three H1 tags Each of which has a color of blue when I open up style.html what I'm going to see is something like this three headings Each of which happens to have a color of blue but what would happen now if I wanted to style only the first edit I want heading 1 to be blue but I don't want to style heading 2 and heading 3. how do I do that well one thing we could do is go back to the inline styling we did a moment ago where inside of H1 I said style color is blue and that would say for just this very first heading I would like that to be blue but not the other elements at all but this again we decided was not the best design this inline styling comingling of HTML and CSS just gets a little bit messy and it would be nice to be able to factor all of our style code to a separate part of the page altogether so how do we do this well we need some way to uniquely reference this particular HTML element and in order to do so we can give an HTML element an ID in ID is just some unique name we give to an HTML element so that we can reference it more easily later on let me just go ahead and give this an ID of Foo it could be any idea you want but Foo is just a generic name here and now we've given this heading a name such that in other parts of our page or in other code we can reference and find this particular HTML element and in particular now in the style section of my web page instead of styling all H1 elements I only want to style the element that has an ID of Foo IDs are by definition unique there can only be one element in this page that has an idea Foo otherwise it's not valid HTML and so in order to do so we're going to use hashtag Foo the hash mark symbol is just css's way of selecting just something with a particular ID so instead of just H1 for selecting all of the H1 tags if I want to select something by its ID I say hash Foo to say only style the element that has an ID of Foo and give it a color of blue for example so this style code now will find something with a particular ID and give it a style to correspond with it such that now if I reload this page only heading 1 is styled heading 2 and heading 3 are not I've been able to name heading 1 give it a name of Foo an idea Foo and then in my style code just style that particular part of my HTML page of course what if I wanted to style multiple but not all of the headings like maybe I want to style both heading 1 and heading 2. now I could use a second ID maybe give this an ID of bar for example and then Style Both the element with ID Foo and the element with ID bar but now we're starting to add IDs unnecessarily I have too many different names things could start to get messy especially as my web pages start to get bigger so while IDs are a way of giving a name to an HTML element that is unique sometimes I want to give a name to an HTML element that is not unique some name that can apply to multiple different HTML elements and when we do that we call that a class an ID is a way of giving a unique name to an HTML element while a class is a way of giving a name to an HTML element that might not be unique it might apply to zero or one or two or more different HTML elements so here's what that might look like instead of giving each of these H1s an ID that's different I can give each one a class we'll give this a class of baz again just another arbitrary name that we've chosen and I'll give this H1 a class of baz as well they both belong to the same class called baz in this case and now inside of my style code I would like to say just style the elements that are of class baz and just as we had a special symbol the hashtag for styling only something with a particular ID you to style everything with a particular class I can use a DOT so dot baz in this case is going to style only the elements that have a class of baths so here I can now say take all of the elements with a class of baz and go ahead and give those a color of blue so now I have two H1s that belong to class baz each the other H1 does not and I've styled only the things that are of cloth spaz such that now when I go back to the page and refresh the page my first two headings those do get styled as blue but the third heading does not because I've applied a class to these two elements that does not get applied to this third element there so oftentimes it can be very helpful if you have to start to design larger web pages where you have multiple different elements some of which might be styled in some ways and other elements that might be styled similarly to one another you can add IDs and classes to your HTML elements just to clean up the way that you write your CSS to be able to very specifically pinpoint one element that you want to apply style to or to apply styling to entire class of elements as well now one tricky thing you might imagine now is that now we have multiple ways of referencing the exact same element so for example if you imagine that I just had a single H1 which had an ID of Foo for example that I've named Foo what would happen if for instance I said all of the H1s I would like those to be colored red and all of the elements with an ID of Foo or the only element with an idea Foo I would like that to be colored blue what might happen then these would seem to be conflicting where now suddenly we have an H1 style tag that is saying I should style each ones in this way but I should style element Foo in another way so what happens if I have an H1 whose ID is Foo how do I choose to style that and in order to deal with that we have to start to deal with the CSS problem of specificity of what happens when I have multiple different CSS selectors that could apply to the exact same HTML element and this often happens when we start to add IDs and classes to our elements as well so when we deal with specificity specificity goes in a particular order there's an order of Precedence that we can follow for determining what style should ultimately be applied to any particular element the first most powerful most specific way of referencing an element is inline styling literally adding a style equals attribute towards the HTML elements the way we did way at the beginning when we were first taking a look at CSS if we associate inline styling with an HTML element that's going to take precedence over any styling that's inside the style section of our head of the web page or inside of a separate.css file because the reasoning goes if you are literally putting the style code attached to the element itself then we probably want to apply it to that element after that specificity goes in order of how precisely we are identifying an element an ID is a unique way to identify an element there's only one element with that particular ID so if I've added style to a particular ID that is going to be pretty highly valued in terms of how specific it is next we look at classes so if there's no ID selector we look for did we reference the element by its class and if so then that takes next precedence and otherwise then we fall back to what type of HTML element it is is it an H1 is it an ordered list is it a table so in short the type is the least specific class is slightly more specific ID is more than that and the most specificity we can provide is by literally putting the CSS in line with the HTML element itself so let's take a look at an example of this let's look at this code for example where for instance I have a div whose ID is Foo inside of which I'm just saying the word hello and the CSS code that I've included here is I've said for all divs I would like to give those a color of blue obviously in that case there's nothing conflicting what we're going to see is we're going to see the word hello and we're going to see the word hello in blue but what happens now if we add anything with ID Foo should be colored red well because ID has higher specificity than just an individual tag well then next what we're going to say is that this hello is going to show up as red the ID is more specific and so this element is going to show up red instead and it doesn't matter what are these are in it's not that the later one takes precedence if I were to flip these around where idfu color red div color blue is in that order it's still going to show up as red because this ID selector is more specific than just the name div which is the name of the HTML element that happens to be there and so as you start to develop more sophisticated style sheets you might find that some of your CSS code is going to conflict with each other and that's where it's important to bear in mind how these specificity rules work to know as you add style to your elements how are they actually going to end up showing up now we've seen a couple of CSS selectors now in terms of selecting a single element selecting an ID selecting a class selecting multiple elements as well it turns out there are a number of other CSS selectors that we can use too so we saw for example the multiple element selector like TD comma th for selecting table data but also table headers but there's a number of other selectors here's just a sampling of ones you can specify like descendants or children so if I only want to style divs that are inside of tables or I only want to style lists that are inside of certain classes I can use these descendant and child selectors to add styling in those particular ways and there are a number of other CSS selectors we can add as well and we'll go ahead and explore a couple of these just to give you a sample of how some of these CSS selectors can actually work and we'll start by taking a look at the descendant selector which is used to select all the elements that are descendants of some other element for example so let's go ahead and create a new file that I'll call descendant .html that again we'll start with the same code and inside the body of this page I want an ordered list that maybe has a list item one and maybe list item two and it turns out with lists in HTML you can Nest lists inside of other lists maybe you've seen bullet points where there's like nested bullets inside of other bullet points I can do that here I can add an unordered list and create a sub list like sublist item one and sublist item two and maybe down here here's another list item such that now I have a couple of items but some that are inside of an unordered sub list let's go ahead and open up descendant.html and see what that looks like so here's what we have we have list item one list item two another list item that is probably actually list item three so we have three items but inside of list item two I have an unordered list let's imagine for example that I wanted to only style these sub list items as a particular color like maybe I want those to be blue for example if in the style section of my web page I say that I would like for all list items to be styled blue well then not styled colored blue rather then what I'm going to see when I refresh the page is that all of the items are going to be blue instead of just the two sublist items but I could instead say that you know what I only want list items that are children of unordered lists and I can do direct children using this greater than symbol to say that only if there is a UL that immediately contains an Li within it then I would like for that to be colored blue and now if I refresh that now you'll see that the ordered items listed in one two three those do not get colored but only the list items that are inside of the unordered list that are directly children of that unordered list actually get the CSS styling applied this greater than symbol here is specifying immediate children I could get rid of it ulli like this and this would also work you still see sublist item one and two but this is a more General selector called The Descendant selector that selects all descendant elements so they might not be the children element so that might be grandchildren elements so to speak if those children elements have other children that are attached to them as well again for all of this it's helpful to begin to think about things in terms of that document object model that Dom structure that tree that represented how all of our various different HTML elements are related to one another so next up we can begin to take a look at some of the other selectors that we have access to so one of those selectors might be something like modifying and only on a specific attribute of a particular HTML element so we can use the attribute selector for that I'll create a new file called attribute.html where here let's go ahead and create a unordered list that's going to have a number of different links to various different websites so here's a list item that is going to be a link to Google so I'll link to google.com and say Google and I'll go ahead and add a link to facebook.com call that Facebook and I'll go ahead and add a link to amazon.com and call that Amazon and let's imagine for a moment that I only wanted to style the Facebook link like I want to really highlight the Facebook link tell people to click on that one as by coloring it in entirely different color well to cut to style links normally I would say something like links should be colored you know blue for example they're color blue by default but I could be explicit about it and say links should be color blue like that such that now when I open up attribute.html all of the links are colored blue but I could also say I would like links that have an href attribute of facebook.com I would like those links to be colored red instead so this square bracket notation I can use to specify a particular attribute of an HTML element only anchor tags a tags whose ahref is equal to facebook.com those should be the only ones colored red so now when I refresh this I now see that Facebook is a link that is now colored red instead of colored blue because I've been very specific about picking an attribute that I would like to use in order to reference that particular HTML element and we can use CSS selectors in more powerful ways too maybe not just to style a particular element always but to style an element only under certain conditions or only when an element is in a particular State and this is very often done for something like when you hover over something when you hover over some a button and something pops out or you hover over something and it changes color slightly we can begin to do this by adding what we call a pseudo class to a CSS selector so let's take a look at an example of that to see how we can modify an element when a user hovers their cursor over that element for example so I'll go ahead and open up a new file hover.html we're here I'll go ahead and inside the body of the page just give myself a button this button is going to say click me and let's add some style to the button by default buttons show up as fairly simple buttons it just looks something like this I might like to add a little bit more to this button and say you know what let's add some style to the button and give it a width of 200 pixels a height of 50 pixels a font size of 24 pixels and maybe a background color of green for example so I specified some size information how big I'd like the font to be and also a background color for the button such that now here's what that button looks like shrink it down a little bit it says click me but many buttons especially nowadays are a little bit of they give you a little bit of feedback you hover over them and they change their color slightly how do they do that well often it's using a CSS pseudo class where I can say button colon hover meaning when I am hovering over a button then I'd like you to change the background color to Orange for example some other color so now I specified that by default normally for a button your background color should be green but when the button is being hovered over instead now change the background color to Orange such that now when I open up this page and go to click me if I hover over the button the color of the button changes normally green changes to Orange and so that is a very powerful feature that we have access to as well all right so now we've seen how we can use various different CSS selectors to very precisely Define how we want our web pages to be styled but one other thing we can use CSS for that's quite powerful is responsive design and responsive design is all about making sure that our web pages look good no matter how you're looking at the web page nowadays people aren't always looking at web pages on their computers but they're looking at web pages on their mobile phones or on their tablets as well and it's important as we begin to design web pages that we design our web pages in a responsive way so we'll look at a number of different ways we can Implement responsive design in our web pages starting with the discussion of the viewport and what the viewport is is the viewport is the visual part of the screen that the user can actually see so the viewport is this entire area of the web page that displays content to the user so one question you might ask is what's going to happen when you take this page and translate it onto a Mobile screen well one thing that many mobile devices do by default is treat their viewport as though it is the same width as a computer screen because not all web pages are optimized for mobile device mobile devices you want to make sure that on a mobile device you can see everything and so many phones will take a web page like this and just shrink it down to fit onto a Mobile screen that looks a little something like that now of course that's probably not really what we want it to look like ideally we want our page to adapt to different size screens maybe we want the heading and the image and the text if that's what these are to grow a little bit to fill that entire screen and so one simple thing we can do is just to add a little line of code to our HTML inside the head section of our page that controls the viewport this line of code here is providing some metadata to our HTML page and saying I would like you to change the viewport to be specifically the width of the device by default many phones will use a viewport that's actually wider than the with the device treat it as if they're loading a page on a computer and then shrinking it down to the size of a mobile device if you and your web page specify though that you want the viewport to be just the device with oftentimes a page is going to look a whole lot better on a mobile device but in addition to just adding a line like this there are other actual changes we can make to our page to make it look a little better on different screens and one of those has to do with media queries and media queries are all about controlling how our page is going to look depending on how we render that particular page or what size screen we're rendering that page on so let's take a look at an example of how we might go about do using media queries in order to control what a page actually looks like depending on what type of page or what type of browser we're using to view it so I'll go ahead and open a new file that I'll call responsive.html because we're going to try and build a responsive web page now and now I'll go ahead and inside the body of my page just include a big heading that says welcome to my web page for example and just to demonstrate what you can do now with responsive design is I could say something like let me add a style tag here where I want to say that if the size of the screen is a certain width then I want to style the page in one way and if the size of the page is a different width then I might want to style the page in a different way you might imagine that as you shrink the screen you want to move elements around in order to rearrange them to make the page just look a little bit nicer on a mobile screen so we'll do a very simple example of just changing the color depending on the size of the screen so let me specify now in a media query in the Syntax for media query looks like this I'm going to use the at symbol and say media and then specify for what type of media I would like to apply this query I can say something like if the minimum width of the page is 600 pixels in other words if the width of the page is 600 pixels or anything larger than 600 pixels well then go ahead and take the body and give it a background color of red but then I could also add another media query and say you know what for this media query let me give it a Max width of 599 pixels meaning if the size of the screen is 599 pixels or fewer then maybe I'd like to take the body and give it a background color of blue for example so now let's take a look at what happens when I take this page and actually open it and see what's going on I'll open up responsive.html and here's what I see normally I see a red web page because my screen is longer than 600 pixels wide but notice what happens is I shrink this web page if I go ahead and shrink it looking at it on the smaller screen eventually it turns to Blue if it's above 600 pixels wide it's going to be red if it's below 600 pixels wide the color changes to Blue so we're able to now use these media queries to really finetune the control how our page is going to look on various different types of devices if it's on a big screen maybe you want the elements to look a certain way if it's a smaller screen maybe they look differently and you don't just need to control a background color you can control any CSS property you want just by using these media queries you can say on a big screen you want certain amounts of spacing or padding you can even hide elements on smaller screens if you want to by using a particular CSS property called the display property that controls whether or not an element is even visible and ultimately put together this can help to make your pages a little bit more responsive and there are a number of different media queries that we can apply to our page as well we can check to see whether a mobile device is vertical or landscape we can check to see whether the user is viewing the page on their computer screen or if they've tried to print out the contents of the page as well so there are a number of different options that we have to really control how a page is going to look there are some other tools we have in our toolbox as well though for dealing with mobile responsiveness and one of the tools built into the latest version of CSS is something called flexbox and flexbox is quite helpful if we have multiple elements that we're all trying to display on the same page at the same time that might overflow if we're not careful about how we do responsive design if we're really not careful let's imagine I have six elements that show up on my computer's monitor when you translate that to a Mobile screen you can imagine they may all shrink down so that they're barely visible something like this this is probably not what we want if we're trying to design a mobile responsive page for example so you might imagine how can we do a little bit better well another thing we could do is take these elements and go ahead and keep them the same size but make you have to scroll through them this isn't a slightly better the elements are at least still visible and they're large enough on the screen but it'd be nice not to have to scroll through them what would be really nice is given that we have all this extra space I would like to be able to wrap around elements if I don't have enough space for them such that if I'm translating these six elements to a Mobile screen they translate but I get them in like two rows for example three on the top and three below and flexbox is an easy way to be able to implement something like this inside of our web pages so let's take a look at what that might actually look like to add flexbox to our page so I'll go ahead and create a new file called flexbox.html we'll start with the same HTML code and now inside of the body I'm going to create first a div that is going to be called the container and we're creating a container because we're going to specifically say that everything inside the container I would like to add flexbox to to be able to wrap it around so that things can go on to multiple lines if I ever need to and now let me just add some sample text so this is some sample text inside of a div to demo flexbox and I'll go ahead and repeat this maybe like 12 times and I'll number each one here's one two three four and I'll number all the rest this is just to give a demonstration of what these elements could actually look like ideally these would be different pieces of content though so now inside of my style tag here's what I'm going to say just to demonstrate I'll say take the ID container again the hashtag specifies get me something with a particular ID and I want to display it using flexbox and in particular I would like to use the flex wrap property to say if there's not enough room at the end of a line for all of the elements go ahead and wrap around those elements onto the next line instead and now I can specify some additional CSS properties for the divs inside of the container so I can say for the container all of the divs inside of that container again using this child selector to get all of the divs that are inside of the container I can add some CSS to that too I can say let's give these a background color of like a shade of green I can give them a particular font maybe 20 pixel font give them some margin and padding just to add some space and maybe each one is going to be 200 pixels wide so just adding some spacing to those individual divs the important part is this right here where I've said that this whole container is going to be a flexbox container and I'd like to wrap around elements if you ever reach the end so now I'll open up flexbox.html and so here I now see 12 elements that are on multiple lines but notice what happens as I shrink the page if there isn't room for all of them elements move onto other lines now there's only three elements in any particular row now there's only two elements on any particular row and so I can use flexbox to very well adapt myself to different size screens and no matter whether you're looking at this on a big screen or a small screen the content is still going to look good because I'm able to adapt responsively to whatever might be happening so this is one layout Paradigm that exists within CSS this flexbox layout there are other layouts that exist as well one common one is the grid layout for any time you want to arrange things in a particular Grid or maybe certain columns need to be certain widths but others could maybe be a little bit more flexible show us I'll show one example of that too just to give you a demonstration of what that grid layout might look like so here's grid.html where I'll go ahead and inside the body of this page give myself a div whose I'll give it an ID of grid and then let me just add div class equals grid item again a class because there might be multiple items but I'll go ahead and just create a whole bunch of grid items and number each one so two three four five six seven eight nine ten eleven twelve so I have a whole bunch of grid items inside of a div whose ID is grid and now I'd like to add some style here I'll say for the grid let's give it a background color maybe maybe a background color should be green a display is going to be grid I want this to show up as a grid and now there are a couple of attributes I'm going to or properties that I'm going to specify here maybe I want some padding around the grid first but the important grid properties are grid column Gap how much space goes between each of the columns maybe I'll say like 20 pixels likewise there's also a grid row Gap how much space goes between each of the rows of the grid maybe I'll say 10 pixels here and then finally grid template columns is a way for me to specify how many columns there are going to be and how wide should each of those columns be so if I want maybe three columns I can specify that the First Column should be 200 pixels the second column should also be 200 pixels and the third column can be automatically sized just grow or Shrink to fill the screen so we'll say Auto so First Column 200 pixels second column 200 pixels third column just do it automatically and now for all of the grid items well those I can add some styling to to as well I'll give them a background color of white just to distinguish them and also give them some font size and some padding and maybe Center them as well so just adding some additional CSS properties in order to make it display the way I want to but the important ones to care about here are display as grid and then I'm specifying here's how the grid should be laid out how much space between columns how much space between rows and how wide are each of those rows going to be now if I open up grid.html here's what that grid looks like I now have a First Column 200 pixels wide a second column also 200 pixels wide and a third column that's going to resize dynamically based on how wide or how narrow my screen happens to be so as I shrink the screen the third column shrinks with it as I grow the screen it also grows alongside with how big this window happens to be and so flexbox and grid are some very powerful tools that we can use just to make it easier for us to be able to use mobile responsive design to be able to make sure that our Pages look good no matter what kind of browser or what kind of device the user is using in order to look at our page but it turns out there exists a lot of libraries out there that do a lot of this for us some people that have already written CSS code to make our text look good to make our buttons look good in order to make sure that things are mobile responsive and one of those is called bootstrap bootstrap is a very popular CSS library that we can use in order to use some styling that they have written such that we don't need to write all the styling from scratch so this is what bootstrap's website looks like I'll go ahead and show it to you now just to give you a sampling for what's available inside of a library like bootstrap if I go to getbootstrap.com here's bootstrap's website and if I go to their documentation on this first link here I can look at all of the bootstrap components that I'm given access to these are things like alerts for example that here's an alert that's styled in a very particular way it's in a specific font it's gotten a certain amount of padding in certain colors and if I want to just copy this alert once I've used bootstraps code I can just apply certain classes to a div and bootstrap will handle the process of applying the right styles for me I don't need to write all of these styles by myself from scratch bootstrap's written a lot of The Styling already so how do you actually go about using bootstrap well to get started with bootstrap all you need to do is copy the CSS link that bootstrap gives you to the top of your file so if I take the CSS link and then go back to something like hello.html which you'll recall originally looked something like this just hello world I can add some bootstrap to it to say all right I would like to take this HTML file and apply bootstrap styling to it to make it look a little bit nicer so I refresh the page and now you'll notice bootstraps chosen a custom font for me just to make things look a little nicer in bootstrap's own eyes and now if I want to add bootstrap elements I can say all right let me go to their components and I want to add an alert I can just copy their alert code here's their alert code for a primary alert an alert that looks blue and I can just inside the body of my page go ahead and add an alert and maybe change the text to here is my alert for example now when I reload hello.html I now see an alert that shows up styled according to bootstrap styling and again I can change that styling just by changing these classes so a primary alert shows up as blue a success alert shows up as green a danger alert is red so if I want to give a danger alert the user is doing something wrong on the web page for example I can change alert primary here inside my HTML to something like alert danger instead and now when I refresh this page I now see the alert shows up as red instead of blue so bootstrap gives us access to a lot of these various different types of components different ways of adding breadcrumbs and alerts and carousels and other elements to our page just to make it easy to make our page look good very very quickly without having to worry too much about writing our own CSS because bootstrap's written a lot of that for us bootstrap even includes a way to make sure that web pages are mobile responsive using something called bootstrap's column model so I'll show you an example of that now bootstrap divides its page into 12 distinct columns so one thing I can do is I've pulled this up in an example I have an advance called column 0.html notice that inside of the body of my page now I have a div whose classes container and then a div whose classes row and bootstrap divides every row into a 12 unit column so here for example I have a whole bunch of divs that are each three unit columns so if I have four three unit columns that will take up a total amount of space equal to 12 meaning filling up the entirety of the screen so if I now open up Source column zero dot HTML here's what that looks like I have four columns Each of which is of width three and as a result as I shrink it those columns will automatically resize to make sure that they're always the appropriate size now as long as they add up to 12 they don't all need to be the same size so for example if I only wanted three columns instead of four I could get rid of the fourth column by deleting those rows and maybe change the second column instead of to being a column of size three let's make it a column of size six so that's a length six column instead and now if I refresh the page now suddenly I see three columns where the middle one is twice as large as the ones on either end and as I shrink this down I can see that it shrinks down as well and one of the advantages of using bootstrap columns is that they too can be mobile responsive they too can wrap around other lines if they ever need to so for example let me pull up columns1.html here for example I have a row and let's take a look at what's going on in here recall that every Row in bootstrap is divided up into 12 column units but bootstrap in addition to letting me specify how many units a column should take up also lets me specify how many units that column should take up depending on the size of the screen so if I'm on a large screen as indicated by LG this is saying that on a large screen this div should take up three units of space and this div should also take up three units of space and for each of these four divs on a large screen each will take up three of the total 12 units of space so they'll all show up on one row what happens on a small screen though well here call SM for column on a small screen I've said on a small screen each column should only take up should take up six units of Space six or half of the total 12 that I have in the row and so I use up six here six here for a total of 12 and one row which means the next two also a size 6 need to go on to a second row and bootstrap is smart enough to do this math for me and figure out how exactly these elements should ultimately be laid out so now if I open up columns1.html and see what's there on a large screen I see four columns all in the same row but as I shrink down to a smaller screen eventually we'll see that things change I now see the third and four sections move down onto the second row because on a smaller screen now when the when the window is smaller now I only have the ability to show two elements in any particular row so I get two on the first row and then two on the row underneath that so all in all there are a lot of different ways to know that we can use CSS in order to make sure our pages are mobile responsive we can use bootstrap's column model to make sure the columns move around whenever a size of the window shrinks or grows we can also use things like flexbox and the grid model writing our own CSS to make sure that our page is responsive depending on the size of the screen that the user happens to be using in order to visit our web page so these are some of the very powerful features that we get using just CSS but one thing you might imagine is that as we begin to write more and more CSS there's going to be more and more repetition things that appear again and again and again and we've already seen some ways that we can minimize redundancy in CSS we've seen how we can move CSS into the style section of our web page we've even seen how we can move CSS to an entirely different file however what we haven't yet seen is how to deal with other types of redundancy and so let's take a look at an example of that now let's imagine for example that I want to style multiple different elements uh in different ways but using some common properties so for example let me create a new file that all in this case call variables.html and you'll see why in a moment I'll go ahead and copy hello.html but I'll get rid of all this bootstrap inside of it let's imagine that here I have in maybe two lists an ordered list and an unordered list where my unordered list has unordered item maybe three unordered items and my ordered list also has three ordered items again just for sake of demonstration I'm showing that we have these two lists now and I'll open up variables.html just to give you a sense for what that could look like we have three unordered items in an unordered list three ordered items in an ordered list let's imagine I wanted to style these a little bit differently maybe inside the style section of my page I want to style the unordered list to have a font size of 14 pixels and maybe a color of red and my ordered list I would like that to have a font size of maybe larger 18 pixels but also a color of red I want to keep the same color for all the text but I want the font sizes to be different now if I refresh this page here's what I see they are indeed of different sizes the ordered list items are larger than the unordered list items and they're all red but there was some redundancy some repetition that was introduced when I was writing my CSS code in particular when I was writing my CSS code I've repeated this usage of the color red if I ever want to change the color from red to blue for example I'm going to have to change my code in two different places ultimately I just like for my CSS to be a little bit more powerful and so that brings us to our last topic today which is a language called SAS and SAS is a language that is essentially an extension to CSS it adds additional features to what CSS has to offer just to make it a little bit more powerful for us to be able to use and manipulate CSS in a way that's going to be faster and remove some of the repetition that we might have had in CSS previously and one of the key features of SAS is the ability to have variables so let's take a look at an example of the snow I'm going to create a new file normally when we created our CSS files we call them like variables.css something.css to stand for a CSS file SAS is a different language though so it's going to require a different extension we're going to conventionally use dot scss to stand for this is a SAS file so here's now variables.scss and now what I can do in SAS is I can actually create variables in the same way that we could create variables in a programming language like python which we'll soon see CSS normally doesn't support variables but SAS is going to give us that power in SAS all variables begin with a dollar sign so I can create a variable dollar sign color to create a variable called color and I can say the variable called color is going to be equal to red so this line here line one is my way of telling SAS I'd like to create a variable called color and I'd like for its value to be red and now I can add the same styling I had before I can just use normal CSS and say for an unordered list I'd like the font size to be 14 pixels but the color instead of saying red here I can use the name of a variable I can say dollar sign color to mean go ahead and use the value of the variable color as the color for this unordered list then for an ordered list I'll also say font size 18 pixels and say color should also be this variable called color by using a variable I've removed the repetition rather than having the word red show up in multiple places in my code where I would need to change it twice if I ever needed to change it now I have defined the variable once and I only ever need to change it in one place if I ever need to make modifications to this particular file so now let's try and Link this file instead of we'll go back to variables.html instead of putting the style code here I'll go ahead and Link a style sheet and say the href should be variables.scss because that's the file where my styling exists so now let me try and open up variables.html after I've linked the CSS and all right something seems not quite right I specified font sizes I specified that everything should be read but it's not showing up everything is showing up black and I don't see any of the differences in sizing and the reason for this is while the web browser things like Chrome and Safari and Firefox can understand CSS they can't by default understand scss or SAS SAS is an extension to CSS that web browsers don't understand out of the box so in order to solve this problem once we've written our SAS file we need to compile it convert it translate it so to speak from SAS into plain old CSS so that our browser is able to understand it and so you'll need in order to do this you'll need to install a program called SAS onto your computer you can install it on Mac or PC or Linux and now in the terminal in order to do this compilation I'm going to say SAS variables.scss the file I'd like to compile colon variables.css so variables.scss is the file that I would like to compile and the file I'd like to generate is variables.css I'd like to turn my SAS file into a plain old CSS file I'll go ahead and press return and to write that compilation process is now done and so now inside of variables.html instead of represent referencing the scss file I'm going to reference the CSS file as the style sheet because my web browser only understands CSS it doesn't understand SAS now when I load the page now I see the result I expect everything shows up as red and the font sizes are different so ultimately this was a twostep process I first needed to take my SAS code compile it into CSS and then I could link the CSS to this particular page but the advantage now is that if ever I want to make some sort of change I want to change the color rather than change it in two places or you might imagine in a more complex page like tens or dozens of places I just go to the scss file and I change the color from red to blue now if I refresh the page all right everything is still red and it's because I forgot a step I changed the SAS file but that doesn't automatically change the CSS file I need to now recompile the CSS file by saying SAS variables.scss variables.css to compile the file again using the updated SAS file and now I see the updated changes and if you're curious as what the updated file looks like I'm gonna actually look at variables.css to see what code happens to be there and though it's styled a little bit strangely you can see that I have a UL with a font size of 14 and a color of blue so they've substituted the word blue for this variable and they've done the same thing for ordered lists as well now in practice it's going to be pretty annoying if I'm building a web page building using SAS if I constantly need to go back and recompile my SAS into CSS every single time what I'd like to do is just automate that process and SAS makes it easy to do this I can just say SAS dash dash watch variables.scss variables.css and what that's going to do is now you see SAS is watching for changes SAS is going to monitor the variables.css file and if ever I change my SAS file SAS is going to know about it and it's automatically going to recompile the corresponding CSS file and you can do this now just with single files but entire directories as well if you have multiple different SAS files so now what I can do is if in the variables.scss file I change the color instead of blue I now want it to be green for example I now save the variables.scss file and now without doing anything take a look at my terminal SAS detected a change to variables.scss so it gave me a new version of my original CSS file if I go back to my web browser now refresh the page now all of the text is green as I would expect it to be so that's one of the very powerful features that SAS gives us it gives us the ability to add variables to our CSS code just to factor out commonalities if there are common fonts common colors common borders common styling that I want to apply to a lot of different things it becomes much easier just to use SAS in order to do so and finally we'll take a look at a couple of other features that SAS gives us the ability to do one of them is the ability to Nest CSS selectors inside of other CSS selectors so one thing you've seen so far for example is that in CSS if I wanted to style all of the unordered lists that are inside of divs for example I could say like div Arrow unordered list in order to style unordered lists that are inside of divs what CSS what SAS will do is it'll give us a bit of a nicer Syntax for doing this type of thing in particular by allowing us to Nest CSS inside of other pieces of CSS so just as an example of this I'll go ahead and open up a file I already brought called nesting.html and so here's what we might see inside of nesting.html here's the body of the page inside the body of the page I have a div inside of which is a paragraph inside the div and also a list in unordered list or UL that's inside of this div as well and then we also have a paragraph that's outside of the div and a list that's outside of the div in addition to that so A number of different elements some of which are located inside of other elements and what I'd like to do is be very precise about how I style these pages what SAS is going to allow us to do is it lets us write a SAS file that looks a little something like this let's take a look at what it's doing it's saying for the entire div I would like to give that div a font size of 18 pixels and then what CSS normally doesn't allow us to do but we can do now using the power of SAS is say for any paragraphs that are inside of that div go ahead and give those paragraphs a color of blue and for any unordered lists that are inside of the div give those unordered lists a color of green by nesting these CSS selectors inside of others we've been able to get across the idea that I only want to style the paragraph if it is inside of a div and this is just a little bit of a nicer cleaner syntax for doing some of these more complex styling tasks that might come up so what does this actually look like if I like take this scss file and turn it into normal CSS what is the result going to be well let's take a look we can try it out by let me go into my nesting folder where all these files are located and if I run SAS nesting.s CSS turn it into nesting.css now let's open up nesting.css and see what it looks like here it's turned into take all of the divs give them a font size of 18 pixels and then we're using the same descendant selector notation that we saw before where all the paragraphs inside of divs should be color blue all the unordered lists inside of a div should be colored green and this certainly works and we could have just written this CSS from the beginning but it can be a little bit cleaner a little bit easier to read to use SAS in order to really say uh paragraphs inside of divs should be structured this way unordered lists are styled in some other way and using this nesting approach just makes it often easier to take a look at this scss page and really understand how all of the different style code interacts with each other so after all of this now if I open up nesting.html we might see something that looks a little something like this the paragraph inside the div and the list inside of the div those both get changes to the way that they've been styled but unlike them these paragraphs outside of the div and the list that is also outside of the div those get styled a little bit differently so two features now we've seen inside of SAS we've first seen the ability to have variables to make sure we're not repeating ourselves in many places throughout the code and now we've seen the ability to Nest CSS selectors inside of each other by taking advantage of SAS finally we'll take a look at one last feature that SAS is going to give us and that is something called inheritance if we have certain CSS selectors that are related to other CSS selectors but that are maybe adding some additional information and in this case I'm actually going to show you the finished product first so let's go into inheritance and let me open up inheritance.html and here you see I've tried to almost Implement bootstrap style alert messages in HTML I have a success message up at the top a warning message and then an error message and each of these messages you'll notice are styled differently in particular they're each a different color but despite that they share a lot in common they share a common border they share a common font they share a common size and many other properties are all shared between these elements there are just some things that are a little bit different about them I could have written three different CSS selectors to deal with all of these cases but there might be some repetition there so here's what I can do by taking advantage of the features that SAS gives me let me go ahead and look at inheritance dot scss to look at the code for doing this and it looks a little bit cryptic at first but here's what I've defined I've here defined using a percent sign that this is what a generic message is going to be something that I can extend later to add additional information to all of the messages whether they be success messages or danger messages or warning messages they're all going to have the same font they're all going to have the same border they're all going to have the same padding and margin spacing around and outside of it but each of the specific messages are going to be slightly different how are they different well let's take a look down here anything with a class of success I'm going to say extends this message and by extends this message what I mean is that anything with a class of success is going to inherit all of these CSS properties the font the border the padding and the margin but it's going to add additional information to it in particular we're going to add a color we're going to say that for Success messages the background color is going to be green I have extended the basics of what a message is but said that this message in particular has some additional style that we're going to assign to it as well and the other two messages behave in very similar ways my warning message extends the message but instead says the background color should be orange and finally the error message also extends the message but this time gives us a background color of red instead so now when you compile this all together into inheritance.css which are compiled in advance uh this is what this is ultimately going to look like it translates what I've written into saying all right success and warning and errors should have all of these properties but success should also have this background color warning should have this background color error should have this background color so you again we could have written this CSS there's nothing that SAS does that we couldn't have written ourselves using CSS SAS will just make it a little bit easier to do many of the same things so we can write things in a little bit of a nicer syntax by saying the success message inherits from the message but adds a background color and likewise the warning and error messages do the same thing but in a simpler syntax and a bit of a nicer syntax such that later we can let the computer take the SAS code and compile it into CSS instead and so those now are some of the fundamentals of what we've seen in building web programs using HTML and CSS we've seen how we can use HTML to describe the structure of our web page deciding what's going to show up where on the page and then we looked at CSS and how CSS can then be used to style our web page in various different ways adding custom styling like colors and layouts but also thinking about things like responsive design like what happens on a mobile screen or on a tablet and making sure that our web pages look good on those screens too and then finally we took a look at SAS in extension to CSS that adds a number of additional features features like variables and nesting and inheritance that make it even easier for us to be able to write style that we can apply to our web pages from there we're going to be transitioning now to looking at how we can use HTML and CSS in larger web applications as we begin to incorporate other tools tools like Python and JavaScript and other languages and Frameworks altogether so this is web programming with python and JavaScript we'll see you next time thank you all right welcome back everyone to web programming with python and JavaScript so last time we took a look at two languages HTML and CSS both of which can be used to design web pages HTML we used in order to describe the structure of web pages to decide what content we want in the layout of the page and then CSS we use to describe the style of the page what color we wanted things how much space we wanted to run things as well today we're going to turn our attention to a tool that we can use as we begin to develop these web applications and in particular we're going to be looking at a tool called git and what git is is it is a Version Control tool not specific to web programs necessarily but that we're going to use as we begin to develop bigger and more sophisticated web applications over the course of this term so what is git going to enable us to do well it's going to do a couple of things first and foremost what git is it is a command line tool that's going to allow us to First keep track of changes that we make to code so once upon a time the first time I was starting to develop web applications I remember working on a file and then when I wanted to make changes I might have wanted to save the old version so I would duplicate the file and then just make changes to the duplicate but this quickly gets messy especially if you have lots of different versions of your code in various different stages keeping track of them just starts to become a nightmare so what git is going to enable us to do is to keep track of changes that we make to our code so we might create a file initially save that version of it but over time as we make changes add to it remove things from it we can save snapshots so to speak of various different parts of our code at different points in time such that we can quickly and easily reference all of those changes that we've made to that code additionally git is going to make it easy for us to synchronize code between different people in larger scale web applications it's rarely just one person who's working on the entire application usually you're working with a coworker or multiple coworkers all in the same application and all at the same time and one definitely tricky part of this process is figuring out how to synchronize your work between different people if I make a change on my part of the web application I want to make sure that my colleagues are also able to see those changes and get access to the latest changes that I've made and then I want to be able to get access to the latest changes that the people I'm working with have made too so we need some way to keep everything in sync and git is going to enable us to do that what we're going to effectively have is one version of the code stored in what we're going to call a repository somewhere online and both I and someone I'm working with a partner for example might both be able to get access to that exact same repository those same files in the same state and If Ever I and the other person make changes to those files we can each make changes to those files and then say synchronize them back up pushing them back up to the server so to speak so that the server will have the most recent most uptodate version of this code then after that after we've both pushed our changes up to the server then we can both pull changes from the server so to speak in order to get access to the latest version of the code so that no matter what so long as I've been working on the same project that my partner has we can use git to synchronize our work so that I have access to my colleagues most recent changes and vice versa git also enables us to do a number of other things for example git allows us to test changes to our code without removing access to the original so for example you might imagine that as I'm working on writing a program I might want to try making some changes but I'm not sure if they're quite going to work so I want to test those changes but I don't want to lose access to my original working version of the program just in case something goes wrong so what git enables us to do is it lets us make changes to code on a separate Branch so to speak such that later once we're happy and satisfied with the changes we can merge those changes back into the original version of our code being able to test those changes before we're really sure that they're the ones that we want to make and finally one powerful feature that git gives us access to is the ability to revert back to old versions of our code so you might imagine in a situation where I've been working on some code and I realized that actually what I'm doing right now isn't what I want git enables us to say you know what this most recent change isn't something that I wanted I would like to revert back to a previous version of the code instead and git makes it very easy to go back to those previous versions so the goal for today is going to be to learn how to use this tool to learn the various different git commands that will be quite popular and quite common as you go about working on web applications or really any other code related project because Version Control really allows a number of useful features that are practical as you begin to work on larger and larger projects But ultimately as we begin working on these git projects they need to be stored somewhere online such that we're able to download them from anywhere such that me and a partner can both be working on the same files in the same code and so in order to do that we need to host our git code somewhere and there are a number of different websites that can do this but one of the most popular is a website known as GitHub GitHub is a website that stores git repositories where all a repository is is you can think of it as a folder that holds a whole bunch of code and files related to our code so we're going to host this code online on a website called GitHub and then on our computer we'll be able to access these GitHub repositories and manipulate those repositories by changing the files that are within them so let's go ahead and take a look at GitHub and see how we can go ahead and create our very first GitHub repository if you don't already have a GitHub account you can create one by going to github.com and signing up for an account for free and I'll now go to github.com new github.com new is the page I go to if I want to create a new GitHub repository and so let's take a look at what I need to do in order to create a repository the first thing I need to do is give my repository a name so in this case I'm just going to call the repository hello we can give it any name you want so long as that name doesn't collide with other repository names that you already have GitHub optionally lets me provide a description for this repository I'll just say web programming with python and JavaScript and then GitHub gives me the choice do I want this to be a public repository such that anyone can see the repository not everyone can necessarily make changes to it but it's publicly available if anyone wants to download my code and try it out public means that anyone can access it or private meaning by default only I can see this repository but I can choose if I would like other people to be able to see it as well and I can select which individuals for now I'll go ahead and make this repository public and I'll go down here and click on the green create repository button in order to make this new Repository so I click the create repository button and here it is this is the github's repository page and right now you'll notice that there's a lot of instructions here but there are no files because right now when I first created my first git repository I got an empty repository with nothing in it so what I'd like to do now is somehow download this repository onto my own computer such that I can add say an HTML file that contains some HTML that I want to keep track of using git so how am I going to do that well in order to do that we're going to take a look at the very first git command that's going to be involved with Git which is known as git clone git clone is a command that we can run in order to take a repository from the internet and download it onto our own computer so you'll need to have git installed onto your computer you can install it on any Mac or PC or Linux machine and once you do what you're going to do is on your computer in the terminal you'll run git clone followed by the URL of the git repository that you're trying to download so you might imagine that here's your computer over here and up here is some server where a git repository is located GitHub for example is one such server but there are others as well and up there is the repository that potentially has files or maybe other folders with other files that contain the contents of the repository that you care about downloading so if I run git clone followed by the URL the repository I want the effect of that is that the repository and all of its contents get downloaded onto my computer such that I on my computer now have a copy of everything that was originally inside of that git Repository so now now that we know how to clone a repository let's actually try it we've just created a repository using GitHub and now let me go into my terminal and actually try to clone this repository so that I have a copy of it on my computer and I can begin to make some changes to it so I'll go into my terminal now and I'll go into my lecture one directory and the first thing that I'm going to need is I'm going to need the URL of the git repository so if I go back into GitHub what you'll notice is that it gives me an https Link in order to download my git repository so there are a couple of different ways that I can use to clone my repository of ways to authenticate myself one is using https which will eventually involve like a username and password that I'll have to type in in order to prove to get that these are my GitHub credentials alternatively familiar with SSH this is another method of authentication you can give GitHub your public SSH key in order to authenticate as well but no need to worry about that if you're not as familiar with that technology and the key here is that this URL is the GitHub URL that corresponds to my repository so I'm going to copy that URL and then inside of my terminal I'll type git clone and then I'll just paste in the URL that I would like to clone that contains that repository I'll go ahead and press return it says I'm cloning into a directory called hello and then it's saying you appear to have cloned an empty repository it's saying that's a warning but that's okay because I know that I've cloned an empty repository because the repository is brand new and now I can type the command LS in my terminal the ls command in the terminal stands for list and effectively what it's going to do is list all of the files that are currently inside of this directory all the files and folders that are inside of my lecture one directory where directory is just a fancy name for folder so I'll type LS and I see that all right I now have a folder called hello inside of my lecture one directory which I didn't have before I'll go ahead and move into this hello directory in order to change into a directory or folder you can use the CD command CD stands for change directory and so if I type CD hello I will now move myself into the hello directory and if I type LS you'll see that there's nothing inside of this hello directory right now because again this repository was empty I cloned it and there was nothing in it so now I'd like to actually put something in this repository the repository is only useful if I'm keeping track of my code and keeping track of the changes that I make to that code so I'll go ahead and actually try now to add some code to the repository the first thing I'll do is create a new file and we could create a new file just by opening up a text editor but on the terminal there's actually a command for creating a new file called touch so in the terminal I can type touch hello.html and what that's going to do is create a new file called hello.html and if I type LS I can see that indeed I do have a file called hello.html now inside of my hello directory Let Me Now open up this directory in the hello.html file inside of a text editor again I'm using vs code and let me now add just some text to hello.html on the status simple HTML page same thing we've seen before where I give it a header a title will be hello and inside the body of the page will be hello world same HTML page we've seen a number of times now and now just now inside of this Repository of course I haven't yet made any saving to this repository I haven't said that I want to save these changes to the repository and the repository isn't keeping track of every single character I write I need to tell git that this is a state of my current files that I would like to keep track of something that I would like to save and in the world of git we call those save points commits when I say I am making a commit I mean I would like to save the current state of all of the files and folders and other assets that exist inside of the repository and basically take a snapshot of their current position such that later I might be able to refer back to that but in order to do that there are actually a couple of steps so the first step we need to follow is an additional command so we saw that git clone was the command we could use in order to clone a repository take a repository and download it onto our own computer the next command we'll take a look at is a command called git add and what git add is going to do is it's going to let us tell git that I would like to add a file as one to track the next time I save the next time I make a commit to say that I would like to take a snapshot of all these files such that I'm able to refer back to them later in order to do that I need to tell git what files to keep track of so if for example I'm keep working on this file and I'd like to tell git that I'd like to track it I can run a command like git add followed by the name of the file like foo.pi or HTML or whatever file it happens to be and then git will display a message saying that all right now we have added food.pi this is now a file that will be saved the next time I make a commit so why are these two separate steps well one reason you might imagine is that if I'm working on a lot of different files say I'm working on 10 different files and there are only three that I'm happy with three that I want to save I don't want to just say save and have everything be saved in a commit I might want to say that you know what these are the only three files that I actually want to save right now and the other ones I'm still working on so git gives us that ability to have the separation to say let me explicitly say that I want to track this file the next time I save the next time I make a commit and not all of the files for example so there are shortcuts we can use if we do want to add all of the files and we'll see those in a moment as well so let's go ahead and try that we'll go back to our repository where I've created this hello.html file and now what I'd like to do is say that I would like to add the hello.html file to my git repository so inside of my terminal I'll now say again I have a hello.html file here I'll say git add followed by hello.html and you'll notice that so far nothing seems to have happened because so far I haven't yet saved anything I've just said that I would like to add hello.html as a file that the next time I say save the next time I commit my repository it is going to keep track of the changes I have now made to hello.html so how do I actually make a commit how do I actually say save the state of these files well that's going to be one more git command which is known as git commit when I say git commit I am going to tell my git repository that I would like to save a snapshot of the current state of the repository keeping track of any of the changes that have been made to files that I've added using git add and the way we run it is by running git commit followed by Dash M and then in quotation marks a message and this message is known as a commit message and what it is is it a description in English or whatever your language is of what changes you've made in this most recent commit because over time as you work on a big project you're probably going to make lots of commits as you make lots of changes to your program you'll commit and commit again after each new addition you make to the project and you might want to refer back to a previous commit but it's only valuable to do so if you can identify in which commit you made a particular change for example so by providing some English message just some note to yourself such that later you can refer back to all your commit messages and know that all right at this point in time in this Commit This is the change that I made that can just make it easier to keep track of all the changes that you've made to a particular git Repository so when you type git commit followed by Dash M you might include a message something like I added a new line for example and when you do git is going to save a new snapshot of a version of your code right now keeping track of the old version or old versions that used to exist there inside of the Repository so let's try and actually make a commit now and see how that's actually going to work so we've already added the file as by running git add to say add the hello.html file as one to keep track of but now when we're happy with it and we could make additional changes to the file if we want to I can go back into the terminal and now say git commit and then Dash m and then I can specify the commit message some English description of what it is that I did in this most recent commit and what I did was I um added the hello.html file so I'm just going to say I added the hello edited HTML file that was the change I made in this most recent commit I'll go ahead and press return and here's what it's telling me it's telling me one file has been changed with nine insertions so git keeps track of changes in terms of how many lines have been added or inserted and how many lines have been deleted or removed and in this case it's telling me there have been nine insertions to one file because previously the file didn't exist and now a file that has nine lines does exist and now I have saved hello.html to this git Repository so now you might imagine if I go back to my git repository on github's website and refresh it that maybe I'll see that hello.html file better refresh and all right nothing happened nothing changed I don't see my hello.html file and that's because there's one final step here I'm missing before my changes are going to be reflected online recall that when I ran the get clone step in order to clone the repository from GitHub GitHub had a version of the repository and Iran git clone to download a copy of that repository onto my own computer and when I ran git add to add the hello.html file or I ran git commit to say I would like to save these changes I was always making those changes only to my local version of the repository I was never affecting anything that was already on GitHub the changes I was making were only happening on my own computer if I want to push those changes up to GitHub then I'm going to need some additional commands and in fact we can see what's currently going on inside of my repository using a command called git status and what git status will do is it'll tell us what's currently happening inside of my repository so for example if I were to in this current state run the command get status then git is going to report back to me and tell me that I am currently on Branch Master more on branches later but then I'm saying my branch is ahead of origin Master by one commit so this is a longwinded way of saying that my local version of the repository the version of the repository on my computer is ahead of the origin version of the repository the version of the repository that's up on GitHub by one commit that I have one commit that the origin GitHub does not have and it's helpfully telling me I can use the command git push to publish your local commits get push is a command that I can use in order to say I would like to take my changes and actually push them up to the server push them up to GitHub so that they're reflected there so after we've checked our current status with Git status we can use the command git push to say that now whatever changes that I've made when I run git push those changes get pushed up to GitHub so GitHub has access to all of the commits that I have now made so let's try those two commands now get status to see what's currently going on inside of my repository and then get push to say I would like to now push those changes to GitHub so that the online version of the repository has the same contents as the local version on my own computer all right so in my terminal now I can run git status and I see that I'm on Branch Master same as before and it's a slightly different message because there's nothing currently inside the repository but the key here is that now I can run the command git push to say take all of the changes that I have made to my repository and go ahead and push them up to GitHub so I'll type git push and what's going to happen is it's going to compress all the information and it's going to push it up to GitHub to this URL and now if I go back to github's website github.com my repository and refresh the page I'll see that I do actually now see something different and so this is what github's user interface actually looks like it gives me a few pieces of information it's telling me for example that there's one commit currently made to the repository that's the one I just made that is on one branch so far I've only created one branch the default one but we'll see how to create more branches later and in particular down below you'll see the files that currently exist inside of this repository that right now I have this hello.html file which is the one that I pushed and in particular next to it is the commit message the message from the most recent time that I touched this file which is in particular telling me that I added the hello.html file in the most recent commit that affected hello.html and if it were not I didn't out a click on hello.html to actually see what's inside of it I would see the same content that I wrote in that file before I see doctype HTML and then the hello world page that we've seen a couple of times now so I made the change on my own computer and I've now pushed them up to GitHub so they're now inside of this repository that's now public such that anyone else if they wanted to collaborate on this project could take this URL clone it to their own computer and make their own changes locally as well and so now we can explore how we might be able to make additional changes to this web page as well so if for example I wanted to add a heading to this webpage for instance I might at the top of the body say something like in an H1 tag uh welcome to my website and now if I you know just for good measure open up hello.html see what it looks like this is what my web page now looks like and now I've made changes to my hello.html file changes that have not yet been saved and I can tell that if I run git status git status is your goto for telling you what's currently going on inside of your repository so here we see changes not staged for commit which is a fancy way of saying files that have been changed but I haven't said I would like to keep track of them in the next commit it's telling me that I've modified hello.html but it's not something that git is currently going to keep track of the next time I make a save so if I want to save hello.html when I commit for the next time then I'll first need to run gitad hello.html and then I could run git commit but there's actually a bit of a shorthand here if you want to add all of the files that have been changed and commit at the same time the shorthand is git commit Dash am remember before we just use Dash M to say specify a message Dash am means git commit all of the files that have been changed a for all and also provide a message so you can combine the get add step and get commit step into just a single step by saying I'd like to commit all of the files that I've changed and then I'll provide a message what exactly did I change I added a headache I'll go ahead and press return it's kept track of the fact that I've now changed one file with one insertion all I did was add one new line to that file and now if I run git status it's going to tell me I'm on Branch master and I am ahead of origin Master origin Master being the version on GitHub by one commit that I have this add a heading commit but right now on GitHub if I refresh this page it's still showing the old version of that page in order to take my changes that I've made on my computer and make sure they're updated on GitHub I can just run git push to say push those changes up to GitHub and once that's done I can now refresh the page on GitHub and I'll now see that GitHub now has the latest version of my program as well it now has this H1 it says welcome to my website so that's git push now the ability for me to say I would like to make the take the changes that I have made to the my repository and push them up to some remote server the remote server on GitHub for example but we can also go in the opposite way you might imagine that maybe the version that's up on GitHub is more recent than the version that I have on my computer and in that case I would like to download the latest version of the repository that currently exists on GitHub and in order to do that we can use a command called git pull how does that work well when I run gitpo what's going to happen is the opposite of what get pushed it well git push took my changes on my computer and pushed them up to GitHub git pull will say take the changes that currently exist on GitHub and go ahead and pull the most recent changes down so that I and my local version of the repository have access to the latest version of all of the code that is currently on GitHub and we can demonstrate this for example if I go back and take a look at github's website itself because on GitHub I actually have the ability to edit files using github's interface so I'm going to simulate like someone else working on this project for example maybe someone else added a second heading so they add an H2 that says hello for example and then they can provide a commit message this is sort of a graphical equivalent to the dash M and then a message that we provided before they can say added H2 and then commit so this is another way to edit a git repository is by literally adding it in editing it inside of github's interface so GitHub allows you to just edit a file and then add or modify any of the lines there so now the version on GitHub is actually different from the version that we have on our computer that if we look at hello.html here I only see the H1 and I don't see the H2 that was just added because it's a more recent commit that I don't yet have access to but if I want to download that commit then what I can say is inside my terminal I can say git pull in order to download it and all right it's updated one file it's made some changes and so now if I go back to the file you'll notice that automatically I now have the latest version of the file I now have this H2 that says hello because I've pulled the latest version of the file down from GitHub so via a combination of git push and git pull I can make changes to my code push them up to GitHub and also get access to the latest version of code that already is on GitHub but as we do this you might imagine that we could run into some sort of problem in particular we might run into a problem if I've been making changes to my code and some someone else working on my same project has also been making changes to the code what happens if we both make changes to the same part of the code and then try to sync up our work together what's going to happen well we're going to run into some sort of conflict because I've made changes to the same line that my colleague has been making changes to and that type of conflict is called a merge conflict that when trying to merge my changes with the changes that someone else has made we run into a situation where suddenly git doesn't know what to do there are two different sets of changes and we need to figure out how to resolve them and what to do when we run into this sort of conflict so here's what's going to happen if ever we run into this sort of merge conflict it's generally going to happen if I try and pull in or merge in some changes from elsewhere so let's say I run git pull but there's some conflicting commit something that is online that conflicts with my current version of the repository what I'll get is a message like this some conflict saying merge conflicts in some file have failed you need to fix the conflicts and then commit the results so what might those conflicts look like well generally the file is going to look a little something like this git is automatically going to add some metadata to the file to describe the things that it can't quite figure out and it's a lot of cryptic looking information but we can distill it down into a couple of Key Parts everything in between these arrows at the top and the equal signs here are your changes the changes I have made on my version of the repository that are somehow conflicting with some other changes everything between these equal signs and these arrows down here are the remote changes the changes from GitHub that I'm trying to pull in that somehow are conflicting with what I've currently been working on and then this sequence of numbers and characters here is the hash of the conflicting commit so every commit gets a hash just some sequence of numbers and characters that is likely to be unique that helps to identify any particular commit and git will automatically generate a hash every time you make a commit and we'll see in a moment how you can look at all of those possible commits but here git is just helpfully telling us this is the commit that is causing the conflict just for our own reference in order to address this merge conflict the way we do it is we first need to remove all of these merge conflict markers that exist in the text file and decide what we want what we want as the resolution of the conflict so maybe I want to keep my version of the changes maybe I want to keep the remote version of the changes the changes that were already on GitHub for example or maybe I want to combine them in some intelligent way I the programmer get to make that decision I get to look at my version and the conflicting version and decide how I want to resolve that conflict I'll remove any of the blank lines and then commit the changes to say this is what I want the merged version of this program to look like so let's now take a look at an example of emerge conflict in action to see how one might arise and how we might actually go going about dealing with a merge conflict should it happen so I on my computer now I'm going to make a change to this page I'm going to say add a second exclamation point one exclamation point wasn't enough I'll add in a second exclamation point to this H1 and I'll go ahead and commit those changes I'll say git commit Dash am ADD exclamation point and I'll go ahead and commit those changes I saved this new version of the program but I'm not going to push the code yet instead what I'm going to do is simulating someone else working on the same file maybe someone else on GitHub has decided you know what for this H1 what we'd really like to do is add some style to it with some inline Style by saying let's give it a color of blue for example so they've added some CSS we'll go ahead and write a commit message what did they do they added some style and we'll commit those changes and now what we've created is what is going to be a merge conflict that someone else on GitHub has made a change to this line changing the color to Blue of this particular H1 tag for example and I meanwhile have also made a change the same line adding an exclamation point and git entirely operates in terms of like adding lines and removing lines given that we both made changes to the same line git is going to have a very hard time figuring out what to do in this scenario so here in my terminal I'll go ahead and run git pull because I want to pull in those latest changes and when I do I'll see that all right I get this message conflict there was a merge conflict in hello.html the automatic merge failed because normally git will try to merge files automatically if it can but sometimes it can't so now I need to fix the conflicts and then commit the results so let's go ahead and look at what's inside of hello.html and what you'll notice is a whole bunch of these markers and my text editor just so happens to highlight them for me so that I can see them a little more clearly but this is just highlighting provided by the text editor it's not actually part of the text itself but you'll notice all of these arrows and then all of these equal signs and in between here's my version of this line of code the line of code with the extra exclamation point at the end of it down below here is the remote conflicting version of the same code the version that was modified on GitHub that I am now trying to pull in this is the version that says we want style color blue inside of the inline style for this particular H1 element and now what I need to do is somehow figure out how to merge these two together how do I want to resolve this conflict well in this particular case I might like to resolve this conflict by just taking the Best of Both Worlds if the person on GitHub wanted to add a style attribute to this H1 element and I wanted the extra exclamation point I can do both I can go ahead and just add an extra exclamation point and then get rid of my version and then also get rid of these commit markers so go ahead and remove those I basically modify the file until I'm satisfied with it until I think that all right this is the way I wanted to resolve the conflict one person added color one person added punctuation the way to resolve it in this case is just use both of them but here's where some human intuition comes in the human programmer does need to look at this file and figure out how exactly do we want to resolve this conflict how do we want to figure out how to take these different changes and merge them all together but once we're satisfied with it we can go ahead and commit the results I can say git commit Dash am fix merge conflict and all right we fix the merge conflict and now if I push those results back up to GitHub when that is done and I refresh the page I now see the updated line of code on GitHub with the H1 that has both the inline styling and the extra punctuation because I've resolved the merge conflict and then I've pushed that information back up to GitHub as well there are a couple of other git commands that are just useful to know about I mean there are many but we'll talk about a couple right now the first of which is git log git log is useful if you ever need to keep track of all of the changes that you've made to your code you want to keep track of all of the commits that have been made in this particular repository all you need to do is run the command git log and git will spit out a bunch of messages that look like this describing each of your commits for each commit it'll tell you what the commit hash is such that you can reference it more easily it'll tell you who made the commit it will tell you the date on which that commit was made and it will also tell you the commit message so if you need to very quickly look back and see you know on what day was this feature added or who added this part to the web page you can just look through the git log find the commit in question and then you'll know which commit it happened to be also helpful is if you realize that you've made a change that you didn't mean to and you want to go back to a previous commit then in that case you can use a command called get reset which has a number of different possible ways to use it but get reset in effect we'll take the current state of the repository and revert it back to an older state of the repository for example so a couple of ways you can use it are like this you can do get reset dash dash hard meaning hard reset reset everything back to and then you can plug in a commit hash so git log as you might recall from before gave you the commit hashments for each of the various different commits if I want to go back to one particular commit I can say get reset dash dash hard and then the commit message I want or the commit hash that I want to go back to and I'll go back to that commit alternatively I could say something like gitreset dash dash hard origin master and recall that origin Master is the version of my repository that's currently on GitHub so if I want to take my current version of the repository and reset it back to whatever's on GitHub then I can use a command like this in order to do so you run git reset followed by a commit hash and that will reset the current state of your repository back to whatever state it was in previously and there are a number of other git commands as well that can be quite helpful as you begin working with larger and larger project projects but these are some of the most helpful and some of the ones you'll use the most often are just adding files that you want to keep track of git commit to say I would like to make a save I would like to save the current state of all of these files push and pull to be able to upload changes and download changes that have made to been made to your repository and then some helpful commands like reset and log and status just to give you information about your repository and get you back to an older state of the repository if you need to but as we begin to work on more and more projects and especially as we begin to work on more sophisticated projects you may find that just keeping track of one change after another isn't nearly as powerful as you might like it to be and so we can explore what might happen in a hypothetical situation where you begin making some changes till we get repository for example so let's imagine you make your first commit you're making some changes you make some additional changes and maybe you realize you want to start working on a new feature to this web application that you've been working on so you start working on a new feature then you continue working on that new feature but then you realize suddenly you know what there was a bug in the original code that I made way back here and you want to go back and fix that bug but now we're sort of in a tricky spot that we want to fix the bug but we're in the middle of working on a new feature so what do we do we could go back to this and try and fix the bug but then what happens to the new feature the problem is that this structure just change after change after change is very linear it only goes one after another after another and oftentimes when you're working on a project it's not going to operate in a very linear fashion you're not always working on one thing that immediately follows the thing before it you might be fixing multiple bugs while working on multiple new features and you want some way of being able to work on all of those things simultaneously and to easily be able to switch between them and so that is where branching comes into handy branches are git's way of working on different parts of the repository at the same time and so you might imagine a situation unfolding more along these lines you make your first commit you start to make changes you make more changes and when you decide that you'd like to start working on a new feature for example rather than keep making changes in one after another after another on this same Branch so to speak I can create a new Branch I can Branch off and say you know what let's create a new branch and start working on a new feature there and then keep working on that new feature there and if I realize later on down the road that you know what there was a bug way back at this commit then I can go back to this commit and create a new Branch where I go ahead and fix that bug and now I have two different branches Each of which might have different code on it one of which I've been fixing a bug one of which I've been working on a new feature on for example generally each of those branches is going to have a name so the master branch is your default branch which is generally going to contain the uptodate stable version of your code and as you're working on newer things newer additional features you might have some feature Branch where you're working on some other feature for example and at any given time though your focus is only on one of these two branches and where your focus is what the current state of your repository is is designated by something we call the head so if head is pointing to master that means your repository right now is working on this Branch where you fix the bug but you can change the head you can switch what brands you want to look at and you can check out the feature branch and say let's look at that branch and begin working on that as well and you can begin working on these different branches by switching where your head is switching from one branch to another and then back again and only when you're satisfied that you know what this bug is fixed and this feature is in a satisfactory place then after all of that we can merge those changes back together so that everything comes back onto this unified Master branch that now has all of the latest code and that's the real power of git branching this ability to say that I would like to be working on multiple things simultaneously and be working on a feature without disrupting the master version of the code so let's now take a look at an example of how we might go about doing that so here in my hello.html file I've been adding some style to this H1 I added a color of blue and let's say that I would like to make some changes I would like to move the styling outside of inline styling and I'd instead like to move it up into the head section on my web page because we decided earlier that with slightly better design for a web page like this I could make those changes immediately but I can instead it if I expect I might be working on multiple changes I could move on to a different branch and Branch off into something else in order to work on these new changes and so here are some of the key commands to know about this if I type git branch that will tell me what branch I'm currently on and what branches exist in my repository so here for example I type git branch and I see that I just have a single branch called master and the star on the left hand side tells me that this is the branch that I am currently on the only branch that there is if I want to check out a new Branch I can type git checkout and if it's a new Branch I'll type git checkout Dash B and then the name of the new branch and I'll call the new Branch style because I'm going to be making some style changes to the web page for example so I typed git checkout Dash b style and git gives me a message I have switched to a new branch called Style and now if I type git Branch again you'll see that now I have two branches I have the master branch which is the branch I was originally on and now I have the style branch which is this new branch which I am on now as indicated by the star on the left hand side so now that I'm on this new Branch I can feel free to make any changes that I want and nothing I do is going to mess up what is on the master Branch so long as I stay on this Branch so I can say all right let's experiment with removing the style and let's add a style tag to the top where I can say that I would like my H1 to have a color of blue for example so I've made a whole bunch of changes and I would like to now commit those changes I'll say git commit move style properties that's the change that I've made but I've only made those changes to the style Branch again if I run git Branch you'll see that I'm currently on the style Branch where I've moved the style information up here to the top of my page but I can switch branches by using git checkout git checkout allows me to switch between branches we used git checkout B to create a new Branch but if you're switching to a branch that already exists I can just say git checkout Master for example to switch my current Branch from the style Branch to the master Branch so I run git checkout Master now I'm on the master branch and now you'll see if I go back to the file now I'm back to the inline styling without the styling up here in the head section of the page if I check out the style Branch again then the file immediately goes back now I have the style code up here in the style section of the page and not inline so these changes have only been made to one part of the page so now I'll check out Master again and maybe I want to make some other changes on my master Branch maybe I realize that I want to remove this extra punctuation you know what two exclamation points was too many we'll remove now we just have one and now I'll commit these changes I'll say git commit and remove punctuation and now I've removed the punctuation only from the master branch so this master Branch now has just a single exclamation point here but it still does have the inline styling so now what I'd like to do is merge in those changes that I made from the other Branch I'd like to take what I was working on in the style branch and merge it into this current version of the repository on my master branch and in order to do that the command we'll use is called git merge so git merge notice that I'm currently on the master Branch but if I run git merge and then Style that is going to take whatever's on the style branch and attempt to merge it into my current branch and what we'll find is we're able to get most of the way there but there's a merge conflict now this won't happen all the time when you merge sometimes git will be smart enough to know that if one change has been made to one part of a file and one change has been made to another part of a file when you merge those changes back together git will resolve those merge conflicts automatically but in this case that wasn't the case because both my style branch and my master Branch made changes to the same line of code and we'll see why if I go back here you'll notice that in the merged version we do see this style tag at the head of the page no problems no conflict there because that was just lines that have been added to this page so there was no conflict the conflict comes up here which is where in my version on the master Branch I remove this punctuation mark whereas in the version on the style branch which we can see here by the word style we removed the inline styling so we need to resolve these somehow and what I'll ultimately do is just get rid of these style markers or the conflict markers and say you know what I would like for the updated version not to have either not to have the inline styling and not to have the additional punctuation so I have now made those changes I have resolved the merge conflict and now I can commit I fixed the merge conflicts and that's the general workflow now of how branching in git ultimately works when you're working on something new you might Branch off in order to say you would like to work on a different part of this web application you'll make changes make commits add changes to that new branch and when you're satisfied with those changes when they're in the state that you want them to be you can then say merge them back in to the original version of the repository sometimes you'll have to deal with merge conflicts though certainly not always and if you're careful about where you make changes and trying to be careful not to make modifications to the same line of code in two different places you can reduce the likelihood of actually getting emerge conflict because git ultimately is quite smart about how it tries to deal with these sorts of issues and finally we'll take a look at a couple of features of GitHub specifically that can be quite helpful if you begin to work on larger projects that have many different moving pieces the first of which is forking a GitHub repository so let's go to a GitHub repository and look at the GitHub repository for bootstrap for example so bootstrap which is the CSS library that we took a look at last time is a library that gives us the easy access to a whole bunch of different CSS features and the entire thing is open source meaning all of the code for bootstrap is publicly available for anyone to look at and more importantly for anyone to contribute to that it's not just one person that's been working on all of bootstrap but it's a Community Driven repository that many people can be working on adding new features and making fixes to bootstraps code and collaborating on them by taking advantage of the features of git and so if you find a git repository that you would like to contribute to or if you want other people to be able to contribute to your repository one thing you can do is Fork that repository and by forking we mean making your own copy of the original repository and so up here in the upper right hand corner of github's page is a button called fork and we can see that right now about 68 000 people have already forked bootstraps repository made a copy of the repository into their own GitHub account and so we could Fork it ourselves just by clicking on this button called Fork and then getting our own version of the repository that we can then clone and push and pull from as well the reason we might do that is that bootstraps repository while it is public doesn't allow anyone to just push to it that would be probably unsafe if anyone in the world could just update bootstrap's master code but what you can do is copy the code make a fork of it make changes to it on your own push and pull to it and then when you feel like you've made a contribution that you would like to send back to bootstrap you can open What's called a pull request that you are requesting that your code be pulled in to bootstraps code and we can look for example at bootstrap's pull request tab it looks like right now there are 71 open pull requests there are 71 people that have made some fixes or made some changes to bootstraps code and you can submit a pull request to say that you would like to take those changes and merge them back in with bootstrap's actual code and the people that maintain bootstraps code in this particular repository can review those pull requests provide feedback ask for additional changes and then when everyone's satisfied they can merge those changes into bootstrap's actual code and this is one of the key benefits of Open Source software the ability for multiple people to be working on the same piece of code and for a community to be able to collaborate on finding bugs on figuring out what changes to make on figuring out how to improve upon an existing repository and make it better moving forward and one final thing worth noting about GitHub is an additional feature known as GitHub Pages GitHub pages is a free way that GitHub provides to be able to quickly take a website with HTML and CSS and maybe even a little bit of JavaScript and deploy it to the internet for anyone to look at and anyone with a GitHub account is allowed to create a GitHub Pages website for free and in order to do so we can demonstrate it now all you need to do in GitHub is let's create a new Repository that we'll call it should generally be your username.github dot IO is the conventional name for your GitHub Pages site though it can have other names you'll just have to manually turn on GitHub pages and we'll go ahead and create this repository now if you create a GitHub repository called your username.github.io it will automatically be supporting GitHub pages and what that means is that I can take this URL and I can clone it so I can say git clone followed by this URL I've cloned an empty repository but I can go into this Repository and add some files to it I can say let's add by default it's called an index.html file and I'll create an HTML file that is my site and the body of it will just say this is my GitHub pages website so something like this something simple but it can certainly be more complex if you want it to be inside my terminal I will git add this index.html file and I'll make a commit and often a first commit you'll just in the commit message right first commit so that we know it was the first commit and then I'll push those changes to GitHub now so if you push your changes to a repository called your username.github.io then if you take a look at the settings and scroll down you'll see that GitHub pages is by default uh ready to be published and now if I click on this URL my username.github.io you'll see deployed to the internet such that anyone can go to this URL and see it they'll see a big heading that says this is my GitHub Pages website because this is the way the browser is rendering the HTML that I pushed to my GitHub Pages repository and the advantage of doing this is that it's very easy now to be able to quickly update my website all I need to do is if I make a new change I can commit that change push that change to GitHub and when GitHub detects that I've made a push to my GitHub Pages repository then it will update my website that anyone in the world can access by going to myusername.github.io and this allows you to leverage all of these features of git the ability to Branch the ability to work on different features of your web page at different times and revert back to different versions of the code as well so all in all git has given us a number of very powerful tools it's given us the ability now to be able to very quickly and very easily keep track of any changes we make to code keep track of when a piece of code is updated and to quickly revert back and look at old versions of that code if need beam and in particular it's given us the ability to take our code and work together with other people on it such that we can be working on multiple parts of the same project and someone else working on the same project can also be working on multiple parts of the same project on different branches and is very easy then to sync up our changes in order to work together and so git is a very popular tool used not only in the world of web programming but especially whenever dealing with any kind of larger project where multiple people might be working on the same thing simultaneously git will enable us to more easily develop our web applications over the course of this term next time we'll take a look at python which is one of the first programming languages that we'll use as we continue on our journey towards building more sophisticated web applications I'll see you then thank you all right welcome back everyone to web programming with python and JavaScript and today we take a look at one of the two main languages we're going to be looking at in this course in particular we're going to be looking at python pi very powerful language that makes it very easy to build applications quickly because there are a lot of features that are built into the language that just make it convenient for quick and productive development so one of the goals of today is to introduce you to the Python programming language if you haven't seen it before and even if you have seen it before to give you a taste for what the language has to offer exploring some of the more advanced features and some of the techniques we can use using python to be able to develop applications all the more effectively so we begin with our very first Python program just a program that says hello world we're going to be writing it in a text file and the program just looks like a single line just like this and if you've used other programming languages before like C or Java or other languages this probably looks pretty familiar syntax wise but just to break it down we have a function called print built into the Python programming language for us and like many other programming languages functions in Python take their arguments inside of parentheses so inside of these parentheses are the argument or the input to the print function which in this case is just the words hello world followed by an exclamation point so here's how we can actually take this program and run it I'm going to go into my text editor and create a new file that I'll call hello.py.py or dot Pi is the conventional extension for python programs so I'll create a file called hello.pi inside of which will just be the python code that we just saw a moment ago we'll call the print function and as an argument or the input to the print function I'll say hello world exclamation point now in order to run this program we're going to use a program in our terminal that also just so happens to be called python python is what you might call an interpreted language meaning we're going to run a program called python which is an interpreter that is going to read our DOT Pi file line by line executing each line and interpreting what it is that it means in a way that the computer can actually understand so we'll run python followed by the name of the program that we'd like to interpret in this case hello.pi and when we run this program we see that the words hello world are printed to the terminal and that's it that's the end of the program and that's the very first program that we've written using the Python programming language so now already we've seen a couple of features of python the ability to interpret python there's no need to compile it into a binary first in order to run a Python program we've seen functions and we've also seen strings just text that we can provide in quotation marks that we can provide as input to other functions or manipulate in other ways and we'll see some examples of string manipulation a little bit later like many other programming languages python also supports variables and in order to assign a new value to a variable the syntax looks a little something like this if I have a line like a equals 28 what that's going to mean is take the value 28 and assign it store it inside of this variable called a now unlike other languages like C or Java which you might be familiar with where you have to specify the type of every variable you create I have to say like int a to mean a is an integer python doesn't require you to tell you what the types of each of these variables actually are so we can just say a equals 28 and python knows that because this number is an INT that it's going to represent the variable a as an INT and it knows it's able to infer what the types of any of these values happen to be so all the values do indeed have types you just don't explicitly need to State them so for example this here the number 28 is of type int it's an integer a number like 1.5 has a decimal in it it's a floating Point number so that in Python is what we might call a float type any type of text something like the word hello wrapped in either double quotation marks or single quotation marks python supports both is what we would call the stir type short for string we also have a type for Boolean values things that can be either true or false in Python those are represented using a capital T true and a capital false those are of type Bool and also we have a special type in Python called the none type which only has one possible value this capital N none and none as a value we'll use whenever we want to represent the lack of a value somewhere so if we have a function that is not returning anything it is really returning none effectively and so you might imagine that none can be useful if ever you want a variable to represent the absence of something for example so lots of different possible types and there are more types than just this but here's a sampling of the possible variables and types that might exist inside of this language so now let's try and actually use a variable in order to do something a little bit more interesting inside of our program and we'll write a program that's able to take input from the user in order to say hello to them for example so I'll create a new file we'll call it name dot pi and to start I'd like to prompt the user for input I'd like to prompt the user to for example type in their name so how might we do that well just as there is a print function that is built into python that just prints out whatever the argument happens to be python also has a builtin function called input that prompts the user for input and asks them to just type in some input so let's provide some input and ask the user to type in their name for example and then we can save the result the output of that function inside of a variable and in this case I'll save it inside of a variable that in this case also just happens to be called name now we can run the program I can run the program by going into my terminal and typing python name.pi I'll press return and we'll see the program prompts me to type in my name I see Name colon space which is that string I provided as the argument to the input function and this now prompts me to type in my name so I will and after that nothing seems to happen so far so now I'd like to do something with that input I typed in my name I'd like to say like hello for example to myself so I'll go back into this program and now what I can do is I can say print hello comma and then I can say plus name this plus operator in Python does a number of different things if I have two numbers it'll add those two numbers together but with two strings plus can actually concatenate or combine two strings together so I can combine hello comma space with whatever the value of name happens to be so now I'll rerun this program python name dot pi type in my name and now we see Hello Brian as the output of the program so this is one way that you can manipulate strings in Python another way that's quite popular in later versions of Python 3 is a method known as using F strings short for formatted strings and in order to use f strings in Python it's going to be a similar but slightly different syntax instead of just having a string in double quotation marks we'll put the letter F before the string and inside of the string I can now say hello comma and then if in a formatted string if I want to plug in the value of a variable I can do so by specifying it in curly braces so what I'll say here is inside of curly braces name and so what's going on here is I am telling this formatted string to substitute right here the value of a variable so I prompted the user for input to type in their name we took their name saved it inside of this variable called name and now here in this print statement on line two I'm printing out a formatted string that is hello comma and then in curly braces here I'm saying Plug In the value of the variable name and so that is going to have the effect of taking whatever name was provided as input and printing it out and this is a slightly more efficient way of being able to quickly create strings as by plugging in values into those strings so now I'll see the exact same behavior if I run python name dot pi then prompted to type in my name something like Brian and then I see the result hello Brian for example and so those are a couple of ways that we can deal with strings manipulating strings and combining strings using this technique so in addition to variables python also supports all the same other features that are core to many procedural programming languages such as conditions for example so let's take a look at an example now of seeing whether a number is positive or negative or zero for example so I'll create a new file then I'll call conditions.pi and inside of conditions.pi I'll first prompt the user to type in some input I'll say input number to mean you know type in a number and we'll save that input inside of a variable that I'm just going to call n and now I can ask questions I can say something like if n is greater than zero then print and is positive and so what's going on here is I have a python condition and the way a python condition works is it begins with this keyword a keyword like if followed by a Boolean expression some expression that's going to evaluate to true or false or something kind of like true or false we can be a little bit loose about that as we may see later and then a colon means all right here is the beginning of the body of the if statement and in Python the way we know that we're inside the body of an if statement or inside the body of any other block of code is via indentation so in some languages like C or in languages like HTML which we saw a couple of lectures ago the indentation isn't strictly required by the computer to be able to parse and understand what's inside the program in Python it's different the indentation is required because the indentation is how the program knows what code is inside of the if statement and what code is outside of the if statement so we have if n is greater than zero colon and then everything indented underneath the f is all of the body of the if statement it is the lines of code that we'll execute if this condition this Boolean expression n greater than zero happens to be true so if n is greater than zero we'll print out n is positive and then we can add an additional condition I can say something like well I could say something like else print n is not positive but I can be a little bit more specific than that here is sort of two branches one if n is greater than zero and one else case to handle all of the other possible scenarios but really what I'd like to do is perform a second check in other languages this might be called an else if like if this condition is not true but this other condition is true python abbreviates this to just L if elif just short for else if so I can say l if n is less than zero then let's go ahead and print out n is negative and else print n is zero so the idea here now is that if n is greater than zero we perform some task L if in other words if it's not greater than zero then we check to see if it is less than zero in which case we print out that n is negative else if neither of those two conditions are true it's not positive and it's not negative the only remaining possibility is that n is 0 so we can print out that n is zero and so we might like for this program to work but watch what happens if I now try and run conditions.pi even though logically in our heads and looking at it now it probably seems pretty logical if I run pythonconditions.pi and type in a number I'll type in the number five for example we'll just see what happens all right something weird just happened and this is our very first python exception an error that happens because something didn't quite go right inside of our Python program and over time you'll begin to learn how to parse this exception and understand what it means and where to begin to debug but learning how to read these exceptions and figure out how to deal with them is definitely a very valuable skill on your way to becoming a python developer and so let's see if we can figure out what this exception is saying oftentimes I start by looking at the bottom I see that there is a type error that is the type of the exception that has happened there are a lot of exceptions that can go wrong in Python things that we can do that cause errors in this case it's a type error which generally means that there's some mismatch of types that python expected something to be of one type but it turned out to be a different type so let's try and understand what this might be where it says greater than sign not supported between instances of stir short for string and int so what does that mean well I guess it means that the greater than symbol that checks if one thing is greater than another doesn't work if you're comparing a string to an integer and that's probably pretty reasonable it doesn't really make sense to say a string is greater than or less than an integer when we're talking about greater than or less than usually we're talking about numbers so they should both be integers for example so why do we think that greater than is comparing a string and an integer well now we can look a little bit further up at the traceback which will show which parts of the code are really causing this problem and in this case the traceback is pretty short it's just pointing me to a single line of a single file it's saying in the file conditions.pi on line three here is the line that triggered the exception if n is greater than zero so what's the exception here well zero is obviously an integer because that just is an integer and so if greater than thinks that it's comparing a string with an integer then n somehow must be a string even though I typed in the number five it must still think N is a string so why might that be let's take a look at the code again and see if we can figure out what's going on well it seems that this input function doesn't care what you type in it's always going to give you back a string n somehow is ending up as a string which is pretty reasonable because the input function has no idea whether I typed in a number or whether I typed in a letter or I typed in other characters altogether so input doesn't know to give back its data in the form of an INT or in the form of a float or in any other form so by default it's just going to return a string what characters did the user type in as their input so what I'd like to do now in order to make this program work the way I wanted to is take this and convert it into an integer cast it into an integer so to speak and the way that I can do that is by using a function in Python called int that takes anything and turns it into an integer so here I can say int and then as the argument to the int function the input to the end function I'm just going to include this whole expression input number so I'm going to ask the user to input a number they type in some text the input function gives me back a string and that string is going to serve as the input to the int function which then gets saved inside of this variable called n so now that we know that n is indeed an integer let's try and run this program again I'll go back into the terminal run python conditions.pi I'm asked to type in a number I type in a number like five and all right that still doesn't seem to have worked and it didn't work because I didn't save the file so I'll go ahead and save the file try it again type in a number and now we see that indeed n is positive we get no more exception we were able to run the code successfully and see that the value of n is positive and I could try this again to test the other conditional branches type in negative one for example to see that n is negative and otherwise if it isn't either positive or negative then we know that n is zero and so here was our first exposure to conditions in Python the ability to have multiple different branches and do different code depending on some expression that we're going to evaluate to either be a true expression or a false expression all right so let's take a look at some of the other features that are going to be present inside the Python language and one of the most powerful features of python are its various different types of sequences data types that store values in some sort of sequence or some collection of values altogether so I'll go ahead and create a new file that we'll call sequences.pi and there are a number of different types of sequences that all obey similar properties um but one of the types of sequences is a type we've already seen which is just a string for example so if I have a name and the name is something like Harry for instance and this sequence allows me to access individual elements inside of the sequence and in order to do so it's much like an array in other languages if you've experienced them before but I can print out name square bracket zero this square bracket notation takes a sequence some ordered sequence of elements and gets me access to one particular element inside of that sequence and so if I have a string like name and I say name square bracket zero the effect of that is going to be take this long sequence and get me the zeroth element in many programming languages and in programming more generally we often start counting things at zero so the very first item in the sequence is item zero the second item is item one so it's easy to get slight off by one errors there but just know that item zero of the name should be the first character in the name and I can see that for sure if I run python I'll save this file run python sequences dot pi and what I get is just the first character of Harry's name which in this case is the letter H if I instead asked to print out character one which will be the second character in the name if I rerun the program now I get the letter A and this type of indexing works for many different types of sequences not just a string which so happens to be a sequence of characters but other types as well python for example has a type for lists of data so if I have a sequence of any type of data that I want to store I can store that information inside of a list in Python so maybe instead of storing one name I have multiple names that I want to store so I want to store names like Harry and Ron and Hermione for example so now I have three names all stored in a sequence inside of a python list and I can you know I can print out all of the names for example just to print out all of the names to see what the value of the variable names is equal to and we'll see that when I do that I get a printout of the contents of that list Harry Ron Hermione in that particular order but you could also much as you could index into a string index into a list to say get me just the very first item inside of this names list which in this case when I run the program is going to just be hairy so there are a number of different sequence types you can use in order to represent data another one just so happens to be called a tuple and a tuple is often used if you have a couple of values that aren't going to change but you need to store a pair of values like two values together or three values together or something like it you might imagine that if you're writing a program to deal with graphing in two dimensions for example you might want to represent a point as an x value and a y value and you could create two variables for it I could say you know let me just say a coordinate X is going to be equal to 10.0 and coordinate Y is equal to 20.0 but now I'm creating two variables for what's really one unit that just so happens to have two parts and so to represent this we can use a tuple in Python and just say something like coordinate equals 10.0 comma 20.0 so whereas in lists we use square brackets to denote where the list begins and where the list ends in a tuple we just use parentheses to say we're grouping a number of values together we're grouping one value 10.0 with a second value 20.0 and now we can pass around these two values as a single unit just by referencing them using a single name which in this case is coordinate so there are a number of different types of these various different sequences and some of those sequences we'll take a look at are these data structures here so list for example is a sequence of mutable values which we took a look at and mutable just meaning we can change the elements in the list if I have a list I can add something to the end of the list I can delete something from the list I can modify the values inside the list a tuple on the other hand is a sequence of immutable values those values can't change you can't add another element to the existing Tuple you'd have to create a new Tuple in order to do so and there are other data structures that exist as well a couple that we'll take a look at in a moment include sets which are a collection of unique values so if you're familiar with sets from the world of mathematics it's a very similar idea that whereas a list in a tuple keeps things in a particular order a set does not keep things in any particular order it's just a collection and in particular all of the values need to be unique in a list or inner Tuple you might have the same value appearing multiple times in a set every value appears exactly once and there are some advantages to set some ways that you can make your programs more efficient by using sets if you know that you just need a collection if you don't care about the order if something is only going to show up exactly once at most then you can use a set to potentially make your programs a little more efficient and a little more elegantly designed and finally one other data structure that's quite powerful and it's going to come up a number of times during this course is a dictionary in Python shortened to just addict which is the collection of what we're going to call key value Pairs and the way I like to think of this is with an actual physical dictionary that you might find at a library that Maps words to their definitions in a physical dictionary you open up the dictionary and you look up a word and you get the definition an addict in Python is going to be very similar it's going to be a data structure where I can look something up by one keyword or one value and get some other value as a result we call the thing that I'm looking up the key and we call what I get when I do the looking up the value so we keep pairs of keys and values in the case of an actual dictionary in the real world the key is the word that we want to look up and the value is its definition but we can use this more generally in Python any time we want to map something to some other value such that we can very easily look up that value inside of this data structure so we'll see examples of dictionaries as well so let's now explore the first of these data structures these lists to explore what we can do by taking advantage of the features that are given to us by a python list for example so we'll go ahead and create a new program that I'll call lists.pi and here I'm just going to create a list of names so names equals Harry Ron Hermione and Jenny for example and as I start to write multiple lines of code especially as my python programs start getting longer it can be a good idea to document what it is that I'm doing so I can say let me add a comment to this particular line of code just so I know what it is that I've done in this line of code and in Python there are a couple of different ways to create a comment but the simplest way is just to use the pound sign or the hashtag as soon as you include that everything after that for the remainder of the line is a comment The Interpreter is going to ignore that comment if you can say whatever you want it's more for you the programmer and for someone who's reading your program to be able to look at the program understand what it's saying and figure out what they need to do about it so I can just say Define a list of names for example just to make it clear to me what it is that I have done inside of this line of code so I can print out that list of names as we've done before and we'll see that when I print out that list of names what I get is oh let me run list up I what I get is this list Harry Ron Hermione and Jenny but I could also print out as we've seen before just the first of those names say you know print out just name square bracket zero in which case I'm going to get just Harry for example but now recall that a list is mutable I can modify the elements that happen to exist inside of this list so I could say names dot append a new name something like Draco for example and so lists have a number of builtin methods or functions which are functions that I can run on an existing list to access particular elements of the list or to modify the list in particular ways and in the case of a list the append method is a method or function that I can run that just adds a value to the end of an existing list so I've added Draco to the list and there are a number of other methods that I can use on lists one of which is for example sorting a list no need to write your own sorting algorithm in order to sort a sequence of objects in Python there is a builtin sort method that works on lists where I can just say names dot sort that will automatically sort everything in the list and now if I print out all of those names go ahead and print them out and get rid of this old print statement now we see that we get five names that are printed out because I had four elements originally in this list but then I added a fifth one and notice now that they are actually in alphabetical order starting with Draco ending with Ron because I was able to sort the list by modifying the order in which those elements actually show up and so lists can definitely be quite powerful anytime you need to store elements in order a list is definitely a useful tool that python gives to you if you don't care about the order of the elements though and if you know that all the elements are going to be unique then you can use a set which is another python data structure that works in similar ways the syntax is slightly different so let's do an example with those I'll create a new file call it sets dot pi and let me first create an empty set and we can do that by just saying s equals s is going to be the variable that will store my set and I'll say set and then parentheses that will just create an empty set that just so happens to have nothing inside of it now we'll add some elements to the set so I can say s dot add let's add the number one to the set let's add the number two let's add the number three and let's add the number four and then we can print out the set to see what happens to be inside the set right now now when I run this program uh python sets dot pi we see that inside the set are four values one two three and four they happen to be in order but sets are not naturally ordered they're not going to always keep track of what the order is going to be but I could add for example if I add 3 again to the set now I've added 3 to the set twice I added one two three four and then three again when I print out the contents of the set it still just contains the elements one two three four no element ever appears twice in the set following with the mathematical definition of a set where no element ever appears more than once inside of a set you can also remove elements from sets as well so if I wanted to remove the number two from the set for example I could say s dot remove two and then print out s to say print out whatever happens to be inside of that set now and now when I rerun this program I only get one three and four because I removed two from the set so sets allow you to add to them remove from them and also all sequences whether they Be Strings or lists or sets allow you to get how many elements are in the set by taking advantage of a function built into python called Len so Len will give you the length of a sequence so the number of items inside of a list or the number of characters inside of a string or the number of elements inside of a set and so if I wanted to print out how many elements are in the set I might do something like this in a formatted string say the set has some number of elements and how do I know how many elements well again inside of these curly braces I can include any expression in Python that I would like to substitute into this string so how many elements are in the set I can get that by calculating Len of s so what I've done here is I've said with lenovs I would like to calculate the length of the set s in other words how many elements are actually inside of that set and then using this curly brace notation I'm saying take that number and plug it into this string so we can see the set has some number of elements for example so now if I run this program pythoncepts.pi I see that I get these three elements that happen to be inside of the set right now which is one and then three and then four and then it tells me that the set has three elements inside of it which is the number of elements that are in the set right now so now we've seen a number of different language features inside of python we've seen variables we've seen conditions so that we can conditionally do things if something is true if something else is true and we've seen some of the data structures that are core to the way python Works lists and sets and tuples and other data structures can be helpful too and now let's take a look at another feature of the Python programming language common to many programming languages the idea of looping if I want to be able to do something multiple times I'll go ahead and create a new file called Loops dot pi and let's just create a simple Loop the simplest Loop we could create in Python is just one that's going to count a bunch of numbers so in order to do that what I could say is something like this for I in one two three four five or maybe I want to count zero one two three four five just to start counting at zero print I and so here is the basic Syntax for a python Loop and here's what seems to be going on over here on the very first line I have a python list as denoted by those square brackets that contains six numbers zero one two three four five and now I have a for Loop for I in this list and the way python interprets this is to say go through this list one element at a time and for each element call that element I we could have called it anything but in this case I is just a conventional choice for a number that keeps incrementing and we're going to print out now the value of I for each iteration of this Loop so we can try this out now and run python loops.pi we see one zero one two three four five great it printed out all of the numbers from zero to five one at a time in practice though if we wanted to count all the way up to five or for print six numbers for example this is fine for now but if we wanted to print like 100 numbers or a thousand numbers this is going to start to get tedious so python has a builtin function called range where I can say for I in range 6 to achieve exactly the same thing range six means get me a range of six numbers so if we start at zero it's going to go from zero all the way up to five and then we can print out each one of the elements inside of that sequence so if I rerun python loops.pi we get 0 1 2 3 4 5. so Loops enable us to Loop over any type of sequence so if the sequence is a list I can say something like if I have a list of names like Harry and Ron and Hermione and this is my list of names I can have a loop that says that for each name in my list of names let's print out that name for example so we have a list the list is called names We're looping over it one element at a time and printing it out now if I run the program I see three names printed one on each line and you can do this for other sequences as well maybe I have just a single name that is called Harry and now I could have a line that says you know for every character in that name print the character if the name is is the sequence is a sequence of individual characters because it's a string then when I Loop over that string I'll be looping over each individual character in that string so I can run the program and see one on each line each of the letters that just so happens to be inside of Harry's name so now we've seen conditions we've seen loops and we've seen a number of different data structures we've seen lists and sets as well as tuples the last important data structure that we're going to be taking a look at are python dictionaries which as you'll recall are some mapping of keys to values if I want to be able to look something up I can use a python dictionary just as a data structure to be able to store these sorts of values so I'll create a new file called dictionarys.pi and maybe I want to create a dictionary that is going to keep track of say what house each of the students at Hogwarts happen to be in so I might have a dictionary called houses and the way we specify a dictionary is by specifying a key colon of value when we're defining a dictionary for the first time so I might say Harry colon Gryffindor and then Draco colon Slytherin for example and so what this line of code is doing is it is creating a new dictionary this dictionary is called houses and inside this dictionary I have two keys two things that I can look up I can look up Harry or I can look up Draco and when I look up those keys I get the value that follows their colon so after Harry if I look up Harry I get Gryffindor if I look up Draco I get Slytherin for example so now if I wanted to print out what house Harry is in I can print out houses square brackets Harry so I can here say I would like to print out take the houses dictionary and the square bracket notation is how I look something up inside of a dictionary it's similar to how we use square brackets to look up a specific element inside of a list to say like get me element 0 or element one in this case we're using a python dictionary to say take the houses dictionary and look up Harry's value which hopefully should be Gryffindor and we'll see that if we look up run python dictionaries.pi we do get Gryffindor as the value of Harry's house we can add things to this dictionary as well using the same syntax in the same way that I use square brackets to access the value inside of a dictionary if I want to change the value in a dictionary or add something new to it I could say houses and Hermione and say that Hermione is also in Gryffindor for example and so this line of code here says take the House's dictionary and look up Hermione in houses dictionary and when you do that should be set equal to this value here Gryffindor so we took that value and we are going to assign it to Hermione inside of the dictionary such that now if we wanted to we could print out Hermione's house as well run the program and see that Hermione is also in Gryffindor so anytime we want to be able to map some value to some other value whether we're mapping people to what house they happen to be in or we're mapping users to some information about those users inside of our web application dictionaries are going to be very very powerful tools for us to be able to do that the next Python language feature we'll take a look at are functions in Python that are going to be some way for us to write our own functions that take an input and produce some output we've already seen a number of different functions that already exist in Python we've seen the input function that takes an input from the user we've seen the print function that takes some text or some other information and prints it to the screen but if we want to Define our own functions we can do so as well so here I'll go ahead and write a new program called functions.pi and let's write a function that takes a number and squares it so the square of 10 is 10 times 10 or 100 I would like a function that very easily takes a number and returns its Square the way I Define a function in Python is using the def keyword def short for Define and here I can say let me Define a function called Square and then in parentheses what inputs it takes in this case Square just takes a single input then I'm going to call X but if there were multiple inputs I could separate them with commas like XYZ for a function that took three inputs for example but in this case there's just a single input X and the square function could have any logic in it indented underneath the square function but ultimately this function is fairly simple all it's going to do is return x times x x multiplied by itself and now if I want to print out a whole bunch of squares of numbers I can do so I can say for I in range let's say 10. let's print out that the square of I is Square I so let's try and parse out what's going on here line four says for I in range 10 do some Loop 10 times looping from 0 all the way up to nine and for each time we loop we're going to print something out we're going to print out the square of plug in the value of I here is plug in the value of calling our Square function using I as input so that is going to have the result of running this Loop 10 times and printing out this line 10 different times each with a different value of I so I can run pythonfunctions.pi and here's what I see the square of zero is zero square of one is one two is four so on and so forth all the way up to the square of 9 is 81. so we've now written a function and been able to use it but ideally when we write functions we'd like to not just be able to use them in the same file but for others to be able to use them as well and so how can we do that well in order to do that you can import functions from other python modules or files so to speak so let me create a new file called squares.pi for example so that instead of running this Loop here let's instead run this Loop in squares dot Pi again separating out different parts of my code I have one file that defines the square function inside of functions.pi and then another file called squares.pi where I'm actually calling the square function now if I try to run python squares.pi you'll notice I'll run into an error here's another error you'll see quite frequently it's a name error another type of exception which here says the name square is not defined meaning I'm trying to use a variable or a function name or something else that doesn't actually have a definition I've never said what square is and that's because by default python files don't know about each other if I want to use a function that was defined inside of another file I need to import it from that file and I can do so like so I can say from functions import Square functions was the name of this file functions.pi and I'm saying from that python module I would like to import the square function as a function that I would like to use now I can run python squares.pi and we get the output that we expect no more exception I've now been able to import something from another module and access it this way so this is one way to import to literally say from functions import a square function import a particular name that is defined inside a functions.pi another way I could have done this is just to say import functions just import that whole module but then I would need to say instead of just Square I would need to say functions.square to mean go inside the functions module and get the square function and run that function and this would operate in exactly the same way so a couple of different options I either import the entire module in which case I use this dot notation to say access a particular part of that module or I say from functions and import Square to just import the name square into this file entirely so that I can just use the word square whenever I want to and this works not just for modules that we have written but also python comes with a number of builtin modules if you want to write programs that interact with CSV files which are a spreadsheet file format I can import Python's builtin CSV module to get access to a whole bunch of CSV related features there are a whole bunch of math related features you can get by importing the math module so on and so forth and there are additional python modules and packages that you can install that other people have written and then you just import them when the time comes and next time as we take a look at Django this is one of the techniques that we're going to be looking at is using functions that have been written by people that are not ourselves so that now is modules and how we can use modules to be able to import functions in order to allow for certain behavior and this is one way that we can program using the Python programming language but another key technique that python supports that are supported by a number of other programming languages as well is an idea of objectoriented programming a special type of programming or a programming Paradigm so to speak which is a way of thinking about the way that we write programs and an object oriented programming we think about the world in terms of objects where objects might store information store some data inside of them and also support the ability to perform types of operations some sort of actions or methods or functions as we might call them that can operate on those objects so now we're going to take a look at some of the objectoriented capacities that the Python programming language is going to give us the ability to have so python comes with a number of builtin types it has types for lists such as types for sets and so on and so forth let's imagine though that we want to create a new type in Python some way of representing other types of data for example twodimensional points things we've talked about before something that has an x value and a y value now as we've already discussed you could do this using a tuple just using one number comma another number but we could create an entire class of objects to be able to represent this data structure as well and so that's what we'll take a look at now is how to create a class in Python so I'll create a new file called classes dot pi and all a class is is you can think of a class as a template for a type of object we are going to define a new class called point and then after we've defined what a point is we will be able to create other points we'll be able to create points to store X and Y values for example and so what do we need in order to create a class well we need some way to say that when I create a point what should happen and in Python this is defined using a what's called a magic method called underscore underscore init and underscore underscore init is a method or function that is going to automatically be called every time that I try to create a new point and this function takes a couple of arguments all functions that operate on objects themselves otherwise known as methods are going to take the first argument called self and this argument self represents the object in question and this is going to be important because we don't just want a single variable called X to store the points x coordinate or a single variable called y to store the y coordinate because two different points might have different X and different y values and we want to be able to store those separately and we're going to store them inside of the object itself so this variable self references the object that we are currently dealing with and it might change depending on which point we happen to be interacting with at any given time what other inputs does a point need well a point also needs an x value and a y value so when we create a point we're going to provide to that point in x value and a y value now what do we need to do in order to store all this data inside of the point well recalled itself is representing the point itself and so if we want to store data inside of that point allow the point to store its own X and Y values then we just we need to store that data inside of the self so to speak and in order to do that we can use this dot notation to say self dot X is equal to whatever this input X happens to be and self dot Y is equal to whatever this argument y happens to be and these values X and Y they could be called anything they could just be called like input 1 and input 2 for example and then you would just reflect them here the important thing is that these two input values are being stored inside of the point itself in properties that we're going to call X and Y all right so that was a little bit abstract but now let's see how we could actually use this if I want to create a new Point called P I can say p equals point and then the selfargument is going to be provided automatically I don't need to worry about that but I do need to provide input 1 and input 2 the x value and the Y value so I'll go ahead and provide an x value of 2 and a y value of 8 for example so now I've created this point and now that I have a point I can print out information about the point I can print out the x value of the point and I can print out the Y value of the point again I'm using this dot notation to say go into the point and access data that is stored inside of that point access its x value and excess its y value so now when I run this program pythonclasses.pi what I get is 2 on the first line that is the x value and then 8 on the SEC or eight on the second line that is the Y value so what we have here is a function called init that creates a point by storing the two inputs inside of the object inside of a property called X and a property called y such that later I can create a point which calls this init function implicitly and after we've created the point I can access the data inside of it I can say print out whatever P dot X is equal to print out whatever P dot Y is equal to as well so that was a fairly simple example of creating a class just creating a class for representing a point in X and A Y value let's look at a more interesting example let's imagine that we're trying to write a program for an airline where the airline needs to keep track of booking passengers on a flight and making sure that no flight gets overbooked we don't want more passengers on the flight then there is capacity on that flight so let's define a new class that we're going to call flight and this time the init method is just going to take a single argument other than the self which is the capacity every flight needs some sort of capacity to know how many people can fit on the plane and so I'll store that inside of a value called self.capacity Equals capacity and what other information do we need to soar about a flight well a flight has a capacity and it also has all of the passengers on the flight and so we could represent this in a number of ways but we know that lists can be used in order to store a sequence of values so we'll go ahead and just create a list that will store in self.passengers that is going to be equal to the empty list so we start out with an empty list of passengers so now if I want to create a flight I can say flight equals and then capital F flight that's the name of the class and then provide a capacity I can say capacity of three to mean three people can go in this flight but no more than three that is the capacity because that is the argument that's specified inside of this init function and when I do so I'm automatically going to get this empty list of passengers so now let's think about what methods or what functions we might care about performing when it comes to a flight so one reasonable function to add would be a function that says all right let's add a passenger to the flight if I want someone new to go on this slide so how might I go about doing that well let's define a new method also known as a function to this flight class called add passenger this method can be called whatever we want because this is a method that's going to work on an individual object we need some way of referencing that object itself so we'll use the keyword self again and when we add a passenger we need to add a passenger by their name so I need to specify their name as well such that now here I want to add that name to the passengers list how do I get access to the passengers list will I have access to the self the object itself and I stored the passengers inside of Self in self dot passenger in attribute of this object and self.passengers is a list that initially starts out as an empty list but if I want to add something to the end of a list we've already seen that in order to do that I can say self.passengers dot append name so that adds that someone new to the end of this passengers list now what could potentially go wrong here well every time we call this add passenger function what's going to happen is we are going to append to the end of this passengers list this name but we haven't taken into consideration the capacity of the flight ideally our ad passengers function shouldn't let someone be added to a flight if the flight is already at capacity so there are a number of things we could do here we could just check it inside of this function but just for good measure let's create a new function let's add a new function called open seats that is going to return the number of open seats that are on the plane other than self there are no other inputs that we need to calculate how many open seats there are the only thing we need to know in order to calculate open seats is we need to know the capacity minus however many passengers there are remember self.passengers is our list of all the passengers and anytime we have a sequence to get the length of that sequence I can say Len or length of that sequence to say get me the number of passengers that there are so now we have this function called open seats which will return capacity minus the number of passengers and tell us how many open seats there are and now in this add passenger function I can add some additional logic I can say if not self dot open seats so this is equivalent to me saying in this case like if self dot open seats equals equals zero meaning there are no open seats a more pythonic way so to speak of expressing this idea is just saying if not self dot open seats in other words if there aren't any more open seats then what should we do we should return and maybe you might imagine this ad passenger function returns true if it was able to successfully add a passenger and false otherwise so in this case I can return false to say you know what there aren't enough open seats let me return false from this function to indicate that there was some sort of error but otherwise if there are open seats we can add the passenger and return true to mean that everything was okay we were able to add the passenger successfully so now we have these three functions in it that creates a new flight add passenger that adds a new passenger to that flight and open seats which tells us how many open seats there are and now let's use those functions to actually add some passengers to the Slate let me get a list of people we'll say Harry Ron Hermione and Jenny and now let me Loop over all of those people for every person in that list of people let's try to flight dot add passenger person and we can save the result in a variable called success for example and then I can say if success well then let's print out that we added the person to flight successfully but else otherwise let's print out no available seats for that person so what's going on here we have a list of people four people and for each of those people we're going to try and add the passenger to the flight calling flight dot add passenger calling this method passing as input the person's name and save the result true or false in this variable called success if success is true we print out we've added them successfully otherwise we print out there are no available seats for that person so now we can try running this program I'll run pythonclasses.pi and now we see we've added Harry Ron and Hermione to the flight successfully but the flight had a capacity of three which means there are no available seats for Ginny which we get as the error message on the fourth line and if you're really trying to optimize you might notice that you don't really need this variable I could just take this entire expression flight.adpassenger person and put it in the condition itself I can say try and add a passenger add passenger will return true or false and if it returns true that means it was a success and then I can print out that we've added the person to the flight successfully so that is a brief look at object oriented programming this technique within Python and other programming languages to represent objects like this particular flight and then to manipulate those objects using methods like the add passenger method that takes a flight and adds people to it at least as long as there is available capacity on that flight so one of the many powerful features of python that we'll be definitely taking a look at later in the term and using as we go about building these web applications now there are a couple of final examples that are just worth taking a look at just to give you some exposure to some of the other features that are available in Python one thing that will be coming up soon is the idea of decorators and just as we can take a value in Python like a number and modify the value decorators are away in Python of taking a function and modifying that function adding some additional Behavior to that function so I'll create a new file called decorators.pi just to demonstrate what we can do with decorators and the idea of a decorator is a decorator is going to be a function that takes a function of input and returns a modified version of that function as output so unlike other programming languages where functions just exist on their own and they can't be passed in as input or output to other functions in Python a function is just a value like any other you can pass it as input to another function you can get it as the output of another function and this is known as a functional programming Paradigm where functions are themselves values so let's create a function that modifies another function by announcing that the function is about to run and that the function has completed running just to demonstrate so this announce function will take us input a function f and it's going to return a new function and usually this function wraps up this function f with some additional behavior and for that the reason it's often called a wrapper function so we may call this wrapper to say that all right what is my wrapper function going to do it's first going to print about to run the function just to announce that we're about to run the function that's what I want my announced decorator to do then let's actually run the function f and then let's print done with the function so what my announce decorator is doing is it's taking the function f and it's creating a new function that just announces via a print statement before and after the function is done running and then at the end we'll return this new function which is the wrapper function so this right here is what we might call a decorator a function that takes a function modifies it by adding some additional capabilities to it and then gives us back some output and so now here I can define a function called hello that just prints hello world for example and then to add a decorator I use the add symbol I can say at announce to say add the announced decorator to this function and then I'll just run the function hello and we'll see what happens I'll run Python decorators.pi and I see about to run the function then hello world then done with the function so again why did that work it's because our hello function that just printed hello world is wrapped inside of this announced decorator where what the announce decorator does is it takes our hello function of input and gets us a new function that first prints an alert warning that we're about to run the function actually runs the function and then prints another message so a bit of a simple example here but there's a lot of power in decorators for being able to very quickly take a function and add capability to it you might imagine in a web application if you only want certain functions to be able to run if a user is logged in you can imagine writing a decorator that checks to make sure that a user is logged in and then just using that decorator on all of the functions that you want to make sure only work when a user so happens to be logged in so decorators are a very powerful tool that web application Frameworks like Django can make use of just to make the web application development process a little bit easier as well let's take a look at a couple other techniques that exist within python one is how we might be able to more efficiently represent functions so let's imagine that I now have I'm going to call this lambda.pi for a reason you'll see in a moment let's imagine that I have a list of names or people for example and inside of this list of people each person instead of being just a string is going to be a dictionary that has both a name like Harry and a house like Gryffindor and let me add another name like Cho and a house like Ravenclaw and then another name like Draco and a house like Slytherin so here we have a list where each of the elements inside of that list is a dictionary a mapping of keys and values and that's totally okay in Python we have the ability to Nest data structures within one another we can have lists inside of other lists or lists inside of dictionaries or in this case dictionaries inside of a list and in fact this nesting of data structures is one of the reasons why it's very easy in Python to be able to represent structured data like a list of people where every person has various different properties what I might like to do now is something like sort all of these people and then print them all out so I might want to say people.sort and then print all the people but if I try to run this I'll get an exception I get an exception type error less than not supported between dict and dit which is sort of weird because I'm not using any less than symbol at all anywhere in my program but in the traceback you'll see that the line of code that it's catching on is people.sort somehow people.sort is causing a type error because it's trying to use less than to compare two dictionaries and what this appears to mean is that python doesn't know how to sort these dictionaries it doesn't know does Harry belong before or after Cho because it doesn't know how to compare these two elements and so if I want to do something like this then I need to tell the sort function how to sort these people and so in order to do that one way I could do this is by defining a function that tells the sort function how to do the Sorting what to look at when sorting so if I want to sort by people's name let me Define a function then I'll just call F that takes a person as input and returns that person's name by looking up the name field inside of that dictionary and now I can sort people by their name by saying sort key equals f what this means is sort all the people and the way to sort them the way you know how to compare them is by running this function where this function takes a person and gives us back their name and this will sort Everyone by name now if I run pythonlab.pi you'll see that I first get show then Draco then Harry in alphabetical order by name whereas if instead I had tried to sort people by their house by changing my function that I'm using to sort and then rerun this now I see that it's first Harry who's in Gryffindor then Ravenclaw then Slytherin for example so we get the houses in alphabetical order instead but the reason I show this is because this function is so simple and is only used in one place python actually gives us an easier way to represent a very short oneline function using something called a Lambda expression and this is a way of including the function just as a single value on a single line I can say instead of defining a function called f i can get rid of all of this and just say sort by this key a Lambda which is a function that takes a person and Returns the person's name so we say person is the input colon person name as the output this is a condensed way of saying the same thing we saw a moment ago of defining a function giving it a name and then passing in the name here this right here is a complete function that takes a person and as input and returns their name so python lambda.pi that will actually sort the people by their name Cho then Draco then Harry whereas if I have left off this key altogether and then tried to sort well then we get this type error because we can't compare these two dictionaries so we've seen a lot of different exceptions now throughout python so the very last example we'll take a look at is an example of how to deal with these exceptions like what to do when things might go wrong if we want our program to be able to handle those possible exceptional cases situations where things might in fact go wrong so let's try an example I'll create a new file that I'm going to call exceptions.pi and what exceptions that Pi is going to do is it's going to get some input it's going to say let's get an integer input called X and let's get an integer input called y and then let's go ahead and print out the result of x divided by y so result equals x divided by Y and then let's print out something like x divided by y equals result and we can literally print out the values of X and Y so this is a simple program that's just performing some division get a value of x get a value of y divide the two and print out the result we can try running this by running python exceptions.pi if I type in like 5 and then 10 5 divided by 10 is 0.5 exactly what might I might expect but what could go wrong now if you remember from math in division what could go wrong is if I type in 5 and then 0 and try and do five divided by zero what's going to happen well when I do that I get an exception I get a zero division error which is an error that happens whenever you try to divide by zero what I'd like to happen though in this case is not for my program to display kind of a messy error and a trace back like this but to handle the exception gracefully so to speak to be able to catch when the user does something wrong and report a nicer looking message instead and so how might I go about doing that well one thing I can do here is instead of just saying result equals x over y I can say try to do this try to set result equal to x divided by Y and then say except if a zero division error happens then let's do something else let's print error cannot divide by zero and then exit the program how do you exit the program it turns out there's a module in Python called sys and if I import the sys module I can say CIS dot exit one to mean exit the program with a status code of one where a status code of one generally means something went wrong in this program so now I'm trying to divide x divided by y except I have an exception Handler this is a try accept expression I'm saying try to do this except if this exception happens rather than have the program crash just print out this error message can't divide by zero and then exit the program so now let's try it python exceptions.pi again 5 and 10 Works totally normally gets me a value of 0.5 but now if I try 5 and 0 press return I get an error cannot divide by zero no long exception that's going to look complicated to the user it's no longer messy I've been able to handle the exception gracefully now one other exception that might come up is what if instead of X is 5 I type in a word like hello something that's not a number now I get another type of exception a value error which is happening when I try and convert something to an INT because hello cannot be converted into a base 10 integer you can't take text that is not a number and turn it into an integer so instead I'm getting this value error here how can I deal with that well I can deal with it in much the same way when I'm getting this input X and Y I can say rather than just get the input just try to get the input except if a value error happens which is the error that we got a moment ago this value error then print error invalid input and go ahead and sys.exit one so now I've been able to handle that error as well I can say pythonexceptions.pi I can say hello and I just get error invalid input I can divide by zero I get error cannot divide by zero but if I do type a valid X and A Y value then I get the result of dividing one number by the other and so exception handling is often a helpful tool for if you expect that some lines of code you might be running might run into some sort of problem be they a value error or a zero division error or some other error altogether to be able to handle those errors gracefully and that's probably what you want if you're going about building a web application using python is the ability to say that if something goes wrong we want to handle the error nicely display a nice error message to the user telling them what was wrong instead of having the program entirely crash so those are some of the key features now this Python programming language this language that gives us the ability to Define these functions and loops and conditions in very convenient ways to create classes where we can begin to build objects that are able to perform various different types of tasks and next time time using python we'll be able to design web applications such that users are able to make requests to our web applications and get some sort of response back so we will see you next time okay welcome back everyone to web programming with python and JavaScript so thus far in the course we've taken a look at a couple of different Technologies we took a look at HTML and CSS which are languages we can use to describe the structure of a web page and then style it appropriately and then we also took a look at python a programming language that we could use to get programming features features like loops and conditions and variables and functions and more and what we're going to do today is introduce Django which is going to combine these two Django is a python web framework which is going to allow us to write python code that is able to dynamically generate HTML and CSS ultimately allowing us to build a dynamic web application so what is this now going to enable us to do that we weren't able to previously do using just HTML and CSS well using HTML and CSS the web pages that we created were static web pages they were the same and every time you visited the web page the page you were looking at was identical But ultimately if you think about websites you interact with on a daytoday basis say like the New York Times for example it's not the case that every time you go to the New York Times homepage you're seeing the exact same HTML it changes the next day you might see the new date you might see the next day's articles whenever someone comments on an article you can see those comments and you can see how many people have commented on an article for example and it's probably not the case that someone is sitting there updating the HTML of the New York Times website every time something changes but rather more likely there is some program maybe written in Python maybe written in some other language that is dynamically generating that HTML and CSS and allowing the web application to respond based on how users are interacting with it and this is ultimately what we're going to be trying to create using this Django web framework we're going to be creating software that's going to run on a web server such that clients running in their web browser can make requests to our web server and our server is going to respond back with some sort of response and so how does this process actually happen well ultimately it boils down to this protocol http otherwise known as the hypertext transfer protocol which is the protocol for how messages are going to be sent back and forth over the internet in this case you can think about this as a computer some user which we might call the client and then our server which is going to be the server that is going to contain our web application we are going to write a Django web application that is going to run on this server and clients are going to make requests to that server the server is going to process that request and then return some sort of response that request might look a little something like this underneath the hood it might start with the word get get is just an example of a request method a way that you might try to get a page so get just means I would like to get a particular page in this case the page I'm trying to get is the slash page just denoting the root of the website usually the default page for the website HTTP 11 is just the version of HTTP that we're using and the host is what URL we're trying to access the web page for so example.com or some other website for example that I might be trying to make a request to so this request ultimately gets sent by my web browser when I type in a URL and press return for example the server processes that request and then gives back some sort of response and the response will generally look a little something like this beginning with the HTTP version 1.1 or in some cases 2 version 2 now and then some sort of Response Code 200 is a response code that just means okay everything was okay the page was returned successfully for example and here on the second line we see content type text HTML which just means the format of the data that's coming back in this response is HTML data it's HTML data that the user's web browser on the client should then render as HTML for example and there are other content types as well and other information that comes back in that response but the key idea is just thinking about the web in terms of requests and responses one user makes a request to get a particular web page and what they get back is a response like this that hopefully includes status code 200 which means okay but there are a number of other status codes well some of the more popular 200 means okay you've probably seen 404 the status code that means not found if you try to request a web page that doesn't exist for example others you might see are 301 moved permanently that often happens if you're redirected from one website to another for example we'll take a look at an example of that shortly 403 generally means forbidden you're trying to access a page you're not supposed to have access to and 500 usually refers to some sort of internal server error usually meaning that whoever was writing the server maybe our Django web application has something that's buggy in it and we might need to go back and figure out where that bug is in order to fix it and again there are other status codes as well but these are some of the most common that we're going to be seeing and interacting with as we go about building web applications using Django so Django is a web framework it's a set of tools that is already built for us that's just going to make it easy to get started by writing python code in order to design a fully fledged web application by taking care of some of the stuff that most web pages all have to do such that we can focus on the interesting logic of building our own web applications so the first step you'll need to do in order to use Django is to install it if you're using python you may be familiar with Pip the python package manager which makes it easy to be able to install new packages and the first thing we'll probably want to do is install Django and here we're going to be using python3 so you might need to specify pip 3 install Django to install Django on your system and after you do we can run a command to be able to create a Django project and that command looks something like this Django Dash admin start project followed by the name of the project that we would like to create when we run this command Django is automatically going to create some starter files for us just to get started with the process of building a web application so let's try creating a project now I'll go ahead and go into my terminal window and what I'm going to do is type that command I'm going to type Django admin and then start project and then I need to give this project a name and I'm just going to give this project a name of lecture three for example you can name the project whatever you'd like and when that happens if I type LS what I see is that a lecture 3 directory or folder has been created for me by Django and if I go ahead and open this up inside of my text editor we can take a look at what files are inside of this lecture 3 directory so actually I'll go ahead and CD into lecture three and open it up and what we see inside of lecture three are a couple of files that we're given just to get started so there are a couple files not all of them are really interesting to us right now but first and foremost manage.pi is a file that Django is going to create for us we'll generally not need to touch that file but we're going to use the manage.pi file to be able to execute commands on this Django project and we'll see a couple of examples of that now and a couple of examples of that in future lectures as well and then the other important one that we'll be looking at is settings.pi which just contains important configuration settings for our Django application settings.pi comes preloaded with a couple of default settings but we might want to change those settings to be able to add features to our application as well or make some modifications to how the application behaves and then the other important file that's precreated for us now here is urls.pi and you can think of urls.pi as a sort of table of contents for our web application that On Any Given web application on a website there are a number of different URLs or routes that you can visit on Google for example you can visit slash search or slash images and urls.pi is just going to be a table of contents of all of the URLs on my web application that I can ultimately visit and so if I'd like to try running this web application just to see what it looks like the way to do it in Django is in the terminal I'll run python manage.pi followed by a command and the command is called run server and so this is generally how we'll use manage.pi we'll run manage.pi followed by an argument specifying what command we would like to run and python manage.pi run server means go ahead and actually run this web server if I do this I'm now running this web server locally and I see a bunch of debugging output but the interesting point to me is that it says down here starting development server at HTTP colon slash 127001 colon 8000. and so this is where my web application is currently running 127001 is an IP address an address on the internet that just refers to my local computer the computer I'm looking at right now so only I can access this not anyone else on the internet and 8000 is what we would call a port number it just refers to what type of service is being run and you might have multiple different internet services running on different ports in this case our Django application is running on Port 8000. so if I copy this URL and just go ahead and go into my web browser and paste that URL in what I see is just jenga's default page to say our installation of Django works and this now is the default page that Django is going to give to us to say the Django has been loaded for this web application and we can now actually start to begin building this web application by adding the features we want to it and so what we've created here is what we call a Django project and in terms of the way a Django project is structured is that every Django project generally consists of one or more Django applications so one project may have multiple applications within it and the reason for this division is if you think about big websites oftentimes a big website a big project has multiple different apps that are sort of separate services that operate within it Google for example has Google search but also Google images and Google news and Google Maps where you can think of each of those Individual Services as a separate app all under one larger project like Google for example or Amazon's website for instance might be one big project that has a couple of different apps within it one app for shopping maybe and one application for Amazon's video servers for example and so Django comes preloaded with this ability to take a project and divide it into multiple distinct apps maybe for simpler apps we're only going to have a project that has one app inside of it instead of multiple but it has the ability to allow us to create these separate apps that have have different capacities so if we want to get started with Django the first thing we'll need to do after we create a project is create a Django app and so the way to do that if you go back to the terminal I'll go ahead and exit out of this server by pressing Ctrl C to say I would like to exit stop running the server so now if I go back to that URL and refresh it it won't work because the Jango server is no longer running but I'll run the command python manage.pi start app and then the name of the app that I would like to create and for our very first app I'll just call this app hello for example so I've now created one Django project called lecture three and inside of which I've created the very first app that I've now called hello and so if we take a look at our files now you'll see that in addition to a lecture 3 directory which existed before we also now have a Hello directory that Django created for us that is going to contain the information needed for the Hello app to work and there are a number of files again that are generated by default we're not going to look at all of them today we're going to focus primarily on views.pi we'll see why in a moment which is going to be the file that lets us describe what it is the user sees when they visit a particular route for example where we can decide what gets rendered to the user and the other files we'll take a look at over the course of this term taking a look at what additional features Django has to offer so we've now created this Hello app that we would like to install into this project and in order to install it we need to go into the settings for this particular Django project so if I go into the lecture 3 directory and open up settings.pi what I'll see here is a big file all created for me by Django I didn't write any of this code but this is all just the default configuration for a Django project and if you scroll down somewhere there you'll see a variable called installed apps which is where Django configures what apps are installed on this project and there are a whole bunch of individual apps that are installed by default that are just created by Django one for example manages sessions which we'll take a look at a little bit later but if I want to add my new app that I've just created called hello to these installed apps I'll go ahead and just add to this list of strings this installed apps variable I'll just add hello and so now hello is going to be an installed app on this particular Django project so now what I'd like to do is actually make this app this Hello app do something and display something when I try and visit a particular route for example so how can I go about doing that well let's go ahead and go into the hello directory and let's take a look at views.pi inside of my Hello app so here's the default file I get for views.pi I see a comment that's given to me by default that says create your views here and you can think of each view as something the user might want to see so let's go ahead and just create a default view and in order to create a view in Django we're going to define a function to this function I'll just call index this function by convention takes this argument a request argument and this is going to be an argument that's going to represent the HTTP request that the user made in order to access our web server so if we want information about that request we can look inside of this request object to get access to some other data and we'll take a look at that momentarily too but now what would I like for this request to do well what I want to do for now is let's just do something simple and return an HTTP response of hello world for example now HTTP response is a special class created by Django and so if I want to use it I'll generally need to import it and so Django is going to give us a lot of features that we might want to use in our web applications but if we want to use them we generally have to import them first and it just so happens and I only know this from Reading Django's documentation that I can include a line like this from django.http import HTTP response to say I would like to import the ability to give an HTTP response and now what I have is a function representing my view this function is called index and what the index function does is it just returns an HTTP response of hello world and so this is the response but now we need to tell the app like when should you actually return this response what URL is the user going to visit and this is where we now begin to create some URL configuration some sort of setting to tell Django when a particular URL is visited then this function should be run in order to return that particular HTTP response so how to do that well in order to do that we're going to need to create a urls.pi file for this particular app so Django has one urls.pi file that works for the entire project but oftentimes We'll have each app contain its own urls.pi file just for the sake of separating things out into different places such that if we have multiple different apps Each of which is doing something independent we can have each of those individual apps have its own urls.pi file to control what URLs are available for that particular app so I'll go ahead and go into the hello directory and I'll create a new file inside of the hello directory called urls.pi and What urls.pi needs is it needs to Define a variable called URL patterns which will be a list of all of the allowable URLs that can be accessed for this particular app and the way you create a URL is by first importing from django.url's import path and let's create our first URL I'll say path and then the first argument here I'm going to give the empty string to mean no additional argument and we'll see what that means in just a moment meaning nothing at the end of the route and then the second argument to path is what view should be rendered when this URL is visited and so if I want to render my index view recall that in views.pi over here I have this index function then what I want to render when someone visits this URL the empty URL is going to be views dot index views is representative views.pi that file where I've defined All of My Views an index just so happens to be the name of the function that I want to call when someone visits this URL for example and then you can optionally provide a path with a string name to represent this URL I'm going to give this a name of index we'll see why this can be useful later on but the idea is giving a name to a particular URL pattern makes it easy to reference it from other parts of the application so later when we might want to link to things or have forms that are submitting to different parts of the web application giving a name to a path can be a useful tool in order to use views last line I need to add to urls.pi is to say from dot in other words from the current directory go ahead and import views anytime I'm using a variable name like views I'm using that name I need to import it from somewhere and it just so happens that views.pi and urls.pi are located in the same directory so I can just say from dot import views to import all of that into this particular file so this now is the urls.pi file for this application but the last step in order to get all this working for the very first time is to go back into the lecture 3 directory and open up urls.pi here this is the urls.pi file for the entire project for all of the apps that might be contained within this project and it just so happens that there's one path already given to us by default called admin which runs a default Django application called the admin application we'll see more about that in the next lecture but for now I'd like to add my own route here to say that I would like for a particular path to lead to not the admin app but the Hello app that I have just now created so I'll go ahead and give this a path of hello and what I'd like to do is say that after you've included the path hello go ahead and include all of the URLs from the urls.pi of my hello application I basically like to link these two URL configuration files together and so the command to do that is include Hello dot URLs inside of the hello module get at the URLs URLs file there and that is now what I would like to add as a URL pattern and in order to do this I also need to import include since I'm using include inside of URL patterns so that was a lot of steps just to get things started but just to get a high level overview of how this is all working I have a Django project called lecture three and inside of lecture three there's a URLs file that decides what URLs I can access I can access slash admin which takes me to the admin application which is created by Django where you don't have to worry about that just yet but now I've just added you can go to slash hello to go to the hello application and when you do that I'm telling Django to look at the urls.pi inside of the hello directory to figure out what additional URLs I can get to from there so this is one master urls.pi file that might connect to multiple different other URL configurations that exist as well then inside of the urls.pi for my app for the Hello app I've said that when someone visits just the default route on this particular application go ahead and just run the index function that is one of my views so all that's to say that now that that is done I should be able to go back into my terminal and run python manage.pi run server to actually start up this web server and now I can go back to this URL but instead of just going to that default URL I'll go ahead and go to that URL slash hello and when I go to slash hello what I see is hello world so what was happening there is that I typed in a URL that URL went to Django and Django looked at that URL and looked at my urls.pi file and said you know anytime something starts with Slash hello that belongs to the Hello app and inside of our hello configuration we said that when we go to the default route we should run the index function and the index function returns this hello world response and now we can begin to change that response we can begin to adjust what it is that views.pi is actually doing right now it says hello world but if I want to change it to just say like hello for example I can just edit it now say the index function just returns an HTTP response of hello for example and so now if I refresh this page now it just says hello so I can edit my files when I do Django notices that a change has been made and it will reupdate the server with my latest code such that now I can visit slash hello and I can see that an HTTP response of hello is what ultimately comes back to me so now let's take a look at the idea that in addition to just having one view inside of us.pi I can have as many views as I want I can create additional functions that each return different responses maybe I'd like a route that says hello to me for example so let me Define a new function then I'll call Brian that accepts the request argument and this function is just going to return HTTP response hello Brian for example and now I need to associate this new view that I've created with the URL so I'll go ahead and go back to urls.pi inside of my hello directory and so I have a default route represented by the empty string that loads the index function but I can add to this just add to this list add a new path where if I type Brian into the URL instead that will load the Brian function and I'll go ahead and give that a name as well so now if I refresh the page I'm still on just the slash hello route and that just displays hello for example but if I go to slash Brian for example now I see Hello Brian I have two different URLs one that is just slash hello with nothing after it which was that empty string and one which was Slash hello with Brian following it that loads a different view function that returns a different HTTP response and so we could imagine continuing to do this I might want a web application that has a number of different URLs that I can visit so I could go ahead and add like a David function for example that returns an HTTP response of hello David and then again inside of my URL configuration I would say go ahead and give me another route call David that loads the David function each time I'm giving it a URL so what comes after the slash hello I'm giving it a function to run the David function inside of views.pi and giving it a name just to make it easier to reference a little bit later so now I have slash hello Brian and now I have slash hello David Each of which displays a different hdb response so you can imagine starting to use this feature to begin to build a web application that has a number of different routes it has different routes to do different things and many web applications are parameterized by what it is that's actually in the URL so for example on Twitter you can go to twitter.com someone's username to see all of that user's tweets for example or GitHub a service we've taken a look at now you can go to github.com your GitHub username to be able to see all of the repositories for a particular user for example so if you think about how that might be implemented if either of these Services were using Django they might have a urls.pi file or something like it that is just defining a whole bunch of URLs and saying what route should be associated with them when someone visits that page but you can imagine ultimately that this is probably going to start to get tedious that if I want to say hello to anyone if I want to not only support slash hello Brian and slash David but I also want to support arbitrary names like slash Harry or slash Ron or slash Hermione well then it would seem that I need to create a whole bunch of different functions Each of which says hello to a different person and then create a whole bunch of different URLs to be able to do that as well but it turns out that what I can do is create URL patterns that have placeholders in effect things that allow me to parameterize the path via certain path converters so to speak so what does that actually mean well let's instead of creating functions that just say hello Brian and hello David let me create a new function that's just called greet for example that also takes a request but takes an additional parameter takes a parameter like someone's name for example and this greet function is going to return an HTTP response of hello comma and then I'll go ahead and plug in the name here and I'll need to add an F to the beginning of the string to indicate that it's a formatted string this is just python syntax to say that I would like to say hello not just to anyone but to whatever the value of the name variable happens to be I'd like to substitute the name variable into that greet function and then what I can do is inside of urls.pi I'll go ahead and add another path but instead of saying a name like Brian or David or Harry for example here I'm going to say in angled brackets stir colon name and when someone visits that route let's go to the views.greatfunction and the name for this route will be greet and so what's going on here is we have a fundamentally different kind of path rather than prescribing exactly what the URL should look like like nothing after the end of the route or Brian at the end of the route or David at the end of the route this route here on line seven is saying this route could be any string that we're going to give a variable name of name to but you could replace a name with something else entirely and this could be any string so it could be Brian or David or could be any other name and when that happens we'll call the Greet function and when that function is called it will pass in this argument this name as a parameter to that function so now be able to create a custom route that allows me to specify any string and figure out how to deal with that appropriately so now if I visit slash hello Harry for example not a route that I explicitly created but that is a string Harry is a string I press return it says hello Harry I can go to slash hello Ron and say hello Ron and slash Hermione to see Hello Hermione as well and you know what maybe just for good measure I'd like to capitalize this name like Hermione for example well the way to do that is that I can add arbitrary python logic it turns out that with any python string there is a function or method on that string called capitalize that I can say is just dot capitalize and if I can do it in Python then Django allows me to incorporate it into the response that I'm giving back so I'm now using python to take the name capitalize it and use that in the response that gets sent back to the user so now slash reminding returns hello Hermione with a capital H likewise for hello Ron likewise for hello Harry I've now been able to add a route that takes an HTTP request as well as a parameter that name whatever was in the URL and return an HTTP response that just says hello to that person so these HTTP responses can be any HTML content right now we're just using text but you can imagine adding lists or tables to this as well but you might imagine that if I have to include an entire HTML page just inside these double quotes that that's going to get unwieldy very quickly very quickly we're going to find that there's a lot of HTML to just go in a single string inside of a Python program and if we think back to the principles and the ideas that we've been looking at in this course so far we've generally tried to separate out different parts of our application wherever possible and there's a lot of value in that one in just keeping things clean two and making sure that people are able to collaborate if you want one person working on the python logic and one person working on the HTML you'd rather they not step on each other's toes as they're working and so what we can do in Django as well is separate the response the HTML from the actual python code here as well and so the way we can do that is instead of returning an HTTP response I can instead let's say for this default route instead of returning an HTTP responsive hello let me go ahead and render and when I render something I need to pass in the HTTP request but I'll also pass it pass in the name of a template and I'll go ahead and call this template hello slash index.html so if I don't want to render just a string but I want to render an entire HTML file I can call this render function pass in the request but then also pass in the name of a template and now all I need to do is create that template so let me go ahead and inside of the hello directory I'll create a new folder called templates inside of that template I'll create a folder called hello because the template name here is hello slash index.html so I need to create a folder called hello inside of which is a file called index.html I could have just called it index.html without the hello but the reason we often want to prefix our templates with the directory name is to socalled namespace them to make sure that if we have multiple different index.html files in multiple different apps to make sure they don't conflict with each other so Django best practice is to use hello index.html or whatever your app name is and inside of that hello directory I'll then create a file called index.html and this index.html can contain any HTML content same as we've seen before so I could add that doctype the HTML tag a title of hello and maybe inside the body I'll have an H1 that says hello world for example so I can have an entire HTML page just like this and now when I visit the default route of my web application by going back into my web browser and just going to slash hello for example now I see that HTML that I've defined inside of Hell of index.html it's a big H1 that just says hello world and it turns out that these HTML Pages these templates that I can render using Django are parameterizable as well right maybe I want to implement hello Hermione as some sort of HTML page an HTML page that says hello comma Hermione and using HTML out of the box you can't really do stuff like this HTML is a markup language not so much a programming language which means it doesn't by default have support for things like a variable to represent someone's name but using Django's ability to take an HTML page and treat it like a template that we can render Django has added its own templating language so to speak on top of the existing HTML and I can take advantage of that to be able to render an HTML page that actually has a variable inside of it or a condition inside of it or a loop inside of it as we'll see in just a moment as well so let's go ahead and go back to views.pi and the function that I would like to change is this greet function here that right now is just returning an HTTP response but I'd like to render an entire page for example so what might I render well let's render a template called hello slash greet dot HTML and then this render function can take an optional third argument which is called the context and the context is all of the information that I would like to provide to the template all the variables for example that I want the template to have access to and so one thing I might want my template to have access to for instance is something like a name and so this is a python dictionary just a sequence of key value Pairs and this name might be associated with what values of name is the key the value I want to be name dot capitalize and so what's going on here is that now when I render this template this template hello slash greet.html I'm providing that template with some additional context some additional information as represented by this dictionary here where I'm providing information with a key of name I'm effectively giving this template access to a variable called name and its value is whatever name dot capitalize is equal to where this name here is the argument to the function greet so now I can return this template and inside of greek.html I can use this variable called name so how do I go about doing that well let's first create that greet.html file so inside of the template hello directory I already have index.html I'll go ahead and create a new file called greet.html and inside of greek.html I'll go ahead and write some HTML and inside the body of the HTML whereas before I might have said something like hello comma world I don't want to say hello to world I just want to say hello to whoever the name is whatever is contained inside of that variable called name so how might I go about doing that well what I can do is use these double curly braces and double curly braces are part of the Django templating language that allows me to say I would like to plug in the value of a variable into this particular position inside of my template and so if I include the word name here then what I'm saying here is that when you render this greet.html template inside the body of the page I would like for there to be an H1 a big heading that just says hello comma and then inside these double curly braces I'm saying Plug In the value of the variable name there his name is Hermione it's going to be hello Hermione if it's Harry it's going to be hello Harry if it's David it's going to be hello David so let's go ahead and give this a try now when I go to slash hello Harry for example I now see a big H1 tag that says hello Harry if I go to slash hello Ron I see a big H1 that says hello comma Ron and the reason why all this is happening the way we're getting to that final position is because URLs says that when I have a URL that just is a string like someone's name we'll call the Greet function the Greet function inside of views.pi it's taking the name as an argument rendering the greek.html template and passing in that name as part of the context part of what the template has access to and inside of greet.html here is the actual HTML file here is where we then plug in the value of name so it's a lot happening across a lot of different files but the reason for all these various different files is to help keep things separate to have one file that is just responsible for URLs and directing people to where what should happen when those URLs are clicked then we have one file views.pi that is entirely responsible for deciding on this particular view what template should be rendered what information should be passed in this context and then I separately have a file for each of my HTML templates that are saying what does the page actually look like and so if you start to begin to think about the separation of components inside of a web application it can help to make the structure of a Django application a little bit clearer so we've now been able to use the Django templating language to put variables inside of our HTML templates to be able to create an infinite number of different routes where I can visit slash hello some name in order to display hello to that person's name but the Django templating language is even more powerful than just that there are a lot of additional features that the templating language is going to give us access to and we'll take a look at a couple of those now and to start I'm going to introduce you to a website you may be familiar with I consider it to be one of the simplest websites on the Internet it's a real website called is itchristmas.com and if I visit is it christmas.com and press return here's what the website says the website says no it is not Christmas and you just have to take my word for it if you visit this website on Christmas day you go to is itchristmas.com it will instead say yes and so this website is very simple you might imagine that it's really just an HTML page that probably contains a big heading that in this case just says the word no but on Christmas day just says the word yes now how might a page like this be implemented well one way you could imagine is that on Christmas Day whoever maintains the website goes into the HTML and changes no to yes and then afterwards changes the yes back to a no but we can be a little bit cleverer about this if we realize now that we have the ability to use Python logic to be able to use logic like a condition to be able to decide how a web page is ultimately going to be rendered for instance the condition might be something simple like if today's date is Christmas then render yes else render no and so we're going to use Django and take a look at some of the features of Django's templating syntax to be able to create a website like this we're not going to create is it Christmas we're going to create is it New Year's the checks if the current date is January 1st or not this is going to be a separate app it's sort of distinct from our Hello app the Hello app just says hello to people the new year app for example is just going to see whether or not it happens to be New Year's for example so I will now go ahead and create a new app and I can do that by writing python manage.pi start app and I'll call the app New Year for example I'd like to create a new app called New Year I've now created that new app if I type LS you'll see that not only do I have a Hello directory that represents the Hello app I now have this New Year directory that represents the fact that this is a new app called New Year as with before I'll need to go into settings.pi inside of my project directory and add new year as an installed app this is now a new app that exists in my web application so it too now needs to be a new installed app what else do we need to do for new apps well I need to go into urls.pi for uh lecture three and just as before I had a path saying when I go to slash hello then you should go to all the URLs for the Hello app let me add a new path that says that if I go to my application slash New Year well then you should go to all of the URLs for the new year file go to new years.urls representing the urls.pi file inside of the New Year's app now that file isn't given to us by default so we need to create it I need to go into my new year folder and create a new file called urls.pi and inside of that file I'll do from django.urls import path from dot import views and then Define some URL patterns same as before where I'll just have a single path that loads the index function inside of views.pi and it has a name of index so again just mirroring the type of structure that we've already seen before in the Hello app this app is just going to have a single route the empty route that loads the index function now all it's left to do is to actually create that index function so I go into views.pi and here now I'll Define an index function that takes an HTTP request as an argument and now inside of this index function I would like to add some logic that checks whether or not it's January 1st and so how might I go about doing that in Python well it turns out that there is a date time module in Python you can learn about this just by reading up about its documentation to figure out how it works and the date time module gives me access to things about the date and time for instance and I can play around with the date time module outside of Django just to get a feel for how it works if I just type python Into The Interpreter into my command line rather what I get is the python interpreter that lets me just write python code just to experiment and test and see what the result of running this python code would be so I can try like import date time for example and let me create a new variable called now which is dateetime.date time.now it just so happens that inside of the date time module is a function called datetime.now that gets the current date and time for example and so inside of now I have access to variables like now dot year for an example which tells me the year now.month now dot day that gives me information about the year the month and the day of the current timestamp based on getting whatever the current time is right now and given that I have this information you can imagine us constructing a Boolean condition to check whether or not today is in fact the New Year and that condition might look like now dot month equals one and now dot day equals one I can press return and see that okay the result of this condition is false it is not true that both the month and the day are true or are one rather and so using that sort of condition I can now take that and adapt it into my Django view that I'm using to try and render whether or not it's the new year or not so how might I go about doing that well what I'd like for my index function to do is return render a template the template will be called New Year slash index.html and then what context would I would like to provide to this template what information what variables do I want for this template to have access to well I wanted to have access to a variable that'll just be called New Year and in order to access that I need access to the current date consider do that I'll at the top of my file I'll go ahead and import date time and inside of my index function let me give myself a variable called now which is equal to date time.datetime.now and this New Year variable that I'm passing in to my template will be equal to now dot month equals one and now dot day equals one so if it is the case that after I get the current date and time by running datetime.datetime.now saving the result inside of this variable called now if both the month and the day are equal to one then the value of this New Year variable is going to be true when the template gets access to it otherwise as it is the case today and on most days the value of that variable is going to be false Now All That Remains for us to do is to actually create this template New Year slash index.html and have that template somehow use this new year variable in some interesting or meaningful way so how do we do that well if you recall what we did with the hello application when we want a template then inside of our application this new year app will need a new folder that we'll call templates inside of which I'll create a new folder called New Year and inside of that I'll create a new file that will be called index.html here will be the index.html file for this new year application the structure will be very similar I'll give it a title of is it New Year's and inside the body now here's where the interesting logic is sometimes I might want a big H1 that says yes other times I might want a big H1 that says no and what I need to do is conditionally decide when to say yes and when to say no and inside Django's templating language and again you'd only know this by reading Django's documentation just as we used double curly braces to say plug in the value of a variable here the Syntax for logic inside of a Django template like conditions is curly brace percent sign so we use curly brace percent sign some logical statement and then percent sign curly brace to include any kind of logic and the logic in this case is an if statement and this is very pythonlike we'll say if New Year New Year is the name of that variable that I passed into this template and if it is the new year then I want to display an H1 that just says yes and then else also inside of curly braces and percent signs I want a big H1 that just says no so if it's the new year then yes else no and then Django also requires me to give an end if tag to say this is the end of the if statement unlike python itself that uses indentation to denote when the if statement is beginning and ending in Django the indentation is optional inside of the template but in order to distinguish when the if statement is happening from when the if statement is over we need this end if tag at the very end so this here is a condition inside of our Django template we're saying if a particular variable is true then render this in the HTML and else render something else if it's the New Year say yes it's the new year otherwise say no it is not the new year so we can try this out right now we're on the route hello Ron if I instead not go to slash hello but go to slash New Year for example the site can't be reached okay so why did that happen 127.001 refused to connect so what must be happening is for some reason my web server isn't running and it turns out that in order to create the new application I had stopped my web server and so if ever that happens to start it up again we can just rerun python manage.pi run server to say I would like to now start up this web application again and all right it looks like now I have another error there's some sort of syntax error and the syntax error is in New Year slash views of dot Pi so let me go ahead and go back into views.pi and see if I can spot where the syntax error is and all right it looks like render is a function function arguments need to be enclosed in parentheses and while I have a starting parenthesis here I'd forgotten a closing parenthesis so I'll go ahead and add that and now that will complete the render function and now I should be able to load slash New Year and indeed what I see is that no it is not the new year and so what happened is we ran some python logic calculated the current date and time checked to see is the current month one is the current day one and if that's not true then we're here displaying no if we look at the actual HTML of this page like what HTML is actually making up this particular page which I can do by right clicking and control clicking and just clicking view page Source this will show me the HTML of this page this is the HTML that came back from the web server that my web browser Chrome in this case is rendering and what you can see is it looks very similar to the index.html template we wrote before but it only contains no it doesn't contain any of that if logic it doesn't contain the yes it just contains the HTML content that we wanted to respond with back to the user and so you might imagine based on this that what Django is really doing is taking the index.html template and then manipulating it based on the input we get based on whether or not it's the new year or not to say that if it's not the new year then all we should do inside the body is display an H1 that says no and the user when they get it they don't see the conditions they don't see there was another branch that could have been taken they only see the final result of rendering the template with whatever variables and logic and conditions happen to be inside of that rendering process so when the user sees it all they see is the word no and if we were to run this program on New Year's Day it would indeed say yes and we can test it just to see what it would be like if that were the case by cheating a little bit instead of now dot month equals one and now to day equals one let me just go ahead and replace this condition with new year is equal to true just to test it let's try passing in the value true as the value of New Year and see what happens instead and now when I run this page now it does say yes as we might expect it to on New Year's and so that can be a nice way of just testing what would happen if you were to replace a particular variable with a particular value we can substitute inside the context just for development purposes what value we would like that variable to take on now we've rendered HTML but we haven't really added any styling to this website just yet the real is it christmas.com has the text centered a little bit it's in Sans serif font instead of having the little serifs or the glyphs at the edge of each of the characters so maybe I'd like to add some custom CSS to this file as well and we could do this conventionally the way we've seen it done before by just including a CSS file and that is what we're still going to do but Django has a special build system for dealing with what are called Static files files that aren't going to change the HTML of this page that's not a static file because it changes depending on whether it's New Year's or not if I visited on New Year's it says yes if I visit it when it's not New Year's it says no and so this is a dynamic page but static files files that don't change like our CSS the CSS doesn't change whether it's New Year's or not and because that's files unchanging Django calls it a static file and it means that Django can be a little bit cleverer about it if you start to think about projects at scale you might store your static files somewhere separate just in some place that makes it easy to access where they're cached for faster reads later on we'll talk about that a little more later in the course as we start to delve into topics like scalability as you begin to build larger web applications on the internet but long story short Django contains a lot of features that make it easy for us to deal with static files files that don't change like CSS files and generally the way that we'll add static files is inside of the New Year folder in addition to having a template slash New Year slash index.html we'll also create a new folder called Static that will contain all of the static files that we would like to include inside of this application as well inside a static I'll create a new folder called New Year inside of which is a new file called styles.css and so inside of scales.css I can now write all of the same CSS that I would want to have written before so maybe I want all my H1s to have a font family of sans serif a font size of 90 pixels maybe and I want the text alignment to be centered just a couple of CSS properties and values same as we've already seen just to say I would like to give H1 tags this particular style now what's left to do inside of index.html is at the top of our page I'll go ahead and add a command that says load static to mean go ahead and load static files for this particular HTML page and now I'll go ahead and Link a style sheet you'll recall that this type of command inside the head section of my web page where I would like to link some particular URL as a style sheet is how I add CSS to a page but what I'm going to include in here is the link is I'm going to include rather than hard coding a URL which I could do Django best practice says that instead let's just say it's going to be a static file and the static file is called New Year styles.css so I'm not specifying exactly what the URL is but I'm saying it is a static file that is inside of a new year folder called styles.css and Django is going to figure out what that URL ought to be and this is often better than hard coding a specific URL because maybe you might imagine in larger web applications where your static files are might change you might move your static files to a different domain or to a different route and so in order to deal with that this static keyword just means Django will figure out where your static files are located and will replace this command here in the curly braces and percent signs with the actual URL for this particular file so now that I've said that I want to link this particular static file styles.css into this webpage what I might first need to do just to let Django load static files is restart the server so you might sometimes need to control C and then go ahead and rerun python manage.pi run server that will rerun the server and now if I go back to the slash New Year route inside my web browser now I see the style look a little more close to what I actually wanted it to be centered sansserif in a larger font that here just says no and if we look at the underlying HTML of this page we see that Django is actually for us filled in what the static URL is for these particular static files and by default Django just uses slash static slash and then whatever the files happen to be and so anytime we're dealing with static files files that don't change like CSS files or JavaScript files we'll take a look at later in the course that's generally where they're going to go as some sort of static file that we're going to ultimately link to this particular page so now we've seen a couple of examples of web applications we can make using Django we've seen the Hello app in Django that can parameterize URLs that depending on the URL we visit can say hello to Brian or hello to David or Harry or Ron or Hermione and we've seen the ability to using Django add some conditions to be able to conditionally say if something is true render this page if something else is true render another page let's now use these features plus some additional features to begin to build a more sophisticated web application something like a todo list that maybe I want a web application that gives me a list of tasks that lets me add new tasks to my todo list and lets me view all of the tasks that are currently on my list and I'd like to build this up one step at a time so where can I start with this well this again is going to be a new app inside of my lecture 3 project I have two apps so far a Hello app and a app for the new year and now what I'd like to do is create a third app that I'm just going to call tasks that is going to be my task management app that's all under this umbrella lecture 3 project so I'll go ahead and run python manage.pi start app tasks to say I'd like to go ahead and create a new app called tasks anytime I create a new app a couple of steps I need to follow recall that I need to go into settings.pi inside of lecture three to say that in addition to installing hello and New Year I'd also like to install the tasks app for example then I need to go into urls.pi inside of lecture three to say that in addition to hello and New Year I'd also like for us to include the URLs for tasks this URLs is again the table of contents for my entire web application where my web application if I visit slash hello then we go to the URLs for the Hello app if I go to slash tasks then I go to the URLs for the tasks app so on and so forth it tells me all of the different URLs that I now have access to and as with before the URLs file isn't created for me inside of my application so I will need to go into the tasks directory and inside of the task directory I'll go ahead and create a new file that I will call urls.pi and the format of this is going to be very similar to what we've already seen from django.urls import path from dot import views and now I Define my URL patterns where I would like a path that it's just the empty string the empty path for now that loads the index function whose name is index for example so now let's actually write this index function inside of views.pi what I'd like to do is Define a function called index that accepts the request and what I'd like to do is render a page that displays a list of all of my tasks so before we get to the idea of adding tasks let's just see if we can get our program to display a list of tasks for example so all up at the top create a global variable that I'll just call tasks that the entire application is going to have access to and I'll add three tasks to it for now we'll just use Foo bar and baz this sort of nonsense names that are just useful strings for testing purposes just placing those as sample tasks that I might want to have inside of my application and now what I'd like to do is render a template the template I'd like to render will be called tasks slash index.html and then I'll provide some context to it some information that index.html needs what information does index.html need well index.html needs access to all of my tasks and where are all of my tasks while they're inside of this variable that Joseph happens to also be called tasks and this will be something we see quite often as a paradigm in Django where we see a key and a value that look like they have the same name the key distinction is whatever is here on the right after the colon this is the value the variable takes on this is a python variable like this python variable tasks here on the left this key the string tasks that is the name of the variable that the HTML template will have access to when Django is rendering it so Django has access to this variable name on the left that has this value on the right so if you see this Paradigm that's ultimately what that's going to mean and now what I need to do is create this index.html file and make it use this tasks variable somehow how might I go about doing that well I can go back into my tasks directory create a new folder for my templates so I'll create a templates directory inside of which is a tasks directory because the template that I'm rendering again is tasks slash index.html and inside of tasks I'll create a new file called index.html inside of which we'll include some HTML I'll include just a standard starting HTML title will be tasks and now we'll have the body of the HTML page that I want to display all the tasks inside of an unordered list perhaps and if you recall from HTML to create an unordered list it looks a little something like this UL starts the unordered list and each list item is an Li tag like item one and then item two and then item three something like that gives me an unordered list that has three elements inside of it but I don't want to do this now because I don't want to hard code or exactly specify what all of the tasks are going to be what I really want to do is Loop over this tasks variable here looping over all of the tasks inside of it and creating a list item for each one of those tasks and just as in before where we could use if inside of curly braces and percent signs to use a condition likewise we can use four to say something like for task in tasks I would like to display a list item and then using these double curly braces I'm saying Plug In the task here in between these list item tasks I would like to plug in whatever the value of the task variable is and then I'll go ahead and end the for Loop there so what I've done here is rather than add a condition into a template which we've already seen I now have the ability to add a loop into an HTML template using Django to say that for task in tasks I'd like to Loop over all of the elements inside of this sequence called tasks and for each one of those individual tasks I would like to display a list item in HTML that includes whatever the value of the task happens to be and N4 just like and if ended the if statement N4 is going to end the for Loop so this syntax now rather than give me exactly the same number of list items every time with exactly the same content will be dynamic whatever the value of tasks is we will now see on this page each one as a list item and we can test this right now if I actually run this application by going to pythonmanage.pi run server I'll go ahead and go to this URL the default URL has no page but if I go to slash tasks well then here's what I see I see an unordered list that has Foo bar and bath each one is a list item and if I view the page source to see what the actual HTML is here's what I see I only wrote One Li tag inside of my template but because I put it inside of a for Loop that iterates over each of the tasks what I ultimately get in the HTML that comes back to the user is one list item for each of the elements that was originally inside of that list so I now have the ability to Loop over a list in order to generate that list of tasks of course there's still no way to like modify any of these tasks what we have here is just a fixed list of tasks that just so happens to be rendering using a loop what I'd maybe like is another page that will allow me to add in new tasks a form effectively that lets me type in a new task and press add in order to add a new task so let's do that inside of views.pi I'll Define a new function that I'm going to call add and what the add function is going to do is render tasks slash ad dot HTML in order to know when to run the few I need to give this view a URL so I'll go into urls.pi and add a new path when I go to the add route I want to go to the views.add function and I'll call this function add for example and so now when I go to slash task slash ad it's going to call the add function inside of views and inside of views here it's going to run this function that will render add.html so let's go ahead and now write ad.html we'll go into templates I'll create a new file called add.html and you know what add.html syntax is very similar to the syntax from index.html in terms of what the HTML content is so I'll go ahead and just copy this whole page from index.html paste it into ad.html the only thing that's different is the body of the page where instead of an unordered list that displays all the tasks I'd instead like a form where that form has an input whose type is text and maybe this input field has a name called task such that I can access that input data later and an input whose type is submit for example and maybe I'll give it a big heading at the top that says like add task for example so now I have a new route that adds a task so my default slash tasks route just displays a bulleted list of all the tasks and if I go to slash tasks slash add here now is my form that gives me a place where I can type in a task press submit that right now does nothing but that ultimately I hope will actually add a new task of course something I just did there should strike us as not the best design in particular the decision I made was because the general structure of this HTML page is so similar it's got the HTML tag it's got a head the title of the page is tasks ultimately I just copied all of the content of index.html and pasted it into this new HTML page add.html and anytime you find yourself copy pasting this should be another area where you start to think there's probably a better way to do this and with just pure HTML there kind of wasn't if we wanted multiple different HTML pages that displayed similar content we needed the same HTML on all those different pages but now in the world of Django we have the ability to use something called template inheritance what I'm now going to do is Define an HTML file called the layout just some file that the other files add.html and index.html are going to inherit from they're going to inherit from my layout all of the structure of the page that's the same on both of the pages and all I then need to write is what differs between the pages and as I mentioned before the only thing that differs between ad.html and index.html is the content of the body of the page over here so what can I now do well I will create a new file inside of my template tasks directory called layout.html and layout is going to have the basic layout that is common to both of these pages I have a title these title is tasks I have the body of the page and maybe there's more in common with both of the pages as well that I could add but right here this in between the body tags this is the body of the page that is going to change between each of the different pages so to denote this inside of a layout in Django I'll again use the curly brace and percent signs I'll call this a block and then I'll give this block a name I'll call it body just because it's the body of the page but I could give it any name and then I'll add an end block at the bottom here and so what I've now said inside of this layout file is that this layout file has a body inside of the structure of the page and inside the body is this block called body and what I'm saying here is this block might change depending on which file we're using add.html or index.html the rest of the structure won't change but the content of this block this block called body might change and so now what I can do inside of index.html and add.html is instead of including all of this logic I can get rid of everything other than the key part of the page that's going to be different about index.html the only thing different about index.html is this unordered list and what I'll now include at the top of index.html is I'll say that this HTML page extends tasks slash layout.html so this is now this idea of template inheritance I'm inheriting from the layout.html template basically saying use the layout.html template except inside of block body I would like to include all of this content and maybe I'll give it a H1 that just says tasks just as a title as well and so now what index.html is saying is rather the need to include all of that HTML all I need to say is this HTML file is based on the layout.html file but the difference is that inside the body of the page it's going to be this particular content here and for ad.html I can do exactly the same thing I can just add this line extends tasks slash layout.html to the top of ad.html and then I can get rid of all of this boilerplate code so to speak and just include the part of the page that differs inside the body of the page and so it seems like we've done a fair bit more work for just these two pages but if you imagine more complex websites it might have dozens or hundreds of different pages the ability to factor out the HTML that Pages have in common can definitely be very helpful just for good design to be able to make sure we're not repeating ourselves and if we ever need to change the structure rather than change it in dozens or hundreds of different places we just change it in one place inside of the layout file and the result of that is that it's going to change in each of the pages that inherit from that page as well and we can test this by just going back to slash task slash add which looks fine and back to tasks looks fine too both of these Pages now are inheriting from that basic layout now it's a little Annoying that anytime I want to switch between this page and the ad page I have to go to the URL and know that I need to go to slash tasks slash ad in order to get back and forth between them so I might like to add a link that takes me from one page to the other and vice versa and I can do that if I go into index.html you might imagine that I could just add a link here a href to create a link let's go to slash tasks slash add and like add a new task it'll be the name of that link except the problem is or the reason why this isn't necessarily good design is the Django is designed to make it such that it's very easy to change the structure of the pages in terms of how the URLs all relate to each other and I have here hard coded that when you click this link we go to slash tasks slash ad and If Ever I wanted to change that URL maybe instead of Slash ad I wanted Slash new instead of Slash ad well then I need to change it in two places I'd need to go back to the urls.pi file to change the actual URL to say instead of add it should be called new but then I need to find every place where I use that URL and I'd need to change it there as well so in order to deal with this Django has an additional feature that basically lets Django figure out what the URL should be instead and we do that by using the name that we gave to each of those routes and so this is where that name becomes relevant that I can hear just say link to a particular URL link to the URL called add so I just said link to URL called add and how Django figures this out is based on the contents of my urls.pi file that inside my urls.pi file I defined a number of different paths and I gave each of those paths a name this one was called Index this one was called add and so when I did that I was able to say if you link to a URL called add Django will find a URL whose name is ADD and Link me directly to that route and so if ever I were to change the route to something else Django would just figure out what the new URL should be and I wouldn't have to worry about it Django would fix the problems for me and so now if I go back to the task site I can click the add a new task button and that will take me to the add task and maybe now I'd like to add a link that goes back so I can go to add.html and maybe add a link down to the bottom ahref equals and what URL would I like to link to well my default page was just called index so I'll go ahead and include the word index I'd like to link to the URL index and then view tasks maybe as the name of the link so now if I go to just the default tasks page I see a link to go add a new task and now I see a link that's going to take me back to the ability to view tasks and when I click on that link I see no and now that's probably not what I wanted I wanted to go back to the index page for my tasks application but it seems that when I clicked on view tasks I'm taken to no and what's going on here well if you look at the URL the URL is Slash new year somehow I was on the tasks app I clicked a link and I'm back at the new year app how did that happen well it turns out this is an example of a namespace collision where I have two things that all have the same name and in this case what's happening is that I have a urls.pi file for my tasks application where I have a route called add and a route called index but it just so happens that inside of the New Year folder if I go up to New Year and I look at New Year's urls.pi file the New Year's urls.pi file also has a path whose name is index and so what I said was create a link and I would like that link to link to the thing that has the URL with a name of index and it turns out there were multiple things that all had a name of index and so Django didn't know which to choose and it just chose the new year one and you might imagine that linking between apps is something you might reasonably want to do you want to from Amazon's shopping page for example be able to click a link that takes you to Amazon video or you want from Google search to be able to click a button that gets you to Google Maps but in this case this isn't quite what I wanted there's a namespace collision where two things have the same name that I would now like to be able to fix and the easy way to fix this is inside of urls.pi for my tasks application let me just give each of these URLs an app name called tasks this just helps uniquely identify all of the URLs because now inside of ad.html rather than just link to a URL whose name is index I'm going to instead link to tasks colon index to mean from tasks the tasks app get the index URL and likewise inside of index.html I'll link to tasks colon add to get that particular route from this particular application name so now if I go back to the site go back to my tasks page now the Links work as expected I can get to the new tasks and I can get back to the list of all of my tasks as well so this now works I now have these two pages one that displays my list one that displays my ability to add a new task but the form to add a new task doesn't really do anything right now I type in a task I type in like Foo if I want to add a task called Foo and I press submit and like nothing happens nothing changes meaningfully on this site so I'd like for this form to do something and we've seen that we can add an action to a forum to be able to take that form and submit it somewhere and that's what I'd like to do when I add a new task I'm going to add an action to this form and when I submit the form what URL would I'd like to submit it to well I'll go ahead and submit it back to the URL for tasks colon add I'll send it back to that ad URL when I submit the form and I'm going to give this form a specific request method its method is going to be post and so we've already seen a request method of get anytime you type in a URL or click on a link to go to another page the request method implicitly associated with that request is called get which just means I would like to get a particular page anytime you're submitting data that has the potential to change some State inside the application like changing the state of the list of tasks that is stored inside the application then we'll generally use a different request method called post post was generally used for submitting form data it doesn't include parameters inside the URL the way a get request does as we saw with Google for example but this post ability is going to give us the ability now to send data via a different request method to my ad route and so let's now give this a try now I'm going to go to task add I see the ability to add a task and maybe I'll add a task like check email or something and press submit and all right I get an error forbidden this 403 in parentheses means that is the response code that came back this is an error that Django has generated for me so this 403 as we saw before means forbidden I don't have permission to do this for some reason now why don't I have permission to submit this form it says csrf verification failed so csrf stands for crosssite request forgery and what that means it is a security vulnerability that is inherent in some forms if they're not designed in a secure way meaning that someone could Forge a request to a particular website using some form on their own separate website for example you might imagine that someone on a different website might trick the user into submitting a form that submits its data to R add task function that adds a new task to their task list and maybe that's not a big deal for tasks but you might imagine in more secure contexts more sensitive contexts like a bank for example they might have a form on their website for transferring money from one user to another and if they're vulnerable to this sort of attack crosssite request forgery someone else on a different website could trick the user into submitting a form where it submits form data and it goes to the bank's website to say I would like to transfer money from this one user to another user so we would like to be able to design forms that are not vulnerable to that particular security vulnerability that don't allow for requests to be forged by another website so how can we go about doing this well one strategy that can be used in order to deal with these sorts of attacks is to add into our Forum a hidden crosssite request forgery token or csrf token which will just be some unique token that's generated for every session so every time a different user visits this particular form they see a different csrf token and then when the user submits the form they're submitting that token with the form and our web application is going to check to make sure that that token is indeed valid and if it is valid then they'll allow the form submission to go through but this means that an adversary wouldn't be able to fake a request to our website because that adversary doesn't know specifically what the generated token is so they would fail the check for csrf validation and it just so happens that Django has csrf validation turned on by default and it's done so via specific addon known as a Django middleware middleware refers to the ability in Django to be able to sort of intervene in the request response processing of a Django request and if I look at the settings.pi file if you're curious for this particular web application inside of settings.pi if we scroll down we see there's a whole bunch of middleware that's installed by default inside of a Django application in terms of making sure that we have various different features hooked into this request response processing and one of those is the CRS csrf view middleware this feature of Django that allows it to make sure that our requests whenever we're submitting data via post something that has the potential to change the state of the application in some way that we need to have csrf validation we need to add some sort of token to our Forum to make sure that Django is able to authenticate the validity of this form to make sure they know the form actually came from the web application itself and it's quite easy to be able to add this token into our HTML page Django has a builtin inside the curly brace and percent sign we can just say I would like to add into this page the csrf token for example to go ahead and fill in the csrf token right there if I now go back to the page and refresh the page now I see add task but if we're curious I can now actually go and view the page Source I can look inside this page and here now is the form and this is the form same as we saw before but you'll notice that Django has inserted this additional input field this input whose type is hidden meaning we won't be able to see it normally whose name is csrf middleware token and here is its value some long string of characters that Django has generated for me such that when I submit this form it's going to check to make sure this token is valid and if it doesn't find this token it is not going to accept my form submission and if someone else goes to this website they're going to see a different token presented to them as well and that helps to make sure that nobody can forge these sorts of requests so now if I type in a task that I'd like to add something like check email and press submit now the Forum does submit without errors of course it doesn't do anything if I go back to my task list it's still empty but at least I've now been able to submit that form it's worth noting that inside of ad.html we created this form sort of from scratch I created an input field whose type is text and whose name is Task but creating forms is something that happens so often in the world of web programming oftentimes with many different fields that you might want to change over time the djangos added a number of ways to make it easier to create forums to validate the data inside of those forms just to make our lives a little bit easier when it comes to dealing with and interacting with forums and so now we'll explore an alternative way of doing the same thing what we did here just works we can create a forum just using raw HTML as we've seen before but Django also has the ability to create forms for us so in order to do this I'll go into views.pi and at the top add from Django import forms and now I'm going to create a new class to represent this form I'll create a python class that'll just call new task form since I'll use it to create a new task it will inherit from forms.form and now inside of this class I need to Define all of the fields I would like for this forum to have all the inputs that I would like the user to provide and so I want them to provide the name of a task which will be a character field or a Char field meaning I want the user to type in characters and I can give this a label call it new task for example and now what I can do is when I render add.html I can add some context and say give this template access to a variable called form which will just be a new task form I'm going to create a new task form pass it into this ad.html template and now inside of add.html instead of writing the input whose type is text name is Task and having to do that on my own I can just use double curly braces and say plug in the form here and that will automatically take care of Django will generate the necessary HTML to make that form work so if I refresh this page now I see that here is the form the Django has created for me it's created an input field that's given it a label of new tasks so I know that it's where a new task should go but now rather than needing to edit the HTML anytime I want to change the form data that's involved inside of this application I can just change this new task form if maybe I want to eventually make upgrades to my application where in addition to specifying a text field where I can type in the new task maybe I also want to be able to specify a number indicating the priority that tasks should have I could additionally give this form access to a priority variable which is an integer field whose label is priority and I can even add constraints on this to be able to ensure that it's valid data I can give it a Min value of maybe one and a max value of 10 for example in order to add all of that and now without touching anything in my HTML I just changed the form itself inside of my python code now if I refresh the page I see an additional field I see an opportunity for me to type in a new task and I see an opportunity for me to specify some priority and of course you could add CSS in order to style this up a little bit nicer but now Django will automatically do clientside validation where if I type in a new task like check email but I don't specify a priority and submit it it tells me to fill it out if I type in a number that's in an invalid range I only wanted numbers from 0 to 10 it fills it out and this is all what we would call again clientside validation the server isn't getting any of this data it's just the web page has been encoded to know what the valid values are and it's going to constrain me to make sure that I'm typing in something that matches those values but in general when we're doing form validation when we're making sure that forms are valid data we want to somehow make sure to include not only clientside validation but also server side validation we also want to check on the server to make sure that inputs are value valid as well because there are many reasons why this we might want to be able to do this one is that it's very easy to disable this sort of clientside validation or just submit a request without doing any of the clientside validation and maybe if the user is looking at an old version of the page the validation we're doing on the server is more up to date than this clientside validation as well and Django's forums will make it very easy for us to do both of these things both the clientside validation and the server side validation as well so how does this work how do we do that well inside of the add function this add function now gets called in two different ways depending upon the request method if I try to get the ad page and by just clicking on the link for add a new task or going to the URL of Slash add then I want to just render a new blank form but if I post data to this page by using the post request method instead of get that means I'm submitting the form and I now want to submit a new task to be added to my list of tasks so I'd like to add a check for that I'm going to add a condition here that says if request dot method equals post well then here what I'd like to do is process the result of that request and the way you do that in a Django form is by creating a new variable called form which will be a new task form and if I just use new task form with two parentheses like I did before that creates a blank form but you can also populate that form with some data and if I populate it with request dot post what that is going to do is request.post contains all of the data that the User submitted when they submitted the form and so what I'm doing now is I'm creating a form variable by taking all of that data and filling it into this new task form which will contain now all of the data the User submitted and you can imagine checking this manually but I can just call if form dot is valid and inside this if statement use some logic using the clean data as a result of using this form and so inside of a variable called form dot clean data that will give me access to all of the data the User submitted and so if I want to get like what task they submitted because I had a variable here called task inside of a new task form well I'll just go to form.clean data and then task and I'll go ahead and save this inside of a variable called tasks and now what I might like to do is add this task to my list of tasks go tasks.append this new task so that's what we do if the form is valid if the form is valid we take the data from the form get the task save it inside this variable called tasks and add it to my growing list but else if the form is not valid what should we do instead well then I should return the ad.html file again but instead of providing the form back to them the a new form back to them I'm going to send back the existing form data back to them so we can display information about any errors that might have come up as well so what does this now look like let's Show an example and then I'll go back to the codes you can see in better detail how it works here's task add recall that if I type in a task like check email and a priority that's not valid out of range like 11 and press submit it says value must be less than or equal to 10. but let's now imagine a situation where the client and server are validating different things that maybe I've now decided you know what priority instead of being from 1 to 10 can only be from one to five that's now the valid range for priorities but this client which is still an older version of the page doesn't know this so it thinks that a priority of eight is still valid and it's going to pass clientside validation but now I press submit and the server is going to process it and because it's invalid it gives me back the form and gives me an error ensure this valid value is less than or equal to 5. and so this now is why we generally want both client and server side validation to make sure that the data we ultimately get is going to be accurate and it's going to be clean matching whatever specification we sent out when we were creating that form for the first time and so for the purposes of now we're not going to really worry about priority too much because we just really care about what the task is but just know that if you wanted a form that had multiple Fields you could add additional fields to this form input as well so now we've added some application logic to our route that checks to make sure that the form is valid or not if we take a look at what the add function is really doing we're checking if the request method is post meaning if the User submitted some form data then we figure out all the data they submitted and save it inside this form variable we check to see if the form is valid did they actually provide a task are they making providing all the necessary data in the right format if so then we get the task and add it to the list of tasks otherwise if the form is not valid then we go ahead and render that same ad.html file back to them but we pass in the form that they submitted so that they can see all of the errors they made they can make modifications to their own form submission if they'd like to and then otherwise meaning if the request method wasn't post at all if the user just tried to get the page rather than submit data to it then we're just going to render to them an empty form and this sort of Paradigm is actually quite common when we're dealing with requests and responses that oftentimes pages that have forms will want you to First be able to get that form via the get method to just get the page in order to display the contents but those routes will also often support a post method where you can post data to those routes in order to say I would like to now submit data to a particular route in order to get some sort of result some sort of addition to a list of tasks transferring money in a bank from one account to another for example or something else entirely but watch what happens if I now try inside of tasks ad to add a new task that's valid something like check email for example I press submit and all right nothing quite seems to happen because I just get back this new task form but if I go back to view tasks now I see that check email has been added to my list of tasks the original list of tasks just had Fue barbaz and now we've added check email to it but this wasn't quite the behavior that I might have expected maybe I wanted that after I submitted the task Forum to add a new task I would like to be redirected back to this page as well and it turns out Django makes it easy for us to be able to redirect users from one page to another in order to do that after we add a new task to my list of tasks I'm going to return an HTTP response redirect and redirect the user to a particular route I could redirect them to just like slash tasks for example but again we generally try not to hard code URLs into our application so better design would be to say let me give you the name of the route and go ahead and reverse engineer what the route actually is from that and so in order to do that we can use the function called reverse built into Django and say tasks colon index to say figure out what the URL of the index URL for the tasks app is and use that URL as the one that we ultimately redirect to when we return this HTTP response redirect in order to use these we need to import both of them so from the top I'll say from django.http import HTTP response redirect and from django.urls I'll go ahead and import reverse so I've imported both of these and now the effect of this is that after I submit a new task and add it to my list of tasks I'm going to be redirected back to the index page of my tasks application and for good measure I'll go ahead and start us off with an empty list to get rid of the fubarb as we saw there originally so tasks start out as the empty list now refresh the page I see no tasks in here by default but if I add a new task I type in something like check email press submit I now see that added to the task list and I get redirected back to the task page I can add a new task something like do laundry press submit and that gets added to my tasks list as well too so by maintaining this Global variable called tasks and updating it anytime I submit the form I've been able to dynamically grow this list of tasks inside of my application and display all of those tasks here inside of my HTML page however there's still one big problem with the application that I've built and it goes back to the idea that I've stored these tasks inside of a global variable this variable is something the entire application has access to which means that anyone who visits my website is going to be able to see the same exact list of tasks and we can simulate this by imagining someone else visiting this URL which I can simulate in Google Chrome by opening an incognito window to simulate a different session a different person interacting with the page and going to the same URL what they see when any incognito window they go to the same URL is they see the exact same list of tasks both me and another person see the same list because there's just one tasks variable across the entire application that is shared among all of the requests that come in to that particular application and that's probably not what I want when I'm dealing with something like a list of tasks I probably want it to be per user such that if a different user visits the page they have their own list of tasks as well and so in order to do this we'll introduce the concept of sessions in Django or in the web more generally where sessions are away for one Django to be able to remember who you are such that on subsequent visits it remembers who you are and knows who you are but more importantly it's able to then store data about your particular session it's able to store your user ID or information about you or in this case it's able to store all of your tasks and so in order to take advantage of sessions instead of having a global variable called tasks we're going to go ahead and delete this and instead store tasks inside of the user's session so inside the index route I'll include a line like this I'll check to see if tasks is not in request.session meaning if I look inside the session you can think of the session as like a big dictionary representing all the data we have on file inside the session about the user and if tasks is not in that session well let me add to request.sessions or session tasks and set that equal to the empty list and so what I've done here is I'm looking inside of the session I'm looking inside the session to see is there already a list of tasks in that session and if there isn't if there isn't already a list of tasks in the session well then I'd like to create it then I'd like to set request.session square bracket tasks equal to the empty list if the user doesn't already have a list of tasks go ahead and give them an empty list of tasks and now here in tasks instead of rendering the variable tasks which no longer exists I'll render request dot session tasks to pass in that list of tasks to this particular template and now in index.html we're still looping over to that list of tasks and now we'll see if I go back to tasks I see no such table Django underscore session so this is a bit of a strange error what's going on here no such table Django underscore session well it turns out as we'll see in the future Django tends to store data inside of tables and we haven't yet gotten to what that ultimately means or how to manipulate or interact with data stored inside of tables but Django stores data about sessions as it would happen inside of a table by default now you can change this to have Django stored data about sessions elsewhere but ultimately Django is keeping data about who you are and what your tasks are and that data needs to be stored somewhere and by default Django wants to store it inside of a table and right now that table doesn't exist so we need to create it and the way to give Django access to that table that it wants to create that has been waiting to create but it hasn't yet is to run this command inside the terminal python manage.pi migrate and we'll learn more about what that means in terms of what a migration is and what it means to migrate data into a database but for now just to know that python managed.pi migrate will allow us to create all of the default tables inside of Django's database next time we'll take a look at actually creating databases of our own adding tables of our own that store our own custom data but Django has some initial default tables that it wants to create and running python managed on Pi migrate allows for those tables to be created now that those exist I first need to run the server it's a python manage.pi run server I load the page and here now is my list of tasks there's nothing here so when I Loop over all the list items it's sort of empty which maybe isn't the best user experience or user design so what I might want to do is add an additional condition it turns out inside of index.html whenever I have a for Loop inside of a Django template I can also add an empty condition to say if I run the for Loop but it doesn't run at all because the sequence is empty well then let me just say like no tasks for example and this is just a nice to have feature of the Django language that just makes it easy for us to be able to deal with situations where we're iterating over a list and there's nothing in that list so now I refresh the page no tasks exactly what I would expect to see and now this index route seems to be working fine what now needs to change when it comes to adding a new task well rather than append the task to my list of tasks let me go ahead and say request.session tasks because that is my list of tasks and let me add to request.session tasks this new task I'm adding to it a new sort of adding a list to the end of it that just contains the one new task that I got from the form so when the form is submitted we check to make sure the form is valid we get the task the User submitted and we append that to the list of tasks that's already stored inside of the session before redirecting the user back to the index page so let's give it a try we'll go back to this URL back to tasks I see I have no tasks initially and now I can go ahead and add a new task type in something like check email press submit and all right now that's added add a new task someone like do laundry submit and now both of those tasks are there but now importantly if you imagine someone in ink in an incognito window or on a different computer visiting my same website going back to this page what they see is an entirely different list of tasks because they have a different session the sessions are determined by cookies these little hand stamps that help the browser to be able to give some information to Django's web server to say here is who I am so Django knows what data to show you and in this case my original case Django knows who I am knows to show me these tasks and in this case it's a different user in incognito window in this case and so what they see is a list that has no tasks inside it at all so now we've really just scratched the surface of what Django has to offer but we see now the ability it has to be able to create Dynamic web applications instead of just displaying HTML and CSS that's the same every time using Django we now have the ability to be able to generate programmatically custom HTML and CSS either saying hello to a person's name based on what name is provided inside of a URL or the ability to say to check the current date and conditionally display something if the date is one thing versus another and the ability to store data on a session basis to be able to store information about a user's todo list for example such that on subsequent visits they can see their list of things they need to do with a different list for each of these possible users and here really is just the beginning of what Django has to offer where Django gets very powerful is when it comes towards storing data inside of databases and manipulating that data and interacting with that data in various different ways and that's ultimately where a lot of the power of a web framework like this ultimately comes in we'll explore more of that next time but for now that was just a look at Django and how we can use use it to be able to build these sorts of web applications this was web programming with python and JavaScript we'll see you next time all right welcome back everyone to web programming with python and JavaScript so last time we took a look at a brand new web framework written in Python called Django and what Django allowed us to do was to build Dynamic web applications applications where we now had the ability to not just display the same HTML and CSS to the user every single time but to dynamically generate HTML in order to allow users to interact with a page that was a little bit more Dynamic doing things like rendering things on the page only if a certain condition was true or looping over a list of values and displaying one HTML element for each of those possible values but where Django gets especially powerful and where web applications certainly get much more interesting is as we start to delve into the world of data and trying to have web applications that store data inside of a database and to do that we're going to introduce a couple of topics today in particular we're going to introduce the idea of SQL models and migrations SQL is a database language that we can use to interact with databases and Django is going to allow us to have an abstraction layer on top of SQL to interact not by writing direct SQL queries but by interacting with python classes and objects that we're going to refer to as models and migrations are going to be a technique that are going to allow us to update our database in response to changes that we make to our underlying models so before we get into things that are more Django specific let's begin with the discussion of SQL more generally and more broadly just the discussion of data and the types of data that we're going to want to store and now there are a number of ways that we could try to store data inside of a computer system but oftentimes in databases in particular in a type of database known as a relational database we're going to store data inside of a table where each table is going to have rows and columns and so for the take of today we're going to imagine starting to construct a database and a web application that an airline might use for example for keeping track of various different flights on that Airline and keeping track of which passengers are on those flights and so what we have here is a sample table for example of how you might represent a whole bunch of flight related data here I have three columns for three pieces of information that I might want to keep track of for any particular flight for any given flight I might want to know that flight's origin what city it's leaving from its destination what city it's arriving at and its duration some value in minutes of how long it's going to take the flight to get from the origin to the destination so each of those columns represents one field that I might want to keep track of about my data and each row meanwhile is going to represent an individual flight so here for example is one row representing one flight from New York to London and that flight just so happens to take 415 minutes and so what SQL is going to allow us to do is it is going to be a database language that is designed to interact with relational database Management Systems databases that organize data into tables where every table has rows and columns and it turns out there are a number of different database management systems that Implement parts of the SQL standard of this type of language some of the more popular are MySQL postgres SQL and sqlite but there are definitely others as well and each of these has various different features and different use cases where some might be more appropriate MySQL and postgresql otherwise known as just postgres are more heavier database management system so to speak they're generally running on servers elsewhere where a lot of big companies will use servers like this in order to store data and represent their data in sort of a separate database where the idea of that is that you might want your web application running on one server but you might want your database running as an entirely separate process such that they can behave independently you can debug and test them independently and one is not if one goes down the other doesn't go down as well sqlite is a bit of a simpler lighter weight implementation of the SQL standard and what sqlite is going to do is rather than be an entire server that is going to be listening for requests and making responses sqlite is just going to store all of its data as a single file so we're going to store SQL data inside of a sqlite file and that's going to make it a little bit easier for us as we're just getting started to begin to write queries and add things to our database and retrieve things from our database but know that many of the same types of SQL syntax that we'll see with SQL Lite which is Django's default can also be applied to other languages as well in other database Management Systems too so as we begin to store data inside of a SQL database ultimately each of those pieces of data has a type in the same way that in Python we have types for various different types of data we have integers and we have strings and we have lists and tuples and so forth SQL 2 has types that represent various different categories of information that you might want to store inside of a database and each database management system has its own different set of types sqlite for example has a fairly short list of basic types that it supports it supports text for just like strings of text for example something like a city name for instance might be stored as text we have support for integers which are just 0 1 2 3 4 plus the negative numbers negative one negative two negative three and so forth we have support for real numbers where real numbers don't have to just be integers they can have something after the decimal point something like 2.8 or something else that might have a decimal in it and then numeric is another category for data that's just more generally some sort of number that might number like data so something like a Boolean value or something like a date for example might be stored using this numeric type where it's not really an integer or a real number though you could represent it as such it's other numeric type of data and then finally blob which stands for binary large object is any type of other binary data just zeros and ones that you might want to store inside of your database so for example if you're storing files maybe they're audio files or images or other types of files that you want to keep track of inside of your database you can store just pure binary data inside of a SQL database as well so these now are the basic types of sqlite supports but other database Management Systems have other types that they support as well MySQL for example has a much longer list of other types that it supports in addition to just supporting a text type for arbitrary length text MySQL also has a type called Char that takes an argument of size for saying I want like size characters worth of data that we're going to store inside the database and you might imagine that this can be advantageous in situations where you know that your data is going to be within a certain number of characters so if you're storing a zip code for example in the United States a zip code in the United States might just be five characters and so you can allocate a character length of five characters worth of space for storing every single zip code inside of your database table so for efficiency's sake if you know the maximum length and you can fix that length inside your database that can be an efficient choice varchar of a size is similar and this is a variable length character if something isn't going to be exactly a certain number of characters but maybe up to a certain number of characters you can use varchar to say you know maybe sometimes it's going to be fewer characters but it could be up to size number of characters and there are tradeoffs there too then there are various different types of integers there's not just a single integer type but small int and int and bigint Each of which uses a different number of bytes in order to store an integer data so if you want to be able to store much larger or much smaller numbers you might need a bigger type like an INT or a big end but if your numbers are going to be pretty small maybe you're okay with just a small end and likewise there are similar types of tradeoffs for floating Point numbers where much as in programming languages like C if you're familiar have both a float and a double type where a double uses more bytes of memory in order to store information here too we have float and double which allow us to store floating Point numbers numbers that might be real numbered values where a double just allows us to express a number to a little bit more Precision than a floating Point number might be able to and there are many other types as well but the general idea is that here even in SQL much as in a language like python we have types for each of these various different kinds of data so now that we understand that each type of data has types what we'd like to do is to be able to inside of a database actually create a table and there are various different SQL commands that we can run on our database in order to perform various different operations and the first we might want to execute is a command that is just going to create a table for example so how might we go about doing that well it turns out the syntax for creating a table is going to look a little something like this this here is the syntax we would use to create a table in sqlite for representing flights for example so we begin with the keyword create table to say I would like to create a new table inside of this database next I give the name of the table every table has a name just for ease of reference and here the name of the table is just the word flights then what follows in parentheses are a comma separated list of all of the columns that should be present in the table I'm not yet adding any data to the table the create table query is just going to decide the structure of the table what are the columns and what are the columns types and so here we see that in the beginning of each of these pair of these Clauses that are separated by commas we have the name of the column so we have an ID column because though we didn't see this before often in SQL it's going to be helpful to be able to have some way of uniquely referencing a particular element inside of the table and you know maybe there are multiple flights that are going from New York to London for example and I want some way of distinguishing between them and one easy way is to give every single entry inside of a table a unique identifier or a unique ID represented here by this ID column and that's going to be of weight making sure that we can always access a particular flight uniquely so we have an ID column An Origin column a destination column and a duration column and each of those columns has a type so the types here ID is an integer it's just going to be some number representing the flight counting one two three four so on and so forth origin and destination we'll label here as text though you'll see that if we were using MySQL for example I might make these a variable length character that could be up to a certain number of characters if I know you know there's probably not going to be a city that's longer than a certain number of characters for instance and then I have a duration which here then is an integer some number of minutes that is going to be how long it takes for this flight to go from the origin to the destination after the types for each of the columns I have additional constraints that I might add to the columns as well so integer primary key the primary key here means that the ID is going to be the primary Way by which I uniquely identify a flight and there's going to be some optimizations here to make it very quick to be able to look up a flight by its ID and not know as a constraint that I can place on columns to be able to say I don't want to allow for this particular column to ever be empty I don't want there to ever be a flight that doesn't have an origin or doesn't have a destination or a duration so I can add constraints to a particular column to say you know what for the origin destination duration columns those should not be allowed to be null I want to always have an origin and a destination and a duration and then finally this Auto increment after the primary key is a queue into SQL to automatically update the ID every time I add a new row into the table so if I add a new flight I can give the flight An Origin destination and duration but I don't have to worry about giving it an ID SQL is going to handle that for me automatically automatically giving that new table the next or the new row in that table the next available ID number so here then is the way we create a table by giving the name of the table each of the columns the types for each of those columns and then any constraints we would want to place on those columns and it turns out there are a number of different types of constraints that I can add to a particular column not null is one we've seen before you can add a default which just adds a default value to a particular column primary key we've seen unique guarantees that every value is going to be unique so if you don't want to allow for the same value to appear twice for a particular column you can add a unique constraint to a particular column to enforce that as well and then check can be use to make sure that a value obeys a certain condition like a number Falls within a certain range for example if you have like movie ratings for example and you're storing movie ratings inside of a database you might care to make sure that those ratings are within the one to five range or the one to ten range or whatever range you deem valid for the database and so via constraints you can begin to ensure that as you add data to the table that data is going to be valid in some way that it needs to obey certain constraints otherwise if you try to add it to the table it's not going to be accepted at all and so that leads into the natural next question which is I now have all of these various different tables that I can create using these create table commands but how do I actually add data into those tables and the way we're going to do that is via an insert command where we're going to insert data into a SQL table and so what might that command look like the command is generally going to look like this where we're going to say insert into to say I would like to add a new row to a table following that we provide the name of the table something like flights to say I would like to add a new row to the flights table and following the name of the table we need to provide in parentheses a comma separated list of all of the column names for which we are going to provide values so here I've said I want to provide values for the origin destination and duration of this flight note that I'm leaving out the ID column I don't have to worry about adding a value for the ID because I said the ID should Auto increment so it's going to automatically give the next available ID and what values am I going to provide well after the word values I provide again in parentheses a comma separated list of all of the values that are to be associated with those columns in the same order so origin was the first one here so origin will correspond to New York destination will correspond to London duration will correspond to 415. so this query then lets me take the flights table that I've already created and add some data into that table as well so you can use these insert queries so once you have a table to be able to add new rows of data to that table every time a new flight comes up for an airline the airline might behind the scenes be running an insert into flights command that takes data about that flight and adds it to the table but of course once we've added data to a table we'd ideally like some way to get data out of that table as well that once we've stored data inside of our database we want to retrieve that data too and to do that we're going to use a particular type of query called a select query and what select is going to do is it's going to take a table that already exists and allow us to get data out of that table it's not going to modify the data that's there it's just going to retrieve data that might be inside of a particular table so what do those queries look like well the simplest query might look a little something like this select star from flights select from flights means I want to select data from the flights table and this star is a wild card that here just means that select all of the possible columns that you can and so if this is my table my table of flights where each flight has an ID An Origin a destination and a duration then select star from flights we'll select all of that data all of the rows and all of the columns are going to come back to me when I run a query like this now it's possible that when I'm running these queries when I'm accessing data that I don't actually care about all of these columns especially if I have a table with many more columns than just this maybe I only care about particular columns and it would be wasteful to query the database asking it to return to mean a whole lot more data than I actually need so instead I could run a query like this select instead of star I'm saying select origin comma destination from flights so I'm again selecting from the flights table selecting all of the rows of still but the difference is that instead of Select star which means select all of the columns that are present in the table select origin comma destination means I'm only going to select these two columns the origin column and the destination column so highlighted in blue here is the data that would be returned if someone were to run this particular SQL query now especially as tables begin to get larger and begin to have more and more rows here I just have six rows but you might imagine a table with thousands or even millions of rows within it you probably don't want to be returning every single row every single time so just as you can constrain which columns come back to you likewise you too can constrain which rows come back to you when you perform a query too so I could say something like select star from flight where ID equals three again this reads it's very englishlike I'm saying select all of the columns from the flights table but not all of the rows I only want to select the rows where this is a SQL keyword where ID equals three ID is the name of a column three is the value and it's going to look through to this table only find me the flights where the ID is equal to three and I'll just get back that one row as a result it finds the row with an ID of three and it gives that back to me If instead I said select star from flights where origin equals New York I can see that I don't just need to filter on the primary key the ID I can also filter on any other column I can say give me all the flights where New York is the origin so all the flights leaving from New York and you might imagine that in New York's airport for example they likely want some sort of query that's going to find all the flights leaving from New York such that they can display on a screen of some sort all of the departures from that particular airport so you could run a query like this and get back only the rows in this database inside of this table that happen to have an origin of New York for example so let's go ahead and take a look at how we might actually run some of these queries inside of a SQL database so in order to create a SQL Lite database which is really just a file I can start just by creating the file and it turns out that in the terminal there's a command called touch that will create a brand new file for me so I'm going to create a file called flights.sql it's going to be a sqlite database file that by default has nothing in it but then assuming you have sqlite installed I can run sqlite 3 followed by flights.sql and now I'm inside of the sqlite prompt I can now begin to write commands that will be executed on the SQL database so one thing I might do is create a table called Flights this table I want to have in ID column which is an integer it should be the primary key the main wave which I identify a flight and I would like to Auto increment it I would also like for the flights table to have an origin which will be a text field that is not null I'll add a destination field also a text field that is not null and then finally I'll add a duration field which is an integer that also shouldn't be null I'll end with an end parenthesis and a semicolon press return and that executes that command on my database I have now created a table called Flights and to verify this in sqlite in the prompt I can type dot tables and that will show me all of the tables that currently exist in my database and it just so happens that I have a table called Flights of course there's nothing inside this table which I can verify by running select star from flights meaning get all the data from the flights table if I press return all right nothing happens I don't see anything there's no data that happens to be here but now I could say something like insert into flights then I'll provide in parentheses the names of the columns and on the slide a moment ago I showed this on multiple lines that was just for visual sake this command can be entirely on one line if we would like it to so I can say origin destination and duration and then provide values I can say let's add New York to London and I'd like for this flight to B duration of 415 minutes so I press type in that command press return that adds a new row to my flights table and I can verify this by running select star from flights and I see that now I have this table whose ID is one that's the ID column from New York to London with a duration of 415 minutes and I could do this again and again and I in advance prepared a couple of insert queries just to give us a little bit more data each of this is just a different insert query that's going to add one new flight into our database so I'll go ahead and copy those and then into the database I'll go ahead and paste in all these insert commands to insert a whole bunch of flights into this database and now if I run select star from flights what I get is all of the flights and this is not formatted particularly nicely sqlite has some additional tricks if you'd like to format it a little nicer so I can say go ahead and put this into columns mode and give me some headers yes so header dot headers yes and now if I select star from flights the data is organized a little more nicely where things are really into columns and their headers for each of the rows where I can see that all right I kind of have a text based representation of what I was displaying graphically a moment ago that inside of my flights table I have four columns an ID column origin destination and duration each flight is just one of the rows that's inside of this table and now I can begin to run additional select queries if I want to do something like select star from flights where origin equals New York well then instead of getting back all of the flights I'm only going to get back the flights where the origin is New York so I can very quickly filter down on this data only getting the information that I actually care about taking a look at and there are other ways of interacting with sqlite as well but this sqlite prompt is a very direct way of just being able to write a query very quickly and see the results of that query so it turns out there are other types of queries we can run as well so we'll take a look at some others we don't just need to say where something equals something else other types of Boolean expressions are allowed as well so I could say something like select star from flights where duration is greater than 500 where the idea here is all right let's look at the duration column it's an integer so we can do arithmetic Expressions on these values I can take a value and see is it greater than 500 or not and when I do that what I get back is all of the rows that have a duration that's greater than 500 so I can begin to query not just on whether one value equals another value but also other types of comparisons as well and much as in Python is when we had Boolean expressions in Python I could join multiple Boolean Expressions together using words like and and or SQL has the same type of thing in its own query syntax too I could say something like select star from flights where duration is greater than 500 and destination equals Paris and as you might logically Intuit this means this means get me all flights that are going to Paris and that take longer than 500 minutes and it turns out there's only one such row inside this table that satisfies both of those constraints of course instead of using and I could have also used or to get a different query where now I'm looking for all of the flights longer than 15 minutes or longer than 500 minutes or the destination in Paris is Paris so as long as either of those conditions are met I'm going to get results back and so when I get back are some of the rows where the destination is Paris some roads where the destination isn't Paris but the duration is more than 500 minutes and of course any row that satisfies both of these constraints in particular flight ID number two that gets come to get this resulted as well when I run this particular query on this table and there are other types of queries I can perform in addition to that so I can say something like select star from flights where origin is in and then in parentheses New York comma Lima to say check if the origin is in this sequence of possible values the sequence of New York and Lima as long as it is one of those two then I want for the results to come back and so then you'll get back rows that have an origin of New York rows that have an origin of Lima as well so you can begin to construct more sophisticated queries that are able to check for whether an origin is in a list of possible values or even if it matches a particular pattern that maybe you know that one of the columns looks a certain way or is formatted according to a particular structure but you don't know exactly what the value is I could run a query like select star from flights where origin not equals but where origin is like and then in quotation marks I have a bit of a strange expression percent a percent this percent again stands for a wild card and this time the wild card is looking at the values of a particular column in this case the value of the origin column meaning the percent stands for zero or more characters no matter what those characters are we're looking for some number of characters maybe zero maybe more followed by an a followed by some other number of characters maybe zero many more maybe maybe more and ultimately what this query is going to do is look inside of the flights table and get back to me all of the results where there is an A in the origin as long as there is an A in the origin column it doesn't matter if there are characters before it or characters after it all of the rows that come back are going to be the rows that just so happen to have an A in it so lots of ways we can begin to run select queries and there are even additional functions you can add to your select queries as well where if instead of just selecting the values of columns I want to compute the average duration of a particular category of flights or I want to count how many flights that are coming out of New York or I want to find the longest flight that goes to London or the shortest flight that goes to London or I want to add up all of the durations for a whole bunch of flights maybe they're flights that are connected to each other and I want to add up the total travel time that my take SQL has a number of builtin functions that allow us to perform these sorts of calculations as well so a couple of different SQL commands we've now taken a look at we've taken a look at create table that allows us to create a new table insert that lets us add data to a table and then select which lets us take data inside of the table and retrieve it but of course often when we're dealing with databases the data doesn't just get added the data changes in some way so we also need some way of being able to update data after it's already inside of our database and to do that there's another query for that which is an update command that we can execute on our database and that command looks something like this again displayed on multiple lines but you could put this entirely just on one line SQL doesn't really care if you add line breaks it just knows that when it sees a semicolon at the end of the command that is the end of this particular command but here what I've said is use the update keyword to say I would like to update a table what table would I like to update I'd like to update the flights table and then what would I like to do well I'd like to set the duration equal to 430. so whatever the value of duration happens to be right now change it to 430 but of course I don't want to change it to 430 for every single flight just as in a select Clause I could say where something equals something or where and then some other Clause to specify where I want the rows to be selected from likewise to an update I can say set duration equal to 430 where a particular condition is true so here I'm going to look through the flights table find myself all of the flights where the origin is New York and the destination is London and for those rows I'm going to update the value of the duration column setting the duration column equal to 430. so using that syntax I can take data and update it changing one value to another value by pinpointing which row or rows I would like to change if I only want to change one row I might do like update flights set duration equal to something where ID equals a particular ID to be able to pinpoint one ID and then take that row and make some modification to it and in addition to inserting data selecting data and updating data the last main command will concern ourselves with is the ability to delete data the ability to take a row and say I'd like to get rid of it or take multiple rows and get rid of them and so a command like delete from flights where destination equals Tokyo as you might imagine deletes from the flights table all of the rows satisfy this condition where the destination is equal to Tokyo so a number of different operations now that we have the ability to do the ability to delete from a particular table where a condition is true the ability to update a table based on particular conditions the ability to select data from a table and insert data into a table as well and there are a couple other Clauses that can be used to add to SQL queries as well just to add additional functionality if I don't want all of the rows to come back from a particular SQL query I can limit the results that come back so normally select star from flights would get me all of the flights inside of the table but I could say select star from flights limit five to just say you know what I only want Five results to come back from the staple order by allows me to decide how the results are ordered inside the results that come back so I could say select star from flights order by destination or order by duration to get all of the flights in order by how long they are Group by allows me to group a whole bunch of rows together so if I wanted to group all of the flights by their origin so they can get all of the flights leaving New York and all the flights leaving London and so forth I could do something like select star from flights Group by origin to group flights by their origin as well and having as a constraint I can place on Group by to say that I would like to select all of the flights from the grouping them by their origin but they need to have a count of at least three meaning there need to be at least three flights that are leaving from that particular City and for all of these particular Clauses these are helpful to know if you're going to be directly writing SQL we won't worry about them too much here in particular because fairly shortly we're not going to be writing SQL ourselves we're going to just be writing python code and Django is going to under the hood be manipulating the database and creating the SQL commands that it is going to run on the underlying database and so we will see how we don't actually need to worry about writing the specific syntax but Django is going to handle much of that for us so here now we have a flights table a table that keeps track of all the flights that we have organizing them by their ID and their origin and their destination and their duration but oftentimes when we're dealing with data especially in a larger database we don't just have one table of data we have multiple tables of data and those multiple tables might relate to each other in some way and let's take a look at an example of how that might come about we're going to introduce a concept that we'll call foreign keys and we'll see what that means in just a moment so here again is our flights table the flights table has four columns an ID origin destination and duration but of course in New York there are multiple airports in New York for instance and so it might not make sense for me to just label each origin or each destination just by the name of the city maybe I also want to give the three letter airport code that corresponds to the airport to which I'm referring in this case and so how would I encode into this table not only the origin but also that City's airport code and not only for the destination the name of the city but also the airport code for that airport as well well I could just add more columns I could say something like all right now we have this table that has an ID and origin in origin code a destination a destination code and a duration but here now the table is starting to get fairly wide there are a lot of columns here and in particular there's some duplicate data that I've repeated my mention of Paris is associated with this particular three letter code and the same thing for New York and other airports as well there's some messiness in the structure of this data and so often what we'll want to do is we begin to deal with data in larger and larger sets with more and more columns is we'll want to normalize this data separating things out into multiple different tables that just reference one another in some way and so instead of just having a single flights table what we might consider doing is saying that flights are one type of object but another type of object that I care about is like an airport and so I might just have a separate table just for airports where this table has three columns a column for the ID of the airport just some unique number that can identify a particular airport one column for the three letter code for that airport and one letter for the city or one column for the city where that airport is in and now this is a much more straightforward simpler representation of all of the airports and the question becomes what happens to my flights table that my flights table that here had an ID origin destination and duration where the type of origin and destination where in this case just text textbased Data representing the name of the city from which the flight is departing or to which the flight is arriving well now that I have this separate airports table where every Row in the airports table has its own unique ID then what I can do in this case is instead of storing An Origin and a destination as text I can store what we'll call a foreign key a reference to a key in another table and rename these columns to origin ID and destination ID that instead of storing text are going to store a number origin ID 1 means the origin of flight 1 is whatever airport number one happens to be and I could go to the airport stable look up which airport has an ID of one and that would tell me the origin of this flight and if I went to the airport's table and looked up which airport had an idea for that would tell me the destination of the slide as well so by combining now two different tables one table for representing airports and one table for representing flights I'm able to connect these two different tables together by way of a foreign key some columns inside of my flights table namely the origin ID column and the destination ID column that together allow me to reference information stored inside of another table as well and as you imagine this sort of Airlines database growing and storing more different kinds of data the ability to relate tables to each other is going to become incredibly powerful so one thing you might imagine is that in addition to storing airports and storing flights an airline probably also needs to store information about its passengers like who's on which flight and so you could imagine constructing a passengers table that has an ID column to uniquely identify every passenger a first name column that stores every passenger's first name a last name column for storing their last name and a flight ID column for storing what flight that passenger happens to be on so in this case I could say that all right Harry Potter is on flight number one I could look that up in the flights table to find out all right inside the flights table here is where the flight is leaving from where it's going to and what its duration happens to be now as we begin to design these tables we have to think about what the implications of that design happen to be and in the case of this passengers table it does seem that there is a limitation on the table design that I have created and namely if you think about it you'll see the limitation of this table design is that any particular row can only have one flight ID associated with it that Harry Potter has a single flight ID column that can only have one value stored inside of it and this would seem to make it impossible to allow for us to be able to represent a person that could be on multiple different flights and so this starts to get at the idea of different types of relationships that rows in a table can have to one another one type of relationship is a many to one relationship or a onetomany relationship where I can express the idea that one flight can be associated with many different passengers for instance but what we might also want is a manytomany relationship where many different passengers can associated with many different flights a passenger might have more than one flight a flight might have more than one passenger and to do that we're going to need a slightly different structure for this particular type of table and one way we can approach it is by creating a separate table for storing people that I could have a people table where every person has an ID has a first name and has a last name same as before but I'm no longer storing flight information inside of the table I've cleaned my setup up I'm only storing people in this table and nothing about their flight information and then I'll have a separate table for dealing with passengers on the flight and mapping people to their flights and we can think about what does that table need to look like well I need some sort of table that is going to relate people to what flights they happen to be on so odds are we're going to need one column that is a foreign key that references this people table and we'll need another column that is a foreign key that references the flights table such that I can relate those two tables together and so that table could look like this this now is the simplified passengers table that only has two columns it has a person ID column and a flight ID column and the ID of this table now is it's known as an association table or a join table that just Associates one value from one table with another value from another table that this row here one and one means the person with an ID of 1 is on flight number one and I could look up that person inside of the perp people table look up that flight inside of the flights table and figure out who the person is and what flight they're on and down here two and four means whoever the person with an ID of 2 is is on whichever flight happens to have an ID of four and so this now has allowed us to be able to represent the types of relationships we want we have a table for airports and a table for flights and any flight is going to map to two different airports one destination one origin and any airport might appear on multiple different flights it's sort of a onetomany relationship and then over here when it comes to passengers we've stored people inside of a separate table and then had a manytomany mapping between people and flights so that any person could be on multiple different flights like here for example person number two is on both flights one and four and likewise a flight could have multiple people so in this case flight number six has passengers five and six that are on that flight as well so we've been able to represent those relationships of course a byproduct of doing this is that now our tables are a little bit Messier to look at and messy in the sense that it's not immediately obvious to me when I look at this table like what data I'm looking at I see these numbers but I don't know what these numbers mean I've separated all these tables into different places and now it's a little harder for me to figure out who's on which flight I have to look at this data look up people in the people table look up flights in the flights table and somehow associate all of that information back together in order to draw any sort of conclusion but luckily SQL makes it pretty easy for us to be able to take data across multiple different tables and join them all back together and we can do this using a join query that takes multiple tables and joins them together so the Syntax for a join query might look something like this and here we'll go back to just a two table setup where I have flights and passengers where every passenger is associated with one flight that you could extend this and join multiple tables to deal with our more complex example as well but here I'd like to select select every person's first name and their origin and their destination and I'm going to select that from the flights table but I need to join it with the passengers table and then I say on to indicate how it is these two tables are related to one another and in this case I'm saying the way these two tables are related to one another is that the flight ID column of the passengers table is associated with the ID column of the flights table the flights table has an ID that uniquely identifies every flight and the passengers table has a flight ID column that uniquely identifies the flight that we're referring to for this particular passenger and so the road result I might get is a table that looks like this that gives me everyone's first name but also their origin and their destination or origin and destination are going to be drawn from that table of flights and the first name is going to be drawn from the table of passengers but by using a join query I've been able to take data from two separate tables and join them both back together and there are a number of different types of drawing queries that I can run what we saw here was just the default join which is otherwise known as an inner join where effectively an inner join will take the two tables it will cross compare them based on the condition that I've specified and only return back to me the results where there's a match on both sides where we match a passenger's flight ID with an ID in the flights Table and there are various different kinds of outer joins if I want to be okay with the idea that maybe something on the left table that I'm joining doesn't match with anything on the right or so maybe something on the right table doesn't match with something on the left but just know there are other types of join queries that I can run as well other strategies that can be helpful when dealing with SQL tables are optimizations we can make to make queries more efficient and so one thing we can do with our tables is to create an index on a particular table and you can think of an index as kind of like the index in the back of a book for example where if you wanted to be able to search for a topic in a textbook you could open the textbook and just Page by Page look for every topic and just try and find the topic you're looking for but often what you'll be able to do if the table has an index is go to the index of the book find the topic you're looking for and that will quickly give you a reference for how to get to the right page in question in an index on a table operates in much the same way it is an additional data structure that can be constructed and it does take time and memory to be able to construct this data structure and to maintain it anytime you update the data inside the table but once it exists it makes querying on a particular column much more efficient that you can very quickly look something up in the index and find the corresponding rows that go along with it and so here we could have a command like create an index that we're going to call name index on the passengers table and in particular on the last name column to say something like I expect that as I query this table I'm pretty frequently going to be looking up passengers by their last name so I would like to create an index on that table to be able to more efficiently search for a passenger based on their last name as well and so that's just a general overview of what SQL syntax is all about a syntax that we can use to be able to create data tables inside of which restoring rows of data where every row consists of some number of columns and every column has a type you have the ability to create tables add data to them update delete and get data out of those tables as well but as we begin to introduce these new technologies there are always risks and potential threats that are associated with those Technologies as well and in SQL the key one to be aware of is what's known as a SQL injection attack a security vulnerability that can happen if you're not careful about how it is you actually execute your SQL commands and so where might this come about you might imagine for instance that if a database has some number of users you might be storing those users inside of a database for instance in a user's table where there's a username column and a password column though in practice you probably wouldn't want to store passwords in clear text let's imagine here for example that you are storing usernames and passwords inside of a table and we have a login form for a website that looks like this where you get to type in your username and your password and so someone types in their username and password what might happen is that the web application might look select star from users where username equals this particular username highlighted here we're just going to substitute the username right there and password equals and we'll substitute the password over there so someone tries to log into our site like Harry logs in with a password of one two three four five what we might do is run the select query and say select star from users where username is Harry and where the password is one two three four five and our logic might be if we get results back then that means there is a user whose username is Harry and password is one two three four five and we can go ahead and sign that user in but imagine now what might happen if instead the user who typed in a username of hacker quotation mark dash dash seems like a bit of a strange username to type in and it doesn't matter what they put in their password here now the result might be that what they plug into the username is where username equals hacker and then the dash dash it turns out Dash Dash and SQL stands for a comment in SQL it just means ignore everything that comes after it in the same way that in Python you can use the hashtag symbol to mean the rest of this line is a comment and the compiler whoever's running the program should just ignore it so everything after the dash dash kind of gets ignored and we've effectively been able to bypass the password check that someone could bypass a password check and log into an account even if they were unauthorized to do so so here the vulnerability within the SQL syntax if we're not careful about when we're running SQL syntax we could be running untrusted SQL commands that some hacker some adversary has been able to plug in to our program so how do we solve this sort of problem one strategy is to escape these characters escaping just meaning add some backslashes and just make sure that SQL knows to treat these as a literal quotation mark and a literal Dash and not as like special SQL syntax of any sort another strategy is to use an abstraction layer on top of SQL so that we don't have to write the SQL queries at all and that's in fact what we're about to do as we transition to the world of Django to take a look at how when we begin to use a web framework like Django we now have the ability to not worry about the nuances of the syntax of SQL and just deal a little more high level with what our models are what are the types of objects that we're dealing with and interacting with inside of this application one other concern worth noting about with regards to SQL is the possibility of race conditions and a race condition is something that might happen anytime you have multiple events that are happening in parallel threads so to speak that you have one thing happening and another thing happening simultaneously you might imagine that in the case of social media sites where you can like a post like an image on Instagram or a tweet on Twitter for example what would happen if two people tried to like the same post at the same time if we're not careful about how we run those particular SQL queries there's a potential for us to be able to get a race condition problems where we end up like trying to query for the number of likes that a post has and then another person tries to do the same thing and there are conflicts when we try and update it where the result might not be what we would expect it to be and there are a number of unexpected results that can happen when we deal with problems related to race conditions where multiple things are happening simultaneously how do we solve those problems well one strategy is to sort of place a lock on the database to say all right well I'm working on this database nobody else can touch this data let me finish this transaction so to speak finish working on this particular transaction and making all the changes I need to make to the database and only after I'm done I can sort of release the lock let someone else go ahead and modify the database as well the number of concerns to be aware of as we begin dealing in this world of SQL and trying to work with databases so now that we've taken a look at the syntax of SQL understanding how these tables work how they're structured and what it is that we can add to those tables let's go ahead and turn our attention in particular to Django models which are a way of representing data inside of a Django application because where Django is really going to get powerful in designing our web applications is the ability to represent data in terms of these models and so we're going to go ahead and try and create a web application that is going to represent like what an airline might want to store inside of its own web application as well all right so the first thing I want to do is create a Django project so I'll go ahead and type Django admin start project and the name of my project will just be called Airline I'm creating a project for an airline's website for example I'll go ahead and go into the airline directory open that up in my code editor but before I actually begin editing any code remember that every Django project needs to have one or more apps within it so the first app that I'll create for this Airline is I'll start an app for keeping track of flights so keeping track of flight related information like Origins and destinations and durations and what passengers are on those flights when I create a new app first thing I'll need to do is go into settings.pi inside of Airline and go ahead and add this app as an installed app right so flights is now an app that I've installed and then what I'll want to do is say go ahead and go into urls.pi which is again that table of contents for all the URLs I can get to for this particular web application I'll import include because I want to do is when someone visits the path of flights something I'll want to take them to flights.urls mapping them to the urls.pi file that will be inside of my flights application of course now I need a urls.pi file inside of my flights application so I go into flights and create a new file that I'll call urls.pi and we can do from.jango.urls import path from dot import views and then my URL patterns are going to go inside of this list right here but before I begin dealing with actual URLs the first thing I'm going to want to do is create some models models are going to be a way of creating a python class that is going to represent data that I want Django to store inside of a database and so when I create a model Django is going to figure out what SQL syntax it needs to use to a create that table but then B manipulate that table selecting and updating and inserting anytime I make changes to those models and so here what I can do is inside of every app that gets created in this case called flights there's a models.pi file one that we haven't looked at before but this is going to be the place where we get to Define what models are going to exist for our application every model is going to be a python class and you can think of this as having one model for each of the main tables we care about storing information about so let me Define a new class called flight that is going to inherit from models.model so I'm creating a new class called flight that is going to be a model and then I need to provide inside of this class all of the parameters that a flight has what properties does a flight have that I might want to keep track of well a flight has an origin and the origin is going to be a models.shar field and this is all documented on Django's website in terms of the various different types of fields that exist then I can include inside of a Django model where here I'm saying all right here is a character field whose max length is going to be let's say 64. I'll assume that most city names are not going to go longer than 64 characters that seems like a reasonable maximum length for the origin of the flight for example every flight will also have a destination which will be a character field whose Mac length is also 64. and every flight will have a duration which will just be an integer field so now this is my very first Django model it is a class called flight where I've defined all of the properties that a flight has and then using Django syntax to find what type they should have as well every flight has an origin has a destination and has a duration but of course nothing here has actually modified the database that Django is using in order to store information about my web application and we can see if we in fact go back to Airline and I type LS what you see here is that there isn't yet a database that exists I just have an airline directory a flights directory and a manage.pi file so what I'd like to do is somehow tell Django that you should update the database to include information about the models that I have just created and this is a process that we refer to in Django and more generally as migrations I create a migration to say here are some changes that I would like to apply to the database and then I migrate them to tell Django all right take those changes and actually apply them to the database so it's a twostep process one is creating the migration the instructions for how to actually go about manipulating the database and then one to take that migration step of saying now take those instructions and actually apply them to the underlying database we can make the migrations via command again we'll use the manage.pi script that has a number of different commands that allow us to control various parts of the application I'll use pythonmanage.pi and then make migrations and now what we see is we've created a migration inside of zero zero zero one underscore initial.pi where in this migration it's created a model called flight and so if I go ahead and look at the migrations directory I see this file has been created for me I didn't have to create it myself and what this file is is it is instructions to Django for how to manipulate the database to reflect the changes I have made to the model that here is an instruction to Django to create a new model called flight that has these particular Fields inside of it and it's basing this off of the changes that I made to models.pi the model that I added is now reflected in this migration and now if I want to apply the migration actually apply it to Django's database I can run python manage.pi migrate to go ahead and apply these migrations there are a bunch of default migrations that get applied as well but notice that one of the migrations that gets applied is this one here applying flight.0001 underscore initial to say let's go ahead and apply that migration create that table that is going to represent flights and if I type LS now you'll see that now I have a db.sqlite3 file a sqlite database that is going to contain a table that is going to store all of my flights and so how can I actually begin to manipulate this data how can I interact with these with these sorts of models I could use direct SQL syntax by opening up this database file and running commands but Django provides some nice abstraction layers on top of it so that I don't actually need to execute those commands myself I can begin to work more generally with python classes and variables and things that I'm used to inside the Python language so I can enter Django's shell where I can just run python commands by running python manage.pi shell and what this does is open up a shell or a console where I can begin to write python commands that get executed on this web application and the first thing I'd like to do is from flights.models let me just import flight so flights is the name of my app models is the name of that file I'm importing the flight class from that models file that I've just created and now what I can do is I can create a new flight I can say something like f equals a flight whose origin is New York and whose destination is London in his duration equals 415 minutes and then I can say F dot save to save that new flight that I have created and this syntax now and I'll go ahead and make it a little bit bigger so we can see it a little easier is my way of inserting data into this table I don't need to use an insert query in SQL I just have to write a python command and Django knows that when I create a new flight and save it that it should run an insert command on the underlying SQL tables where here I've created a new flight with this particular origin and destination and duration and I've gone ahead and saved that flight as well and if I want to query that flight get information about that flight I can say something like flight.objects.all is the equivalent of like a select all get me all of the flights that exist inside of my database and here I see I get back a query set which is just a set of results and here I have one flight that came back flight object one so a flight has been created for me with id1 now flight object one probably not all that helpful of a name it'd be nicer if this model had a cleaner way of seeing the name of a particular of a particular flight for example and it turns out we can do that that any model I'll go back to the code inside of models.pi any model can Implement double underscore stir function which returns a string representation of that particular object and this applies not just a Django models but to python classes more generally than if this function returns a string representation of the object let's go ahead and return a formatted string that is self.id I'll say self.origin to self.destination so here what I've said is that the string representation of any flight is going to be a string that gives its ID and then says all right origin to destination just a nice clean name that is going to represent this particular flight so now if I go back to the Shell by running python manage.pi shell I can say from flights.models import flight I can say all right let's let a variable called Flights be equal to flight.objects.all and now flight is going to be this flight flight 1 New York to London it now has a much nicer string representation of the name which just makes it a little bit easier to interact with if I wanted to get just that one flight I can say flight equals flights DOT first slice is a query set first gets me that first flight and so now I have this flight from New York to London and just as in any python object I can begin to access properties of that object I can say all right flight what is your ID flight what is your origin flight what is your destination flight what is your duration and I can access as values all of the properties of this flight that I ultimately care about and if I want to delete the flight I can say something like flight dot delete now ultimately though this is not the model that I actually want to represent my flight because here again I'm using a character field a Char field for things like origin and destination when in reality I probably like to use something like another table for representing airports and then some relationship between every flight and an airport so let's go ahead and try and Implement that idea now that I can go back into models.pi and create a new class I'll create a class called Airport that is also a model and I'd like for this airport class to have a code which is a character field with a max length of three for the airport's code as well as a city which would be a character field with a max length of 64. and let's also give this airport a string representation we'll say that the string representation of an airport will just be the city of the airport and then in parentheses the code of the airport so it'll be something like New York and then in parentheses JFK to represent a particular Airport and now our flight model needs to change a little bit no longer will origin and destination be character fields that are just throwing text but instead origin is going to be a foreign key a foreign key that references another table like the airport table and then I can provide some additional arguments so this alone would be enough but I can add some additional arguments like on delete equals models dot Cascade so what does this mean well when I have tables that are related to each other SQL needs some way of knowing what should happen if you ever delete something if I have a flight from JFK to London and I later in the later in time decide to delete JFK Airport from my database what should happen to that flight like what happens to flights when the thing that it is referencing gets deleted what models.cascade means is if I were to ever delete an airport from the airports table it's going to also delete any of the corresponding flights and there are other on delete parameters you can set for saying like don't even let me delete an airport if there are flights that are leaving from or going to that airport that's called models.protect but there are other ways of implementing similar types of constraints and the other argument that I'm going to provide is what's called a related name and a related name as we'll see in just a moment is going to be a way of me accessing a relationship in the reverse order that from a flight I can take a flight and say dot origin to get the flight's origin in airport but the other question I might want to ask is in the reverse order if I have an airport how do I get all of the flights that have that airport as an origin and so here if I give a related name to this foreign key Django will automatically set up the relationship going in that opposite direction and so here well if we have an airport and I want to know all of the flights that have that airport as their origin the reasonable name for a related name here is something like departures so if I have an airport I can access all of the departures which gets me all of the flights that are leaving from that airport and I'll likewise do the same thing here for Destination instead of a character field it's going to be a foreign key it's going to reference airport when we delete it we'll go ahead and Cascade it and the related name will be arrivals because if I have an airport I might want to access all of the arrivals all of the flights that correspond to flights that are arriving at that particular destination and so now I've done two things I've added a new class called airport and I've modified my existing flight model so this has changed in my python code but it hasn't yet changed in my database so in order to make the change in the database again it's a twostep process step one pythonmanage.pi make migrations to say look for any new changes that have been made to models.pi and go ahead and create a migration instruction for how to make those changes to the database here we see that we've created a new migration file and this migration is going to create a model called airport and it's also going to alter the destination field and alter the origin field on my flight model because as we know we've changed destination and origin to no longer be character Fields but to instead be references to a particular airport so that's something that's going to need to change in the database and to make that change I can run something like python manage.pi migrate to go ahead and apply those changes we've now applied this migration that we just created and our database is now up to date so what can we do well now I can go ahead and go back into the shell and I'll just go ahead and import from flights.models import Star import everything and I can now create an airport I can say something like JFK equals airport whose code is JFK and whose city is New York for example and then save that I can create a London one so lhr is an airport whose code is lhr and who city is London and I can save that you know you could create more I could say CDG equals an airport whose code is CDG and city is Paris and maybe we'll do one more we'll say nrt is the airport whose code is nrt and whose city is Tokyo for example so I've created and saved four airports that get added to my airport table and now I can add a flight f equals flight whose origin equals JFK whose destination equals London Heathrow and whose duration equals 415 minutes and I'll go ahead and save that as well so I've now created four airports I've created a flight and saved it if I type f just for my flight I see that all right this is a flight from New York to London but I can also say what is f dot origin and to write F dot origin that is now an airport object it's JFK in particular and I can do F dot origin dot City to get the city of the origin which is New York F dot origin dot code to get the code of that airport which is JFK and if I start with an origin something like JFK or London Heathrow I can say lhr dot arrivals to go ahead and Dot all to get all of the arrivals all of the flights arriving in London Heathrow and it looks like there's just one of them which is this flight that I've just created uh from New York that is going to London as well and so this now gives us the ability to manipulate SQL just by using these python models and I now have python classes that represent all of these various different types of data and now instead of running SQL queries like select star from flights or from airports I can just interact with these classes and these properties on the classes and Django takes care of the process for me of figuring out what the underlying SQL queries should be executing those queries and just giving those results back to me and we can begin now to design a web application around this idea that I can go into urls.pi and let's add a URL pattern that says you know the default route will go ahead and load the index view give it a name of index same as similar things we've seen from last time and now what should we do in the index view well the index view let's go ahead and say what I would like to do is just display a list of all the flights so I might from dot models import flight and airport or maybe maybe I just need flight I just want a list of all the flights so I'm going to import flight from all of my models and now what I'd like to do is return let's go ahead and render a template called flight index.html and give index.html access to a variable called Flights and what is that variable going to be equal to it's going to be equal to flight.objects.all to get me like all of the flights that I would like to put right here all right so what can I do from now now what I need to do is actually create those individual templates so inside of flights I'll create a new folder called templates inside of which I'll create a new folder called Flights inside of which I'll go ahead and create a layout.html much as we've done before where that layout is going to contain the basic structure of our HTML page so a head section whose title is flights and a body section that is going to have a block body and the end of the block much as before this is the default layout for this particular page and then I'll add a new template called index.html that is going to extend flight layout.html and then inside the body of the page I'm going to display an H1 that just says flights and let's now create an unordered list where I can now Loop over for flight in flights N4 to end the loop but inside the loop let me create a list item where I just print out like a flight maybe I'll print the flight and then flight dot ID to print out like flight one flight two flight three and then I'll print flight.origin to flight.destination so what I've done here is create a template that I'm going to give access to a variable called Flights where flights is going to be a variable that represents all of the flights that I query by running flight.objects.org that is my way using Django's API using the functions that it has given me access to to say take the flight and get all of the flights that are stored inside of Django's database then here in the template I'm looping over each one of those flights for each one printing on a list item where I can access properties of that flight say flight this ID from origin to a particular destination so now I'll go ahead and go into my terminal run python manage.pi run server which again is how we run a Django web application and now if I go to that URL slash flights this time because that's the URL what I see is exactly what I would expect to see an unordered list that just so happens to have flight 1 New York to London displayed there it is taking data from my database and now displaying it inside of this template and if I were to add new flights it would also update on this page as well so if I go ahead and go back go into the Shell pythonmanage.pi Shell I'll go from flights.models import Star let's go ahead and well all right let's add a flight from Shanghai to Paris for example well how do I get the airports for Shanghai and Paris well it turns out that if I want to get like Shanghai I can say like Shanghai equals airport Dot objects. and then I can say if I do airport.objects.all that gets me all of the airports for example oh and it seems I don't actually have a Shanghai one um but I can add one if I wanted to but if I do airport.objects.all that again gives me all of them but if I want to filter my Airport's list so not get all of the airports but just get some of them I can say airport Dot objects.filter and I can say like get me all the airports where um the city is New York for example and that is going to go ahead and give me a query set that only contains the results that I care about so again airport.objects.filter lets me constrain the results that come back not get me all of the airports but only get me airports whose city is New York for example and it owns only giving back one so I could say dot filter City equals New York DOT first to say take that query set and just get me the first and only thing in that query set and that gives me Airport New York a simplified way of doing the same thing if you know you're only going to get one result back if I can say something like airport.objects.get which will only get one result if it knows that there's only going to be one airport with the city of New York that too will return to me New York JFK Airport but it will throw an error if ever there's more than one or if there's none for example so we'll go ahead and save that inside of JFK and we'll go ahead and create a flight that is going uh from New York to Paris for example I can do CDG equals airport.objects.get City equals Paris and now I have this variable CDG which represents the airport Paris and if I want to create a new flight that goes from New York to Paris I can say f is going to be a flight whose origin is JFK whose destination equals CDG and whose duration equals 435 and I can save that flight as well and so I've added a new flight and so now if I run the server pythonmanage.pi run server refresh the page I now see that I have two flights one flight that's going from New York to London one flight that's going from New York to Paris but of course it's going to be pretty annoying if every time I want to update the data adding new data manipulating the data I need to go into the shell in order to run direct commands that are able to add new flights add new airports so on and so forth what I'd really like to be able to do is just very simply to add it via a web interface via the web be able to say all right let me add a new flight that goes from location one to location two and it's possible using the information we know now to build a web page that does just this but Django is built on this idea that it doesn't want you the programmer to have to repeat work that other people have already done and this process of trying to Define models and very quickly be able to create and edit and manipulate models is so common the Django has already built for us an entire app that is just designed for the manipulation of these models and it's known as the Django admin app and this is an app that we've seen traces of already that if we remember that urls.pi file from inside of our application we saw that we added a path for our own app but there was already a path given to us by default slash admin that takes us to the admin app as well and so in order to use the admin app we need to create an administrative account inside of our Django web application and the way to do that is via the command line I can run python manage.pi create super user it's going to ask me for my name I'll go ahead and type in my username my email address and it's also going to ask for a password I can just make up a password that I would like to use retype it in just to confirm it and now Django has created a super user account for me in this web application so that I using these credentials have the ability to visit the web interface for the admin app and actually manipulate some of these underlying models so in order to do this the first thing I need to do is take my models and add those models to the admin app so inside of models.pi I have a class called airport and a class called flight and if we look at the files I have there's another file we haven't really looked at yet called admin.pi inside of my app and inside of admin.pi I'll first from my models import flight and Airport and now I'm going to say admin.site.register airport and admin.site dot register flight and what this is going to do is it is going to tell Django's admin app that I would like to use the admin app to be able to manipulate airports and to be able to manipulate flights as well and so let's take a look at this admin app and see how it actually works I can run python manage.pi run server that will start up the web server I'll now visit this URL instead of going to slash flights I'll go to slash admin and this opens up this Django Administration app that's not written by me Django has written this and it's asking me to log in I'll go ahead and log in using those credentials I used a moment ago typing in my username and password and what I get here is Django's site Administration interface Built For Me by Django where I didn't need to design this at all but importantly if we notice down here I now have the ability to add and manipulate airports and flights via this web interface this Django administrative interface so now using this interface I have the ability to manipulate the underlying database to manipulate my models to add and modify data that already exists so if I click on airports for example I see here here all of the airports that I've already added to my database Tokyo Paris London and New York and I can add a new one I can say let's go ahead and add PVG which is Shanghai and I can either save it save and continue editing save and add another I'm going to add a couple so I'll go ahead and save and add another let's go ahead and add Istanbul airport as well let's add a Moscow that's an airport 2 and maybe one more we'll add Lima as well and I'll just go ahead and click save and now I've added a whole bunch of airports all via this web interface Django was originally created for like news organizations that very quickly wanted to be able to post articles and post new posts on their website and it made it very easy via an interface like this to very quickly just say like here add a new article and here's the content of the article to be able to display in a page and now we've been able to very quickly add new airports to our website as well and so if we want to add flights well we can go ahead and go back home I'll click on flights I see that I already have two flights inside of my database I have New York to London and New York to Paris I'll add a new one it's letting me choose an origin destination and duration and Django knows that the origin must be an airport so it's going to give me the opportunity to just choose an airport where I can say Okay Shanghai is the origin uh the destination is going to be Paris and the duration is going to be like 760 minutes for example so now using Django's admin interface I've been able to add a number of different flights and a number of different airports and if I go back not to the admin app but to my flights app the app that I wrote myself and go back to flash flights now I actually see all of the new flights that I have added to my database via Django's admin interface I added them to the admin interface and now I see this flight from Shanghai to Paris I see this flight from Paris to New York as well and so now what I might like to do is begin to add some more pages to this web application make this web application a little more sophisticated by maybe giving me the ability to like click on a particular flight to view details about that flight what I'd like is for every flight to have its own page not just slash flights for all the fights but slash flight one for flight id1 Flight 2 for id2 so on and so forth what I can do in order to do that is go back into urls.pi and create a new path we'll create a path where I'm going to specify a flight ID which would be an integer when I do let's go ahead and load the flight view whose name will be flight and now I need to just go to views.pi and add a function called flight so I'll go back go into views.pi in addition to an index function we'll Define a flight function that accepts as an argument a flight ID so now what is this flight function going to do well the first thing I need was actually need to do is actually get that flight I can say flight equals flight.objects.get me the flight whose ID is equal to flight ID for example or alternatively Django also lets you say PK instead of ID is a more generic way of referencing the primary key for whatever the primary key happens to be called the PK in this case is just the ID but then what I can do is render a template like flight flight.html and pass as input to that the flight so we're passing it this flight to flight.html and now I can create a template create a new file called flight.html which is going to also extend flight layout.html using that same HTML layout and inside the body of the page let's just say something like in big we'll say flight flight ID and then maybe an unordered list where I can say something like the origin is flight.origin the destination is flight.destination and the duration is flight dot duration so now I have a page that displays flight information about any particular flight and if I go ahead and load not slash flights in my web browser but flash flight one for example will now have information about flight number one and Flash Flight 2 gets me information about flight number two querying for that particular flight then printing out its origin destination and duration now there's some error checking that we probably should do here if I try and access a flight that doesn't exist something like Flight 28 for example I'm going to get some sort of error that it does not exist there flight matching query does not exist I might like to control what happens in that situation A little better so you might imagine adding some additional error checking to handle those cases as well but we'll leave it at this just for now but now let's go ahead and add the ability not only to have flights that have airports associated with them but let's also add passengers to our flights as well to be able to represent passengers that might actually be on these flights too so I'll go ahead and go back into models.pi and in models.pi in addition to an airport class and a flight class let me create a new class called passenger also going to be a model and what properties does a passenger have well passenger has a first name which will go ahead and make a models.char field whose max length will put at 64. and a last name max length equals 64. and passengers also as we described before they have a manytomany relationship with flights that a flight could have multiple passengers a passenger could be on multiple flights and ultimately we need an additional table to keep track of this but we can think a little bit more abstractly here in Django and just say that every passenger has flights associated with them which are a models dot many too many field with flight so every passenger could be associated with many flights we'll say blank equals true to allow the possibility that a passenger has no flights maybe if they're not registered for any flights at all and we'll also give this a related name of passengers meaning if I have a passenger I can use the flights attribute to access all of their flights and likewise if I have a flight I can use this passengers related name to access all of the passengers who are on that flight and we'll see how that'll be useful in a moment too the string representation of a passenger we'll just go ahead and be their first name space their last name which feels like a reasonable way of representing a particular passenger and now I need to apply these changes I need to say python manage.pi make migrations because I've made new changes to my model I've created a model passenger in particular and now if I do python manage.pi migrate now I've applied those changes to my actual database and if I go into admin.pi so we'll go into admin.pi and register not only flight and airport but passenger admin.site.registerpassenger then now via the admin interface I can manipulate passengers as well I can say python manage.pi run server to run my web server go to my web server's admin view by going to slash admin go down to passengers and let's go ahead and add a passenger where I can say all right first name Harry last name Potter and we'll go ahead and put him on flight one and flight three maybe he's on two different flights for example and you can hold down command or control to be able to select multiple flights and we'll go ahead and save that Harry Potter has been added successfully and let's add a couple of other passengers We'll add Ron Weasley and we'll add another We'll add Hermione Granger and we'll add Ginny Weasley as well so we've added a number of different passengers that now all exist in Django's admin interface and now what I'd like to do is on the flight page display information about which passengers happen to be on any given flight so the way I might do that is by going into views.pi and on the flight page in addition to giving access to the flight let me also give it access to passengers so passengers this template is going to get access to and we get passengers by saying flight dotpassengers dot all and the reason we can do this is again because passengers is that related name it is our way of taking a flight and getting all of the passengers that happen to be on that flight and so now inside of flight.html I can add something like let's add an H2 called passengers where here I'm going to Loop for passenger in passengers go ahead and display that passenger just print out that passenger inside of a list item and in Django I can say if the list is empty let's just have a list item that says no passengers meaning nobody is currently on this flight so now my web server is still running I can go back to slash flights here are all the flights and if I go to slash flight one I now see that on flight one Harry Potter is a passenger on that flight but if I go to Flight 2 all right no passengers are on that flight either and now it's been a little Annoying that I've had to do everything by using the URL here to be able to go back and forth between pages I could link to those pages if I want to and the way I might do that is let's on the flight page add a link that goes to the URL index that says something like back to flight list Maybe so here's now a link that takes me to the index View and likewise I can go into index.html and for each of these list items each of these list items is really going to be a link that links to it's a URL to a particular flight and the flight route takes as a parameter of flight ID and so inside this URL substitution here I can specify use flight.id as the ID of the flight that I would like to use here and so now I've put every single flight inside of a link that takes me to the flight route but because the flight route requires as an argument the flight ID I can specify the flight ID here and so now if I go back to flash flights I now see a list of flights where every flight is in fact a link that can take me somewhere else and so now I can click on any one of those links like New York to Paris and that takes me to the flight page I can click back to flight list that takes me back to the flight list click on another flight and go to that flight as well so I've now been able to come up with this way of linking these pages together by having links in each of the various different pages that take me to some other route as well and so now what I might like to do is in addition to displaying all the passengers on any particular flight also give myself the ability to add passengers to a flight as well which feels like a reasonable thing that I might want to do inside of this web application and so how can I go about doing that well in order to do that I'm going to need some new route that lets me book a flight for a particular passenger and so I'll go ahead and go back to urls.pi and inside of urls.pi I'll add a new path that will be int flight ID slash book an inflight ID slash book is going to let me book a flight for this particular flight ID for flight one or Flight 2 or flight 3 or so forth when I do we'll go ahead and go to the book View and we'll name that book and so now I need to implement the book View so how is this view going to work I'm going to define a function called book that is going to take this argument not only the request but also a flight ID the first thing as with before is I want to get the flight ID but remember from before that there are multiple ways that I can request a web page I can request a web page via the get request method which means I would just like to get this page or I can request a method via post meaning I would like to send data to the page and generally speaking anytime you want to manipulate the state of something especially manipulating our database that should be inside of a post request I'm submitting some form some data and in response to that post submission you should manipulate what's going on inside of the database so we're going to check when this book route is called upon if request method is post then we want to perform some sort of action flight in question is just going to be flight.objects.gettheflight whose primary key is that flight ID and then what I'd also like to do is associated with the form when someone submits this form to like book a new passenger on the flight they should tell me what the ID is of the passenger like what passenger should I book on this flight because those are the two pieces of information you need to know in order to actually book a flight you need the flight and the passenger information so let's assume for now that the information is going to be in request dot post and then in square brackets passenger what this means is that the data about which passenger ID we want to register on this flight is going to be passed in by a form with an input field whose name is passenger the name on any particular input field dictates what name we get receipt what is received when a route like this book route is able to process the request from the user so we'll go ahead and take that information and because by default this might be a string let's go ahead and convert it into an integer just to make sure we're dealing with an integer and let me say that the passenger in question is going to be passenger.objects.get PK equals this whole thing so now what I've done is if the request method is post meaning someone submitted this form via the post request method I'm first saying flights.objects.get to get a particular flight get me the flight with that flight ID and then I'm getting a passenger which passenger am I getting the one who's PK their primary key otherwise known as ID is equal to whatever was submitted via this post form with a name of Passenger and we haven't yet created that form but we'll do so in just a moment now ultimately we'll want to add some more error checking to this as well like what if someone requests a passenger that doesn't exist or a flight that doesn't exist either so there's definitely some error checking that we probably should be doing here but for Simplicity let's just assume for now that we're able to get a flight and get a passenger well how do we access the passengers flights I can just say passenger dot flights and in order in order to add a new item to Sunset like flights I can just say passenger.flights.add flight and this will do the equivalent of adding a new row into a table of keeping track that the passenger is on that flight but the nice thing about Django's abstractions is that I don't have to worry about those underlying details I don't have to worry about what the structures of the tables are I can think at a much higher level and just say take this passenger take their set of flights and go ahead and add a new flight to that set of flights and when all that's said and done what I probably want to do is return some sort of redirect that redirects the user back to the flight page so we'll go ahead and return an HTTP response redirect what URL would I like to take them to well I'd like to take them to the flight route and reverse again takes the name of a particular View and gets me what the URL is and we saw that last time and the flight route takes an argument so I need to pass as an argument the flights ID so I need to provide it to the flight route what the flight's ID is structured as a tuple and that is going to redirect me back to the flight route so that I can see that flight page again and what I need to add up at the top here is from django.http import HTTP response redirect in addition to from Django dot URLs import reverse and so those I'll need to add as well so that I can redirect the user back to the flight page after they're done submitting the form and reverse takes the name of a particular view as defined in urls.pi something like index or flight or book and gets me what the actual URL path should be and as we talked about last time that's helpful so that I don't have to hard code URLs into my Django web application I can just reference URLs by their name and If Ever I need to change a URL I can just change it in one place in urls.pi and that change is going to reflect everywhere else as well so now the next thing I need to do is actually create this form that what I have so far is just a function called book that is waiting for a post request to be made to it and when a post request is made to it then we're going to go ahead and submit this form and go ahead and add the flight for this particular passenger but what I'd like to do now is actually add that form so I'll go back into templates go into flight.html and what I'd like to add here is a form I'll go ahead and label it with an H2 called add passenger and we'll create a form whose action is going to be URL of book so we're going to go to the book route and again if we recall the book route in urls.pi the the route with name book this View requires as a parameter some flight ID so I need to provide the flight ID as an argument for what flight I'm booking the passenger on and it just happens to be flight.id because this template has access to a variable called flight the method of this submission is again going to be post and recall from before that whenever I have a form in Django I need to give it the csrf token just for security to make sure that Django knows it's really this application that is submitting this form we'll go ahead and add a drop down list which you can create in HTML using a select field the name of this select field is going to be passenger and the reason for that is inside of views.pi when I get the passenger I'm looking for inside the post data inside of request.post for a field whose name is passenger and so that is what I would like the name of this drop down to be and inside of a select drop down we have a whole bunch of options options that we can choose from and there's going to be one option for everyone who isn't a passenger on this flight and so how do I get everyone who isn't a passenger on the flight well it seems that right now the flight page only has access to actual passengers and doesn't yet have access to people that are not passengers on the flight so it sounds like I need to add some additional context to this template additional information that we want access to so I'll go ahead and give the slight access to additional information that we'll call like nonpassengers for people that are not on the flight and how do I get nonpassengers well just as I could say passenger.objects.filter to only get passengers that match a particular query there's also a way in Django to say passenger.objects.exclude to say exclude passengers that satisfy a particular query so I want to exclude passengers who among their flights have this as one of their flights and so what does this actually mean well it means that when I render flight.html there's a couple pieces of information that it should have it needs to know what flight is being rendered it needs to know who is on the flight who are the passengers but if I want a drop down where I can choose from all the people who aren't already on the flight like I would like to register you for this flight well I also need all of the nonpassengers passengers accept excluding the ones who are already on the flight and get me all of them is what that dot all is ultimately saying and so using that I now have access to this variable called nonpassengers that I can use as I'm constructing this page so back on flight.html I can say for every passenger in nonpassengers let me create a option that I can choose from and the options value is going to be the passenger's ID because ultimately when I submit the form what I care about getting is what is the ID of this passenger that I've chosen from this drop down but of course the user who's looking at this page they don't want to see people's IDs they want to see people's names so inside of the option tag we'll go ahead and just print out the passenger's name and we'll see in a moment what all of this actually looks like in terms of HTML so now that I've created this form I'll also need at the bottom to add an input whose type is submit to let myself submit this form to let's now try running this application it looks like there's a slight error where I said view.book instead of views.book views is the name of the module since it's in a file called views.pi and now looks like my server is running okay I can go back to slash flights let me get one of the flights like New York to London flight number one and all right name error name passenger is not defined this is how Django renders to me errors that are occurring in IPython code looks like it just means inside of views.pi I'm referencing passenger but I never imported it so up at the top I'll go ahead and import passenger as well now it seems that my web application is working okay so now hopefully I refresh this page I see flight information I see passengers and I also down at the bottom now see an add passenger section with a drop down list where I can click on it and see all right here are the three people that are not already on this flight and so if I want to add like Ginny Weasley to this flight I can click Jenny Weasley click submit and that submits the form and I'm redirected back to the same flight page now Harry and Jenny are both on the flight and then the add passenger list I see Ron and Hermione that's the options for me there and so using Django's models I've been able to very quickly build up a reasonably sophisticated application an application that has models that displays that information to me and lets me manipulate that data and that data is ultimately stored inside of a SQL database and one of the big powers of Django that it really gives to me is this admin interface that I ordinarily might have had to spend a lot of time designing a web interface that just lets me do things like take some person and go ahead and update like what is their name what flights are they on and the ability to very quickly add and delete and edit the models is something that in a web application could take quite a lot of time to be able to build from scratch but Django very fortunately gives all of that right to me and this admin interface even though it is designed by Django it's very customizable in terms of things that I can do on this admin interface if I want to manipulate it in certain ways in order to add additional features to it as well so we'll see a couple brief examples of this if I go into admin.pi here is my configuration for Django's admin interface and I can say I would like to configure the admin interface in a particular way that in a flight for example by default all I saw was like the flight's origin and destination if I want to be able to see more information about a flight I can say go ahead and give me a class called flight admin which is going to be a subclass of model admin where I can specify any particular settings that I want to apply to how the flight admin page is displayed so I can and all this is documented on Django's website and you just have to read it to be able to know what configuration options are available to you but I can say in the list display when you list all the flights and display them all to me what Fields should I have access to we'll go ahead and show me something like the origin and the destination and the duration and maybe also show me the ID for example so I want to see all of this information when you load a flight and when I register the flight I'll say register this flight but use the flight admin settings when you do so so I can specify I would like to use these particular settings when you view the admin interface and so now if I go back and go ahead and click on flights then now in this list display whereas before I only saw IDs and Origins and destinations now I can configure it to show me all of the IDS and Origins and destinations and durations as well I've been able to configure this display to work the way I would like it to and there are other configurations you can do as well one that I quite like to use is if I want to update my passenger admin so when I'm editing a passenger you can have a special way of manipulating many to many relationships inside of an attribute called filter horizontal and if I use a horizontal filter on flights this will just make it a little bit nicer for manipulating the flights that a passenger is on and again the specific syntax of this not as important as the idea that these are all just configurable settings that Django has documented that you can look at to see how to configure the admin interface to work exactly the way you want it to work and so now if I go back home and go to passengers and maybe click on a passenger like Harry Potter I now see this horizontal filter which is a very nice way of being able to manipulate flights that the person is on I see on the left list of their available flights that I could add them to on the right a list of their chosen flights flights that they're already on and it becomes very easy for me to just take a flight and double click on it to Move It from an available flight to a flight that they're on and vice versa just very quickly being able to control and manipulate these models and this is all stuff that Django just gives to you right out of the box so Django now has given us a lot of features the ability to represent models very succinctly a migration method for being able to very quickly apply those changes to our database and the last thing we'll take a look at is this idea of authentication that on many websites we want some method of authentication some ability for users to be able to log in and log out for Django to remember who a particular user happens to be and what we're going to do now is introduce an application that lets us interact with this authentication method because Django has a whole bunch of authentication features built right into the framework that we can take advantage of so that we don't need to rewrite all the logic for how do you log someone in and what does it mean to represent a user Django has done a whole lot of that for us so we'll go ahead and create an application to do that now all right so let's go back into my terminal now and now I have this Airline project inside of which is one app called Flights and I'd like to now create another app that's going to maintain users inside of this application so I'll go ahead and run python manage.pi start app users which just be an app that's going to allow me to represent users as of before when I create a new application I'll need to go into settings.pi add users as one of the installed apps inside of this project and they'll go into urls.pi to say I'd also like when I go to like users we'll go ahead and include users.urls so all the URLs that are associated with my users application now I'll need to actually create those URLs so I'll go ahead and go down into my users application create a new file called urls.pi inside of which is the same as what we've normally seen inside of these URLs files I need to import path import My Views and then Define some URL patterns where here what I'd like to do is Define One path that takes me to views.index and we'll call this one index then I'll create another path that takes me to login called the login View and the name will be login and we'll have another path called log out for a function called logout view that will be associated with it so we'll effectively have three different routes one main index route that's just going to display information about the currently signed in user one route for logging someone in a form that will display the place where they can type in a username and password to log in and then one route to allow users to be able to log out from this application as well so let's go ahead now and actually write these functions we need one function called index one function called login view one function called log out View so I'll go into views.pi and we'll start with index and so what does the index function need to do it's going to display information about the currently signed in user that I sign into this website and then I'm presented with the index page but as we think about this programmatically we first need to think about what should happen if someone tries to access this page but they're not authenticated how would we even find that out and what do we do in that situation well let's say if not request.user DOT is authenticated the request object that gets passed in as part of the request to every user in Django automatically has a user attribute associated with it and that user object has an is authenticated attribute that tells us if the user is signed in or not if they're not signed in we'll go ahead and HTTP response redirect them to the login View and in order to make this work I'm going to need to from django.http import HTTP response redirect and likewise from django.urls let's go ahead and import reverse as well so if the user is not authenticated then we're going to redirect them to the login view where what is the login view going to do well the login view for now let's just go ahead and render users login.html some form where the user can log themselves in we'll need to create some templates I'll create a templates folder inside of which is a users folder inside of which we'll just create a basic layout as we've done multiple times now this is again going to be the general structure for pages in this app title will be users and the body will just have a block called body that I can later fill in with other content and now that I have this HTML layout I can go ahead and create a new file called login.html where login.html will extend users layout.html and inside the body block I can just display an HTML form so I can say something like I would like for there to be a form whose action when I submit the form let's go ahead and still go to the login URL but let's do so using the post request method again I'm logging in I'm submitting a form generally when you're doing that you want to submit form data via post especially in the case of username and password because if you do this sort of thing you don't want the username and password to be passed in as get parameters because those show up in the URL our form will have our csrf token for security as before an input whose type is text whose name is username and just for user friendliness let's give it a placeholder also of username so the user knows to type in their username here we'll also have an input whose type is password whose name is also password and when an inputs type is password that just means our HTML will know in the browser that Chrome or Safari or whatnot will know to show the password as dots instead of as characters and we'll give that a placeholder of password and then an input of type submit whose value is log in so we now have the ability to log in so if we go ahead and run this program python manage.pyrun server we should see users.views has no attribute login view all right it looks like I called this function login request it should actually be called login View and I'll also need a function called log out view but I haven't implemented that yet so I'll just go ahead and say pass for now but I'll come back to that later to implement the logout View all right so it looks like my web server is running now and before I actually go to the login page let me first go back to the admin page and actually just create some users I can go to users and then add and let's add a user the username will be like Harry for example and we'll go ahead and give Harry a password and we'll go ahead and save and add another let's add maybe Ron as well uh go ahead and add him we'll go ahead and save that and these users they can have additional information associated with them I can give Ron a name like Ron Weasley Ron Weasley example.com this is email address there are a bunch of default fields that Django gives you for manipulating users and you can take these users and go ahead and add to those fields if I want to giving them a first name last name email address and whatnot and you can also customize these fields as well if you'd like to add custom fields that you would like to keep track of with regards to your individual users and I will go ahead and log out from Django admin now because I don't need it anymore but now if I go to slash users I'm not authenticated so what I see is a login form that just looks like this a place for me to type in a username and a password and of course now you can type in like Harry's username and password but I haven't yet implemented the processing of that data yet so let's go ahead and do that now we'll go ahead and go back to views.pi in the login view there are two ways the login view function could be called one is via the get request method meaning just show me the login form and one is via post submit data to the login form as well so if the request method is post well then let me first get the username which will be inside of the post data in a field called username and let me get the password which will be in a field of in the request.post inside of password and now what I'd like to do is try to authenticate this user and how do I go about doing that well it turns out there are a couple of functions that Django has given to me that I can import so from django.contrib.off auth for authentication I'm going to import three functions we're ultimately going to use one is authenticate that checks if username and password are correct one is called login one is called log out and I can now use those functions inside of this login view here after I've gotten the username and password I'd like to authenticate the user check if the username and password are correct so I'll go ahead and say user is equal to authenticate request username is the username password equals password and so authenticate as a function just takes the request takes a username takes a password and if the username and password are valid they give me back who the user actually is and as long as the user is not none that means the authentication was successful and I can go ahead and log the user in how do I log the user in I use the login function that Django gives me logging in with this request this user and now I can go ahead and redirect them HTTP response redirect the user back to the index route back to the original route that the user started out as and so that's if the user is not none if the authentication was successful but otherwise if the authentication failed what should I do well let me go ahead and render the same users login page again but let me add some additional context the context will be a message that says invalid credentials and now inside of login.html I can just add some logic that says if there's a message then go ahead and display that message inside of a div and then endif to end that so if there is a message we'll see the message printed otherwise we won't see it at all so now if I go ahead and refresh the login page nothing seems to have changed but let's say I type in a username that doesn't exist Hermione and some password and I log in well then I get this error message invalid credentials we were not able to log the user in so what happens if we do successfully log in well then the user is going to be taken to this index route and it looks like now we need to finish off this index route what does the index route do well let's go ahead and return render a template called users slash user.html and inside of user.html we'll go ahead and display some information about the user we'll still extend user slash layout because we're going to use the same basic layout but in the body of this page the information I want to show is I want to say like welcome and then like Harry or welcome Ron or whoever the user happens to be and it turns out inside of Django templates I have access to the request that was used to make this HTTP request which means I also have access to request.user who is the user associated with that request and if the user has a first name I can access request.user.firstname and in addition to that I can display other information maybe like their username is request.user.username and maybe their email address is request.user.email and so I can show the user information about them such that if like Harry logs in for example I sign in as Harry sign in with Harry's credentials click login well then Harry sees a page that says welcome Harry Harry is logged in they are request.user and using that information we can access first name username and email as well just by accessing properties of request.user now last thing we need to add which still doesn't yet exist is a way to actually log the user out and it turns out that just as Django has a login function Django also has a logout function that handles logout for us so we don't need to implement it ourselves so all our logout view needs to do is make a call to this logout function and then figure out where should the user go after they've been logged out and you know what let's go ahead and take them back to the login page with a message of logged up to indicate that the user has now been logged out then in user.html we'll go ahead and add a link that will go to the logout route that just says log out for example so now when Harry goes back to Harry's page Harry sees a URL that says log out if Harry clicks log out Harry gets logged out is brought back to this page because now request.user.is authenticated is going to be false there is no authenticated user and so they now see just the default login page and if now Ron were to log in for example using Ron's username and Ron's password logging in then Ron nasi's information associated with him as well so Django gives us a lot out of the box gives us the ability to represent these models and admin interface to be able to manipulate them a migration system that allows us to very quickly make changes to our models and apply them to our database and also a builtin user authentication system A system that allows us to very quickly enable users to be able to log in log out from our web application as well so all of this are features that just helps to make it so that we can very quickly take advantage of things like SQL and models and migrations to build Dynamic interesting web applications with data to back them up this was web programming with python and JavaScript we will see you next time thank you foreign welcome back everyone to web programming with python and JavaScript and today we turn our attention to the second of the main programming languages that we'll be looking into this class in particular JavaScript and to get an understanding for why it is that JavaScript is actually helpful let's go back and revisit this diagram of what communication over the internet will generally look like oftentimes we'll have a user otherwise known as the client using their computer on their web browser whether that's Chrome or Safari or some other web browser that sends an HTTP request a web request to some sort of web server that server then processes that request and then returns some sort of response that comes back to the client thus far all of the code that we've written the python web application code running in a Django web application for example has all been code that runs on some sort of server code that is listening for requests doing some computation in order to process that request and then generating some sort of response usually in the form of an HTML template that we then send back to the client what JavaScript is going to enable us to do is to begin to write clientside code JavaScript is going to allow us to write code that actually runs inside of the user's web browser on the client and this can be useful for a number of reasons one if there's computation that we want to do but we don't need to go out and reach out to a server in order to do so we can do the computation potentially faster just by running the code exclusively on the client and in addition to that we can begin to make our web pages a whole lot more interactive JavaScript is going to give us the ability to directly manipulate the Dom where again the Dom is the document object model that treelike hierarchy that represents the web page that the user happens to be looking at so JavaScript will enable us to write code that directly manipulates the content on the web page and we'll see how that can be quite powerful very soon so how do we then use JavaScript inside of a web page in order to add some code add some programming logic to a web page well so far we've already seen HTML the language we use to describe the structure of a web page where an HT tml page just describes the structure of a page in terms of nested tags we had those head tags at the top of the page the body tags that describe the structure of the page and then additional tags that could be nested within those and in order to add JavaScript to a web page it's as simple as including some script tags that are often located inside of the HTML page itself when we use these script tags we're telling the browser that anything in between these script tags should be interpreted in this case as JavaScript code that the web browser is then going to execute so our very first program for example might just look like a line of code inside of those script tags something like this where alert for example is the name of a function a function that's going to produce an alert and then just as it functions in Python functions in JavaScript can take arguments so in between these parentheses we have an argument something like the string hello world the text that we would like to display to the user so let's go ahead and give this a try and see how we can actually use this code to write JavaScript that is going to run inside of the user's web browser I'll go ahead and create a new file that we'll call hello.html and inside of it I'll include the same basic HTML structure that we've already seen before where I have a head section that has a title and then a body that maybe just says hello for example and so now what I'd like to do is add a little bit of JavaScript to this web page so in the head section of my web page I'm going to go ahead and add a script tag we're in between these script tags now I can write JavaScript code code that is going to be written in JavaScript that will run inside of the web browser when the user actually opens up this page and for now I'll just say alert and then hello world it turns out in JavaScript you can use either single quotation marks or double quotation marks in order to represent strings I'll generally use single quotation marks here just by convention so here I'm running a function called alert that's going to display an alert something like Hello World to the user and that's going to be inside of the script tags of this HTML page so now if I want to actually open the page up I can open hello.html or you can just visit it inside of your web browser whether it's Chrome or something else and now at the top of the page what you'll notice is that I get a little bit of an alert some interaction where it says this page says hello world and it gives me an option to like press a button for example like hello like the OK button that'll say all right dismiss the alert now and this is our very first example of JavaScript we have a function called alert built into JavaScript for our web browser and our web browser knows that when we call the alert function the browser should display an alert message that looks a little something like that and if I click the OK button to dismiss the alert then we go ahead and get back the original page that I had from the beginning and so now we can begin to imagine that using this ability to programmatically display alerts that we can add additional features to our applications as well and one big area where JavaScript can be quite powerful is with event driven programming and what event driven programming is all about is thinking about things that happen on the web in terms of events that happen what are some examples of events events are things like the user clicks on a button or the user selects something from a drop down list or the user Scrolls through a list or submits a form anything the user does can generally be thought of as an event and what we can do with JavaScript is add event listeners or event handlers things that say when an event happens go ahead and run this particular block of code or this function for example and using that we can begin to allow our JavaScript code to respond to how the user is actually interacting with our web page to say when the user clicks on a button I would like to run this particular JavaScript function for example so let's go ahead and give that a try I'll go ahead and now instead of just saying alert hello world let me put this alert inside of a function and to create a function in JavaScript you just use the keyword function followed by the name of the function I'll call the function hello for example and then in parentheses any inputs that function takes this hello function is not going to take any input so I'll just use an empty set of parentheses and then inside of curly braces I include any of the code that I want to run in this function and so what I've done here now is create a function called hello and then inside of the curly braces I've defined the body of the function what code should run when I run the hello function and what the hello function should do is it should display an alert that in this case says hello world so now what I'd like to do is get this function to run when something happens on the page for example when a user clicks on a button so to do that the first thing I'll need to do is actually create a button so add a button that just says like click here for example so now if I refresh this page I now see that I have hello and I also have this button that says click here but when I click here like nothing happens I'm clicking the click here button but it's not changing anything because I haven't yet said what should happen when the user does click on this button and so one way we could do this is by adding an attribute to this HTML element called on click what this is going to do is it's going to add an on click Handler to this button it's going to say what should happen when the user clicks on this button and I'm going to set the on click attribute equal to running the function hello and in order to run a function in JavaScript just as you ran a function with python you use the name of the function followed by a set of parentheses to say go ahead and actually run this function using those parentheses calls the function another word for running the function and the fact that there's nothing in between the parentheses means we're not providing anything of input to the hello function though if the hello function did take inputs we could certainly add that in between the parentheses so now I've tied the two pieces of this page together I have a button that says click here and I've added an on click Handler that says that when you click on the button you should run the hello function and then up above I've defined the hello function to say what should the hello function do well when the function is called we're going to display an alert then in this case says hello world so now we should be able to refresh the page we still see the same thing at least initially where it just says hello and a button that tells me to click here but now if I go ahead and click the button that says click here well then I get the alert that says this page says hello world I can press OK and this event handler is always going to work I click the button again and I get the alert a second time because every time I click the button it's going to call the hello function again and when I click the hello when the hello function runs it is going to display this particular alert so this now appears to give us a fair amount of power and much as in other programming languages languages like python or other languages you might have worked with JavaScript has all these same types of language features so far we've seen data types things like a string but we also have other data types that we'll take a look at soon too we've seen functions some functions that are built into JavaScript like the alert function and other functions that we can write for ourselves functions like hello but we also have the ability to include things like variables inside of our program as well so what might that look like I'll go ahead and create a new file the we'll call counter.html and counter is going to have some of the similar code to hello so I'll just go ahead and copy it for now but I'll clear out the script section change the title from Hello to counter and now inside of get rid of the button or actually I'll keep the button but instead of saying click here the button is going to say count I'd like to create a program that just counts for me from 0 to 1 to 2 3 4 so on and so forth and now in order to do that in order to have some way of counting repeatedly zero one two three four five I'm going to need to have some sort of variable inside of my program something that is keeping track of data like the number that I'm currently have counted to so in order to do that in JavaScript I can say something like let counter equal zero this is the way in JavaScript that I Define a new variable I first say let counter meaning let there be a new variable called counter and I'm going to initially set the value of counter equal to the number zero and now when I click on the button instead of running the hello function I'm going to go ahead and run the count function which doesn't exist yet but I'll now write it I'll Define a function called count and what the count function is going to do is it is going to first increment the value of counter and a number of ways I could do that one is by saying counter equals counter plus one to say go ahead and reset the value of counter to whatever counter is plus one and there are a couple of shorthand notations for this I could equivalently say counter plus equals one to say add 1 to the counter or in the case of adding one JavaScript much like languages like C if you've seen them before support notation like this counter plus plus which just means take the value of counter and increment it add one to it so I'll add one to the value of counter and then I'll just display an alert that has whatever the current value of counter happens to be and so I've incremented the value of counter and then displayed an alert that shows me what's contained inside of counter and so now if I go ahead and not go to hello.html but to counter.html instead I now see that I still see a button that says count and if I click on that button I get an alert that this time says one we've incremented the value of counter from zero to one the alertness has one and I can press ok if I press count again the count now goes to 2. I press OK press count again it goes to three and every time I click count it is going to increment the value of the variable counter inside of my JavaScript web page and then it's going to display an alert that is going to contain the value of that variable so using alerts now we're able to manipulate that we can inside of functions manipulate the values of variables and then display alerts that show the contents of those variables But ultimately when users are interacting with the page it's going to be fairly annoying if the only way that we have to interact with the user is via displaying these alerts the equivalent of like printing something out except instead of printing it to a terminal we're printing it via an alert that appears on the screen what would be more interesting and more powerful and much more useful in the context of a web page is if we could programmatically update the website change something about the web page the user is actually seeing changing the content that happens to be on the page and turns out JavaScript is going to enable us to do that as well because JavaScript allows us to manipulate the Dom the document object model that represents all of the elements that happen to be on that page so to do that let's go ahead and return to hello.html this again was this webpage that just said hello and gave me a button where if I clicked on that button it would display an alert that said hello world now what I'd like to do is instead of having the hello function display an alert I'd like to have it manipulate something on the page and what might I want to manipulate well inside the body of the page I here have this heading this heading that just says hello for example which is inside of an H1 element and what I might like to do is actually change that element how can I do that well it turns out that in JavaScript we have access to a function called document dot query selector and with document.queryselector is going to do is it is going to give us the ability to look through an HTML page and extract an element out of that page so that we can manipulate that HTML element using JavaScript code and so if I want to select like an H1 element I can say document.queryselector and then as the argument the input to document.queryselector I'll go ahead and say each one meaning go through the page find me an H1 element and query selector is only going to return one element so if they're multiple it's going to return the first thing it finds but here we only have one H1 element so it's okay I'm going to say look through this document try and find an H1 element and when you do I'd like to manipulate it and the way I'd like to manipulate It Is by saying dot inner HTML equals let's say goodbye for example so all right what's going on here well right now initially when we first load the page we have an H1 a big heading at the top that just says hello and now when this hello function is called which is called when this button is clicked on because it has an on click attribute that is equal to hello calling the hello function what the hello function is going to do is it's going to say document.queryselector H1 find me the H1 element that will return this element right here the JavaScript representation of this HTML element that is just an H1 whose HTML inside of it says hello and if I want to change that HTML I can do that by modifying the inner HTML property of the JavaScript element in order to update a property of anything in JavaScript we'll generally use this dot notation where dot accesses a property of some particular object and so I have this element this H1 and saying dot inner HTML means take that element and access its inner HTML property some property of that object and I would like to update its inner HTML to just in this case be the word goodbye followed by an exclamation point for example so now what we'll see is that when we run this page when we open this page up as by opening up hello.html I still see an H1 that says hello I still see a button that says click here but now when I actually click on the button click here you'll see that hello changes to goodbye we've run JavaScript code that finds an H1 element on the page and manipulates it changing it to something else than it was originally now every time I click here nothing else happens because every time I click here it's going to find the same H1 and it's going to update its HTML changing it from Hello to goodbye so maybe what I'd really like then is the ability to toggle back and forth to toggle back and forth between hello and goodbye rather than just change it from one thing to something else every time I click the button I'd like it to alternate back and forth and there are a number of ways you could imagine doing this but one way is by taking advantage of conditions so much in the same way that a language like python has conditions ifs and L ifs and else's JavaScript 2 has if and else if and else that allow us to describe it conditions such that we can only run certain blocks of code when a particular Boolean expression is true for example so what would that look like well let's go ahead and say inside of this hello function I can ask a question if document dot query selector H1s inner HTML is equal to hello well then go ahead and set it to goodbye and else then go ahead and update the inner HTML of this H1 element go ahead and set it to hello instead so what is this hello function doing it's now a little bit more sophisticated it now has a condition where I say if the keyword if followed by in parentheses the condition that I want to check for the thing I want to see is this true or not and what I'm checking for is is let me run document.queryselector H1 which again looks through the page finds me the H1 tag and gets that element for me if I look at that inner HTML if it is equal to hello then I want to do something and this triple equal sign here is javascript's way of checking for strict equality checking to make sure the two values are equal and also that their types are the same thing that if this is a string this must also be a string it turns out in JavaScript there's also a weaker way to check free quality that just uses two equal signs and that is going to check that values are the same but it's going to allow for a bit of differences in type the two things might have different types but so long as they're basically the same value the double equal sign might generally come to be true usually if you can you'll want to use this triple equal sign the strict equality to make sure that not only are the types the same but the values are the same too and the triple equal sign will check both of those things so if I go ahead and find the H1 element and its inner HTML is the word hello well then go ahead and find the H1 element and update its inner HTML setting it equal to goodbye for example and else go ahead and find that same H1 element update it to Inner HTML set it equal to hello and again just as in functions where we use these curly braces to enclose the body of the function all of the lines of code that are inside of the function JavaScript does the same thing too that inside of a condition when we want to express that this is inside the body of an if condition I can use curly braces to say this line of code and that line of code that's inside of the if expression or that's inside of the else expression for example so let's go ahead and try this now I can go ahead and open hello.html refresh it currently says hello with a button that says click here and now when I click here hello changes to goodbye and when I click here again goodbye changes back to hello and every time I click the button it's going to alternate between hello and goodbye because we either get caught in the if expression or we get caught in the else expression now there are a couple of places where you might look at this and notice that maybe this isn't as efficient as this code could potentially be and recall that every time we run document.queryselector to say go ahead and try and find a particular HTML element for me it's going to look through that page trying to find the H1 element and it turns out that right now we have three separate calls to query selector even though only two of them will ever run on any given instance of the function but we call document.query selector then we call it again inside of the if expression we can probably improve the design of this page by factoring that out by just looking for the H1 element once and then manipulating it and checking it using that element that we have found and to do that we can store an element inside of a variable in the same way that a variable can store a number like a counter or a string like Hello World it can also store other values like an HTML element that we get back from document.query selector so I could say something like let heading where heading is just the name of a variable be equal to document.queryselector H1 for instance find the H1 element save it inside of a variable called heading and now rather than document.queryselector H1 all the time I can just say if the headings inner HTML is hello then set the headings in or HTML to goodbye otherwise set the headings inner HTML to hello so I've improved the efficiency of the program but also reduced the number of characters of Code that I've had to write my lines are now much shorter a little bit easier to read this we would consider to be an improvement in design and it turns out there's one other Improvement we can make here too that we can define a variable like let something equal something else but it turns out that JavaScript gives us a couple of ways to Define a variable and if we're going to be creating a variable whose value is never going to change we're never going to reassign the variable name to something else then instead of let we can enforce that it's never going to change by calling it a const variable so const heading equals document.queryselector H1 means I am going to create a variable called heading setting it equal to the result of document.query selector H1 and never again will I change what heading is equal to I will never have another line of code that says heading equals something else because it is constant and JavaScript will then enforce that this variable should not change and If Ever I do try to change it JavaScript will give me an error and this can just be helpful to prevent against possible unintended behavior that if you know you have a variable that is never going to change it's often good design to label it as a const variable so that you and other people looking at your code know that that is never going to have a value that gets changed later on so this then will behave the same way where it says hello but I can toggle it back and forth changing it to goodbye and then changing it back to hello again and so now using this ability this ability to manipulate the Dom we can go back to our counter program and actually improve upon it that right now ever the counter program uh I count and it displays an alert that says one I count and it displays an alert that says two I can probably do a little bit better than that by instead of displaying an alert actually manipulating the Dom in some way that I would like to have this H1 this big heading at the top instead of starting up by saying hello let's have it start out by saying zero for example just some initial value for the counter and now when I increment the value of counter rather than display an alert that just tells me the value of the counter in an alert I'm going to instead say document.queryselector H1 dot inner HTML equals counter where I'm saying find each one element update its inner HTML set it equal to whatever the value of the variable counter happens to be such that now if I refresh this page the value of this H1 initially is zero that's the initial value but every time I click count we're going to update the contents of that H1 element this time setting it to 1 2 3 4 and so forth every time I click the count button it's going to increment the value of the variable as well as manipulate the Dom actually making changes in order to produce the effect that I want to see on this actual page and we can begin to add additional logic to this as well maybe I do occasionally want an alert but I don't want to alert every single time I could add a condition I could say something like if I only want to display an alert every time I count to a multiple of 10 like 10 and 20 and 30 and 40 and 50 and so forth I could add a condition that says that if counter mod 10 and mod just gets me remainder when you divide by 10. so if you take the counter divide it by 10 if the remainder is 0 when I divide by 10 well that means counter is a multiple of 10 and so I can now display an alert where I can display an alert that says like I want to say something like the counter is now 10 or the counter is now 20. and in order to do that what I really want to do is have some way of plugging in a variable into a string inside of JavaScript and in Python the way we would have done this is by appending F or prepending F in front of the string to create a formatted string and then I would have said something like the count is now and then I'd use curly braces to say go ahead and print out the value of counter so this F for formatted string followed by this string would have been the way in Python that we would have done this turns out JavaScript does the same thing just with slightly different syntax it doesn't use f instead instead of using the regular quotation marks whether the single or double quotation marks JavaScript uses these back ticks which are usually located above the tab key on a standard US keyboard and this is going to create what JavaScript calls a template literal where I can then substitute the value of a variable somewhere inside of this template and then in order to actually do the substitution well python uses double curly braces to say plug in the value of counter right here JavaScript does something similar it also uses double curly braces but there needs to be a dollar sign in front of it the dollar sign and then the dollar double curly braces I mean go ahead and plug in the value of a variable there so this then is a template literal where every time we get to a multiple of 10 we're going to display an alert that says the count is now and then this dollar sign curly brace means actually plug in whatever the value of counter happens to be right there so now if I go ahead and refresh counter it starts at zero I can count three four five six seven eight nine but when I get to 10 then I get an alert that says the count is now 10 and then I see the result update on the page and so that template literal can allow us to combine variables and strings in order to generate new strings that are able to represent data inside of them as well so now what improvements can we begin to make here what changes can we make to this to improve upon the design of it well one thing especially as our programs get a little bit more sophisticated a little bit more complicated is that we often don't want to be intermingling our JavaScript code with the contents of our HTML that down here we have button on click equals count that's the name of this function and especially as our page starts to get more complicated it's going to start to get a little bit annoying if we're constantly having to maintain a little bit of JavaScript code like making a call to a function inside of our HTML we'll see a little bit later there are other paradigms that actually encourage this type of thing but right now it can start to get a little poorly designed we'd really like to separate all of our JavaScript related code from all of the HTML the general structure of our page and so there are ways we can begin to do that as well I can add an event listener inside of JavaScript too that I can say something like document.queryselector button and then I can say dot on click equals count so what's going on here and I can do this instead of this on click equals count what I'm now saying is document.queryselector button find me the button on the page it turns out there's only one button here so it's fine though if there were more I might have to be a little bit more specific but once I get that button then I'm going to access its on click property and I'm going to set it equal to count and what does count count is the name of a function count is itself a function and so what I'm here saying is I would like to set the value of the on click property of the button equal to count the count is the function that should run when the button is clicked on and notice that I am not actually calling the function it's not count and then parentheses which would mean run the count function and then get its return value and use that as the value for onclick I'm just setting on click equal literally to the count function itself without actually calling the function and what this is going to do is it is going to say when the button is clicked on then and only then should you actually run this count function and we're not going to run the count function until that button actually gets clicked on and so in JavaScript functions can be treated as values of their own just as you can set a variable equal to a string just as you can set a variable equal to an integer just as you can set a variable equal to like an HTML element like the result of document.queryselector you can also set a variable equal to a function something like count and pass that around as a value just as you could with any other value and this is a paradigm we generally call functional programming where we have functions as values of their own things that we can reassign things that we we can manipulate just as we could any other value so now I can try and run this program by going ahead and refreshing the page I'll refresh it it's zero I press count and all right nothing seems to be happening it's still zero I want it to be counting but it doesn't seem to be working so why not anytime you run into problems in JavaScript where you're not getting the behavior you want often it can be helpful to look at the JavaScript console or the JavaScript console is the equivalent of like the terminal window in when you're running your Django application in Python that would display any error messages the JavaScript console will display any of the JavaScript logging information and error messages as well in Chrome I can get to it if I first go ahead and go to inspect and then just open up the console tab here and all right we seem to have some sort of error here it's an uncaught type error that says we cannot set property on click of null in counter.html line 18. so that will generally tell you where the error is coming from it's coming from counter.html on line 18 and the problem seems to be that I'm trying to access the on click property of null and null is javascript's way of expressing like nothing some object that doesn't exist so somehow I'm trying to set the on click property of null well let's see what's going on on line 18 and see if we can figure out what's happening there well all right here is line 18 where I say document.queryselector button setting its on click property equal to count and now what seems to be the problem here well the error message was that I was trying to modify the onclick property of no well here then is the on click property so why would this document.queryselector button be returning or giving me an output of null well it turns out the document.query selector will return null if it's not able to find something if I try and find a button but it's not able to find a button well this seems a little bit strange because there's a button down here on line 24 that I'd like for my JavaScript code to be able to find when it runs query selector and tries to find the button as it turns out this is a bit of The Quirk of the way the browser is going to work but if the browser is running our code from top to bottom just reading it from line one on and on then it's going to get to line 18 where I've said document.queryselector button dot on click equals count and it's going to try and find a button on line 18 but the button doesn't show up in my HTML page until much further down in the page so at this point when we get to this line of JavaScript JavaScript is looking for the button but the Dom the body of the page hasn't finished loading yet the content of the Dom has not yet loaded and as a result we're not able to find this button so how do we solve this problem how do we get it so we actually are able to like ask for the button and actually get the button well it turns out there are a couple of strategies we could use one would be take the script tag and go ahead and just move it to the bottom section of the body so that after we've already defined the button that says count then we have the script tag that then says all right go ahead and now find the button and now we'll be able to find it turns out another way and perhaps a more common way is to instead add yet another event listener and we're going to add an event listener not to the button but to the entire document where document is a variable built into this JavaScript that we have access to on the web page that just refers to this entire web document where I've used document.queryselector already to look through the whole web document trying to find a button or trying to find an H1 tag for example but I can also add an event listener to the document itself and in order to do that I can say document dot add event listener and when I call out event listener and I can do this on any HTML element not just the document but I could run this function on a button or on an H1 element or any other HTML element ad event listener will generally take two arguments where the first is what event I want to listen for the event could be something like click when I click on the document it could be something like when I scroll through a page for example but the event I'm going to listen for is a particularly special event called Dom content loaded and the Dom content loaded event is an event that is going to be fired or triggered when the Dom the document object model the structure of the page is done loading when all of the elements on the page are done loading the Dom content has been loaded and then if I attach an event listener to it it'll run whatever code I want to run that should only run after the Dom is fully loaded after all of the content on the page has then been loaded and the second argument to add event listener is what function should run once the event actually happens when the Dom content loaded does happen so I could pass in the name of a function if I had the name of a function that I wanted to pass in but alternatively JavaScript allows me to just directly write a function here in the argument to add event listener I can just say function and then a set of parentheses to mean the function doesn't take any input and then in curly braces I can include the body of the function right here as the second argument to add event listener and this is a little bit of tricky syntax to wrap your mind around if you've never seen it before but the big picture way to think of it is add event listener takes two arguments one is the event the second is the function so here first is the event Dom content loaded and the second argument is a function and I would declare the function same as before just using function I haven't given the function a name because strictly speaking it doesn't need a name I'm never going to refer to the function by name so it is what we might call an anonymous function a function that has no name but I'm still passing it into the add event listener function as an argument because I want to run the code inside of the function once the Dom is done loading and so inside of curly braces then is the content of that function the content of what code should run when the Dom is done loading and then at the end I again use just this end parenthesis where that end parenthesis lines up with this parenthesis here this is in closing all of the arguments to add event listener where the first one is Dom content loaded and the second one is this entire function that might span multiple lines so you'll see syntax like this quite a bit in JavaScript but now what I want to do is adding the event listener to the button I can go ahead and just replace and put it here and it turns out that if I wanted to instead of saying dot on click equals count you could have used the same syntax of ad event listener I could say add event listener click and then count to mean when the click event happens go ahead and run the count function but you can equivalently shorthand this and just say dot on click equals count and that would work just as well so now what we're saying here is that wait until the Dom is done loaded wait until all the content on the page is loaded and then go ahead and run this function and what the function is going to do is it's going to add the event handler to this button and that'll work because now we'll be able to find the button because now all of the content of the Dom has loaded so now if I go back refreshcounter.html you'll notice that the JavaScript error goes away I don't seem to have that error anymore and now if I press count we're able to see the count increment just as before as well and so this then is an improvement upon what I've had before where now I'm able to separate out my JavaScript code from all of the rest of my code as well but much as in the case of CSS where we were able to take CSS it was originally located in the head of our page and move it into a separate file you can do the same thing with JavaScript too and this can be helpful if you have multiple people working on different files you want one person working on the HTML and someone else working on the JavaScript it can be helpful if you expect that one of these things is going to change more frequently than the other so you might not need to load the other one as often so there can be value in separating our HTML code from our JavaScript even more by moving our JavaScript into a separate file and so in order to do that I can create a new file that I'll just call counter.js which will contain all of the JavaScript for mycounter.html file so in order to do that what I can say is let's go ahead and copy all of this JavaScript code go ahead and cut it out of this page and I'll paste it into counter.js remove some of that indentation so now I have a file called counter.js that just contains all of the JavaScript I want to run on my counter.html page and now rather than include actual JavaScript in between these script tags what I can say is script SRC SRC for Source equals counter.js for example to say go ahead and reference counter.js and use that JavaScript in the head of the page here and that then is going to work exactly the same way I still am able to count as high as I'd like I still get an alert every time the count reaches a multiple of 10 but my HTML is now a little bit simpler it's just the body it's just the H1 and the button and then all of my JavaScript is now located in a separate file that allows me to do that allows me to keep my HTML code and my JavaScript code separate from each other and that can be value for valuable for a couple of reasons among them if I have common JavaScript code that's in use by multiple different HTML Pages multiple HTML Pages can all include the same JavaScript Source rather than needing to repeat myself use the same JavaScript across multiple different pages I can just use the same JavaScript across all of them and that'll be helpful too as we begin to take a look later at some JavaScript libraries which are JavaScript written by other people we can just include other people's JavaScript in our own web pages just by adding a script tag at the top of our page that specifies a particular Source you may have already interacted with bootstrap that has its own JavaScript code and you can include bootstraps JavaScript just by including a script tag at the top of our HTML page in order to say go ahead and include all of that JavaScript in our page as well so what else can we do now now that we have the ability to like get at elements of the Dom and actually manipulate their contents well one thing we can do is begin to make our Pages a little bit more interactive actually respond to what users are doing on the page whether the user is typing something in or maybe filling out a form for example so let's go ahead and try an example of that where the user might be filling out a form and we would like for our code to somehow respond to what it is that they type I'll go ahead and go back into hello.html and now inside of the body of the page I've said hello at the top I'm here instead of a button I'm going to have a form this HTML form will look like the HTML forms we've seen before I have an input field that'll add the autofocus attribute to to mean like automatically Focus this input field when I open the page because I might want the user to start typing right away I'm going to give this input field an ID of name for example and then a placeholder of name capital N whose type is text so what have I done here I've created an input field where the user can type in some text the placeholder the thing the user sees filled into that input field originally will just be capital N name telling them they should type their name in here and I've given this input field an ID some unique identifier such that I later on can reference and find this particular input field and then I have input type equals submit some way for me to now submit this form as well and so if I load this page load hello.html here's what I see Hello a field where I can type in my name the placeholder name shows up there for me and then a button where I can submit this form and now what I'd like to do inside of my JavaScript is instead of this hello function what I'm going to do is I'm going to first run some JavaScript when the Dom is done loading and so I'll use that same line from before you're going to see it quite a bit where we're going to say document.ad eventlistener Dom content loaded and then this function to mean go ahead and run this code when the Dom is done loaded and the code I'd like to run is to say when I submit the form I want something to happen when I submit the form maybe I want to display an alert that if I typed in Brian it'll say hello Brian or if I typed in David it'll say hello David for example so how might I do that well how do I get the form that's the first question anytime you want to get at an element one particular element on an HTML page usually what we're going to do is document.queryselector to say get me the element that is a form and there's only one form on the page so I don't have to worry about ambiguity I'm just saying get me that form and then I can say dot on submit when you submit the form what code should run and if I had a name of a function like a function f i could just say like run function f when the form is submitted but alternatively just as before instead of providing the name of a function I can also just provide the function itself I can say function and then in between these curly braces I can specify exactly what code should run when the form is submitted by providing this Anonymous function instead using this Anonymous function as the value of the on submit property of this form and so now what I'd like to do is somehow get access to whatever the user typed into the input field whatever the user's name happens to be and so I could get the input field via document.queryselector input and that would work this time but we'll want to start to be a little bit careful because on this page there are multiple different input elements there's an input element here for typing in the name and a second input element here for telling me you're giving me a button where I can submit this particular HTML form and so what I probably want to do is be a little bit more specific and it turns out that inside of query selector I can use all of the standard ways in CSS that we could select for a particular element so in CSS if you'll recall we had the ability to run CSS and just say style all the H1s or we could say style all the things with this particular ID or with this particular class and document.queryselector works the same way that I can say document.queryselector and pass in a tag to say like get me the H1 element or get me the button or get me the form but if there are multiple H1 elements or multiple buttons or multiple forms I can be more specific than that if for example an element has an ID in which case I can say document.queryselector and then in quotation marks the hash mark and then the name of the ID to say get me the element with that particular ID again using the exact same syntax that CSS uses if I want to apply a particular set of styles to only one element that only has one ID likewise too I can say document.queryselector and then use dot followed by the name of a class if there's a particular particular class of elements and I want to just get one of those to say get me an element that has this particular class in order to manipulate it as well so the same types of syntax that we could use in CSS for trying to reference and get at a particular HTML element we can do the same thing here with document.queryselector to go ahead and try and get a particular element based on its tag name based on its ID or based on its class and it was for that reason that inside of the HTML page for my input I gave the input an ID of name I wanted some way to be able to uniquely reference it and I can uniquely reference it not by input but by pound name or I can say get me the element that has an ID of name and that is the element that I would like to extract inside of my JavaScript code once I have that HTML element what I want is like what the user actually typed into that input field and it turns out that if you have an input field in HTML I can get access to what the user typed in by accessing its value property value is a property that for that refers to what it is the user actually typed in so I can say dot value and I'm going to go ahead and save that inside of a variable so I could say something like let name equal whatever the user typed in but if I'm not going to reassign name to something else inside of this function inside of this function I'm really going to get the name once and I'm not going to change it inside of the function so I can use a const variable instead and that would be better designed so I have a constant variable called name which is equal to document.queryselector get me the element whose idea's name and get access to its value and now I can display an alert I can alert something like in backticks hello comma and then using the dollar sign curly brace syntax I can say plug in the name there followed by an exclamation point so I've extracted the name from the form get me the input field where they typed the name get access to its value and then I'm displaying an alert that is going to say hello to that person for example and so now if I refresh the page I type in my name I press submit I get an alert that says hello Brian I press OK I can try it again I can type in something like David press submit and now the page says hello David so here again we've been able to combine event listeners and functions and query selector to be able to both read information from the page in order to say get me this particular HTML element find me an HTML element and access like what the user typed into it the dot value property that gets me what the user typed into an input field and we've been able to combine that with event listeners and alerts that are able to actually respond dynamically to when a user submits the form or when the entire content of the page is done loading in order to produce some interesting effects as well but it turns out we can do more than just change like the HTML that is contained within an element we can also change CSS as well change the style properties of a particular element as well so let's go ahead and see an example of that I'll go ahead and create a new file that I'll call colors.html and inside of colors I'll include the same standard HTML boilerplate code that we often start with a head section with a title and a body section and inside of the body of this page I'm going to display a heading that just says hello for example and maybe I'll give it an ID just so I can reference it by name maybe it has an ID of hello and then I'll have three buttons I'll have a button called red a button called blue and then a button called Green for example where now if I open up colors.html here's what I see I see a big heading that says hello and then I see three buttons red blue and green but of course right now these buttons don't actually do anything how do I get the buttons to do something well that's where javascript's going to come in I'll add a script tagged at the top of my page and I only want to run this JavaScript when the Dom is done loading so again we'll use the same syntax as before document dot add event listener Dom content loaded and then run this function to say everything in between these curly braces this is all the code that should run once the page is done loading and what I'd really like to do is get at these three buttons and say when you click on each one of them do something different like change the color of a particular HTML element and in order to do that I need some way of uniquely referencing these buttons so to do that I'm going to give them all IDs this button will have an ID of red this button will have an ID of blue this button will have an ID of green just unique names I can give to the buttons in HTML such that in JavaScript I'm later able to reference them so what I what do I include now here inside of my JavaScript code well let me say document.queryselector hash red to say get me the element whose ID is read and when you're clicked on on click go ahead and run this function what should the function do well I want to take this H1 element and change its color to Red I want to change the font color to red and I'll leave a comment to myself in JavaScript the way you can leave a comment just to document what you're doing is using these two slashes the two slashes indicate everything after that on the page is going to be a comment browser will ignore it but it can be useful to you the programmer into someone who's reading your code to be able to see what it is that you're describing here on the page and now what I'd like to do is document.queryselector hello get me the HTML element whose ID is hello and go ahead and modify its style property and now inside of this style object I can modify any of the CSS style properties one of them for example is something like color so I can update the color property and set it equal to red so here now I'm saying when you click on the red button go ahead and run this function and what the function should do is find the hello element update its style what part of the style update its color what should we update it to we should update it to red and I'm going to do the same thing for the other two buttons as well and it's pretty similar code so I'm just going to copy paste copy paste here I'm going to have one for changing the color to Blue when I click the blue button you should change the color to blue and then we'll do it one more time change the font color to Green when you click on the green button you should change the color to Green so now when I refresh the colors.html right now hello by default is just in Black standard font color for HTML I click red Hello changes to Red I click blue it changes to Blue I click green it changes to Green so depending on what button I click that triggers some event listener that's going to then say when the button is clicked run this function and what the function does is it grabs this H1 element the element whose ID is hello modifies its style updates its color property to be something like red or blue or green and that's showing that we can modify style in addition to just modifying the content of the page itself but it turns out that as you looked at me writing that code something should have struck you is probably not optimal design that in general anytime you find yourself writing the same code again and again and again especially if you're copy pasting that that is a generally a bad sign usually a sign that there is some better way of trying to modify of trying to implement the behavior that I'm trying to create and it turns out that there is and there are a number of ways that you could do this one way here is that I might like to consolidate these three event listeners into just like a single function that is going to handle changing the color to whatever the button says the color should be changed to but one problem here is that if I just attach the same event listener to all three of the buttons it's not going to be clear to me when I click on the button how does the button know what color we should change the text to and so to that effect we can add some additional special attributes to a particular HTML element that are called Data attributes or a data attribute is my way of saying that I would like to associate some data with this particular H2O HTML element where here I can say data Dash color equals Red Data Dash color equals blue data Dash color equals green data attributes always start with data followed by a dash and then I can specify really any name that I want for some information that I would like to store about the HTML element and here the information I want to store is I want to store data about what color you should change the text to when the button is clicked on and so what we're going to have the ability to do now is the ability to say that if I have access to this element this button I can access its data color property to know whether we should change the text to red or blue or green by adding these data attributes to these HTML elements and so now what I want is some way of getting all of these buttons now document.queryselector as you recall just gets one element it's just going to get for me a single element and it's going to get the first one that it finds if I want to get multiple elements what I can do instead is something like document dot query selector all query selector all is going to return the same thing the query selector does but instead of query selector returning a single element that matches what it looks for query selector all is going to return to mean an array of all of the elements that match my particular query so if I want to select not just the first button I find but all of the buttons I find I can here say query selector all for button and that will give me back a JavaScript array the equivalent of a list that represents all of those buttons and we can actually test what this looks like by looking at things inside of the JavaScript console that if I go ahead and refresh this page colors I can open up the inspector go into the JavaScript console and just as you could see error messages here you can also actually write JavaScript code here as well so I can say something like document.queryselector button say all right what's going to happen when I try and select for a button on this particular page and what I get is all right I get just this very first button button whose data Dash color is equal to Red that's what I would expect query selector just finds me one element and it's going to find me the very first element and likewise I can say all right instead of query selector let's do query selector all and what I get back is a node list which you can think of as kind of like an array or a list in Python that's got three buttons in it button zero one and two and just as with a list in python as you can index into things arrays in Python arrays in JavaScript can be indexed into as well that if I have something like const names equals Harry Ron and Hermione like a array of three names I can say name square bracket zero to get the first name name square bracket one to get the second one name score bracket two to get the third one for example and that gives me each of the individual elements in the array if I want to get the whole length of the array I can do names dot length to get all right the length of the names array happens to be three so just some additional features that we have access to If you happen to have an array of things turns out query selector all returns to me a node list which is kind of like an array and that's going to be useful because when I say document.queryselector all button I am saying get me all of the buttons on the page and now what I would like to do is effectively Loop over all of those buttons and say for each of the buttons inside of this list that comes back to me I would like to add an event handler for when that button is clicked on to say for each of the buttons that comes back go ahead and say when you're clicked on change the color of the H1 element and so there are a number of ways again that you could do this but one way is to use a particular property called for each and for each is a function that accepts as an argument another function where the idea is going to be I would like to run a function for each of the elements inside of an array or inside of a node list for example so here I can say for each button go ahead and run this function this is going to be a function now that takes something as input it's going to take one of the elements in the list as input something like a button and now for each button what would I like to do for that button well when the button is clicked on button Dot unclick then go ahead and run a function that is going to document.queryselector get me the element whose ID is hello change its style within the style change its color and what do I want to change this color to will I have access to this button this argument to the function is whichever button I'm currently trying to add an event listener for and in order to access its data properties I can access a special property of an HTML element called its data set property and then I can say something like button.dataset dot color to get at the data Dash color attribute so a lot of stuff going on here let's go ahead and try and read through this entire thing and just get a feel for what's happening because we have functions nested within other functions nested within other functions up at the very top I've said add an event listener to the document when the documents Dom content is loaded meaning all the content of the page is downloading go ahead and run this function this is the body of the function so what do I want to do when the page is done loading I'm going to document.queryselector all looking for all of the buttons and if I wanted to if there could be more buttons I could have added a class to these buttons and just look for things with a particular class query selector all just returns all of the elements that match a particular query and then I'm saying for each of those buttons for each of the buttons that came back I would like to run a function on each of those buttons I'm basically saying if I have three buttons that came back let me run a function on the first button then the same function on the second button then the same function on the third button and what is that function well it's this function here a function that takes as input the button it's first going to pass in as input the first button then the second button then the Third and what this function does is it adds an on click Handler to the button it says when the button is clicked on go ahead and run this other function and this function now is the function that will run when the button is clicked on to say when the button is clicked on get me the hello element change its color to button.dataset.color and button.dataset.color takes a button takes an HTML element like this one here and accesses its data set all of its data properties and specifically accesses the color data property which in this case is equal to red and that is what we would like to set color equal to it's a little bit more complex than we've seen before but now we've been able to reduce what was three different event handlers into just a single one and now this is going to work the same way change it to red blue and green all by just using those data properties that we have access to and so when in doubt about how these things are working about what query selector is returning the JavaScript console can be a very powerful tool for this so you can go into the JavaScript console and actually manipulate things you can run and run queries you can run functions you can even modify the values of variables like if I go back for instance to counter.html or had this counter that's counting zero one two three four if I wanted to I could say something like counter equals 27 just like change the value of the counter nothing appears to have changed on the page I didn't say update anything on the page but now next time I run count it's going to update the value of the count to 28 because I had updated the value inside of the JavaScript console it's going to increment that value display that value inside of the H1 element so you can modify variables you can run functions you can run document.queryselector to figure out what particular elements are going to come back all through the use of the JavaScript console which can be a very very powerful tool especially as you begin working on trying to debug these programs and trying to figure out what might be wrong with them it turns out too that there are other changes that we can make in order to optimize our code a little bit more in order to make it a little bit more succinct and one way is that in more recent versions of JavaScript they've introduced a particular notation for functions called the arrow notation for functions and I'll just show it to you because it'll come up but oftentimes instead of using the keyword function before introducing a function you'll just have something like button and then Arrow the curly braces and strictly speaking you'd only even need the parentheses around the input where button arrow and then in these curly braces some code just means here is going to be a function that takes us input a variable called button and then runs this particular block of code when that function is run and likewise if a function takes no input like this function up here you could express it using arrow notation with just parentheses Arrow block and so this is often a notation that you'll see in JavaScript so if you ever see it know that that's really just shorthand for creating a function whatever it is to the left of the arrow sign is the input to the function and whatever is to the right of the arrow is what code should actually run when the function body gets executed when the function is called upon so what other changes might we want to make to colors.html well if we look back at colors.html here's what it looks like now we've got a heading that says hello and then buttons to change the color to red or blue or green for example we might instead if we want the user to choose from one from a number of options decide upon the user interface choice of using a drop down instead of a bunch of buttons for example and JavaScript supports that as well and we'll use this as an opportunity to explore some of the other event handlers that exist within JavaScript so for example instead of having these all inside of buttons I can make my life a little bit easier by making this a select drop down where the select is going to have an option whose value is let's say black is the default option we'll just say black and then we'll add another option whose value is red and then we say red and the value is what we'll get in JavaScript when we try and extract the value of a particular select drop down well it's in between the option tags themselves is what the user is going to see on the page when they actually view it so I'm capitalizing it just for them option value equals blue it'll be blue and then option value equals green and that'll be green so now what the user sees is they say hello and then a drop down menu where they can choose from a list of colors rather than click buttons in order to do so and now of course this select drop down doesn't do anything at the moment but I can modify it so that it does so now instead of selecting for all of the buttons and doing something with all the buttons we don't have any buttons anymore what I do have is I have a select drop down and now just as we've seen like on click to say when you click on something as we've seen Dom content loaded as an event there's another event called on change which applies to things like select dropdowns where when something changes in the select drop down when a user chooses something different I can run some code for example so I can run a function that in this case is going to take document.queryselector hello meaning get me the hello HTML element change its style what part of the style change its color and I want to change it to something I want to change it to the value of this select drop down but how do I get access to this particular select drop down well in JavaScript we have access to a special value called this and this has special meaning in JavaScript and its meaning varies based on context but in the context of an event handler a function that is called when a particular event happens this is going to be a special keyword that always refers to the thing that received the event so what received the event it was the select drop down that is what received the event of being changed and so this is going to be a special keyword that always refers to that that always refers to the drop down menu where I made a different selection so if I want to get the value of that drop down menu what it is the user actually selected I can just say this dot value to mean get that drop down menu and get at the value the thing that the user selected in that menu and now much more succinctly than before I've been able to implement the same kind of idea it says hello right now in black but if I choose from the drop down menu to change its color to something like red for example color changes to Red if I instead choose blue it changes to blue green changes to Green I choose black it changes Back to Black so now I have this ability to detect these other types of events and respond to them as well and there are many many different events that exist in JavaScript there's on click which we've seen already on Mouse over it can detect like when you Mouse over something when you're hovering over a particular element if you've ever seen websites that somehow respond when your mouse moves over something that can be how it's implemented on key down and on key up can respond to keyboard events something like when you press a key on the keyboard when you press down on the key that's on key down and when you lift your finger off the key that's on key up and there are other events as well many more events that are just listed here that you can listen for and respond to so that you can really interact with the user based on what it is that they're doing so now let's take a look at an example of how we can use some of these events to now begin to create a little bit of a more interesting application we'll go ahead and build a todo list application this time using exclusively JavaScript we've seen todo lists before that involve communicating with a server making requests and responses we'll now build a todo list that only uses JavaScript to do so I'll create a new file called tasks.html and we'll use them we'll create a head section whose title is tasks and a body section and inside the body of the page I'll go ahead and have a heading that says tasks and underneath that I want an unordered list of all of my tasks so I have an unordered list I'll give it an ID of tasks just for good measure so I can reference it later but initially nothing's going to be in here but what I'll have underneath the unordered list is a form a form where I can submit a new task for example so I'll give myself an input field also given an ID the ID will be task singular for the new task that I am typing in the placeholder will be new task just so the user knows what to type in and the type of the input field will be text so I have an input field where the user can type in some new task and I'll also add an input field for good measure whose type is submit that allows the user to submit a new task once they've created it so if I open up tasks.html here's then what I see big heading there is technically an unordered list underneath it here but there's nothing in that unordered list yet so it just shows up as empty then a text field where I can type in a task and then a submit button where I can submit my new task so now I'd like some JavaScript such that when I submit this form we actually do something so add a script tag I want this JavaScript to run after the Dom content is loaded so we'll go ahead and add the usual Dom content loaded event listener and now I want to run code when the form is submitted so I can say document.queryselector form dot on submit equals and then I want to run a function and I could use the keyword function again but I can just use an arrow function which will be a little bit faster to type just say all right here's the function that I want to run when the form is submitted and what would I like to do well I'd first like to figure out all right what did the user actually type in and what the user typed in well that'll be document.queryselector task dot value get me the element with ID task that's the input field dot value gets the value of the input field which is what the user actually typed in and I can save that as like const task that is what it is the user typed in and if I'm curious as to what the user typed in I can actually print it out to the JavaScript console and the way to do that is using a special function called console.log and that just logs something to the console the equivalent of printing something out in Python where it just shows up in the python terminal here this is going to show up in the JavaScript console and one other thing I'll add is by default forms will try and submit when you press the submit button like take you to another page we've seen this before already in the context of Django that when you submit a form it tries and submits another web request if I want to prevent that behavior stop the form from submitting so stop form from submitting I can return false at the end of my form submission Handler to say don't actually submit the form we're going to do everything clientside everything just inside of the browser so now this won't quite work yet but it'll be progress I refresh the page I'm going to open up the JavaScript console so I can see what's going on if I add a task something just like Foo press submit this now gets logged to the JavaScript console it's the equivalent of a way of like providing debugging information to myself to know all right I now have access to this value Foo and it's also telling me what line of code logged at it with tasks.html line 9 is the line of code that logged Foo and so this can be useful when you're debugging a program when you want to see what the values of variables are you can just print them out using console.log to figure out what's going on in your program at any particular point in time but what I want to do is not console.loget what I want to do is really create a new element that I'm going to add into my body of the HTML so how can I do that well to create a new element for my document I can run a function called document dot create element followed by what type of element do I want to create well I have an unordered list a ul and every item inside of an unordered list is a list item An Li so I'll go ahead and create an Li element a list item and I'll save that in a variable then I'll call Li so I've created a new list item and this list items inner HTML the HTML content inside of that list item well that's just going to be task this variable from up here which is whatever the user typed in so I've now created a new list item and said what HTML should go inside of the list item it should be whatever task the user typed in and now I'm going to say document dot query selector tasks get me the element whose ideas tasks and that's going to be this unordered list here the unordered list whose ID is tasks and if I have an HTML element I can add a new element inside of it by saying dot append Li and what that now is going to do is it's going to say get me the unordered list whose ideas tasks get me the element whose ID is tasks by a query selector here once I have that element append to the end of what's inside of that element this value Li which happens to be this new element that I've created a new list item so I've been able to add a new HTML element and this line of code is going to say add it to the Dom add it to the unordered list that I am here now constructing so now I rerun this I see tasks I type in something like Foo I press submit and all right food now shows up I type in something like I delete that type in bar bar now shows up I type in baz bazino shows up now one minor user interface annoyance is that it seems that every time I submit a new task this input field retains the value of what it used to be and that's probably not what I want because I'd rather it just clear out I've already submitted the task no need for it to stay there but that's easy to manipulate in JavaScript if I want to clear out this input field the input field whose ID is tasked then all I need to do is say document dot query selector task get me that input field change its value equal to the empty string equal to nothing just to say clear out the value of what happens to be inside of that input field right now and now if I refresh the page type in Foo press submit input field clears out and now I can type in something like bar and then something like baz to continue to add tasks as well now one thing that might be slightly annoying is if I'm not careful if I press submit well it submits the empty string as a task and so I just get this empty bullet point that shows up here when I press submit and I just get all of these empty bullet points it might be nice from a user experience perspective if I were to not allow the user to do that not allow them to submit a task if they haven't actually typed something in to the new task field and we can do that just by modifying properties of elements that it turns out that HTML elements have a property called disabled that can be true or false that allows us to disable something like a button so if I want to disable the submit button one thing I might want to do first is give this submit button an ID I'll give it an ID of submit so that in my JavaScript code I can reference the submit button and now inside of this JavaScript code when the Dom content is loaded by default the submit button should be disabled like when I first load the page I don't want the submit button to be enabled because I want the user to type in a task first before I enable the submit button so how do I do that well I can document.queryselector get me the element whose ID is submit get me that submit button and just set its disabled property equal to True JavaScript has Boolean values true and false I set the disabled value equal to true to disable the submit button now if I refresh the page I can type in a new task but the submit button is disabled it doesn't do anything now obviously I don't want to keep it that way I'd like it such that as I begin to type things in then the submit button stops being disabled disabled gets set from True to false instead and so what I really want to do is listen for me like pressing keys on the keyboard and so the way I can do that is by adding yet another event listener document.queryselector what do I want to add a query selector to what do I want to add an event handler for well I want to add an event handler for when I type something into this input field and this input field has an ID of task so let me go ahead and get the input field the element whose ID is task and add an on key up Handler on key up again is the event when I lift my finger off of a key go ahead and run this function and what should the function do well it's going to say document.queryselector submit set the disabled property equal to false and so now here's what we're doing we're saying by default when I first load the page take the submit button and disable it set dot disabled equal to true then anytime I type a key and my finger comes off the key that means on key up is the event that gets triggered run this function and what the function is going to do is take that same submit button and set its disabled property equal to false so now instead of being disabled it will be enabled so if I go back to the page go here I type in right now by default the submit button is disabled but as soon as I start typing something now the submit button is active and I can actually click on it and all right this isn't great because I clicked on it but the submit button is still enabled so what I might like to do is all right after I've submitted the form after I've added a new task let's go back and disable the submit button so after I've submitted the form after we've added the new task to my list of tasks after we've cleared out the value from the input field let me also get the submit button set its disabled property equal to true now even after I submit the form the submit button is still going to be disabled such that I type in Foo now submit is active I press it but the submit button goes back to being inactive as well it turns out that even now there's still a little bit of a bug if I go back here and I type in something like bar but then I backspace back to like nothing here the submit button is still active so I can still technically submit a task that has no content inside of it and so I might like to have some way of preventing against that as well and that's just some additional logic we now have access to JavaScript that has conditions that has Loops that has functions and so if I want to do something like conditionally check I can say if document.query selector task dot value dot length is greater than zero meaning like something's actually typed into the task field we'll then go ahead and set disable defaults but otherwise go ahead and set disabled equal to true so now here we're checking if the length of what the user has typed in is greater than zero they actually type something in then yes give them access to the submit button but otherwise don't give them access to that button so now I refresh the page disabled by default I type something in it's enabled I delete delete delete and it goes back to being disabled so JavaScript has allowed us to really make our Pages much more interactive and immediately interactive based on how the user is interacting with the page as they begin to type things as they begin to delete things as they press buttons we're able to have the page respond either by adding content to the Dom by literally adding parts to the HTML Page Changing the stylus of things changing particular properties of elements and this is really where the power of JavaScript begins to come in it's been allowing ourselves to do things like that now so far we've only been able to have events happen when the user does something when the user clicks on a button or when the user presses a key for example but it turns out JavaScript has other ways of allowing functions to run in fact on their own we can set what are called intervals where a particular function runs every sum number of milliseconds for example and so if we go back to like the counter example from before right now for this counter example I have to be the one to press the count button that is going to increment the value of count every single time but I could put that inside of an interval instead so let me go back to counter.html whose JavaScript is inside of counter.js and now what I'd like to say is I would like when the Dom content is loaded let me set an interval for count and one thousand so what is that going to do set interval is a function built into JavaScript here where I'm saying that I would like to create a new interval where every so often go ahead and run a particular function and I would like to run the count function we'll recall that count function is going to increment the value of count and I'll get rid of this alert for now just for Simplicity all I want the count function to do is update the H1 with the new value of the counter and go ahead and run that count function every 1000 milliseconds otherwise known as every one second go ahead and run the count function so now when I open counter.html it's 0 but every second now it's going to change every second updating one by one by one I don't have to click the button of course I could in the event handler would still work but the interval is saying now every one second go ahead and run the count function and that has this particular result so if you've ever seen a web page that like displays the current time in seconds it was like a countdown timer or it's displaying the current time with seconds it might be doing something like this just having some sort of interval that every second is going to count an increment in order to say update the number to the one greater one greater and one greater than that of course if I close the page and go back to it if I close these pages and then opencounter.html again I've gone back to zero like JavaScript is not saving any state about my page it's just every time we're running the page it's going to go back to counter.js it's going to say all right we're defining a variable called counter we're setting that variable equal to zero so every time I load the page it's going to be set back to zero and that might not be great depending on the type of page you're trying to create that maybe you want a page that is somehow able to store information such that on subsequent visits we're able to utilize the information that was already stored some way of remembering information for later use and later versions of JavaScript and more modern browsers now allow us to do something just like that called local storage and what local storage is is it's a way for us to be able to store information inside of the user's web browser that a page can ask to store particular values inside the web browser and later on on subsequent visits to that page we can go back and say let's extract those values that were previously stored inside of local storage local storage is going to give us access to two key functions that we're going to use to manipulate this local storage the first is localstorage.getitem where we would like to get something out of local storage based on its key some name that we have given to that value and we also have access to localstorage.set item which goes ahead and adds a new value to local storage or replaces an existing value in local storage setting this key equal to a particular value so we can use local storage then to allow our web pages using JavaScript to be able to store information and retrieve information from the browser and let's now try to use that in order to solve this problem of the counter that seems to always reset back to zero so now in counter.js instead of sentencounter equal to zero the first thing I want to know is is there already a value for the counter in local storage so I can ask a question like if local storage dot get item counter meaning go to local storage try and get the counter and anything in this if expression will happen if there is something inside of local storage for counter but it turns out that if I want to do the inverse of that say not I can just use the exclamation point much like in C in JavaScript the exclamation point just means not so meaning if there is not something in local storage called counter well then let's go ahead and just set the value in local storage local storage dot set item counter and we'll set it equal to zero so what this is doing here is before anything else happens we are checking local storage to say is there already a value for counter and if there is not already a value for counter we need to make sure there is something there inside of local storage for the counter so we are going to set the value of counter equal to zero for example and so now what needs to change I'll go ahead and get rid of the interval so that it only happens when I click on it but what should this count function actually do well first let me get the value of the counter counter is going to be whatever localstorage dot get item counter is I'm going to get the counter out of local storage I'm going to increment it counter plus plus we'll go ahead and set the value of this H1 elements inner HTML equal to that counter but the last step is I'll also do local storage dot set item counter is equal to the new value of counter so what I've done here is to say that when I click the button count function is going to run we're first going to go into local storage get the value for the key counter whatever the value of counter happens to be save it inside of this variable called counter we'll go ahead and increment that variable setting it equal to itself plus one update the H1s inner HTML same as before just to update what we actually see on the page but then go ahead and localstorage.set item counter gets set to counter for example so now let's go ahead and see what's going to happen if I go ahead and open counter.html we see Zero we count one two three four five everything so far so good now watch what happens if I refresh this page I refresh the page and all right that seems a little bit strange it's zero let me try counting and see what happens I press count and all right the count changed to six so it seems like it did remember that I counted up to five zero one two three four five but when I refresh the page it still showed me zero but then let me count up to the number six and I can keep counting seven eight nine ten what happens if I refresh the page now I can try it I refresh the page I've gone back to zero but I count and okay now I'm at 11. so somehow I am still remembering but the first time it's still giving me zero every time why might that be well if you look back at counter.html you'll notice that the reason is just inside the body of the page the initial value of the H1 is just always zero so if I want to fix that then what I need to say is when the Dom content is loaded go ahead and get document.queryselector H1 go ahead and update the inner HTML equal to whatever local storage dot get item counter happens to be so every time I open the page even before I click the button even before the event listener is triggered I'd like to say go ahead and replace this heading update its inner HTML to be the result of getting the counter out of local storage for example so now if I refresh the page it's at 11 I can update update update click again some number of times bring it up to 18 for example refresh the page and it stays at the number 18 and no matter what value I get it to it's going to store that number inside of local storage such that when I refresh the page that number is going to stay there and we can actually see the value inside of local storage by again going into Chrome's inspector I go into Chrome if I go to the application tab and I go to local storage here on the left I can see that I have a value for T counter whose value in this case happens to be 28 and you could go into local storage you can manipulate this value you could delete it if you want but this just goes to show you that we have now stored this value inside of my browser such that on subsequent visits if this page gets loaded again we can access that value from inside of the application as well and so now we've been able to see how our pages are able to store data in order to just make the user experience a little bit better if we want the user to be able to have information remembered from the last time they visited a particular page we can sometimes actually be quite helpful all right so now we've seen a lot of features of JavaScript we've seen a bunch of different ways of representing data we've stored data in variables and those variables have had types like integers those variables of some has been strings sometimes have been HTML elements sometimes they've been arrays or lists of items sometimes they've even been functions you can set a variable equal to a function but perhaps one of the most useful data types inside of JavaScript is the JavaScript object so go into the JavaScript console just to demonstrate this with the JavaScript object is is it's really the equivalent of like a python dictionary some Association of keys to values where you can look up something by a key or by a property and see what its value happens to be so if I had a variable like person I could set person equal to a JavaScript object whose like first name is Harry and whose last name is Potter again using syntax very similar to what the dictionary syntax looks like inside of python as well and now that I have this variable person which is first Harry last Potter I can access a particular property of the person in a number of ways I can say something like person DOT first to say get me the first name property of this particular object and I see that it's equal to Harry I could equivalently use square bracket notation the way python does square bracket first and that will also give me Harry but this turns out to be quite powerful to be able to represent data in this structured way like this where I have an association of keys otherwise known as properties with particular values and then I have the ability given a JavaScript object to be able to access a particular value and it turns out that one of the ways this is most useful is in the exchange of data moving data around from one service to another and so here we're going to introduce what are known as apis otherwise known as application programming interfaces which in the context of the web you can think of as some welldefined structured way for services on the internet to communicate with each other that if you want your application to be able to talk to some other servers maybe you want your application to interact with Google Maps or to be able to interact with Amazon or some other Weather Service to get the day's weather then you might be able to access some API some mechanism whereby you can communicate with another service by sending a request and receiving back data in some sort of very well structured format and very often that wellstructured format happens to be a particular type of data known as Json which stands for JavaScript object notation which is a way of transferring data in the form of JavaScript objects these sort of objects that happen to have properties and values associated with them and so what does JavaScript object notation look like well if we think back to the applications that we've been creating these applications that are able to represent things like an airline and movements of planes between particular destinations a JavaScript object representing a flight might look something like this a JavaScript object that has properties for origin is something destination is something duration is something things we've seen before but you might imagine that if we wanted our airline to be able to make its data available to other services so that other web applications or other programs could programmatically access information about flights we could pass data in this format to those other applications so that they could then treat this as a JavaScript object and get access to the information about it and the nice thing about this particular representation is that it is both human readable and machine readable that we as people can look at this and get an intuitive understanding for what all of this means but also a computer knows how to access particular properties that appear before the colon and get access to what those values are which appear after that colon as well so JavaScript object notation otherwise known as Json offers a very convenient representation and this isn't exactly what the JavaScript object syntax is in JavaScript objects you don't strictly need the quotation marks around the keys you could just say origin colon and not origin and quotation marks so JavaScript object notation uses slightly different syntax But ultimately very reminiscent of what we've seen in JavaScript objects and JavaScript knows how to take data in this form and turn it into something like a JavaScript object and turns out there are ways of doing this in python as well in other programming languages have the ability to interpret Json data in order to use it in some meaningful way and another advantage of the Json representation is that it's very conducive to representing structures of things so these values don't just need to be strings or numbers they could be lists or arrays that happen to have a sequence of possible values or they could even be other JavaScript objects that if we wanted to represent not just a city name but represent the city name and the airport code for example as we saw that we wanted to do before I could instead of having origin be equal to a string like New York have origin be equal to yet another JavaScript object that contains a city property and a code property where the city is the name of the city and the code is the name of the airport code and the important thing is as long as I and the person I'm communicating with agree upon this representation agree upon what the names of these keys are and what the structure of this Json payload this Json object happens to be then the person on the receiving end can take this data and write a program that's able to interpret it and use that data in some meaningful way and so we'll see an example of this now of using JavaScript to be able to communicate with yet another online service in particular for accessing information about currency exchange rates currency exchange rates are always changing we want access to the latest currency exchange rate data and if there is an online service an API that provides access to that data in Json form in a format like this that is machine readable then we can use that data to write a stock a currency exchange application that uses realtime data in order to make those conversions what might that data look like well the data could look something like this that we make a request for accessing what are the exchange rates for converting from US Dollars otherwise known as USD and we get back a Json object that looks like this that has a base key of USD and then it has a rates key that has a whole bunch of rates within it so conversion to euros and Japanese Yen Great British written pounds as well as Australian dollars and all of the various different currency exchange rates for all of these different currencies for example and this doesn't have to be the way that this data is structured but it happens to be a convenient way and so long as the person providing this data to me and I both know what this structure is we can begin to write programs that are able to use that data and so we'll now see our example of an API which is a exchange rates API dot IO and if we go to api.exchange rates API dot IO latest and provide a get parameter of Base equals US Dollars then what we get back is data that looks like this now it's a little bit messy looking not nearly as clean as we saw before but it's the same exact thing just without the white space we have a JavaScript object that has a rates key that tells me all right here is the exchange rate between US Dollars and Canadian dollars and the pound and the Euro and other currencies that exist as well and down below we have the base of what base currency we're converting from so all of this data can come back to me if I just make an HTTP request I make a web request to this particular URL I then get access to all of this currency exchange rate information that I can then use inside of my application so how can I do this how can I now begin to use this information inside of an application let's now create a new page I'm going to call this currency.html inside of currency.html I'll add our usual HTML a title of currency exchange and a body and inside the body I'm just going to include nothing for now what I really care about is the JavaScript that is going to make a web request in order to get access to additional data now so far in JavaScript our JavaScript code has exclusively been running code that exists only on our computer it's running inside the web browser and all happening inside the web browser we're not communicating with some external server what we'll take a look at now is something known as Ajax which was about asynchronous JavaScript where the idea is that even after a page has loaded using JavaScript we can make additional web requests to ask for additional information either from our own web servers or from some thirdparty web servers if we want additional information on our page and what we want in this case is for our page to make an asynchronous request request for additional data about the current currency exchange rates for example so how am I going to do that well I want to do this after the Dom content is loaded so we'll add that usually there and what we're going to take advantage of is a function built into more recent versions of JavaScript and supported by most major browsers now and it's a function called Fetch and what fetch is going to do is it is going to make a web request it is going to query some website it could be our own it could be someone else's and it's going to get back some HTTP response from that page and I'm going to fetch and the page I'm going to fetch is this URL api.exchange rates api.io latest base equals USD and the only reason I happen to know how this API works is because I've read the api's documentation that describes how the URL parameters work and what the structure of the data that I get back is and so I'm here going to say go ahead and fetch from this URL make a HTTP request asking for additional information from this URL and get back what the results are going to be and what fetch gives back to us is something in JavaScript known as a promise and A promise is going to be a way of representing the idea that something is going to come back but it may not come back immediately we're not going to go into the details of exactly how those promises work but it turns out there's a particular Syntax for dealing with them which is that I can say after I fetch I can add a line called dot then that says what should I do when the promise comes back once I get back something like a response and so when I get back the response what I want to do is convert the response into Json treat it as Json data Java a JavaScript object as something that I can then manipulate and so what I can do is just use this as a function to say go ahead and return response dot Jason and so what this is saying is go ahead and get me the latest exchange rates and then after that's done this is an asynchronous process it might take some time but once I get back those results then run this function take the response and return the Json version of the response convert that response into just the raw Json data such that I can use that data to then access the currency exchange rates and it turns out that with arrow functions if you ever have a very simple function that all it's doing is taking something and returning something else I can simplify this function even further and just say I can emit the curly braces I can omit the return I can just say response arrow response.json and this is a shorthand way of saying a function that takes as input the response and returns as output response.json so here I'm saying go ahead and fetch me the latest exchange rates from this particular API then convert the response to Json data and then once you have the data here's what I want you to do with that data and for now let's just go ahead and console.log that data just to print it out to the terminal so we're not doing anything else just yet all I'm doing is saying get me the exchange rates convert the exchange rates data into Json and then let's go ahead and print out that data so I'll open up currency.html it's a blank page but if I look in the JavaScript inspector I see what got logged is a JavaScript object here indicated by the word object and if I click the triangle at left I can open up and see all right inside of this object is all of this data about exchange rates for a whole bunch of different exchange rates for converting from the US dollar we're here US dollar one means one US dollar is one US dollar for example so now that I've got this data let's actually try and use this inside of the program maybe let's say I want to convert between US Dollars and the euro to figure out what the conversion rate is between dollars in euros well if we recall what the data looks like the data is a JavaScript object where we have a key called rate and inside of rates is this object and inside of that object I can access the EUR property to get the exchange rate of one US dollar is equal to some number of Euros for example so it's inside of the rates key and then inside of the EUR key and that's how I know what to get access to inside of my data so what I really want to do is accessdata dot rates dot EUR that says get me all the data that came back access the rates key and then access the Euro key and we'll go ahead and save that in a variable called rate and now I'll just document.queryselect your body dot innerhtml equals rate just like take that rate put it inside of the body so now if I refresh currency.html what I see is just this value 0.908843 which means that right now one US dollar happens to be equal to about 0.91 Euros for instance so that's useful I could make this a little more human friendly by putting this inside of a template string I could say one US dollar is equal to and then rate Euros for example and so now if I refresh the page I see one US dollar is equal to this many euros and even this is a little bit annoying I probably don't care about it to this many decimal places unless I'm really in the mood to be very precise about these exchange rates if I only care about it to like three decimal places for example it turns out JavaScript has functions I can use on numbers like rate dot two fixed passing in three as an argument there to mean I'd like to take this exchange rate and just round it to three decimal places for example so now I refresh the page and I see one US dollar is equal to 0.909 euros and the interesting thing about what's Happening Here is this is happening as a result of an asynchronous request I am asking for the latest exchange rates and when I get back the exchange rates data JavaScript is plugging that information into the body of the page I know communicating with an API getting back that api's data in Json form and then using that data to update the contents of my HTML page of course in practice if I really want a currency exchange web page I probably don't just want to display the exchange rate between US Dollars and Euros I probably want to let the user pick what currencies they would like to exchange between and so here's how I might go about doing that inside of the body of the page now rather than just have an empty body let's go ahead and add a form that forum is going to have an input whose ID is currency just so I have a way of referencing it later the placeholder will just be currency and the type of it is text and then I'll have an input whose type is submit and we'll give it a value of convert that'll be what the button says it says convert and then I can convert to a particular currency and then I need some place to put my results so I'll go ahead and add a div whose ID is result and this is where after I've done all the currency conversion this is where I'm going to put the results of doing that currency conversion so now rather than fetch right away here's what I need to do I need to do something only when the form is submitted so I can get the form by saying document.queryselector form dot on submit equals this function and I'm going to go ahead and just in advance return false at the end of the function so we don't actually try and submit the form to another page I just want to run everything locally on this same page but now inside of this form once you submit it that is when I want to run this code that is going to fetch new data so I'm going to fetch data from the exchange rates API convert that data to Json same as before then go ahead and get access to that data but now what I want to do is I want to figure out what the user actually typed in to the input field and that is going to be the currency that I care about getting access to so I'll create a variable called currency which will be equal to document dot query selector and to write the input field if I scroll down it has an ID of currency so if I want to get that input field I'm going to say get the element whose ID is currency and get its value so this now is the currency that the user wanted me to get access to and I can then say data dot rates currency instead of data.rates.eur and importantly I can't do data.rates dot currency that would literally try to access a property of rates that is called currency if I use square brackets instead that allows me to use a variable something like the currency variable which are defined up here on line 13 as the currency that the user typed in I would like to access that particular currency inside of the rates and so now I can ask a question there are two possibilities here either the currency the user typed in is a valid currency or it's not and it turns out that if you try and access a property of an object that doesn't exist what you get back is a particular JavaScript variable called undefined meaning there is no value there so for example if I have something like let person equal first name is Harry and last name is Potter like we did before I can access something like person.first and get Harry I can access person.last and get Potter but if I access person dot middle that is going to be a special variable in JavaScript or Special Value in JavaScript called undefined meaning there is no value there slightly different from null which also has a similar meaning they're used in slightly different contexts so here what I can say is if the rate is not undefined well then let's go ahead and update not the body but the result to say one US dollar is equal to this rate not necessarily Euros but whatever the currency happens to be and otherwise let's go ahead and document.queryselector result dot inner HTML equals invalid currency just to let the user know that the currency they tried to provide is not actually a valid currency and so we're going to need to try a different currency in order to get the result to work so now here's what we can do if I open up currency.html again I now see a form where I can type in a currency I can type in something like the Euro for example press convert and I see all right one US dollar equal to 0.909 euros I type in something like the pound press convert one US dollar equal to 0.771 pounds I type in the Japanese Yen one US dollar is equal to 109.852 Japanese Yen and all of this is happening where every time I submit the form it's making yet another request so if the exchange rates happen to change in between when I submit the form the next time I submit the form I will be getting the latest exchange rates according to that exchange rates API and the results are going to come back here and of course if I type in a currency that doesn't exist I type in something like Foo for example and press convert invalid currency so it's going to report back to me that it wasn't able to find that currency and so it tells me that I need to type in something valid and so I can type in something valid maybe I tried just US Dollars itself it tells me one US dollar is equal to one US dollar exactly what I would expect it to be now there are a couple of optimizations and improvements that we can make here one is that I can search for euros right now with EUR press convert but if I search for euros in lower case for example it turns out it thinks that's an invalid currency and the reason why is because if you look at the data that comes back to me from the API this is the data that I get back from the exchange rates API what you'll notice is that all of the currencies are all in capital letters they're all capital letters all capital letters which means the only keys that I'm allowed to access are in fact those that have capital letters in them because these are the only keys that this API makes available to me so if I want to convert between US Dollars and Euros lowercase what I might want to do is first take the currency the thing the user typed in and first just call to uppercase on it which is a JavaScript function that takes a string and converts it to uppercase I'd like to take whatever the user typed in and now just first convert it to uppercase that way if I go back here I can type in Euro lowercase press convert and I'm still able to get the correct conversion rate the other thing that we won't noticeably notice the difference with here is that right now I'm assuming that all of this is going to go successfully that we're going to successfully be able to make a web request we'll successfully convert the response back to Json but you never know an API could go down the API could change and do something unexpected and so anytime you're dealing with these types of promises where you fetch something and say then do this then do that it can often be a good idea to add one last case which is a a catch case that basically says what should you do if something goes wrong so I can say catch the error and what I can just do is say like console.log error and then log the error there and all that's really saying is that if anything above goes wrong with the fetching and trying to process the response it's going to catch the error and then we'll just like print out to the console that something went wrong some error message happened and so that can be helpful nice to have just to make sure that when things crash they crash in a predictable way that you're able to see exactly what the error is just by looking inside the JavaScript console and so now we have a fully working web page that is able to communicate with an external API that is able to ask for information from another service on the internet use those results and put them back into the page really just going to show the power now that we get by taking advantage of the JavaScript language we have the ability now to not only use JavaScript to be able to run code on the client where we weren't able to before where right before we only had python code that was running on a web server but using JavaScript the really powerful thing is now the ability to manipulate the Dom the ability to use JavaScript to take the page and change the contents of the Page by updating things by reading what happens to be on the page whether it's inside of a particular element or what a user happened to type in and using that in conjunction with event handlers ways that we can listen for when the user clicks on something or when the user Scrolls through something or when the user types a key to be able to respond and therefore make our web pages all the more Interactive next time we'll continue our discussion of JavaScript looking at how we can leverage the features of JavaScript to continue to build even more interesting and engaging user interfaces so we'll see you next time welcome back everyone to web programming with python and JavaScript and last time we took a look at JavaScript that language that ran inside of a user's web browser clientside and allowed us to do a number of things to make our web pages more interactive JavaScript enabled us to display alerts to be able to manipulate the Dom the structure of the web page in order to add content or see what content was already there and it also let us respond to user events when a user clicked on a button or submitted a form or typed something into an input field we could have JavaScript functions run that responded to those events in order to make our web pages more interactive today we're going to continue that conversation in particular taking a look at user interface design looking at some common paradigms in terms of user interfaces and how we can leverage JavaScript to be able to achieve those goals to create interactive user interfaces that will be valuable when users are interacting with our applications so one of the more common paradigms especially nowadays in web programming is the idea of single page applications thus far if we want to create a web application that has multiple different pages we've generally done that by multiple different routes in our Django web application for example where you go to slash something to get one page and slash something else in order to get another page but commonly using JavaScript we have the ability to create single page applications where the entire web page is really just a single page and then we use JavaScript to manipulate the Dom to replace portions of the page with things we want to replace and this has a number of advantages one of them being that we only need to make modifications to the part of the page that is actually changing if for example you have five different pages but the general layout and structure of the page is pretty similar when you switch between Pages rather than load an entirely new page you can just load the part of the page that is changing and this is especially helpful for applications that are changing quite frequently so let's take a look now at how we could Implement for example a very simple single page application so let's imagine for example that we want a single page application that just displays three different pages but all included in the same page I'll go ahead and create a new file that I'll call single page.html inside of which we'll include our usual HTML tags and inside the body of this page now I'm going to include three different sections of the page to represent the three different pages I might want to display to the user so I'll have a div whose ID is page one that maybe just has a heading that says this is page one and you could imagine there's more content on these Pages as well idea of whose ID is page two we'll say this is page two and then one final day of whose ID is Page Three it has a heading that says this is Page Three for example now right now if I were to open up single page.html what we'd see is we see all three pages at the same time and now that's probably not what we want what we really want is by default to hide these Pages until we want to view the pages one at a time for example so one thing I could do is use CSS to be able to toggle whether or not something is visible adding some style tags to my page to say that by default all of my divs should have a display property set To None meaning they're not visible they're not displayed on the screen now if I refresh the page I don't actually see any of the three headings that I had there before but what I'd really like is for some buttons now to allow me to toggle between these three pages so I'll give myself three buttons one button that says page one one button that says page two and one button that says page three for example and I need some mechanism for these buttons to know when you click on this button what page should be displayed so I'll go ahead and use data attributes which we saw last time with JavaScript to add some additional information to these particular HTML elements where I'll give the first button a data Dash page value of page one the second one a data Dash page value of page two and the third one a data Dash page value of Page Three here again just providing information so that later when I write some JavaScript I can have the JavaScript code look at the data Dash page attribute to say that when you click on this button you should let me see the div whose ID is page one that's what this is going to allow us to signal so now let's go ahead and write that JavaScript what I want to be able to do is to be able to say I would like to show page one and hide the other two or show page two and hide the other two or show page three for example and so to do that I'll first write a function that will let me do that I'll write a function called show page that takes us its argument like what page I want to show and so what should this function do what we're going to do is we're going to say document.queryselector and I want to get the thing that has a particular ID the ID of whatever this input happens to be this page is going to represent the ID of the div that I want to show so I'll say get me the thing that has this ID and then using a template literal I'll say all right get me the ID of page whatever element has that particular ID and then I'd like to change its style property which part of the style well I want to change its display property and instead of none which was the default here where I said don't don't show it at all the other option for a div is block meaning it shows up as just a block that is on the page that is actually visible and so now I have this show page function and I can test it in fact if I go into my browser refresh the page I now see three buttons the buttons don't do anything just yet but what I can do is in the console if I actually just try running this I can run the show page function and say like show page page one for example press return and all right page one now appears on my page and if I rest show page page two then page two will become visible and all right that did half of what I wanted page two is now visible but so is page one so I probably want it such that if I ever show a page I hide the other Pages first like hide all the pages and then show page two or hide all the pages and then show page three so how could I go about doing that well first I might want to just when I show a page first hide all of the other Pages hide all the pages so to get all the pages I'll do document.queryselector all get all of the divs which is what I'm using to include and close the pages and now for each one of those again effectively creating a loop where I'm looping over each of the divs for each div let's go ahead and set the div.style dot display property equal to none and so what this show page function is now doing is it is first querying for all of the divs which are simulating my pages inside of the single page application and for each one of the divs we're going to pass it as input into this function which is the argument to for each again using this Arrow function notation which is just a shorthand way of expressing a function where I'm here saying that for each of the divs we'll go ahead and modify its style property setting display equal to none meaning don't show any of the divs and then show only the div that was requested so now this should solve the problem of multiple Pages appearing simultaneously that if I go back to this page and I click or write show page page one then page one appears but if I run show page of page 2 then page two appears but page one disappears and likewise when I show page page three that shows page three but not the other two so I can manipulate which page is visible all via the console but now what I'd like to do is get these buttons to actually work where if I click on one of the buttons that has the effect of actually displaying the requested page so in order to do that well I want to attach some event listeners to these buttons which means I need to wait until those buttons have loaded onto the page so we'll use document dot add event listener Dom content loaded again waiting until all of the content on the page has been loaded and then and only then will I say let's go ahead and query selector all for all of the buttons and for each one of those buttons let's go ahead and attach an event listener to each of those buttons so I'm querying for all of the buttons and saying for each of the buttons I would like to do this with each button and what I'd like to do is say button dot on click when the button is clicked on go ahead and run this function I'd like to show page and which page do I want to show well I want to show whatever page is in the page part of the buttons data set and to get it the current button the button that has been clicked on recall that when we're inside of an event handler we can take advantage of the JavaScript keyword this which refers to whatever element has received the event so whatever button in this case that was clicked on so I can say this dot dataset dot page to mean that all right for each of the buttons when the button is clicked on we're saying button dot on click for each of the buttons run this function when the button is clicked we'd like to show a page which page do we want to show we'll take this button the button that received the event access its data properties accesses Data Page attribute which are down here either page 1 or page two or page three and go ahead and just call the show page function that we wrote a moment ago so now that we've done that we've attached these event handlers to the buttons so now if I refresh the page I can click on these buttons and toggle between any of the three pages and now the interesting thing here is that we now have the ability to just in a single page allow myself to simulate the idea of having multiple Pages all enclosed in a single HTML file but not needing to consistently make additional requests to a server in order to get access to that information now sometimes though it might be reasonable to want to reach out to a server when you need new information for a page for example you might imagine that each of these Pages contains a lot of text it's going to be inefficient if immediately we're loading all of that data into HTML and just showing and hiding them when we need to because maybe we're loading more information than the user is ever going to actually care about if they're never going to look at page 2 or page 3. so one thing we might imagine doing is loading this data dynamically last time when we were talking about JavaScript we saw how we could use fetch to say go ahead and request some additional information from a web server last time it was currency exchange rates but then we used that data that came back in order to fill in something onto our page and likewise we could do a similar thing here that if we have the general structure of a single page and we want to load new content rather than load entirely new HTML content and reload the entire page we can just ask our own web server for what part of the page needs to change and then just replace that part of the page and so that's what we'll take a look at now now combining Django for our web server and JavaScript for writing the clientside code to be able to generate a single page application and so for this we'll go ahead and go into an example I had in advance called single page one and inside of single page one this is just a Django application with a single app called single page and what we'll notice is we'll go to the URLs first there are two URLs one default URL that just loads the index function and then a URL for loading different like sections of a page that I might want to dynamically load for example so I have section slash some particular number and if we look at the views for what it is these URLs are actually doing the index function just returns index.html and then what the section function does is it first make sure the number is between one and three and if so responds with one of these just strings of text for example so how does this actually work if I go into a single page one and run the server if I go to this URL slash section one for example what I get is this block of text and if I go to slash section two I get that block of text section three a different block of text altogether so just different text and I'd like to incorporate this text into an existing HTML page for instance so here I'll go into index.html this template that gets loaded when I go to the default route and inside of index.html what we'll see is I have a show section function that behaves very similar to the show page function we saw from a moment ago but instead what show section is going to do is it's going to fetch what text I should display on the page from my own web server I'm fetching from slash sections slash fill in a number here number like one or two or three when I get the response in the past we've seen how we can convert that response into Json data if it's some structured data we can also just convert the response into plain text then I'll take that text console.log it just so we can see it in the log output but then go ahead and query select for the content of the page something that has an ID of content update its inner HTML and set it equal to that text so what this entire function is now doing is it is going to reach out to my server figure out what text content belongs in the new section and fill in the part of my page accordingly with the text that comes back from that HTTP request and then down further below inside of the page we'll see that I have a Hello heading three buttons that toggle between the different sections each of them has a data Dash section attribute this time for which section should be loaded and then a div that is initially blank just for the content of the page so putting this all together now if I go to the default route I see Hello plus three buttons to give me a choice between three different sections and if I click section one what's going to happen is Javascript is going to query slash section one ask for the text it gets that text back and it's going to fill it in into the page section one section two and section three so very similar to before but unlike what we had before where all of the text was being loaded into the HTML page all at once now we're using asynchronous JavaScript to only dynamically load information when we need it when we click on a section then it's going to make the request for what content needs to be filled in and it's going to fill it in and everything else these buttons this heading and you might imagine in a more complex website you've got a lot more going on around the edges of this web page all of that stays the same we don't need to reload any of that information we're only reloading the portion of the page that actually changes as we toggle between these various different section headings now this seems to be an advantage in some ways that maybe we can be more efficient about how we run our single page applications like this one thing we seem to lose though is the notion of maintaining State inside of the URL that generally the URL gives you an indication for what page you're on you're on something like slash one if you're on section one or slash two if you're on section two slash three for section three but of course we're staying on the same page in all of these examples whenever I click a button section one or two or three the URL is never changing the URL stays the same it turns out there's a way in JavaScript to manipulate that URL taking advantage of what's known as the JavaScript history API where I can push something to the history meaning update the URL and actually save that inside the user's browser history so later on they could potentially go back to that and to do that I'll show you yet another example inside of a single page two which is very similar except inside of index.html I've added a couple additional things one is that when I click on a button meaning when I click on Section 1 or section 2 or Section 3 I've added this line here history.push State when history.push state is going to do is it is going to basically add a new element to my browsing history where I first specify any data associated with the state so in particular I'm storing a JavaScript object representing what section number is being represented here next is a title parameter that most web browsers actually ignore so that can generally be the empty string but the third argument here is what should go in the URL and what I want to go in the URL in this case is something like section followed by the section number so I can go to slash section one or slash section two or slash Section 3 for instance and those will appear in the URL bar when I click on a different page then what I want to be able to support is the ability to say when I go back through my history if I click the back button in my web browser I'd like to go back from section 3 to section two if that was the page I visited previously and then it turns out to be an event handler for that as well window dot on pop State meaning when I pop something off of the history like go back in my history we have the ability to take some event as an argument and if you look at event.state.section which I've run console.log on so we can take a look at it in a moment we'll see what state was stored associated with that part of the user's history and I can go ahead and show that section so all in all when I run this web application going into single page two this time when I run the server I see Hello three sections for buttons when I click on one of those buttons not only do I see text but I also see in the URL bar that I'm now on slash section one that has been pushed onto my history and I've updated the URL to reflect that too I click section two that updates the URL as well Section 3 updates the URL too and when I've pushed things onto my history I've Associated some state with them so that I can go back if I ever need to and in fact if I open up the JavaScript console now and I go back for example back to section two what you'll see is that what gets logged is the number two when I print out like what is the current section that's associated with this URL it's saving that state that I should be loading section number two and so it does load section number two here so there's certainly nothing wrong with the original Paradigm of just loading different pages dynamically using Django like make a request and get a response but oftentimes as you begin to imagine applications where a lot of things are changing on the same page simultaneously you might imagine social networking websites where a lot of things stay the same but new posts might be added and you might be looking at different parts of the same page being able to dynamically load information request additional information and then display it on the page can actually be quite powerful a way to make your web pages a little bit more Interactive so that then is how we might build single page applications taking advantage of JavaScript to asynchronously load new data and then taking advantage of this history API that let us add things to the URL add things to the user's browsing history such that we could go back to them later by listening for window dot on pop State and it turns out that window object that we get access to in JavaScript is quite powerful it represents the physical window on the computer screen that displays all of their web content and there are certain properties of that window we can look at that allow us to enable some interesting features so for example your window is really described by what the user actually sees inside of their window in Google Chrome or Safari or whatever web browser they happen to be using and there are a couple of properties that might be of use something like window.inner width will represent how wide is the window which might be useful to know to know like the size of the user's screen for example to know how many pixels wide the window happens to be and just as there's a window.inter with there's also a window.inner height that represents the height of the window as well now window represents the physical part that they're actually seeing we've also seen another variable that JavaScript gives us access to and that is this document object so what is the difference between the window and the document well the document generally represents the entire web page but if web pages are long oftentimes the web page doesn't fit entirely inside of the window that you generally have to scroll through an entire web page and the windows only showing you one portion of that page in any given time so you can represent the document as like this big vertical section that goes beyond the window there might be part of the document that is above the window part of the document that is below the window as well so window.scroll Y is another variable you have access to on the window and window.scroll Y represents how many pixels far down have you scrolled so if you're at the top of the page window.scroll Y is zero you haven't scrolled at all but as you begin to scroll if you want to know how far the user has scrolled on a page you can look at window.scroll y to figure out the number of pixels the user has scrolled in the y direction the up and down Direction and the entire height of the page is represented in document.body.offset height that represents how tall the entire height of the document is and we talk about all this in addition to things like window.inner height and window.inter with because using all of these values together you can begin to do some interesting calculations so one thing you might want to detect for example is has the user scrolled down to the bottom of the page or not that might be something you care about knowing and it turns out there isn't an event listener that does this automatically but we can calculate it in order to try and figure this out if inner height is the height of the window scroll y is how far vertically the user has scrolled and document body offset height is the entire height of the document you can ask yourself what needs to be true if the user has scrolled to the bottom of the page and well if the user is scrolled to the bottom of the page well then scroll why plus the inner height meaning the amount they've scrolled plus the height of the window that must be at least or equal to document body offset height meaning the amount that they scrolled plus the window takes you down to the bottom of the page to the end of the page to whoever tall the document happens to be and using that mathematical comparison we can actually detect when the user has reached the bottom of the page and we can actually try and now put that into practice so I'll go ahead and open up an example that I have here called scroll.html and all scroll.html has right now is 100 paragraphs inside of the body tag I have a p for paragraph paragraph one paragraph two so on and so forth I have 100 paragraphs inside of the body of this HTML page and that's all that really is there right now such that now if I go ahead and open scroll dot HTML I see that I have 100 paragraphs that I can scroll through and what I might like to do is detect when I've reached the bottom of the page and maybe do something when I do so something like change the color of the page for instance so how might I go about doing that well I'm going to need some JavaScript so I'm going to add some JavaScript and I'll add an event listener for window dot on scroll on scrolling is an event that listens for when I'm scrolling through the window and when I scroll through the window we'll go ahead and run this function I'll just use an arrow function as a shorthand here what do I want to calculate well I want to calculate if window.inner height meaning the height of the window itself plus window dot scroll y meaning the amount that I've scrolled if that is at least document.body dot offset height well that means I must have scrolled to the bottom of the page or maybe even a little bit further if there's a little wiggle room to scroll past the end of the page so if this is true well then I've reached the end of the page and then we'll go ahead and say document.queryselector body and let's go ahead and change its style in particular change its background color and change the background color to Green otherwise if we haven't reached the end of the page then we'll take the body of the page and change its background color to white so what we're now doing here is taking advantage of the properties we know of this window object saying when we scroll the window let's check to see if we add this up and at least the height of the entire document we've reached the end of the page go ahead and change the style of the background to the body accordingly otherwise change the background to white or leave it at White if it already is so now if I take a look at this actual HTML page and reload scroll.html we'll see that the background is initially white but as I scroll down once I reach the bottom we'll see that the page changes to Green it's white before I reach the bottom but as soon as I get to the bottom of the page it turns to green and the reason why is because the height of the window height of the window here plus however much I've already scrolled from the top of the page up until now that together is equal to the entire height of the document which means we're able to detect the fact that I reached the end of the page and as a result we can change the color of the background to Green now this in itself is not a particularly practical use of detecting when we scroll to the end of something we probably don't usually care about changing the background color when you reach the end of the page but there actually are real applications and you might imagine this in the context of websites that allow for things like infinite scroll but if you're on a social networking site that has a whole bunch of posts you scroll to the bottom of the list of posts and then it generates the new set of posts as well or you're looking at news articles and you're scrolling through news articles and once you reach the bottom it'll load a whole new set of news articles without you having to go to another page how is it doing that well it's a combination of the same types of ideas that we've been talking about number one the ability to detect when you've reached the end of the page using JavaScript to detect that you're at the bottom of the page and number two to be able to asynchronously load using JavaScript load additional content fetch some additional page that has some additional content some additional news articles some additional posts and whatnot and then take that information and manipulate the Dom to add that information to the existing web page and that ultimately is what's going to give us this power to be able to support something like infinite scroll so let's now go ahead and try and see what it would look like to implement infinite scroll I've already started to create a sample application inside of this application called scroll and I've got an app called posts inside of it and what the posts app does is it's got a couple of URLs it's got a default URL that just loads an index route and then a post route that loads this posts view and so let's look at what these do index all it does is going to load a file called index.html this template and if I make a request to slash posts I need to provide two arguments I need to provide a start for what post I want to start with an N for what post I want to end with and then it's just going to generate some sample posts that just say like Post Number One post number two so on and so forth in practice you could actually use social network posts in place of this but this is good just for demonstration purposes so what this is going to do if I go into scroll and run server is that if I go to slash post and say start equals one and end equals 10 for example then I get a JavaScript object that looks like this recall that a JavaScript object is just a convenient format for passing information back and forth in Json format and what we have here is a Json object with a key called posts that gives me all of the posts Post Number One Post Number Two all the way up to number 10 and it's giving me those posts because I said start at one end at 10. but I could have specified other numbers as well if I had said something like uh start at 20 and go to 28 then it's going to give me post number 20 through post number 28. I can specify the range of posts that I want so this now is an API that I have implemented effectively that allows someone to get access to a variety of different posts by hitting this particular URL this endpoint so to speak and passing in parameters passing in what posts they want to start with and what posts they want to end with and then they get all of this data back presented to them in Json format that can then be used and what's nice about this is that now when we're loading posts rather than have to just guess at how many posts we need to load and then require someone to go to another page we can just do something like load the first 20 posts and now what we'd like to do is if they reach the end of the page go ahead and load the next 20 posts by hitting this API endpoint getting the next 20 posts and then filling that in into the HTML page so let's see now how that actually works in practice by taking a look at that template in index.html so go into templates index.html and there's a fair bit of JavaScript here but look at the body first the body just have a has a div for all the posts that initially is going to be empty now here's what the JavaScript is going to do and we'll walk through it we start with the first post so counter is going to keep track of what post we need to load next by default we're just going to start by loading Post Number One we have a variable called quantity that's going to tell us how many posts are we going to load at a time let's just say load 20 posts at a time so start with 1 to 20 then 21 to 40 41 to 60 so on and so forth and when Dom content is loaded go ahead and just call this function that's called load and what the load function does is it figures out what the start and end should be it fetches all the new posts and then for each of the posts that comes back is it figures out what this so asynchronously asking for new posts and what the ad post function does is it creates a new div populates the post inside of it and adds it to the Dom so now that we have these parts the ability to load new posts as by fetching from some URL all the posts that we care about and then for each of those posts that comes back add something new to the Dom as by creating a new HTML element and inserting it into the page we have the ability to dynamically load all of these posts so if I go not to slash posts but just to this default route I'll see that we have something like 20 posts that all show up but just 20 posts because every time I call the load function that is going to load the next set of posts for example and so what I can do is in the console if I try running the load function just by calling it myself press return after a second or so the next set of posts show up 21 all the way through 40. I call load again the next set of posts show up 41 through 60. 20 posts at a time all using that asynchronous JavaScript but now what I'd like to happen is for all this to happen on its own without me having to intervene and manually write JavaScript calls I would just like to say well the same type of logic as before window.el and scroll let's go ahead and say if window.inner height plus window.scroll y is at least document.body.offset height meaning if I have scrolled to the end of the page well then just go ahead and call the load function that's all these lines are doing every time I scroll we check did we scroll to the end of the page and if we did scroll to the end of the page then go ahead and load the next set of posts so now I refresh the page I see post one all the way up through post 20. now watch what happens when I get to post 20 if I scroll to the bottom after a second the next set of posts appears I scroll to the bottom again I'm at 40 and then after a second the next set appears every time I scroll to the bottom more posts are going to load after that allowing you to effectively implement this idea of infinite scrolling by taking advantage of some JavaScript techniques where I can check for when I've got to the end of the page and then dynamically do something as a result of that something like load some additional Pages onto the screen and so here too a lot of power to be had inside of JavaScript and a lot of where the power of user interface comes from is from how it is that the user interface interacts with the user thinking about what the user is going to do and how the page should interact as a result something like user Scrolls to the end of the page and they see some new pages show up as well and one Technique we can use for just making HTML elements a little more responsive a little bit more interesting is by adding some animation to them as well the ability for things to move around and change their properties in some way and it turns out that CSS has support for animation CSS has already given us support for things like styling elements saying we want this element to be of this color and this size for example but it also gives us the ability to animate those properties as well to change the size of something or change the position of something over some amount of time and so let's now take a look at an example of what that might actually look like I'll go ahead and create a new file and I'll call it animate.html and inside of animate.html I'll go ahead and start by including our usual HTML title is animate and what I'd like to do is just add a little bit of Animation using CSS into this particular page I'm going to start with just a heading a heading that says something like welcome for example it's just going to display a welcome message such that now if I open animate.html here's what I see just a message that says welcome but now let's add some CSS to it let's go into the style tag and for H1 for this heading I'd like to apply a particular animation to it and I first need to specify what the animation's name is going to be and I can pick a name for the animation I'll say something like grow for example I'll set the animations duration to be two seconds and then the animation fill mode is like what direction should the animation move in should it go forwards or should it go backwards well generally want our animations to go forward so they're making some sort of forward progress According to some rules that we're going to specify so here I'm saying we're going to animate all of our headings using an animation called grow and now I need to Define what that animation actually does and to do that up above in style I'm going to say at keyframes grow and what this is going to allow me to do is specify some key frames for this particular element meaning where should the element start what should its style properties be and then at the end what should the style properties be and CSS is going to take care of the process of figuring out what needs to happen in all those intermediary fractions of seconds for example so what I can say is something like go ahead and grow from meaning what should its initial properties be and maybe initially I wanted to have a font size of 20 pixels and then we'll say 2 font size of 100 pixels for example so all in all what this is saying is I would like to apply an animation called grow to all of my headings this animation should last two seconds and go forwards and what is the grow animation going to do well it's going to mean at the start anything that obeys the grow animation we'll start with a font size of 20 pixels and at the end it will grow to a font size of 100 pixels and I have now defined what it is that that animation means so now if I go ahead and refresh this page animate.html you'll see that welcome changes size over the course of two seconds it goes from smaller to larger by obeying those keyframes I told it to obey this particular step a set of instructions where it goes from a particular font size to another font size and as a result we see the effect here on the page and it turns out you can do more than just manipulate size you can manipulate just about any CSS property you want so if I tell the heading that it should have a relative position meaning its position should be relative to other elements or other things and it's parent I can say you should change your position from being zero percent away from the left side of the screen to being 50 of the way from the left side of the screen and at this point grow is probably not the best name for this animation I'll call it move instead so animation name is move and so now what this animation is going to do is it's going to say when you run the animation go from being right next to the left side of the screen to being about 50 away from the left side of the screen so I can go ahead and rerun this and we see that's the animation that takes place it goes from the left all the way back up to about halfway across the screen refresh the page and it goes ahead and does the exact same thing and it turns out we don't just need to specify a beginning point and an end point for an animation we can specify various different keyframes for different points within the animation that we would like to capture something like at the beginning of the animation have this set of CSS properties maybe halfway through the animation have a different set of CSS properties and then at the very end have yet another set of CSS properties so I could say something like if I want the heading not just to move from left to right but also to move back again I can say at the beginning at the zero percent point when you're zero percent of the way through the animation you should be zero percent away from the left hand side when you're 50 of the way through the animation you should be 50 away from the left hand side and then when you're done with the animation 100 of the way through let's go back to zero percent away from the left hand side I now have three keyframes beginning of the animation middle of the animation back to the beginning of the animation again and the effect of this is if I refresh the page we go to the right and then we go back we're able to move One Direction and then move back and there are other properties we can use to manipulate these animations as well I can set the animation iteration count for example to two to mean rather than just do the animation once and then stop do the animation twice and then stop so refresh it goes to the right and then it goes left and then it repeats that a second time and it turns out if you really want you can set this to infinite to mean never stop performing that animation it's consistently going to have this heading move to the right and then move left according to those keyframes that I've specified and so if you ever see things moving around on a page interactive in some way there are a number of ways to do it you can animate things using JavaScript for example but there are many cases where CSS alone is pretty good at just creating these types of animations and while this animation right now is just running forever we could use JavaScript in order to control that animation as well so let's see an example of what that would look like I'll go back here in the body of the page in addition to a heading that says welcome I'll go ahead and add a button that just says click here for example and now what I'll do is add a little bit of JavaScript I'm going to add some JavaScript so that the button can now control the animation decide when the animation is going to start and stop and so what we'll do inside of the script is to First say document.ad event listener Dom content loaded meaning wait until the Dom is done loading as we've done before and let me now get that H1 element document.queryselector H1 and initially I'm going to set its style dot animation playstate equal to paused so animation play state is a property of the style that lets me decide if the animation is playing or paused and I can control that using JavaScript rather than just say run infinitely forever I can say the animation playstate should start out as paused by first getting the H1 element then modifying the animation play state property of that particular element but now what I'd like to happen is anytime someone clicks on the button I want to change the animation play state so I'm going to say document.queryselector button meaning get that button and when someone clicks on the button let's run this function where if the current animation play state is paused well then go ahead and set animation play State equal to running and otherwise if it's already running then let's go ahead and set the animation play State equal to paused so all in all what this function is going to do is it's going to get me the heading pause this initially and every time the button is clicked run this function where the function says if we're paused go ahead and start running the animation otherwise go ahead and pause the animation by modifying that animation play state property of the head so now if I refresh this page right now we have welcome plus a button that says click here and initially everything is pause there's no animation happening but I click here and that begins the animation which would go on indefinitely until I decide that I want to stop it at which point I click it again and the animation pauses and I can control when to start and when to pause that animation as well and so this can be helpful and nice when you want to create something a little bit more interactive something animated on the page but this is especially helpful because it means that you can gradually change CSS properties over time rather than just immediately change something you have the ability to animate something to make it work a little bit better so let's take a look at an example of how you might put that idea into practice let's go back to our posts example where we had this infinite scrolling let's suppose but imagine now that we want the ability to hide posts when we're done with them so I've prepared an example called hide which is very similar to what we had before but this time I've just added one extra button and the button says hide on every single div right now clicking the hide button does nothing we'll go ahead and Implement that in just a moment but first to see how this worked if you go into hide go into the index.html template the only change that's been made here is what happens when I add a new post recall again that what this application does is it loads posts from a server and then when it gets those posts it Loops over each of the individual posts which is a string of text and it adds that string of text inside of an element onto the page via this add post function and what the ad post function is going to do here is first create a new element create a div in which to store that post give it a class name because that's how we're going to animate it and then set its inner HTML equal to the contents of the post something like Post Number One Post Number Two post number three and then add a button that just says hide and then we're going to go ahead and add that to the Dom as well so that's what ad post is now going to do we're sort of generating some HTML using this JavaScript code and then adding that HTML to the page and now what we're adding is a div that has not only the contents of the post as text but it's also going to give us access to a button that ultimately we hope is going to let us hide that post as well so how do we actually get the hiding of the post to work well what we want to do is somehow detect when the user clicks on one of those hide buttons so there's a number of ways we could do this but one way is just to listen for any time anyone clicks on the document as a whole anytime anyone clicks on the document I might like to ask something like what did they actually click on and it turns out that with most event listeners the function the event listener takes in can take as an optional argument the event itself which is a JavaScript object that contains information about the event that happened like the Click event or the scroll event or the key down event or the key up event for example and one of the properties you get access to is event dot Target which is like what was the target of the event in this case what was the thing that was actually clicked on and I'll go ahead and save event.target inside of a variable called element where the idea now is that whatever gets clicked on that is the event's Target we're going to save that inside of element and what I want to know is is element is that one of the Hide buttons I want to know is it a hide button I could have also attached an event listener to each of the Hide buttons this is just an alternative way of doing it that I'm showing you for sake of demonstration where we say when we click anywhere in the document figure out what was clicked on and save it inside of this variable and if it's a hide button then it's going to have a class of hide right because I gave every class every hide button a class of hide and so what I can say is if element dot class name equals hide well that means that what was clicked on is something with a class of hide we can assume that it is in fact a hide button and then what I want to do is I can do something like element dot remove to say go ahead and get rid of that element so now what does this do if I refresh the page let's try it post number one if I hide it I want to hide Post Number One all right that didn't quite work it was close it got rid of the Hide button but I didn't want to get rid of the Hide button I wanted to get rid of the whole post so what's going on here is it seems to be that if the element's class name is hide meaning I clicked on a hide button element.remove just removes that element it removes the hide button but it doesn't remove the post that contains it and if you think about this in terms of the Dom the post is a div and it's child element is the button this hide button and so you remove the button but it doesn't also remove the post as well if you want to remove the post as well you need to remove not the element but the elements parent and in JavaScript it turns out there's a way to do that too rather than element dot remove I can say element dot parentelement dot remove to say take the element get its parent and remove that so now I refresh the page now I see a post one I want to hide it I hide post one and all right now I see post 2 and the post one has gone away if I want to hide post three I hide post three now post three is gone now I go straight from post 2 to post four so this works but it's also not immediately obvious what's going on like because all of the posts are the exact same height when I get rid of post one and three it's not immediately obvious to the eye that they've gone away because post two and four they look almost exactly the same you really have to be paying attention to know the hiding worked and so this can be a time where animation can actually be quite helpful so what I can do is say something like let's go ahead and give this post an animation associated with every post we'll give it an animation name called hide an animation duration of two seconds we'll say it'll take you two seconds in order to hide and an animation fill mode forwards I want to go forwards with the animation and initially I'll give the post an animation play state of paused meaning initially I don't want the animation to be running because I don't want to hide all the posts immediately pause this animation later we'll go ahead and run the animation in order to actually hide the post then I need to Define what does it actually mean to hide the post and I'll say well all right at the zero percent Mark what does it mean let's give yourselves an opacity of one opacity is a CSS property that just controls how opaque or how transparent an HTML element happens to be and at the end a hundred percent of the way done with the animation we'll set opacity to zero so initially we can fully see the element at the end the element is totally transparent and now what I need to do is actually trigger this to happen somehow so this is probably going to happen inside of my event listener where instead of removing the element right away let me just take the parent element and set its animation play State equal to running for example meaning when I click the hide button go ahead and run the animation that will change the opacity from one to zero over the course of a couple of seconds and then if I really want to I can add another event listener to say take the parent element add event listener there's an event called animation end which happens when the animation is over and then I can say all right when the animation is over we'll then go ahead and remove the element so all in all rather than just immediately remove the element when I click on the button that says hide what I'd like to do is say if you click on a button and the button is hide go ahead and get the parent element not the hide button but the post itself set its animation play state to running meaning run the hide animation and then add an event listener to the parent to that post as a whole to say when the animation is over go ahead and remove that entire post from the Dom altogether so what is the effect of all of this now of having this animation and running it well now if I refresh the page I see all these posts if I try and hide like post number two for example you'll see that the opacity changes and then it slowly disappears and then only after it's totally transparent the post disappears entirely so I can say hide Post Number Four it disappears and then post number five jumps up to fill its place and I can do that for any of these posts triggering the animation when I click on the hide button and so this is part of the value of what animation can do is to be able to make our user interfaces a little more pleasant from the perspective of the user by not immediately getting rid of a post but by having a nice fade out so it disappears nicely now even this is not perfect animation wise like one thing you might notice is that it jumps up as soon as the post is gone if I hide post number three I hide it it disappears and post five sort of jumps up very abruptly in order to fill its place what I might like is to be a little bit cleverer to somehow shrink the size of the post after it's gone so that the post doesn't jump into place but it slides a little bit more naturally into place and so there's some additional things I can play with here maybe I want to say they're all right let me make this animation a multiple part animation so here instead of just from zero to 100 setting the opacity from one to zero maybe in the first 75 percent of the animation that will take care of reducing the opacity going down from one all the way down to zero but in the last 25 percent of the animation will still end with an opacity of zero but anything that creates vertical space I want to reduce down to zero so the height should be zero pixels the line height which is how high the text is should also be zero pixels and any padding I want to go away it turns out I've added some margin to the bottom of the post I want to make that go away as well so I want to set all of those to Zero from whatever their initial values happen to be that initially the height is like a hundred percent of what the height could be likewise for line height 100 of the parent uh initially I have like 20 pixels of padding and a margin at the bottom of 10 pixels and I want all of that to still be true 75 percent of the way through the animation but it's only in the last 25 percent of the animation that I want to set all of these vertical height properties down to zero I want to remove all the height remove the line height remove all the padding and the effect of this is I'll have an animation now where for the first 75 percent of the animation the only thing that changes is the opacity the opacity goes from one fully visible to zero fully transparent and then in the last 25 percent of the animation the post is already transparent you can't see it but it's still taking up physical space on the page but we're going to now reduce the height of that post so that now you won't be able to see it at all so now if I refresh this page here we go under all the posts but now if I click hide on a particular post we'll see that it first Fades out and then its height shrinks so that the next post slides very nicely into place I can do that again hide the post it's transparent and then it slides into place and this again is just an application of this idea of CSS animations using properties of Animation to make our interfaces a little bit nicer to use a little bit clearer visually to the user that one post has gone away and the rest of the posts have now scrolled up in order to take their place so now we've been able to use JavaScript to create a lot of nice user interfaces we've been able to create single page applications to create infinite scrolling to be able to create some animations as well and use JavaScript to be able to control them but one thing you might be realizing at this point is that our applications are starting to get fairly complicated there's a lot of JavaScript code needed to manipulate a lot of different parts of our application at the same time and you can imagine that as web pages start to get more complex and as you want to start making them more interactive and more Dynamic there's going to be a lot of JavaScript code required in order to keep everything in sync in order to make sure that all of the elements are updated when they should so on and so forth and it's for that reason that in recent years a lot of JavaScript has now turned to some JavaScript libraries or Frameworks that allow to more efficiently and more effectively create user interfaces that are more interactive and more reactive and one of the most popular of these is a framework known as react react is a JavaScript library that is going to enable us to be able to design user interfaces that are very interactive where the content of the web page updates automatically based on some underlying State and what we'll do now is take a look at a brief Taste of react to get a sense for how Frameworks like it can actually work and can help us in designing some interactive and useful interfaces for users to be able to interact with react is ultimately based on this idea of declarative programming a particular style of programming which is different from the types of programming you might be familiar with more classical programming Styles like imperative programming in imperative programming you generally give the computer commands tell the computer what to do for example if we had that counter program from before and we wanted to update the counter from one number to another number in the view like the HTML that the user sees we would include something like a heading that just has the number zero inside of it and then the logic in imperative programming would take something like this form it would be like all right first document.queryselector H1 to get that H1 tag get it at the inner HTML parse int will take the string and convert it into an integer and we can save that inside of a variable called num for example and then after that if I want to increase it I would take this variable num and just add one to it num plus equals one add one to it and then if I want to update this heading in order to replace the zero with a one for example well then I would need to say document.queryselector H1 set the inner HTML equal to that number for instance in order to say all right numbers now one go ahead and replace that in the view but this is a fair amount of code to do something fairly simple just like increase a number by one and the reason why is because we've had to be very explicit about what instructions we're giving to the web browser we're saying First grab the H1 figure out what number is inside of it add one to that number and then replace it inside of this tag what declarative programming is going to allow us to do is it's going to allow us to just describe what State Should be displayed on the page in what form in declarative programming in our view like the HTML like code that we're going to be writing we're just going to say something like H1 and then in curly braces num to mean like fill in the number here and this is what the react syntax is going to look like and then the logic code if we want to increment that number by one is we just need to say num plus equals one add one to the number and the effect of that is that since we have declared that inside of this heading it should be whatever the value of the number is when we increment the value of number react is effectively just going to update the view so that the number updates as well and so this will be some of the power that react gives us react lets us divide our application into a whole bunch of different components where a component is something like this thing here that is keeping track of some sort of count along with a button that might manipulate it and then make that component based on some underlying State some underlying variables that represent the state of the application something like the current number and then we can manipulate that state and when we manipulate the state that will have an impact on what the user actually sees and react will handle the process of updating that user interface for us there are a number of ways to get react working on our web page but the simplest is probably just to include these three JavaScript packages inside of our web page so we're first going to include react itself which is going to be the library that's going to allow us to Define these components and how they behave then is react Dom a special package that's going to allow us to take react components and insert them into the Dom the document object model that represents the struct structure of the entire page and then finally Babel is going to be a package that we're going to use in order to translate code from one language to another it turns out that when we're rating react code we're not actually going to be writing JavaScript we're going to be writing in an extension to JavaScript known as jsx and jsx is going to be an extension to JavaScript that looks a lot like JavaScript but has some additional features in particular it has the ability to effectively allow us to represent HTML inside of our JavaScript code in a way that's much easier to read and it's going to be convenient for us to deal with browsers on the other hand don't understand jsx automatically so what we're going to use is a tool like Babel to convert that jsx code into plain JavaScript that our web browsers are ultimately going to be able to understand the best way to get a feel for this kind of thing is just to see it in action so I'll go ahead and create a couple of react applications just to get a sense for how it is that you can use react in your own applications as well so let's start by taking a look at react.html and what I have here is the beginning of an HTML page inside the head section what you'll notice is I've already included these three script tags and what these script tags are doing are just including those three JavaScript libraries we were talking about a moment ago I have a title for the page just called react and now let's start to fill in the body of this web page I'll begin by adding a div which I'll give an ID to I'll call it app but I could call it anything and this is where our application is going to go but right now I'm just going to leave it as empty it's going to be react's job to fill in this div with the content of our user interface and now beneath that div I'll start to write some JavaScript but remember I'm not going to be writing JavaScript per se but rather jsx that extension to JavaScript so in this case I'll need to add an extra attribute type equals Text slash Babel and all this is doing is telling my browser that it's going to need to translate this jsx code into JavaScript code that the browser is actually going to be able to understand before it tries to run this code in practice if you were developing a real application what you would want to do is you would want to do this translation ahead of time prior to deploying the application but here we're just going to translate it on the Fly and so all of our react applications are going to be composed of components where a component is just some part of my web application's user interface and to describe a component I can write a JavaScript function so I'll create a function called app which is going to represent this app component and what's going to go inside of this app component well it's a function so it's going to return something and what it's going to return is what should appear inside of that component and this app component could really just be for example a div that says hello let's say and this is where the power of jsx really starts to come in that here I can write HTML like syntax inside of my JavaScript code and jsx is going to be able to understand it so this function right here is a function called app that is representing a react component and when this component is rendered onto my web page it's going to say hello so there's one last line I need inside of my JavaScript now and that is to actually render this component into the page to do that I'll say react Dom dot render and the first argument to this function reactdom.render is what component would I like to render the component is this app component that I just created and so I'll say app again using this HTML like syntax and then the second argument is where on the page would I like to render this component and I want to render this component right here on line 10 where I have a div whose ID is app so I'll need to add some JavaScript code to find that particular div and to do that I can just say document dot query selector and then uh hash app to say find the element with an ID of app and that is where I would like to render this app component so I first created this empty div then I defined this function representing a react component and then after that we're going to render that component inside of the HTML page itself so now if we were to open a browser and see what this page actually looks like I'll make the text a little bit bigger you see that we actually do see the word hello and if I make a change to the component and refresh the page it will change the page as well so if the component instead displayed hello world well then I refresh the page and the page now also says hello world and because this is Javascript I can add JavaScript code to the function just as I could with any function in JavaScript imagine for example that I had some variables like let's create a variable X which is equal to 1 and a variable Y which is equal to 2. inside of this div rather than just render some text I can use curly braces to say plug in the value of some JavaScript expression I could plug in the value of x plus y for example and now by including X Plus Y in these curly braces JavaScript is going to evaluate what is X Plus Y and display that inside of the div instead and so now when I refresh the page you see that the page just says three for example and so that's the basics of react we create these components and then render those components all using the power of JavaScript but where react starts to get more powerful is when we can reuse components the whole idea of a component is it represents some part of the user interface and I could reuse that same component across multiple parts of the interface as well imagine for example that inside of my app component I was going to render a div that had three headings Each of which said hello so there's one heading there's another one and we'll add a third one there as well so I have a div with three headings inside of it and we can see what that looks like each one of them says hello but there's some repetition here I'm having to use this H1 tag three times all to create exactly the same UI element on the page this is a case where I can create a separate component and then just reuse that component rather than have to repeat myself multiple times so how could I do that well remember that in JavaScript we can write a function to represent a react component so I'll add another function here and I'll call that function hello because it's going to represent this hello component and this hello function is also going to return something and what it's going to return is a heading in H1 that just says hello and so now inside of my app component rather than render three separate H1s I can simplify this a little bit to just say hello here I'm saying go ahead and render a hello component here we'll render a second one and a third one after that each time I render a hello component it's going to display as this heading that just says hello so I refresh the page and nothing changes I still see three headings Each of which says hello because inside of my app component I'm rendering this hello component three times and each time it's going to display this H1 but where components start to get more powerful is when they're not always displaying the same information every time but when we can parameterize those components with Properties or as react simplifies them props short for properties so what would that mean we see that HTML elements can take attributes likewise react components can take properties where maybe I don't just want to say hello but I want to say hello to someone hello to Harry or to Ron or Hermione for example so I could say hello name equals Harry using syntax much like an HTML attribute then here say hello name equals Ron and then finally hello name equals Hermione and so now my hello component is accepting this prop this property called name which is different for all three of these components and so inside this hello function now I would like the hello function to take advantage of these properties of these props and so I'm going to add an argument to the hello function that argument is conventionally just called props and now instead of just saying hello I'm going to say hello comma and then remember to plug in a JavaScript value I use curly braces and inside of those curly braces I can say props Dot and then whatever the name of the property is in this case the name of the property is just name so I can say props dot name to say whatever the name prop is go ahead and plug that in right here inside of the hello component so the hello component is going to say hello comma and then someone's name so I can save that refresh the page and now I see Hello Harry hello Ron and hello Hermione three different components Each of which is still just this hello component but we're rendering it with different props one time with the name of Harry one time with the name of Ron and one time with the name Hermione and so this is where components can start to get a little bit different by passing in different props into those components we can decide how that component is ultimately going to render but let's add to this a little bit and start to add State into our react components as well and state is going to mean any kind of data that we want to store inside of the component itself and for this let's try to recreate the counter application that we created when we first introduced JavaScript where we were really just creating a button that allowed you to count and it counted up from zero one two three four Etc so to do this let's create a new file I'll create a new file and just call it counter.html and we can start just by copying the contents of react.html into our counter.html file we're still going to use those same script tags and we can still have an app component but what's going to be inside this app component is going to be a little different I'll change the title of the page 2 to the counter instead of react so what goes inside of the app component well if we're going to do discounting we need a div that's going to display the number that we've currently counted to something like zero to start with and we're going to need a button this button is just going to be count which will be the label for that button so a div that just says 0 and a button that says count and now if I open up counter.html make it a little bigger you can see that I have this number 0 here and a button that says count of course right now clicking on the button doesn't do anything because I haven't written any JavaScript code to say what should happen when this button is actually clicked on but before we get there let's modify this program a little bit right now I've written the number zero directly into the div itself but it's not always going to be zero eventually as I start counting by pressing that count button that number is going to change so what I'm going to do now is Factor this zero out into what's known as state inside of my react component and here one way to create state in my react component is to use a special function inside of react called use State this is one example of a react hook that allows me to add some additional functionality into my react component and the argument to react.use state is going to be the initial value of that state I'm going to start counting and I want to start counting from the number 0 so I'm going to include the number 0 as the argument to this use State function so we're going to start counting at zero and what this use State function returns is really an array of two things it's going to be a variable that I can give a name to I'll call it count and also a function that I'm going to call set count and that function is going to allow me to set the value for the state If Ever I need to change the state at some point in the future so this use State function except 0 the initial State as its argument and then I get two things back I get the state variable itself called count and I get a function for changing that state when I need to so now instead of rendering a zero inside of the div just by writing the number zero I'm going to instead in curly braces go ahead and render whatever the value of count is initially it's going to be zero but eventually that number might change and I want my UI to reflect the changes in the underlying state so right now if I refresh the page it still says zero because the initial state was set to zero but I could change that if initially that initial state was some other value I could refresh the page and see a different value appear for the count instead whatever the value of this count variable is in the state that's going to be what the user is going to see when they're looking at my user interface And when they see my component so now let's make this button actually do something because right now the number is never changing to do that I can add an on click Handler and notice one difference between on click and react and unclicked as we traditionally used it in JavaScript I'm using this Capital C and that's just a common react convention when we're defining event handlers and here I'm going to say on click and then in curly braces the name of a function a function that I would like to run when this button is clicked and I can call that function whatever I'd like I'll call it update count for example and now what I need to do is Define a function called update count and I'm going to Define that function inside of this react component inside of my app function it turns out in JavaScript you can have functions that are defined inside of other functions so I'll Define this function called update count and what do I want the update count function to do well what I'd like to do is just increase count by one and you might think that I could do that just by saying count equals count plus one but it turns out you can't quite do that in react in react whenever whenever I'm using this use state if I want to change the state I have to use this function that use state provides to me for whenever I want to set the new value of the state so rather than count equals count plus one I have to use the set count function and the argument to set count is going to be count plus one so set count is this function that is going to change the underlying State inside of my component and the argument is what should the new state be and in this case it's just going to be count plus one one more than whatever the count was before so I can save that and I'll go ahead and refresh the pager it starts out at zero but every time I click on this count button you'll notice the count increases by one and again I have no code that's saying go into the div and change whatever is inside of the diva all I have inside of this div is this reference to this state variable count and whenever the state changes JavaScript and in turn react knows that what react needs to do is to recreate this component rerender the component by displaying the new value of this state variable and then when the button is clicked on we're able to run this function to change the value of that underlying state so by taking advantage of these react components with State we can start to represent information inside of our components and then Define what our component is going to display as just by representing HTML in terms of that underlying State deciding how we should use that state in order to render an interface that the user is ultimately going to see so let's now try and put these pieces together and create a web application that uses these abilities of react to Define State and to manipulate that state and in turn update a user interface based on changes that are happening to that underlying State and we'll create an application that will just display some simple mathematical questions to the user and quiz the user on some basic addition facts for example so let's create that application I'll create a new file and call it addition.html and inside of addition.html I'll start again just by copying the contents of this counter.html file because the framework the structure of this page will be similar but I'll go ahead and clear out what's inside of my app component at least for now and so what would I like for my app component to render well let's go ahead and render a div and if I want to create an application that's going to ask the user some mathematical questions and then prompt the user to type in an answer there are at least two parts of this user interface that I'm going to need I'm going to need a place to display the addition fact answer like what is one plus two for example and then I'll need an input field where the user can type in their response to that question and then see if they got the question right or wrong so inside the div I'll start by creating a div that displays the question itself something like one plus two and then beneath that I'll just add an input field eventually we'll add more to this user interface but for now all we really need is a div that displays the mathematical question and an input for the user to type in their response so now if I go ahead and go to addition.html here's what I see I'll make it a little bit bigger I see one plus two and then an input field where the user could start to type in their response but just as we did before I don't want to literally write the numbers 1 and 2 into what I'm returning instead I want these one and two to be based on some underlying State inside of my application the application is going to maintain State about what two numbers to add together and then it's going to display a user interface based on that state so what could I do here well one thing I could do is again use react.use State start this number off as 1. and maybe call this num1 and then a function to set number one and then I could do it again let's create num2 and set num2 to be react.use state two and I could have two different pieces of state num1 and num2 Each of which has a different function set num1 and set num2 that are each representing the two different numbers that I would like to add together but already this is starting to get messy and over time as I add more different pieces of state to the application as we'll see in just a moment the state might start to get more and more complex with more and more different functions and variables and so it's often helpful and a common practice in react to combine multiple pieces of State just into one JavaScript object that's maintaining all of the different pieces of State for this particular component and to do that I'll again use react.use state but instead of setting the state initially to be a number like one or two it's instead going to be a JavaScript object that has keys and values or I could say let num1 be the number one and let num2 be the number two much like a dictionary in Python for example where I have multiple different values num1 and num2 all together inside of the same object and I can call that state and have a variable and have a function called set state that is going to update the value of that state and so rather than have to have all of these different variables I can simplify a little bit to just State and a function to set the state and the state now has these two different pieces number one and number two and so now instead of rendering literally the number one using curly braces I can say State DOT num1 and instead of rendering literally the number two I can say state DOT num2 drawing upon that state to decide what it is going to appear inside of the user interface and so right now the page appears no different but if I were to change those initial values of the state maybe make it two and four for example and then refresh the page well now it displays as two plus four and so that's helpful we now have a user interface where the numbers are based on the state but now what I'd like to do is add the ability to keep track of what the user typed in so we can tell if the user correctly typed in the answer to this mathematical problem and how would I do that well the state represents any information that we need to keep track of inside of this component and so in addition to storing the two numbers inside of the state I likely also need to keep track of a third piece of information which is the response what did the user type in into this text field and so I'll add a third part of the state called response that initially will just be the empty string will just be nothing and then this input field I'm going to give it a value and the value is going to be state DOT response whatever the user typed in as the response that's stored inside of the state and that is going to be the value of what shows up in the input field and so that way whatever is in the input field will have access to it inside of this state.response variable but there is a problem and here's the problem I'll try refreshing the page I'll go into this text field and let's say I know the answer I know 2 plus 4 is equal to 6. I'm now going to press 6 on my keyboard but as I press six on the keyboard nothing's happening no 6 is appearing inside of the text field even though I am pressing the key on the keyboard so why is that why is the text field not updating well the reason is the value of the input field whatever appears in the input field is this value state DOT response and state.response is always this empty string and never changing what state DOT response is equal to and so I need to change this a little bit I need to add as an attribute to this input field on change meaning when the input field changes I need to do something and I'll call a function that I can call update response but again I could call that update function whatever I'd like it's just the name for the function that's going to run whenever something changes in the input field so let me now Define that update response function I'll Define a function called update response and because it's an event handler it can accept an argument which is the event itself the fact that something has changed inside of the input field and when I have access to this event it turns out that if I want to figure out what it is the user is typed into the input field I can get at that with event dot Target dot value and I'd only know that by looking at it in the documentation but what I'd like is for event.target.value to be the new value for this response and so what I'd like to do is do something like this set State and what should the new value of the state be well I would like for a response to no longer be the empty string but to now be event dot Target dot value and that is going to be the new value for response quite done yet because State doesn't just have response as one of the parts of the state the state also has num1 and num2 and those two pieces aren't really changing so I could say all right num1 is just going to be whatever state DOT num1 was that's not changing and num2 is going to be whatever state DOT num2 was that's not changing the only thing that's changing is the response but this is starting to get a little bit verbose and especially if I start adding more and more different pieces to the state it's going to become difficult to manage if I constantly have to repeat myself for all of the parts of the state that aren't changing ideally what I'd like to do is just specify the parts of the state that will change and ignore everything else and so one shorthand way to do that in JavaScript is to use what's known as the spread operator and it looks like this dot dot dot and then state and what this is saying is just use the existing values of the state for everything else like num1 and num2 the only thing to override is the new value for the response and so this syntax here is my way of saying I would like to update the state everything should stay the same except for response which is now going to be event.target.value in other words whatever it is the user typed in into that input field and so I'll go ahead and refresh the page and now if I type a number like six you actually see that number appear in the input field so that's great we've now displayed a question where the numbers are stored in the state and the user can type in a response where that response is also stored in the state now what I'd like is when the user presses the enter key on their keyboard we check did they get the answer right or did they get the answer wrong and so how would I do that well the first thing I need to do is in this input field somehow detect when a key is pressed when a key is pressed what I'd like to do is check to see if it was the enter key and if it was the enter key then let's go ahead and check to see what the actual sum of the two numbers is and see if the user got that right or wrong so let's add an event handler on key press is going to be equal to something again I can name this function whatever I'd like I'll call it input key press but again I could name that anything and now let's define that input keypress function so up above I'm going to Define this function called input keypress again it takes that event as its argument and this event is going to happen anytime a key is pressed regardless of whether it's a letter or a number or the enter key and so I want to check to make sure that the key is actually the enter key that's the only time that I want to now check to see if they got the question right or wrong so I'll add here a condition it's just JavaScript so I can say if event.key is equal to enter well then let's go ahead and check and otherwise we don't have to do anything I don't need an else case here because nothing should happen unless it's the enter key that was actually pressed and so now how do I check to see if the user got the answer right or wrong well inside of state.num1 is the first number and inside of state DOT num2 is the second number so I could have a condition that check if state.num1 plus state.num2 is equal to State DOT response which is what the user typed in into the input field but that doesn't quite work because state.response that's a string the user doesn't necessarily have to type in numbers it's possible the user is going to type in some letters instead for example or other characters instead and so what I'm going to do first is convert the response into an integer if we're able to do so so I'm going to Define a variable called answer using the JavaScript function parseint that takes a string and tries to convert it into an integer so we're going to parse the end state DOT response and now we can check if number one plus number two is equal to the answer well then this means the user got the question right and else if the sum is not equal to the answer that means the user got the question wrong and so now what I could do is handle those two different scenarios in one case the user got the question right and we should do something and in another case the user got the question wrong and we should do something else and we're making that decision by looking at the state of the application by looking at what two numbers we're supposed to be adding and looking at what the user typed in as their response so what should we do when the user gets a question right or gets a question wrong well maybe this game is going to keep score by maintaining a number for how many questions the user has gotten right and every time the user gets a question right we could increase that score by one and anytime the user gets a question wrong we could decrease that score by one for example so how would we do that well the score is some piece of State inside of the application and so we're going to need to add to the state right now in the state we're storing a number one a number two and a response I'll add to that a score where the score is going to start out as just zero and we can render that score on the page if I scroll down to where we're returning the div to render let's add another day of it that says the score is and then using curly braces plug in whatever the value of a state DOT score is whatever the score is let's figure that out from the state and let's display that in the user interface so now this user interface shows not only a question and an input field but also a score and the score starts out as just the number zero so let's now go back to this function when a key is pressed if it's the enter key let's check to see if they got the answer right or wrong we check did the user actually get the question right if so what should we do well we should increase the score and how do we do that we do that by calling the set State function all of the state is going to be the same so using that dot dot dot State spread operator the only thing that's different is the score is going to be state DOT score plus one so we're updating the state to increase the score by one and if the user gets the question wrong let's set the state to be dot dot State and then the score is going to be state DOT score minus 1. so if the user gets the question right we increase the score by one otherwise we decrease the score by one and let's test that to see what it actually looks like when we try this in the user interface I'll refresh the page two plus four if I type in the correct answer six press return the score increases by one if I typed in the wrong answer let's say eight press return the score decreases by one so this appears to work depending on whether I get the question right or wrong the score is able to update increasing or decreasing based on the result of that condition now this game is pretty easy to get a high score on right now because I can just keep pressing return over and over and over and the question is never changing my response is already there and so the score keeps going up and up and up so let's make the game a little bit more interesting every time the user gets a question right let's display a new question for them to answer and how would we do that well the question that's displayed to the user is based on two underlying pieces of the state of the component it's based on state.num1 and it's based on state.num2 so if I want to change the question all I have to do is when the user gets the question right and I'm updating the state instead of only updating the score let's also update num1 and num2 and I could set these to be specific values maybe like 5 and 10 for example but let's make it more interesting and display a random number every time we'll generate a random number and so the user will be adding two random numbers together every time they get a new question right how do we generate a random number well math.random is a JavaScript function that generates a random number between 0 and 1. we can multiply it by 10 so now we're getting a number between 0 and 10 but we don't want any decimals to appear in the number so I'll go ahead and take the ceiling of the number math.seal to say if the number was like 5.8 we'll just go ahead and round that up to six for example and we'll do the same thing for number two we'll take the ceiling of math.random times 10. so every time the user gets a question right we'll update num1 and num2 to be new random numbers generated just like this and so let's go back and try it again we see two plus four I type in the correct answer 6 and the question changes eight plus five I type in the correct answer press return my score increases and the question changes again this time if I get the answer wrong I type in 10 for example watch my score decrease it went from 2 down to one but the question didn't change now I get another opportunity to try to answer this question and when I answer it correctly the score increases again from one to two so this game is starting to come along now it's keeping track of my score it's displaying different questions there is at least one user interface Quirk right now and that is the fact that at the moment when I get a question right and press return I type in six and press return the six still stays there ideally I get a new question I'd like to clear out the response so the user can just type in whatever the new answer is rather than have to delete whatever they typed in before and then type in a new number so how could we do that reset whatever is inside of the input field well what's typed into the input field is stored inside of the state of my component it's stored inside of state DOT response and so if I wanted to change that all I would have to do is say let's change the response to be the empty string when the user gets a question right we're going to update these two numbers increase the score and also clear out the response so that it's just the empty string and I can do the same thing if the user gets a question wrong decrease the score by one but also clear out that response back to the empty string so that there's nothing there and so now we get a question I type in an answer press return and the input field clears out I get a new question and the score increases by one four separate pieces of State all changing at the same time and that gets reflected in the user interface that I'm now able to see so I type in another value and the score increases and everything updates again all right so that's definitely progress one other user interface Quirk that I noticed here is that the input field by default isn't automatically selected where I would have to go in and click on the input field in order to highlight it so that I can start typing in my response I can fix that pretty easily if I scroll down to where the input field is we'll add in auto focus attribute and just set that to be true so that the input field automatically focuses when I load the page for the first time so now I refresh the page the input field is already highlighted and immediately I can start to try to play this game so now that we have the basic functionality of this app working let's try and improve the CSS so that the game looks a little bit nicer I'll scroll up to the top of the page and add a style tag to the Head section of my HTML page and I'd like for this entire app to be centered so I'll say text align is going to be Center and I'm going to set the font family to be Sans serif because I prefer that font for this particular game so I refresh the page and now everything is centered and the font is different than what the default was and what else would I like to have changed well this problem two plus four maybe I'd like for that to be bigger I'd like the problem to be big and the score beneath that that can stay the same size that it is right now so how would I do that well if I go back to the HTML here I'll go ahead and give this div where I'm displaying the problem number one plus number two I'll give it an ID of problem and then if I scroll back up I'll say for the element with an ID of problem let's go ahead and set the font size to be 72 pixels for example just to make it bigger and so now I see a big math equation two plus four for example the input field and then the smaller score beneath it so that's a nice UI enhancement a little bit and now I can play the game get a question right uh and the score increases and I get a question wrong and I get to try again but maybe I'd like to offer more of a visual indication that the user got a question wrong maybe any time the user gets a question wrong I'd like to change the color of this text instead of being black instead it should be red when the user gets a question wrong and how could I go about doing that well we can change the color of something just by using CSS if we had like a class called incorrect for example if I scroll down here and give this div a class name which is how you add a class in react of incorrect then I could use this class name to style it as red or not red so I could say anything that has a class of incorrect let's go ahead and give that a color of red and so now because I gave this problem a class of Incorrect and I said turn all incorrect text to be read we now see this text appear as red but this again is not quite what I want I don't want it to be read all of the time I only want it to be read when the user has just gotten the question wrong when they were just incorrect In answering a mathematical question and so how could I represent that information inside of my application well I'm going to need some additional state state again is any information that I need to keep track of inside of my component and now it seems that in addition to the response and the score and the numbers I also want to keep track of did the user just answer a question incorrectly or not so I'll add another piece to the state I'll call it Incorrect and initially it will be false they didn't just get something incorrect and now here if I scroll down to this class name rather than have it be incorrect all the time let me add in curly braces in expression I'll say if state DOT incorrect is true using the ternary operator with a question mark then the class should be incorrect but otherwise it shouldn't have a class of incorrect it'll just be the empty string and so this expression here allows me to change the class of an HTML element based on the underlying state if State DOT incorrect is true then this div will have a class of Incorrect and otherwise it won't and so now when I load the page for the first time the text appears as black and what I need to do is when the user gets a question wrong I need to change the state to indicate that they just got a question wrong how do I do that well here is the set State call when the user gets a question wrong and in that case I'll go ahead and set incorrect equal to true and when the user gets a question right we'll go ahead and set incorrect equal to false we're modifying this one additional piece of State based on whether the user got the question right or wrong so now if I load the page answer a question correctly the score increases and I get a new question but if I answer a question incorrectly and press return you'll notice the score decreases the input field clears out and the text changes color because I change the value of that incorrect part of the underlying State and based on that we were able to see the text color change as well if I now get a question correct press return the text color changes Back to Black and the score increases and let's now add one final piece of state or one final change to the UI for this application let's give me a way to win this game maybe once I get to a score of 10 by answering 10 questions correctly then we're going to win the game and how could I do that well remember that each react component can just be a JavaScript function and this function is just immediately returning this div but it's a function so I can add additional logic to it I can say if state DOT score is equal to 10 for example then rather than render the old div let's run return a new div this div is just going to display something like U1 and so that I can style it I'll give it an ID the ID will be winner and if the ID is winner let's go ahead and make the font size 72 pixels and let's make the color green if I win so I added some CSS just to style it but really the only New Logic is further down below where I'm here saying check the state if the score is 10 well that means we win so instead of returning the new problem just return a div that says you won the game so let's try that now I get these questions every time I answer a question you're noticing that the score is going to increase by one and every time we're generating new random numbers to display as the uh as what's going to appear in the user interface and once I get to question number 10 if I answer it correctly press return the entire UI changes instead of the problem in an input field and the score I just see in green large text that I want and again I was able to do that by looking here at this condition where we're looking at the value of the state and if the state is 10 we're deciding what's a retina and this again is one of the great powers of react this ability to use this underlying State and based on the value of the underlying State decide what it is the user should see in their user interface and react is just one of many libraries that do this type of thing other popular ones include angular and view where all of these are just these web Frameworks that make it easy to be able to create applications that are able to respond to some underlying state so that you the programmer don't have to worry about constantly having to manipulate various different parts of the page which especially as you imagine websites like Facebook or Twitter where there are many things happening on the page at the same time every time a new tweet comes in you might get a notification and see a new Post in your main area of your news feed so these are the types of things that you might want the application to be able to more easily handle for you where you describe what the state is you describe what the page should look like based on that underlying State and let the library whether it's react or something else begin to handle the process of doing that for you and the world of user interfaces is changing pretty quickly that a lot changes in user interfaces in terms of the Technologies and the tools that are quite popular but they're really based on the same set of underlying ideas the idea that we can use JavaScript in order to manipulate what it is the user sees on their page in order to detect what's happening based on particular events like scrolling to the bottom of the page or typing something into an input field and then responding to those particular events by providing some sort of function that gets called anytime a particular event happens by mixing that in with other features like the ability to asynchronously request information from an external server or the ability to do computations based on the values of the state like we saw within react we have the ability to create very interesting engaging Dynamic user interfaces very very quickly all just using the power of combining Python and JavaScript that was web programming with python and JavaScript for today we'll see you next time thank you okay welcome back everyone to web programming with python and JavaScript and now at this point we've seen a number of different techniques and tools that we can use in order to design web applications HTML and CSS to describe how it is that our Pages look a programming language like python using a framework like Django in order to listen for requests process them and provide some sort of response and then more recently we took a look at JavaScript another programming language that we can use in particular on the client side running inside of the user's web browser in order to make our web pages even more interactive and user friendly now what we'll transition to today is taking a look at some of software's best practices some tools and techniques that developers actually use when they're working on web applications especially as those web applications start to grow larger in particular we'll start by discussing testing this idea of verifying that our code is correct and then transition to CI CD short for continuous integration and continuous delivery some other best practices that are used in making sure that the work that software developers are working on can be tested and deployed readily and very quickly so we'll begin the conversation with testing and testing is really about this idea of verifying and making sure that the code that software developers are writing are in fact correct to make sure that the functions work the way they're supposed to that the web pages behave the way that they are supposed to and ideally we'd like some way to be able to efficiently and effectively test our code over time and as our programs grow more complicated to allow our tests to make sure that our program is behaving the way that we want it to so we'll go ahead and start simple and consider the basic way that we might take a function for example written in Python and test and verify to make sure that it works the way we would expect it to and to do so we can start with a command in Python known as assert and what assert does in Python is it asserts or just states that something should be true and if that something is not true then the assert is going to throw an exception some sort of error so that whoever is running the program or running the command knows that something went wrong and this can be a very basic way that we can leverage Python's abilities to test a function and verify that that function behaves the way we would want it to so let's go ahead and try a simple example of writing a python function and then trying to test to make sure that that function works the way we would want it to so we'll go ahead and create a new file I'll call it a search.pi and let me Define a new python function for example that is going to take an integer and square it just want to take a number and return it Square so I'm going to define a function called Square that takes us input a number like X and I want to return x times x so fairly straightforward function but I would like to now verify that the function works the way I would expect it to now there are a number of ways that you could do this one would be just like let's print out what the square of 10 is for example and just see what that's equal to and then you could run a program something like Python assert.pi and just say all right the answer is 100 and I could say to myself okay that's what I would expect it to be but I now have to do the mental math of squaring the number 10 making sure that the answer comes out to be the value that I expect it would be nice if I could automate this process well one thing I could do is print out does the square of 10 equal 100 I know that I want square of 10 to equal 100 so I could just print out that value print out does square of 10 equal the number 100 I'll go ahead and run the program again and this time what I get is true for example because those two things are equal to each other and if on the other hand I had tried to check for something that wasn't true like does square of 10 equal 101 you run the program and okay now it's going to be false so this is nothing new nothing we haven't seen before but now what I can do is instead of this I can just say let me assert that square of 10 is equal to 100. here I'm just asserting that this expression that the square of 10 is equal to 100 is going to be true and now I can run the program and what you'll notice is nothing happens no output nothing at all because when an assert statement it runs and the expression that it's checking turns out to be true that the square of 10 does equal 100 it effectively ignores that statement altogether just continues on to the next thing no output no side effect of any sort and this is helpful because it just means that if I want to assert that something is true I can assert it and then just continue writing my code and it's as if I hadn't written that a certain statement at all so long is the thing that I'm asserting is actually true but if there were a bug in my code for example some sort of mistake where instead of returning x times x imagine that I accidentally said return X Plus X to calculate the square instead something that would be a bug in this case well then when I try to run python assert.pi what I'm going to get is an exception and the type of exception that I get is something known as an assertion error and I can see that here there's an assertion error and then I see the reason why the assertion error happened in the assertion error happened on line four which is this line here where I said I would like to assert that the square of 10 is equal to 100. so one way we could imagine testing our code is just by including a number of these different assert statements if I want to verify that my code is correct I can write various different assert statements and for a function that's fairly simple like the square function probably not too many tests that I would need to write but you can imagine for more complex functions that have multiple different conditional branches being able to assert that no matter which conditional Branch the program chooses to follow that the code will actually be correct can be a valuable thing to be able to say and this can be helpful too when in working on a larger project you want to deal with the problem of like bugs that might appear inside of a project and this gets at the idea of test driven development developing while keeping this notion of testing in mind and one of the best practices would be if ever you're working on a program of your own and you encounter some bug in the program you'll first want to fix the bug but then you'll want to write a test that verifies that the new behavior is working as expected and once you've written these tests these tests can start to grow over time and as you continue working on your project you can always run those existing set of tests to make sure that you nothing no new changes that you make to the program down the line no future features that you add or changes you might make are going to break anything that was there before and this is especially valuable as programs start to get more complex and testing everything by hand would start to become a very tedious process to be able to just automate the process of just run a whole bunch of tests on all the things that I know that I would like the program to do and making sure they work as expected that can be quite helpful so assert then is one basic way of just saying that I would like for this statement to be true and if it's not true go ahead and throw an exception and using python we know we also have the ability to catch those exceptions in order to make sure that we're able to handle those appropriately so we can display a nice error message for example if we wanted to do so but now let's go ahead and try and write a more complex function something more complex than just taking a number and squaring it somewhere where there's more room for various different cases that I might want to test and more room where I the programmer might make a mistake for example so let's imagine writing a new file then I'm going to call prime.pi where here I'll go ahead and say that I would like Prime dot pi to implement a function called is prime and what the is prime function should do is check to see if a number is prime or not the prime number only has factors of one and itself and I would like to write a function that verifies that fact and so how might I go about doing that well if n is less than two then it is definitely not prime because we say 0 and 1 are not going to be Prime and we'll only deal with numbers that are zero or greater and we'll deal with that for now but let's start then with other numbers numbers that are two or greater well what do I want to do I really want to check each of the possible factors like if I want to check whether or not 100 is prime or not then I want to Loop over all the possible numbers that could be factors of 100 like 2 3 4 5 6 and when I get to a number like 2 or a number like 5 that do go into 100 cleanly well then I'll know that the number is not prime so I could say for I in range from 2 all the way up through n for example let me go ahead and say if n mod I equals 0 then return false so what am I saying here I'm saying go ahead and start at 2 go up through but not including n so for if I'm checking to see if 10 is prime for example I'm going to check for I is 2 3 4 5 6 7 8 9 and for each of those numbers check if n my input to this function mod I the factor that I would like to check is equal to zero this mod operator this percent if you don't recall gives us the remainder when you divide one number by another and so if n mod I equals 0 that means the remainder when you divide n by I equals 0 meaning I goes into end cleanly with no remainder and that means that it's not prime because it does have a factor whatever I is is going to be that factor and if I get to the end of this for Loop then I can go ahead and just say return true if we weren't able to find a factor for the number other than one and the number itself well then we can go ahead and say that true this number is going to be Prime and so this for example could be a function that checks to see if a number is prime but if I'm trying to optimize I'm trying to make my function more efficient I might realize that you really don't need to check every number from 2 all the way up to the number n itself I could really just check up to like the square root of that number for example that for a number like 25 I want to check like 2 3 4 5 because 5 squared is going to be 25 but after 5 I don't need to check any more numbers beyond that that after you get to a number after a number the square root of that number is multiplied by itself there's never going to be a case where a number bigger than that could be a factor that I won't have already known about so just thinking about things a little bit mathematically we might be able to make some sort of optimizations where instead of going from 2 all the way up through N I might go up to the square root of n and I'll go ahead and import math to be able to use math.s square root and I'll convert that number to an integer just in case the square root doesn't already happen to be an integer so I think this works I've at least talked myself into thinking that this is a function that might be able to check if a number is prime so what could I do if I wanted to verify this well I could write some assert statements another thing I could do is just use the python interpreter I could say all right let me go ahead and type python and now I'm in the python interpreter and I can say from Prime go ahead and import is prime prime is the name of that file is prime is the function in that file that I would like to test and let's just try alright like is prime of 5. that's a prime number hopefully it'll say true that it's Prime all right it does let's try is prime 10 see if that works all right is prime 10 is false because 10 is not prime that's good that seems to be working as well let's try like is prime uh 99 that's not prime because like 3 is a multiple of that for example all right false so that's good this seems to be working and I could in The Interpreter test this function to make sure that it works the way that I would want it to work but let's now see some other ways that I might go about testing it well one way is that I could write a file like uh test0 dot pi and when test 0.pi is going to do instead of using assert I'm just going to do our Boolean checks like we were doing before I'm going to import the is prime function and I've defined a new function called test Prime which is going to serve the role of testing to make sure that when you square some number or when you check to see if some number n is prime that you get some expected value where that expected value is either true for it is prime or false for it's not Prime what then is this function doing well the function is checking we're calling the is prime function on this number n and seeing whether or not it is equal to the expected value that we get where we expect it to be either true or false and if we run is Prime on n and it is not equal to what we expect well then we print out okay there's an error we expected some value true or false but it turned out not to be the case and so now that I have this test Prime function well I can say all right let me go back into the python interpreter from test zero import test Prime and now I can say all right let me test Prime make sure that 5 is prime so I'm passing in my first input the number n the number I would like to check I want to check if 5 is Prime and the second input I provide is what I expect it to be either true or false and here nothing happens which is a good thing if there were an error it would have printed something out and the fact that I see nothing printed out means that everything was okay if I test Prime now and say something like all right make sure 10 is not prime make sure the 10 when you pass it into is prime is going to give us false again nothing happens seems to be working just fine let me now try I can try more examples maybe I try test Prime 25 I want to make sure the 25 is not prime because 25 is not a prime number all right we got some sort of error there's an error on is prime 25 where I expected the output to be false but for some reason it looks like is prime returns something other than false it probably return true and some might indicate some sort of bug in my program that somehow I don't think that 25 should be a prime number but my program thinks that 25 is a prime number and that error can be a clue to me as to how to do this but ultimately especially as programs start to grow longer especially as I start to add more and more functions testing each of those functions by hand is going to start to get tedious so one thing I could do is like write a script to be able to run all these tests for me automatically and so here what I have a test zero dot sh dot sh being like a shell script some script that I can just run inside my terminal and what this is doing is it's running python3 for python version 3 Dash C which means I'm just going to give it a command and it is going to run that command and so I can just run these and each of these lines does what from test 0 it Imports my test Prime function that function that is going to test to make sure that the prime function produces the output that I would expect it to and each time I'm testing a different number making sure that one is not prime making sure that 2 is prime 8 is not prime so on and so forth and I can just write a whole bunch of these tests and then rather than have to run each test one at a time what I can do is I can just run test zero dot sh I can just say that I would like to run dot slash test0.sh and all right I see that I get two errors I get an error on is prime 8 where I expected it to not be prime but for some reason it seems to be Prime and then again here exception on is prime 25 or I expected it to not be prime but for some reason my program thinks that it is prime so very helpful way for me to know immediately that there's some sort of error that is going on here But ultimately rather than have me have to write all this framework for how to go about testing my code on my own there exists libraries that can help us with this and one of the most popular in Python is a library known as unit test and what unit test is a library designed to do is it is going to allow us to very quickly write tests that are able to check whether something is equal to something else and then unit test is built in with an automated test Runner that will run all of the tests for me and verify the output and unit test gets built in to a lot of other libraries within python we'll see how we'll soon be able to apply this sort of idea to our Django applications as well but let's now translate these tests that we have written ourselves just by writing a function that like tests whether the prime number is what we expect it to be and now translate it to using this python unit test Library instead and so just to get a sense for what this looks like I'll now go ahead and open up tests one dot Pi where here first thing I'm doing is I'm importing unit test which we get for free with python I'm also importing the function that I would like to test and now I'm defining a class which will contain all of my tests this is a class that inherits from or derives from unit test.test case which means that this is going to be a class that is going to define a whole bunch of functions Each of which is something that I would like to test and so for example in this very first test this is a test that checks to make sure that one is not Prime and so the way I do that is by calling self this testing object itself it happens to have a method or function built into it called assert false there's an equivalent assert true but I would like to assert false and what would I like to assert that is false is prime one so whatever is prime one is that should be false and I would like to just assert that it is false likewise for the number two now I want to check that the number two is Prime and the way I do that is by calling self dot assert true I would like to assert that when I run the is prime function on the number two the output that I get is going to be a true value self not a third true and I can translate each of the rest of my tests into one of these self.assert truths or self dot assert false and then I say that if you go ahead and run the program go ahead and call unittest.main which will run all of these unit tests so now when I run python test1 dot pi here's what I get I get some nice output we're up at the top I see dots every time a test succeeded and on letter f for a test that happened to fail it says that it ran six tests and down at the bottom I see that there were two failures so it's immediately going to tell me exactly what failed and it'll give me some rationale some reason for why it is that those tests failed as well so we can see all right here is one test here's another test this test that failed is the test that checked that 25 is not Prime and this sentence here is what I supplied inside of what was known as that python doc string inside of those triple quotation marks underneath the Declaration of the function those triple quotation marks otherwise known as a doc string serve a number of purposes they can serve as just a comment for describing what it is the function does but there are special comment in so far as someone who's looking at the function can access that doc string that's usually used for documentation for what it is that the function is doing and they can use it inside of other places as well and so what unit test is doing is for every function it uses that Doctrine as a description of what the test is testing for so that if a test fails then I can see exactly what the name is of the test that failed and what it was tested where the description describes what was happening now in this case where it's just one function I'm testing a whole bunch of different numbers it doesn't seem all that useful but again if you imagine projects that start to get more complex being able to know immediately when you run your tests which parts of the program or which parts of your web application aren't working the way they are expected to can actually be quite helpful so test 25 that was the function that triggered an assertion failure in this case and the line that caused it was self.assert false is prime 25 and the reason that it failed is because true which apparently was the output of this function is not false and I expected it to be false instead and so multiple different ways of trying to run our tests this happens to be one quite popular one but this now tells me that I should go back and try and fix my is prime function I can go back into Prime dot pi and say all right I would like to figure out why this went wrong and if you look at this enough and maybe give it a little bit of testing you might see that I have a slight off by one error that I probably need to check one additional number than I actually am because in checking whether or not 25 is prime or not for example I might need to go up 2 and including the number five to know that 5 is a factor of 25 but before I was going up to the number five but I wasn't including the number five so I also need to just check one more number and now to verify that this is right I could just manually test the function myself or I could just run these tests again run Python test1.pi and this time all these dots mean all these tests succeeded we ran six tests and everything was okay no failures and so this can be a helpful way for me to know immediately that thing seems to be working okay so the takeaways from here are that these tests can definitely help as you begin to write new changes to your program especially as you begin to optimize functions you might make a function more efficient but then run your tests to make sure that in making these improvements you haven't broken anything you haven't changed any behavior that the way the program was supposed to behave and now it doesn't behave that way you're able to verify with much more confidence that that is true but of course that only works if your tests have good coverage of all the things that you would want the function to do and you've covered appropriately all the various different cases for how the function should behave because only if the tests are comprehensive will they actually be useful to you in indicating that the change that you made isn't going to break anything and only then can you actually feel confident in those changes themselves so now let's take this idea of using unit tests to be able to write these tests that verify that a function works and apply it to something like a web application like a web application written in Django that we would like to now use in order to be able to test to make sure that various different functions inside of our Django web application work as well so what I'm going to do is actually take a look at the airline program that we wrote back when we were first talking about Django and first talking about storing data inside of databases and I'm going to open up models.pi where you see that I've made one addition to our definition of a flight and recall from before when we first introduced this idea of defining a model inside of our application for a flight inside of an airline we gave that model three properties it had an origin and a destination where both origin and destination referenced an airport object where an airport object with an object we defined separately but a flight has an origin airport and a destination airport and in addition to that every flight has a duration some number of minutes long that that flight is going to last now I might like to have some way to validate to verify that a flight is a valid flight there isn't some error somewhere in how the data was entered into the database I would like to just generally make sure that given a flight I can check to make sure it's a valid flight and what does it mean for a flight to be valid well in general given these particular Fields I'll say there are two things that need to be true for a flight to be valid uh the origin and the destination need to be different that's condition number one it wouldn't make sense to have a flight whose origin and destination are the same airport and condition number two the duration of the flight needs to be greater than zero minutes if ever the duration is zero or the duration is negative that probably indicates to me that there was some sort of mistake in data entry or some problem that happened with how it is that these flights were configured so I want to make sure that the duration is greater than zero and those then are my two conditions for what makes a valid flight and I've in fact written a function here called is valid flight that just works on the slight class that simply checks given a flight make sure that is in fact valid and the way it's doing that is by checking for these two conditions that I've just described it's checking to make sure that the origin is not equal to the destination it's checking to make sure that the duration of the flight is greater than or equal to zero and maybe I should change that to greater than to make sure it's entirely positive but this then is my definition for what it means for something to be a valid flight and what I'd like to do now is test these various different parts of my application I have this is valid flight function inside of flight that I might like to test as well but we also have all of these other properties that I would like to test these relationships that a flight has an origin and a destination we have passengers that can be associated with flights so there's lots of relationships between my data that I would like to test and verify to make sure they work the way we would expect it to so to do that whenever we create an application in Django like this flights application here we were also given this test.pi file and we haven't yet used the test.pi FI file for anything but what it's supposed to be used for is for writing these sorts of tests testing that verifies that our application behaves the way that we want it to behave so let's go ahead now and open up test.pi and see what happens to be in here what we can do is we can define a subclass of test case which behaves very similar to unit test and it's based on that same idea I'll Define a new class called flight test case that will just Define all of the tests that I would like to run on my flights application and so things to know about this is that first I might need to do some initial setup in order to make sure that there's some data that I can actually work with and test with and what Django will do when I go ahead and run these unit tests is that it will create an entirely separate database for me just for testing purposes that we have one database that contains all the information that actually pertains to the flights that are actually there on my web server but we might also like to just test things with some dummy flights and some dummy airports just to make sure that things are working and then once we're confident things are working then we can deploy our web application to let actual users begin to use whatever new features we've added to the web application for example so inside of this database I might need to do some initial setup and I can do so by defining a setup function inside of my test case class this is a special function and Django knows that when it's running these tests it should first do any of the setup steps that we need to do and so how are we doing this well what we're doing is inside of the setup we're going to just add some sample data into the test database again this won't touch the database that users actually see and actually interact with this is just our test one for testing purposes and we'll start by going ahead and creating some airports so airport Dot objects.create and then specifying what the values for these fields should be we'll just have an airport whose code is AAA for City a and an airport whose code is BBB for City B just dummy airport names they're not real airports but just use for testing purposes and I'll save those airport objects inside of these values A1 and A2 and beneath that what I'm going to do next is go ahead and create some flights where I create using flight.objects.create three different flights one that goes from A1 to A2 with the duration of 100 minutes one from A1 to A1 with a duration of 200 minutes one from A1 to A2 with a duration of negative 100 minutes so I have a whole bunch of these flights now that I would like to test that I would like to make sure work in some predetermined or expected way and so now if I scroll down we can see that I have a whole bunch of these various different tests here is one test that just tests the departures count so every airport has access to a field called departures which ideally should be like how many flights are departing from that airport and I'd like to make sure that departures count works the way I expect it to so here I go ahead and get the airport whose code is AAA and now using unit tests like syntax I'd like to say self dot assert equal so assert true verifies that something is true assert false verifies that something is false assert equal verifies that two numbers are equal to each other and here I'd like to verify that a.departures.count if I take airport a and count how many flights are departing from that airport that that should be three so just verifying that that works and then after that if this test passes then I can be confident that elsewhere in my program if I take an airport and call that airport.departures.count I can feel pretty confident that that is going to work the way I would expect it to I can do the same thing for arrivals get the airport and assert that a.arrivals.count that that is going to be equal to the number one if there's only one flight that arrives at airport A1 for example so that tests these relationships and I can also now test the is valid flight function as well that here I get my two airports A1 and A2 this is the one who was code AS AAA this is the one whose code is BBB I'll go ahead and get the flight whose origin is A1 whose destination is A2 whose duration is 100 and let me just assert true that this flight is going to be a valid flight because this flight is valid the origin is different from the destination it's duration is some positive number of minutes and so I should feel pretty confident that this is going to be a valid flight that I can verify by calling self not a third true I can do the same thing for testing for an invalid flight testing for an invalid flight because the destination is bad I can get the flight airport A1 and get the flight whose origin and destination are both A1 and now let me self dot assert false say that this should not be a valid flight because the origin in the destination are the same what's the other way a flight can be invalid well flight can be invalid because of its duration so I could say something like go ahead and get airports A1 and A2 and get me the flight whose origin is A1 destination is A2 but the duration is negative 100 minutes that was one of the flights as well and while that should not be a valid flight so I'll say self dot assert false is valid flight because when a call is valid flight on that flight it shouldn't be valid because the duration makes it an invalid flight so here now I've defined a whole bunch of tests and there are more down below that we'll take a look at in a moment as well but I've defined a whole bunch of these slides now or a bunch of these tests and now I'd like to run them and the way that I can run tests in Django is via a manage.pi command manage.pi has a whole bunch of different commands that we can run we've seen like make migrations and migrate and run server but one of them as well is if I go into Airline zero I can say python manage.pi test that's just going to run all of my tests and all right it seems that we ran 10 tests but two of them failed so let's go ahead and see why did those two tests fail well the way to read this is that we get this heading anytime a test failed and so we failed the test invalid flight destination function and we failed the test invalid flight duration function and Doc strings could have helped me to know what it is that these tests are exactly doing but it seems that true is not false I wanted to assert that this should not be a valid flight that it should be false but for some reason these appear to be valid flight so something seems wrong with is valid flight where it's returning true when it should be returning false and so this then gives me a place to start looking I can say all right let me go to is valid flight and make sure that function is correct so I'll go back into models.pi I'll take another look at is valid flight maybe I'll Think Through the logic again all right I wanted to check that self.origin is not self.destination I wanted to check that the duration is greater than or equal to zero I could change this to greater than but I don't think that's the issue because my duration was negative and so that already should have been invalid but the other thing I might realize looking at this now is that okay The Logical connective that I have used uh was not the right one I want to check that for it to be a valid flight it needs to satisfy both of the conditions the origin and the destination need to be different and the duration of the flight needs to be greater than zero for example and here I've used or instead of and so I can just change it all right and hopefully that will fix things and to verify as much I can rerun pythonmanage.pi test go ahead and press return it's going to check things ran 10 tests everything is okay and all right it seems that now I have passed all of these tests and notice here at the top it created a test database so it just created a test database for me in order to do all this testing work and then it destroyed that test database at the end as well so none of my tests if I'm adding data removing data it's not going to touch any of the actual data inside of my database for the web application Django will take care of the process of keeping all of that separate for me by first calling that setup function to make sure that my new test database has everything that it needs to so all right we now have the ability by using unit test to be able to test various different functions inside of our web application we first saw that we could test a function like the is prime function just the python function that we wrote but we can also test things like functions on our models like checking to make sure that a flight is valid checking to make sure that we can take a flight and access all of the or take an airport and access all of its arrivals and all of its departures but I'd like to do more than that especially for a web application I'd like to check that like particular web pages work the way that I want them to work and so to do that Django lets us simulate trying to make requests and risket responses to a web application and so let's go ahead and look at some of these other tests as well here what we have is a function called test index and what test index is going to do is it's just going to test my default flights page to make sure that it works correctly so we start by creating a client some client that's going to be interacting request and response Style then I'm going to call client.getflights that is the route that gets me the index page for all the flights and I'm saving that inside of a variable called response whatever response I get back from trying to get that page I would like to save inside of this variable called response and now I can have multiple assert statements inside of the same test if I would like to sometimes you might want to separate them but here I want to check that the index page works and what that means is a couple of things it means that response.statuscode well that should be equal to 200 200 again meaning okay I want to make sure that whatever response I get back that that is going to be a 200. and if there was some sort of error like a 404 because the page wasn't found or a 500 because of some internal server error I would like to know about that so let me first just assert that the status code should be equal to 200. but then Django also lets me access the context for a response and what is the context well recall again in Django when we rendered a template for example we called like return render then provided the request and what page we were going to render but we could also provide some context some python dictionary describing all of the values that we wanted to pass in to that template and Django's testing framework gives us access to that context so that we can test to make sure that it contains what we would expect it to contain and on the index page for all my flights I would expect that to contain a listing of all of the flights and we created three sample flights inside of this test database so I should be able to assert that these two things are equal response.contacts flights that gets me whatever was passed in as flight in the context dot count well that better be three because I want to make sure that there are exactly three results that come back when I look at the context and access whatever happens to be inside of that flight's key there are other tests I can run as well so in this case I've gone ahead and gotten a particular flight the flight who in this case had an origin of A1 and a destination of A1 now that was not a valid flight but we'll go ahead and get it anyway because it exists in the database and now I can get slash flights slash that flights ID right because on my flights page I would like to be able to go to slash flights one to get AT flight number one and go to slash Flight 2 to get AT flight number two so if I take some valid ID some ID of an actual flight F and go to slash flights slash that ID well that should work it should have a status code of 200. meanwhile though if I test an invalid flight page this is a Django command that will get me the maximum value for the ID this ID underscore underscore Max gets me the biggest possible ID out of all of the flights that happen to exist inside of my database if I go ahead and try and get slash flights slash Max ID plus one so a number that is one greater than any of the flights that were already inside of my database well that shouldn't work there shouldn't be a page for a flight that doesn't exist so here then I can assert equal that the status code of what comes back that that is equal to 404 because I would expect that page to return a 404. and finally I can also check various different contexts for things about the passenger page so in this case I've added some sample passengers to the database so inside of my test I can manipulate the database as well adding data into the database and checking to make sure that when you count up the number of passengers on a flight page that that is going to be like the number one for example so a number of different tests that we can then write in order to verify various different parts of our web application I would like to verify not only that our database works the way we would expect the database to work in terms of how functions on our models work in terms of relationships between those models like the relationship between a flight and an airport but we can also simulate a get request simulating a request to a page and verify that the status code that comes back is what we would expect it to be verified that the contents of the page contain the right contents verify that the context that was passed into that template is correct as well and then all of that can then be verified by saying something like python manage.pi test then go ahead and running that and we see that in this case all of the tests happen to pass which means that everything seems to be okay at least for now so this then again very helpful as our web programs start to get more complex as we have multiple different models multiple different routes the ability to test to make sure that if we change things in one part of the program that it doesn't break things in another part that can be quite helpful too what we haven't yet been able to test though is any interaction that's happening exclusively in the browser that I've been able to test a lot of things that are happening server side and recall that Django is all about working on writing this web server a python application that acts as a web server that listens for requests that come in from users processes those using these various different views and models and then provides some sort of response back and we can test the contents of that response things like does the status code match what we would expect it to does the context match what we would expect it to but there are some times where we would like to really simulate like a user clicking on buttons and trying things on a page and making sure that page behaves we would like it how we would like it to as well even if we're not using Django or even if we're just dealing with the front end so let's create like a sample JavaScript webpage that we might like to test now by using these sorts of ideas the ability to automate the process of testing various different parts of our application to verify that they do in fact work correctly what I'm going to do now is we'll get out of the airline directory and I'm going to create a new file that I'll call counter.html and recall before we created a counter application using just JavaScript or what the counter application did is it let me click a button like an increase or Account button that just incremented a number it went from zero to one to two to three to four and so forth I'm going to do the same thing here we'll add a little more complexity though and give myself both an increase button to add a number and a decrease button to decrease the number by one as well so I'll go ahead and start with our usual doctype HTML and our HTML tag I'll give this page a title of counter and now inside of the body of this page I will go ahead and start with a big heading that just says zero and then beneath that I'll create two buttons I'll have one button which will be the plus symbol and one button which will be the minus symbol so now no JavaScript yet this won't actually work but I can go ahead and go into opencounter.html and I can see that I now have 0 and I have a plus and a minus button although those plus and minus buttons don't actually do anything right now so let's go ahead and make them do something let's give this button an ID called increase so that I can reference it later and give this button an ID called decrease again so that I can reference it inside of my JavaScript and now in the head section of my web page I'll add a script tag where I want to start running some JavaScript once the page is done loading and to do that you'll recall I can say document dot add event listener Dom content loaded to say go ahead and run this function once the Dom is loaded once all the contents of this page have loaded the way I would expect it to and what am I going to do well I first need a variable something like let counter equals zero and then I can say all right document.queryselector increase get me the element whose ID is increase that's that plus button and when you are clicked let's go ahead and add an event handler in the form of this callback function this function that will be called when the increase button is clicked and what would I like to do well I'd like to increase the counter go ahead and say counter plus plus and then I'm going to update this H1 that currently contains 0. document.queryselector H1 that gets me the H1 element I'll go ahead and update its inner HTML and go ahead and set that to whatever the value of counter happens to be and then I'll do the same thing for the decrease button document.queryselector get me the element whose ID is decreased that's the button that will be the minus button and when you are clicked go ahead and run this callback function which will do the same thing except we'll first do counter minus minus decrease the value of the counter by one and then get me the H1 element set it to Inner HTML equal to the counter I think this should work and I could verify that by opening up counter.html I'll refresh the page and I can test these buttons test the plus button all right that seems to work increases the value by one I can test the minus button make sure that that decreases the value by one that all seems to work just fine but of course this requires me having to interact with this page I have to open up the page I have to click on these buttons and it's not the type of thing where I'm simulating like a get request or a post request there's no server that I'm sending a request to and getting back a response of one two three four from this is all happening in the browser and so what I might like to have the ability to do is some sort of browser testing and there are a number of different Frameworks for doing this one of the most popular is selenium and what this is going to allow me to do is I can define a test file that using unit tests or a similar Library can effectively simulate a web browser can simulate a web browser and simulate a user interacting with that web browser using something that we call a web driver that's going to allow me to use in code control what it is that the browser is doing and how it is that the user is interacting with this program so how is this going to work well I'm going to go ahead and just as a test let me open up the python interpreter and let me import from tests import Star and that's going to give me access to a couple of different things but the first thing you'll notice that it's doing is because I'm using this Webdriver it's going to give me a web browser and here I'm using Chrome but you could use another browser but notice that here Chrome is telling me Chrome is being controlled by automated test software that Chrome has the ability to allow me using automated test software using like python code control what it is the web browser is doing and so what I can do here is the first thing I need to do is like tell Chrome to open up my web page and it turns out that in order to do so I need to get that Page's URI or uniform resource identifier just some string that will identify that page and I've defined a function called a file URI that gets me the URI of a particular file in this directory so I'm going to say I want to open up counter.html and I need to get its URI but now what I can say is driver dot get URI meaning like tell this Webdriver this python part of the part of the Python program that is controlling the web browser that I would like to get this web page as if the user had gone to the web page and like pressed return after typing in the URL so I say driver.geturi I go ahead and press that and what you'll notice on the right hand side here is that Chrome has loaded this page I am effectively controlling this web browser window using my Python program I said driver.geturi meaning go ahead and open up thecounter.html page and then inside of this test window Chrome has opened that up and inside my Python program Now using this Webdriver I have the ability to like see the same things that the user sees when they open the page so what does the user see when they open the page well they see for example the title of the page so I could say like driver dot title and see that all right the title of this page is counter that was in fact the title of the page but I could verify that inside my Python program that by checking that driver.title by taking my web driver getting the title of the current page that it's looking at making sure that that is counter and likewise if I looked at driver.page source press return When I see there in string format so it's a little bit messy is the contents the HTML content of this page and you'll notice things like you know Dom content loaded here my on click handlers here's my H1 that says zero it's very messy because it's being represented as a python string and these backslash ends refer to like new lines where there's a line break but this is the content and this is really all the browser gets the browser takes this information and just knows how to render it in some nice more graphical representation that's easier for a user to look at and therefore be able to understand but this is fundamentally all that my web browser is actually getting back when it tries to load a web page so what can I do from here well I would like to simulate a user's behavior on this page that sure I can get a page and see the title but I want to simulate like clicking on the plus button for example so in order to do that first thing I need to do is like actually get the plus button and to do that I could say something like driver dot uh get or find element by ID there are a number of ways that I could try and find an HTML element but I would like to find an HTML element by its ID and I know that the plus button the increase button has an ID of increase for example and so if I find element by ID let me find the element whose ID is increase and all right it seems here that I've gotten some web element object back from my Webdriver and I'll go ahead and save that inside of a variable called increase so what I now have is a variable called increase that represents the increase button that my web driver has found on the web page it's the effect of the effectively the same thing as you the human going through the page looking for the increase button the web driver is doing the same thing except instead of looking for the button based on what it looks like it looks for the button based on its ID and so this again another reason why it's helpful to give your HTML elements IDs in case you ever need to be able to find that element it's very useful to be able to reference that element by its name but now that I have a button I can simulate user interaction with that button I can say something like increase dot click to say I would like to take the increase button and simulate a user clicking on that button in order to see whatever it is that the user would get back when they click on that button so increase.click I press return and what you'll notice happens is that the number increases increases from zero to one it's as if I the user had actually clicked on the plus button except all I did was say like increase.click to say go ahead and increase the increase button and let the browser do what it would normally do in response and what it would do in response is get that JavaScript event handler that on click Handler and run that callback function that increases the value of counter and updates the H1 so I can say increase dot click to simulate increasing the value of that variable but this is just a function call which means I can include it in any other python constructs that I want that if I want to repeat something like 25 times for example and press the button 25 times I can say like for I in range 25 go ahead and like click the increase button and now very quickly 25 times it's going to click the increase button and I'm going to see the result of all of that interaction so I can simulate user interaction just by using the python interpreter likewise If instead of increasing I wanted to decrease well then I'm going to do the same thing I'm going to say decrease equals driver dot find element by ID let me get the decrease element the element whose ID is decrease and now say decrease dot click and that will simulate me pressing the decrease button press it again and the more I press it every time it's just going to decrease by one and if I want to decrease it all the way back to zero well then I'll just do it 20 times for I in range 20 go ahead and decrease dot click and that's going to go ahead and reduce the count all the way back to zero by simulating the user pressing a button 20 times and what you'll notice is that it happened remarkably fast like I can simulate 100 presses of the increase button by saying for I in range 100 increase dot click and very quickly you'll see that number 100 times go ahead and go up to 100 faster than a human could ever have clicked that plus button over and over again and so these tests can not only be automated but they can be much faster than any human could ever be in order to test this Behavior so how then can we incorporate this idea into actual tests that we write into like a unit testing framework that allows me to Define all these various different functions that test different parts of my web applications Behavior well to do that let's go ahead and take another look at tests.pi inside of test.pi here again is that file URI function where that function has the sole purpose of like taking a file and getting its URI and we need the URI to be able to open it up then we go ahead and get the Chrome web driver which is going to be what's going to allow us to run the in simulate interaction with chrome and in order to get Chrome's Webdriver you do have to get Chrome driver separately it is separate from Google Chrome itself but Google does make it available and other web browsers make equivalent web drivers available as well if you'd like to test how things would work in other browsers because different browsers might behave differently and it might be useful to be able to test to make sure that not only does everything work in Google Chrome but it's also going to work in other browsers that you might expect users to be working with as well here then I've defined a class that again inherits from unit test.test case that is going to Define all of the tests that I would like to run on this web page that here I have a function called test title that's going to go ahead and first get counter.html it's going to open up that page and then just assert equal let's make sure the title of the page is actually counter that's what I would expect it to be so I can write a test in order to test for that case as well here I test the increase button by finding the element whose ID is increase and clicking on that button to simulate a user pressing the plus button in order to increase the value of the counter and then what do I want to check well I want to check that when you find element by tag name H1 and so find element by tag name similar to find element by ID except instead of finding something by its ID it's going to look at what's the tag and it only is one element that is an H1 and so here I'm saying go ahead and get me the H1 element and access its text property meaning whatever it is that is contained inside of those two H1 tags I would expect that to be the number one and so I would assert that this is equal to 1. and likewise I can do the same thing for the decrease button finding the element whose ID is decrease clicking on that button and then asserting equal find me the H1 element and make sure that the contents of it are equal to the number negative one for instance and this final test just test things multiple times that three times and then press the increase button and make sure that after I press the increase button three times when I check the H1 check what's inside of its text that the answer should in fact be three so now I should be able to go ahead and test this code by running pythontests.pi and what that is going to do is it's going to open up a web browser and what you're going to see it very quickly flashed across my screen were all of those tests we test the increase by one we test decrease by one and then we test like increase three times after we check to make sure the title was correct and then we can see here is the output we ran four tests in this amount of time and everything turned out to be okay none of the tests failed but if one of the tests had failed well then we would see a different output so let's imagine for example that I had had a bug in my decrease function for example where the decrease function wasn't actually working what would that bug look like maybe I forgot to say counter minus minus or maybe perhaps more likely what might have happened is I wanted to I already had written the increase function and I decided to very quickly add the decrease function and I thought I'd just you know what copy paste like copy the increase event handler the decrease event handler is basically the same thing except I need to query for decrease instead and maybe I just did that and forgot to change a plus plus to minus minus a bug that might happen if you're not too careful about how you copy and paste code from one place to another now when I run these tests pythontest.pi we'll see the simulation a whole bunch gets simulated and when I go back and check the output of my test see what actually happened I see that we do seem to have an assertion error here the assertion fail was on the test decrease function and it happened when I tried to assert that was inside of the H1 element was negative one because one is not equal to negative one so this is the value of this assertion error as well and this is helpful an advantage over just assert assert just tells you you know there's an assertion error but here in unit test we actually get to see if I asserted that two things are equal it tells me what both of those things are it tells me the actual output of h1's text it was one but what I expected it to be was negative one so it tells me exactly what the discrepancy is I know that for some reason it was one instead of negative one and that can be a clue to me a hint to me as to how I can go about trying to solve this problem and I can solve the problem by going into my decrease event handler seeing that all right this was increasing the counter instead of decreasing it change plus plus to minus minus and now rerun my tests and see all the test simulated inside of my Chrome driver and we ran four tests and this time everything was okay so all of my tests appear to have passed this time so those then are some possibilities for being able to test our code especially taking advantage of unit tests this library that we can use in Python in order to make various types of assertions about what we would like to be true or false about our code and unit test contains a number of helpful methods for being able to perform these sorts of assertions some of them are here so we can say things like I would like to assert the two things are equal to each other which we've seen there's a counterpart to that a certain not equal for making sure the two things are not equal to one another assert true and false we've seen this well there are others as well though things like assert in or assert not in if I would like to assert for example that some element is in some list for example or that some element is not in some list there are other assert methods as well that we can use in order to verify that a part of our program or a part of our web application does in fact behave the way we would want to behave and we can integrate this type of idea into a number of different types of testing we thought integrating it into Django itself using Django's unit testing in order to verify that our database works the way we expected it to and that our views works the way that we expected them to and provided the right context back to the user after the user makes a request to our web application and there are also applications of unit testing whether using the framework or not to browserbased testing when I want to test like inside of the user's web browser does it actually work when a user clicks on this button that the JavaScript behaves the way that we expect it to and I don't need to especially use JavaScript in order to do those tests I can write those tests using python using unit test to be able to say click on the button that has this ID and verify that the result that we get back is what we would expect it to be so that then was testing and now we'll go ahead and take a look at CI CD continuous integration and continuous delivery which refer to two best practices in the software development world that have to do with how it is that code is written especially by groups or teams of people how it all works together and how that code is eventually delivered and deployed to users who are using those applications so CI which refers to continuous integration involves frequent merges to a main branch of some repository like a git repository and then automatically running unit tests when that code is pushed so what does that generally mean well in the past you might imagine that if multiple people are working on some project at the same time and multiple people are each working on different features or different parts of that project then after everyone's done working on those features and we're ready to like ship some new version of a web application or ship some new version of a software product well then everyone's going to have to take all these various different features and combine them all together at the end and figure out how to then try and deliver that program to users and this has a tendency to cause problems especially if people have been working on different big changes all simultaneously they might not all be compatible with one another there might be conflicts between the various different changes that have been made SO waiting until everyone's done working on a feature to merge them all back together and then deliver it is not necessarily the best practice which is why increasingly many more teams are beginning to adopt a system of continuous integration that there's one repository somewhere online that's keeping the official version of the code everyone works on their own version of the code maybe on their own Branch for example but very frequently all of these changes are merged back together into the same Branch to make sure that these incremental changes can be happening such that it's less likely that there's two really Divergent paths that the program has gone under and as a result it's much more difficult to merge those two paths back together in addition to frequently merging to a thumb main branch another key idea of continuous integration is this idea of automated unit testing where unit testing again refers to this idea of on our program we run a big series of tests that verify each little part of our program to make sure that the web application behaves the way it is supposed to and unit tests generally refer to testing particular small components of our program making sure that each component works as expected there are also bigger scale tests tests like integration tests that make sure that the entire pathway from like user request to response that everything along a certain pipeline works as well but there are various different types of testing and the important thing is making sure that anytime some new change is merged into the main branch or someone wants to merge their changes into the main branch that these tests are run to make sure that nobody ever makes a change to one part of a program that breaks some other part of the program and in a large enough code base it's going to be impossible for any one person to know exactly what the effect of one particular change is going to be on every other part of the program they're going to be unforeseen consequences that the one programmer may or may not know about and so the advantage of unit testing assuming they're comprehensive and cover all of these various different components of the program is that anytime someone makes a change and attempts to merge that change into the main branch according to the practice of continuous integration the fact that it doesn't pass a test will know about that immediately and as a result that programmer can go back and try to fix it as opposed to waiting until everything is done merging everything together and then running the tests realizing something doesn't work and then being unsure of where to begin we don't know where the bug is which change happened to cause the bug if everything is merged more incrementally it's easier to spot those bugs assuming there's good coverage of tests to make sure that we're accounting for these various different possibilities so continuous integration refers to that idea frequently and more incrementally updating the main branch and making sure that the tests are in fact passing and it's closely tied to a related idea of continuous delivery which is about the process of how it is that the software is actually released to users how the web application actually gets deployed and there are a couple of models you might go about thinking with regards to how it is that some program or web application gets deployed you might imagine the release cycle might be quite long the people spend months working on various different features on some software development team and after they're happy with all the new changes they've released some new version of the web application but especially with web applications that are undergoing constant change that have lots of users that are moving very quickly one thing that's quite popular is this notion of continuous delivery which refers to having shorter release schedules instead of immediately releasing something at the end of some long cycle you can in shorter Cycles make releases every day every week or so in order to say that let's just go ahead and incrementally make those changes whatever new changes happen to have merged to the main branch let's go ahead and release those as opposed to waiting much longer in order to perform those releases and that again lends itself to certain benefits the benefit of being able to just incrementally make changes such as something goes wrong you know more immediately what went wrong as opposed to making a lot of changes at once where if something goes wrong it's not necessarily clear what went wrong and it also allows new features to get out to users much more quickly so especially in a competitive market where many different web applications are competing with one another being able to take a new feature and release it very quickly can be quite helpful so continuous delivery is all about that idea of short release Cycles rather than wait a long time for a new version to be released release versions incrementally as new features begin to come in it's closely related to the idea of continuous deployment which CD will sometimes also represent continuous deployment is similar in spirit to continuous delivery but the deployments happen automatically that rather than a human having to say all right we've made a couple of changes let's go ahead and deploy those changes in continuous deployment anytime these changes are made the pipeline of deploying the application to users will automatically take place as well just removing one thing for humans to have to think about and allowing for these deployments to happen even more quickly as well so the question then is what tools can allow us to make continuous integration and continuous delivery a little bit easier what techniques can we use in order to do so and there are a number of different continuous integration tools but one of them produced by GitHub more recently is known as GitHub actions and what GitHub actions allows us to do is to create these workflows where we can say that anytime for example someone pushes to a git repository I would like for certain steps to take place certain steps that might be like checking to make sure the code is styled well that if a company has some style guide that it expects all of its programmers to adhere to when working on a particular product you could have a GitHub action such that anytime someone pushes to a repository you have an action that automatically checks that code against the style guide to make sure that it is well styled well common to documented and so forth you might also for instance have a GitHub action that tests our code to make sure that anytime anyone pushes code to a GitHub repository we automatically run whatever tests we would like to run on that particular code base and GitHub actions can allow us to do that as well by defining some workflow to be able to do so and so that's what we'll take a look at in just a moment using GitHub actions to automate the process of running tests so that the human though it would be a good thing for the programmer when they're done writing their code to test their code and make sure it works we can enforce that by making sure that every time anyone pushes to a GitHub repository will automatically run some GitHub action that is going to take care of the process of running tests on that program and we'll know immediately as via an email that GitHub might send to you to say that this particular test failed and you'll know every time you push to that Repository so how do these workflows get structured what is the syntax of them will they use a particular type of syntax known as yamo which is some language a configuration language that can be used in order to describe often described for configuration of various different tools and software GitHub actions happens to use it other Technologies use it as well and yaml is a file format that structures its data sort of like this in terms of key value pairs much in the same way that a Json object or a python dictionary might where we'll have the name of a key followed by a colon followed by its value name of a key followed by colon followed by a value and the value doesn't necessarily need to be just a single value it could be a sequence of values like a list of values for example and those are denoted this way by like a hyphen indicating a list item one item two item three and in addition to just having single values and lists of items these ideas these lists these sequences these values can be nested within one another that you might have one key that leads to another set of keys that are associated with values that leads to other sets of keys associated with values as well much in the same way that a Json object like a representation of keys and values can also have nested Json objects within a Json object likewise too we can have nested key value pairs as the value for a particular key too so we'll take a look at an example of what that actually looks like in the context of creating some GitHub workflow that will run some GitHub actions so what will that look like let's go back into Airline zero where here I've defined inside of a DOT GitHub directory a directory called workflows inside of which I have a ci.yml file it can be any name.yaml.yml or dot yaml or the conventional file extensions for a yaml file and here I'll open up ci.yml and this now is the configuration for how this workflow ought to behave I give the workflow a name it's called testing because what I want the workflow to do is like test my Airline application then I specify an on key to mean when should this workflow run and here I've said on push meaning anytime someone pushes their code to GitHub we would like to run this workflow every workflow consists of some jobs and so what are the jobs what tasks should happen anytime that I try and push to this repository well I've defined a job called test project and this is a name that I chose for myself you can choose any name for a job that you would like and now I need to specify two things for what happens on a job one thing I need to specify is what sort of machine is it going to run on that GitHub has its own virtual machines otherwise known as VMS and I would like to run this job on one of those virtual machines and they're virtual machines for various different operating systems here I'm just saying go ahead and run on the latest version of Ubuntu which is a related version of Linux that I would like for this test to run on and then for the job I specify what steps should happen where I can now specify like what actions should happen when someone tries to test the project when I try and run this job and here I'm using a particular GitHub action and this is a GitHub action written by GitHub called actions slash checkout and what this is going to do is it's going to check out my code in the git repository and allow me to like run programs that operate on that code and you can write your own GitHub actions if you would like but here all we really need to do is go ahead and check out the code AS by looking at what's on the branch that I just pushed to and then I'm going to run Django unit tests this is just a description for me to know what's going on in this particular step and here is what I would like to run I'm going to first go ahead and install Django because I'm going to need to install Django to be able to run all these tests but after and if there are other requirements I might need to install those requirements as well but the airline program is fairly simple all we really need in order to run the tests is just Django so I'll go ahead and install Django and then I'll run python3 manage.pi test I would like to test run all of the tests and the way I can do that is just by providing this manage.pi command to say that I would like to run all of the tests on this particular application so this configuration file all together now is going to specify a particular workflow the workflow that says that every time I push to the GitHub repository what I would like to happen is I would like to check out my code inside of the git repository so on some Ubuntu VM GitHub is going to check out my code and it's going to run these commands it's going to install Django and then it's going to test my code and it will then give back to me what the response is after I do that so let's go ahead and test this and in particular let's run it on a program where the tests are going to fail so I might say for example let's go into flights and models.pi and let's go to my is valid flight function from before and change it back to that version that didn't work but before it was something and something I'll change it to something or something that as long as the origin is not the destination or the duration is greater than zero we'll count that as valid but we know that that's wrong that should not work so here's what I'll do I'll go ahead and first say git status see all right what's changed and it seems that all right I've changed I've modified models.pi which makes sense I'll go ahead and get add I'll add dot we'll just add all the files that I might have modified I'll commit my changes so go ahead and use a wrong valid flight function that's what I'm going to do and now I'm going to push my code to GitHub I added it I committed it I pushed it that now then pushes my code to GitHub into a repository called airline that I already have and now if I go ahead and go to GitHub and I go to my Airline Repository what you'll notice is that we've mostly been dealing with this code tab but GitHub gives us other tabs as well that are quite useful as you begin to think about working on a project in larger teams so in addition to looking at the code we have issues issues are ways for people to just report that something is not quite right or there's a feature request that we have for this particular code base so the issues might maintain a list of all the pending action items for a particular repository things that we still need to deal with and once those issues are dealt with the issues can be closed so I have no issues here as well pull requests are people that are trying to merge some part of the code from one branch into another Branch so you might imagine on a larger project you don't want everyone merging things into master all at the same time you might have people working on their own separate branches and then when they feel confident and happy with their code then they can propose a pull request to merge their code into the master branch and that allows for various other features like the ability for someone to offer a code review to be able to review the code write comments and propose suggestions for what changes should be made to a particular part of the code before it gets merged into the master branch and that's another common practice with regards to working on a GitHub repository or any other larger project that you're controlling using Source control is this idea of code reviews that oftentimes you don't want just one person making the changes without anyone's eyes on that code but you'll want a second pair of eyes to be able to look things over make sure the code is correct make sure it's efficient make sure it's in line with the practices that the application is using and so pull requests can be quite helpful for that and then this fourth tab over here represents GitHub actions these are the various different actions or workflows that I might want to run on this particular repository and what we'll see here is that if I go to the actions tab now what I'll see is here is my most recent testing action so anytime I push I get a new testing action this one was from 29 seconds ago I'll go ahead and click on it and see what's within it all right here was the job that I ran test project I see that on the left hand side you'll notice this big red X on the left hand side of this workflow means something went wrong so I'd like to know what it is that went wrong I'll go ahead and click on test project and here within it these are all of the steps the things that happened when we actually ran this particular job first the job sets up then the checkout action goes ahead and checks out my code because we need access to my code to be able to run it here with the step I defined run Django unit tests which was going to install Django and run those tests it has an X next to it indicating something went wrong and I see down below annotations one failure so all over the place GitHub is trying to tell me that something went wrong it failed two minutes ago here I'll go ahead and open this up and what I'll see is the first thing that happened is we install Django and that seems to have worked okay but down below what you'll see is the output of running these unit tests that we see failed failures too and now I can see here are the unit tests that failed we failed the invalid flight destination test we failed the invalid flight duration test and as before I can see in github's user interface what those assertion errors are I can see it true is not false true is not false those were the problems that happened when I tried to run this particular test Suite and now others who are also working on this repository can see as well what the results of these tests are and can offer suggestions can offer ways that I might be able to fix the code in order to deal with that problem but now I know that this particular test failed and if I go back to the main code page for this GitHub repository I'll see that next to this commit there's a little X symbol and that little X symbol next to the commit just tells me that the most recent time I tried to commit something went wrong they ran the workflow in there was an error and so I'll immediately see for this commit and I can go back and look at the history of commits and see which ones were okay and which ones had a tendency to cause some sort of problem so this one it appears caused a problem and we know why it caused a problem because of this condition something or something else so I can fix it I'll change the or to an end I'll go ahead and get add dot get commit say I will fix a valid flight check if I do get status just to check out like what's going on right now I'm ahead of the master Branch by one commit that's exactly what I would expect and now I'll go ahead and push my code to GitHub by running git push saying all right let's push this update and now hopefully we're going to pass the workflow now now I go back to the repository I refresh the page here's my latest commit fix valid flight check you'll notice here there's an orange dot instead of the Red X as before this dot just means the tests are currently pending the workflow is in progress because it takes some time for GitHub to be able to start up the VM to be able to initialize the job to check out my code to run all those tests so it does take some time but if I go back to the actions tab I'll see that all right this time for testing we get a green check mark everything seems to be okay I go to test project just to see it and now I notice the green check mark next to run Django unit tests means that the unit tests have passed as well if I open those up now I see at the bottom the same output that I saw before when I was running those unit tests on my own machine we ran 10 tests and everything was okay and that tells me that these tests have passed so GitHub actions have the ability to allow for certain jobs to happen certain work to happen anytime you push code anytime you submit a pull request or on various different actions that might happen on a GitHub repository and they're very helpful for being able to implement this idea of continuous integration because it means you can make sure that when you're merging code from some developers Branch into the main branch that everyone's merging their code into you can verify that those tests can pass and you can add rules to say that you don't want to allow anyone to merge code into the branch if the tests don't pass to guarantee that any code that does get merged is going to pass all of those tests as well and so that can definitely help the development cycle make it easier to ensure the changes can be made quickly but as we make those changes quickly we're not going to lose accuracy and validity within our code that we can make sure that our code still passes those tests by automating the process of running those tests altogether so other than continuous integration then we now talk about this idea of continuous delivery these short application Cycles where we would like to very quickly be able to deploy our application onto some sort of web server and when we're deploying applications to a web server there are things that we need to think about we need to think about getting our program that was running fine on our computer working on a web server as well and this can just be fraught with headaches and all sorts of configuration problems because you might imagine that the computer that you are using is not necessarily going to be the same as the computer that on the cloud the computer and the server where your web application is actually running it might be running a different operating system it might have a different version of python installed if you have certain packages working on your own computer those same packages might not be installed on the server so we've run into all sorts of various different configuration problems where you can be developing deploy your code and realize that it doesn't work on the server because of some sort of difference between what's happening on your computer and what's happening on the server and this becomes even more problematic if you're working on a larger team you and multiple other people working on a software project but you each have different versions of various different packages or libraries installed and those different versions have different features and might not all work and cooperate with one another and so we need some way in order to be able to deploy applications efficiently and effectively to be able to standardize on just you know one version of the environment one version of all these packages to make sure that every developer is working on the project in the same environment and once we deploy the application it's going to be working in the same environment as well and the solution to this comes in a number of possible options but one option is to take advantage of a tool like Docker which is some sort of containerization software and by containerization software what we're talking about is the idea that when we're running an application instead of just running it on your computer we're going to run it inside of a container on your computer and each container is going to contain its own configuration it's going to have certain package is installed it's going to have certain versions of certain pieces of software it's going to be configured in exactly the same way and by leveraging a tool like Docker you can make sure that so long as you provide the right instructions for how to start up and set up these containers then if you are working on the application and someone you're working with some colleague is also working on the same project so long as you're using the same instructions for how to set up a Docker container you're going to be working in the identical environments that if a package is installed on your computer in your container it's going to be installed in your colleagues container as well and the advantage of this too works with this idea of continuous delivery when you want to deliver and deploy your application to the internet you can run your application inside of that exact same container set up using the exact same set of instructions so that you don't have to worry about the nightmare headaches of trying to make sure that all the right packages and all the right versions are in fact installed on the server Docker might remind you of the idea of a virtual machine or a VM if you're familiar with that concept GitHub uses VMS for instance when running into GitHub actions they are in fact different a VM is effectively running an entire virtual computer with its own virtual operating system and libraries and application running on top of that all inside of your own computer so a virtual machine ends up taking up a lot of memory taking up a lot of Space Docker containers meanwhile are a bit lighter weight they don't have their own operating system they're all running still on top of the host operating system but there's this Docker layer in between that keeps track of all these various different containers and keeps track of for each container such that every container can have its own separate set of libraries a percent of binaries and an application running on top of that so the advantage then of containerization is that these containers are lighter weight than having an entire virtual machine but they can still keep their own environment consistent such that you can feel confident that if the application is working in a Docker container you can have that Docker container running on your computer on someone else's computer on the server to guarantee that the application is going to work the way that you would actually expect it to and so how exactly do we configure these various different Docker containers well in order to do so we're going to write what's called a Docker file so to do this I'll go ahead and go into Airline one and I'll open up this Docker file and the docker file describes the instructions for creating a Docker image where the docker image represents all of the libraries and other installed items we might want to have inside of the container inside and then based on that image we're able to create a whole bunch of different containers that are all based on that same image where each container has its own files and can run the web application inside of it so this Docker file for example describes how I might create a container that is going to run my Django web application so first essay from python colon 3 this happens to be another Docker image on which I'm going to base these instructions that this is going to be a Docker image that already contains instructions for installing python3 installing other related packages that might be helpful oftentimes when you're writing a Docker file you'll base it on some existing Docker file that already exists so here I'm saying go ahead and use python3 and now what do I want to do in order to set up this container well I want to copy anything in dot in my current directory into the container and I have to decide where in the container am I going to store it well there I could choose to store it anywhere but I'll just store it in slash user Source app just some you are some particular path that will take me to a directory where I am going to store the application but you could choose something else entirely so I copy all of the current files in my current directory so that'll include things like my requirements file my manage.pi file my applications files all my settings files everything inside of the directory I would like to copy into the container then I'm saying workder meaning change my working directory effectively the same thing as something like CD on your terminal to move into some directory I would like to set my working directory equal to that same application directory the application directory inside of the container that now contains all of the files for my application because I copied all of those files into the container now once I'm inside of this directory I need to install all of my requirements so assuming I've put all my requirements like Django and any other packages that I needed inside of a file called requirements.txt I can just run the command pip install requirements.txt and then finally inside the docker file I specify a command and this is the command that should run when I start up the container everything else is going to happen initially when we're just setting up this Docker image but when I start up the container and actually want to run my web application here is the command that should run and I provide it effectively as like a python list where each word in the command is separated by a comma where here I'm saying the command that I would like to run when you start up this container is python manage.pi run server and here I'm just specifying on what address and what port I would like it to run and running it on Port 8000 for example but I could choose another Port that I would like to run instead so what's going to happen then is that when I start up this Docker container it's going to if it needs to go through these instructions and make sure that it sets up the container according to these instructions make sure that we've installed all the necessary requirements make sure that we're using python3 and anyone using the same Docker file can generate a container that has all the same configuration on it so we don't have to worry about configuration differences between me and someone else who might not have the exact same computer setup that I do and the nice thing about this is that it can run on Mac and windows and Linux so even people running on different operating systems can still have containers that all have the same configuration that all work in the same way just to speed up that process now so far when we've been building Django applications we've been using a sqlite database sqlite database just being a file that is stored inside of our application and this file based database allows us to create tables insert rows into it delete rows from it in most production environments and most real web applications that are working with many many users sqlite is not actually the database that is used it doesn't scale nearly as well when there are many users all trying to access it concurrently oftentimes in those sorts of situations you want your database hosted Elsewhere on some separate server to be able to handle its own incoming requests and connections and we talked about a couple of possible databases we could use instead of sqlite things like my secret MySQL things like postgres or various different SQL based databases so imagine now I want to deploy my application but instead of using SQL Lite I would like to use postgres for example as the database server that I would like to run well that would seem to be pretty complicated for me to test on my own because now in addition to running my web application in one server effectively I also need like another server that's running postgres for example such that I can communicate with that postgres database instead and that's going to be even harder for like other people to be able to work on as well potentially it might be difficult to get the server to work in that way too but the nice thing about Docker is that I can run each of these processes in a different container effectively I can have one container that's running my web application using this Docker file right here and I can have another container that's just going to run postgres and as long as other people also have access to that same container for running postgres they can be working in an identical environment to the one that I am working in as well and so there's also a feature of Docker known as Docker compose and what Docker compose lets us do is allow us to compose multiple different Services together that I would like to run my web application in one container and I would like to run a postgres database in another container but I would like for those containers to be able to talk to each other to be able to work together whenever I start up the application so if I'd like to do that in order to run this application on my computer and have both the web application and postgres installed I can create a Docker compose file which looks like this here I'm specifying using version 3 of Docker compose here I specify again using a yaml file much as in my GitHub workflows we're formatted in yaml just as a configuration file Docker compose.yml is a yaml file that describes all of the various different services that I want to be part of my application where each service is going to be its own container that could be based on a different Docker image here I'm saying that I have two Services one called DB for database one called web for my web application the database is going to be based on the postgres docker image image the postgres wrote that I don't have to worry about someone else has written the docker file for how to start up a postgres container here though for the web application that's going to be built based on the docker file in my current directory the docker file that I have written and then down below I've just specified that my current directory should correspond to the app directory and then I've specified when I'm running this on my own computer I would like Port 8000 on the container to correspond to Port 8000 on my own computer just so that I can access port 8000 in my browser and access port 8000 inside the container it just lets my computer actually talk to The Container so I can open up the web application in my web browser for example and actually see the results of all of this so here then I've created two Services a database and web so now let's actually try starting up these containers I'm going to first go into my Airline One Directory and I'm going to say Docker compose up to mean go ahead and start up these Services I'll press return and what you'll see is we're going ahead and starting up two Services I'm starting up the database service and I'm starting up the web service and now as a result of all of this I've started up the application and I started it on Port 8000 so if I go to 0.0.0.0 8000 or colon 8000 slash flights that's going to take me to the flights page and now this is running not just on my own computer but inside of a Docker container now of course right now there are no flights inside of this page because I haven't actually added anything to the database yet so I could do that if I wanted to but how do I do that well I needed to like go into slash admin to say like let me log in and go ahead and create some sample flights but I don't have a login yet because I need to like create a super user account and I can't just like inside of my Airline One Directory say python manage.pi create super user the way that I used to because this is running in my terminal on my computer whereas what I really want to do is go into the docker container and run this command there inside of the container so how can I do that well there are various different Docker commands that I can use Docker PS will show me all of the docker containers that are currently running so go ahead and Shrink this down a little bit I see two rows one for each container one for my postgres container that's running the database one for just my web application that's running as well each one has a container ID so I want to go into my web application container in order to run some commands inside of that container so I'm going to copy its container ID and say Docker exec meaning go ahead and execute a command on the container Dash it will make this interactive here is the container ID that I would like to execute a command on and the command I want to execute is dash pass in the dash L flag but bash to say I want to run a bash prompt I want to be able to interact with a shell so that I can run commands inside of this container so I press return and now what you'll notice is that I am inside of my container in the user Source app directory that directory that contained all the information about this web application I type LS and what I'll see is here all the files inside of this container now and now I can say something like python manage.pi create super user and now it's going to let me create a super user so I'll create a user inside of my web application called Brian I'll give it my email address I'll type in a password and now we've created a super user and you can run other commands here if you wanted to migrate all of your migrations I could say python manage.pi migrate it turns out I've already done that so I didn't actually have to do it again but you can run any commands that you could run on your computer but now you can run them inside of the docker container instead I'm going to press Ctrl D just to log out get out of the container and get back to my computer but now I've created a super user so I could go ahead and sign in to Django's admin and now I can begin to manipulate this database which is a postgres database running in a separate container but the nice thing about it is that I can start them both up together just by running something like Docker compose up for example so Docker can be quite a powerful tool for allowing us to very quickly ensure that an application is running in the environment that we expect it to be running to make sure that all the right libraries are installed make sure that all the right packages are installed as well that the configuration between my development environment and the environment that's running on the server are the same as well so those then were just some of the best practices for how you can go about developing a program now that we have the tools to do so we have a lot of tools for being able to develop these web applications but as our programs start to get more complex it'll be increasingly important to test them make sure that each various different component of our web application behaves the way that it is expected to behave and then taking advantage especially in bigger teams of CI CD continuous integration continuous delivery to make incremental changes and make sure each of those incremental changes in fact works on the web application and then cud continuous delivery to say that rather than wait and then deploy everything all at once let's deploy things incrementally as well let users more quickly get access to the latest features and more quickly find out if something went wrong we can better identify what it is that went wrong if we've deployed things incrementally rather than waiting a long time in order to do so as well so these are some of the best practices in modern software application development not only for web applications but for software more generally next time we'll consider other challenges that might arise as we go about trying to make web applications that are used by more and more users in particular taking a look at challenges that will arise in terms of scalability as our programs get bigger and also security of what security vulnerabilities open themselves up as we begin to design our web applications using Python and JavaScript so more on that next time and we'll see you then thank you all right welcome back everyone to web programming with python and JavaScript and for our final topic we're going to explore scalability and security so so far in the class we've been building web applications and we've been building web applications that work on our own computer but if we want to take those web applications and deploy them to the world so people all across the internet can begin to use them then we're going to need to host our web application on some sort of web server some dedicated piece of Hardware that is listening for web requests and responding to them with the response that we would like for our web application to deliver and when we do so this introduces a whole bunch of interesting issues surrounding scalability and security so we'll take a look at these issues today beginning with problems concerning scalability what those problems are and how we might go about addressing them so when we deploy our web applications we deploy them by putting them onto a web server that I'm here just representing with this rectangle but all the server is is some dedicated computer some piece of Hardware that is listening for incoming requests so we'll draw this line to represent an incoming web request from a user the server takes that request and responds to it but ultimately our web application isn't just going to be servicing one user if it becomes popular it might have many users that are all trying to connect to that server at the same time and as multiple people start to connect to that server at the same time here's where we start to deal with issues of scalability a single computer a single server can only service so many users at any given time and so therefore we need to think in advance about how we're going to deal with those issues of scale but the first question before we even get there is where these servers actually exist and nowadays there are two main options for where these servers can exist these server series can be on the cloud or they can be on premise an onpremise servers you might imagine and as if a company is running their own web application onpremise servers or servers that are inside of the company's walls the company owns the physical servers maybe on some server racks inside of a room and therefore they have very direct control over all of the servers exactly what kind of servers they are exactly what software is running on them they can go and physically look at the servers and debug them if need be in order to make sure that any issues are dealt with but increasingly we're starting to move into a world where cloud computing is becoming increasingly popular we're in cloud computing rather than have dedicated servers that are on premise we have servers that are somewhere in the cloud where cloud computing companies like Amazon or Google or Microsoft are able to run their own servers and we simply use those servers that are provided by those third parties whether it's Amazon or Google or Microsoft or someone else and there are tradeoffs here with cloud computing we no longer have as direct control over the machines themselves because they're not on premise we can't physically manipulate those computers but we have the advantage of not having to worry about dealing with physical objects that are inside of the premise of the company whose servers we'd like to run code for that when it's on the cloud everything is managed externally by some other company and we can simply use the servers that we need to and we'll see that This lends itself to other benefits as well as we might need more servers as we start to get more sophisticated web applications that need more users these cloud computing companies can allow us to create web app locations that are able to scale across multiple different servers as we start to get more and more users but we'll discuss those issues of scale as we get to them the question we need to ask after we have these servers whether they're servers that are on premise or servers that are operating somewhere in the cloud is how many can those users can the server actually service at any given time and that's going to vary it's going to vary based on the size of the server the computing power of the server and it's going to be dependent upon how diff how long it takes to process any particular user's request if user requests are quite expensive it might mean that there are fewer users that can be serviced at any given time and it's for that reason that a helpful tool is to do some kind of benchmarking some process of trying to do some analysis on how many users a server can actually be handling at any particular time and there are numerous different tools that allow us to do this kind of benchmarking Apache bench or otherwise known as a b is a popular tool for doing this kind of thing but benchmarking is going to be useful so that we know how many users one particular server can handle maybe it can handle 50 users maybe it can handle 100 users maybe it can handle more at any given time but ultimately it's going to be some finite limit every computer just has some finite amount of resources and servers are no exception there's going to be some number of users after which the server is not going to be able to handle it so what do we do in that situation what do we do if our server can only handle 100 users at any given time but 101 users are trying to use our web application at the same time something needs to change we need to deal with some sort of scaling to make sure that our web application can scale and there are a couple of different types of scaling that we can try one approach is to do what's called vertical scaling which might be the simplest way you could imagine scaling if this server is not good enough for handling the number of users that we needed to handle we'll then just get a bigger server in vertical scaling we just take the server and get a bigger server a more powerful server a server that can handle more users at any given time it's going to cost more but if we need it to handle more users we can just get a bigger server to be able to deal with that problem this approach is fairly simple it just involves swapping out one server for another one that can handle more users concurrently but it also has drawbacks right there's some limit to how big the server can be to how many users any physical one server is going to be able to handle because there's a physical limitation on what is the biggest fastest most powerful server we could possibly get so when vertical scaling ends up not being enough an alternative as you might imagine is what's known as horizontal scaling and the idea behind horizontal scaling is that when one server isn't enough to be able to service all of the users that might be trying to use a web application at the same time well then we can take the approach of saying well rather than just using one server let's go ahead and split it up into two different servers we now have two servers that are both running the web application and now effectively we've been able to double the number of users that this web application can handle rather than just a single server that can serve as 100 users if we have two of them now we can Service 200 users at any given time if you imagine 100 of them using server a over here and 100 of them using server B over there but this then lends itself to some other questions that we have to answer which is how do these servers get their users in the first place like when a user requests a web page how does that user get directed either to server a or to server B it seems that they need some way to make that decision in order to decide whether to go One Direction or another and it's for that reason that we might introduce another piece of Hardware into this picture and that additional piece of Hardware is what we might call a load balancer and a load balancer is just another piece of Hardware that is going to sit in front of these servers so to speak in other words when a user makes a request to a web page rather than immediately getting that request to one of these web servers the request is first going to go through this load balancer where the request first comes into the load balancer and the load balancer then decides whether to send that request to server a or to send that request to server B and this process is likely less expensive than actually dealing with and processing that request so the load balancer is effectively just acting as a dispatcher it waits for those requests to come in and when the requests do come in the load balancer directs those requests either to go to one server or to another and you might imagine a story where we have more than just two servers maybe we have many servers and the load balancer is just going to balance between all of those different servers and this process of deciding which server to send a request to is known as load balancing which is what the load balancer is ultimately doing and there are various different methods that you might use in order to perform this load balancing so you might imagine thinking about this intuitively how would the load balancer decide given some request should we send the request to this router to this server or should we send the request to some other server instead and there are many different approaches that our load balancer might take and here are just a couple random Choice might be the simplest of options given a user that shows up and tries to make a request to our web server the load balancer first takes a look at the user and just randomly assigns them to one of the various different servers that might be processing that request if there are 10 different servers it randomly chooses among those 10 servers to decide which of them is going to be servicing that request this has the advantage of being very simple it's just a quick calculation the computers can pretty readily Generate random numbers and based on that random number the computer can dispatch the user to one server or to another server but it might not be the best option because if we happen to get unlucky we might end up with many more users on one server than another or in such we might end up with servers that are entirely unused if it just so happens that we don't end up randomly selecting that server now in practice with many users that are all using this load balance they're all being dispatched odds are high that eventually all of them will be used but it might not be a totally even distribution and so for that reason another approach you might take is a roundrobin approach where the approach is instead for the very first user go ahead and assign that user to server number one for the next user assign them to server number two and maybe if there are five servers you say the third user goes to server three user four goes to server four user 5 goes to server five and then user six goes back to server number one you basically rotate going one through five and then once you've assigned someone to each of the servers you go back to the beginning this is also a relatively easy thing to implement because you can simply just keep count somewhere in the load balancer saying what was the most recent server that I assigned a user to and the next time a request comes in go ahead and assign it to the next server and the next server after that effectively is doing a round robin style approach where you go through all the servers once before going through the servers again now this might seem better than random choice in the sense that it's going to more equitably decide whether to assign any particular uh request to any particular server but it also suffers from certain problems that round robin might be great but if some requests take longer than other requests we might also get unlucky and the requests that are taking longer might end up all going to one of the servers as opposed to another server so there are other approaches that we might want to go to as well for example something like fewest connections where the approach there is to say go ahead and when a user makes a request the load balancer should pick which of the servers currently has the fewest connections the fewest active connections from other users and other requests that are currently connected to those servers instead and by choosing the server that happens to have the fewest connections you're probably going to do a better job of trying to balance out between all the various different requests that might be happening inside of your web application and while this might do a better job there are tradeoffs here as well that it might be more expensive for example to compute which of the servers happens to have the fewest number of connections whereas it's much easier just to say choose a server at random or to do the round robin style approach of just one two three four five one two three four five again and again and again but all of these approaches naively have yet another problem which has to do with sessions and you recall that sessions we used whenever we wanted to store information about the user's current interaction with the web application when you log into a website like you log into your email or you log into Amazon for example and then you come back to that website or visit another page on that website making another request for example it's not the case that you have to sign in yet again that the web browser has totally forgotten who you are when I go back to my mail account or when I go back to Amazon for a second time my mail account or Amazon remembers me from the last time that I visited I have some sort of session where it's keeping track of who is logged in maybe information about what I've been doing on the page and allows me to continue interacting with the web application even if I'm making multiple requests and this you might imagine could be a problem for this type of load balancing but if I have multiple different servers imagine if I try to log into a website and the first time I make a request I'm directed to server number one and I'm now logged in on server number one but then I make another request I'm directed back to the load balancer and maybe the load balancer this time decides to send me to server number two but if the session is stored in server number one somewhere server number one remembers who I am and what I'm doing then server number two is not going to know who I am and therefore it's not going to remember that I've already logged into this web application and as a result I might be prompted to log in again and if I would go make another request and I end up on yet another server I might be logged out again and have to log in for a third time so the problem comes about when our load balancing happens but we're not doing so in a session aware way that our load balancer isn't caring about when a user visits the page and then visits another page on the same web application again because we want to remember information from the previous time that the user was here so how can we solve this problem how can we make sure that when we do this load balancing across multiple different servers that we do so in a session aware way well there are multiple different approaches to session aware load balancing one approach is this general idea known as sticky sessions where the idea is that when I come back to the load balancer the load balancer will remember what server I was sent to last time and send me there yet again so for example if I log into a website once and I'm directed to server number two for example then the next time I visit this web application even if I should be directed to server 3 or 4 according to random choice or according to fewest connections or any of these other load balancing methods the load balancer should remember that last time I came to this site I got directed to server number two and so this time the load balancer is going to direct me to server number two yet again that way server number two which contains information about my session is going to see me again and remember who it is that I am and it's not going to make me log in again into the exact same website for a second time for example and so sticky sessions are one way of dealing with this problem but again with all of these approaches and this will be a recurring theme as we talk about scalability and security there are tradeoffs here that are tradeoff to the sticky sessions is that it's possible that one of these servers is going to end up getting far more load than another if one server happens to have a lot of users that keep coming back to the website and keep requesting additional pages but other Pages other servers might have had users that decided not to come back for example and so there's a difference in utilization where some of our servers might be more heavily utilized than other servers and we're not doing a very good job of balancing between them and so one approach is to store sessions inside of the database rather than store information about sessions inside of the server themselves so that if I get directed to another server that other Server doesn't remember who I am doesn't remember information about my interaction with this website if we instead choose to store sessions inside of a database and in particular inside of a database that all of the servers have the ability to access well then it doesn't matter which of the servers I get directed to and which server the load balancer decides to send me to because regardless of which server I end up getting sent to the session information is in the database and each of the servers can connect to the database to find out who I am to find out whether I've logged into the site already and therefore is able to recognize me and so that might be one approach as well another approach to store sessions on the client side we've talked a little bit about this idea of cookies which can be stored where the web browser can set a cookie so that your web browser is able to present that cookie the next time it makes a request to the same web application and inside this cookie you can store a whole bunch of information including information about the session you might inside of a cookie store information about what user is currently logged in for example or other session related information but here too there are drawbacks if you're not careful someone could manipulate that cookie and maybe pretend to be something else and so for that reason you might want to do some encryption or some kind of signing to make sure that you can't fake a cookie and pretend to be someone that you're not but another concern is that as you start to store more and more information inside of these cookies these cookies keep get sitting back and forth between the server and the client every time a request is made that can start to get expensive too more and more information passing back and forth between the client and between the server so lots of possible approaches no one approach that is necessarily the right approach or the best approach to use in any cases but things to be aware of things to think about as we begin to deal with these issues of scale of making sure we have multiple servers that are available for usage in case we do need it but also making sure that when we do so we don't break the user experience we don't result in a situation where a user is logged in but then suddenly isn't logged in at all and so horizontal scaling gives us this kind of capacity the ability to have multiple different servers all of which can be dealing with user requests and responding to those user requests as well but a reasonable question asked is how many of those servers do we need now we can use benchmarking to try to estimate this if we have an estimate of how many users are going to be on our website at any given time we can Benchmark and see how many users there can be handled by a single server and extrapolate based on that information to infer how many servers we might need in our web application to be able to service all of these different users but it might be the case that our web application doesn't always have the same number of users maybe sometimes they're going to be far more users than another time you might imagine for example that in a news organization's website like the web application for a newspaper when there's breaking news some big story there's going to be a lot more people that are all trying to access the website at the same time than at other times so one approach might be like consider the maximum what is the most number of users that ever might be trying to use our web application at any given time and choose a number of servers based on that maximum so that no matter how high the number of users get we will have enough servers to be able to service all of those users but that's probably not a great economical choice if in the vast majority of cases there will be far fewer users in that case you're going to have a lot of servers that are underutilized where you don't need that many servers but you're still paying for the electricity for keeping all of them running which might not be an ideal choice either so one solution to this quite popular especially in this world of cloud computing is the idea of Auto scaling where you can have an auto scaler to say that you know what let's start with for example two servers but if there's enough traffic to the website if enough people are making requests to the website maybe it's a peak time where people are using the website go ahead and scale up go ahead and add a third server where now our load balancer can balance between all three of those servers and if even more traffic ends up coming to the website more users are trying to use this application all at the same time well then we can go ahead and add a fourth server as well and we can continue to do that most Auto scalers will let you configure for example a minimum number of servers and a maximum number of servers and dependent on how many users happen to be using your web application at any given time the auto scaler can scale up or scale down adding new servers with more users come to the website removing servers as fewer users are using the website as well and so this can be a nice solution to this problem of scale where you don't have to worry about how many servers there are it just Auto scales entirely on its own now there are tradeoffs here too that this Auto scaling process might take time and if a lot of users all come into your website all at the exact same time well it's going to take some time to be able to add all these additional servers to start them up and so there might be some tradeoffs there too where you might not be able to service all of those users immediately and another problem we're thinking about is as you add more and more of these servers you introduce opportunities for failure now it's better than having a single server where if that single server fails now suddenly the entire web application doesn't work at all that's what we generally call a single point of failure a single place where if it fails the entire system is going to be broken one advantage of having multiple servers is that we no longer have a single server that acts as a point of failure if one of the servers goes down then ideally our load balancer should be able to know based on that information to no longer send a requests to that particular server to instead balance the load across the remaining three servers instead now there's an interesting question there as well which is how does the load balancer know that this server is no longer responding for some reason and have some sort of error that it's not able to process requests appropriately well there are multiple ways you can do this but one of the most common is what's simply known as a heartbeat where effectively every so often every sum number of seconds the load balancer pings all the servers just sends a quick request to all the servers and all of the servers are supposed to respond back and using that information the load balancer knows a little bit about the latency of each of the servers how long it took for the server to respond to the request but also it can get information about whether or not the server is functioning properly that if one of the servers doesn't respond to the Ping well then the load balancer knows that there's probably something wrong with the server that we probably shouldn't be directing more users to that server at all and so this can solve for the problem of a single point of failure by allowing ourselves multiple servers where if any one of the servers fails the load balancer learns about that via heartbeat and then based on that information can begin to redirect traffic to the other servers instead now one thing you might notice is that even in this picture now the load balancer appears to be like a single point of failure where if the load balancer happens to fail well now nothing is going to work because the load balancer is the one responsible for directing traffic to all of these various different servers and so even there there's no single server that has a point of failure this load balancer also appears to be a single point of failure and that's definitely true and you might imagine instead having multiple load balancers where if one load balancer goes down another load balancer can swoop in acting as a hot spare where it picks up all the traffic that was originally going to the first load balancer and if it ever goes down a second one is ready to take its place and it might also be doing this kind of heartbeat process checking up on the first load balancer and if all is well the second load balancer doesn't have to do anything but if the first load balancer ever were to fail well then the second load balancer can step in and begin servicing those requests directing them to all of these individual servers as well and so there too another opportunity to think about where the single points of failure are and thinking about how we might address those single points of failure in order to make sure that our web applications are scalable so that then deals with issues about how we might go about scaling up these servers But ultimately the servers are not the entirety of the story that inside of our applications we've mostly been writing web applications that interact and deal with data in some way and there are multiple different databases that we've talked about SQL Lite has been the default one that Django provides to us which just stores data inside of a file but as we begin to grow our applications we want to begin to scale them it's quite popular and quite common to put databases entirely somewhere separate to have a separate database server running somewhere else where the servers are all communicating with that database whether it's running MySQL or postgres or some other database system instead and all of the servers then have access to that database and so there too are are considerations that we need to take into account issues of how it is that we go about scaling up these databases that in this picture for example you might imagine a load balancer that is communicating with two servers but both of those servers for example need to be communicating with this database and much like any server can only handle some number of requests some number of users at any given time databases 2 can only handle some number of requests some concurrent number of connections at any given time and so we need to begin to think about issues of how it is and that we scale these databases as well in order to be able to handle more and more users now one approach the first thing we might try to do is something called database partitioning effectively splitting up what is a big data set into multiple different parts to that data set and we've already seen some examples of database partitioning we've seen one example where for example when we talked about SQL we looked at a table of flights where each flight Had An Origin City the origin cities airport code the destination city the destination cities airport code and some number of minutes the duration for that particular flight and we decided that storing all of this data in a single table probably wasn't the best idea and instead we wanted to split that data up in a type of partitioning where instead we said all right let's just have one table that will have all of the airports and so each airport gets its own row inside of this Airport's table and we also had another table which was just the flights table which rather than storing all of those columns just mapped to airports to each other that with any given flight it has an origin ID meaning Which object which Row in the origin of airports table is represented by the flight and then which Row in the airports table is going to represent the destination for that flight so we took one table and effectively split it up into multiple tables Each of which ultimately had fewer columns and this might be something we call the vertical partitioning of a database where instead of just having single big long tables we split them up into multiple tables Each of which have fewer columns that are able to represent data in a more relational way and that's something we've seen before too but in addition to Vertical partitioning we can also do horizontal partitioning where the idea there is that we take a table and just split it up into multiple tables that are all storing effectively the same data but split up into different data sets so the same type of data but just in different tables where we might have originally had a flights table and instead we split it up into a domestic flights table and an international flights table each of these tables still has the exact same columns they still have a destination column they still have an origin column they still have a duration column for example but we've just now taken the data that used to be in one table and split up that data into two or more multiple different tables instead one for all the domestic flights one for all the international flights and the advantage there is that we no longer need to search through the entirety of the data set if we're just looking for one domestic flight for example if you know the flight you're looking for is a domestic flight well then it can be more efficient to just search the flight's domestic table and not bother searching through the flight's International table and so for intelligent about how we choose to take a table and split it up into multiple different tables the effect of that is that we can often improve the efficiency of our searches the efficiency of our operations because we're dealing with multiple smaller tables where these operations can come faster one drawback though is that as we begin to split data across multiple different tables it becomes more expensive if ever we need to join this data back together and connect all the domestic and international flights running separate queries on each and so in that case we'll want to think about trying to separate our data in such a way that generally we're only going to need to deal with one table or the other at any given time and so domestic and international might be a reasonable way to split up our flights table because maybe most of the time our airport just cares about searching domestic flights if we know we're looking for one kind of flight or just cares about searching for international flights if they're different people or different computers that are going to handle each of those different types of systems and so partitioning our database can sometimes help with issues of scale by making it faster to search through large amounts of data and being able to represent data a little bit more cleanly but it still seems to represent a single point of failure that we have multiple servers now that are all connected to the same database and there again is a single point of failure if the database fails for some reason well now suddenly none of our web application is going to work because all of those servers are all connected to that exact same database and so it's for that reason that we might just as we tried to add more servers in order to solve the problem of a single point of failure with our servers we might also try database replication that rather than just have a single database in our web application in order to guard against potential failure we might replicate our database have multiple different databases and therefore reduce the likelihood that our application entirely fails and there are a couple of approaches that we can use for database replication two of the most common are what are known as single primary replication and multiprimary replication and in single primary database replication we have multiple different databases but one of those databases is considered to be the primary database and what we mean by a primary database is a database to which we can both read data meaning like select rows from the table but also write data meaning insert rows or update rows or delete rows to any of those tables so in single primary replication we have a single database where we can both read and write and we have some number of other databases in this case two other databases from which we can only read data so we can get data from those databases but we can't update or insert or delete from those databases and now we need some mechanism to make sure that all of these databases are kept in sync and ultimately what that means is that anytime the database changes all of the databases are informed now the only database that can change is our primary one this is the only one that can be written to the only one that allows for the data to change the others are readonly so anytime this primary database updates or changes in some way it needs to inform the other databases of that update and so it informs the other databases of that update and now all of the databases are kept in sync where if you try and run a query on any of these databases to select and get some information you'll get the same results from all of these various different databases now the single primary approach has some drawbacks it has the drawback of only one of these databases can be written to so if you have a lot of users that are all trying to write data to the database at the exact same time well there might be some issues here where this one database is going to be carrying all of that load for all of the people that might be trying to update and change that database and it also has a slightly smaller version of the same problem of a single point of failure there's no longer a single point of failure for reading from that data that if you want to read from the data and one of the databases goes out you can read data from any of the other databases and they'll work just fine but it does have the drawback that if this database fails if our primary database fails well then we're no longer able to write data that if we want to update data inside of our database this one database is no longer going to be operational and none of the other databases are going to allow us to write new changes so there are a couple of approaches we can use to try to solve this problem one approach though is instead of having a single primary database a single database to which we can read and write to use a multiprimary approach and in the multiprimary approach we have multiple databases all of which we can read and write to we can select rows from all the databases and we can insert and update and delete rows to all of these databases as well but now the synchronization process becomes a little bit trickier and here now is the tradeoff and now we've replicated the number of reads and writes we can do by having many databases to which we can read data and write data but anytime any of these databases changes every database needs to inform all of the other databases of those updates and that's certainly going to take some amount of time it introduces some complexity into our system as well and it also introduces the possibility for conflicts that you might imagine situations where if two people are editing similar data at the same time that you might run into a number of different types of conflicts so one type of conflict for example would be an update conflict if I try to edit one row in one database and someone else tries to edit the same Row in another database when they sync up with each other via this update process our database system needs some way to decide how it's going to resolve those various different updates another conflict might be a uniqueness conflict we've seen in the case of databases in SQL that when we're designing our tables I can specify that this particular field should be a unique field common one being the ID field for example where every single row is going to have its own unique ID well what happens if two people try to insert data at the same time into two different databases they're each given a unique ID but it's the same ID on both of the databases because neither database knows that the other databases added a new row yet so when they sync back up we might run into uniqueness conflict where two different databases have assigned the same exact ID to multiple different entries and so we need some way to be able to resolve those conflicts as well and there are many other conflicts that you might imagine trying to deal with one example being for instance delete conflicts where one person tries to delete a row and another person tries to update that row well which should take precedence should we update the row should we delete the row we need some way to be able to make those decisions because there is some latency between When A change is made to a database and when that database is able to communicate with another database so these issues have scale these issues of synchronization are always going to come up as we start to deal with programs that are interacting with more and more of this kind of data and as a result we need to design more and more sophisticated systems that are able to deal with those issues of scale now ultimately we'd ideally like to reduce the number of different of these database servers that we have that every additional database server is going to cost time it's going to cost resources to cost money in terms of keeping all of these servers running and so ideally we'd like not to have to talk to this database if we don't need to so you might imagine for example a news organization's website something like the front page of the New York Times if you go to the homepage of the New York Times website it displays all of the day's headlines with images and with information about what each of the stories are about for example and you might imagine that the way they're doing something like this is that they have some kind of database that's storing all of these news articles and when you visit the front page of the New York Times it's going to do some kind of database query selecting all of the recent top headlines for example and rendering all of that information in an HTML page that you can see and that would certainly work but if a lot of people are all requesting the front page at the same time well it probably doesn't make all that much sense if the web application every time is making a database query getting the latest articles and then displaying that information to all the users because the Articles might not be changing all that frequently if one person makes a request one second and another person makes the same request half a second later it probably is not going to be useful to rerequest all the information from the database regenerate that template yet again because it's an expensive process of requesting data from the database of generating that template we'd ideally like some way of dealing with that problem and the way we can deal with that problem is some form of caching and caching refers to a whole bunch of different types of of ideas and tools that we can use at various different places inside of our system but in general when we're talking about caching we're talking about storing a saved version of some information in a way that we can access it more quickly so that we don't need to continue making requests to a database for example and so there are a number of ways we can do caching one way we can do caching is on the client side via clientside caching where the idea is that your browser whether it's Safari or Chrome or something else is able to cache data store information so that the browser doesn't need to rerequest the same information the next time it visits the page for example if you request a page and it loads an image on the page for example and you reload the page well your web browser might try and make a request again for the exact same image and then display it to you but an alternative might be but your web browser could just save a copy of the image inside of a cache to locally store a version of the image so that the next time that the user makes a request to the website the user doesn't need to reload that entire image and that might be true of entire web pages and web resources that if there's some page that doesn't change very often then if the web browser just stores a cache a saved version of that page then the next time the user goes to their web browser tries to access that page rather than rerequest to the server and make a new request that the server needs to respond to if the browser has that page to cached the browser can just display the cached saved version of the page saving the need to talk to the server at all so this can certainly help to reduce the load on any given server that if users are caching information inside of the web browser it makes the experience faster for the user because they can see the information immediately rather than need to make a request and wait for a response to come back and it's good for the server because the server doesn't need to be dealing with as many requests if some of those requests are getting cached and so one approach to trying to do this is by adding this inside of the headers of an HTTP response that when your web server responds to some request the web server can include a line like this inside of the response something like cache control max age 86 400 in effect specifying the number of seconds that you should cache this resource for that if I try to access this page 10 seconds later well that's less than 86 400 so rather than reload and rerequest the entire page we're just going to use the version of the page that happens to be cached inside of the web browser and so this has several advantages that we've talked about in terms of reducing the amount of time it takes to see the content of a page because it's already saved and reducing the load on any particular server but it also has drawbacks that if for example the resource changes within this amount of time that maybe in 60 seconds the page has changed if I try and load the page again well then if it's loading the cached version of the page I might be seeing an outdated version of a web page I'm seeing an older version of the web page because my web browser just so happens to have that particular resource cached and this might be true of a web page it's especially true of other like static resources things like CSS files or JavaScript files that the CSS of a web page probably doesn't change all that often and so as a result it's pretty natural that your web browser rather than request the exact same CSS files again and again and again might just save a copy of that those CSS files cache them such that it's able to just reuse the cached version but if the website were to update their CSS you might not see the latest changes and you might have experienced this yourself if you're working on your own web applications when you change your CSS and refresh the page you might not always see those changes reflected if your web browser is caching those results and so in most web browsers you can do a hard refresh to say ignore whatever's in the cache and actually go out and make a new request and get some new data but ultimately if you don't do that you're subject to this cache control where the web browser is going to say unless this number of seconds has elapsed we're going to reuse the existing version of the page and so an alternative to this approach and this approach certainly works and is quite popular we can add to this approach by adding what's known as an etag and the etag for a resource like a CSS file or an image or a Javascript file is just some unique sequence of characters that identifies a particular version of a resource that identifies a particular version of a CSS file or a Javascript file for example and what this allows a program to do like a web browser is that when a web browser requests a resource like makes a request for a CSS file or a Javascript file they get it back and they get its Associated etag value so I know that this is the value that is associated with this version of the CSS file and if the web browser if the web server were ever to change that CSS file replace it with a new updated CSS file the corresponding etag will also change so why is this helpful well it means that if I am trying to decide should I load a new version of the resource or not should I try and make another request to get the latest version of the CSS what I can do first is just ask for what is the etag value this short sequence that can be answered very quickly that very quickly we can just respond and say you know what if the etag value is the same as what I remembered from last time well then I don't need to get a whole new version of that resource and so this is quite common too that a web browser will say hey let me request this resource but I already have a version of the resource with this particular etag so if that etag is still the retag for the most recent version of a particular resource like a CSS or JavaScript file then no need for the web server to send a new version of that file just go ahead and respond and say the version you have that one works totally fine but if there is a new version well then the web server can respond with the new asset the new CSS file for example but also the new etag value so these two approaches can work in concert with each other that you can say go ahead and cache this for some number of seconds so that for some number of seconds you're not going to ever request a new version of that resource but even if you do ask for a new version of the resource after this number of seconds has elapsed if the etag value hasn't updated then no need to redownload a whole new version of a particular file you can just reuse the version that happens to be cached already in the browser so caching in the browser can be an incredibly powerful tool for trying to speed up these requests for trying to reduce the load on any particular server but the client side is not the only place where we can begin to do this kind of caching we also have the ability to do server side caching and in serverside caching we're going to introduce to our picture the notion of a cache that we have these multiple servers that are all communicating with the database but these servers can also communicate with a cache someplace where we've stored information that we might want to reuse later rather than have to do all of that recalculation and Django in turns out has an entire cash framework a whole host of features that Django offers that allow us to leverage this ability to use the cache to be able to speed up requests so there are per view caches where you can specify a cache on a particular view to say that rather than run through all this python code every time someone makes a request to this particular view instead and just cache The View so that for the next 30 seconds or 30 minutes the next time someone tries to visit the same view go ahead and just reuse the results of the last time that that view was loaded and this can work not just for a single view it can work for fragments inside of a template that your template might have multiple different parts that on your web page you might render the navigation bar in the sidebar and the footer maybe based on information about today that might change the next day but if you expect that the sidebar of your page is not going to change very often within the same minute or within the same hour well then you might imagine caching that part of the template so the next time that Django tries to load that entire template it doesn't need to recalculate how to generate the sidebar for your website it just knows that we can use the save version of the sidebar from the last time that we loaded this website instead and Django also gives you access to a lower level cache API where for any information that you might want to cache and store for use later you can save that information inside of the API you make an expensive database query that takes a couple of milliseconds or a couple of seconds to process you can save those results inside of a cache to make it easier to access that same data if ever you tried to get access to that again so caching allows us to be able to deal with these issues of scale by reducing load on our servers but also on our databases that rather than need to talk to the database every single time we make a new request for a particular web application we can just reuse information that happens to be in the cache to allow our web applications to become even more scalable so that then was a look at some issues concerning scalability and we'll next turn our attention to security trying to make sure that as we build our web applications as we deploy our web applications and more users start to use them we want to make sure that they're secure and there are a whole bunch of security considerations to take into account across all of the topics that we've looked at in the course we've looked at a number of different topics and with each of them there are security vulnerabilities there are ideas to be mindful of when it comes towards making sure that our applications are secure and we can begin our story in fact by talking about git and Version Control git is all about trying to make sure we're able to keep track of different versions of our code and one thing that goes hand in hand with Git is this idea of Open Source software but on websites like GitHub and other services that host git repositories increasingly a lot of software is becoming open source where anyone can see and contribute to the source code of an application and this is great in the sense that it allows for many people to be able to collaborate work together in order to try to find bugs that might exist inside of a web application but it also comes with drawbacks drawbacks where if there is a bug in the application now someone who's looking through the source code of our program might be able to spot that bug or you might imagine now because git keeps track of different versions of our code every time we make a commit to our repository you have to be very careful when it comes towards credentials or things that might leak inside of the source code you generally never want to put passwords or any secure information inside of the git repository because the git repository could be shared with other people it might be open to anyone to look at and so there's a security considerations to be mindful there as well that if you make a commit and accidentally make a commit to your code where you expose those credentials you might remove those credentials and commit again to the latest version of your program doesn't have those credentials in it but someone who has access to the git repository has access not just to the latest version of your code but to every version of your code and that person could theoretically go back through the history of the repository and find the commit where the credentials were exposed and see those credentials as well so while git is a very powerful tool it's also one to be mindful of that any change you make could potentially get saved inside of a commit could potentially therefore be accessed later on and so if ever credentials are exposed inside of the repository you want to make sure to wipe out all of those previous commits and not just make some new commit in order to try and hide the previous credentials that can be exposed because they can still be retrieved if someone goes back through the history of any particular Repository and so that then was a look at some issues that might concern git we also talked at the beginning of the course about HTML and about what it is that we can use with HTML and how we can use this language in order to design the structure of a web page in order to decide where all of the paragraphs are going to be what tables are going to be on the page we talked about links and how we can use anchor tags to link one page to another page now one concern and is this type of attack known as a phishing attack with HTML and a phishing attack really just comes down to a little bit of HTML that looks like this very easy to write where I have an anchor tag that is going to direct the user to URL one but it looks like it directs the user to url2 so what made an example of this be all right so we'll take a look I'll go ahead and open up link.html and in link.html I have a website that I've written that appears to have a link to Google but if I click on that link I'm suddenly directed to this course's website for example so how did that happen why did that happen it seems like it's linking to Google well if you look at the code if I go ahead and open up link.html we'll see that here I have an anchor tag that actually links to the course website but appears to be linking the text that the user sees appears that it is linking instead to Google and so this is a very common attack Vector especially in emails for example that you might see an email that tells you to click on a particular link but that link takes you to somewhere else entirely instead and as a result someone might inadvertently share their bank account credentials or other sensitive information and so here too something to be mindful of if you interact with the web maybe not necessarily on your own website but in other websites that you might interact with just to be mindful about where links are actually taking you and most web browsers if you hover over a link will show you where that link might actually be directing you to because it might be different than what the text of that particular anchor tag might appear to link you to instead and so HTML has all these various different vulnerabilities where because you can just decide what you want the structure of the page to be it leaves open the possibility that someone might try to trick you into thinking that you're going to a page that you're not actually on and this problem is more widespread because anyone can look at the HTML for any page HTML comes back from the server and therefore the web browser has access to all of that HTML and can use that HTML in order to render a page for example and this leaves open other vulnerabilities too so for example let me go ahead and go to bankofamerica.com just Bank of America's website go to any other website instead if I wanted to create a fake version of Bank of America's website for example to trick people into thinking they're going to Bank of America's website when really they're going to my website well then what I can do is just go ahead and view the source of this page I'll go ahead and view page source and here is all of the HTML for Bank of America's website and nothing then stops me from copying all this content going into an HTML file and creating a new file then I'll just call like bank.html and I'll go ahead and paste in the contents of that HTML file so here then is all of Bank of America's HTML and now if I open up bank.html that HTML file that I have now written but really just copied from Bank of America I open it up and now here on my page is a web page that appears to look like Bank of America it's using all of Bank of America's HTML but instead it is my HTML page and not actually Bank of America and so you might imagine combining these to create an even more concerning attack Vector where instead of linking to google.com let me try and link to Bank of america.com but where I'm actually going to link to is bank.html my version of Bank of America's website where now if I open up link.html here appears to be a link that links me to bankofamerica.com if I click on that link I get to a page that looks like Bank of America's website but it's not Bank of America's website it's my bank.html file that I have written that Joseph happens to look like Bank of America's website because I copied all of that underlying HTML so HTML has the ability to describe the structure of our web page but anytime you're writing this HTML it's good to be mindful of the fact that anyone can copy your HTML could theoretically pretend to be you and these are security vulnerabilities that are worth bearing in mind as we start to develop web applications and interacting with web applications as well so ultimately we used HTML in the context of Designing web applications using Django a framework and how exactly then did these web Frameworks work in terms of creating these web servers that are listening for requests and that are responding to those requests well ultimately much of the internet is based around this idea of a client communicating with a server or more generally any one computer communicating with another computer using HTTP and in particular https a more secure version of the HTTP protocol and so you might imagine that what these Protocols are really about is how information gets from one person to another and what we're storing with that information that we have one computer trying to communicate with some other computer and in order to do so information is generally going to flow through these routers that you might imagine information going back and forth between one computer and another computer going through these intermediate routers along the way and as a result one thing to be cautious about is how do you know that this information that's getting passed back and forth is getting passed back and forth securely then ideally when I send a message to another computer I'm sending an email to someone else and sending a message or making a request to a website that might contain sensitive information like my bank account for example I don't want it so that any intercepting router that is taking my request and passing it along I don't want those routers to be able to look at that request and see the contents of my email or the contents of what password I happen to be sending across the web or not ideally I'd like for this information to be encrypted and so here we'll talk a little bit about cryptography this process of trying to make sure that I am able to communicate with some other person without some eavesdropper in the middle being able to intercept that message obviously if I just take a plain text version of the message I'm trying to send I just literally take the text of the message I'm trying to send and effectively pass it along across the internet well then anyone who's able to see that message is going to know what the text of that message is and so I want to do some kind of encryption some way of encrypting that message so that someone along the way won't be able to do that decryption if a router in the middle or someone in the middle is able to intercept that message and so the first approach we'll look at is what's known as secret key cryptography in secret key cryptography I have not just the plain text but some key some secret piece of information that can be used in order to encrypt or decrypt information and so I'll use both the key and the plain text to generate what's known as the ciphertext the encrypted version of the message I'm trying to send and then instead of instead of sending the plain text across the internet to the other person I might instead want to just send the cipher text across the internet to the other person so that I'm not sending the plain version of the message across the internet so the ciphertext goes across and the other person will also need the key and now if the other person has both the ciphertext and the key well then using that information the other person can use the key to decrypt the ciphertext and obtain the original plain text this key is what we might call a symmetric key encryption and decryption key you use the key in order to encrypt messages and you use the same key in order to do the decryption process and as long as both I and the person I'm communicating with both have access to that key well then we'll be able to encrypt messages and decrypt messages and someone who just has the ciphertext but not the key likely won't be able to figure out what that original message was but there's a problem here especially in the context of the internet and that is that both I and the other person need to have access to this key the key is what I use to do the encryption and the decryption and I can't just send the key across the internet to the other person because if I do that well then someone in the middle who's intercepting all of my requests could intercept both the ciphertext and the key and therefore they would be able to decrypt the message because they have both the ciphertext and the key now if I were able to go to another person in person and exchange the secret key in secret well then this scheme might work because we both have the key and I didn't share the key publicly with anyone who might intercept the message only I and the other person have the key but in general when communicating on the internet you're not communicating with servers you've necessarily communicated with before I might be trying to make a request to a new website and we somehow still need to agree on a system where I can encrypt messages but only the other person on the other side is able to decrypt those messages instead so this kind of cryptography probably not great for trying to initially try and create a secure connection on the internet and for that reason a major advancement in cryptography that allows for the internet to work is this notion of public key cryptography in secret key cryptography it's important the key is secret because if the key were known by everyone well then anyone would be able to decrypt messages in public key cryptography we're able to create a secure encryption system where the key is allowed to be public or one of the keys as we'll soon see and the idea here is that we're using two keys instead of just one that we have both a public key and what's known as a private key the private key your private key is something you should not share with other people to keep the encryption scheme secure but the public key is one that is okay to share with other people and the distinction between the two is that the public key will be used in order to encrypt information and the private key will be used to decrypt information that was encrypted by the public key and the public key and the private key are mathematically related and there are a couple of ways that we might imagine doing that but the idea now is that if I want to communicate with another person that person sends me their public key and it's okay for the public key to travel across the internet anyone is allowed to see the public key because the public key is only used for encrypting that data so I can then take the plain text and the public key and use that to generate the ciphertext the encrypted version of the message that I am trying to send across the internet and then I send the ciphertext to the other person with whom I'm trying to communicate and the other person now using the ciphertext then uses the private key the private key that they did not share and then private key that has the ability to decrypt information that was encrypted using the public key so using a combination of the ciphertext and the private key the person I'm communicating with can decrypt that information and get back whatever the original plain text of that information happened to be and so this then is how we can do a lot of this communication on the Internet by using this public private key pair we can say use the public key to do the encrypting use the private key to do the decrypting and now two computers that have never interacted with each other before without having the opportunity to meet to exchange some secret information can use a technique like this in order to securely communicate with each other to send a message back and forth without anyone in the middle being able to intercept the message and identify what the message is about and once you have this ability the ability to communicate with another secretly well then you could imagine agreeing on some secret key and then using secret key encryption to be able to encrypt and decrypt messages as well and so that's an approach that you can also take when trying to communicate with other people across the internet but this idea of encryption is what allows for https a secure version of the HTTP protocol to actually work to make sure that when you are communicating with your bank's website for example someone along the way won't be able to intercept that information and identify what it is that you're communicating about and instead only has the encrypted version of the information and a plan and a public key with which they can encrypt information but not a private key that can ultimately be used in order to decrypt information as well and so that then is how we might allow for this kind of secure communication on the internet and allow our web applications to be secure but in addition to our web applications just listening for requests and then providing some sort of response our web applications were also dealing with data we introduced the idea of SQL data tables where we had tables of data with rows and columns that are representing information and we've also created web applications in this course where we've had applications that have users users sign in with a username and a password for example and so how might we represent that information about users and their passwords well one way would be just a stored inside of a table like this here's a table of users every user has an ID they have a username and they have a password but this turns out to be an incredibly insecure way to store passwords to be storing passwords in what might be called plain text just to literally store the passwords inside of a database and we should never do this in practice because of the security vulnerabilities associated with it if ever someone were to unauthorize get access to this database they would be able to see all of the passwords for all of the users so if this database ever leaked for whatever reason suddenly all of these passwords are now known and this kind of thing does happen that if companies are not careful about how they represent usernames and passwords inside of their databases and however there's sort of some sort of database leak suddenly a whole bunch of passwords could potentially be compromised and it's for that reason that the recommended approach rather than store an actual password is to store a hashed version of the same password using a hash function or a hash function in this context is some function that takes a password of input and outputs some hash some sequence of characters and numbers in this case that represents that particular password a hashed version of the password but the important thing about this hash function is that it's a oneway hash function from the password you can get to the sequence of letters and numbers but it is very very difficult to go the other way around to use this information to figure out what the original password actually was and so what this means is that the companies won't actually know what any particular user's password is when a user tries to log in what we'll do is take their password that they're trying to log in with will hash it and compare that hash against the hash that we've stored in the database if the hashes match up that means the user probably typed in their password correctly and therefore we can sign the user in and otherwise that's a sign that the user did not type their password in correctly so this then is the reason why companies if they're obeying these best practices usually can't tell you what your password actually is if you forget your password if you forget your password the company will let you reset your password they can update the data inside of the table but the company won't be able to tell you what your password actually is because the company doesn't know your password the company only knows some hashed version of the password some result of passing that password through a hash function and as a result they're able to know whether you logged in successfully or not with the correct credentials without actually knowing what your password actually is and so this is another area where you might imagine that if you're not careful about how you're storing this data it could be a security vulnerability inside of your program wherever that data is leaked passwords suddenly become known and there are other more subtle ways that web applications could potentially leak information that you as the web developer need to decide if you're okay with or not imagine a website for example where you do have a place where you can say if you forgot your password you can be sent a place where you can reset your password for example you might imagine that if you type in your email address click reset password you might get a message like all right password reset email has been sent but you might imagine typing in an email address and getting something like error there is no user with that email address and here again is a potential security vulnerability in terms of leaked information this page that just seems to send you an email if you forgot your password is now leaking information about which users happen to have accounts on your website and which users do not because all someone needs to do is type in an email address and find out whether it results in an error or not in order to know whether a user happens to have an account on the website or not and maybe that's not a big deal if that's not something that you care about securing but if it's a website where you do care about making sure that if someone has an account or doesn't have an account that information is kept private and secure only to the user unless they want to share it well then this type of page this type of interface with the database could potentially be leaking that kind of information and information can be leaked in all sorts of different ways you can even leak information just based on the time it takes for the database to be able to respond to a particular request that you might imagine if you make a request about a user and it takes longer to respond that might tell you something about the number of database queries it needs to run or the amount of information that's stored about that user as opposed to if a request takes less time so even something like how many milliseconds it takes for a web server to respond to a request can reveal or leak information about the data that is stored inside of the database and there have been examples of researchers who actually tried and see what information they can get just from looking at these kinds of information that it doesn't seem like would leak information but might actually reveal information as well now another concern when dealing with SQL and databases we've talked about is the context of SQL injection this threat where if you're not careful about how it is that you run your SQL code you could inadvertently end up executing code that you don't mean to be executing situations like here when a username and password field we've seen this example before where if a user tries to log in you might imagine a query like this is run selecting from the users table where username equals whatever was typed in as the username and password equals whatever was typed in as the password and we saw how for a normal user someone who types in like Harry and one two three four five as they're username and password now this type of query works just fine but if a hacker tries to log into a website and maybe includes a double quotation mark and two hyphens for example where two hyphens mean a comment in SQL and we were to literally substitute these values into our SQL queries well then you might end up substituting hacker hyphen hyphen hyphen hyphen creating a comment that ignores the rest of this query effectively ignoring any kind of password checking that we might want our web application to be doing so this to another vulnerability that comes about whenever we're dealing when executing SQL code inside of a database and in order to deal with this we want to make sure that we're escaping any of these potentially dangerous characters that might show up inside of our SQL queries and Django's models do this for us so when we do these kinds of queries using Django saying like dot objects.filter to be able to filter out for only certain versions of a particular model it is going to take care of the process of making sure that it's not subject to these kinds of SQL injection attacks but if ever you're writing a web application that is directly executing SQL code which you might imagine doing you do want to be careful about making sure that you're not exposing the application to be vulnerable to these kinds of threats as well so that then are potential threats to come about when we're just talking about what's happening on the server but we also can think about what might happen when we're interacting with other servers when we're interacting with apis for example and so we talked about JavaScript and using JavaScript to be able to make additional requests to apis or to other services that are able to return back with certain types of information and with apis there are a number of techniques that we can use in apis to allow them to be more scalable to allow them to be more secure one is this notion of rate limiting where we might want to make sure that no user is able to make more than a certain number of requests to an API in any particular amount of time this is in response to a security threat that has to do with the scalability of a system which is known as a Dos or denial of service attack where effectively if you just make a whole bunch of requests to a single server over and over and over again you could potentially shut down that system because you're making so many requests that it's not able to handle that many requests all at the same time and for that reason because it's so easy to make an API request you can do so using just a single line of like python or JavaScript for example apis will often Institute some kind of rate limiting to limit the number of requests you can make so that you're not going to overwhelm the server or overwhelm the database that needs to be queried in order to respond to those requests into this kind of limiting might work as well apis might also want to add some kind of Route authentication you might not want everybody to access the same data via an API maybe there's some sort of permission model where only certain users are able to access certain pieces of data from the API so you might imagine that a user needs to have an API key for example some effectively like a password that they need to pass around anytime they're making an API request to your API and that allows you to then be able to look at that key and verify that they are who they say they are now with those API Keys comes other potential security vulnerabilities to be mindful of one is that just as you should never be putting like passwords inside of your source code inside of your git repository for example you likewise generally shouldn't be putting your API keys inside of your web applications as well inside of the source code of those web applications because then anyone who has access to the source code for the web application can see what your API key is could then use the API key to pretend to be you and therefore get access to potential API routes that they should not be able to access one common solution to this is to use what are known as environment variables where effectively you and your program say that your API key is not going to be some predetermined string that is in the text of your program but instead is going to be drawn from the environment in which the program is being run and then on the server when you're running the web application you'll first make sure the server has all of those environment variables set correctly so that rather than have the API key actually in the source code of the program the API key is simply in the environment on the server where the web application is running and the server can just draw that information from the environment so that it knows what the API key should be without the API key actually having to be inside of the web application source code itself and so as we begin to deal with apis you might notice that many apis will require you to have an API key and often it's for these sorts of reasons to make sure that we're able to authenticate users effectively and also to make sure that we're able to limit users to make sure that they're not making too many requests to the server or to the database at any particular time but this then starts to get us into other potential vulnerabilities in particular vulnerability is concerning JavaScript JavaScript again is a programming language that we use in order to write code that runs inside of our web browser a browser like Chrome or Safari or something like that and as a result JavaScript has a lot of power to manipulate things on the page it can simulate the clicking of buttons it can change the content of what happens to be on any particular page and as a result there are many many vulnerabilities that come about when it comes to thinking about JavaScript and one such vulnerability is this notion of crosssite scripting that in general when on your web application you only want JavaScript to run if you yourself have written it crosssite scripting is a Potential Threat where someone else might be able to get JavaScript code to run on your website when it's JavaScript code that someone else wrote instead of you yourself and this is a potential vulnerability because someone else can write the JavaScript code they can manipulate the contents of what happens to be on your website they can potentially manipulate the user experience to get a result that is not actually desired so let's go ahead and take a look at one example of crosssite scripting all right so I've prepared a web application in advance it's called security inside of which is a single Django app called xsx xss for crosssite scripting and inside of here we'll first take a look at the URLs so there's a single URL that just allows us to provide any path and then it's going to load the index View and on the index View we're going to display an HTTP response that says here was the path that just happened to be requested so you might imagine this is a simplified version of what you might see on other websites for example where websites might show you on any particular page what path you're on in order to get to that page some sort of indication of where you are inside of this web application so I'll go ahead and CD into security and run the server pythonmanage.pi run server so I am now running the server and I'll now go ahead and go into my web application slash hello for example and so what I see here is requested path hello which is what I would expect it to be I can change it to something else like hi so here's requested path Hi here's hi slash two for example whatever page I visit it gives me a page that says requested path and then whatever path I happen to be visiting but watch what happens if I try and visit this URL instead I'm going to visit URL slash script alert hi and then end script so I run it and suddenly an alert shows up on my page that says hi and then press OK and it says all right requested path that alert was a JavaScript alert it was JavaScript code running on my web application but it was not code that was JavaScript code inside of my web application it was someone else who wrote based on the URL to run particular JavaScript on my particular page and so if someone linked to my web application and passed in this script tag as part of the URL someone who clicked on that link might have been taken to my web application but ultimately had JavaScript run that was created by someone else and that ultimately is potentially dangerous it leaves open the possibility that someone else could run JavaScript code on my page and it might not just be something like a script you might imagine someone not just displaying an alert but modifying something inside of the Dom changing the contents of the web page making API requests doing other types of tasks that you can do using JavaScript inside of a web browser that ultimately leave my page open to potential security vulnerabilities and so these are cases where it's important to be mindful of when you're designing these Pages if ever there's a possibility that someone could inject their own JavaScript into your page somehow you'll want to either detect that or Escape it in some way or take other precautions to make sure that this kind of crosssite scripting isn't going to be possible you might imagine that in a messaging application for example if you're messaging back and forth you don't want it to be the case that if you message someone else some JavaScript code that when they receive it that code actually ends up running as some JavaScript that runs on that particular page you want to be sure to escape that information so that they just see the text of the JavaScript code but the code isn't actually executed and this is a similar threat to that threat of SQL injection it all comes back to the idea of not wanting to allow someone else to be able to inject their own code into your program you don't want someone else to be able to inject SQL code into the queries you run on your database and you don't want someone to be able to inject JavaScript code into your web page because that leaves open potential security vulnerabilities as well one type of security vulnerability the Django is quite good at defending against is one that we've seen before but we'll explore in more detail how it might work and it's this idea of crosssite request forgery where you fake a request to a website when you didn't intend to actually make a request to that website so you might imagine that if your bank for example had a URL that allowed you to transfer money from one person to another person we've talked about this idea a little bit but imagine now how you could implement this if it really was just a URL that you could go to like slash transfer and say as get parameters who am I transferring money to and what is the amount that I'm transferring then someone else on some other website could in the body of their page just have a link where that link says click here and it links to your bank.com or whatever your bank is transferring money like to me in this amount and if some user unknowingly just clicked on that link not knowing where it would take them this website might be able to forge a request to the bank make it seem like the user had gone to the bank and tried to initiate some kind of transfer and ultimately try to transfer money and it doesn't even necessarily need to be in a link how else might you get some new request to happen inside of the web browser you might imagine though it might seem a bit strange to put this inside of an image image source the source of the image is this particular URL the bank's transfer page now that doesn't really make any sense the transfer page is not an image but it doesn't matter all an image tag is going to do is try to make a request to this Source URL to get that image and then try to display it in the user's web browser but the first part is what's important the fact that this Source ends up being requested by the web browser without the user having to click on or do anything they might try and request from your bank.com transfer this particular request which might initiate some sort of bank transfer without the user even realizing it and it's for that reason that we generally suggest that anytime you're creating a website but it's going to allow for the manipulation of some kind of state that allows for some change to happen something like transferring money you don't want that to be via a get request something you could just load in an image or a load by clicking on a link that takes you to another page you don't want that to happen because then it makes it very easy for someone else to fake a request to your page by just creating an image or a linking to somehow a website like transferring funds from one user to another so a solution to this as we've talked about is that generally we only want post requests to be able to manipulate something inside of the database to be able to actually initiate a transfer from one user to another user but even then this is not perfectly secure that you could still be tricked into submitting a post request imagine an adversarial website that had a form like this a form whose action was yourbank.com transfer and whose method was post and now here to input Fields whose type is hidden meaning you won't actually be able to see those input Fields when the user is looking at the page they'd only know about it if they inspected the source code of this particular HTML page here there's the hidden input whose name is two meaning the person I'd like to transfer money to here's the amount the value that I would like to transfer and all the user is going to see is a button that says click here they're not going to see either of the input Fields because they're hidden but if they do click the click here button well then suddenly they're going to be submitting a post request to the bank and initiating some transfer when they didn't intend to now maybe this seems like oh it's not a big deal because the user still needs to click a button and the user shouldn't be clicking on a button if they don't know what the button is going to do well for one it's probably reasonable to imagine that an adversary might embed this button inside of a page where it looks totally safe to be able to click on a button but moreover the user doesn't even need to click on it in order to submit the form we can just add a little bit of JavaScript you might imagine that an adversary could do something like this add an on load attribute to the body that says when the body of the page is done loading go to document.forms meaning all of the forms for this webpage get the first one and submit it submit the form and what that's going to do is even without the user doing anything even without the user clicking on the click here Button as soon as this page is loaded this form is going to submit submitting a post request to the bank and attempting to transfer funds from one user to another user and so this is what we might call a crosssite request forgery where some adversario website has forged a request to our website and ideally we wouldn't like for that to be able to happen so how did we guard against this well what Django allows us to do and a very common approach is to add a csrf token a crosssite request forgery token that is going to be regenerated for every session such that only if that token is present will the transfer be able to go through so on our website we can include the csrf token inside of this HTML form and as a result make sure that we're able to transfer money only when the csrf token is present but if some other website tries to forge a request they won't know what the csrf token should be because it changes for every session and therefore they won't be able to actually Forge a request from one user to another so all across the various different tools and Technologies we've been using python HTTP Django HTML in terms of creating these web applications using JavaScript and the apis we might be interacting with there are security considerations all throughout we've only touched on a couple of them here but just goes to show how it's important to be mindful if you think about the practice of web programming thinking about what you're going to add to your web applications and what features your web application supports to think about what the potential vulnerability is there are as well how someone might exploit your web application in order to do something with it that they probably shouldn't and as you take your web applications from applications that are just running on your own local computer to applications that are running in some web server that many people are starting to use these are the types of questions to start to be asking how can you make sure that your web application is scalable how can you make sure that your web application is secure so now that we've explored that a lot of web programming what comes next in this course we've explored a number of different tools and Technologies and languages but there are many other web Frameworks and ways you can build web applications as well we spent most of our time looking at the Django web framework written in Python but you can use other programming languages to build web applications as well express.js for example is a very popular JavaScript framework for building web applications Ruby on Rails is a popular serverside web framework but built using Ruby and there are many others as well and there are also clientside Frameworks used primarily with JavaScript to be able to build user interfaces we've seen a little bit of react to build Dynamic and interactive user interfaces other popular clientside Frameworks include angularjs and view JS and a number of others as well and then once you've built these web applications using any of these serverside Frameworks and clientside Frameworks then you might imagine wanting to take these applications and deploy them to the web and to do that there are a number of ways we can do this as well a number of different services including Amazon web services AWS Google cloud and Microsoft Azure they can be used in order to deploy these web applications Heroku is a service that uses AWS and tries to simplify the process of making it easier to deploy your web applications and if your web application is really just static it's just HTML and CSS and JavaScript well then you can use something like GitHub pages to be able to host a web application for free on github's own servers instead and there are many other ways you can imagine deploying web applications as well different services that you can use in order to take the web applications that you have been building or web applications you might build in the future and make them available on the internet for others to be able to use as well so as we look back on the various topics within web programming we've explored we've seen a lot of tools and Technologies we can use that we can leverage in order to build interesting web applications we started by taking a closer look at HTML and CSS diving into how we can use that to describe the structure of our page and then taking advantage of tools like SAS that allow us to generate CSS that allows for much more complex styling for our website that would have been much more difficult to do with just CSS alone as we started to build larger web applications we took a look at Git Version Control tools that we can use in order to make sure that we keep track of versions and changes we make to our code allowing multiple people to collaborate on a project simultaneously we then took a look at python looking at various different features that the language offered functions and conditions and Loops as we've seen in many other programming languages but also object oriented programming the ability to represent objects and methods and functions that operate on those particular objects which prove especially powerful in the context of dealing with data inside of our web applications Django was the example of a web framework written in Python that we use to very quickly be able to start up a web application that's able to listen for requests and make responses Django has a whole lot of features built in that really make it easy to get started with building a web application and in particular it makes it easy for writing web applications that deal with data so Django allows us the ability to build models that interact with SQL without us having to actually write any SQL code Django can generate the SQL for us just using these models and migrations then allow us to continually apply changes that we make to our database that as we add new tables add and modify existing fields on those tables Django can take care of all of that after that is the only recall we took our attention towards the second of the main programming languages in the course JavaScript which was has a lot of uses and is very very popular but we primarily used on the client side to be able to build interesting user interfaces using JavaScript to manipulate the Dom the structure of the page to change what it is to use our theism and also to add event handling so that when the user clicks on a button when the user hovers over something when the user interacts with the page in some sort of way our code is able to respond to it and we saw react a web framework that our clientside framework that uses JavaScript in order to allow us to create really interesting and interactive user interfaces with not all that much code at all and then finally in these last couple of lectures we've been looking at some best practices how we can design tests tests that test the server but also the client to make sure that our code is working appropriately and also some industry practices like continuous integration and continuous delivery that just help to make sure that as we make changes to our code we're able to deploy and deliver them rapidly and effectively and make sure that we're able to make incremental changes to our code base rather than need to wait on longer release Cycles and then finally today we've been talking about issues about scalability and security especially important as we begin to take our application and move them to the web we want to make sure that these applications are scalable that they're able to handle multiple different users and also to make sure that they're secure that we're not exposing ourselves to potential vulnerabilities like someone who might inject SQL or inject JavaScript code into our Pages or who might try to access some data that they're not supposed to access we want to make sure that when we go about designing these web applications we're able to do so in a scalable and ultimately in a secure way so hopefully you enjoyed this exploration into the world of web programming with python and JavaScript best of luck with the web programs that you yourself might build with the tools we've seen here today and also other tools that are inspired by or use similar tools and techniques and ideas as the things that we've ultimately talked about here a big thanks to the courses teaching staff and the production team for making this entire class possible I look forward to seeing the web applications that you might go on to create this was web programming with python and JavaScript this course from Harvard University picks up where cs50x leaves off diving more deeply into the design and implementation of web apps with python JavaScript and SQL using Frameworks like Django react and bootstrap Brian you will teach you topics such as database design scalability security and user experience you learn to write and use apis create interactive uis and Leverage and leverage cloud services like GitHub and Heroku