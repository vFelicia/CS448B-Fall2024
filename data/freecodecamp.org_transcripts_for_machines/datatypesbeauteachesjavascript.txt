data types there are seven data types in JavaScript and we are going to go over all of them a Boolean is just true or false for instance if we have our data equals true if data console.log boolean's rule else Bans are lame and if we run that boolean's rule but if we change that data to false and we run that booleans are lame now we down to n null is an assignment value that means no value uh null just means no value for instance if we have Varn equals null and we try to do some math with it console.log and now since um whenever you're doing math with something that's equal to null that's just going to be the same as zero so if we run that it's you can see over in the console on the side there it equals zero now undefined is kind of similar to null but not completely the same it means a variable has not been declared or it has been declared but it has not yet been assigned a value for instance let's um scroll down a little bit if we have our a and I'm not going to say that this variable equals anything it's just V A now I'm going to console.log a + 2 this is going to be a little different than the null if we run that it's going to see you see the letters n a n in the console log that means not a number if it's undefined it's not nothing it's not zero like n is but it just means not it's nothing it's not it's not nothing it's not a number so you can't actually add or do math with something that's undefined now let's go to the next one number uh this is pretty selfexplanatory just any numbers like you can put ver num equals 3.6 VAR equals 6.4 and then if we try to add these together I'm going to run that and you can see at the very bottom of the console you see the number 10 because 3.6 + 6.4 is 10 now I going to go to the next one string oh it get an example there like howdy anything that's a word so if we do um V name equals both my name and then we can do console.log hi my name is and with strings you can add together so I can put plus name and if I run that you can see in the bottom of the console hi my name is Bo now symbols are something that's new in um es6 this is a data type whose instance whose instances are unique and immutable so one thing different uh with strings if you have two strings that equal the same word they're the same word like bow and bow and if you check if they're equal it will say that they're equal symbols are a little different let me give you an example so if we have one symbol and we're going to equals Fu and I'm actually just going to copy this and put another one but we're going to call this symbol two now if we do console. log Sim 1 equal equal equal Sim 2 and if we see if they're equal let me just clear the log here and run that you can see at the very bottom it says false they're not equal however if we change one thing if we do if we convert this to a string first and if we run that we're going to get an error so what did I do wrong oh I need one more in parenthesis okay so you can see it says false at first and then true and just so you can see what happens when you convert these to a string um you can see at the very bottom now when you convert a symbol to a string it says the word symbol and then says what you call the symbol when you're creating it symbol Foo now the last thing we're going to talk about are objects um an object is just a collection of properties and a property is an association between a name or a key and a value let me give you an example we're going to create a new object called my car and we're going to assign something we're going to create the make to be Ford and we're to put my car. model which is going to equal Mustang if we just do console.log my car. make it's going to take this property um from from it it's going to give us the value so let's try that and as you can see it shows Ford in the console because that's what the make is the Ford thanks for watching my name is Bo k don't forget to subscribe and remember use your code for good