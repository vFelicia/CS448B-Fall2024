flexbox having family here i was also traveling a lot this week monday today was quite productive checking uh if i can use flexbox uh one of the sources that it's really worth recommending is can i use i always come back to this page when i want to check if you know the feature is already supported and there are always known issues mentioned uh and you see which versions are supported to which extent where there are some problems like partial support due to a large amount of bugs or only supporting a given syntax and what's great also about this page can i use dot com is that you also have resources suggested and here you can find a lot of useful names one of the links that i found here just by you know searching the page uh was this one which is the git repo about known flex packs um this is this one it's uh it's a git repository about uh flexbox issues and cross browsers uh workarounds for them another very useful resource engineering the page that i use very often the css districts and css tricks dot com and on this page there's a complete type of let's go it's getting a lot of images that can help you to get how it works you have also about prefixing flex buffs because you know because of this limited browser support still you have to use uh of the graphics here very often from the comment here in this page in css tricks you can learn a lot it's like a second second pack of information additional to the main article so living in spain you notice how various this land and this you know we're all there so you have the um juxtaposition of something that is really expensive with something that it's really cheap and with people who don't have money to live coding nowadays it can be learned for free that's why i love initiatives such as open source because everybody can use it it's for free so what you need to pay attention to and what you need to pay with is your your time in majority of other branches in order to learn something new you have to pay coding is a bit different so to learn coding or to learn design sure you can go to the school you can go to the university you can pay for the courses you can pay for bootcamps for tutorials and i also use partially these sources but the um tones there are tons of free materials so saying that you don't have money and you want to learn to code is not an excuse what you need to invest is your time and your willingness to learn and being consistent and you know coming back to code coming back to new tutorials looking for the sources reading a lot watching uh subscribing being you know inquisitive and being simply curious when you see a great blog post look what else they write when you bump into a great tutorial look what others you know serious they have on their youtube channel so simply start doing lack of money is not an excuse money helps but you don't have to have it to study you don't have to have extra money to pay for the courses sure you have to have the money to survive and to eat etc but in order to learn damage there are a lot of open source projects which which are for free and there are a lot of groups uh in code community that you can really use if you want to learn coding you can also go to the local meetups you can also visit local groups devoted to the given language you can visit various forums you can learn from youtube tutorials from blogs from medium articles when i started learning to code i discovered that a majority of paid resources have trials and before deciding on any paid course you know the servers you know if it's really worth but also if you don't have enough money to pay for it this tutorial that they give can also give you the basic knowledge that you need if you use these trials that are free from each service still you gain a lot of free material so learning to code you don't need to spend a fortune good day it's wednesday and my article about my first path that i took to le while learning to code has been just published it already has 150 upvotes and nine comments so it means that on average more than 10 people like this article per hour i will provide the link to this article below in the video description so if you are interested have a look there as i told you you can really learn for free recently i bumped into flexbox io uh on guitar so if you have eyes open there are really a lot a lot of you know free resources but they're really of a great quality you have to have just only your eyes opened and and look around what's possible and remember that google is your friend trying to build the first step with flexbox i will start with navigation this is the final version of my medication that i was working on textbooks it's like the example to have a bit of practice with flexbox navigation it's pretty responsive it changes according to the width of the viewport i've just implemented the pricing list with flexbox it's just the desktop right now but this price almost is built with black spots and with sass it's one of my first snippets of code in sas and because of being used to regular css your hand goes to semi colors and graphics in gopher you can do the compiled version so you can do uncompiled sas and compile css in order to compare your checking if everything is compiled correctly later especially if you try sass for the first time and i also used flexbox here for this pricing list it looks like that one more pen that i've implemented with using effects but from sas is this a single line booking form where you can choose a number of rooms date how many people will beat the room it's like you know simple code snippet uh super culture that may be used for booking their rooms um like conference rooms in a company or something similar i'm using sas here some simple wrapping media queries and also i'm using flexbox let's revise flexbox i got a box here and i will try to revise what i learned with it using this box imagine this is the container this is the div that's gotta display flex this is the div having the display flex we treat it as a parent this is flex row when you change it to flex column so when we go to direction column they will be squeezed this way by default they do not wrap by default the element do not the elements do not wrap so imagine we have more of the elements the simplest option is to say ra and these two extra elements then would be wrapped by default to the next line the default order is zero so whenever we change the order of an item so whenever for example this item number one we'll change the order to one and by default all of them right now have zero it will move here right now it's zero zero one so setting it to 1 we move it to the beginning it's pretty useful for um responsive layouts for example when we talk about having the the order different on mobile and different on desktop three elements and they will be justified center they will be simply in the center when we talk about justify content we can also go to flex start and flex and by flex start it means that all of the items will be moved to flex start it's flex direction row so flex started here another justify content is flex and as a result all of the items will go to flex and because this is a flex direction row and this is the end it's good to remember when you get lost where is the main axis so when it's a row is this way so it's a horizontal line and when it's the column when it comes to flex direction is from top to bottom have a look at the description of this video below because you will find there are a lot of useful links in order to learn and practice flexbox it's friday evening and this week this article was also a huge circle motivation for me thanks to christian it's also available right now in chinese you will find the version under this link i got a lot of feedback connected with the article that i wrote and being able to hear so many voices on um my path so far and what could be done differently and what's inspiring for them it was something that made my week this week i've also gathered 12 brownie points for helping other people on together and i got a currently 477 brownie points so i'm missing 23 uh to my 500 points challenge in order to start next level in free code camp one of the biggest problems that i met this week was nesting in flexbox because going into levels of nesting and sometimes can can get tricky and you have to be really careful with that next week i want to work more with flexbox and sas so i want to do some more ui elements we're using them and i want to also discover this grid system because flexbox uh as i read it's like pretty well for smaller components but not necessary for you know huge app layout and it seems to be pretty fun later to build uh the app just using flexbox and grid system and not ready framework because it's like another level for me keep on doing stay motivated and see you next week