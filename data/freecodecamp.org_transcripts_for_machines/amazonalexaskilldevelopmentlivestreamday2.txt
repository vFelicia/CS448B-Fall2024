hey welcome to day two of building an alexa skill the the live stream so for anybody that was here alexa's gonna start talking back to me here and let me shut her off uh for anybody that was on yesterday welcome back for anybody that's new uh welcome glad to have you i'm going to start today we're going to just jump right in i'm going to start with a recap quickly of what we did yesterday and then i'm going to get into uh the topics for today and we'll we'll start with a quick introduction to the alexa skills kit cli and then we will talk about the alexa skills kit sdk 2.0 a little bit and then we will jump into building our project which i've got some ideas on and i'm hoping to get some feedback from all of you on uh the the direction for it so this will hopefully be an opportunity to uh to work together to to build our skills so it's not completely scripted i didn't want this to just be a a live cast of an alexa development course i did one of those so if that's what you're looking for you can just check that out on free code camp but yesterday what we discussed is the the things that you'll need to start developing alexa skills and really it's two things you need two different accounts you need an amazon developer account which you can get a developer.amazon.com and you need an aw essay account and then we also talked yesterday about the uh the basics of how a skill works and uh uh covered that you know basically it's uh it's jason that's being passed back and forth between the alexa service and the skill service which is uh the back end that processes the requests and responds to what users are asking for and then we dove in a little bit into the developer portal and looked at setting up a basic skill and talked a little bit about uh aws lambda and how that works and then we we built a really super simple skill that was just returning jason and i kind of fumbled around on that which is a good leadin i suppose to our topic today which is using the the sdk it makes life a whole lot simpler and that's what we're going to talk about but as i um as i jump into it i have an idea that i wanted to put out there for everybody so um i'm thinking that maybe we uh for the example skill that we're going to be building maybe we we actually build a live skill and i um talked to the the guys at uh free code camp and and checked out the uh the alexa skill score store and didn't see a skill for uh free code camp so i thought maybe we could try to build a skill for free code camp but i would definitely need uh all of your help and uh it's a little bit risky because i'll be very much going off script but if um if you guys are up for it i will give it a try and we've got a few other people from my team here online that are in the uh the live chat that will be able to answer questions and stuff yeah i can i'll make the font bigger here for see that that question there let me see hopefully that's a little bit better we've got a couple of people online that can help out with um any questions so if you have questions just please go ahead and post those in the the live chat and i'll be looking at those as i'm going through this and then um karthik who is in the live chat also um karthik if you're on maybe you could just like post hi he is um he's available to uh to answer questions in the chat also um and ken uh and our peta i think they're all online so they can answer questions so please go ahead and ask any questions that you have as um as we're going and i'll um i'll pause from time to time to look at the the questions and try to answer them is as best that i can uh so let's um yeah let's get into it so uh today we are going to um so i got rid of everything from yesterday we just did an overview and we're gonna start fresh today and we're gonna start fresh using the uh the alexa skills kit cli and if you are i'm not gonna install that and everything in uh in this live cast but it's basically a command line tool that you can use to build skill projects and deploy skill projects and if you uh if you google ask cli there is a um a quick start guide and there's a couple tutorials that i did a while back actually down here too and if uh that if you're just getting the cli installed and configured that you can follow um and if you go to the the dabble lab youtube channel there is i think these ones that pop up these are kind of old so you go to youtube.com lab and there's some newer tutorials or skilltemplates.com actually has a tutorial also uh for getting the the uh alexa skills kit cli installed in the prerequisites um what you'll need is uh you'll need to have nodejs installed uh you can install this on it is just an npm package so you can install it on windows linux or mac i'm working on a mac for all these but the commands all work the same and um you will after you've installed it you'll configure it you'll initialize it to work with your accounts that we we looked at setting up yesterday so your aws account and your um amazon developer account and it's pretty straightforward the uh the install process um so again i'm not gonna go through it but if you uh have any issues you can look at the tutorials that are on the dab lab channel and leave any comments there and we can help you through it if you run into anything okay yeah so a tharva also from dabble lab is on that's great thanks for having on darva um okay the the fonts better uh okay awesome all right well let's uh let's get into it so um like i said i'm gonna try to build a skill for uh free code camp and i want to just so this is going to be you know a real real live demo of how the process works but what we generally start with is is going through the the high level what we want the skill to do so i'm going to do that with everybody and um we'll start with free code camp that's what we're going to call the skill for right now the name and i usually start by defining how the skill will be launched so launch phrases and in the the alexa world when you're launching a skill we talked yesterday about the invocation names so we're going to use for our example school we're going to use free code camp as the invocation name so we would say minimally something like alexa open free code camp but we also might provide a directive or an utterance something like alexa ask free code camp camp um what articles if i could type articles are published on medium and that was one of the things that they said they'd like to see is a way for users to ask alexa about articles that are published on the the free code camp medium channel and uh maybe we'll also have something like alexa um at ask free code camp camp i don't know any uh any thoughts on what we can do um what would you uh i need some uh need some feedback from you guys here what do you think we should be uh we should be doing how should this skill work everybody is part of the uh the the project team now so let's uh let's put some ideas out there post them in the uh in the chat let's hear what you got come on something uh recode camp uh ask free code camp um what live streams are scheduled i don't know if we can do that but we'll put it in here ah that's a good one karthik alexa ask free code cam what programming languages are popular what else anything else uh what's in your curriculum uh what what are the last few videos published that's a good one we can get that from the youtube ati api i think okay um we can be out we can be adding to this i'm gonna leave it at that for right now but if anybody thinks of anything else let's put it on here minimally it'll just go on our wish list for future functionality but um we'll uh we'll start with this so this is when we're planning a project generally where it starts we just think about how the user might interact with the the skill from the very beginning in the very beginning is launching the skill and so we just brainstormed some ideas like this and then um the next thing we do is we do a uh like a really simple interaction example and the way that we write it out is something like this we would say like the user would say let's see we'll start with the the simplest one so alex open free code camp and then alexa is going to respond with um something like hello yeah we do need a multiturn dialogue too so uh somebody that was uh your idea then kinda i'm sure i'm killing your name but um come up with a an idea for a multiturn dialogue i think uh i think you're right we want to try to get that in here so what do you got come up with something that uh that we can use go out to freecodecamp.org and uh poke through the site if you got a second and uh come up with something that you think we uh can use as an example again this is uh we're all working together on this this project so um alexa's gonna respond with uh hello um welcome to the free code camp skill and um i can tell you about articles about recent medium particles or scheduled live streams and i'm making this up as i go so if anybody has a better uh a better idea then please post it and we'll uh we'll update this and we can change it as we go too so and then the uh we'll ask a question we'll prompt the user um what would you like something like this and then the user will say um what's been posted on medium and then alexa will say something like here are the most recent 5 posts and we don't want to have a list of like everything that's been posted obviously because the user would be just sitting there for hours and maybe if we wanted to get fancy we could let the user say tell me the the next five posts or something like that but for right now we'll keep it simple and um and then alexa will like play the posts here so something like that and i'm gonna just start with this here because this is probably going to um get us to where i was hoping to get to today for day two so today we did the recap and the um we're going to do the intro to the ask cli while we're actually building some functionality and the same with the the ask sdk2 so uh the the other thing that i wanted to cover today is getting data from an external api so that will let us do that i think with that example and we're going to use the um i found a npm module that will let us call out to median so we'll uh i haven't used it before but i think that will um that will cover us for today so uh the ask cli i think i touched on this really quickly yesterday i did this example skill i'm gonna just delete this start all over and create so in here the ask cli like i mentioned is a command line tool and it lets you create skill projects which are local projects and in case anybody is not familiar with the ide that i'm using right now i mentioned this yesterday but for anybody that's uh that's just coming on this is visual studio code it's an open source editor similar to like um atom which is another one so you can get this for free for windows linux or mac and that's what i'm using so it's got an integrated terminal so i'm running the command line ask new here and then the alexa skills kit cli prompts me for a name and we're going to call this free code camp camp alexa skill and when i do that um this the cli creates a folder and i'm going to walk through what's in the folder right now and just kind of give you a high level tour of the the stuff that we're going to be starting with so i mentioned yesterday that this is going to be sort of boilerplate code that you can start working with and what's what the cli is doing is it's actually going out to a github repository and pulling down sample code so in addition to using um the basic basic template that is included you can also do something like this before i go in there you can go like ask new template and when you do that the cli will prompt you or provide you with a list of templates that amazon provides and i would um if you're getting into this i would uh definitely recommend like downloading these templates and taking a look at it's a really great way to get familiar with uh the code and most of them are updated now with the i think they're all updated actually now with the latest uh sdk so the uh the code is pretty current uh we're gonna start from scratch and uh just use the the basic one but the other option you can scroll down there's there's a bunch of templates in here so lots of lots of stuff to dig into uh to uh to get familiar with some some code examples we also have uh i'll i'll pick like um how to just to show you what happens so there's the howto and then um we've also set up ask new template you can also create your own templates and we've got some that we use at dabolab at skill templates slash templates dot json and uh these these mostly go with tutorials that um i've done on youtube uh so they're not all updated with the latest sdk but there is a basic starter and a api starter there that are updated so i'll start with like the api starter just so you can see that so now i've just gone through creating three different skill templates so um i did that just to walk through uh the getting the uh the ask cli to give you a starting point so three uh three different options the um the default one here is what we're going to be working with but i'll reference code in these ones which is part of the the benefit of having the templates is you can go back and look at code patterns that you used previously and copy and paste those to save your uh save you from having to to type everything out but in the in each one of the skill project folders i'm going to move into the folder there's there's a dot ask folder a lambda folder a models folder and then a skill.json file and in the ask folder is configuration information for the ask cli and when you start with a brand new template the the main thing is the uri here the the value of the uri here for the endpoint this is going to define the name of your lambda function so when you publish the skill it is going to create the lambda function for you out in the aws amazon web services and and this is where you can change the name if you wanted it starts with a default name that works fine the lambda folder is going to contain a subfolder called custom by default and then within the custom folder is actually the source code for your lambda function and you'll have your node modules in there the sdk automatically includes the um the the cli rather automatically includes the uh alexa skills kit sdk and the the sdk just makes creating the responses more than anything else makes creating the responses and consuming the requests from alexa a lot easier so rather than you having to write the code endtoend to to do that yourself the skills kit is going to handle most of the heavy lifting for you the sdk is and this uh this index file is uh by default where the where the lambda function code is going to to start i got a question yesterday about whether or not most of the examples you'll see all of the code is in the functions and everything are just in one file this index file doesn't need to be like that and the answer is no you can use node modules and you can create custom modules and you can do you know all of the stuff that you could do uh in in node if if you're familiar with that if uh if not or if you want to keep it simple you can also just put it all in in one file i think probably for our example we'll break it up a little bit just to show some examples of using node modules uh so um we'll we'll get we'll go a little bit beyond just keeping it super simple but in here um what you what you really want to take note of is uh these uh functions here or actually these these objects with uh functions and specifically they can't handle and handle so um this is new to the 2.0 sdk but the uh the can handle function here it's going to be so the the json the request input gets passed in here and it's going to look at the request to determine what the request type is and there's um an intent request which is when i talked yesterday about the interaction model i said that the intense kind of map to functionality that the skill is going to provide the intent that we define in the model if it's a user defined or a custom intent or actually if it's a builtin intent there's going to be a name for the intent and so we first look to see if it is an intent request versus like a a request for just launching the skill for the first time which is here's an example that a launch request so in this code here when the the user says alexa open whatever the skill name is in this case here the response is going to be welcome to the alexa skills kit you can say hello and when the user says hello which is a segue into the models which i'll get to in a second the skill service this one anyway says uh hello world back so it's a really simple starting point and handle some of the required intents like when a user says stop or cancel and so we'll use this as is our starting point also the model when we yesterday when we went through and we looked at setting up the interaction model through the developer council we talked about the the model being just json this is that model also so we can define all of that in here and what you'll see today is that we'll be able to do everything from our local ide without ever having to go into uh the the web browser and log into developer.amazon.com i will do that i'll log in just to show you the the updates but when you're working on your um your your development flow you probably won't be logging into the developer council all that much the cli doesn't just let you deploy the the skills and and update the skills but you can also test from the cli too which we'll get into probably not today but uh maybe tomorrow or uh the following day thursday and then the last thing on our tour through the skill project is the uh the the manifest file and the manifest file is um is gonna define settings and mostly configuration information that you would find in the developer console so uh when you log in there and you create for example like a name for the skill that is this here and i'm going to change this right now we're going to just call this skill free code camp and then we'll want a description for the skill and anybody who wants to join in on this i'll push this out to github somewhere too so if anybody wants to help and uh collaborate but if somebody wants to take that as an action item and come up with like a cool description for this anybody volunteering yeah i'll break it into some small files with multiuh turn dialogues did you come up with the dialogue did you come up with the example just looking at uh it comments what's the difference between angular and react oh probably outside the scope of this uh this stream here we're not going to be using angular or react with this one okay um so so if somebody could take either you know somebody on the the dab a lab team or preferably somebody else that is uh is out uh watching this that wants to uh wants to get involved and come up with a description for us we're gonna also in the model we're gonna change the invocation name and the invocation name remember from yesterday is uh the name that the user is going to use to start the skill up invoke it and we're going to call this free free code cam so at this point um all i changed was just the name and the invocation name but let's um let's go ahead and deploy it and to deploy the skill you need to do that you know what i'm also going to change this uh actually i'm going to leave that that's fine um so you need to be in the folder in the project folder to run this next command so one of the questions there are the issues that i see on the in the tutorials on youtube is uh if you try to run the command actually let me do that so you can see this so like right now i'm i'm just in let's go here so now i'm just in the uh the root folder called uh free code camp live stream and if i try to run this command here i'm gonna get an error can't find skill.json and that's because you've got to run that command from the project folder that you're working in so if i did oops okay i've alexa skill so um yeah so if i did this now i can go ask deploy and when i do that now the ask cli is pushing the skill out to the developer council for me and um it will once that's done it will start building the interaction model and then it will publish the um the lambda function for us also so while that's happening let's go over here and take a look so i mentioned earlier that i cleared everything out from yesterday so now it's probably already deployed this so i'm refreshing and there this now is what the skills kit cli deployed for us from the command line what's a multiturn dialogue a multiturn dialogue um is a dialogue that is going to request more information so there's a back and forth something like uh if a user if you had an intent for example where a user was going to order a pizza you might need to know what size pizza they want what toppings they want and so the it's going to be multiturn means you're going to get a response from alexa that's going to prompt you for response back and then maybe a response back again so rather than it just being uh something simple like what are the top median posts it might be something like um you know what maybe the alexa would ask what programming language uh are you interested in and the user might say i don't know what one would you suggest and the skill might say well how many uh um how many years of experience do you have in tech i don't know something like that but it would go back and forth before the intent was fulfilled and the the final response was um was sent back to the user so hopefully that makes sense um all right so the uh the so we've got our our base skill here now let's um let's go in and test it so i mentioned yesterday that if you set up your alexa developer account using the same email that you use if you've got an echo then you can you can test using your echo and so i've got let me show you this okay so we're going to test this now alexa open free code camp welcome to the alexa skills kit you can say hello okay so you see on the screen there's also a response here because i'm using an echo show actually that will if you're using an echo that doesn't have a screen that what's showing on the screen will also pop up in the the companion app so if you've got like an ios or an android device with an echo you can use uh cards and responses to post text stuff back you can also actually i know a lot of people use this but if you all right hello um you can also go to alexa.amazon.com and log in with your account to see this as well let's see sorry showing the wrong screen while i was doing that so you can log into alexa.amazon.com as well and you can see um we're getting our card response back there so um yeah so what what's going on here like i mentioned earlier is in this this default skill we're getting the the launch request which is coming in here and it's saying welcome to the alexa skills kit you can say hello we're going to change this to our oops wait a second we have that in here don't we dialogue we're going to change this to this here and and we're going to change the and change the the reprompt here and i think we'll just do what will we say so the repromp happens if the user doesn't respond after eight seconds so that right now uh this change here when the user launches the skill it'll say hello welcome to the free code camp skill i can tell you about uh recent media articles or scheduled live streams what would you like and if the user doesn't respond we'll just say um would what would you like all right and the uh this is the card that showed up on the screen and we'll just call this free code camp right now and um so this this hello world intent handler so this is so right now if we look at what we've got and we break that into what the user wants we've got um two different possible intents right so we've got uh if you look in here the user could either want recent median articles or they could want uh scheduled live streams right so the intent is going to map to the functionality in most cases that the skill is going to provide does that make sense yeah the toys toys are mine just i'm gonna take one uh one second here to read through some of the uh the the questions and comments and then i'm going to talk about how you would create these additional intents but let me just make sure we're covered up to this point yeah i think that multiturn example works we could use something like that try to um if you if you can uh try to uh try to turn that into something that would make sense for the um the free code camp skill so i don't just want to if if we can avoid it i don't just want to do like a a hello world skill i'd love for the next few days to end up with something productive coming out of it other than just having a chance to uh to work through some of these examples together but i've got tutorials where you can go through that i'd love to work with everybody to actually create a live skill i think that would be fun so if you've got um if you've got some things that you want to see if you can somehow come up with an example where it would work for the free code camp skill that would be ideal that would be great so i am going to get back to it here because we are about 40 40 minutes in and i want to try to make up get as far as we can i was hoping to get to actually making a request to a remote uh api today so that that's my goal let's see if we can do it um so now uh i'm gonna focus on just this this first intent here which is the um we'll call it like the uh median intent so when somebody is going to request what articles recent articles uh or we'll call it the recent articles intent so right now we've got this hello world handler and um i'm gonna just i'll just copy this show you and paste example here and i'm going to call this one recent called the recent articles intent and so here what i what i need to do is i need to look for the in the json what the intent name is so if you recall from yesterday when we're testing i'm going to go in here just to recap this because i think it's important for understanding what's happening in the code so when we test here and so this is the request that the alexa service sent to our skill service and if you look at the json you'll see that in the json there is a uh request type and this is session ended request and so this is a launch request you know because the session ended from previously and that's why we're getting this here if we want to uh to to map this to something that the user says we need to update our model so that the alexa service knows that the user is asking for a different intent and that's what we're going to do right now so now we have our i'm going to call our new intent um i'm going to call this a handler actually and we'll just call our intent recent articles intent and so that's what we're going to name it and we'll stub it out for right now and and here in the card i'll just have the title say articles for right now okay so now what we need to do is we need to map what the user says to this intent and the way that we're going to do that is in our model and so in our model here we're going to you can see this hello world intent we're going to create a new intent and we're going to call it are we what did we just call this my memory is going back like two seconds uh recent articles so the recent articles intent and then we need some samples of what a user might say that would allow us to identify that they want the the recent article's intent and we can look at our dialogue over here to see um i can tell you about media articles um so maybe they say what's been posted on medium start with the one that we used for our example uh and then we want we want to provide a few examples so the the um the machine learning engine that is underpinning alexa is going to learn from these examples so that you don't have to come up with like every possible thing that a user might say but you need to provide enough examples so that the the alexa service can infer when a user says something that's not provided explicitly in the example so maybe uh what's been posted on medium we'll say any new medium posts and i don't know um just how about just medium posts and then of course we'll test it to make sure this works but that is going to i think do it for the model let me just go back here to make sure we've got everything in here oh one other thing that i didn't do is you've got to register the um the intent handler also so down here this ad request handlers you've got to for the sdk you've got to include the well that's not the one new article not a new article oh my gosh what did i just call that recent articles all right okay so now i think we have everything that we need let's um let's give it a try so now we're gonna ask deploy again and if uh if i haven't missed anything we should be able to uh to go test this out what are we doing on time 146. not sure if we'll get to pulling it from median actually i think we will still got 15 minutes that's plenty of time okay you see here this response back you can actually test from the uh the cli also uh i'm not going to do that right now because i want to spend a little bit of time in that time on that later but let's just try try with alexa here so let's see what happens alexa open free code camp hello welcome to the free code camp skill i can tell you about recent medium articles or scheduled live streams what would like media articles witnesses don't i'll read back recent articles okay so that seems to have worked um i think i had a typo in the dialogue i heard which uh it's not a big deal but i'll fix it hello welcome to the free code camp skill i can tell you about recent media articles probably probably need to come there or schedule live streams what would you like all right um okay so now uh it's it's doing what it's supposed to do actually let me show you one more thing alexa open free code camp hello welcome to the free code camp skill i can tell you about recent medium articles or scheduled live streams what would like live streams when this is done i'll read back recent articles okay so um what's happening right now is i don't have enough uh examples to um where alexa knows what to do with that so that isn't what we want right we don't want when somebody says live streams we don't want alexa to just uh dump them to whatever seems to make sense based on the examples so what we would want to do is we would want to create another handler for live streams and then also update our model which actually we're gonna do that right now i'm gonna just change this okay so now we've got this and remember we've got to register it so i'm going to get rid of the hello world and uh let's see so i'm going through the exact same steps here that we just went through and stubbing out um and we'll stub this out too okay and what else do i need to do anybody know anybody in commons we need to update our model uh let's see i'm just going to change this to recent articles intent and i'll say like articles oh wait not uh streams live streams live streams tell me the scheduled live streams and i think i messed something up in here live streams intent handler this should be live streams so this will be for live streams live streams okay let's um let's test this out so let me just double check i think this is all good so again we're going to deploy and while this is deploying let's um let's take a look at how we're going to try to get the median feed in here so um i'm gonna turn off okay so uh i'm going to i uh if you go to median okay i see okay sorry i forgot to switch screens there i think that's what karthik is trying to let me uh let me know okay um so uh let's take a look at um the median so on medium yeah i did forget to switch back sorry about that guys um my brain is challenged with like one operation at a time so bear with me uh let's see uh so i think it's free code camp right camp.median well yeah medium.free codecamp okay uh so i was um i was looking through so there is a a an api for or an sdk for medium and but it requires authentication which i didn't have for free code camp so what i am gonna do to make this work is there is another node module that i found that pulls the rss feed and then converts it to a adjacent feed and i tested it like five minutes before this live stream so let me show you my test and then we're going to incorporate this into here we've got six minutes to do it right so this is get medium post this is the this is the example that i did earlier let me show you what uh what's gonna happen so um in the wrong folder here okay so what um what this is doing is returning back a a list of the latest posts and we're going to use that to try to read back the um read back the titles of the post and there's there's more work we're going to need to do tomorrow because this is probably too many to just uh read back to the user but we'll figure that out tomorrow for right now let's just let's go back in here and see what we would do to change that or to to wire this up rather so in here the first thing we need is to include the medium jason feed and let's save that oops forgot install okay so i'm installing that node module here and then i'm going to just take this stuff here and go into my skill and um i am going to use let's see where is our articles handler here so i'm going to use a a feature of um javascript a newer feature so um lambda supports javascript 8.10 i think is the latest one and so i can use async and await and um uh the the details about that there's plenty of courses on free code camp that can get into that more detail so i'm not going to go in that here right now just because we got just a few minutes but i'm going to do like async and something like this we'll try uh if i run out of time here let's see and then here i'm going to set this to just one article for right now see if i can do that i'll just do the first one for right now and i think it's the title and if i've messed something up then i'm gonna just right now say okay so here's um here's what's happening i think if i haven't if i haven't missed anything now what should happen is we should go out and fetch the feed of the latest articles and then um we're going to take the most recent i don't need this we're going to take the um the the first item in that feed and grab the title and write that to our speech text so this this should if it works it should write back the um or it should play speak back rather the um the title of the very first article so let's let's uh let's give it a try so ask actually let me get over here ask deploy and then there's also switches that you can use and there's one uh t so i'm what i'm going to do for this is i'm just deploying the lambda function so dash t is for target lambda and this will deploy a lot faster i haven't changed the interaction model or anything of course that was the error that i said comes up all the time and i just did it okay okay so now if the demo gods or live stream coding gods are with us this will work um alexa open free code camp hello welcome to the free code camp skill i can tell you about recent medium articles or scheduled live streams what would like recent media articles sorry i can't understand the command please say again media articles sorry i can't understand the command please say again okay we're gonna finish this up tomorrow alexa stop so we're gonna we're gonna call it a day there i know i didn't get a chance to look at all of the questions but we'll be picking up from here tomorrow so hopefully um i will see all of you back if you have any ideas between today and tomorrow on what we can do for this uh free code camp skill if you um if you provide some good ideas we'll make sure that you get credit for your ideas and uh make you part of the uh the the repo of the github repo so i'm looking for contribution i'd really like to see this actually get used and deployed but um needs to be more than a demo to do that so any help would be appreciated so that's it for today guys i didn't quite get to uh to get the feed working but i will pick that up tomorrow at 1 0 1 p.m eastern so same time and we'll continue on from there so again i hope to see everybody back i'm going to wrap it up for now thanks so much for uh for attending and hope to see you back tomorrow you