hey everybody welcome to live coding with jesse i'm jesse and today we're going to keep working on our react native web math game uh before i get started with code i'm gonna go to live chat just say hi to everybody see hey um let's see cool just a lot of hellos no questions yet so that's that's cool uh if you haven't joined in before uh this is how it goes i'll set a timer for 25 minutes i'll do some coding and then after that is up i'll go to the live chat and answer some questions and then i'll just keep going back and forth with uh with the timer and then answering questions today it's going to be a little bit shorter than normal because i have a meeting scheduled uh 59 minutes so uh gotta be finished i have everything set up for the meeting right next to me on another laptop so we can go right up to that time uh but i can't go over so let's get started i'm gonna set my timer this is just a pomodoro timer and just want to let everybody know we do have a github repo for this project so if you want to check out the code it's there um i update it at the end of every stream i'm going to paste that into live chat it's also available in the description if you're wondering why we're using react native web or exactly what this project is about you can check out some of the previous streams so this is the fifth stream uh in the series okay i'm gonna start the app using running yarn start alright so right now uh basically we have an app and this is the the hero character is this uh square here and these are the enemies or the the red squares so you get it right a red square disappears if you get all the red squares to disappear you win uh if you get it wrong then the red squares keep appearing and right now it's set up to keep appearing until you hit six and then it it stops at six okay so right now we just have addition uh so what i'd like to add today is subtraction option so that the user could go onto subtraction and select whether or not they want addition or subtraction or maybe even a mix so let's see if if we can get that incorporated uh today probably what i'll do first is just add it in i'm not gonna worry about the ui element to select whether or not you which game mode you want let's just get the game working first and if we have time we can add in the uh the toggle or the selector okay so here's what i have so far i'm using visual studio code i'm going to try to get rid of as much as i can to give us room for for the actual code right now we're doing our our problem where is it oh there it is uh so we're checking if something is correct right here in our our check answer and we're using the the plus sign right so in order to add this other game let's see all right here's what i'm thinking right now we could do a switch statement and inside the switch statement we set the value of what correct is and we just change the um the the operator right the i guess that's what this would be called the math operator so from addition to subtraction and later on we can add multiplication and division um let's go with that for now uh maybe i'll have a better idea at some point but i i think that should work okay and i'm a big fan of the switch statement i've always liked it so um yeah the only other option i can think of is is actually making this part a variable the um the operator but i don't know if we can do that yeah i don't think that'll that will work so every time i do a switch statement i always do the same thing i go to mdn and i copy and paste their switch statement example because i don't use them often enough to memorize the syntax so javascript switch and mdn is one of the first links that comes up i just copy this and paste it here and then we can change it so let's pass in yeah when we do check answer let's let's pass in operator okay and we'll pass in operator into the switch statement so we'll have our our cases here would be if the operator is addition or subtraction and while we're at it let's just add multiplication okay and um i guess we could also add another case for division we're not going to actually create any of the logic for that today i don't think so but we'll have it there and then in here instead of a console log we're going to add this so let's say we're just going to define correct up there and then down here we'll actually do the set the value right so okay so for addition right everything's the same for subtraction we're going to copy and paste that and then we're just going to change the plus sign to the minus sign for multiplication and subtraction i guess or multiplication and division i guess we could just do this like while we're at it while we're in here doing this we may as well just put these in so we'll have multiplication and division okay and then we will have a default um which this will if if something gets passed in that is not covered in any of these cases it'll just go to the default and for now i'll just say um default i'll just say not an option this will just log to the console not really worried about what it says okay so now we can get rid of this so what should happen what i hope will happen is uh when we call check answer now we will pass in whether we want it to be addition subtraction multiplication or division uh and then based on that we will check to see what it the correct answer is sorry i didn't have any caffeine yet today so i was hoping i would get some automatic styling here but i'm not getting it so i'm gonna have to do a little this formatting myself uh that that looks terrible um i guess i don't have my linting set up correctly yet uh for um for this computer uh so maybe that's why either that or i have some sort of syntax error i guess we'll find out all right everything else should remain the same the only other thing that we want to change here is the display right so we are displaying the the math problem uh where do we have this should be here right so we definitely don't want to display that let me think how am i gonna do this all right so this is just going to be a string that's going to have the uh the operator okay um i guess we could say operator and then by default we'll have addition and then down here depending on what gets passed in we could set the state to a different operator so let's say this dot set state operator and you could say plus here we'll say let's just keep putting these in here cover all of our cases um so our operator here is subtraction well multiplication and division um yeah these these operators might be a little bit different than what children are used to seeing like in school they would probably see like an x instead of this and maybe like an actual division sign i'm going to leave it like this for now and later on we could come back and maybe change that out after i maybe test it out with with my kids and see if they they understand what's happening and then down here we can change this right so that now it will have this states operator all right so let's save that and just see if we have any errors all right hey no errors that i can see we'll do we'll inspect the page here and go to wow this is so zoomed in um let me zoom out a bit i want you all to be able to see it but i think that was a bit too big each child in a list should have a unique key prop okay so we don't have a unique key prop in one of our lists that's that's fine for now it's probably where we're adding these in all right so that works uh let's just verify that our um answer checker still works so four plus six should be ten not an option oh you know what we forgot to pass in when we call answer checker so where am i doing that i think i'm calling it maybe from down here yep this dot check answer let's just say we're gonna pass in edition actually let's let's make this a let's pass in this state dot um mode let's have this state mode and then mode for now is edition okay all right let's see if that works not an option did i not pass it in all right i see a lot of stuff in the chat so hang in there um we've got about 10 more minutes and then i'll go over to the chat let me check reacts quickly see what the value of the state is note edition um okay so it does say edition but what about all right let's put in a break point so i want to see what is coming in here is the operator why is it i put the breakpoint there there we go okay undefined oh i wonder if maybe i need to put this in all right let's see all right no that's not gonna work that's not it um what am i doing wrong here this state mode is it i think that i don't have access to the right this here is that my problem let's see okay i'm not sure if anybody's said anything about this in the chat so um let's see let's do all right if we do this and we can call this check answer this dot states dot mode i know that i have access to state here so i can call handle submit all right let's see if that works john hanson says you know how much easier this would be with react hooks actually you know what the um the react native update that has react uh hooks in it came out on like tuesday i think so we probably could use hooks uh i'll just need to update the version of react that we're using all right so maybe i'll i'll try to do that before the next stream all right but let's let's get well i guess we keep our break point just to make sure it's working okay all right doesn't really matter operator okay edition okay two plus nine let's unpause that hmm uh oh it's still not working i think maybe the problem was not what i thought it was hmm okay so we saw that operator was edition am i spelling edition the same way like let's let's check the basics right all right so it should be passing in the string edition let's find an add it oh i do have i have a typo ah typo and i think like everything that i just did was unnecessary it's funny how you can look at that and not realize that you had a typo all right yeah that works okay wow okay so that works now if if we change it for right now let's change it manually from addition to subtraction okay and we'll manually change this for now and now let's see we have subtraction so let's see if it works yeah it works awesome cool now addition that is pretty simple to deal with when we get into some of these other modes um especially for like the very basic level of small children or just learning math we might want to think about putting in some some rules into our logic that'll prevent things like the the last problem i think that popped up on the screen had it zero minus something right small children aren't going to know about negative numbers okay so that's that shouldn't be presented to them so we may want to have some sort of check uh you know when we generate these numbers that the result isn't a negative number or then when we go to division we might want to check to see like we only want um whole numbers all right we don't want decimal numbers so we'll have to keep that in mind i'm not going to go into that on today's stream but that's definitely going to be something that i think will need to be in place otherwise you know the game will be just way too hard uh for the target audience which is you know children that are just starting out you know learning math all right i got about a minute left on the timer uh but i'm gonna go ahead and just take the break now and go to the live chat and start answering some questions all right so i'm scrolling all the way to the top and just go as quickly as i can down through i'll probably skip a lot of the comments and just get to the questions since i'm running on a tight schedule today milano asked if i could fix nightbot um i have no idea how nightbot works so i don't know excuse me um stark asks about stark's music asks about a super chat option uh we don't do super chat uh as far as i know on the free kill camps channel so it's not it wouldn't really be up to me anyway um i am i am just one among many many volunteers uh for free code camp see okay daniel did confirm that you can't make operators variables daniel's also excited about switch statement it's awesome uh razvah says have you used adonis js for uh back end api i have not i have not i have no experience with adonis so um what maybe uh if anybody has any info about adonis and what we what's good about it honest why would i want to use adonis uh let me know all right john hanson has a javascript question is it better to define a variable global scoped or within an argument if there's a callback it calls another function do you need to pass that variable along with it um yeah i would say uh in general do not globally scope a variable unless you absolutely have to so the default should be not to globally scope things you want local scope um and if it has a callback whoa i'm sorry i'm yawning so much out of um yeah do you need to pass it with a callback i don't know i mean i'm thinking if like when you chain things with dot then you you have to pass things but now i like i i don't know if if we had a callback i think you would but i'm not 100 sure are like block scoped variables accessible to a callback function i guess that's the question and i'm not 100 sure john hanson says react is often thought of as an app or components each containing their own functions global or local scope is often my question okay yeah yeah in the in the context of react um i would say yeah like if um try to keep still try to keep everything local if you can but if it needs to be accessible from different components then you know then global is uh a way i guess to to go with that let's see um okay there was a question but it was actually for somebody else in the chat so i'm gonna skip over that uh let's see um so there's a question from jagon uh what is my first step to becoming a pen tester um i guess start learning how to do it and then do the testing on sites or or systems that you have permission to test on so uh pen test is uh penetration testing so it's like um almost like like hacking when you have permission to hack a company right uh so you're testing to see how hard it would be for or how easy it would be for hackers to get into their system you know basically so yeah i don't know a lot of the details about how to become a penetration tester but just in general i'd say like you know you would want to start learning about it and working with it there may be special certifications that you would get for that that i i don't know about so i would check into that jacob says i want to make a fortune doing bug bounties okay if that's your goal then you probably don't need to be certified just learn how to do it and um start trying to find bugs all right almost to the bottom of the chat i'm just going to go ahead and finish up with whatever questions are in here before we start up again okay there's actually no more questions it was just comments and uh replies to previous questions so if you're interested in the replies and everything you can certainly check out the live chat uh in the right now or in the recording um to save time i'm not gonna read them off all right cool let's i'm not going to set another pomodoro timer since i'm going to have to finish up probably before this timer will go off anyway but now that we have this and the ability to change our modes in here uh let's try to create some sort of um ui element that will allow a user to change the modes so remember eventually we're probably gonna have at least four different options addition subtraction multiplication division so we could have i mean we could do like uh an input let's let's see what react native gives us in terms of inputs there we go here's our components a picker let's see what maybe this would be the best thing yeah let's try that let's try this see how it looks so i find it helpful sometimes when i want to add something in react native i start thinking like how am i going to build this out without realizing that react native already comes with components that are like pre premade uh so it's good to try to go with the premade ones especially if you want to create these apps for different platforms uh because they were already made with with that in mind whereas if you were to try to build your own it may not work like you think it would work um like me coming from a web development background i would tend towards like hey i'm just going to build it like i would for the web but that might not work uh with android or ios or whatever else you're you're going to build for okay okay so this does render ios and android that's good because i see there's another one called picker ios but i think this is the way to go and it'll it should work for both all right so let's put this in here for now i'm not going to worry about where it goes i'm just going to put it in there uh we actually do have to import picker right so we can input that from react native picker and let's just see how it looks first cool yeah this is actually perfect i mean it's not the best looking thing ever but um it does what we want it to do so let's just use this as the basis and we'll just see if we can toggle between the addition and subtraction all right so just based on what we have here let's see so we have an on value change okay and we can pass in the item value and the item index okay so let's give this a label of addition yeah i spelled it wrong again addition okay and let's see subtraction you know what let's i want to make this even more clear for children what it is so we're going to we're going to put in the little symbols here right um subtraction okay so now we're passing we can set state to yeah actually so we can let's set mode to be the item value and hmm all right so this works for item value and then are we setting okay good so we're we're setting what this is gonna be here all right i don't know if this is put it to the update um we're gonna have a problem let me let me just do it and that way everybody will see the problem if you don't already see it but uh let's save it all right so right now we have addition and subtraction so let's check our state right now and just see what happens um i need to all right okay you should be able to see it now all right so here's our state our mode of subtraction now our mode is addition all right but the problem is right now like it doesn't change this right so um would it so we need to make sure that the operator also changes so let's go back here and say there we go there it is okay um i really want to be able to pass in like another value let's go back to the react the yeah the easiest way to do this would be if i could pass in both values and set the the mode there so let's go to the documentation and just see what options we have so on on value change now it looks like we just have it just has two parameters um item values the value prop i wonder what the value could be though like let's try this all right uh does the value actually have to be a string i don't know let's see if we can make it something else okay so maybe we can make the value um an object right it's worth a shot right so we could say mode addition operator plus all right let's save that see what we get uh and we and if that is the case we can then say operator um equals item value oops i have value dot operator and this would be item value dot um mode and i should probably copy and paste that otherwise we'll definitely get an error because it'll be looking for these and obviously won't be there subtraction let's give it a minus sign all right okay each listening key invalid prop value supplied to pick your item okay so you can't pass an object i guess it has to be a string yeah we could see um right it's it's not it's not working it's not passing that okay let's see all right so let's forget that idea is with a shot now i know that you can't pass that so i do have another idea i was just kind of hoping that i wouldn't have to do this um okay that's all back to normal so we say on value change we are for sure changing uh the the mode oops not back to normal completely there we go okay so we're for sure changing um the mode we joined this says state mode item value but also what we could do is all right we can make handle mode handle mode picker and then in that case we could have pass in a value to this and within here we could have another switch statement which this is why i didn't want to do this because it's it's getting a little ridiculous with all these switch statements but this will work at some point this is definitely going to uh it'll be worth it to say maybe like do a refactor but basically like we already have all the logic we need in here to do what we want to do we can just take this out right and we're setting the state of sending a state here and we could say um mode and the mode is equal to val right the value that we're passing in and i forget the other part of the arrow function right um we're not there we go okay surpassing in val here and right so this is this is really all we would need to do to make that work and if it works i'll explain it more about what's happening but let's wait and see if it actually works first uh so will call this dot handle mode picker and we'll pass it item value all right let's check it out now okay so uh we do need to handle like what what is going to be the default when we well i guess we'll just change the fallback to addition all right so we got subtraction now let's let's try addition first see if that works okay that worked properly um one minus two is uh negative one min and then let's try something that doesn't work for sure let's go back to addition nine okay cool so this does work i do want to go back and change the default to match what the default would be um in our picker okay so here's what i did and here's why it works so before let's see so we had it working so that it would change the mode uh but we really needed to change the mode and the operator right because otherwise the user would not be able to see the correct operator on the the problem like they would potentially they could like select subtraction but it would still show addition down here right so that would be very confusing so that's why we we couldn't just change the state you know right from from our picker right the first attempt was to try to use an object here you can't uh it's the the type assigned to this in by react native is evidently just string so that's why we had to go up here and create a method to handle what to do whenever the user changes that input so in this case we're setting the state of the mode and operator so hopefully that makes sense uh let's see how much time we have okay i'm gonna go back to the chat now so essentially we we have uh accomplished what uh we we said we were going to at the beginning uh which is we put in another mode subtraction it works the logic works it's not perfect yet right remember we we want to make it so that negative numbers uh would never be an answer so we still need to add that in uh but we also and i wasn't sure we get this far we also added a ui element so that a user could select which mode they they wanted to use okay so not bad and we've already set up most of what we need for the other modes for multiplication and division so really it wouldn't be it wouldn't be that much more difficult to do that we pretty much just have to add some more values to the picker and we would then have multiplication and division so not not too bad in fact i want to try that out really because i think we did put everything in that we need uh so let's let's try that so all we need to do here is just we'll copy and paste that and change a few things multiplication and division okay let's check it out all right cool multiplication this should be zero yay let's put in a wrong answer okay let's try division all right definitely not this is gonna be harder uh till i get one that is really easy oh what happened here oh i see um since we added this element in the screen is kind of compressed so we're not getting those lines in between um one that i could do in my head uh five divided by two can i do this one is this like point uh 20 40 is this point four five five one oh i don't know what i i was thinking of the percentage that five is of two never mind uh okay all right so we we did get one right so it division works so all of them do work so we've actually added three modes um and really it wasn't that much extra work cool all right let me check we'll do a git commit and we'll check this into the repo and then i'll go to the chat so i want to make sure you all have access to this code so let's get status to see what's changed make sure it was just what we wanted which like i thought just one file because we are only just working in one file right now we'll do a git commit we use am as the flag so we'll add and commit at the same time and then we'll also have a message to put in so add modes i'm not going to spell out everything add um modes and ui mode selector all right that works and i'm gonna push that and now all that code is available on github so check that out we'll do a little refresh see we have five commits now right so latest commit was 18 seconds ago that's our commit so all our code's here you can check it out in the github repo and here it is feel free to submit a pull request if you think that there's something you really want to do or submit an issue if there if you don't want to actually code it but you just want to give me some something you think should be added to the project i added one earlier that's just a reminder like hey i need to add a readme instead of this default thing that comes with um create react app so anyway that's it for the coding let me try to answer as many questions as i can in the next uh two minutes or so okay okay all right uh john asks uh john kill kill ad killer diddies i don't know how to say that i'm sorry john um says uh that they're new and where would be a good place to begin i definitely say try freecodecamp.org um i learned so much when i was starting out and i i still um go to freecodecam.org so let's try that out um all right michael noticed that uh the edition label was spelled wrong so thanks for noticing uh too bad i didn't look over and see that um john says that picker needs some css style yeah it definitely does yeah john says jesse can't spell his only weakness if only that was my only weakness that i would i would be okay with that all right i'm skipping through and just trying to find questions right now so if i don't see your comment apologies let's see um so we have a question why do you prefer vs code over for example webstorm i don't know i've never used webstorm so maybe i would like it if i tried it but i i've never tried it so i do i really like visual studio code though also i had a question does he actually read the chat yes in fact i do uh michael asked if i could pass an array actually that would have been good to try so but i i don't know maybe we can try that at some point michael says you can send a comma delimited string and then split it that that also could have been an option that would have worked i should have looked over at the chat then uh john says does react native allow the use of ref uh yeah i you you can use ref um at at least in the web i've gotten it to work in the web version of react native web so i've not tried to use it one like an emulator for ios or anything like that okay i have a question tyler says is javascript your language of choice um yeah yeah javascript is my primary language although i i have used other languages before uh and i'm currently learning more about csharp because the back end of the project i'm working on at my normal job is written in c sharp so but definitely javascript is my goto if you told me to build an app as fast as i could i would use javascript uh tyler also said and follow up to that do you need coffee yeah for sure um michael says edition is actually still spelled wrong oh seriously did i still spell it wrong what the heck is wrong with me why can't i spell all right it's spelled wrong right there no oh man all right somebody open an issue and tell me to learn how to spell um or just fix it we'll get to that next time i can't believe i can't spell edition but anyway so i um so for for those of you who may be uh catholic you know that is lent right now and if you're not familiar with that it's a time where uh we usually like make some sort of sacrifice so i decided that i would only be drinking water for lent and so that means no coffee for me so it's been pretty hard it's been over a week now and uh i have i have still a long time to go uh but i feel okay it is like it's rough in the mornings it is really but anyway um all right okay i have one minute till my meeting starts so i have to go now thank you all so much for uh for watching and uh for all your advice in the chat i'll try to pay more attention to it next time and uh i don't know this is good we did uh we did a good job even though i couldn't spell i think uh i'm happy with how much we get done uh on the stream today so anyway i appreciate you all being here again thank you so much and uh have a great weekend