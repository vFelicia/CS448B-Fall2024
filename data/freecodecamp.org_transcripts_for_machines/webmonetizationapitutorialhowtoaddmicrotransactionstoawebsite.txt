Learn how to make money with your website from Anya Kubo. Anya is an excellent teacher and popular course instructor, and she will teach you some different ways to monetize your website. Hi everyone here on Free Code Cam here today to learn about web monetization in theory and in practice. So first off, what exactly is web monetization and how would you explain it to your friends? In simple terms, web monetization means that you can get money for every person that visits your website. Sounds good, right? But how does it work? And who's paying for all of this? These are the types of questions that we will answer in this course. By the end of this crash course, you will know what web monetization is, how to implement it onto your website to get paid for your hard work without having to rely on ads, paywalls, and the misuse of personal data, as well as how to receive payments securely for your implementation. We will do this with a stepbystep tutorial that will show a payment option for those visiting your website or show exclusive content if they already have a wallet enabled. My name is Anya Kubo and I'm a software developer as well as course creator online and your guide to the wonderful world of web monetization. This course was made possible today by a grant from The Web, a fund that is boosting open, fair, and inclusive standards and innovation in web monetization. Now, what is web monetization? As mentioned in simple terms, web monetization means that you can get money for every person that visits your website. But before I show you how to do this in a way that does not involve advertisers or monetizing user data, let's look at all the current options available first. Up until now, there have been several ways of gaining revenue from a website that you've built. We have payperclick or PPC adverts implemented onto a website or cost per impression advertising also done by implementing ads onto a website. Both of these would involve some kind of advertisement that is paid for usually by an advertising network working on behalf of a company. You have most likely seen the payperclick advertising approach being used on Google, such as this company right here. Okay, so this company is probably paying an advertising network such as Google ads to display an advertisement with hyperlinks to their website to increase traffic and awareness. In this example, the company's payment will go towards making sure that company shows up at the top of the search results. Next, we have cost per impression advertising. Cost per impression advertising works in the same way, but instead of paying for clicks, you get charged for how many people see your advert. In this situation, the service of increasing your brand awareness is being monetized. In addition to these two forms of web monetization, we also have ad banner types, affiliate programs, and data monetization. Banner ad types include having a visual displayed onto your website that a company has directly paid for or advertising agencies or networks have paid for on their behalf. Affiliate programs usually involve you as the website owner receiving a commission for every time someone purchases a product or service from a business if they came directly from your website. So for example, if on my website I had a link for some hot tubs and someone clicked on the link and it takes them to Amazon and they purchase a wonderful hot tub from there, I will receive a commission payment of the sale from Amazon. And then we have data monetization. As a website owner, you can sell user data to companies. For example, if you have a website that provides dog grooming services, for example, you can potentially collect data on what demographics tend to buy your services the most and at what time of year and so on. This behavioral data can be sold to advertisers to better understand their target markets and improve their own online marketing campaigns. Now, these are all great and stuff, but there is also a way to make money from your website without having to rely on any third party advertisers or selling any user data. This involves users who appreciate your hard work and the service you offer from your website, paying you a very, very small payment. So for example, a fraction of a cent for visiting your sites. This way removes any need for a middleman and allows the user to preserve their privacy in return. To show you this in practice, we are going to build a website. We all have a free experience one with the understanding that the user is paying to use your site in return for being shown ads. And one with a premium experience in which the user has enabled web monetization, so the adverts are removed. And perhaps we can even show them some exclusive content while we're at it. The website will allow us to collect tiny payments from the user if they wish to view our site with the exclusive content while maintaining their user privacy. By this, I mean, we must not allow for the tracking of the user based on the payments they make. And it must not be possible to get the details of the user browsing history or anything like that. Great. Another thing we can implement is this cool little counter that will show exactly how much a user is contributing to your website's mission. The website will allow us to collect tidy payments from the user if they wish to view our site with the exclusive content while maintaining their privacy. By this, I mean, we must not allow for the tracking of the user based on the payments they make. And it must not be possible to get the details of the user's browsing history or anything like that. Great. So let's get to it. Let's look at the flow overview first. So the first thing we need to know is that for the user who is visiting our website to be able to use the web monetization option, they will need to have an account with a web monetization provider. This is also known as a web monetization sender. Easy, right? They must also have a web monetization agent installed on their browser. The web monetization agent is what is in charge of initializing payments from the web monetization provider on the user's behalf. And the third part of the puzzle is the web monetization receiver. This is the part that will take the payments from the user to view the content on your website. The web monetization receiver and the web monetization provider do not need a direct relationship. Their shared use of the interledger network allows payments to be sent from the web monetization provider to the web monetization receiver. Here is a super detailed look at the flow of how this all works. So in a nutshell, at point one, the website, which has to have a meta tag containing a payment pointer and uses the browser to pass the tag to determine where to send payments. At point two, the browser uses its internal web monetization agent to calculate an appropriate rate of payments to make to the site. At point three, the browser generates a unique session ID for this payment session. At point four, the browser fetches a unique destination address and shared secrets for the session from the site's payment pointer URL. At point five, a payment receipt verifier service proxies the request and sends a receipt secret to generate receipts and receipt nonce to include in those receipts to the receiver. At point six, with the site's page still in focus, the browser begins initiating payments to the website at the calculated rate from the user's web monetization provider. At point seven, the web monetization provider sends the payment to the web monetization receiver. At point eight, the web monetization receiver generates and sends a receipt to the web monetization provider. And at point nine, the web monetization provider notifies the browser of successful payments. And at point 10, the browser in turn dispatches an event that informs the page of the payment. And finally, at point 11, the page confirms payment by sending the receipt to the verified service. Easy. So now that we have covered the flow, let's do a deep dive into the two terms that web monetization relies on, and that is Interledger and payment pointers. So what is Interledger protocol? Now, because the payments that we are dealing with are so, so incredibly small individually, this is a problem for us as not many payment clearing tools will work with them. This is where Interledger protocol comes in. The term Interledger refers to a payment messaging protocol for making payments of any size. In the case of the payments being very tiny, it allows us to aggregate them all and settle them over existing payment networks. The web monetization providers and web monetization receivers use this protocol to exchange payments. They could be directly connected or might connect by one or more intermediaries. And what are payment pointers? Well, in a nutshell, payment pointers are a really neat way to pay an account. In the same way an email address provides an identifier for a mailbox in the email ecosystem, a payment pointer is used by an account holder to share the details of their account with a counter party. It is essentially a URL that allows us to find a user's account. So for example, here would be my payment pointer. And here is an example of how I could potentially get sent a payment. Using payment pointers allows us to use account identifiers that are safe to share around. Unlike credit card numbers, for example, our site will include a URL similar to this for us to get paid by inserting it into an appropriate tag. Okay. So with all that knowledge, I think it's time for us to start creating our website. So let's do it. So first off, we're going to sign up to uphold, which will be a way for us to essentially get our payment pointer to receive payments for everyone who visits our website. So just go ahead and sign up. I'm going to do it here with you. Just use your email address and then and then select a password. So this is just a password I am selecting. A lot of my information will be kept private. So in the signup process, there will be a lot of stuff that is blurred out, but just go ahead and fill out exactly where you live and then as well as your citizenship from a dropdown. And once you have selected that, please go ahead and click next, not forgetting to accept the terms. Now on the next page, it's just going to ask you for your legal name and your date of birth, make sure that matches up with your document ID that you'll be using for the KYC section, and just certify that your name and date of birth match your document that you will be using. Next, you're going to put in a phone number so that you can be contacted by this phone number and hit next to your phone number, you will now receive a verification code. Once you receive that code, just go ahead and put that in and hit next. Once again, just verify your phone number once more and fill in your home address. So just tell the uphold team where you live and hit next. Once that is done, you're going to have to go into your email and just verify what we have done. So just find the email, you might have to check your spam and confirm everything is correct. Once that is verified, you should be taken to this page that will allow us to essentially do the KYC section. So we're going to start the verification process. This will bring up this modal in which you're going to have to scan the QR code, scan the QR code, and then you'll be asked to scan your document. So I'm going to use my passport to do this, just do the process. And once that is done, you will be verified again. And once the process is done, just click continue. Wonderful. So that should be done. If this is taking too long, just refresh the page like I did. And great, you should now be on the dashboard. So now the first thing that we are going to do is get our payment provider. So that's the URL that I was talking about. So just under here on the the from section, I want you just to scroll down so show more. And we're going to find the integer option. So keep scrolling and just select integer. Okay, just like so. And then that should bring up your payment pointer. So this is what we're going to need, please copy that. And great. That's all we really need from here. Now the code editor I'm going to be using is web storm. So I'm just going to bring up my code editor, and I'm going to create a project, I'm going to call this web monetization demo, and we'll store it in my web storm projects. And I'm just going to create an empty project. So if you're using VS code or anything similar, please go ahead and do that process for that. Now in my project, I'm just going to create an index HTML file. So I'm going to have to give it the HTML extension to tell our code editor that this is an HTML file. And I'm just going to change the title. So it shows up our browser as web monetization demo, and don't forget to hit save. Okay. Now we're going to have to add a tag in here that will allow us to feed in our payment provider. So just go ahead and create a link tag and then as well put monetization. And for the href, just whack in your payment provider and switch it up to be an URL by putting HTTPS in front of it. And that's really it. Okay. So step one done, we have just provided our payment provider so that we can get paid for any time anyone visits our webpage. Great. The next thing we're going to do is actually sign up for coil. This is the payment sender that will essentially allow us to choose to monetize a website or not. So just go ahead and in the Chrome extension, so bring up your browser, and just going to paste in the URL for this Chrome extension. So that is the URL, you can of course go to the Chrome web store and search for it. It is the coil extension. Okay, this is how we're going to stream micro payments to our uphold account if someone visits our website. Okay, so this is what it looks like. It does not track any browsing history. Okay, it's going to respect our users privacy. So please go ahead and add this extension to your browser, and just wait for that to install. Wonderful. So that has now been installed, we're just going to have to sign it to our account. So once again, just put in your preferred email of choice. So I'm going to put in any at free program.org. And I'm just going to select a password. Once that is done, I'm just going to agree to the terms of service and hit next. So wonderful. Once again, we're going to have to verify this. So please head over to your email address, check your spam and just put in the verification code into the browser. So there we go. Next, we're actually going to have to pay for this. So it's $5 a month. So I'm just going to put in my credit card details, I'm going to put in my name on my credit card, as well as my credit card details, and just start my coil membership for $5 a month. Wonderful. So once we select that button, we should be able to see the coil extension. Okay, so that is all done. Now let's go ahead and open up this page in our browsers. So I'm going to show you what this looks like at the moment, we do need to actually put this on something that is hosted online. So in other words, we need an HTTP address for this to work. But don't worry, I'm going to show you how to do that next. So just to show you, I'm just going to open up this pages document in our browsers. So as I'm using web storm, I could just go ahead and click this Chrome little button right here. And that should bring up our website. Or if you're using something like VS code, we need to get the absolute path. So I'm going to go ahead and copy the absolute path, and then just paste it into the browser like so. Okay, so wonderful. I'm just going to go ahead and inspect the page as well for later use. Now in our extensions, just make sure that the coil extension is showing so you can pin it to the top, you will see that if we click on it, streaming is not enabled. This is because our site is not live, it's not hosted on the internet, we're going to have to do this. And I'm going to use hosting to do this. Okay, please feel free to use whatever hosting platform you wish. So just head over to hosting. And once again, we're just going to have to sign up so that we can buy a domain and we can host our files on that domain. So I've already got an account for this, I'm just going to sign in to my hosting our account. This should show up my dashboard that looks like this. Now let's go ahead and purchase a domain. So I'm going to go ahead and just select a domain that is relatively cheap for demo purposes. So let's go ahead and find a domain I'm going to choose on your cubo dot online as it's just 99 cents a year. And I'm just going to select to buy it. Okay, so I'm just going to choose one year, and I'm going to choose a payment methods. And on this occasion, I'm going to choose PayPal. Once again, please feel free to use whatever payment choice you wish. So once that's doing its thing, we have officially purchased our domain. Okay, now we're going to have to just register our domain. So once again, I'm going to choose a country. And I'm going to say this is a personal account. I'm just going to fill in my contact details once again. So once again, I'm blurring this out for my own privacy. Wonderful. So that is now it our domain is pending verification. This is looking great. Once again, just check your email to verify this is all good. Now we're going to have to host our file. So we're going to go to the hosting tab, I'm just going to select this first option. And I'm just going to once again, choose the cheapest option. So the shared hosting single plan for one month. And all I'm going to do is just select pay now. And great. So there we go. And now let's fill out these setup pages. So I'm just going to go ahead and click Start. Now I'm going to say I'm creating this website for myself, I'm going to say other because you know, this is a demo. So I'm just going to select the other option. And then I'm going to go ahead and build my website. So select the builder website, and I'm just going to skip this part. And I'm going to select the domain of Anyokuba online. Okay, and finish this setup. Great. So we can view our website on a preview at the moment because it's still not finished doing its thing. So this is what it looks like as a preview. Okay. But of course, we want to actually view the actual website. And for this, the activation process could take up to 48 hours. So you might have to wait here. So please go ahead and take a break, take a breather and come back to this when your website is finished. Now, once your domain is active, let's carry on with adding some code to our document that we can host online. So let's do it. The first thing I'm going to do is just build out my web page before actually implementing anything that controls if the monetization is on or off. So let's go ahead and do the HTML and CSS part faster to spin up a photo blog quickly. The first thing we do is just going to add a header, as well as a div that's going to hold our section as well as our hairline element. So here is our header. And then I'm also just going to create a div. I'm going to give this I'm going to give this the class name of article container. So class article container. And this is going to hold all our articles as well as the section, as well as the hairline element. So let's go ahead and perhaps add the hairline element in here. And then the section, which is going to hold all our articles. Now, usually I would inject all these articles in with JavaScript. However, as a beginner tutorial, I'm just going to stick to building this out in HTML and CSS, which means that in our section, we are going to have articles. So here is what each article is going to look like. Here is the article element. And in it, I'm going to put an issue tag, which is going to hold the heading to our article, as well as an image, which is going to be of a place that I have visited. So I'm going to give the source, which is going to be an image hosted online, as well as the alternative text. And then I'm just going to have a paragraph tag explaining what the image is about. Okay, so we're going to have six of these. So I'm just going to copy this and put in six, two, three, four, five, six. Okay, great. Now in the header, well, of course we need a title and maybe a little bit of description. So I'm going to make a div. And I'm going to give this the class name of title info. So we can pick it out in our CSS. And in here, I'm just going to put an h1 tag that says welcome to my photo log, just like so. And as well as a p tag, that's going to say use monetization in order to see hidden content. So we're really trying to get people to use that monetization on my website in order to see some hidden exclusive content. Above here, I'm also going to create a div that's going to hold more information, I'm going to give it the class of info container. And in our info container, we're going to have a div that's going to hold our logo. So I'm going to say class logo container. And in here, instead of having a logo, I'm just going to put a symbol off the internet, one that I found. But of course, if you want to switch this out for a logo, then please go ahead and do that. And along with our div of a logo container, I'm going to have another div. And this is going to be a div which I'm going to give the class of currently not monetized. And if our site is monetized, I'm going to change out this class name, okay, to be monetized, we're going to apply different styling to it. I'm also going to give this the ID of monetization info, so we can pick it out and change the inner text. So at the moment, I'm going to put not monetized. Okay. And again, we're going to change that dynamically based on if our site, or in other words, someone that's viewing our site with monetization on will see monetized instead of not monetized. Okay. Great. So wonderful. Perhaps let's get to styling this up a little bit before carrying on. So to do this, I of course need to add a link tag in here, and then add rel style sheet and also link my style sheet. So let's go ahead and make a style sheet. So in my web monetization demo repository, I'm just going to create a new file, this is going to be a CSS file, I'm going to call it styles. And just put CSS as the extension. So our code editors know to treat this as a CSS file. Wonderful. So I'm just going to minimize this and perhaps put this on the right so we can see both things. Now I'm just going to link up this file. So as it's in the root of my project, I can literally just put the file name, we don't need to go into any other folders, it's just in the same place as our index HTML file. So fast off, what I'm going to do is actually style the body to have margin zero and padding zero. So we don't have any weird borders happening around the body of our document. And then I'm also going to say that everything so all elements on my document are going to have the font family. Now I picked this out earlier, it's a font called Kind, silly, gory. And as a default, I'm going to have sans serif in case browsers are not compatible with this font. And you can import it from Google Fonts. And you can do so with the at import, and then we're going to use a URL. So please go ahead and copy this URL is going to go to the Google Fonts online API. So let's go ahead and type fonts, Google API's.com. And then we're going to just put in this link. So CSS two, and then the font family is family. Kind, plus silly, gory, and we're going to import these different font weights. So wait at 300, 400, 600, 700. And display equals swap, okay, making sure to put a semicolon at the end. And so if you want to read that out, here's the full URL to get that font. Wonderful. So once we've done that, I'm just going to go ahead and pick out the header. So once again, the header holds this div, which is the info container that has our logo and monetized div, which will tell us if the site is being monetized from the browser or not, as well as the title info. So our header, well, I actually want our header to have a background color of this color that I have pre chosen. So it's kind of a light, light coral. Okay, there you go. It's extremely light. And I'm just going to say the width should be 100% at all times, making sure to spell width correctly. Great. So if we look at this in the browser, so once again, if you're using WebStorm, I would suggest just clicking on here to bring that up, and it will be hosted on localhost 63342. However, if you are using VS code or anything other than WebStorm that doesn't have this kind of feature, then just go ahead and get this URL. So get the path absolute path to the index HTML file where it's stored locally. So we're going to copy the path, copy the absolute path, and just whack it in here. So this is what your website looks like right now as a default, it says not monetize. Of course, we know that this will change dynamically, we just hard coded this for now. So just bear with me until we get into the JavaScript section for this to change. Okay, so let's carry on. So now that we have done that, I actually want to be able to center a few things. So I'm actually going to get the header again and say that any element with the class of title info that lives inside of this is going to have the height of 400 pixels. Text align is going to be center. And then I'm going to use display flex to make sure that it's centered horizontally in that 400 pixel height. So display flex flex direction is going to have to be column so that the two elements, the h1 element and the p element stack over each other. So let's go ahead and put column. And then we're going to do justify content center. Okay, so just to show you what this currently looks like, I'm just going to go back back on the browser, hit refresh, and great. So this is looking good. Let's now work on this info container. So let's go back to web store. I'm just going to minimize this a little bit. This time we're going to pick out the info container. So let's go ahead and do that. So I'm just going to once again, say that anything that lives inside of the header that has the class of info container, well, I want this to be with 100%. And I'm also going to say that anything that lives inside the header inside the info container that has the ID of monetization info. It's going to have the text color of this lighter color. So this kind of off white color, I'm going to give it a padding of 10 pixels. I'm also going to give it a border radius. So it's rounded off. So 10 pixels, a width of 140 pixels, a margin of 20 pixels. And I'm going to make sure that the text is centered. Now that will style this div. However, I haven't given a background color because I want to essentially change the background color based on the class. So if it's not monetized, I want the background color to be this kind of reddish color. So once again, I'm just going to use the hex color for this. And I'm going to use this color that I have prechosen. So here we go. And then if we look at this in the browser, that is what it looks like. We can also add a class for when it is monetized. So let's go ahead and maybe do that now. So if the class is monetized, monetized, you won't see this now. Well, I can show you manually. So maybe I'll do that. Then I'm going to give this a slightly greenish color 73C982. Okay, so now if I change this to be monetized, again, we will be doing this with JavaScript, we'll be changing that dynamically, you will see that this is green. Wonderful. So great. Again, we will be doing that later. So let's put this back to not monetize. And maybe let's make this a tiny bit darker as it's a little bit hard to read. So there we go. Wonderful. And now let's also get the logo container and just give it some padding. So I'm going to get the logo container and give it a padding zero from the top, but 20 pixels from each side. Great. So once again, I'm just going to show you what this looks like so that you're confident with each step. Refresh. So that is given a padding from this top, it's nothing but from the size, it's 20 pixels. And now I just want to make sure that these two things are spaced evenly and not stacked on top of each other. So we're going to use display flex on the info container where they both live. So I'm just going to add display flex and justify content, and space between. So once again, refresh, and great. So we've done the header now, now let's get to styling the articles. So this is great because we don't need to style each individual article. If you're familiar with CSS, then of course, you know, we could just pick out the elements, then we can style them and all the same styling will be applied. So let's go ahead and do that. I'm going to pick out the article. I'm going to say that each article is going to have a border radius of 10 pixels, and then the box shadow of a transparent color. So RGBA, and I'm going to just make it an off black with 0.2% opacity. And then I'm just going to say that we want it to be zero pixels horizontally, two pixels, vertically, eight pixels blur, and zero spread. Great. And now I'm going to give it a padding as well. So 10 pixels, I'm going to say I want it to be display flex, so that everything's stacked on top of each other that we put into it. So I'm going to do flex direction column for that. So if you don't know flexbox flexbox, essentially, display flex allows us to use this command right here and is great for making websites a bit more responsive. I'm also going to say that each article should have a max width of 400 pixels. And let's give a margin to space them out from each other. And also let's make sure the text in these is kind of like a dark gray. So I'm going to just use once again, a color that I have previously found. Great. Now any image that lives inside the articles, any image element inside the article element is going to have a width of 100%. And now just to make sure that the section will display them properly, because at the moment, if we look in the browser, hit refresh, you will see the kind of stacking all over each other, we want them to appear to be in a row, then also stacks are sort of like a snake, if we can't fit them in the first line. So we're going to use flexbox for this again. So we're going to do this on the section. So I'm going to grab this section. I'm going to use display flex. And then I'm just going to do flex, wrap, wrap, and I'm just going to justify the content to the space around each one. Great. And I'm also just going to give some bottom margin to the hairline elements. So margin, bottom, 40 pixels. Okay, so now if we look in the browser, you will see them all on a row. But if we start putting information in here, you'll see them snaking over each other. So let's go ahead and do that. So I'm just going to get rid of this for now. I've already kind of found a lot of information that we can use. So please feel free to take my information if you wish. For the first heading, we're going to have wine Bay, Australia, and I'm just going to link to an image on Unsplash. So Unsplash will allow you to use images as long as you credit them. So there is one right here, please credit this in your projects, if you use them, of course, this is just for demo purposes. So I'm just going to leave that part out for now. So there is the URL, okay, please feel free to go to Unsplash, I'm going to show you how to do this now. So Unsplash. And then if you just go to any image, so for example, if I want to choose this image, and then right click it and copy the image address. Okay, so this is literally the image address that we are taking apart from mine is of course, not of some plants, it is of wine glass Bay, Australia. So I searched for that image on Unsplash, and I use it in my project. I will be sharing the code for this in the description below. So if you want to take my images, then please go ahead. So I'm just going to put a photo of wine Bay, Australia. Wine glass Bay, sorry, wine glass Bay, Australia. And in the paragraph tag, once again, I'm just going to paste in a paragraph that I have taken from online. So there we go. Now in here, I'm actually going to make an article that has some hidden content. So there is my h2 element. So it's a giveaway for my loyal readers. And I only want us to show if it's monetized. So I'm going to have to pick this out, which is why I'm going to give this an ID of exclusive. This is exclusive content that we can only view if we're viewing it in a browser that is allowing monetization. And I'm also going to give us this class of hidden. So we can apply it and hide this, okay, if the monetization is not on. So the source for this, well, I'm just going to once again, put in a photo this time of the Grand Canyon. So just put that in here and under alt a photo of the Grand Canyon. And in the paragraph tags, just going to paste that in like so. So I'm just going to carry on doing this. Please feel free once again to code along and just use this information and get the URL off me, or feel free to use your own I think that might be quite fun, you know, you can really go to town on what kind of images you use, and so on. So photo of the village of rain. And once again, I'm just going to paste in a paragraph about the village of rain. So there we go. I'm just going to get one of Singapore. So once again, just put that in the h2 tag, put in an image that I have found online or more specifically on Unsplash, you don't have to go to Unsplash, you can do any kind of image as long as you credit it correctly, if it's not yours, and that is required. A photo of the Merlion. And then I'm just going to paste in a paragraph again. And just two more. This time I'm going to use a picture from Thailand, it's going to be a long tail alley. Put in the image. Put in some alt text photo of boats. Put in some paragraph text. And the last one is going to be of Seoul in South Korea, place that I really want to visit, maybe I should make that a priority for this year. And once again, just an image, some alt text, streets of Seoul. And a paragraph. So now let's check out what we have done. So if I go in here and I refresh the page, there we go. So this is looking cool. This is my photo blog so far. So this is looking good. So at the moment we can see this, like everything is essentially not correct, right? Because currently web monetization should not be allowed because we're just viewing our local files. So this means that we should not see the exclusive content. So for this, I'm going to have to do some JavaScript. So to do this, well, we're going to have to link up our JavaScript file and make one. So I'm going to use the script tag to do this. And as the source, I'm just going to put app JS, and I'm going to create an app JS file. So in here, I'm going to make a new file called app JS. And in here, we're going to put in our, you guessed it, our JavaScript. So what I'm going to say is if monetization is true, essentially, well, if it's true, then we want to unhide. So at the moment, let's actually make this hidden as default. So let's make sure that this is hidden. So let's apply the class of hidden to this, to this, but we actually have to make it too. So I'm going to go dot hidden. Display. None. Okay, so now if we look in the browser, as a default, our exclusive div, and in fact, I'm also going to give this maybe, so I'm going to actually also just so it's really obvious, get exclusive and give it the background color of like a red, so that we know that when it's being visible and when it isn't being visible. So in the browser, as a default, this should be hidden. So if I refresh, it's hidden. Okay. So that is good. So now we're going to use JavaScript to check if web monetization is on, and if it is show that exclusive content. So before we do anything at all, let's just check that our web monetization works. So all I am going to do is essentially pick out, I'm going to pick out the link element that we just added with our payment pointer that we converted into a URL. So let's go ahead and get the document object from the HTML DOM API. And then I'm going to use the query selector to look for the link. So the element of link in our HTML by the rel monetization, right, because we have two links, we have one for our style sheet, and we have the one we added for our monetization, making sure to spell that correctly. So monetization. That looks good to me. Now I'm going to save this as something so we can work with it easier. Now I'm going to grab the link and use the add event listener method to listen out for an event, that event is monetization. And if monetization is on, well, then we need to execute the following code. Okay, so that is how the add event listener works. It works on an object. And we listen out for this event on the object. So if monetization is on, then we execute this code. So this is essentially a callback function. And in here for now, I'm just going to say, Yay, monetization is on and save. So that's all I'm going to do. Now, if we look at this in our browser, let's just go ahead and get rid of this for now, you will see not much has changed. Okay. And even if I inspect the page, and look at the console log, we won't see that console, okay, our monetization is not on. But why is this? We've done all the steps, right? However, streaming is not enabled. So this is because we actually need to host these files on the internet. So let's go back to our hosting. Just make sure that 24 hour hold has been lifted. Okay, so you shouldn't see any banner here anymore. And I'm just going to scroll down to file manager. And then that will redirect me to the files on any dash kubo.com. As you will see here, you'll see public underscore HTML. Now you might have a default PHP file in here, please feel free to get rid of it if you do, or you might not. I don't have it. So I have nothing to remove. And all I'm going to do is just drag in those three files that I have made. So go ahead and find them in your web monetization demo directory on your computer, and then just go ahead and drag them in like so. Okay, great. That was pretty easy. So now if I go back here, we can shut that down now. And just copy the domain. And then go ahead and paste it in your browser and inspect the page, making sure that the coil extension is on. It should say thank you this time you call membership streams payments to the site while you're on it. And if we look in the console log, you will see Yay, monetization is on. Wonderful. Okay, so we now know the monetization is on. This is saying that our payments are streaming. Everything is looking good. Next up, I actually want to change stuff visually based on if our monetization is on. Okay, so once again, your monetization will be on once you host the files online, it will not be on when you're just viewing your files online like so. Okay. And another thing that has to be on is the coil extension. And you have to be able to see this visual rather than this visual. Okay, great. One final thing before we move on, it would seem that our CSS is responding with an error to the font that I've imported. So let's go ahead and fix that. It would seem there should be an and rather than an at. And great. So that has been applied. And let's move on. So now that we have that working, and we know how to host our files online in order to get monetization going, let's carry on. Next up, I'm actually going to pick out the button. So I'm going to pick out this button right here by the ID. So let's go ahead and get that I'm just going to copy this. And in my app.js file, making sure that I am still in here in between these calibrators, right, as we want it to be when web monetization is on. So we're listening out for web monetization, I am going to look in my document, I'm going to use get element by ID this time to search for an ID of monetization info. Let's just go ahead and make all of this consistent with double quotes everywhere. And now that I've got that button, I'm going to just save as something and I'm going to save as const monetization display, as it's technically more of a display than a button, because we can't really click on it, then I'm going to grab that display. And I'm going to use text content, actually change the content inside of it to say monetize this time, monetize. Okay, so we know that it's monetize, if monetization is on if we can listen out for monetization. So that's what we're doing, we're going to change it to say monetize. And I also want to change its color, which means that I'm going to have to get it again. So get the monetization display. And this time, I'm going to use class list add to add the monetize class. Okay. So as a reminder, the monetize class is one that we wrote here. So it's this green color right here, and not monetize is this red color. So that's why I'm adding and I'm also actually going to remove the red one. So the red color by getting monetization display class list, remove not monetize. Wonderful. So shall we see what this looks like so far? Let's do it. So at this time, I'm actually just going to copy all of this. And let's go back to host singer. So here we are. And then scroll back to where I have uploaded my files. So just here, click back into the public, go back into the app.js file, and I'm just going to replace that code and save this. So this green text should show up to notify us that this page is saved. And while we're here, I'm actually going to go back to the style sheet as well and just replace this first line. So I'm going to grab the correct import URL, and then just replace it here. Great. And of course, don't forget to save that file. Great. And once that's saved, let's go back to our hosted website. So Anya, dash Kubo online, and this might work or it might not, we might have to actually clear some cookies and caches. So it does seem I have to do this, please go ahead and click on here, go to more tools, and clear your browsing data, and just clear the data for the last 24 hours. And then just go back to your site. Okay, and refresh. And great, as our site is monetized, you will see it is monetized, this display is now green. Wonderful. Now if yours isn't, just make sure that your code is the same, you could check it by going on the elements and just checking that your head has the correct link, and that your app j s file has the correct code. Okay, so go under sources and check under app j s and it should be the code that we just written most recently. Right? Cool. This is what it should look like in full. So that is just a good way to check if the latest code is what you're viewing. So wonderful. That is how you would change elements based on if something is monetized or not. Next up, I'm going to show you how to show exclusive content if your site is monetized. So let's do it. So what I'm going to do is just go back in here. Because this time we're going to pick out, we're going to pick out the exclusive article that we wrote. So this article right here with the ID of exclusive. So let's go ahead and pick it out, making sure that once again, you are in these Kylie braces like so. And all I'm going to do this time is look in the document and get element by ID again, where we know that this ID is exclusive, because we just looked at it. And all I'm going to do is use class list, remove, and I'm going to remove the hidden class that we wrote previously. Okay, because if monetization is on, we want to remove the class of hidden that we wrote, because the class of hidden is what's preventing us from seeing that article. Correct? Because if we look here, we have added display now into the whole article, so we can't see it. And if the monetization is on, we essentially want to remove this so that we can see the article once again. So let's check it out. This time, I'm simply going to grab this one line of code. Let's go back to our host singer. And in the app.js file, I'm just simply going to add that line of code like so we can probably get rid of this console log now to you really don't need it. So great to make sure that file is saved by that tick showing up in the corner, you know that this is file is saved, I'm simply pressing Command S to do so. Or you can click on this icon right here, it will do the same thing. Great. And now let's go back to our hosted files. And once again, if I refresh this, you will see that code is not updating, we still see the console log, we don't see the other line. So once again, I'm just going to clear everything. So go to more tools, clear browsing data, delete everything from the last 24 hours, get rid of that. And now if I refresh this, amazing, we will see the latest code showing up. And we will also see the exclusive article because web monetization is on this as opposed to when it's not on. And we can't see that article, we can't see the article in red. Got it? Great. So that is how you would show exclusive content to people with web monetization. Wonderful. Next up, I'm going to show you how to actually display the amount people are donating to your cause or your website. By having web monetization on, we're going to do so by adding another p tag to the header and displaying the amount as well as the currency that we are working in. So let's do it. Let's go back to our web store. So once again, making sure we are in the curly braces, let's add some code, and just going to get rid of the console log. So it's consistent with what we have uploaded onto the internet. And great. So this time, what I'm going to have to do is pass through an event. Okay, I've passed through an event because this event object actually has a lot of stuff that we can use in order to show us the amount that we are gaining from web monetization, as well as the acid code and acid scale. We will go into what these are in more detail in a bit. First off, however, I'm going to show you how to destructure some data from the event object. So if we go ahead and grab the event object, some things in the object are the amount that we have gained the asset code and the asset scale. Okay, so just go ahead and destructure those things like that. The amount as I said is an integer amount delivered by an ILP packet. The asset code is essentially a string representing the currency code. So for example, if we're working in dollars, you would get USD. And if you're working in euros, you would get EU are and so on. And the asset scale is the scale of the received amount. What I mean by this is that it defines how small the units of amount will be on this panel pointer. A bigger scale means smaller units. If your scale is two and your asset code is USD, then it means you will need 100 units to get $1. I'm going to show you this in code. Okay, so we're going to need all three of these essentially build a micro payment counter. Let's do it. So first off, we're going to have to actually start off with a total. So total is going to start off with being zero. So when we load our page, our total is zero, meaning that we can save the asset code once and only once and that it doesn't keep getting reassigned over and over again, because that is pretty much constant, that's not going to change, right, the amount, however, will change, it will essentially grow incrementally. So if total equals zero, which should be on the very first load of this document, then we're going to get the asset scale and assign it to the scale up here. Okay, at the moment, this is going to be just going to leave it as null. And I'm going to then assign asset scale to up here so that it's saved once and we don't have to touch it again. Okay, great. And of course, we need to display this in the browser. So I'm going to actually have to create some elements for this. So I'm going to do it by ID, I'm just going to go back in here and scroll up. We did say we want to just create another paragraph tag for this. So let's go ahead and do that. With your help. You have supported me by and I'm going to use the span tag to break this up. And then in here, I'm going to put the total amount, I'm going to hard code this as zero to start with. And then I'm going to give this the ID of total. And then another span tag to actually put in the asset code. So let's go ahead and perhaps put currency in here for now. So when this loads the first time, it will say with your help, you have supported me by zero. Okay, and then of course, when the monetization is on, then we should populate this with the asset code. In this case, it's going to be US dollars. And this total will be overwritten with a total that someone has supported you with. So let's go ahead and do it. Let's pick out this span element by its ID and the ID is currency. So I'm going to copy that, we're gonna look for the element with the ID of currency. And now I'm just going to get its inner text and assign asset code to it. Okay, so once again, this will only really happen once on the load of the document. And now we're going to have to actually get that total which at the moment has a value of zero. And we're going to have to essentially add to it. So whatever total is going to get the amount, I want to keep adding to that total over and over again, every time that is updated. And we just need to change it into a number value. Otherwise, this is actually a string that comes back as a string. So we need it to be a number so that we can add to it mathematically. Great. And once we have done that, I'm just going to format the total to a more readable format for us by essentially multiplying it to the scale. So let's go ahead and say this as formatted total. And I'm going to get the total whatever the total is, multiply it by math to the power of 10 minus the scale. Let's actually go ahead and perhaps put this in parentheses so it's more readable. And I'm going to do it to fixed scale. Okay, and now I'm going to look at my document get element by ID. And that ID is total. So that's what we want to pick out. And this time, again, we're just going to use in a text to assign a new formatted total. Great. So once again, let's save this now. And actually, I'm just going to try put this all a little bit closer together, just like so so we can see all of it. Okay, so that we go, perhaps it's annotated a bit. So this was to display to user if monetization is on. This was to show exclusive content to the user if monetization is on. And this was to implement micro payment counter and display display it to our user. So we've done three cool things here with the web monetization. Okay, I just want to actually now show you if this works. I'm just going to this should be triple equals sorry. And what doesn't it like about this formatted data formatted data, I think that should be fine. Let's go ahead and copy all of this. And go back to posting. Okay, so back in here, I'm just going to go in my app.js file and replace all of that with this new code. Okay, so that is the code we want now and save this. And then we also need to update our index HTML to have that one new line that we wrote, which is this new paragraph. I'm just going to put it down here. And once again, hit Save, you can save here as well. And let's view this now. So refresh, as you will see that has not updated our code. So let's go ahead and clear some browser data. Clear data. And fresh. And great. Now you will see the amount that a user is helping out by by viewing this with web monetization, you will see that value is growing incrementally, they are micro payments. So they are very small. However, it's pretty cool to see exactly how much someone is supporting you by by viewing your web page. Got it. Amazing. So thanks very much for watching. I hope this was useful. I'm going to be sharing the code with you in the description below. So please go ahead and take it and just replace it with your own payment pointer. And that should work fine. Thanks very much again, and I'll see you again soon.