00:00 - [Music]
00:04 - welcome to function farm
00:07 - let's learn about functions
00:10 - functions allow you to name a set of
00:13 - commands
00:14 - so you can take some commands and like
00:17 - package them up and call them a function
00:20 - and then you can later call that
00:21 - function
00:23 - you just want to make sure that you
00:24 - define your function before you use it
00:28 - so here's an example
00:30 - i have a function that i'm defining
00:32 - called spin
00:35 - now i have an equal sign and in
00:37 - parentheses is the parameter of my
00:40 - function more on that later
00:43 - dash greater than sign
00:45 - and then within the function you can use
00:48 - that parameter
00:50 - so your function becomes kind of like
00:52 - programmable
00:54 - you can pass different values into this
00:56 - parameter and your function can do
00:59 - slightly different things each time
01:02 - so this is the function and then later
01:05 - in the code i'm calling the function
01:08 - spin and i'm passing it
01:11 - 4
01:12 - so this argument 4
01:15 - gets passed
01:17 - into
01:18 - the parameter n so n becomes 4
01:23 - and then
01:25 - i'm i'm spinning four times if i would
01:28 - have had spin five
01:29 - then i would have spent spun five times
01:34 - let's look at an example
01:37 - here's a challenge that uses a function
01:40 - we're defining a function called go to
01:44 - and
01:45 - we have the parameter a
01:48 - so we we're going to use that parameter
01:51 - a within the function so we say turn 2a
01:54 - and step distance 2a but what is a
01:58 - well when you call the go to function
02:00 - you're defining what a will be
02:03 - so go to bridge bridge becomes a
02:07 - so we're turning to bridge and we're
02:09 - stepping the distance to the bridge
02:11 - and then the next line says go to match
02:14 - so match becomes a
02:16 - so match is being passed to this a
02:19 - passed into this a
02:21 - parameter so now we are saying really
02:24 - turn to match and step the distance to
02:26 - match so you can see here
02:29 - the mouse will go to
02:32 - the bridge and then go to the match
02:35 - grab it
02:37 - and then we basically want to turn
02:38 - around and
02:41 - go to you can use this little go to
02:43 - button down here
02:45 - go to the bridge
02:49 - and then we're going to go to the pile
02:54 - and then we'll drop it
02:56 - now
02:59 - you've been using functions all along
03:02 - like the turn to command is really a
03:04 - function
03:05 - step is a function distance two is a
03:08 - function
03:09 - these are
03:10 - built-in functions
03:12 - now grab and drop our functions also but
03:16 - they have these empty parentheses
03:18 - and that's because nothing is being
03:21 - passed in you don't have an argument so
03:24 - if you don't have an argument following
03:26 - your function you have to use the empty
03:28 - parentheses
03:30 - okay so let's go ahead and run this and
03:32 - look right here next to the function as
03:35 - we run
03:38 - okay so it's telling you a is mat bridge
03:41 - and then a was match
03:43 - now a is bridge a is pile
03:46 - so it's giving you a little information
03:48 - [Music]
03:50 - let's look at another example
03:54 - here's a challenge where we have two
03:56 - functions
03:58 - the go to function and the collect
04:01 - function
04:02 - and i wanted to show you this one
04:04 - because the within the collect function
04:07 - we're calling the go to function
04:10 - so a function can call another
04:12 - function so let's look at the challenge
04:15 - itself we have the mouse wanting to pick
04:18 - up all of these matches and bring them
04:20 - to the pile
04:22 - so if we look at the main code
04:25 - we're cycling through all of the matches
04:28 - by using a for loop for m in matches
04:32 - and then we're collecting m so each time
04:35 - through this loop
04:37 - m is a different match
04:39 - the first match
04:42 - will be matches with index 0. so m will
04:45 - be
04:46 - this m will be matches with index 0.
04:51 - so when we say collect m
04:54 - we're passing to the e parameter matches
04:58 - with index zero
05:00 - so we're going to go to matches with
05:03 - index zero so
05:05 - that's going to get passed to the p
05:07 - parameter
05:09 - because we're calling the go to function
05:11 - and we will turn 2 matches with index 0
05:15 - and step the distance to matches with
05:17 - index 0.
05:18 - and then we'll grab it
05:20 - and
05:21 - step negative 10 and then drop it why
05:25 - are we stepping negative 10
05:27 - i think that's our problem we need to
05:30 - fix that
05:31 - because we just want to bring it to the
05:32 - pile and drop it so we could say
05:36 - go to
05:37 - the pile we'll always want to go to the
05:40 - pile
05:41 - um to drop it so we could just say pile
05:45 - okay now when we run this
05:49 - look
05:50 - at right next to each of the functions
05:53 - and there's going to be a little posting
05:55 - that will show you what p and e is each
05:58 - time
05:59 - and that will change depending on
06:02 - what we're passing in as m
06:05 - so let's take a look
06:09 - okay see how matches are zero
06:12 - with index one
06:14 - matches with index two
06:22 - okay
06:25 - [Music]
06:27 - very good
06:30 - now it's your turn to use functions good
06:33 - luck
06:35 - [Music]