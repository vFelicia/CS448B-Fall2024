00:00 - [Music]
00:04 - welcome to return to sender let's learn
00:07 - about return
00:10 - return is used in functions use return
00:13 - to send back a value for example
00:16 - a number or a boolean
00:19 - let's look at this code
00:21 - we have a function called good banana
00:23 - that takes in a parameter b
00:26 - and we're returning a
00:28 - boolean in the main code we have an if
00:32 - statement
00:33 - that as the condition of the if
00:35 - statement we're calling that good banana
00:38 - function
00:39 - and passing in a banana
00:41 - so the banana gets passed into b
00:44 - and then in the return we are
00:46 - determining whether or not it's true or
00:49 - false
00:50 - whether the if the banana is rotten will
00:52 - return a false if the banana is yellow a
00:56 - good banana we will return it true
00:59 - so that boolean that's returned gets
01:02 - passed back
01:05 - to where it was called where the
01:08 - function was called
01:10 - so you could kind of think of this good
01:12 - banana banana
01:14 - being replaced by what's returned
01:19 - so if it returns a true we have if true
01:24 - and then we'll run the indented code
01:26 - let's look at an example
01:29 - here's a challenge where
01:31 - the monkey wants to get at the banana
01:33 - but must get past the gorilla so needs
01:36 - to make sure
01:37 - that it's really healthy and we could
01:40 - see that right now
01:42 - it's not so healthy it's 40
01:44 - out of 100.
01:46 - so let's look at the code
01:48 - we have a function called healthy that
01:51 - does not take in a parameter
01:53 - it returns
01:56 - the result of this comparison
01:59 - we're calling the health function which
02:02 - returns a number
02:04 - and comparing it to 100.
02:08 - okay so if health returns 100 we return
02:11 - a true otherwise a false
02:14 - okay in the main code we're going to go
02:16 - to the health zone
02:18 - and let's see how we can use the healthy
02:22 - so
02:23 - until
02:26 - healthy
02:28 - okay because healthy returns a boolean a
02:31 - true or a false
02:33 - we could use it with our until
02:36 - that's our condition
02:39 - and until healthy
02:42 - we're going to wait
02:43 - [Applause]
02:45 - once we are
02:48 - healthy
02:49 - we want to
02:52 - turn to banana i think we could just go
02:54 - to banana because it includes the turn
02:56 - two
02:58 - all right let's go ahead and run that
03:05 - [Music]
03:07 - okay looks like it worked
03:12 - [Music]
03:14 - here's a challenge where the monkey
03:16 - needs to get the banana but needs to
03:18 - scare away the crows first
03:22 - let's look how at how we're going to do
03:23 - this
03:25 - okay in the code we have a save function
03:28 - it does not have a parameter
03:31 - we're checking if
03:34 - each crow is watching so if crows with
03:38 - index zeros watching return a no if
03:40 - crows with index one is watching return
03:43 - a no
03:44 - and then we have a return s yes at the
03:47 - end
03:48 - so this brings up
03:50 - the concept that you could have
03:53 - multiple returns in a function
03:57 - but only
03:58 - one return will ever be reached
04:02 - meaning as soon as your program reaches
04:05 - a return
04:08 - it returns to the main code it leaves
04:11 - the function and it's not going to see
04:13 - the code below that return
04:16 - so that means if we hit this if we end
04:19 - up reaching this return yes
04:22 - it means that both these if statements
04:24 - were false meaning the crows were not
04:26 - watching
04:29 - also
04:30 - up to this point we've always used true
04:32 - and false as our booleans
04:35 - you could also use yes and no
04:38 - so yes is the same as true
04:40 - no is the same as false
04:44 - okay let's see how we're going to use
04:46 - the save function
04:49 - so we want to scare those crows away
04:53 - so until
04:55 - now we want to put a condition in
04:57 - because our save function
05:00 - uses
05:01 - return
05:03 - yes and no which is a boolean
05:05 - we could say until safe
05:10 - so until safe we want to scare away
05:12 - those crows so we're going to scare them
05:15 - away by saying something
05:17 - [Music]
05:19 - now what do we want to do after we've
05:21 - scared them away
05:23 - we want to go and get the banana
05:26 - [Applause]
05:29 - okay let's run that
05:35 - okay we scared him away
05:37 - that worked
05:40 - oh we didn't get three stars let's see
05:43 - if we could reduce the lines of code to
05:45 - get three stars
05:48 - okay if we look at the function we could
05:51 - see that we have two if statements
05:54 - now these two if statements have
05:56 - slightly different conditions
05:59 - but they have the same exact indented
06:02 - code
06:04 - so that because of that we can
06:07 - consolidate them
06:10 - we could bring them together
06:12 - into one if statement
06:15 - and we're going to link them
06:18 - with
06:21 - an or because
06:23 - we want either if either of these are
06:26 - true
06:27 - we want to return no
06:30 - if they're both true or either of them
06:32 - are true
06:33 - we want to return now
06:36 - but otherwise we're going to return yes
06:40 - okay let's run that
06:46 - okay it worked
06:50 - oh we still don't have the three stars
06:53 - but i'm gonna leave that challenge to
06:55 - you good luck
06:58 - now it's your turn to use return good
07:01 - luck
07:02 - [Music]