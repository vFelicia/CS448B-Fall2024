hello and welcome back to the kidscooling playground channel guys so today we will work on the second part of this uh hollywood matching game uh so far let's just go over the code on the first video we were just setting up the list for these number lists the game matching numberless and then we're setting the sprites and uh this is just a bunch of costume that we had in our uh you know on ours right here you know this different costume here you know those different custom name we just take that and we just plug it into this uh code here adding the sprite name then we have prepared game where we found the uh six uh six uh sprite that we were going to use as a pair to match and also the six pair number that we're gonna set up for the sprite so that's where we have left off so if you have missed anything just uh kind of pause the video and get the code okay so um we after that we have some in the bottom where we broadcast the instruction just to start the game and then we call the prepared game okay game is the here this block of code where we find in the pair now we're going to work on this one called setup again so let me run the game one time for you guys so that you can see what we have so far so let's save this let's run this again so what happened is the get tab the cat's gonna talk and then they will populate the list so let me show you the list here so once the cat runs you see this pair right so we are going to put this pair with the costume so these are the six pair under 12 and then these are the six different sprites okay all right got that so far all right what we're going to do is here what we call the uh setup game we have to grab a grab a block here we'll call it setup game let me zoom in a little bit you can see a little better okay we are going to use a loop again so before we can use the loop since we're using the index earlier whether we set it back uh scratch use indexes begins at one so that's why we are using one here we set one other programming tool index like java that was that zero so for scratch is one okay so we're resetting to one then we will use repeat until loop okay and then we're going to use the operator here greater than and then we are going to drag in this index here so what we want to do is we will want to loop through the list of the uh sprite uh that we had like this right name this list we are going to look to this list and get the first item okay uh what we're going to do is we're going to get this we are going to get the list so to get to the list you have to call the link so length of game uh spriteless cam names brightness so if you click on this you see six since you have six items here you get six so the loop will go six times um the seventh time it goes it will be bigger so every time you do make sure you increase the index if not it will go into an infinite loop so we'll have to increase the index later what we have to do is uh we can we are going to see called match sprite basically this is the sprite that is going to be used for match and where to pick the item from the list so to pick the item from the list uh we paint this game sprite list name which is this and instead one we are going to use the index so it will be also pick the first one second one third one and so on so if i let's say if i use this i can understand a little bit better so let's say i have this right so let's say i say smash name so what you guys can do right if you try to debug your code make sure you use like some kind of say something like that so that way you can debug your code better and also you can like make sure you open the variable you want right you can have the variable here so let's say if i run through this so you see is that it picks the first one and then it will say the second one and so on so since we don't have a uh we don't have the increase the index right you see it doesn't change so what you have to do is say change the index by one so now if i run this you'll see the cat it will talk quite fast we'll do one second so we'll name all the item here so you see back clown scarecrow the toe the halloween clothes and then the whatever the last one is okay all right so i hope you understand that so far so we have to take this back out we don't need that so now we have this what we also need to do is oops so we need to set the matching number so we have the matching sprite now whether you get a matching number so we're gonna use this one matching number this so this is the same thing you'll just pick the first one right how we're doing so we'll pick back and we'll pick this since the both are six so it's using those one loop will be okay so they will just use so we'll get the first one first one second one second one third one third one four four fifth fifth six six like that okay all right so what we're going to do now we have these we're gonna have to make a new block uh we are going to go call setup sprite so this will be a custom block or taking one input uh you can name it like uh whatever the input is we are going to send in the matching number to uh to find so we are going to call make this a matching number that we will be passing it that match number okay so don't use a uh so you can pass in boolean uh i mean use a number or text don't use the boolean one okay okay so we created this block here so this block will be somewhere here we'll just put it here for now we'll have to call this uh what we want to do is we can we are going to call this block so you can put it here and we want to send the matching number to it go to here send the matching number we'll take this out for now so what we're going to do is we're going to send in the matching number so one one type five okay this this key here this thing is called pipe okay or the straight line okay all right and then we have to change the index put that back in okay so this is how the setup code looks like and we got to move it over here okay now we will work on this one i think we need more space for this guy ah okay so how do we get the number right there's a couple of ways so let's say if you're doing if you're making a game that's only have let's say uh you know um only only not go up to 10 right so let's say you only have like this like only three letters then what you can do you exactly know what it is right so what you can do is you do this you can say um we are going to use this broadcast so we are going to use this broadcast one so this is the first pair and we're going to call this broadcast 2 this will for the second pair so what you can do is this but this is not the right way i'm just showing you um this uh how we can pick it up but we're going to do it the other way to break it up since you have actually multiple um number here so the one way if you're not doing more than uh eight uh like more than eight boxes then this is fine right if you have more than eight bucks then you actually have to break it so oops sorry so let's do this so what you can do is you can pick the first letter and the third letter right since this is the first letter is one and third letter is five so you exactly know so what you can do is you can drag this here drag this here so what you can do let's let's say i am going to open my so again to to test right always you can use a say that way you can test your stuff okay every time you you do your code you can test it so it's kind of like debug or log right in real coding so you can join this thing so you can join let's say broadcast one we're trying to break this number that passing in okay and broadcast number two was it okay uh for now i mean you can put another operator here i guess make it look better when this is for just testing so we are going to put a space here okay a couple of space okay so what happened if i run this you'll see okay so you will see the cat will say one space base space 5 8 space space space 7 so let's run this so i am going to run this right here just click on it to run so this will call this so you see you see it finds the number right but oh you see what happened here when it gets to 11 and 12 that will not work right because the position the first and third letter are not the number the third letter here is actually a pipe so so this will work if you have only eight boxes for matching but if you have more than eight boxes this will not work correctly right you can see right one and five is fine eight and seven is fine but when you get to 11 and 12 you see that it messed it up right so that's why this will not work so what we have to do is we are going to have to break this matching number uh we are going to have to create another uh custom custom block that helps break this up okay all right so we'll go back to my block uh make a new block called uh break input so basically this will break the input whatever we are sending it in okay so let's put him right next to here so like this so what we're going to do we're not going to do it like this i'll show you later let's walk on this brick input first okay so we have to go to variable uh we are going to uh use the index so break index will set it to one right since uh scratch use one okay all right and then we are going to simply set some variable first we are going to say current character we'll delete this zero we'll make it blank and what we also going to do is instead of over here that we set we are going to do it over here so we will just reset this broadcast one to the blank one duplicate white cast two okay so we have two broadcasts we're resetting it now what we are going to do is we are going to repeat until okay where's my repeat repeat ah okay right here okay repeat until um so we will try to find the character okay repeat until a character which we are going to use to to to see what is the character when we're getting it uh when we do the loop inside this uh input just if you guys have problem here you can look at the other list video where we are finding the uh you know the custom uh duplicate item in the list and all that will show you how to break also but this is a different method this is actually breaking the word so what we can do is okay we are going to use this one so repeat until the current character is equal to the pi character so we will try to repeat until this point so we'll pick up like 11 so if it's 11 is next to each other right 11 so it will not stop it will stop only when you get to the pipe character okay all right you so say set okay this one you say set the current character so what uh how do we get the current character so we have the index right so we have to use this the letter so of the input and then we got we are going to use this break uh break input index so what we can we cannot use this index because this index is used by the the other code here and then we don't want to mess it up okay that's why we're gonna create that's why i created another one i'll break input index just for this this custom block only all right okay now you you find the character so let's say let's say the break input index is one so let's say i set this to one i'll show you what i mean so let's say this is one um okay let me remove this for now we'll we'll do it like this i think it's a little bit better let me put another code i think i cannot show you yet let me put another set of code here that will be better so let's put this back in okay and then we'll say not we're gonna use this not operator we'll do a little bit more code before i demo it okay and then we have to use this so just like this on top i guess we'll duplicate this guy so if it's not this one what we want to do we want to join them together okay so you say set okay this is broadcast so this is the first one we'll just use broadcast and we are going to use the join since if they are not this so basically we run to 11 right 11 is not the pipe you're gonna try to join the one and the one together okay so what you have is you are going to join the broadcasting message uh one okay with the current character okay so whatever the current gear i'll run through this a couple of times you'll understand a little bit better and make sure you have to increase your index okay so change the break index by one okay so let's see what happened right now okay we are going to put in a a say here okay and we are going to say the variable of broadcast one for now okay let's do it for one second okay so let's save this let's go back up over here a little bit let me zoom out a little bit so what i'm going to do is i am going to call this gap so this setup so setup sprite we have this right so we're not going to use this anymore we'll trash this trash that this guy will actually call this break the input okay and we are calling this game so this function is calling this function we need to do more stuff here so so for now just saying this function called this function okay and this function is called by this one so this number 1 5 will be passed over here this 1 5 again will be passed over here and then we'll try to break that one one now okay so when i run this game you will see one eight i mean one eight two three eleven four okay if it's right so to test it you don't have to run the whole game again just click on this so you see one eight two three one eleven right you see that you see that eleven so you see that because of the one one right it's not a um not a number i mean not another pound it's another pipe character so you'll join that it becomes 11. okay so at the end right at the end we'll have each number at once okay let's just try this okay i hope you guys understand if not uh just kind of watch the video again i guess um so i'll try to explain the next part so now we have picked up the first number we're trying to get the second one so what we have to do is since we are we were using this break input right input index we need to reset it okay before we call the loop again so what you have to do is call this set uh set it back to one right send scratch going by one we'll set it back to one and then we are going to repeat until again this time the conditions a little bit different so we are going to use the operator here which is the greater than let me zoom in a little bit more okay here we will have to find the length of the input so we'll undergo to the input uh sorry the length of the input will go to here so we'll get this guy here so what is the length of the input so length of input basically you know whatever the in input that's coming in right whatever it does pass in here we're trying to get that linked okay it could be like three or four like this case will be three right so this case there's a link or the input will be five right so whatever that is and we are going to compare this with the break input index we just reset it to one here and we are going to reuse this set current character again so we again we're trying to find the character okay so now we want to find the break uh index oh i made a mistake over here uh it's not set since actually what we're going to do is at this point we picked up the first a number what we're going to do when we hit this pipe character we stop what we need to do is we're going to move the index past this point so what you have to do is you say change so be sure to not get that corrected okay so you say change this by one so we are going to move the index by one now the position of the index is now at this this position so now we'll get whatever the n is it's gonna create that as the second broadcast okay all right so you can get the letter so letter of this of the input and then we are going to grab one more here set the second broadcast we are going to use the join so make sure you you reset that in the beginning so every time it goes it doesn't have anything so when you're joining something to itself nothing then it becomes that thing only right so that's why make sure you reset that if not your your number will go wrong okay so you're going to join this for the first time when you join will be blank and we are joining with the current character okay and then we are going to change this index the break index again by one so now when it picks up let's say you're over here we it finds the this uh this bar right the straight bar what it does is it will move this index one so past the straight bar then it will repeat until it gets to the end so we'll pick up this five but for this case this when you pick up one it's not the end yet what it's going to do is it's going to go all the way to the ends and this since it says greater than the length of the input right so let's say you're here and then you want to go all the way over here so go on next and we'll pick up two as well and then we'll join together so we'll make 12. so this is what it is right now so at the end of this right you actually have two number you have a broadcast so let's display this right now so to do to test right so what you guys can do you know grab two of this uh go get the variable you can say uh broadcast one and broadcast too so at the end of this what we want to achieve is we are going to get 1 5 8 7 2 9 3 10 11 12 4 6 right so maybe we can join them together i guess maybe faster right we don't want to see any messages we can join them right here i should have not deleted my old one so i can show it anyway i deleted so let's just use anything you want right to in between just to see it right what cast one and what just do okay so now when we run this you'll see one colon five i mean this is just the eliminator right doesn't matter i'm just showing you that you have the each of these podcasts will have a number itself okay all right so let's go back over here let's zoom out a little bit go back here i'm gonna click on this again this will call this and this one will call this and it will break the number for us all right so you click on it you see one five eight seven two nine 3 10 11 12 4 6 right cool so now we have all the number that we actually need so we start can broadcast this guy to set him up right okay okay for now i'm going to uh create some i'll put this guy over here so you can see a little bit better okay what i'm going to do is i am going to hide this guy for now let me go back to the cat i am going to duplicate this guy duplicate i'm going to put them over here second one just for showing purposes okay all right so what we are going to do is we are going to broadcast this guy and then set him so let's use some if statement here okay you say if and then we have to use this operator here okay let's zoom in again so you say if so we have the broadcast right so we'll use this variable say broadcast or calculus has one is equal to one so that's the first sprite what we're going to do is we'll since since in scratch is not easy to pass like variable from one sprite to another not like other programming language you can actually call different uh different method and different class right so this one doesn't have like that so you in order to communicate to this one you're gonna have to broadcast it over so what we're going to do is we're going to use whatever scratch you provide for us which is broadcast um don't use this broadcast you have to use the broadcast and wait because we want to set up this sprite every time before that and you don't then it will be having a problem you use broadcast what it does is gonna go through the loop real quick and then it's trying to fire off all this thing and before this guy is even able to turn the right sprite this one will already go into the next number and then it will have a problem it will all that they will go incorrectly so that's why you want to use this thing called broadcast and weight okay that's very important okay so what you can say is set up oops set up sprite one okay and wait and let's broadcast another one if the broadcast is two we are going to say setup sprite number two okay so the if the podcast is one we'll separate set up this guy if the broadcast is two we'll set up you know one is this one broadcast number two or broadcast to this one so whatever that number number one so whatever the uh number one you set up the number one number two set up the second one but similarly we have to do the same thing for the broadcast number two right so we'll duplicate this code i will just show uh one set and then we'll work on the next set next time okay so this one will change it to broadcast two broadcast two so because it could be the reverse also right so that's why you had to do it two different time one is for the broadcast one one is for the broadcast two okay but broadcast is the same thing if there's one we'll set up one two will set up two okay all right okay so what we're going to do next is we are going to go into this code and we'll do a little bit of code okay all right okay let's go in here and say when i receive let me zoom in when i receive um setup sprite one so this is the first one what i'm going to do is i say switch or switch switch custom so switch costume so since we remember we picked up the name right we took that and we put in the match sprite name so what you can do is get this match sprite name with it here so we'll put that in here so what it does is when it receives this message the setup whatever that is whatever variable that contain whatever value containing that variable will be set to this custom so let's copy this over here so here inside one right we're not going we have to use two right i will use two okay this is the second one and you can position your stuff you know in the position you like for me you know here let me put in like around here for number uh number two i'm going to say negative 60 and 120 i think that's the one that's the location i have so that is on that and then this one will do the same thing okay and this one is uh we're going to use a negative 180 and 120 okay just in case it meant this we just put okay so what happened is if i run this and i'll run the cat the cat cove right let's zoom back out so when i run this the cat will go from here will set up the the the the two pair and then the the sprite name then you will call the setup set we'll call this code this code will call this to break the input the input will come back and let the uh let this guy know what the broadcast is and it will set up the sprite okay all right so let me run this so what after i run this you should see that these two guy will have something okay that match this list okay let's run this save it okay we are going to try to run this i'll show you how it works okay let's run it again and we run the stop button so this will change to whatever that number one and two is so number one is what number one is the lollipop so you see lollipop and number two is what number two is is the zombie something okay number eight which is this so as you can see right we see number one number one is the lollipop so which is correct so as you can see it should be 0 32 lollipop so we go here go to costume it switched it to 0 32 lollipop right and this one number two is what the zero zero a zombie right so you can see zero zero a zombie right so it actually picks up the right one so he knows that okay for the sprite number one we are going to set the lollipop for the sprite number two which is over here we're gonna set with the zombie so let me run the code again you'll see it again will change okay run again so clean up this list and then it started setting up the list after that it displayed this okay so what do we have here you see one and two are the what this monster here 14 so just so happen one and two other pair that's why you see that they have a magic pair right this 14 monster that's why you see one and two as the matching pair so it doesn't matter it doesn't mean that they're next to each other will have the matching pair it could be some other way around right just so happened that the match is for that so let me run again i hope you guys understand this so once we get the pair we broadcast the message we'll find a pair so now one should have this spider right and then the two what is it the other one is two it should be candy cane so you can see right one is the spider and number two here is the candy cane all right so i hope you guys understand uh what we did here we try to broke the uh break the number right break the input so from here once we get the game set up we get the sprite name we get the matching number we call this this one to set up this one calls this break so the brick will break the input that comes in find the pair once that that is done so what we can do is we can delete this because this is actually slowing it down so now if we run it again it should be very quick and then it will call the broadcast and it will set it correctly so now let me run this real quick it should be quick so you see this once this is populated it takes some time you see it change it immediately right we took the uh say out right okay so i hope you guys understand so we'll see you guys in the next video uh next video we will try to complete all of them and we will work on the covering the uh the each of these sprites okay thank you very much uh see you guys next time bye