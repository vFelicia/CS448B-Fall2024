hi and welcome everyone my name is maureen saladombrowski and i work with project guts in santa fe new mexico in this video we're going to explore computational science a new type of science made possible by computers and the impact it's having on our everyday lives computational science can be seen as the third leg of science in addition to theoretical and experimental science it lies at the intersection of computer science mathematics and science computational science uses mathematics and computer science to model realworld problems and conduct simulation experiments computational science is made possible by the advent of powerful computers increases in computational power have enabled us to design and conduct experiments on models of systems that are too big too expensive or too dangerous to experiment with in the real world increased computational power allows us to run multiple whatif scenarios very quickly we also collect and analyze large amounts of data produced by these models but it is important to note that computational science does not replace traditional field experimentation each approach is appropriate in different situations computational science opens up new opportunities for problem solving and empowering students as scientists we use the computational science cycle to describe the process used by computational scientists we start by selecting a real world problem or phenomenon we're interested in studying then we need to make a simplified version of the real world doing so produces an abstraction for a model next we go from the abstract idea for a model to a computational model by representing the components and behaviors in terms of formal mathematics and algorithms the next step is to translate the algorithms into a computer code these four steps are called computer modeling finally we run simulations using the computer model we created as an experimental testbed simulations run time forward as if we could speed up time to see how the future unfolds during the simulation we can produce and capture data from these data we draw conclusions and interpret if our model has any basis in reality if the model reproduces some features of reality that we care about as compared to the real world data perhaps it can be used to help us understand or make predictions about the real world scientists and researchers use computer models to study a wide variety of phenomenon let's hear from melanie moses melanie is a computer scientist and biologist she uses computer simulations of ant colonies to study and design computer networks a professor in the department of computer science here at unm and i also have an appointment in the department of biology and i'm going to tell you about some research that we've been doing in my lab over the last couple of years using agentbased models very much like the kinds of agentbased models that you all are learning to build and we've used those models to study complex systems and the systems we focus on are ant colonies and computer systems and we learn a lot about each system by studying the other so in our models foragers are searching for food on a grid and upon finding this food they decide whether or not to return to where they went use inside fidelity or to communicate using pheromones and we used a technique called genetic algorithms to evolve the parameters of the model so these in other words are many different ways that the ants could behave many different ways they could move many different ways they could balance memory and communication and our goal was to find the way that maximized the rate that seeds were collected in a fixed period of time so we learned a great deal about what we think the ants in the field are doing and what good strategies for foraging collectively are so we then wanted to take those strategies and do something with them this was going to be sort of our final test about whether the strategies really worked and so what we did is we took those strategies and we programmed them we use them as the programs that govern swarms of robots so we built these robots in our labs these are robots controlled by iphones there's an iphone up here and a pretty simple motor and a few sensors and these robots then we send them out collectively we have a group of six of them and we send them out to forage using the behaviors that the ants have told us are good foraging behaviors what i told you about is um you know kind of my belief that these computational and biological systems are both these kind of complex systems where you have interacting agents that are hooked together by networks of communication and we can use computer science we can use models to reveal how biology biological complex systems work and on the other hand we can go to biology and we can ask how do distributed strategies work in particular these ants taught us that you can have a scalable distributed search mechanism by balancing individual memory uh with pheromone communication and we were able to take that and put that into swarm robotics so this is a case where we have mobile computers moving around interacting with each other that can now imitate the way that ants communicate with each other to achieve some task and i think this sort of approach um is important because as computer science as computers become more and more internetworked their interactions with humans with each other with the physical world all um introduce this new layer of complexity and i think that biology has evolved many interesting solutions to these these sorts of complex challenges and so i'm hopeful that we actually will learn a great deal more about how to build computer systems by studying biological systems stephen guerin is a computational scientist who uses modeling and simulation to address public safety issues such as emergency evacuation planning hi my name is steven guerin i'm working here in santa fe at a company called redfish and another one called sim table where we're an applied complexity company which is where we're taking ideas coming out of places like santa fe institute unm los alamos and sandia looking at complex systems and finding applications to them in the real world some of the tools that we're using are things like agentbased modeling which you're learning in tools like netlogo machine learning machine vision statistics and probability are kind of you come together into ways that people can come around a physical interactive table to look at emergency management issues like how will a fire spread how will fluid move down in a dam break how what's the social side of an evacuation who's going to shelter in place who might evacuate and also the traffic dynamics arising from these instances so instead of traditionally presenting our results up on a screen or on a wall either on the laptop or on the wall we're taking the same projector and projecting it down onto surfaces or around the room and then making those surfaces interactive by watching that same surface with a camera so this has nice challenges of how do you how do you detect where a laser pointer is clicking on a very nonuniform surface and map that up to a projector or how do i detect where somebody's hand is or their their body is so these are all nice problems in machine vision at the core of i think computer science today and many applications in addition with simulation big data and analytics as well as machine learning so what we have here up on the top maybe out of frame as we pan over here is we have a projector that is just an offtheshelf projector projecting on a table we have a web camera and a mac mini bolted on the back and that's the full extent of the computation that's going on and we're projecting that down onto a table here and we'll turn off the lights here so you can get a better view of it and basically you're seeing the camera taking a picture of this table and reflecting these white uh borders back so i don't know if you can see my hands in here or the laser pointer and in the beginning you can see there's a little bit uh well first of all the camera is upside down flipped and it's a wide angle so the image is a little bowed so the first algorithm we're going to do is we're going to take the projector space and convert the x and y of the projectors into a binary code and there's a particular kind of binary code called gray code that we're going to now come through and project that great code of all the position coordinates and let the camera take a photo and it's learning for every pixel in the camera it's positioned in camera space and then converting that to a projector space so once the the camera registers that we're able to bring up gis information right now the table is flat and we're projecting the area of santa fe here for instance and we also have the ability to use my laser pointer and make the surface interactive the first thing i'm going to do is i'm going to put it into 3d scan mode and i'm going to make some arbitrary hills so imagine a firefighter wanted to train on how fire behaves when it's going through a valley or through a saddle point and so we make uh we have the ability now to project some lines on the table and this is a sinusoidal grayscale pattern and based on how the stripes move and the displacement of the camera from the projector there's enough information to recover the height of the sand so that scanning process lets us now use that as a real information in a fire the other way we like to use this is loading a known topography like in santa fe and let me turn off all these different layers for you first and we start off with the colors of the rainbow and we can also click on any one location in here and fly to that position in google earth so now we're registered in gis space so what i'm going to do now with the colors of the rainbow is i'm going to move the sand from the low points kind of the red points and using the colors of the rainbow roy g biv red orange yellow green blue indigo and violet we're going to make the terrain of santa fe and i'll take my trusty piece of wood here and get the bulk of the sand to the east in santa fe in the east mountains this is north on the table i'm just going to bring the sand in here roughly and then we'll do a little finer detail with the hands so this is um so right now we're forming the ski basin here's the santa fe uh watershed coming down here with the the mcclure nichols reservoir cerro gordo this is hyde park coming through here up to the ski basin and this is thompson peak in the east and so part of this is we call tangible computing uh and it lets people kind of interact with a real surface and and actually form the surface and get a little bit of muscle memory as people learn in different ways some people can just look at a contour map like an expert but some people learn contours in a different way in elevation and being able to form it with their hands has some advantage so this is a roughly santa fe with the mountains in the east and now we can layer on different pieces of information here we're going to show i'll turn on hill shading so if you think of a a raster or bitmap with elevations we can look at every point on that patch like for your net logo and look at its eight neighbors and figure out what direction that patch is uh facing we call that aspect and gis and then we can color that or shade it based on where the sun is so here i'll move the sun to the east or the west and we can put a little bit more detail on here the elevation data was coming from the usgs at a 10 meter resolution per pixel we can now lay around things like the roads as a polyline or as a structures which are points so these are the houses and we can also come in and inspect certain areas so i can say well what is the fuel or vegetation type in any one of these pixels so it's it's like i'm inspecting a patch and it's a patch variable and that ultimately we're going to have a fire model on here that wants to move uphill downwind it'll be a function of the fuel type as well as the strength and direction of the wind which is a single vector here with the strength and direction of the wind indicated so once we have this in here while i was inspecting the patch layer and we're showing elevation but i can actually show the fuels layer also so here's your ponderosa pine pinion juniper and grass and chemisa and so once we have this loaded i've got all the features necessary to light a fire and having a biased cellular automata model of how fire spreads so let's put this guy into fire mode and we can start up a fire maybe down uh near uh this kind of upper canyon and cerro gordo kind of intersecting here and if you can see it's maybe easier to see on the terrain view here so we have a fire spread now that's a function of the direction of the wind and the slope and i can speed up time and we'll watch that thing spread or we can also simulate what if there was spotting behavior up on the hills as the wind is pushing it and we can also think about the human response of where would i put maybe an air tanker to slow down the head of the fire the direction in which it's going which is a very dangerous place to put human resources so we want to use our airplane to slow down the fire there and we maybe put our humans uh with a hand crew at the heel or the base of the fire away from you know downhill and down wind or upwind of the fire excuse me and these guys will have a certain production rate be easier to see if i turn off the roads here and so these guys are making their line in a certain rate we can also then introduce things like a bulldozer team who might be a resource of arriving later as the fire gets more progressed but you can you know compare compare their progression rates to the hand crews over time so they're able to dig a lot more line to contain this fire so this is the physical aspect of a fire we can also turn on the roads and the structures and for every house we can simulate an evacuee or one in this case one and a half evacuees per house and start to look at where we'd expect congestion to be so now we can have the fire service interacting with public safety or the police who are going to be in charge of the evacuation typically these guys train separately on their part of the problem this lets them come together around a common problem and deal with those issues so this is a first instance of using agentbased modeling in the real world kind of a new form of human computer interaction that takes advantage of machine learning simulation and um in a lot of statistics so think of this as new ways of of solving problems this is sim table as we've seen computational science is a new branch of science that integrates computational thinking and computing into the sciences scientists are using computer modeling and simulation to understand predict and prevent the daunting problems we face such as climate change loss of biodiversity energy consumption and epidemics you