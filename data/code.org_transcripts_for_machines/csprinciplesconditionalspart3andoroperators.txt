You can add even more complexity to your conditional statements by asking two questions at the same time. We use the AND and OR operators to check two Boolean expressions at once. Let's talk about OR first. If we wanted to, for example, express that you can be younger than 5 years old or older than 95 years old to get free admission to the museum, we could express that like this [Typing sounds] Expressions that use the OR operator are true if either the first or the second expression is true. Only when both expressions are false does the OR expression evaluate to false. The AND operator is more strict. What if we wanted to say that to get the student pricing at the museum you need to be between 12 and 21 years old? We could express that as checking whether age is greater than 12 and age is less than 21. If only one of these conditions is true, that's not good enough. Both conditions must be true to get the student discount. More and more complex questions can be represented with combinations of AND and OR statements. What if the museum gives the student pricing to everyone if it's Tuesday or Thursday, but on every other day, you still need to be between the ages of 12 and 21 to get a discount? We could express that like this If the day is Tuesday or the day is Thursday or your age is greater than 12 and age is less than 21, then you get the student pricing. Else, you get regular pricing. When using text, use parentheses to group Boolean expressions together. when When evaluating this complex conditional, the computer will evaluate each Boolean expression separately and then use the rules of AND and OR to determine if the whole expression is true or false. So if the day is Monday and the user is 25, the code would run like this First, the computer checks if the day is Tuesday. It's not, so that is false. Then, the computer checks if the day is Thursday. It's also not, so that it is false, as well. Since it's not Tuesday or Thursday, and at least one side must be true for an OR statement to evaluate to true, that whole expression evaluates to false. Then the computer checks the other side of the OR, since that could be true. The computer checks if the age is greater than 12. 25 is greater than 12, so that statement is true. Now the computer checks if the age is less than 21. 25 is not less than 21, so that statement is false. Since this was an AND statement, but only one side was true, this whole expression evaluates to false and the message displays that the user gets regular pricing. For a human, perhaps this answer was obvious from the beginning, because we are actually pretty good at dealing with logic statements when they represent real life decision making. But the computer needs to evaluate every expression until it can determine whether the condition is true or false. Many beginner programmers make a mistake while trying to write this expression Is the day Tuesday or Thursday? Notice the subtle difference between the correct code and this version. This is often the result of the fact that in English, we would say, "Is the day Tuesday or Thursday?" However, remember that computer questions are different, so we have to ask, "Is the day equal to Tuesday or is the day equal to Thursday?" so that the computer will understand. Computers do exactly what we program them to do, but with conditionals, we can simulate complex decisionmaking and have the computer adapt to changes or even seem intelligent to humans.