let's explore the concept of casting and rounding using shapes casting converts one type of variable into another compatible type we know two different ways to represent number of values in java integers which have no fractional or decimal point and doubles which always have a fractional or decimal point we can convert or cast integers to doubles and vice versa imagine i have a machine to give back exact change to a customer the dollar slot needs to know how many dollars to dispense captain can help us do this to understand what happens when we cast a double to an integer or an integer to a double let's think of integers as values that fit inside of squares and doubles as values that fit in rectangles we can think of casting as transforming a numeric value to fit within a given shape when casting a double into inch the double must transform to fit in a square when casting an int into a double the int must transform to fit in a rectangle for example if we want to cast the integer seven into a double we take the square container in seven and move it into the rectangle when 7 is casted into a double it is now 7.0 now what happens when we cast a double into an int we might think that when transforming a double such as 3.99 into an int that it would be rounded to the nearest whole number four but that is not what happens when casting remember when casting from double to int we transform the current rectangle into a square in this case we could transform our rectangle into a square by cutting down the middle and removing the decimal and the decimal numbers behind them now we have a square which is a perfect fit to cast in java we can put the data type we want to cast 2 in parenthesis in front of the value if you are casting from a double to an integer this will truncate or shorten the number to everything before the decimal point back to our cast machine let's use casting to know how many dollar bills the machines have returned testing allows us to do even more interesting things with data in our programs you