You can also assign or update a particular index's value. You refer to the slot the same way. Names at index zero gets the value "Sarah" would replace the current value at index zero, just like assigning a new value to a variable. Once you have created a list, you can modify it by adding items, removing items or inserting items. To add an item to a list, you can use the appendItem() function. Let's add "Kelly" to the end of the list of names like this append item, names, "Kelly." Notice that appendItem() is a function that accepts two parameters the list name and the actual value that you want to add. Appending an item always adds the value to the end of the list. To remove an item, you use wait for it the removeItem() function. If we want to remove "Josh" from the list of names, we'd need to know the index where Josh is stored so we could do this remove item, names, one. When you remove items, the whole list shrinks and it closes the gap of the item that was removed. Now, our list has four items, indexed zero through three. Because the list shrank, items that come after the removal point are effectively reindexed, so if we once knew that Kelly was stored at index four, Kelly is now at index three. This is not a problem, but something to be mindful of. We can also insert items into the middle of the list with insertItem(), like this insert item, names, two, "Brook." The insertItem() function needs three parameters the name of the list, the index you want the new item to appear at and the value to insert. Inserting an item grows the size of the list. Similar to removeItem(), the items in the list that come after the insertion point will be reindexed. Because indexes are just numbers, you can put anything in between the square brackets that evaluates to a number, like variables or even arithmetic expressions. For example, let's say we're keeping track of temperature readings in a location with a variable called "loc." Var loc gets three. We can change the value in numList at index loc like this numList at loc gets one.