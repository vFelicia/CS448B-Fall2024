let's say we're at the library looking for a specific book there are many books on the shelf but the books are not labeled the librarian let us know that the books are in alphabetical order how are we supposed to find the book we're looking for we could try doing a linear search a linear search is a search algorithm that checks each item in order until the target is found so we could start by checking the first book then the second book and so on this could work but it'll take a while we might have to check all the books on the shelf to find what we're looking for a linear search works best for a relatively small unsorted list we could try doing a binary search a binary search is a search algorithm that finds a target element in a sorted list by dividing the list in half in each iteration we first start by checking the book in the middle then we know if the book we're looking for comes before or after the book we picked up this eliminates half the books we need to check then we can start at the middle of the books that remain with the strategy we can find the book we're looking for much faster a binary search can only be used with a sorted list it is more efficient than a linear search especially when working with a larger list the runtime of different algorithms can be compared by looking at the statement execution count the execution count is the number of times a code segment runs the binary search is more efficient because it has fewer checks to perform there are a couple of options when it comes to searching through a data set if the list is not too large a linear search is the way to go if the list is sorted a binary search can be used and is more efficient