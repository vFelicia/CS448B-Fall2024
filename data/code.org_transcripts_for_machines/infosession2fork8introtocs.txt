hi everyone uh we're here again for co.org second professional development session for educators uh and this is focused on our k through eight intro to computer science course thanks again for showing up my name is Katie aone I am the k through eight program manager for code.org and also today we have two other special guests with us uh we have other code.org employees hello hello so we have roxan and Brendan do you guys want to introduce what you do uh I'm Brendan I'm a software engineer here at code so I actually spend my days coding and I'm excited to trying out some of these tutorials for the first time I think this is a bit scar same for me and I do social media for code.org awesome so uh today's session will focus on the blockley lessons so our 20hour course is a mix of the unplugged lessons and the selfguided lessons we have 20 lessons and about half our unplugged lessons and half our selfguided lessons um the selfguided lessons don't come with lesson plans uh they're just different puzzles that users can follow um so your students will sit down and go through the whole stage and then when you move on to an unplugged lesson you can follow the lesson plans that are provided so these professional development sessions we're holding are a series of three um the session you're watching right now is session two out of three so last night at this professional development session one we focused on the unplugged lessons tonight we're focusing on the blockley puzzles and tomorrow we will be focusing on the online accounts system and teacher support um so today we'll be walking through a lot of the blockly puzzles and then we'll have a Q&A portion at the end so please feel free to ask questions during the whole entire session and we'll answer questions as at as they come up and then we'll also have a big block of Q&A at the end so I really encourage everyone to watch all three of these sessions they're meant to go together as a series and I especially encourage people to watch the first session about the unplugged unplugged lessons some teachers who run through the 20hour course might be tempted to skip the unplugged lessons and just have students run through all the blockly puzzles but I think it's very important for students to really verbalize about computer science Concepts and and talk with other students and the unplug lessons are a great way for them to get handson experience with the logic of computer science through the unplugged lessons um also watching all three sessions is great because if you ask questions during the sessions during the third session we uh will uh raffle off a $50 donors choose gift card to one public school teacher who's watching so let's jump right into the blockley portion of what we're up to today so if everyone out there could open up another tab or window in their browser and go to learn. code.org we can walk through the blockly puzzles together um I've picked out a bunch that we'll be looking at together but first I just want to explain kind of the the environment of blockley and what it all looks like just so we're all on the same page um so I'm actually going to start a screen share here so we can look at it all together uh so we'll notice when we come to learn.co dog we can see um all 20 stages so each stage is designed to be about an hour so the first time that the block leas puzzles come up is in stage two so just so we can get a look at what blockley looks like um we'll open it up here so blockley is a visual programming language which means that we're going to attach blocks like this together to write a program so some people ask us why we use a visual programming language versus a text based programming language something like JavaScript or something you might be able to picture on a screen just lots of text all written together um when students first learn computer science they're up against a couple different things um one being learning the logic of computer science so learning about repeat loops and learning about if statements and they're also up against syntax so basically um how everything fits together you know should I put a semicolon here should I put um a space here what's what's this word supposed to be like so we use a visual programming language to start students off because they're not making all of those syntax errors you're basically just putting blocks together and you there's not a a lot of ways to make it wrong so you can really focus on learning the logic of it and once you get the logic of it down you can move on to a text Bas programming language and focus more on the syntax of it um so here on the left side of our screen we have the Maze and this is the part where our program will execute our program will run uh in the middle we have the toolbar the toolbox sorry um and these are all the options of commands that our program can do so we can have our bird move forward we can have our bird turn left we can have our bird turn right so when I want to make the bird do one of these things I can click and drag it out to the workspace and when you see that little yellow arrow appear that means it's going to connect to it and it'll connect onto the onto the um program that we're building um I actually only want the bird to move forward two spaces on this grid so I'm going to remove one of these and drag it to the trash so out on the workspace is the program we've created so the bird's going to move forward once and then it's going to move forward again so I'm going to come down here and press the Run program and let's see what happens all right and our Angry Bird got all the way to the pig um so it says congratulations you completed puzzle one uh um so that's just kind of a setup of what blockly looks like so we are going to delve into some of the more complicated puzzles um so if everyone wants to take a look at um it is Stage Nine puzzle five so if every wants everyone wants to go to Stage Nine puzzle five we can all look at it together um so on this level the instructions say help me fill in all these holes with five shovel fulls of dirt hint you can put a repeat block inside the well block so we want to make our farmer fill in all of these holes on the field so the way I would look at this is saying the farmer got to move ahead each spot on the grid until there's nothing left so this block that's already out on the workspace says while there's a path ahead so I think that's a good place to start so we can say while there's a path ahead what do we want this farmer to do so we can say repeat and I want this farmer to fill in the shovel fulls of dirt five times so right now uh it's going to fill in five times while there's a path ahead but we have to make sure that the farmer also moves forward while there's a path ahead so let's run this program and see what happens so the little waves coming out of the farmer are her checking if there is a path ahead and if there is she's doing whatever I put inside that command uh cool congratulations um so also something you can do with your students is pair programming which is having two students at the computer together which is what RX s and Brendan are going to help us out with today um so PA programming can help students retention in computer science it can help them really internalize the concepts more um so the way that pair programming works is that um the student who sits at the computer and controls the mouse is the driver and this person controls The Mouse and the keyboard um and the other student is called the Navigator and the Navigator makes suggestions and points out errors and asks questions and kind of looks at the big picture of what you're trying to solve um so I think we should have rxan and Brendan demo some pair programming for us so let's take a look at stage 9 puzzle 7 which is also one of the farmer levels so let's we'll hand it over to them you have to turn your video on yeah do you want to just do it on my computer um yeah I also remind people they can ask questions time yes yeah um so please continue to ask questions um if anyone's any questions about anything or if you want to see a specific level demoed by us please uh just write in whatever level you'd like to see so let me just pull up that page on my computer and I'll just do it on this all right okay so Roan's going to drive okay and Brandon I guess I will navigate by giving ideas if I have any along the way really deep so what does it say fill it until the ground oh really deep hole we don't know how many shovel fulls of dirt it needs so you have to write a program that fills it until the ground is even all right so I have never tried this before I'm guessing we have to turn her around and that block is already on there turn right and then I think move forward we're learning how to drag a block right now on a computer we haven't used before um that is interesting um I'm not sure why it's doing that oh I think I got it to work all right hopefully we won't run into that again there we go um and then I think fill one is that it well we don't know how many how much soil it's going to take to fill this hole apparently we could try fill one okay there we go just moving the block into place let's just try it and see what happens so let's run the program uh so apparently we didn't fill it enough but we have a loop which keeps trying something while there is still a pile I guess that means while the hole is not filled so maybe instead of filling once we should use this instead we need Katie to teach us how to drag oh here we go so I guess we can fill once and then we can do this Loop which says while there was a pile do something yeah or maybe we don't even need to fill one you're right let's try dragging ah we dragged it away but it dragged both so let's let's split off the big loop and put that there and put s inside uh so it'll just repeat that yeah that sounds like a good idea should we try that yeah okay so we'll reset the program yep and then we'll run it again so now oh no try one or more of the blocks below to solve this puzzle while there is a hole I thought we did that but while there's a pile so we need to I think change where it says while there's pile the while there's a hole ah there's a difference so there must be different levels okay yeah should we try that yeah good thinking roxan I'm glad one of us knows how to program 10 9 8 seven this looks promising no I think she's stuck she did it oh okay so she kept filling the until there was no hole left anymore nice did we do it okay K yeah awesome job guys great uh thank you so one of the reasons I wanted to demo pair programming with roxan and Brendan is because they have less familiarity with the puzzles and I think it's a good way for edes educators to see how students might work together uh so when they had their their program up on the screen and they were trying to figure out you know why why wasn't their program working they were working together to figure out why um so let's look at a couple different puzzles as well um question okay what is the role of the driver so this is one of our questions um the role of the driver is to control the mouse and keyboard um and this might seem but not not in a way that they're just you know the robot performing whatever the Navigator wants um but the role of the driver is to um really kind of execute the vision of the Navigator while also providing um oh sorry um while also provid in kind of a way to move the puzzle forward maybe they'll they'll drag something out to the screen and the Navigator will say oh that's a great idea like good like let's let's build on that um all right so let's take a look at stage 11 puzzles five and six uh so I will just pull up stage 11 puzzles five and six so puzzle five of stage 11 is a way to get you introduced to the counter Loop so this puzzle asks you to draw squares with sides of 50 60 70 80 and 90 so we already have one function that says draw a square of length 50 out on the workspace so I'm just going to add a bunch of different functions to this screen to make sure it's going to draw all the squares that we want so we want it to do 50 60 70 80 and 90 so let's see if that works make make our artist go a little faster awesome so it says congratulations you completed puzzle five so when we move on to puzzle six we won't watch this video um so the directions for this says okay this program will use a counter to draw the same squares as last time you want the squares to be you want the square to be the same size as the counter so use the counter block so so basically puzzle 6 is showing you that you can do the same thing as puzzle five but with fewer blocks so you don't have to keep dragging out that draw Square block every single time you can say the counter block repeats something over again and changes it a little bit every time so our block says count with counter from 50 to 90 by 10 so it's basically saying we're going to draw a square whose sides are length of 50 go up sorry I didn't want to move that uh then we'll go up by 10 draw a square whose lengths are side 60 go up another 10 and keep going up 10 until you get to 90 so under variables I'm just going to drag this counter variable into the length slot because I don't want it to draw just a a number length I don't want it to draw just one square whose length is 60 I wanted to draw all of these different squares so let run this program we make it go a little faster cool so we completed puzzle six all right um and let's see Brendan and roxan try another pair of programming um so let's see them do a stage 13 puzzle 4 let me pull that up okay stage 13 puzzle four all right this is a new another farmer level okay we're going to step in Brendan will drive this time and I'll take a look at what he's doing so Define a new function that remove seven shovel holes so it seems like this time we want to remove and not fill a hole this is my first time ever writing a function that would be interesting then use it to write a program that helps me remove all the piles so first we do the function that removes seven shovel fools then we'll do a program that uses that function let's see so what's a function is this green thing here possibly a function it is so these are function definitions with the blue uh the blue stars in the corner are function definitions okay so this Phil five function is just given here as an example and and the goal of this puzzle is to fill in the you want to define the remove seven function and then use it to make sure the farmer wow okay this would be challenge so I guess what do you reckon we do roxan uh let's see okay well looks like we have three piles not seven we do yeah well each pile has this seven counter so that each pile has seven things of dirt in it oh I see I see okay so I guess this function here to remove seven it means it needs a loop that does something seven times and instead of filling it will moove right so I think that's the first step is it build a function first so I think we'll need a remove block and we'll probably need a loop around it first yeah so I guess we can copy the way Phil five does and we'll have a loop which repeats something X number of times so I guess seven okay so we do that we double click and then type seven and hit enter okay now we have a loop that does something seven times and where do we we find the under actions maybe uh good okay remove yes so remove one can we double click the one and just make it seven no apparently not that's what the repeat does I think you're right I was trying to look for a shortcut okay so now we have a function that does this remove seven things but we still have to uh make our farmer walk to the right place are they already start on one so how where how do we set up what the program starts with we have to define a program so we have actions move forward before everything I'm trying to look at where everything should we start try running the program and see what happens okay it's running oh look we're no so if I was a teacher walking around the room at this moment they might ask me a question on why is nothing happening when I run this program and that's a great question because the function definitions with the blue squares in the uh blue stars in the corner those are just the definitions you still have to call the function to make the farmer do anything so if you click on functions in the toolbox now you'll see your remove seven function and when you drag that out to the workspace your farmer will perform that function so we this is just known as remove seven and this block this is the there's a connection made between these two this is the function definition and that's the function that's calling the function okay so if I just put that there and run again it might do something yeah oh I just deleted it my bad okay we can try that I think we might need to move forward but that's just again I think you're right well we're on top of one pile of dirt so maybe something will happen for the first one but obviously not all oh look it just counted down to zero okay we've done our first one you're completely right roxan we need we need a bit more here so what do we need to do here I think since we start on a pile of dirt we should have the remove seven first and then a move forward and then we could repeat that yeah so it sounds like another loop there'll be a loop for the action that we do and the loop will be path ahead oh yeah while path ahead that sounds pretty solid well let's see while there's a path ahead remove seven of them uh let's reset first I think we still need to move forward oh yeah you're right we totally need to move forward we remove seven first and then we move forward after that I put both of those in the so we have remove seven and a move forward and it keeps going well there's path ahead I don't know if there might always be path ahead but I guess we can try running and see what happens so let's run our program okay first one oh you know what we totally forgot to turn around okay so let's reset so we see where we start and clearly we need to move forward and then turn left and then move forward again onto the next pile of dirt how's that I'm finding it really nice as the driver with my hand on the mouse is I lose perspective it's really nice to have someone next to me who's watching what I'm doing and has like a good perspective on what to do next so off we go okay this looks promising H I think they're going to turn around the circle oh yeah we need a turn right yeah I think after the move forward interesting so that she'll go in the zigzag right so oops uh so what happens they they we removed seven they move forward turn left move forward again they're on a pile of dirt we'll need to remove seven again at that point no because sometimes they go forward and they they kind of zigzag Katie as a teacher do you want to step in here with any advice uh well I would say well so what happened last time she got to the second pile of dirt oh she just needs to turn right again so we look the same as we did sorry I totally right this is good to have so many eyeballs on the same problem yeah and it's nice that you can run the program and then start it over so we can just see where we're at I'm feeling good about this WOW cool nice work a happy job that was great that was a tough one you did great on that um so uh as the educator role in this scenario um I was trying to ask prompting questions instead of just giving them the answers I asked them a question and it kind of prompted in Brendan's mind oh yeah I should should be turning right I should be going that way um and also in PA programming you have the Navigator and the driver and you have them switch every once in a while so depending on your classroom setting you might want to have them switch every 10 minutes or kind of like once um once in a classroom period um question uh we have another question it says will there be more debugging levels added throughout the course like the final level that really helped my students figure out how to debug their own problems um we might have more debugging levels in the courses that we're um probably going to be releasing in the summer or fall um I think they are really helpful for students and it's really great to know feedback that educators are also finding that they're helpful for their students um so we'll definitely take that into account while we're creating our new courses go ahead a question what's a debugging uh level uh I'm actually gonna have you um do a debugging level soon so you'll see what they are okay okay um great so there's currently uh only one debugging stage in this 20 hour um course but that's that's great feedback to know that you guys want more um so let's look just at a couple more puzzles um let's look at uh Stage 15 puzzle six um we'll just look at a couple more puzzles because I want to save the bulk of the time for Q&A because I know we had a bunch of questions we didn't get to answer last night as well um so me pull up Stage 15 puzzle 6 so the directions in this level say using draw Square as an example add an input named length to draw a triangle then draw triangles in different sizes so um the input to functions basically say that I can draw a certain I can I can perform a certain function and make it a little different each time so I can draw a triangle but I can have them be different sizes so I to create an input for your function you click on the blue star and you drag input name into input and then we write write what we want our input name to be I'm going to make it be length I'll hit enter Then to close out of this little menu I'll click the blue star again so now to call this function with an input I'll drag out my draw triangle function with length I'll drag out two of them because I want to draw two triangles and I will say I want to I actually know that this first one is length of 100 I think the second one is length of 200 so we'll just copy that and also what we're going to have to do here is that we're um we're actually going to say move forward by whatever length we have set in our input so we'll drag away this number block and drag in a length block here so let's run this program see what happens oh here's a chance for me to debug I didn't do this right okay so um so we have our first draw triangle function with length 100 and then I said just draw this same one in that same spot that he ended up in so I actually want him to move forward 100 pixels in between those functions so let's reset and try that again okay congratulations okay um and let's see roxan and Brendan try one more level one of the debugging levels actually um so let's look at stage 17 puzzle Seven's some more questions oh okay okay um so the debugging levels are set up in that there's a goal for your program to complete and you have prewritten code that is close but not right so you have to identify what's wrong with the code and make it work so take a look at this one so what should I do to help me remove all the piles okay well the first step of debugging is always to run the program well it should be analyzed the program it's always it's great to just run the program first and see what's going wrong especially because this system is so visual looks good so far using all the necessary types of blocks but we should try using them more of them so we we're just missing out on something extra so what happened the person she walked along she turned too soon she did so what does a program do talk us through it roxan well she needs to go forward and then remove piles um and then turn to go around the whole Square so let's look at the definition for removing the entire Square Square um well first of all the inside loop says repeat two times to move forward and I think we need four or three I'm not sure if the turn counts but I would yeah I I would think it should be four times not two times I think you're right yeah is removing where repeat well let's see let's try it out so you want to remove the um CH I think repeat four times seems right because there's four sides to the square and the left turn seems right so let's try that ah you saw she was kind of bumping up against the edge of the of the field it's almost like she was trying to walk too far this time so is it three let's go question see I think the way this program works is we have two Loops we have an outer loop and an inner loop the inner loop is the one we do repeatedly for starters and it moves forward and removes a pile of dirt then we go back move forward remove another pile of dirt I think what that's saying is that's each time she steps forwards then she gets done with that then she turns left and then does starts off again up another Edge so it sounds like yeah you only want to walk three steps forward each time and that should take her to the next corner to turn yeah so we change that to a three I think so starting at one spot so now she should walk forward one two three times then turn okay good this is really the first time we're seeing these puzzles so this is slightly terrifying it's it's worked out great it's challenging but as long as you go step by step we did it all right congratulations excellent I do want to thank our amazing volunteers uh for helping us modeling pair programming uh it's important to see and I think uh seeing them work out problems is are are ways that you can tell students to work with each other you know they were working together there was lots of great teamwork they weren't shooting down others ideas um so I think that was great to see so um I think I will stop my screen share at the moment and uh um take some more Q&A questions so what else do we have roxan uh in the Futures will teachers be able to see how many tries or runs it takes the student to complete each level you know that's not something we currently have set up um but it is something that we could include in the dashboard um if you have suggestions to make to any of our materials you can write them in our forums which I have posted I links posted to both of our forums in the event details on the event page for these PD sessions um so you can go to forums. code.org or you can find our uservoice forum and the the link is um on the event page for this I add something yes of course I just one thing to add we do track um when students drop out of a level so if they keep trying and just abandon the whole tutorial to begin with so that is helping us improve levels if there's one that constantly students are getting stuck on and they're just giving up then that's something we want to improve so um we are tracking that um as far as like how many students are completing each level yeah so that's something we're doing on an organization wide level but if if teachers want to see specifically how many tries it takes a specific student to do each level we don't track that yet um but we we could definitely do that in the future um okay some questions from Rhonda um still uncertain about the struction of lesson two is there a teacher guide for it so currently the way it works is that we have lesson plans for the unplugged lesson so the offline lessons that don't use the use of a computer so when you look on learn. code.org it's um there're the stages that only have seemingly there there's just one section so it's stage one stage three stage four those all have lesson plans and they don't include the use of a computer for a student so the stages that are the online selfguided puzzles that we've been looking at those don't include a lesson plan for teachers because they're intended for students to sit down at the beginning of whenever you're going to do that lesson students sit down at the computer and they run through all of the puzzles them themselves themselves they have videos that help them go along they can pair program with other students but there's no specific teacher guide on how to introduce the lesson or maybe common mistakes that students might make so those are things those are materials we're um considering developing the F in the future for our future courses um but it there are current there's currently no teacher lesson plan for the online lessons they're just for students to run through all right there another one from Christina oh here is something that I would um love Brendan to shed some light on because Brendan is one of our uh programmers here at code.org so maybe this is a question he can help us out with sure the question is is input a real world programming term or is it variable I'm confused at the vocab here and how to clarify that for my students it's a really good question um I think we do think of parameters uh as being the formal word um well depends we have three things we have variables which are the values that we um keep track of like counter in an early example when you have a function when you give an argument or we the things we pass into a function are often called either an argument or a parameter I think in in our case we're using input as the input to a function is that right input or parameter or parameter okay yeah so there are kind of three words that get used in different ways um real world programming I think we talk about uh parameters and arguments to a function okay um maybe that's something we want to think about how we communicate it's a good question okay um we refer to them in the videos as functions with parameters um and we use input in the blocks but we don't use the word arguments in the blockly language um I mean so a parameter is a kind of a variable right um yes it's a you pass it into the function and then it's available to the function as a variable as you use the function I actually don't remember where inputs used in our tutorials so maybe you'll remind me how we use the word input um it was the on the um basically it's a it's a parameter for a function Okay Okay so we've just made a a friendlier word to than parameter I guess yep uh let's see let's take a look at some of these other questions um here's a great question um it says should we as teachers go through the courses before the students smiley face um so I would say that it would be best to go through the student go through the courses go through the course before the students um if that's not possible to go through the entire course before the students I think it would be helpful to at least keep a you know keep a couple lessons ahead of the students so you know if they ask you about a certain puzzle it's helpful that if you're going over to help him in the classroom you can say oh yeah I do know this puzzle so it it it will at least be easier to answer their questions if you've done it before um some other things we might think about when answering debugging questions with students are that um I've seen this in schools is that some students might be tempted to just keep adding blocks to their program um so you'll help a student in a classroom that you know has 30 blocks out on their workspace and it's just a little overwhelming so at that point I might ask students to clear their workspace and think about the logic behind the problem um rather than just keeping adding blocks um basically you can ask students what you would want your program to do explain it in words first so you can either have them write it down or um if you prep beforehand you can uh basically like print out or Draw out what the blocks look like so you could have little pieces of paper that have each different command on a little piece of paper and you could have students rearrange the pieces of paper to figure out and practice um what they might want their program to look like before they actually do it on the computer um are there other questions we can answer here or can weuse possibly go and answer some of the questions from the first sessions hangout that we didn't get to sure just few minutes and great anyone watching feel free to post more questions below in the last 15 minutes we have great um so yeah definitely if students are trying to debug their problems or work them out with work them out with a PA programming partner um asking them to like take a step back and think about what the what their program should be doing you know what the bird should be doing to get to the pig and that can help with pattern recognition saying you know if you want the bird to move forward five times should you just drag out the move forward block five times or are there patterns you're seeing in that you could have it just repeat five times and put a move forward block inside that um so we're just checking on some of the questions that came from the first PD session to see if we can answer some of those if there are any answered any of uh We've answered some of them oh it doesn't show you which ones you've already answered see um oh these were just the ones that we answered actually I don't know if we can see the the raw questions from last night that's okay um few different questions coming in there's one uh Brendan um could you explain the difference between JavaScript and HTML sure think you wonderand back into a camera view so all web pages use HTML stands for hypertext markup language and if you just go to a web page and say view Source you will see um HTML it's pretty much just the text that appears on the page with these little tags around it which tell it to do different things like make this a block and move this over here and make this a heading up here and make this order down here that's just a static piece of text JavaScript is actually a little programming language that you can then add to the web page and sometimes you'll see some little script tags in the page or sometimes there'll be other files that get loaded and they're full of JavaScript and that's actually a programming language with things like if statements while statements Loops code and JavaScript can do all sorts of things that only code can do it can say if the user clicks this button then change this text on the page or if they click here then go ask a server for some information and bring it back again so all web pages have HTML and optionally they can include some JavaScript which is the programming language that kind of supplements that so do you consider HTML code it's interesting it is a form of code in that it's instructions for a computer you're telling the computer what to do um and the computer does what it does uh presents it the thing that JavaScript adds is all the uh instead of just being um a flat kind of presentation JavaScript then has control flow so you can say if this then do this do this five times so HTML is a form of code and then JavaScript becomes a full programming language which does a bit more that's my opinion great that's an awesome answer um so also um we have a question that says I would like to see levels 15 seven eight and nine um so let me start screen sharing we can take a look at those levels too um let's see my screen share button is not working is yours working okay um we actually ran into this issue last night we can figure this out later um let's see is it possible to get the puzzle up and just show it oh yeah let's do that okay um so it would be uh 80 8 does that even work um so the screen share button is not working at the moment um so I know this is tough to see um but I can I can talk us through it um if everyone wants to look at it on their screen let me just make this window a little wider uh so puzzle Seven On Stage 15 says add an input named length to draw a house and build a big house for the elephant with edges 150 pixels long so we have a bunch of definitions out on our workspace one of them is draw a square one of them is draws triangle and then we have this new function called Draw to draw a house So the instructions ask us to add an input that says length so we can draw houses with different lengths so I'm going to add an input by clicking on the blue blue star I'm going to add input name of length I'm going to spell it right I'm going to click on the blue star to push it away um and now I'm going to say I'm going to drag out our draw house and I want the length to be 150 so I also am thinking about if it's drawing it's first drawing this square and then it's drawing this triangle on top some of these other numbers might have to change as well so we want it to move forward by whatever length it's drawing so I'm going to put that length variable in there and then I also wanted to draw a half draws draw the square and draw the triangle with with whatever length I'm going to tell it to so I'm going to put the variables length in both of those slots as well so when I hit run program it says congratulations um is there any way we can see if is there any way if people can let us know via the question and answer app if you can see anything of what's happening on the the screen um let's see um well let me just quickly go over puzzles eight and nine I'll just explain them um so here it says modify the draw House Pro uh blocks from the previous puzzle um something weird happened in that I don't see the blocks from the previous puzzle but what I would do is I would um I'm actually G to go back to the previous puzzle do you think it'll let me copy this no um so what I would do is I would create that draw house function and basically what you want to do is you want to get the artist to be in the right position to uh start the next house so when the zombie artist performs the first draw house function he ends up in a certain spot which is um at the top or at the top of the square in the top leftand corner of the square so basically you want to have the zombie turn enough so that it can travel across the top edge of the square you want it to make a 90 degree turn and travel down to the bottom right hand corner of the square and then turn again so it's facing the right direction to start the new house function um so that's how I would solve that puzzle and then for puzzle nine um it's basically just drawing a house function uh recreating the draw house function from scratch and then um doing the same kind of getting that to be in the right starting place to start the ne next house function all right so I think we have time for a couple more questions let's see what is um you have the or okay questions um some of the solution Pages um one of our questions says some of the solution Pages aren't available especially for level 15 um that's something one of our Engineers is actually working on right now to make sure that the all the solutions are available for the teachers um so that's something we're working on and hopefully we'll have fixed soon um so we also have a question we have some more uh programming language questions um one of our questions says uh are there other languages used in HTML than JavaScript in browsers or maybe other questions other languages used in browsers other than JavaScript yeah um when you have a we can all be on camera at the same time um when you have a web browser with HTML for the page the only real programming language that can run in the page is Javascript that's pretty much just the standard um there are some other languages you can write in which convert themselves into JavaScript before you get see the website um and of course on the server s you can have all these different languages that generate the web pages and you can have them running a web pages can talk to the server and that's where you have your jav PHP uh nodejs which is Javascript on the server so there are a lot of other languages out there but in the browser itself at the end of the day it's really JavaScript great thank you um I can answer really fast if you're like difference between XML and HTML um they look very similar XML is more general purpose but they both have the same bracket tags and close tags everywhere so they look very similar they have a very related history to each other XML is just more general purpose HTML is just for browsers all right great um I do you have an answer to that one I have one quick thought the question was which which IDE would you suggest for programming in Java language I don't have an answer there's a ton of them if anyone doesn't know an IDE is an integrated development environment so it's a place where you have a text editor you can write your program then you can run your program debug it and do everything in this one environment um but I would just start googling away and find forums where people get together and talk about them and people list the pros and cons of all of them um Google and search engines in general Google and being and all the others they're all your friends here so it's just a matter of doing a lot of searching and finding a community of people who have good advice is there one that you like I don't program in Java anymore I think the world's changing I used to do it okay great um and let's actually just uh answer one last question um uh we have a question about um someone looking forward to the the second level of Middle School curriculum is this still on schedule to be available prior to August 2014 um we are hoping to have our middle school specific courses available um probably I would say sometime for fall 2014 I I can't give an exact date on exactly when it's going to happen um but we should have it ready for the fall um so it is getting towards six o'clock so I want to respect everyone's time um thank you so much for joining us and I want to give one last thanks to roxan and Brendan who are such great volunteers I'll give them a round of applause um yes so please uh tune in to our last session in our series of three tomorrow at 500 p.m. Pacific time so January 29th Wednesday so thanks again for tuning in um if you still have more questions or want to more follow up on these things please visit our forums so forums. c.org um and the Forum links are also posted in the event page for this event so um thank you again for coming and we'll see everybody tomorrow have a great night