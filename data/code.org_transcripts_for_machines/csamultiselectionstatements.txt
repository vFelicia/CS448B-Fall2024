we have used oneway and twoway selection statements to check if one condition is true sometimes we need to check multiple conditions for example if the temperature is greater than 75 we turn on the ac if the temperature is less than 70 we turn on the heat otherwise we leave the thermostat alone we could write nested if statements to do this or we can use a multiselection statement a multiselection statement is a statement that selects a single action from three or more conditional statements based on which boolean expression is true in java we write multiselection statements using if else if else we can specify the outcomes we want to happen and their conditions so our programs can make these decisions for us let's say we want to check if a number was positive negative or zero we can use a multiselection statement to check each of these conditions first we start with the if statement our condition will check if a number is less than zero if it is less than zero we'll print number is negative to check the next condition we add an else if statement this condition will check if a number is greater than 0. if it is greater than 0 we print number is positive then we add the else statement this will print number is zero because none of the conditions were true now we have three different outcomes that can occur depending on which condition is true with a multiselection statement each condition is checked from the top down if the first condition is true its block of code is executed and the rest of the conditions are ignored if the first condition is false the second condition is evaluated if it is true its block of code is executed if none of the conditions are true then the final else statement will be executed you can have as many else if statements as you need for a program multiselection statements are useful when we need to check multiple conditions to determine the specific task we want to execute they simplify our code making it easier to read and maintain