hi my name is mayal Shaw I'm one of the engineers at code.org and I helped build applab and today we're going to demonstrate an app that I built called whack and emoji and uh I'll talk about how we actually built it here's what whack and Emoji looks like um there's a little Emoji that's going to appear on a bunch of green buttons and you have to click on it every time you click on the Emoji you get 100 points every time you click on something else you lose 100 points and at the end it shows you how many points you and there's a little button to go and play again so let's talk about how to build it so I'm making a new applab project I'm going to give it a name like that we're going to have three different screens on the app there's going to be the welcome screen there's going to be the uh game screen where you actually playing the game and there's going to be a screen where you see your final score and get an option to play again so so let's make those screens I'm going to make a screen for the game here I'm going to make a screen for welcoming the user and that'll be the first one they'll see and I'll make a screen for showing their final score now let's build the controls that will actually go on the welcome screen and welcome screen will be pretty simple it'll be the text saying welcome to whack an emoji bang bang bang nice big font not that big and we'll put it right there and then we'll put big green buttons that says start new game start new game here and we'll call the button play button we're going to wire up what the play button does in just a little bit uh your screen size is 320 pixels across and 480 pixels down and it doesn't sound like a lot but that's actually a pretty good number for any game that's going to show up on your phone next we're going to build the game screen the game screen is going to be a grid of uh four green buttons uh going left four green buttons going down and then there'll be a little smiley face that will appear on some of the green buttons so at the bottom we have a label showing what your score is and a number that's going to change and let's let's drag a background image on here that's going to have our game board and we're just going to use this file which I've already uploaded if you want to precisely position your control you can use the properties Tab and say this is going to go at exactly this location and be exactly this size so let's put the background right there and then we'll have a label that's going to be the Emoji that's going to hop around from button to button and so this is the Emoji label and the text is going to be an emoji right there let's make it bigger and let's put it on the first button so put it at 6060 right there let's make it a little bigger okay um and now um the code so we're going to have a function to actually place the game and um the game is going to be about 15 seconds and every second the Emoji is going to jump from one position to another position so to have something happen every 15 seconds we can use the set interval function and you give it a function to call every so many seconds so we're going to have the move Emoji function and we're going to call it every 1,000 millisecond seconds or every every second and then to end the game what we're going to do is say set timeout and that'll call a function after a certain amount of time and the function we're going to call is endgame and we're going to call that after 15,000 milliseconds or 15 seconds now let's define the two functions function move Emoji function and game so to move the Emoji uh I'm going to set the position of the Emoji label to be some random uh location in here so I need to generate two random numbers random number 03 so this will generate a random number between 0 and three inclusive and this will generate a second second random number okay to figure out where the Emoji is going to go we're going to call set position on the Emoji and then uh we know that the position is going to begin at 6060 and is going to be offet by the random number we generate in the x axis time 60 and the random number we generate and the Y AIS time 50 that should line up pretty well with this let's just try it out yeah there we go then we also have functions for when you click on the Emoji label we're going to increase your score by 100 and we're going to update the score counter here when you click on the background image we're going to reduce your score by 100 and we're going to update the score counter image okay um so we have these functions defined and now when you end the game we're going to set the screen to uh the score screen and we're going to set the text on the final score label to be whatever your score was okay so let's try this out see how it looks now let's try this out and see how it looks so gives me the welcome screen and let's start a new game and there's the Emoji and it's kind of hopping around on spot to spot and when I click on it my score goes up and when I click somewhere else my score goes down I need to make this label a little bigger so let's just do that run it again and there we go you can do things like if we wanted to make the game harder and have the Emoji move around faster we can change the interval from say 1 second to half a second and now it's moving around a lot faster probably too fast for me to actually click on it or you can make it easier and make the number go up but I think one second's fine for now let's just play a quick game and once you're done if you want to share it with someone you can click the share button and you get a link you can send them a link on Facebook or Twitter or a text message and they can play the game for themselves we built this app in just 5 minutes but if you wanted to remix this there's a whole lot of things you can do you can add sound effects you can change the appearance of it you can change the difficulty you can even use our data interface to build a scoreboard so you can compete with your friends thanks for trying out applab and we can't wait to see what you build with it