one advantage of having these wrapper classes is that they contain some useful builtin variables and methods the integer class for example has two useful constants integer dot min underscore value and integer.max underscore these represent the smallest and largest values that an integer can hold the integer and double classes also contain static methods used to convert strings into numbers these are called directly from the class the integer dot parse and method returns the primitive int value of its string parameter the double dot parse double method also takes in a string parameter and returns its value as a primitive double another interesting consideration when it comes to wrapper classes is auto boxing and unboxing autoboxing is the automatic conversion between the primitive types and their corresponding wrapper classes when we declare a variable of type integer and assign it the primitive value 13 java does auto boxing to convert 13 to an integer object unboxing is the opposite it is when the conversion goes the other way and an integer object becomes a primitive type int these allow us to use each primitive type and its corresponding wrapper class interchangeably java performs auto boxing and unboxing only when the wrapper class constructor is not called wrapper classes are used to convert primitive data types to objects by using wrapper classes we get access to their constants and methods