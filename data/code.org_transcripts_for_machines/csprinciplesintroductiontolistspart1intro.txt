My name is Brendan Reville. I’m from Australia, and I learned a program when I was 10 years old. Since then I’ve worked on the Xbox team, and now here at Code.org, I’ve helped build some of the Hour of Code tutorials that I know a lot of people have enjoyed. Whether you’re planning out your day, brainstorming ideas for a project, or choosing songs for a party, you’ll probably want to make a list. Lists help us stay organized by ordering all the relevant pieces of information one after the other in a single place. The same principle applies when we write programs that include many pieces of related information. [title LISTS vs. VARIABLES] Variables are useful for holding a single piece of information, but as we collect more information, keeping the variables organized can be complicated and cumbersome. For example, what if you wanted to keep track of everybody’s name in class or an entire school? It’s impractical to create hundreds or thousands of individual variables and impossible if you don’t know how many items should be tracked ahead of time. In programming, a list is a container used to keep similar pieces of data organized in one place. You can think of it like a container that grows or shrinks to fit the number of items it has inside. The main items you can do to a list are add or replace items, access items, and remove items. In JavaScript a list is called an array. You may hear list or array used interchangeably, but we’ll refer to it as a list to keep it simple. A basic example of a list would be all your contacts on your phone, in your email, etc. Let’s see how this would work. To start off, you need to create a list. You do this by using square brackets. An empty list looks like this. You can also create a list with some initial values in it; just write out the values (separated by commas) inside the square brackets. For example, you could make a list of numbers, like this, or a list of names, as in a contact list, like this. Just like how you can assign a number or a string to a variable, like VAR X gets 5, you can also assign a list to a variable to use it later, like this. You can think of a list as a container of numbered slots. Each slot can have one value in it.