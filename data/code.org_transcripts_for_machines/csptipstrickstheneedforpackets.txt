in unit one students learned about the physical internet how Digital Data is transmitted via wires cables and WiFi but the physical internet is inherently unreliable wires can get cut data can get corrupted during transmission and routers can simply drop data when they are overwhelmed with requests additionally data gets broken down into smaller chunks called packets before the data gets sent those packets may arrive at their final destination out of order since they might have traveled different paths along the internet to get there in this lesson students will invent a protocol that the sender and receiver can use to guarantee that all of the information successfully arrived packets will need to be numbered to ensure that they are read in order and Confirmation messages will need to be sent to confirm that each packet was received messages that are not confirmed within a specific amount of time will be reset until receipt of the full message has been confirmed in this way a reliable system for sending messages can be built despite the fact that some packets May occasionally be lost along the way the protocol described earlier is modeled after an actual protocol used on the internet called TCP or the transmission control protocol TCP works on top of Ip and the physical internet to ensure that messages sent on the internet are received in full and are properly reconstructed as a result we often think of the internet as a reliable means of sending information even if on a lower level this is not the case this is yet another example of abstraction on the Internet thanks to TCP we no longer need to concern ourselves with the specific failings of lower layers of the internet that TCP was designed to overcome this lesson primarily addresses Concepts that fall under the CSP Big Ideas of the internet and abstraction in the getting started activity students split into groups to discuss some possible reasons why a message may not arrive at its destination properly aim to keep students focused on what they know about the physical internet and the devices involved like routers as they may initially interpret the prompts at a higher level such as Twitter didn't save the Tweet properly or my friend forgot to hit send the transitional comment after the getting started activity is a particularly critical one as you will be introducing the New Concept of packets where data is divided into smaller pieces before transmission as one mechanism to make the internet a faster and more reliable system to use packets help make the internet faster and more reliable for a number of reasons if a small packet is corrupted in transmission then only a small amount of data will need to be resent breaking up data also prevents the lines of transmission from getting clogged with a single large message and allows different pors of a message to take whichever path is currently fastest on code Studio the internet simulator now breaks a message up into smaller packets which only contain six asy characters add at least four routers to your network for this activity to ensure that packets travel through different routes to reach their destinations and potentially arrive out of order to simulate the unreliability of the internet the internet simulator will automatically drop packets that exceed the preset packet size it will also randomly drop a small percentage of properly sized packets to simulate the inherent unreliability of the internet in groups students will use this version of the internet simulator and devise a protocol to send a 20 character message and be certain that their partner received all of it the two primary characteristics to look for in the student Protocols are first a packet numbering scheme and communication of how many packets the receiver should expect and second an acknowledgement message from the receiver back to the sender for each packet so the sender knows whether the packet needs to be resent again have students test their protocols with packets that can't be ordered by human intuition to ensure that they understand the need for packet numbering