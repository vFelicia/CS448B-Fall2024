hi my name is jamila and i write curriculumprocode.org in this video i'm going to demo the manipulatives that are used in the unit 2 lesson 3 attributes lesson for these manipulatives we have a main method which we see off to the side we have a class blueprint that we're going to use um this just gets folded in half with the class name on the outside so and then state and paper on the inside we also have a double uh an empty little shape here to represent an object we have an ent we have these little type these will represent our reference variables we have a true false thing that will fold in half to do true or false i also have some scrap pieces of paper some sticky notes some tape and you can use either yarn or i just cut some rubber bands in half either is fine even in addition to that you could even use envelopes instead of using these shapes and just making sure that they're all different sized to represent these instead of using these cutouts so either is fine either works so in this particular lesson we are modeling creating a class so we're modeling creating a profile class a social media profile and in this lesson you can either walk through it in the slides you could demo it with the actual manipulatives for the class or you could have the students follow along with you doing it with their set of manipulatives so we're going to design a profile class that's going to represent a user's profile on social media service for this particular class we're going to have attributes for the number of friends which will be represented as an int and whether or not the profile is private which will be represented as a boolean we also are going to add behaviors for adding a friend removing a friend and making their profile public so these will be the methods that will list so we start off by of course representing or writing in the instance variables that's going to represent these attributes so on the inside of our class blueprint we have state for private variables it's private and it's represented because of the fact that it's on the inside of this foldable so you know anything that's public is on the outside and anything that's private is on the inside so this any information that's on the inside of this is hidden from other classes that will try to access this information so our instance variables are private so we're going to list them in here so we'll have private and numb friends and private bullying is private so again our num friends attribute represents um the number of friends that our profile has and our is private attribute represents whether or not the profile on our social media platform is private um so again other classes can't see these instance variables a class can also have methods that can't be accessed from outside the class or private methods but we're not covering that in this particular lesson we'll be covering that in another lesson so it is uh helpful to point out to students that that behaviors can also be private and we'll learn more about those later uh on the outside we'll specify our class name and any variables or constructors that need to be accessed from outside of the profile class so we'll start off by first writing profile and then we'll fill in our constructor so our constructor is supposed to set the initial state of our variables so in this case we want to set initial values for our attributes so um we'll write our constructor public profile and then we'll say that when we create a new profile we start off with zero friends and when we create a new profile our profile page is not private so we'll set is private to false so this is on the outside of our foldable so that means it can be accessed from outside um the profile class and that's important because if we need to create call the constructor from our main that we'll do in a minute it needs to be visible outside so then on the other side we also see we have public methods or behaviors so we can write any methods that need to be accessed from outside the profile class so earlier we named that we wanted to have behaviors to add a friend uh remove friend and make public so these methods are on the outside of our foldable again so we can make sure that we can access it from other classes and be able to use these particular behaviors now when we go to instantiate objects in main we have to start off by first declaring a variable with the type of object that we want to create so that's where this comes in so this is our reference variable so we want it to be of type profile and just like any other variable we want to give our variables a name so we'll name our variable my profile so i have a my profile variable of type profile and that way this is going to store that pointer to the object that we create so this is going to be the same as us just writing profile my profile this is just declaring that we have a variable called my profile that's of type profile now when we go to instantiate an object every object is going to get its own copy of the instance variables with the actual values that we're creating so that's where this is going to come in this is our blank object that's why it has nothing on it um and it's going to store the instance variables on the inside we're going to fold that up to show that again you could use like a larger envelope and then that way you could put the the values and variables on the inside of that so when we go to create our object we have to follow according to what the constructor said to do so the constructor said that we're going to create num friends um with zero a value of zero so that's and this is an int instance variable so we can get an end then we'll put the value zero on a scrap piece of paper and then we'll put that inside our end variable so this folds up inside of here because it's going to store this value again you can do this with envelopes so that way you could just slip it inside of there so we have our end and this is supposed to represent our uh for our num friends instance variable so i've got that so this is going to go inside of here in a moment so i'm just going to set it off to the side here then i need to set is private to false so that means that this is a boolean value so i'm going to take my little boolean flipper here and fold it to where false is on the outside just to make sure we don't get confused i'm going to fold the other part so that way i can't really see the truth and now i have false now this is supposed to be for my is private instance variable so we'll set is private so that way this object gets it is private instance variable and all of that will go inside of our object so we'll fold that up inside of our object okay so the object has its own copy inside of this um little envelope thing um of these instance variables and this is now a profile object so and i want my my profile variable that's of type profile to point to this profile object so i can create or simulate that pointing nature using tape and yarn or oops whatever you choose so now my my profile variable points to this profile object which has its own copies of those instance variables so if i were to create another profile then i could create another variable that then contains its own values and have it point to it i could even create another variable that also points to the same object but that gets into some things that we'll be learning in another lesson so like if i call this another and this is profile i can have another variable and then i would go through the same process of creating another profile object or i could even just demonstrate the fact that i could have this profile also point to that same one or i could create another one that it points to so now this particular line my my profile reference variable um of type profile points to and calls that profile constructor which is why that we just put all those um envelopes on the inside and it points to that profile object you