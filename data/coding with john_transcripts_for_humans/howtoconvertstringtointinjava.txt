With timestamps:

00:00 - hey do you need to convert a string to
00:02 - an int in java
00:03 - you're in the right place so let's get
00:04 - to it so you're programming in java and
00:07 - you've got a string that contains a
00:09 - number
00:09 - but you need to be able to convert it to
00:11 - an int so you can do math with it
00:12 - how do you do it we're going to look at
00:14 - a super fast super easy way to convert
00:16 - your string to an int
00:17 - so let's say you've got something like
00:18 - string string
00:20 - int equals five in quotes
00:24 - so maybe you got that from user input or
00:26 - you parsed it from some other string or
00:27 - something like that
00:28 - maybe you're trying to use that string
00:29 - into like do some math and print
00:31 - something out at the same time kind of
00:32 - like
00:34 - system.out.printline um let's see string
00:37 - int plus six
00:41 - so um you might expect that to print out
00:43 - 11 right
00:44 - 5 plus 6 is 11. but if you go ahead and
00:46 - do it you see you get
00:47 - 56. what's happening here 6 isn't
00:50 - getting added to the 5
00:52 - it's getting converted to a string
00:53 - automatically and appended to the end of
00:55 - the string in so it's just getting
00:57 - five and plus six add to the end of it
00:59 - of course that's just not what you were
01:01 - going for
01:01 - or just maybe you're trying to do some
01:03 - math with that string and store the
01:04 - result in some other end so for example
01:06 - you're trying to do something like
01:07 - int total equals uh
01:10 - string int plus
01:14 - six and you can see ah tightness match
01:16 - can't convert from string to end
01:17 - unfortunately it can't do this for you
01:19 - automatically so what you're going to
01:21 - want to do is use
01:23 - a method on the integer class called
01:26 - parse ins and pass in
01:30 - the string that contains the int in it
01:32 - so you use
01:34 - integer.parseint so now we can see what
01:36 - if we take this same statement and
01:38 - instead
01:39 - use integer.parseint here
01:46 - pass in our string int
01:49 - let's go ahead and run that and boom we
01:51 - get 11 exactly we were going for and
01:53 - that's because we converted this string
01:56 - to an int
01:57 - before doing our math with it and then
01:58 - it printed out the resulting value
02:00 - so to summarize it's super easy if you
02:02 - have a string that contains an
02:04 - int all you need to do to turn it into
02:06 - an end is use integer.parsons so you can
02:08 - even directly convert that value
02:10 - into an in store in a variable so like
02:12 - int
02:13 - my int equals integer dot
02:16 - parse and string it
02:20 - so you're passing in your string to this
02:21 - integer.parseint method
02:23 - storing the result in my end and then
02:26 - you can take this mind and do whatever
02:28 - kind of math you want with it add
02:29 - subtract
02:30 - multiply divide mod whatever anything
02:33 - you want
02:34 - now something you do want to watch out
02:35 - for what if what you have in the string
02:38 - end
02:38 - isn't a proper number say you have
02:40 - something like five
02:41 - uh garbage and if you run that and try
02:45 - to
02:45 - parse an int from that string you get a
02:48 - number format exception and that's
02:50 - because
02:50 - java can't take this string and convert
02:53 - it to a number for you it's just not
02:55 - going to work there's nothing i can do
02:56 - about that
02:56 - so maybe you're getting this value from
02:58 - user input or something and the user
02:59 - enters something that isn't a number
03:01 - so if you need detailed examples about
03:03 - how to catch these sorts of exceptions
03:05 - when the user enters something that they
03:07 - aren't meant to
03:08 - go ahead and check out this video here
03:09 - of me creating a full gpa calculator
03:12 - so that's it it's that simple to convert
03:14 - a string to an end in java just
03:16 - integer.parseint
03:17 - so if you learned something or got some
03:18 - value from this video please give it a
03:20 - like it is super helpful and so
03:22 - appreciated
03:22 - and go ahead and subscribe too if you'd
03:24 - like to see more videos like this in the
03:25 - future
03:25 - so that's it short and sweet see you
03:27 - next time

Cleaned transcript:

hey do you need to convert a string to an int in java you're in the right place so let's get to it so you're programming in java and you've got a string that contains a number but you need to be able to convert it to an int so you can do math with it how do you do it we're going to look at a super fast super easy way to convert your string to an int so let's say you've got something like string string int equals five in quotes so maybe you got that from user input or you parsed it from some other string or something like that maybe you're trying to use that string into like do some math and print something out at the same time kind of like system.out.printline um let's see string int plus six so um you might expect that to print out 11 right 5 plus 6 is 11. but if you go ahead and do it you see you get 56. what's happening here 6 isn't getting added to the 5 it's getting converted to a string automatically and appended to the end of the string in so it's just getting five and plus six add to the end of it of course that's just not what you were going for or just maybe you're trying to do some math with that string and store the result in some other end so for example you're trying to do something like int total equals uh string int plus six and you can see ah tightness match can't convert from string to end unfortunately it can't do this for you automatically so what you're going to want to do is use a method on the integer class called parse ins and pass in the string that contains the int in it so you use integer.parseint so now we can see what if we take this same statement and instead use integer.parseint here pass in our string int let's go ahead and run that and boom we get 11 exactly we were going for and that's because we converted this string to an int before doing our math with it and then it printed out the resulting value so to summarize it's super easy if you have a string that contains an int all you need to do to turn it into an end is use integer.parsons so you can even directly convert that value into an in store in a variable so like int my int equals integer dot parse and string it so you're passing in your string to this integer.parseint method storing the result in my end and then you can take this mind and do whatever kind of math you want with it add subtract multiply divide mod whatever anything you want now something you do want to watch out for what if what you have in the string end isn't a proper number say you have something like five uh garbage and if you run that and try to parse an int from that string you get a number format exception and that's because java can't take this string and convert it to a number for you it's just not going to work there's nothing i can do about that so maybe you're getting this value from user input or something and the user enters something that isn't a number so if you need detailed examples about how to catch these sorts of exceptions when the user enters something that they aren't meant to go ahead and check out this video here of me creating a full gpa calculator so that's it it's that simple to convert a string to an end in java just integer.parseint so if you learned something or got some value from this video please give it a like it is super helpful and so appreciated and go ahead and subscribe too if you'd like to see more videos like this in the future so that's it short and sweet see you next time
