With timestamps:

00:00 - hey everybody it's john from coding with
00:02 - john today we're going to do a simple
00:04 - program in java for calculating bmi just
00:06 - something real quick
00:08 - it's easy calculation to do um so all
00:11 - i've got here
00:11 - is a class i've i've made called bmi
00:14 - calculator
00:15 - that just has a main method and that's
00:18 - all
00:19 - um and just some comments to explain
00:21 - what the calculation
00:22 - for bmi is so um it's what it really is
00:26 - is uh the
00:27 - your weight in kilograms divided by your
00:30 - height in meters
00:31 - squared um so but i'm in america and we
00:34 - use
00:35 - pounds and inches so that's what we're
00:36 - going to use here um so the so
00:39 - how you calculate that is just the
00:41 - weight in pounds over the height of
00:42 - inches
00:43 - squared times 703 that's approximate you
00:46 - can go and look that up
00:48 - uh but that's that's the conversion
00:50 - we're going to use it works it's right
00:52 - it's awesome
00:53 - and it's simple so
00:56 - what do we need to do we need to get
00:58 - input from the user
00:59 - do the calculation print the result out
01:03 - so okay let's get started with getting
01:06 - the input from the user
01:07 - so what do we need to do that we need a
01:09 - scanner
01:10 - uh input we'll call it input equals new
01:14 - scanner system.in
01:18 - this is just something you memorize
01:19 - after doing it for a while or you look
01:22 - it up online whenever you need to do it
01:24 - organizer imports all right so
01:28 - now we're going to need a variable to
01:30 - put
01:31 - our values in so and
01:34 - again we aren't going to use this one
01:36 - we're going to go ahead and use pounds
01:38 - and inches
01:39 - so let's get weight in pounds from the
01:42 - user
01:43 - by doing this we're going to need a
01:45 - variable to put it in
01:46 - and we'll use a double for it double
01:50 - weight equals
01:54 - error input dot next double so it's
01:57 - going to get
01:58 - a double from the user's uh input like
02:00 - from the from the console input
02:02 - we'll see that here in a second um but
02:04 - we have to prompt the user for that like
02:06 - we have to tell them what they're
02:07 - actually
02:08 - going to uh what they're actually going
02:11 - to have to put in
02:12 - so system you can write it out
02:16 - system.out.printline
02:18 - please or let's not say please enter
02:22 - weight in pounds
02:27 - cool so that will prompt them for the
02:30 - weight now
02:31 - what i like to do when i program is
02:35 - is test a lot and and make sure things
02:38 - work so let's go ahead and just run it
02:41 - enter weight in pounds cool five
02:44 - awesome the program ended that's it
02:48 - all right so um and we can test that
02:50 - we're getting that input if we want
02:52 - by printing out that weight
02:57 - and let's do it again and weight in
03:00 - pounds
03:02 - five and it prints out 5.0 because it
03:04 - stores it as a double so it does the 0.0
03:06 - so cool it's doing what we want all
03:08 - right now we want to get
03:10 - the height in inches also
03:13 - so we're going to do that enter height
03:17 - in inches
03:21 - double we'll call it shocker height
03:24 - equals the next input and uh sure
03:28 - let's it's quick to do let's go ahead
03:30 - and test that out too enter weight in
03:31 - pounds
03:32 - five enter height in inches two i'm two
03:34 - inches tall
03:36 - a little more than that uh so yeah print
03:39 - out five and two so we're getting the
03:40 - input
03:41 - perfect so now we have a pretty simple
03:43 - calculation we want to make
03:45 - of that weight divided by the height in
03:48 - inches
03:48 - to the power of 2 squared so multiplied
03:52 - by 703
03:54 - so let's go ahead and do that
03:58 - so let's get we'll store that bmi in a
04:01 - double also so double
04:03 - bmi equals
04:06 - just exactly that calculation so how do
04:08 - we do that
04:10 - weight divided by
04:14 - and we need to do that height and in
04:16 - inches to the power of two or
04:17 - in in parentheses so we don't mess
04:19 - something up or do something weird
04:21 - um we'll do that calculation kind of all
04:24 - and once
04:26 - so that's height so you could do height
04:29 - times height that would work great
04:31 - that's height squared
04:33 - um but if you want to be super awesome
04:35 - that might actually be even simpler
04:37 - but if you want to be super awesome you
04:38 - can use math.pal
04:42 - uh with that is height
04:45 - to the power of two that's what that
04:47 - does it takes the first number the first
04:49 - parameter there height
04:50 - to the power of the second parameter two
04:53 - this is a bit
04:54 - cooler and more extensible if you want
04:56 - to do it so if you had to do it to the
04:57 - power of like 100
04:59 - you could do that instead of having to
05:01 - do height
05:02 - times height times high for 100 times
05:06 - so cool we'll do it the cool way
05:11 - uh we want this in let's do this in
05:15 - parentheses well no that's fine we don't
05:18 - need that in parentheses because this
05:19 - this whole math.pow
05:22 - uh thing is all in one we aren't doing
05:25 - height
05:25 - times height so anyway this whole thing
05:28 - is contained
05:30 - so that's fine how it is times 703
05:34 - this divided by this times 703.
05:38 - that should be it so let's
05:42 - to be able to see that it's doing the
05:44 - calculation right
05:46 - let's just say your bmi
05:50 - is colon space
05:53 - plus the bmi we'll print it out
05:57 - so ctrl f11 here in eclipse i'm using
06:00 - eclipse to run this
06:01 - enter weight in pounds um let's do
06:03 - something real i'm going to enter my
06:06 - actual
06:06 - real bride and weight so no judgment
06:09 - here
06:10 - enter weight in pounds i am 220
06:14 - give or take hide in inches i'm pretty
06:17 - tall i'm 6'5 so we got a height in
06:19 - inches
06:20 - of six feet times 12 inches
06:23 - is 72 if my math is right plus another
06:26 - five
06:27 - is uh 77 inches
06:31 - so we'll enter 77. your bmi is 26.085
06:38 - and i think that's right i'm just over
06:40 - the 25 which is like the
06:43 - anything 25 or like down to 15 is normal
06:46 - and above 25 is overweight and above 30
06:48 - is obese and below 15 you're a
06:50 - rail so i think that's correct
06:54 - so awesome it's working so let's do a
06:57 - little bit of uh
06:58 - cleanup here first you might have
07:01 - noticed this warning in here
07:04 - it wants us to close our opened input
07:06 - scanner and we can do that here at the
07:08 - end
07:10 - well actually we can do it it would be
07:11 - best practice to do it directly after
07:13 - we're done using
07:14 - that input so let's do it here input dot
07:17 - close it's just that easy no more
07:19 - warning
07:21 - and also you might see
07:24 - well we don't need these uh printing out
07:26 - the height and weight anymore
07:28 - that was just for debugging purposes for
07:29 - ourselves so we could make sure the code
07:31 - was working
07:33 - and this is kind of a silly thing to
07:36 - print out
07:37 - you might care about like the first
07:39 - decimal place but
07:41 - probably not anything beyond that we
07:43 - don't need
07:44 - like 15 decimal places or whatever this
07:46 - is
07:47 - so let's get rid of that let's format
07:50 - this bmi
07:54 - with just one decimal place and round so
07:57 - how do we do
07:58 - that so there's a class called
08:01 - decimal formatter logically enough that
08:03 - we can use
08:05 - decimal or matter and call it df
08:09 - equals new decimal formatter
08:13 - let's organize imports so we can i think
08:16 - it's called decimal formatter
08:17 - maybe i'm maybe i'm wrong i used it oh
08:20 - decimal formats
08:22 - let's try that
08:25 - you don't have to memorize yourself you
08:26 - can google it whenever you want to do
08:27 - this sort of thing
08:29 - decimal format and we give it a string
08:32 - of the format we want like literally you
08:34 - kind of put in just what you want like
08:35 - you can do 0.0
08:38 - nope nope but you need to make it a
08:40 - string of course
08:43 - and then you take this df this decimal
08:46 - formatter and just do df dot format
08:50 - your double which in our case is bmi
08:55 - and that should do it it should format
08:58 - our bmi with just one decimal place
09:02 - go ahead and run that again 220
09:05 - what was it 77 your bmi is 26.1 and you
09:09 - as you can see
09:10 - in our last run it was like 28.08
09:14 - something it auto rounds that using a
09:16 - certain rounding uh
09:18 - methodology that does pretty much just
09:20 - what you want so
09:22 - uh it's doing that great 26.1
09:25 - awesome we could do some other
09:29 - things like for example if you wanted to
09:31 - make this really
09:33 - robust you could so right now if you
09:38 - enter a weight and like you put in some
09:40 - garbage
09:42 - you get an exception input mismatch
09:45 - exception
09:46 - uh it looked for a double and you gave
09:48 - it a string it didn't work they couldn't
09:50 - make a double out of what i put in
09:52 - so it blows up program doesn't work so
09:54 - you could
09:56 - implement like a loop that tries to get
09:58 - their input
10:00 - and if it gets an exception like this it
10:02 - says hey you gotta try again and you
10:03 - gotta and you
10:04 - keep looping until you get something
10:05 - good
10:07 - until you get a something that can work
10:09 - as a double similarly for height
10:11 - you could keep looping until you get a
10:14 - good height
10:16 - and um some there's examples of that in
10:19 - another one of my videos
10:20 - um that is a gpa calculator which does
10:24 - all of that so i won't go over it again
10:25 - here but you could totally do that just
10:27 - use the same stuff you see in that gpa
10:28 - calculator video it'll work awesome and
10:32 - also what you could do here if you
10:33 - wanted you could
10:36 - and i like thinking of ways you could
10:38 - make a
10:40 - a program more user friendly and you
10:43 - could say
10:45 - um i wasn't planning on doing this but
10:47 - maybe let's go ahead and do it
10:50 - let's say we won't go into we won't
10:53 - bother with the meters and
10:55 - again this is america we don't need to
10:56 - do meters and uh kilograms but what we
10:59 - can do
11:00 - is nobody knows like when i had to come
11:03 - up with my height in inches i'd
11:04 - it's like okay i gotta do six so i'm six
11:07 - feet five so six times 12 inches
11:11 - no user wants to do that they know that
11:13 - they're five nine or
11:14 - six five in my case let's
11:17 - let them put in their feet
11:21 - and inches why not let's do it
11:25 - so instead of getting height in inches
11:27 - we're going to get
11:30 - um enter height beat
11:33 - i don't really know how to phrase that
11:35 - like enter the number of feet you are
11:39 - yeah oh well you get it you can come up
11:42 - with a better word if you want
11:43 - and let's do that so everybody knows six
11:46 - five they don't know they're like six
11:48 - point whatever
11:50 - so let's use in um just a good old int
11:53 - for the height and we'll call it height
11:56 - feet
11:59 - next int to get an int
12:03 - and then we also need to get enter
12:06 - height
12:07 - inches so this is the number of inches
12:10 - you are over that
12:12 - number of feet height inches
12:17 - so
12:18 - [Music]
12:20 - yeah we're let's remember what was it 26
12:23 - point
12:24 - let's make sure our output is the same
12:27 - 26.1 i believe
12:28 - is what it was for um
12:33 - before when we were just doing
12:37 - inches and pounds but now that we're
12:38 - breaking it up i want to make sure that
12:40 - we're not messing things up right
12:42 - so now this height in inches
12:46 - so let's call that where we want to
12:48 - calculate like we want to let the user
12:50 - put in their feet in inches and we'll
12:51 - calculate the height and inches so they
12:53 - don't have to
12:55 - so height or let's call it total height
13:00 - um that'll be an into
13:04 - yeah because we have two ants we'll add
13:06 - them up but we'll figure that out
13:07 - later and um
13:11 - total height in inches
13:16 - equals well what does it equal
13:19 - we take our height in feet our height
13:22 - feet times 12 to get the number of
13:25 - inches for
13:28 - that number of feet so if i'm 6 feet 6
13:31 - times 12
13:32 - is 72 inches still i hope that's right
13:36 - so 72 inches and then we just add
13:40 - our height inches
13:44 - and that's it now we have our total
13:46 - height in inches but the user didn't
13:48 - have to think
13:51 - about trying to do that math themselves
13:54 - uh let's go ahead and try it see what
13:55 - happens
13:57 - weight in pounds 220 enter height feet
13:59 - i'm 6 feet
14:01 - five inches 26.1
14:04 - awesome cool that's easy
14:10 - so yeah i think that's all about where
14:12 - we're going to end this
14:13 - and you could put in all kinds of those
14:15 - enhancements if you want here make it
14:16 - really robust so it can't blow up when
14:18 - you put in garbage data
14:20 - but i want to leave that to you to check
14:21 - out but if you are curious and want more
14:23 - hints on how to do that
14:24 - go check out my other video on a gba
14:27 - calculator
14:28 - where we do all that robust uh input
14:32 - validation until then if you like the
14:35 - video
14:36 - give me a like if you hated it give me a
14:37 - dislike and tell me what you actually
14:39 - want to see
14:40 - and so yeah this is john thanks for
14:42 - watching

Cleaned transcript:

hey everybody it's john from coding with john today we're going to do a simple program in java for calculating bmi just something real quick it's easy calculation to do um so all i've got here is a class i've i've made called bmi calculator that just has a main method and that's all um and just some comments to explain what the calculation for bmi is so um it's what it really is is uh the your weight in kilograms divided by your height in meters squared um so but i'm in america and we use pounds and inches so that's what we're going to use here um so the so how you calculate that is just the weight in pounds over the height of inches squared times 703 that's approximate you can go and look that up uh but that's that's the conversion we're going to use it works it's right it's awesome and it's simple so what do we need to do we need to get input from the user do the calculation print the result out so okay let's get started with getting the input from the user so what do we need to do that we need a scanner uh input we'll call it input equals new scanner system.in this is just something you memorize after doing it for a while or you look it up online whenever you need to do it organizer imports all right so now we're going to need a variable to put our values in so and again we aren't going to use this one we're going to go ahead and use pounds and inches so let's get weight in pounds from the user by doing this we're going to need a variable to put it in and we'll use a double for it double weight equals error input dot next double so it's going to get a double from the user's uh input like from the from the console input we'll see that here in a second um but we have to prompt the user for that like we have to tell them what they're actually going to uh what they're actually going to have to put in so system you can write it out system.out.printline please or let's not say please enter weight in pounds cool so that will prompt them for the weight now what i like to do when i program is is test a lot and and make sure things work so let's go ahead and just run it enter weight in pounds cool five awesome the program ended that's it all right so um and we can test that we're getting that input if we want by printing out that weight and let's do it again and weight in pounds five and it prints out 5.0 because it stores it as a double so it does the 0.0 so cool it's doing what we want all right now we want to get the height in inches also so we're going to do that enter height in inches double we'll call it shocker height equals the next input and uh sure let's it's quick to do let's go ahead and test that out too enter weight in pounds five enter height in inches two i'm two inches tall a little more than that uh so yeah print out five and two so we're getting the input perfect so now we have a pretty simple calculation we want to make of that weight divided by the height in inches to the power of 2 squared so multiplied by 703 so let's go ahead and do that so let's get we'll store that bmi in a double also so double bmi equals just exactly that calculation so how do we do that weight divided by and we need to do that height and in inches to the power of two or in in parentheses so we don't mess something up or do something weird um we'll do that calculation kind of all and once so that's height so you could do height times height that would work great that's height squared um but if you want to be super awesome that might actually be even simpler but if you want to be super awesome you can use math.pal uh with that is height to the power of two that's what that does it takes the first number the first parameter there height to the power of the second parameter two this is a bit cooler and more extensible if you want to do it so if you had to do it to the power of like 100 you could do that instead of having to do height times height times high for 100 times so cool we'll do it the cool way uh we want this in let's do this in parentheses well no that's fine we don't need that in parentheses because this this whole math.pow uh thing is all in one we aren't doing height times height so anyway this whole thing is contained so that's fine how it is times 703 this divided by this times 703. that should be it so let's to be able to see that it's doing the calculation right let's just say your bmi is colon space plus the bmi we'll print it out so ctrl f11 here in eclipse i'm using eclipse to run this enter weight in pounds um let's do something real i'm going to enter my actual real bride and weight so no judgment here enter weight in pounds i am 220 give or take hide in inches i'm pretty tall i'm 6'5 so we got a height in inches of six feet times 12 inches is 72 if my math is right plus another five is uh 77 inches so we'll enter 77. your bmi is 26.085 and i think that's right i'm just over the 25 which is like the anything 25 or like down to 15 is normal and above 25 is overweight and above 30 is obese and below 15 you're a rail so i think that's correct so awesome it's working so let's do a little bit of uh cleanup here first you might have noticed this warning in here it wants us to close our opened input scanner and we can do that here at the end well actually we can do it it would be best practice to do it directly after we're done using that input so let's do it here input dot close it's just that easy no more warning and also you might see well we don't need these uh printing out the height and weight anymore that was just for debugging purposes for ourselves so we could make sure the code was working and this is kind of a silly thing to print out you might care about like the first decimal place but probably not anything beyond that we don't need like 15 decimal places or whatever this is so let's get rid of that let's format this bmi with just one decimal place and round so how do we do that so there's a class called decimal formatter logically enough that we can use decimal or matter and call it df equals new decimal formatter let's organize imports so we can i think it's called decimal formatter maybe i'm maybe i'm wrong i used it oh decimal formats let's try that you don't have to memorize yourself you can google it whenever you want to do this sort of thing decimal format and we give it a string of the format we want like literally you kind of put in just what you want like you can do 0.0 nope nope but you need to make it a string of course and then you take this df this decimal formatter and just do df dot format your double which in our case is bmi and that should do it it should format our bmi with just one decimal place go ahead and run that again 220 what was it 77 your bmi is 26.1 and you as you can see in our last run it was like 28.08 something it auto rounds that using a certain rounding uh methodology that does pretty much just what you want so uh it's doing that great 26.1 awesome we could do some other things like for example if you wanted to make this really robust you could so right now if you enter a weight and like you put in some garbage you get an exception input mismatch exception uh it looked for a double and you gave it a string it didn't work they couldn't make a double out of what i put in so it blows up program doesn't work so you could implement like a loop that tries to get their input and if it gets an exception like this it says hey you gotta try again and you gotta and you keep looping until you get something good until you get a something that can work as a double similarly for height you could keep looping until you get a good height and um some there's examples of that in another one of my videos um that is a gpa calculator which does all of that so i won't go over it again here but you could totally do that just use the same stuff you see in that gpa calculator video it'll work awesome and also what you could do here if you wanted you could and i like thinking of ways you could make a a program more user friendly and you could say um i wasn't planning on doing this but maybe let's go ahead and do it let's say we won't go into we won't bother with the meters and again this is america we don't need to do meters and uh kilograms but what we can do is nobody knows like when i had to come up with my height in inches i'd it's like okay i gotta do six so i'm six feet five so six times 12 inches no user wants to do that they know that they're five nine or six five in my case let's let them put in their feet and inches why not let's do it so instead of getting height in inches we're going to get um enter height beat i don't really know how to phrase that like enter the number of feet you are yeah oh well you get it you can come up with a better word if you want and let's do that so everybody knows six five they don't know they're like six point whatever so let's use in um just a good old int for the height and we'll call it height feet next int to get an int and then we also need to get enter height inches so this is the number of inches you are over that number of feet height inches so yeah we're let's remember what was it 26 point let's make sure our output is the same 26.1 i believe is what it was for um before when we were just doing inches and pounds but now that we're breaking it up i want to make sure that we're not messing things up right so now this height in inches so let's call that where we want to calculate like we want to let the user put in their feet in inches and we'll calculate the height and inches so they don't have to so height or let's call it total height um that'll be an into yeah because we have two ants we'll add them up but we'll figure that out later and um total height in inches equals well what does it equal we take our height in feet our height feet times 12 to get the number of inches for that number of feet so if i'm 6 feet 6 times 12 is 72 inches still i hope that's right so 72 inches and then we just add our height inches and that's it now we have our total height in inches but the user didn't have to think about trying to do that math themselves uh let's go ahead and try it see what happens weight in pounds 220 enter height feet i'm 6 feet five inches 26.1 awesome cool that's easy so yeah i think that's all about where we're going to end this and you could put in all kinds of those enhancements if you want here make it really robust so it can't blow up when you put in garbage data but i want to leave that to you to check out but if you are curious and want more hints on how to do that go check out my other video on a gba calculator where we do all that robust uh input validation until then if you like the video give me a like if you hated it give me a dislike and tell me what you actually want to see and so yeah this is john thanks for watching
