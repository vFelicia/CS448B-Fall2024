With timestamps:

00:00 - the simplest way to read and write text
00:01 - files in job let's start with
00:03 - writing data to a text file buffered
00:06 - writer
00:06 - writer equals new buffered writer
00:10 - new file writer output dot txt
00:13 - surround this code with a try catch
00:15 - block the hard part's over
00:16 - all you need to do after that is take
00:17 - your writer object and call
00:19 - writer dot write and you just pass in to
00:22 - this right method the string that you
00:24 - want to write to the file so let's just
00:25 - pass in a writing to a
00:27 - file but this won't work completely the
00:29 - way it is so what you have to do
00:31 - after you're done writing everything to
00:32 - the file that you want to you need to
00:33 - call
00:35 - writer.close if you forget to do that
00:37 - your file will get created
00:38 - but nothing will be written to it it'll
00:40 - just be blank okay the program finished
00:42 - successfully and we can see that it has
00:44 - created this output.txt file and it just
00:46 - has
00:47 - writing to a file and that's exactly
00:48 - what we wanted it to have

Cleaned transcript:

the simplest way to read and write text files in job let's start with writing data to a text file buffered writer writer equals new buffered writer new file writer output dot txt surround this code with a try catch block the hard part's over all you need to do after that is take your writer object and call writer dot write and you just pass in to this right method the string that you want to write to the file so let's just pass in a writing to a file but this won't work completely the way it is so what you have to do after you're done writing everything to the file that you want to you need to call writer.close if you forget to do that your file will get created but nothing will be written to it it'll just be blank okay the program finished successfully and we can see that it has created this output.txt file and it just has writing to a file and that's exactly what we wanted it to have
