With timestamps:

00:00 - in this video we're going to go over all
00:01 - the very best eclipse shortcuts that you
00:03 - can use to be a faster java programmer
00:05 - there are some of these that once you
00:06 - see them in action you'll never code the
00:07 - same way again my name is john i'm a
00:09 - lead java software engineer and i love
00:10 - sharing what i've learned in a clear
00:12 - understandable way so if you'd like more
00:13 - programming tutorials like this be sure
00:14 - to subscribe so you don't miss each new
00:16 - video i also have a full java course
00:17 - available in the link down in the
00:18 - description if you're interested first
00:20 - is a simple one that's really cool let's
00:21 - say you have some text in your program
00:23 - that you want to make all uppercase but
00:25 - you know you don't have to go in and
00:26 - retype the entire thing in uppercase all
00:28 - you have to do is highlight the text and
00:29 - hit ctrl shift x and poof all that text
00:32 - is now uppercase and if you want to make
00:34 - it all lowercase just hit ctrl shift y
00:37 - next let's say you want to print
00:38 - something out and you know that in java
00:39 - you have to write
00:41 - system.out.printline open and close
00:43 - parentheses and then type out what you
00:44 - want to print out well you actually
00:45 - don't have to do all that instead you
00:47 - can just write sis out and then hit
00:50 - control space and it'll automatically
00:52 - print out that whole thing
00:53 - system.out.printline and it'll put your
00:55 - cursor in between the two parentheses so
00:58 - you can immediately just start typing
00:59 - out whatever you want next let's say
01:01 - you're creating a new java program right
01:03 - and you've created your class probably
01:04 - the first thing you want to do is create
01:06 - your main method right as you probably
01:07 - know it's public static void main string
01:12 - array args and open and close curly
01:14 - braces but it can be tough to remember
01:16 - all that and even if you do who wants to
01:18 - write all of that out well all you have
01:19 - to do is just write out the word main
01:22 - and then hit control space this first
01:23 - option that pops up main method is the
01:25 - one you want so just go ahead and hit
01:27 - enter and that will automatically create
01:28 - the full shell of your main method for
01:30 - you pretty awesome by the way if you
01:32 - want to know what all this stuff and the
01:33 - main method actually means check out
01:35 - this video all about the main method and
01:36 - what each piece actually does and why
01:38 - it's there similar shortcuts are
01:40 - available for creating all kinds of
01:41 - things for example for loops all you
01:43 - have to do is just type four and then
01:45 - hit control space there's a few
01:46 - different types of for loops available
01:48 - and it'll create them in kind of a smart
01:49 - way depending on what's in your code
01:51 - surrounding it for example let's just
01:53 - say you had created like a list of
01:54 - strings here names equals new array list
01:58 - then when you type four and hit control
02:00 - space the options here will use that
02:03 - surrounding code for example if you hit
02:05 - four each to create a for each loop it
02:07 - sees this list right above it called
02:08 - names and will automatically create a
02:10 - for each loop looping through each
02:12 - element in that names list you can
02:14 - customize whatever you like in here like
02:16 - if you want to name this variable like
02:17 - name instead and then hit enter and then
02:19 - type whatever code you want inside your
02:21 - for each loop you can also create while
02:23 - and do while loops this way as you might
02:25 - guess for a while loop just type out
02:26 - while and hit control space and you'll
02:28 - have a few options here probably the one
02:30 - you'll want most often is a simple while
02:32 - loop with a condition it automatically
02:33 - creates this while loop with a
02:35 - placeholder condition which you can
02:36 - replace with whatever you like if you
02:38 - want to create a do while loop instead
02:39 - just type in do and hit control space
02:42 - the do while statement will be the very
02:43 - first suggestion so just hit enter to
02:44 - use it just type in here whatever you
02:46 - want the condition of your do while loop
02:47 - to be and you're good to go you can also
02:49 - make all kinds of if statements this way
02:51 - just type if and hit control space if
02:53 - you just want a simple if statement you
02:54 - can use that but you can also pick an if
02:56 - else statement and if you want an elsif
02:58 - in between these conditions you can just
03:00 - type in elseif and it'll give you a full
03:02 - else if block this next one is one i
03:04 - just learned recently but is so simple
03:06 - and useful i can't believe i haven't
03:08 - known it for years let's say you've got
03:10 - a line of code and you want to move it
03:11 - somewhere just up or down a few lines in
03:13 - your program of course you know that you
03:15 - can just highlight it hit ctrl x to cut
03:17 - and then go and paste it in wherever you
03:19 - want in your program right but there's
03:20 - an even better way all you have to do is
03:22 - go to the line that you want to move and
03:24 - hit alt and then the up or down arrows
03:27 - that lets you freely move that line of
03:29 - code wherever you want in your program
03:32 - and that's not just limited to one line
03:33 - you can do that with multiple lines as
03:34 - well so just highlight all the lines
03:36 - that you want to move around and hit alt
03:38 - and up or down next let's say you've got
03:40 - a piece of code that could throw some
03:41 - exception you know you'd have to create
03:43 - a try catch around it right so you'd
03:44 - have to say try then you have your open
03:46 - curly braces you have to go down here
03:48 - okay and then say catch exception e
03:51 - instead of doing all that you can just
03:53 - highlight the code that you want to
03:54 - surround with a try catch and then hit
03:56 - alt shift z that'll bring up a bunch of
03:59 - different options of things you can
04:01 - surround this code with one of which is
04:03 - a try catch block so you can just click
04:04 - that and it'll surround that code that
04:06 - you've highlighted with a full try catch
04:08 - block and you can surround it with other
04:10 - stuff too like a while loop a do while
04:12 - loop or even a simple if statement this
04:14 - one i remember learning back in college
04:16 - when we were first getting started using
04:18 - eclipse let's say you got a really basic
04:20 - class right like this cat class it has
04:22 - three fields name weight and age but
04:24 - they're all private which is fine right
04:25 - they probably should be private but now
04:27 - you have to go in and create getters and
04:29 - setters for them and it's not difficult
04:30 - but you know it's just kind of a slog
04:32 - right it's busy work okay public string
04:35 - get name turn this dot name and you have
04:38 - to create a setter for the name two and
04:40 - getters and setters for the other fields
04:42 - instead of doing all of that you can
04:43 - just right click anywhere in your class
04:45 - and then go to source and then generate
04:47 - getters and setters then a box will pop
04:49 - up showing you all the different fields
04:51 - that you can create your getters and
04:52 - setters for if you only want to create
04:54 - getters and setters for some fields and
04:55 - not others you can go in and check some
04:57 - of these and not others or just check
04:59 - the setters and not the getters but most
05:01 - of the time i just want to select all
05:02 - and create getters and setters for
05:04 - everything all you have to do is click
05:06 - generate and eclipse will automatically
05:08 - create getters and setters for all of
05:10 - your private fields i remember when my
05:12 - college professor showed us this after
05:14 - having us manually type out getters and
05:17 - setters for weeks i about slapped him in
05:19 - the face for not showing this to us
05:20 - sooner if you want to be really cool and
05:21 - you don't even want to right click and
05:23 - go through that whole menu you can hit
05:24 - alt shift s and then r that'll bring up
05:28 - this exact same menu the same goes for
05:29 - having to create constructors when you
05:31 - create a class like this you might want
05:33 - to create a constructor that takes all
05:35 - three of these fields so you can set
05:37 - them when your cat object is created but
05:39 - if you want to do that automatically
05:40 - instead of typing it out you can right
05:42 - click and go to source and generate
05:44 - constructor using fields same way as
05:46 - before you can check whatever fields you
05:48 - want to have as part of your constructor
05:50 - and then click generate it automatically
05:52 - creates a full constructor with
05:53 - parameters to be able to set each field
05:55 - and if you want to use a keyboard
05:56 - shortcut instead it'll be alt shift s
05:59 - and then o
06:00 - next what if you're working with like a
06:01 - not so great programmer on a group
06:03 - project or something and all of their
06:05 - code is just formatted terribly and
06:07 - looks like just
06:09 - you can have eclipse automatically
06:10 - format for you just highlight whatever
06:12 - code you want to format in this case
06:13 - it'll be everything because this is all
06:16 - awful then hit ctrl shift f
06:19 - much better nice and pretty and clean
06:21 - next let's say you type out some code
06:23 - that uses a new class that your program
06:24 - isn't using yet like this random class
06:26 - here of course eclipse complains to us
06:28 - that it can't find this random class and
06:30 - that's because we haven't imported it
06:31 - yet one cool thing you can do of course
06:32 - is just hover over that error and then
06:34 - click import random and eclipse will
06:36 - automatically add that to your imports
06:38 - but you don't even have to do that all
06:39 - you have to do is hit ctrl shift o and
06:42 - it'll automatically optimize your
06:43 - imports if there's more than one class
06:45 - with the same name it won't be able to
06:46 - automatically decide which one to import
06:49 - for example if we got rid of this
06:50 - scanner import and hit ctrl shift o
06:52 - there's multiple different scanner
06:54 - classes in java that it could use in
06:56 - this case the one that we want is
06:58 - java.util.scanner so all we have to do
07:00 - is just double click that one if you
07:01 - happen to get rid of some code and no
07:03 - longer need an import that you needed
07:05 - before when you organize your imports
07:07 - with ctrl shift o it'll also
07:09 - automatically remove any imports that
07:11 - you aren't using anymore you can
07:12 - automatically comment out a line or
07:14 - multiple lines by just hitting control
07:16 - and slash and you can uncomment those
07:18 - same lines by just hitting ctrl slash
07:20 - again if you want to instead make a
07:21 - multi-line block comment just hit ctrl
07:24 - shift slash that will make it a
07:26 - multi-line comment like this if you want
07:28 - to rename a variable you don't have to
07:29 - go in and change that variable every
07:32 - place that that variable appears instead
07:34 - you can just select the variable that
07:35 - you want to change and hit alt shift r
07:38 - then you can just change the name here
07:40 - to whatever you want and you can see
07:41 - that it automatically changes that
07:43 - variable name everywhere across the
07:45 - program then just hit enter and you're
07:47 - good to go what if you have a huge java
07:48 - file that's hundreds or maybe even
07:50 - thousands of lines and you want to go to
07:51 - a particular line well you could scroll
07:53 - down until you get there but if you want
07:55 - you can also just hit ctrl l then enter
07:58 - whatever line you want to go to like 157
08:00 - and hit enter and it'll bring you
08:02 - directly to that line sometimes you may
08:04 - want to find a particular method in your
08:05 - program but you don't remember exactly
08:06 - where it is you can just hit ctrl o to
08:09 - pull up the outline of your java program
08:11 - that'll show all the different methods
08:13 - that are in the java file you're looking
08:14 - at if you want you can start typing to
08:16 - filter that list too if you have a big
08:18 - chunk of code that's kind of getting too
08:19 - complicated or maybe you also want to
08:21 - use it somewhere else in your program
08:23 - you might want to extract it to a method
08:24 - eclipse offers an automated way of doing
08:26 - that too you can just highlight all of
08:28 - the code that you want to include in
08:30 - your new method and then hit alt shift m
08:33 - that'll pop up a dialog box for creating
08:35 - your new method and you can just type in
08:37 - whatever you want it to be named like
08:38 - this piece of code determines the winner
08:40 - of this game so we probably want to call
08:41 - it uh determine winner it automatically
08:44 - figures out which parameters it's going
08:45 - to need and what the return type should
08:47 - be if any then you can just click ok and
08:50 - eclipse will automatically create your
08:52 - brand new method another really quick
08:54 - one that i use all the time is just
08:56 - using control d to delete an entire row
08:59 - dead simple but i probably use it every
09:01 - hour of every day another really useful
09:03 - one is if you're looking at a method and
09:04 - you want to know what caused this method
09:06 - and then what other methods call those
09:08 - methods and all the way up the tree with
09:10 - your cursor anywhere inside the method
09:11 - just hit ctrl alt h that'll bring up the
09:14 - call hierarchy which shows the current
09:16 - method that we're looking at is valid
09:18 - move and it also shows which other
09:20 - methods call this one and you can expand
09:21 - each of those to see which methods call
09:23 - those methods let's say you're looking
09:25 - at a class like dog and you want to see
09:26 - the whole inheritance hierarchy above it
09:28 - all you have to do is hit f4 and that
09:30 - brings up the entire class hierarchy so
09:32 - we can see that the dog class is a child
09:34 - of the animal class which is a child of
09:36 - the object class if you currently have
09:38 - selected any sort of opening or closing
09:40 - curly braces or brackets or parentheses
09:42 - you can hit ctrl shift p to
09:44 - automatically go to the other end so if
09:46 - you're at the beginning it'll go to the
09:47 - end if you're at the end it'll go to the
09:48 - beginning that's really useful for when
09:49 - you're looking at like a huge method and
09:51 - you just want to go straight to the
09:52 - ending curly braces or when the code is
09:54 - formatted really weirdly and you want to
09:56 - know where a certain section of code
09:57 - ends if you want to make your font size
09:59 - larger like if you need ridiculously
10:00 - large font size for recording a youtube
10:02 - video just hit control plus to increase
10:05 - the font size and control minus to
10:07 - decrease the font size anywhere that
10:08 - you're calling a method and you want to
10:10 - go directly to where that method is
10:12 - implemented just select the method name
10:14 - and hit f3 to jump right to it you can
10:16 - also just hold ctrl and click the method
10:18 - name to jump right to it as well you can
10:19 - do similar things with variables let's
10:21 - say i've got this board variable here
10:23 - right and i want to find where it's
10:24 - being declared i can just select
10:26 - anywhere that that variable is being
10:27 - used and hit f3 to jump right to where
10:30 - it's being declared and just like the
10:32 - methods you can control click as well to
10:34 - do exactly the same thing what if you
10:35 - have hundreds of java files like i do
10:37 - here and you just want to find one
10:39 - single file and you know the name but
10:40 - you don't know where to find it well you
10:42 - can just hit ctrl shift r then just
10:44 - start typing the name of whatever file
10:46 - you want to find here we go i found my
10:47 - awesome java program just click it to
10:49 - open it you can quickly switch between
10:51 - file tabs you can just hold ctrl then
10:53 - hit page up to go backwards in tabs and
10:55 - page down to go forwards another one i
10:57 - use all the time let's say you're just
10:59 - writing some code in one of your java
11:00 - classes and then you hop over to another
11:02 - java class and start making some changes
11:05 - there too it's very likely that you're
11:06 - going to want to hop right back to what
11:08 - you were just doing in that last java
11:10 - class well if you have a whole bunch of
11:11 - files open it could be kind of
11:12 - cumbersome trying to find where you just
11:14 - were instead of having to hunt it down
11:16 - you can just hit alt and the left arrow
11:18 - to just jump to the last place that you
11:20 - were editing and you can keep hitting
11:21 - alt left to keep going further and
11:23 - further back in history and to go back
11:24 - forward in history just hit alt and the
11:26 - right arrow key another awesome thing is
11:28 - that if your mouse has back and forward
11:30 - buttons like this one you can just use
11:31 - those instead you can hit back to go
11:33 - back in history and forward to go
11:35 - forward without even having to use your
11:36 - other hand i use that all the time and
11:38 - it's awesome to run your programs you
11:40 - might be clicking this run button which
11:41 - works just fine but the keyboard
11:43 - shortcut to run your program is just
11:44 - control f11 if you have unsaved changes
11:48 - it's going to prompt you to save them
11:49 - but you can also have it automatically
11:51 - save before it launches by just checking
11:53 - this box and hitting ok from then on
11:55 - even if you've made changes to your
11:56 - files when you hit ctrl f11 it'll
11:58 - automatically save them and run your
12:00 - program without prompting you i almost
12:02 - always use the control f11 shortcut to
12:04 - run my programs we've gone over a ton of
12:06 - eclipse shortcuts here right but you
12:08 - might be thinking man these are really
12:09 - useful but how am i going to remember
12:10 - all these there's so many if you ever
12:12 - want to remind yourself what you can do
12:14 - or see even more shortcuts that we
12:15 - didn't go over just hit ctrl shift l and
12:18 - it'll show you every single eclipse
12:20 - shortcut i highly encourage you to look
12:22 - through all of these and see if there's
12:24 - any other shortcuts we didn't talk about
12:25 - that could be useful to you and if you
12:27 - know about any useful eclipse shortcuts
12:28 - that we didn't talk about in this video
12:30 - or that you happen to find in this list
12:31 - please share them down in the comments
12:33 - if you enjoyed this video or learned
12:34 - something let me know by leaving a like
12:35 - and as always if you really want to
12:36 - support the channel you can do the whole
12:38 - youtube trifecta of leaving a like a
12:40 - comment and hitting the subscribe button
12:41 - so you don't miss each new java tutorial
12:43 - thanks so much for watching and i'll see
12:44 - you next time

Cleaned transcript:

in this video we're going to go over all the very best eclipse shortcuts that you can use to be a faster java programmer there are some of these that once you see them in action you'll never code the same way again my name is john i'm a lead java software engineer and i love sharing what i've learned in a clear understandable way so if you'd like more programming tutorials like this be sure to subscribe so you don't miss each new video i also have a full java course available in the link down in the description if you're interested first is a simple one that's really cool let's say you have some text in your program that you want to make all uppercase but you know you don't have to go in and retype the entire thing in uppercase all you have to do is highlight the text and hit ctrl shift x and poof all that text is now uppercase and if you want to make it all lowercase just hit ctrl shift y next let's say you want to print something out and you know that in java you have to write system.out.printline open and close parentheses and then type out what you want to print out well you actually don't have to do all that instead you can just write sis out and then hit control space and it'll automatically print out that whole thing system.out.printline and it'll put your cursor in between the two parentheses so you can immediately just start typing out whatever you want next let's say you're creating a new java program right and you've created your class probably the first thing you want to do is create your main method right as you probably know it's public static void main string array args and open and close curly braces but it can be tough to remember all that and even if you do who wants to write all of that out well all you have to do is just write out the word main and then hit control space this first option that pops up main method is the one you want so just go ahead and hit enter and that will automatically create the full shell of your main method for you pretty awesome by the way if you want to know what all this stuff and the main method actually means check out this video all about the main method and what each piece actually does and why it's there similar shortcuts are available for creating all kinds of things for example for loops all you have to do is just type four and then hit control space there's a few different types of for loops available and it'll create them in kind of a smart way depending on what's in your code surrounding it for example let's just say you had created like a list of strings here names equals new array list then when you type four and hit control space the options here will use that surrounding code for example if you hit four each to create a for each loop it sees this list right above it called names and will automatically create a for each loop looping through each element in that names list you can customize whatever you like in here like if you want to name this variable like name instead and then hit enter and then type whatever code you want inside your for each loop you can also create while and do while loops this way as you might guess for a while loop just type out while and hit control space and you'll have a few options here probably the one you'll want most often is a simple while loop with a condition it automatically creates this while loop with a placeholder condition which you can replace with whatever you like if you want to create a do while loop instead just type in do and hit control space the do while statement will be the very first suggestion so just hit enter to use it just type in here whatever you want the condition of your do while loop to be and you're good to go you can also make all kinds of if statements this way just type if and hit control space if you just want a simple if statement you can use that but you can also pick an if else statement and if you want an elsif in between these conditions you can just type in elseif and it'll give you a full else if block this next one is one i just learned recently but is so simple and useful i can't believe i haven't known it for years let's say you've got a line of code and you want to move it somewhere just up or down a few lines in your program of course you know that you can just highlight it hit ctrl x to cut and then go and paste it in wherever you want in your program right but there's an even better way all you have to do is go to the line that you want to move and hit alt and then the up or down arrows that lets you freely move that line of code wherever you want in your program and that's not just limited to one line you can do that with multiple lines as well so just highlight all the lines that you want to move around and hit alt and up or down next let's say you've got a piece of code that could throw some exception you know you'd have to create a try catch around it right so you'd have to say try then you have your open curly braces you have to go down here okay and then say catch exception e instead of doing all that you can just highlight the code that you want to surround with a try catch and then hit alt shift z that'll bring up a bunch of different options of things you can surround this code with one of which is a try catch block so you can just click that and it'll surround that code that you've highlighted with a full try catch block and you can surround it with other stuff too like a while loop a do while loop or even a simple if statement this one i remember learning back in college when we were first getting started using eclipse let's say you got a really basic class right like this cat class it has three fields name weight and age but they're all private which is fine right they probably should be private but now you have to go in and create getters and setters for them and it's not difficult but you know it's just kind of a slog right it's busy work okay public string get name turn this dot name and you have to create a setter for the name two and getters and setters for the other fields instead of doing all of that you can just right click anywhere in your class and then go to source and then generate getters and setters then a box will pop up showing you all the different fields that you can create your getters and setters for if you only want to create getters and setters for some fields and not others you can go in and check some of these and not others or just check the setters and not the getters but most of the time i just want to select all and create getters and setters for everything all you have to do is click generate and eclipse will automatically create getters and setters for all of your private fields i remember when my college professor showed us this after having us manually type out getters and setters for weeks i about slapped him in the face for not showing this to us sooner if you want to be really cool and you don't even want to right click and go through that whole menu you can hit alt shift s and then r that'll bring up this exact same menu the same goes for having to create constructors when you create a class like this you might want to create a constructor that takes all three of these fields so you can set them when your cat object is created but if you want to do that automatically instead of typing it out you can right click and go to source and generate constructor using fields same way as before you can check whatever fields you want to have as part of your constructor and then click generate it automatically creates a full constructor with parameters to be able to set each field and if you want to use a keyboard shortcut instead it'll be alt shift s and then o next what if you're working with like a not so great programmer on a group project or something and all of their code is just formatted terribly and looks like just you can have eclipse automatically format for you just highlight whatever code you want to format in this case it'll be everything because this is all awful then hit ctrl shift f much better nice and pretty and clean next let's say you type out some code that uses a new class that your program isn't using yet like this random class here of course eclipse complains to us that it can't find this random class and that's because we haven't imported it yet one cool thing you can do of course is just hover over that error and then click import random and eclipse will automatically add that to your imports but you don't even have to do that all you have to do is hit ctrl shift o and it'll automatically optimize your imports if there's more than one class with the same name it won't be able to automatically decide which one to import for example if we got rid of this scanner import and hit ctrl shift o there's multiple different scanner classes in java that it could use in this case the one that we want is java.util.scanner so all we have to do is just double click that one if you happen to get rid of some code and no longer need an import that you needed before when you organize your imports with ctrl shift o it'll also automatically remove any imports that you aren't using anymore you can automatically comment out a line or multiple lines by just hitting control and slash and you can uncomment those same lines by just hitting ctrl slash again if you want to instead make a multiline block comment just hit ctrl shift slash that will make it a multiline comment like this if you want to rename a variable you don't have to go in and change that variable every place that that variable appears instead you can just select the variable that you want to change and hit alt shift r then you can just change the name here to whatever you want and you can see that it automatically changes that variable name everywhere across the program then just hit enter and you're good to go what if you have a huge java file that's hundreds or maybe even thousands of lines and you want to go to a particular line well you could scroll down until you get there but if you want you can also just hit ctrl l then enter whatever line you want to go to like 157 and hit enter and it'll bring you directly to that line sometimes you may want to find a particular method in your program but you don't remember exactly where it is you can just hit ctrl o to pull up the outline of your java program that'll show all the different methods that are in the java file you're looking at if you want you can start typing to filter that list too if you have a big chunk of code that's kind of getting too complicated or maybe you also want to use it somewhere else in your program you might want to extract it to a method eclipse offers an automated way of doing that too you can just highlight all of the code that you want to include in your new method and then hit alt shift m that'll pop up a dialog box for creating your new method and you can just type in whatever you want it to be named like this piece of code determines the winner of this game so we probably want to call it uh determine winner it automatically figures out which parameters it's going to need and what the return type should be if any then you can just click ok and eclipse will automatically create your brand new method another really quick one that i use all the time is just using control d to delete an entire row dead simple but i probably use it every hour of every day another really useful one is if you're looking at a method and you want to know what caused this method and then what other methods call those methods and all the way up the tree with your cursor anywhere inside the method just hit ctrl alt h that'll bring up the call hierarchy which shows the current method that we're looking at is valid move and it also shows which other methods call this one and you can expand each of those to see which methods call those methods let's say you're looking at a class like dog and you want to see the whole inheritance hierarchy above it all you have to do is hit f4 and that brings up the entire class hierarchy so we can see that the dog class is a child of the animal class which is a child of the object class if you currently have selected any sort of opening or closing curly braces or brackets or parentheses you can hit ctrl shift p to automatically go to the other end so if you're at the beginning it'll go to the end if you're at the end it'll go to the beginning that's really useful for when you're looking at like a huge method and you just want to go straight to the ending curly braces or when the code is formatted really weirdly and you want to know where a certain section of code ends if you want to make your font size larger like if you need ridiculously large font size for recording a youtube video just hit control plus to increase the font size and control minus to decrease the font size anywhere that you're calling a method and you want to go directly to where that method is implemented just select the method name and hit f3 to jump right to it you can also just hold ctrl and click the method name to jump right to it as well you can do similar things with variables let's say i've got this board variable here right and i want to find where it's being declared i can just select anywhere that that variable is being used and hit f3 to jump right to where it's being declared and just like the methods you can control click as well to do exactly the same thing what if you have hundreds of java files like i do here and you just want to find one single file and you know the name but you don't know where to find it well you can just hit ctrl shift r then just start typing the name of whatever file you want to find here we go i found my awesome java program just click it to open it you can quickly switch between file tabs you can just hold ctrl then hit page up to go backwards in tabs and page down to go forwards another one i use all the time let's say you're just writing some code in one of your java classes and then you hop over to another java class and start making some changes there too it's very likely that you're going to want to hop right back to what you were just doing in that last java class well if you have a whole bunch of files open it could be kind of cumbersome trying to find where you just were instead of having to hunt it down you can just hit alt and the left arrow to just jump to the last place that you were editing and you can keep hitting alt left to keep going further and further back in history and to go back forward in history just hit alt and the right arrow key another awesome thing is that if your mouse has back and forward buttons like this one you can just use those instead you can hit back to go back in history and forward to go forward without even having to use your other hand i use that all the time and it's awesome to run your programs you might be clicking this run button which works just fine but the keyboard shortcut to run your program is just control f11 if you have unsaved changes it's going to prompt you to save them but you can also have it automatically save before it launches by just checking this box and hitting ok from then on even if you've made changes to your files when you hit ctrl f11 it'll automatically save them and run your program without prompting you i almost always use the control f11 shortcut to run my programs we've gone over a ton of eclipse shortcuts here right but you might be thinking man these are really useful but how am i going to remember all these there's so many if you ever want to remind yourself what you can do or see even more shortcuts that we didn't go over just hit ctrl shift l and it'll show you every single eclipse shortcut i highly encourage you to look through all of these and see if there's any other shortcuts we didn't talk about that could be useful to you and if you know about any useful eclipse shortcuts that we didn't talk about in this video or that you happen to find in this list please share them down in the comments if you enjoyed this video or learned something let me know by leaving a like and as always if you really want to support the channel you can do the whole youtube trifecta of leaving a like a comment and hitting the subscribe button so you don't miss each new java tutorial thanks so much for watching and i'll see you next time
