hello everybody welcome back to another video today i will be giving you a brief overview on object oriented programming in python uh ep1 so object oriented programming is basically classes and objects it's going to get a little bit more complicated than that but that's just overall so i already know i taught in the past but this is more simple and it's easier to understand because uh i am using pokemons and it's going to be just a short lesson it's not too long but it has a lot of detail in it so let's look at our first code by the way the link to download this notebook is in the description if you want to try it out for yourself or you can do it along with me you can download it and then open it in google collab or in jupyter notebook so how to create a class uh the first thing you want to do is you want to put class right type up like the word class and then the name of the class at the behind of it uh which is pokemon in my case and then after that you have a little uh how you call it colon and click enter and it should give you a little indent over here and in that indent you can put the the attributes of the pokemon or whatever you want to create like name and then the string of the name and then attack and the integer and once you did that after that you have p1 p1 is pokemon one it's just a variable and it equals to the class pokemon so p1 equals to class pokemon and print p1.name which is pikachu and comma p1.attack which is 20. and it might look a little complicated but let me say something so the class right here is like a blueprint where you can use it over and over again to create different stuff so pretend uh like the word car is very uh general so there's like could be a toyota uh ford um chevrolet whatever but basically the car is kind of like the class and then p1 is kind of like the model of the car like chevrolet ford uh toyota or whatever p1 is kind of like the model and the class is the car so it's just an overall thing like pokemon and pokemon one is a comparison we can implement this is that uh we can put this inside of a big string so print p1.name which is pikachu pikachu has an attack power of and then strp1.attack this is so that i can combine it with a exclamation point but you don't need this sdr if you don't want an exclamation point at the end but since i do i just put it there so it's the same type as each other so of strp1.attack which is 20 and plus exclamation point there we go pikachu has an attack power of 20 and that is a way to implement classes into your code uh let's look at another one called python constructors um not like python cons oh that's actually really um ironic uh can get a constructor construct snake like this uh it's a snake and then there's the python python like this oh python principles no but there's the the bow constrictor or constructor um like some people might read a constructor but python constrictors it's very ironic but uh let's move on so patent constructors are such as dot underscore underscore new underscore underscore uh that is a little uh python constructor that we can use so class pokemon defined underscore underscore new underscore underscore self uh this is this uh com python constructor is used to uh every time a new uh object is declared like p1 equals to pokemon like this this is how to declare an object this underscore underscore new underscore underscore a constructor gets activated and to check that it actually gets activated we're going to do define new self print pokemon has been created and then if it's if it's been defined right it will trigger this uh constructor and it'll print out this thing so let's try and run it as you can see it did trigger it uh so it typed it out printed it out sorry and if we were to trigger it again by using p2 it should print out two times there we go so even how much objects it is created there is always going to trigger that underscore underscore new underscore underscore it's kind of hard to say but you'll get used to it and yeah that is python constructors let's move on to initializing objects initializing objects is uh using it with the underscore underscore init underscore underscore method um so we have a class called pokeball and i'm sure most of you know that there is different types of pokeballs like the normal one there is the ultra ball great ball and master ball i am doing some of them in pokemon go because i don't know every single one because there's like safari balls uh and a lot more in different game modes but i'm only going to do it for pokemon go and i'm pretty sure poke does pokemon go have a master ball does pokemon go have a master ball uh oh yes you can you can't not really have one missing game so far oh no there is no master ball so you there's no master bomb pokemon go but i just added it there because it's very infamous um and it's because it has a 100 catch rate but anyways let's get back to the code so we have our class called pokeball and inside of that we have a method or a constructor called init and in it is used to create objects uh like kind of like the new one except that this is actually used to create some so define in it self name and see rate these are some parameters or global not global variables i mean local variables uh that is stored inside of this function right here this is also known as a function but anyways these are some variables that we can use later on and inside of that we have self.name equals to name and self.catch rate equals to catch rate so self name and catch rate and let's look at this one so now we're declaring four objects okay we have pk one pokeball one pokeball two pokeball three and four so pokeball one it goes this is the name by the way name is pokeball comma catch rate as you can see here name comma catch rate uh 50 pk2 pokeball is pokeball by the way is the name of the class so that's not actually the name of the actual pk2 and pk2 equals to great ball and 65 so it has six it has a great ball it's called a great ball and has 65 catch rate by the way these catch rate are not accurate because i just made them up um but you know they have a ranking by themselves so i just assumed i took uh i took an educated guess um but yeah the great ball has 65 percent catch rate pk 3 is an ultra ball with an 85 catch rate and pk4 is a master ball with a 100 catch rate so now we can use this and we can print some uh things out like pk1 dot name has a catch rate of and then pk1 dot catch rate and this basically makes it so that we can like print out stuff that is actually meaningful instead of just pokeball 50 but uh it makes it more context i guess so pokeball has a catchword of 50 uh you can change the the pokeball or the the the pokeball's name and the pokeballs catch rate by changing uh the one to four over here so let's do the master ball so instead of one it's four pk4 there you go master ball has a catch rate of 100 percent so there is how to implement it let's look at the next one which is adding attributes to empty class so right now we have an empty class and the way to create it is to just you clasp and the name of the class which is pokedex and colon after that put in the command pass which will just make it so that there is no errors that's going to happen it just declares it as an empty class once we did that we can do pdx which is pokedex equals to pokedex um this is just declaring uh object so don't get surprised it might sound a little complicated but after that we will do print pdx dot name underscore pdx.cp which is two things uh two attributes we're going to be adding to our class however it's not there yet right so what happens when we run it of course it's going to come up an error because uh there is no attribute name and cp in there yet so once we activate it by using these commands pdx one dot name equals to caterpie and pdx1.cp equals to 25 it should have it and there we go once you type it out again there is no error instead it types out caterpie 25 so there is how to add attributes to an empty class you can even do this with a class that already has some attributes to it and you can add even more to it it works both ways let's look at some object methods so we might have already known underscore underscore init underscore underscore but we can also create our own method called polka detail and i'll show you what it does so we have a class called createpokey and we can create our own pokemon and we can define underscore underscore init underscore underscore uh as self name and cp and p type um self is of course mandatory we need to have that in order to declare uh our pokemon's name and stuff but self then name the name of the pokemon the combat power of the pokemon and the type the reason i didn't put the straight type like this is because it's a python uh keyword and i am scared that's going to have an error so i just played it safe and named it ptype for pokemon type and after that we do self.name equals to name self.cp equals to cp self.p type equals to p type uh and so on if you have more but after that we will declare another function or method called poke underscore detail and inside of there we have the only one parameter called self which is mandatory as you said earlier and well it's not mandatory i'm just it's mandatory if you want to do like adding in um or changing the the name of it like what we did up here with the pokeballs and once we did that we're going to declare threes print uh print uh code print the name of the pokemon is and then the self.name uh which is what we're gonna set print self.name has cp of stealth.cp this is so that we can use the pokemon's name instead of just writing your pokemon and you can do print the type of pokemon's name is self type which self p type which is the pokemon's type so once we did that we need to declare the actual name the cp and the type so i will do p1 equals to create pokey which is the name of the class python which is my name of the pokemon uh and 100 which is the combat power and grass which is the type after that we just need to do p1.pokedetail which we'll call this function or this method and it will just do the rest for us so as you can see if you run it it will come up the name of the pokemon is python python has cp of 100 and the type of python is grass and yeah you can create your own pokemon like uh using classes and object oriented programming of course there is going to be more episodes later on so i hope you stay tuned for that and again see you in the next video bye