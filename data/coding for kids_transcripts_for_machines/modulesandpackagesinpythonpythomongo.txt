hello everybody welcome back to another episode of python go today we're going to be um i'm going to be giving you a brief overview on modules and packages in python so let's begin so first off what are modules and packages well packages is just a way of saying a folder to store modules in and inside of the packages there can be multiple modules a module is a dot py file like pikachu.py or magikarp.py a module is any dot py file so any python file is classified as a module inside of the module there can be multiple objects of python such as classes variables and functions the what are the benefits of using modules well number one it's simple number two it's maintainable and number three it's reusable and these three uh benefits are pretty much gonna guarantee you faster coding and more efficient coding i'm going to show you some of the ways you can import a module and keep in mind while i'm talking i'm going to be referencing these three um these three uh how do you call it uh these three letters i can say a module name object and alias name xyz so that is uh just a little reminder for you import x import x is the one of the most simple importing a module or how to because you just need two words import and the name of the module import x as z gets a little bit more complicated it imports the module but with a different name so if we're importing a module called pokemon we can say import pokemon as pk which turned it down so in when encoding instead of using pokemon we're going to be only using pk from x import y1 and y2 is also pretty simple it imports um some objects from the module instead of every object so instead of like import x as z or import x which imports every single object from the module import x from x import y1 y2 only import y1 or y2 uh aka the things we want it to import the next one is from x import start from x import star is very similar to import x and it just imports everything from the module however there is a difference and i will be talking about that later on in the video let's move on to organizing and importing files so here is the file tree and i will show you how you can use modules um in this file tree so here's some code that you can use but um there's six of them in total let's begin with the first one from pokey import pica uh we're in main dot py right now okay we're gonna be uh pretending that we're coding right now inside of the python file called main.py and right now we're gonna call up the module called pica which is in another folder inside pokey so main.py will call up the pokey folder and then it's going to say hey i want pika.py so from pokey the folder name or the package name it will import the module called pika inside of pokey that's it and then um you can also do this and make pika instead of being pika short for pikachu it's it's going to be imported as pk so pokey uh from pokey import pika as pk and that's it and then import test basically um we'll import the module called test.py which is inside the same folder tree as app i mean as main dot py so that's why we don't need to do from and yeah now from pokey.magi import my class is another way of calling up a module that is not in the same file basically you just have to call up the package name dot the uh dot the uh sorry dot the module name and then import my class or any object you want to import from that module and now let's move on to from test import func 1 and func 2. so from test which is this module import function 1 and function 2 or the things we want to import from test.py and then the last one from test import star imports every object from test.pui let's move on to import x i will be explaining the commands i showed you earlier in detail import x will import every object from the module x and here is a real code reference so we have a module called pika.py which has class 1 class 2 class 3 and inside of main dot py we have uh two lines of code import pica which will import every single object from pica and then we will put them like this a equals to pica dot class 1 parenthesis import x as z basically we'll import uh the module as another name as an alias name so like uh pica dot py it will and p dot py in this case has function one function two in function three when we import pica as pk however um this is what we would do if it wasn't for dot um if it wasn't for as z we would have to do a equals to pica dot funk one however if we did uh import pica as pk then will be a equals to pk dot funk one instead of pika which is shorter however um this one it might not be too drastic however in some modules their name is really long like pretend pokemon um we can turn it down to pk or pikachu and it will make a drastic difference when your drastic difference when you're coding now let's move on to from x import y from x import y basically just import some object from the module x the um it will import uh the mod or sorry the object that you choose the end you want to import from the module and in this case i want to import only class 1 from pca dot p p y and that's what i did and in here main dot p y we can see that from pica import class 1 and only import class 1 and then a equals to pica dot class 1. now let's move on to from x import star so i will be going over why it's different from uh import x really soon however let me just take a sip of water really quick okay i'm back and my throat is very refreshed um for some reason i am not i can't really talk for a long period of time anymore i don't know why i used to talk for 40 minutes straight without having to drink a single sip of water but now i can't so yeah let me just take a sip of water and i can continue with the rest of the video so as i was saying from x import star is basically just like um import x where you import everything from the file uh in this case pika.py i mean you import everything from the module which is called pika.py and inside of pico.py there is three objects class one class two and class three and we're going to be calling all of them in main.py so from pica import uh star a equals class one b equals class 2 and c equals class 3. and now let me tell you why it's different from import x so notice the code in main.py a equals to class 1 parenthesis let's move back to import x if you look instead of a equals class one parenthesis this one is a equals pica dot class one parenthesis you can see that pica is here however if um we look at uh from x import star there is no dot pica or pika dot and this is because when you use from x import star it automatically calls or like pretends the function or the objects are in your uh program that you are coding right now and this one is useful if you aren't um like on a large scale production however if your code you're planning to use like a large scale then this is not a recommended uh import because if you import multiple modules then um and then they have the objects that have the same name then you wouldn't uh you would have run into a problem where if like the objects have the same name in like multiple modules then it would be complicated and then you would have to try to fix the problem and if you were me i would probably just stick with uh import x which you just need to type out the module name again and that is it however if you um do import x right you can do import x as z and you can make your module name even smaller and this will basically help you and won't make you run to any problems or if you prefer you can just use uh from x import star because you don't need to type out the module name and yeah it depends on your situation but thank you for watching i hope to see in the next video and i also hope you found something useful see you next episode bye for now