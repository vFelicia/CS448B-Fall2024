hello my name is jemmy and today i am going to be giving you a brief overview on json or json um json is a data represention format and it is also known as javascript object notation json is com most commonly used for apis and configs and the reason we use json is because it's a very lightweight and easy to read or write portable data holder also it integrates easily with most programming languages such as python or javascript obviously so that is json and let's get into it so the first thing we want to do in our code is to import json um import.json is important because if you don't have this then it won't work after that we will have create adjacent object this json object is just like a little test for like if we load an adjacent file then it would look something like this um so we will create this in python by yourself as you can see here this is the format of the json file it has two brackets at the end and then inside of the brackets it has commas separating each group and then before the bracket it has three quotation marks you can see here and then let's look in detail so in each comma there is like a topic which is name and then there's a colon and then it will tell you what's inside the topic which is jemmy so name gemmy and then comma age 12 comma hobby programming soccer game something like that you can see here that all of these are different types this one's a string this one's an integer and then this one's a list so yeah you can have lots of different types of objects in python in here such as all of these inside of a json file or json object after that we will just print out the type of this json to test it all right let me comment this out sorry um b so it's a string right now um but then we will convert it into a list so let's do that so i'm gonna control z so we're going to start converting it so we're going to create another variable called converted json equals to json dot loads json object js json.loads is one of the programs or not programs one of the programming lines they have in import.json and then it will load in json object which is our variable we created earlier and then after that it will print converted json the dot name or name this is basically calling this topic which is name and then it will obviously print out gemmy and then it will call out hobby and then zero hobby zero which is in programming right because this is a list so you can call up specific things so this starts at zero so this is zero one two like so and then our final one is converted jason age and age will just call up um 12 right here which is the only thing inside of the topic so let's run this i'm going to comment this out okay like so you can see here um it was what i predicted jimmy programming 12 uh we can change this up and we can make it more uh more clear and more advanced i can say so yeah let's do that but after this one so this one is wood um open.data.json as json file so basically in conclusion what this one does is basically it creates a new um file called data.json like this one i'll delete this one first so we can look at it together so it will create a new uh json file called data and then it will basically put all of the information from our json.object into that file so all this like so and then let's run this and as you can see a new folder popped up like in here and then we can see all the details the name jimmy age 12 hobby programming game soccer um all that and then after this uh we will just yeah that's it putting our data into data.json and then oops sorry uh then now let's just make the converted jason name converted hobby converted age more like clear and more concise so yeah let's do it so um let's like pretend this is a good introduction so let's go like hello my name is jimmy hello my name is and then um it will show up the name and then we need a comma between each one like so okay and then my hobby uh is or yeah my hobby is and then after that we'll go over here and then we can add another thing we can oh i forgot the comma like so and then we can add like and uh i am 12 or no and i am that blank comma years old at the end years old like so and then we should be able to run this um if i forgot a comma then we won't but let's see so yeah there we go hello my name is jimmy my hobby is programming and i'm 12 years old yeah so you can see that it works like so hello my name is no that doesn't make sense i gotta have a comma after this um i'll just put it there would that make sense uh not really but yeah it doesn't really matter um grammar is grammar this is programming um hello my name is jimmy my hobby is programming and i am 12 years old so you can see there that we can adapt this in multiple ways it's very flexible um you can use this json file um for other stuff too and yeah at the end of this video i will show you how to um download a json file from an api and then store it store that json file into a python list for you further use um so yeah let's get into that part okay so i am moving on to my second part of code called pokemon api.py and this one is basically what the thing i was talking about it was uh downloading the files from uh pokey.ap polka api i'm not sure it's a website um i will leave a link to the in the description below but yeah basically what it does it just um download the information from this website and then we will store it into our list poke a list you can see right here and i'll show you the website right now i will be using this one for our video so you can see uh it has 10 pokemon so this one uh it has 10 pokemon and then each pokemon there's the name uh the url of the pokemon and yeah if you go in the url i'm pretty sure it's just like the information of the pokemon let's see yeah it's just all the information of the pokemon but we're not going to be focusing on the url too much today we're just going to be focusing on the name and we're gonna get all these in a list um inside of python so yeah let's do it so um i will leave the link in to this list in the description as well as poke.api um if you want to do like the whole thing but i'm not going to be doing that today i'm only going to be doing 10 because it is more uh more shorter and it's more simpler and more easier to work with overall so yeah i'm going to only be doing 10 today so the first two code we want is we want to import requests and we want to import json um request is to use to uh get the information from the dot api website into our sublime text so after that we will create a list called poke list and it is empty right now it's just two brackets um and then after that we will basically make a url so this is the url to store our uh our api website in and so url equals requests.get and then our url pasted right in there inside of a quotation marks yeah and after that we will create a variable called data storage and then this one will basically put where we put our um all of this all of this into so this is like the variable to store all of this uh junk or not junk but just like um all that messy code that is not cleaned yet or messy json um data and then after that we will put it into a list a list will put in json.load storage data storage which is this one so it will load it inside of a list because i'm this is still a string data storage is a string um so we're gonna put inside of a list okay after that we're going to uh once we have it in our list we're going to just call out the name of the pokemon and we will call out for i in range um one or not one actually let's do like 10 because we need 10 pokemon right so 4i in range 10 data a list results um i name so let me show you in more perspective what this is so most of you would know what i is right it's like a number that starts from zero and it increases every time the list is ran until the list is um over or it is uh the list is snapped out or broken so let's go look into here so this is a polka dot pocadela.json um it's kind of like uh this one i created which was kind of like data.json that we um created earlier together uh i put all this information into uh json file to make it more clear and we can look at it better so you can see here that there are four um main uh topics count next previous and results and then it today we're going to be focusing on results since results contains the name um so inside of our pokedot api we say go into results then go into the number and then go into name so let's look at that so it goes into results and then in each bracket there is a specific number that starts from zero so this is bracket zero bracket one two three four five six seven eight nine ten um like and so on so bracket zero we will have name and then in the name we'll call out bulbasaur and that is how to call out um pokemon and then after that it will pokeylist.insert uh into our list so it will this is how to insert um into a list by the way and then it will basically put it into the slot i which is starting from zero and increases to nine and then after that it will um what it will put in is the data we collected and data is this variable over here so it will put in the data into our poke list and after that it will just print out poke list and we should have all of the pokemon inside of our list there we go you can see that we have bulbasaur ibis our venusaur charmander chameleon charizard squirtle wardrobe bass toys and caterpie um these are all the 10 pokemon bulbasaur ivs are venosaur um yeah you can see that it was it just stores our um data into here if you want to have more i'm pretty sure you can by just like um changing this to how much pokemon you have and then of course changing the url into the url you have uh you can change the limit to like 100 right so we can just open google chrome um i i'm gonna just test it out for you guys really quick so i'm going to store this inside of my uh i'm gonna search this up in google okay like so okay now let's change the limit to like 20 right all right now you can see that we have more pokemon by just changing limit over here uh to 20 and then we should we have more pokemon all the way to eradicate um so yeah let's just try this one out i guess um it shouldn't be too much of a difficulty since we just need to change the back url and the range and then after that i'm pretty sure we should be good um okay so let's run it as you can see it goes all the way to radicate um you can you can increase this actually and you can go all the way from um to 100 in from our uh url you can go to 100 and then you can store them all into the list and you can use it for further use all you got to do is just change the url and the range and that is it it's quite simple and i hope you found something useful of this video and see in the next one bye