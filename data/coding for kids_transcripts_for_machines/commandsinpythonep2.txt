hi guys welcome back to ep 2 of python um and today i'm going to be showing you some basic codes and um yeah so why don't we start going into it so the basic codes is like printing variables doing math and printing and like types of um variables like boolean uh integer uh yeah stuff like that okay strings yeah now i'm going to show you so first of all in here you click add new file i'm going to name it type 2 and remember to do dot py which means python or else you won't be able to i mean you wouldn't be able to do the code but it's not going to be python so once you do that click enter okay you can resolve this back and um open up the terminal uh terminal okay right here nice now what we do is i'm going to start with the basic stuff first so um we already did commentary right yeah okay we did so today right now we're going to be looking at uh oh yeah printing numbers so not not only can you print uh words and numbers but you can also print uh letters and strings so let me just show you this and then um instead of just a string and letters we could do negative one or whoops negative one or zero or we could even do one like that so yeah we could do that and let's click play negative one zero and one there nice so now we're going to do some quick really quick math okay so pretend like um you want to like uh do some calculations and you're tired and you don't want to like calculate like the 10 um 150 plus 150 you wouldn't have to come and calculate that like 150 150 oh 300 and then you have to do it this one automatically does it for you the visual studio will just translate all this into 300 okay so watch 300 right there see that so you won't have to come back to calculate stuff now that's um simple maps first and you can even print boolean which means true or false so let's see how about we do something like this okay and then we print um true like that remember it needs to be capitalized for boolean if you don't capitalize it it's not gonna work okay so remember to capitalize it and now once you play as you can see 300 and it's true so yeah that's it for um the simple stuff moving on to uh tabbing and new space so not only can you type like this and you would have to go to the next line next line it's kind of annoying right don't you think so instead of doing that what you could do is this and then for slash um i mean for a new tab you click back slash then you do t for tab after that you can type whatever you want like false pretend oops you can't do that i don't think you can put um backslash t does that work which will yeah okay yeah for that that backspace there's a slash and now let's pretend let's add a number so five hundred say tax error oh wait let me just try something else i'm not that advanced either so we're basically on the same level i'm just learning from my tutorials and i'm going to like share them with you so um we're learning as we're going okay so let's do a number instead so 500 and um 100 that work let's let's try it no oh guys i'm so sorry what you need to do i totally forgot this step you have to put quotation marks in here then it will work oh see like that oh learning as we're going okay after that uh we i think we could do false and true now since we know we need quotation marks wait why does does true and false being work in quotation marks that's a question so i'm still a beginner i might not knows as we go along i think we will figure it out let's just try first quotation mark true um backslash and this is for new tab do backslash n false it shouldn't have any errors but it's not a boolean instead it's a text so i'm not sure if you can do it like that you can do it like as a text but you can't do it as a movie ah nice okay moving on to uh so now you both learned i mean you all learned that um slash and equal backslash and sorry backslash backslash n equals to new line and backslash t equals to mu tab okay here and that's the common sign remember nice moving on and this one is going to get a little bit more complicated so what i'm looking at is um so okay variables let me just show you what variables are first variables um is like pretend a box that you can name and you can put numbers strings letters whatever into it and it'll keep that for you and you can pull it out whenever you want that's a variable okay um now a variable is like this how you activate a variable is pretend you want to name it um what should we need bob okay bob and put an equal sign bob equals two one okay pretend now if we were to print bob do you think that it would be bob or one one right so print now for printing a variable you won't need a quotation because quotations are only for text and this one is not a text so yeah um if you print bob it should be one let's see let's clear this first let's comment out this wait one sec oh you can't do that you can do that with um c language so i thought you could do it oops let's just calm down this so our terminal won't get in the way right there okay nice so now that we have only these um three things two things let's just clear the terminal oh no i cleared it already and it cleared again which means i deleted it okay it's fine we're coming back and now let's press play one as you can see if you want it to say mob equals to one which is kind of difficult because bob is now turning to a string okay forget about variables per sec if you want to combine um you're going to combine a string with an integer it's kind of complicated because they're not compatible with each other let's try so here is a string right now we do add which means to connect each other add one okay it's going to say syntax error right here can only con con concaternate um string not integer so what we need to do is we need to turn this into str right right in front of the one we turn to str no oh okay all you need to do is turn this into a variable so let's just delete valve or set okay str and then something like this bob there we go and now it should work since bob equals to one bob plus string bob which is one will equal to bob one yes there we go good okay now let's just try without the string okay this is without the string syntax error okay good so we need to have string in front of it and two parenthesis for bob which is um which means that bob is a variable so that's how you put a variable combined with an integer so um this is the variable that's the string combined together and you bought one if you don't have the string it won't work or you could just put str it just depends on you sdr string is the same thing okay next one is um naming functions naming functions is very important this one i'm going to explain to you so there are three rules of naming one you cannot use a special letter for variable such as uh dollar signs andersand um like uh ads stuff like that you can't do that instead uh the only thing you can use in front of your uh variable name is the underscore like that then you could type um in but if you put for example dollar sign equals to 10 okay pretend and then you print and you print dollar sign you think it'll work no right because as you know this you can't do it because you can't start with an unusual letter however if we name it underscore like this you think it'll be evil yes because um no you need a letter behind it i'm sorry i'm sorry you know lecture behind this like one two one here and there's still not experiencing some technical difficulties please stand by okay um moving back to the dollar sign so what happens is that uh the dollar sign doesn't work but i'm surprised that the underscore doesn't work either except for the underscore i wrote that when i was learning so this is my little learning pad that i keep by so i wouldn't lose any information oh i get it okay so oh so um not only can you not use an underscore like alone you have to have wait crucial moment what if you do underscore boom it works okay guys i just realized something if you put the variable underneath the print they won't know what this is so you would need to put this in front oh i'm so dumb okay now we're just going to try out the dollar sign again okay so now that shouldn't work because yep the dollar sign isn't uh um is an unusual letter so it doesn't work moving on to the second rule the second rule is that um if you there is some keyword that you can't use like d f you can't use that okay let's pretend e f you cannot use that at all because it's a keyword of python and if you use it like you won't be able to like it does that and it's not you know it's not what we want we only want 10 and it's invalid too so yeah you can use def and there's some more keywords you can search it up in the internet like python keywords and you'll find a lot and then that's the um that's the words you can't use for your variable name now third rule is case sensitive case sensitive meaning that your uppercase and lowercase are really important so your uppercase like pretend if you name your um your uh variable like name wait wrong place name something like that and then in here you put name it won't work name is not defined see if however you change this to name lowercase then it will print 10 normal so yeah it's also really case sensitive remember to check your variable names if you're going to put capitalize remember it's capitalized okay okay moving on to the last one this one is to add a variable with a flow okay last time it was a variable with a string right now this time it was a very is the variable with a float so let me just show you how to do that first of all let's set bob right here to a flow float meaning that it's a decimal an integer is a whole number a float is a decimal okay so a flow can hold both whole numbers and decimals but it just requires a little bit more like space i'm pretty sure so yeah float is decimals and integers is whole numbers just don't get mixed up okay so now let's send bob to a float 1.9 pretend let's do some easy equations set name right here to two okay one sec uh okay okay oh okay so what you do is when you print it you print something like this um so we're gonna put make it to 21.9 i'm pretty sure so we do something like name name plus uh float and then parentheses bob and then it will automatically calculate right yes 3.9 so it adds it up i'm i'm wrong 21.9 i'm bad at math or i'm just okay so something like that um 3.9 but we don't want that instead we want like um some like connecting it together okay so this is uh not a string plus flow plus a float but it's just a variable plus float so let's try string plus float but the variable is a string so um 2 is now a text now it's going to be 2 1.9 21.9 okay since name is now a string not float okay um so what happened was that name was a variable right but we used it as a text so instead of that why don't we just do two so that worked you can only do it for float to strip print so i guess that we can't do this i'm just going to show you some equations this is going to be some maths okay so i'm going to show you maths let me just delete all this okay so the math is quite simple it's not that hard okay so um some x plus y some algebra okay so for 10 let's say like we're going to set a variable x equals to 10 y equals to nine okay and then we're going to say um what about it z equals to x minus y there okay and then we're gonna print z like that what do you think will happen it's going to be one right okay let's see one right there now what if we want to combine one with um let's say 9.1 okay so we could do we could take a step further and add the um the one with another thing so we could go like once they print that we could do something like add in here z plus this is a then okay a equals to um a equals to three point so it should be 4.9 okay so uh not okay so float hey there okay let's try that boom 4.9 yeah that's correct so that wraps it up for this lesson um i hope you found this helpful in the slightest bit if not uh well um i'm like sorry so yeah see you in the next episode of python see you next time