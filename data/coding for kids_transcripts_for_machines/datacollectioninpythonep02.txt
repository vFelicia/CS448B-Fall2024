hello everybody my name is jemmy and today i will be giving a brief overview on collections in python uh this is ep 2 and today we're going to be looking at dictionaries and sets so let's get started i am doing this in jupiter notebook but if you prefer in google collab you can uh the way to open jupyter notebook is to type in command prompt jupyter notebook and it should open your browser and after that you just need to click on new python 3 ipy kernel and it will bring you to an empty notebook um however minds i already did it but the link to download this notebook is in the description if you want to go download for yourself then you can click on that link okay now let's continue so in here what we want to do first is we want to look at a dictionary and we're going to look how to create a dictionary so a dictionary is created by having let me delete this really quickly so a dictionary is created by having two curly brackets uh next to each other like this and then this will create a dictionary but however a dictionary isn't normal like lists and like tuples instead it's kind of different um a dictionary well in real life a dictionary used to have like it has a word and it has a definition of a word so that's what it kind of looks like in python 2. so if we were to press enter in the middle of these two curly brackets it should give us some sort of like this format and then after that what we want to do is we want to type in the word first so pretend we make up a word pretend so like uh let's make up a word called i'm not even going to make up a word i'm just going to use a word i already made up python and go or python and i'll just say python um and then once you did that then what you do is you put you go outside of the quotation marks and then you put a colon there and then once you did that you put an integer or a list or anything really i'm going to put another string and i'm going to write the definition of python python and i'll say a python python pokemon series pokemon series right so now we have a list called start not sorry now list a dictionary called start and inside the dictionary there is a word called python and inside of pythamine or what the python means the definition of python is a python pokemon series so if we were to print out uh print start and brackets and then type out python like so it'll print a python pokemon series so this is how to create a list but today i'm not going to be doing python a python pokemon series uh it's actually today's series but i'm going to be using some pokemons instead uh since it's more you know fun to do with so print start uh and then let's type in squirtle squirtle like this and we can see that it prints out squirtle's integer right here which is 15. um this is the combat power uh so yeah don't get confused but the integer is the combat power of the pokemon and i forgot to mention but if you have multiple uh items inside of a dictionary then what you want to do is between each one you have a comma at the end to separate them so yeah this is basically how to create a list and let's look at how to update no not a list a dictionary i'm sorry and now let's look at how to update a dictionary so basically i have a dictionary here called start and inside start it is basically like last time it has pikachu charmander bubbles are and squirtle the starting pokemon for pokemon go and um in each pokemon uh there is the combat power so this is the what the dictionary called start kind of looks like and now we have another one called update pokey and it says it's equal to bulbasaur 15 uh home by power we can see the combat power here pikachu has 20 charmander has 15 bulbasaur has 10 and squirtle has 15. so right now bulbasaur is looking kind of weak um and all the rest are kind of strong um so he's kind of neglected but what we want to do is he went to the gym and he went to train uh and now he's really really well he's got he's gotten stronger so now we're gonna set him to have 15 combat power instead of 10 so let's do it what we want to do is we want to use the command start which is the name of this first dictionary dot update don't get confused okay dot update is a command not the name of this dictionary start dot update and inside parentheses we pass in a parameter called updatepokey which is our second dictionary and once we did that this is what our list should look like so now we can see that bulbasaur is no longer 10 by 15 uh and if we were to print one buff print our list beforehand uh then this is the difference let me print it okay okay so now we can see that bulbasaur instead of being 10 it is now 15 so that is how to update a list uh and make sure make sure that you have this the name the same thing or else it won't work so yeah that is how to update a list let's move on to not a list i'm starting to say list dictionary dictionary okay never don't forget all the lists they said it's dictionary okay now let's look at how to emerge a dictionary so we have our first dictionary here which is start again uh with all the pokemons and uh bulbasaur has 15 combat power and we have another dictionary called water this is like some water type pokemons like vaporeon which is an evolution of eevee suacoon or suicune i don't know but it's uh it's a part of the trio the beast trio in generation six and then there's magikarp of course the classic uh and so vaporeon has 30 combat power suicune has 50 and magikarp has five um and yeah what we want to do is you want to put them together so oh it's going to be one big list so what we want to do is we want to use the command just like last time start which is our first uh dictionary's name dot update water and now basically uh these two dictionaries will combine together into one big one um which is the start one so it will just push it together and let's see what it does so as you can see it's a really really really really long uh dictionary and there is like uh over here there is where it connects after squirtle there is vaporeon and the rest so yeah that's how to merge a list a dictionary oh my gosh a dictionary and now let's look at how to delete dictionary elements so like a part of the dictionary but not the whole thing so let's look at how to do it so let's see first of all we have our dictionary over here the start dictionary with all the starter pokemon and we will print it first without doing anything so right now it is unchanged untouched uh so it's completely the same but let's use our first command which is delete start charmander so this will basically delete charmander from the start uh dictionary so let's do it now you can see the difference charmander is gone from our second list but it's still there in the first list because it didn't delete it yet but after that after deleted it's no longer there uh now let's do a different thing let's do start dot clear which will clear our whole entire uh dictionary okay now you can see that the whole dictionary is gone nothing is left of it but now uh let's move on to our last one which is delete start and i'm pretty sure you guys know what that does it just deletes the entire dictionary out of existence so let's see as you can see it comes with an error so this is before right before and we have our uh dictionary just like normal but then after is an error because it says name start is not defined the reason it's not defined is because it's gone it's no longer there it's been deleted um but yeah that is basically some deleting uh elements of dictionaries uh and yeah pretty good uh and handy to use let's now let's move on to finding dictionary length so now we're going to look at how long a dictionary is by not counting them of course but by using a command it's pretty simple i'll show you but let's look at our new dictionary our new dictionary is called fire with some fire type pokemons like torchic flareon a volcanion volcano is a good pokemon it's really really weird it's a dual type pokemon that has water and fire so it's kind of uh like uh opposites of each other but it's a good pokemon i like it i don't think it is in pokemon go it is volcanion and pokemon go i never caught it so uh in pokemon go uh yes it is in pokemon go wow that is a lot of cp 3882 wow okay well yeah we pour into good pokemon just simply yeah and that's how he looks uh volcanion and yeah so volcanion has a comet power of 60 i know that is really really really low but i am right now judging my pokemons from 1 to 100 combat power and i know it might not be accurate it's probably somewhere around 90 if it's on my scale but but but this is not about pokemon stats right now this is about coding so we're gonna leave the minor details out okay um and we're gonna focus on the bigger detail okay but yeah let's move on uh so once we did this we're going to be uh well of course we're gonna be finding the length of the dictionary so we can see right here it's three right because we can count it but how however if you continue your dictionary like you add more and more stuff over like uh the project or the program uh then you'll add you have a really big dictionary at one point and then you won't be able to count it anymore so then you would need uh this command which is really really simple print len which stands for length and then the dictionary name fire oh and it should just print out how long it is so we can see that it's three and if we were to like copy paste this one more time like so it should become six oh okay oh i forgot the comma okay there we go it's still three and the reason this is uh it's still three because we gotta change the the well the name of the not the name but the wording so i can just delete some of it i'm gonna tour toward let me let me make up my own name uh tour tour kick okay torque kick and there's uh flare on i get it it's like fire flare on i don't know and then um volcanion let's call this uh uh uh ocean i don't know uh what is like an ocean disaster tsunami that doesn't make sense um just say huevos wavenyan wave okay screw it we have tour kick flareon and wavian as our three new pokemons and let's do it again as you can see it's six um so yeah this is how to find the length of uh a dictionary it's just by doing print len and then the dictionary name okay let's move on uh let me delete this okay so let's move on and we're going to look at how to check existing elements or basically we're going to see whether or not the things we're trying to look for exists inside of the dictionary this is uh also used with input or user has a use user interface kind of uh but basically we're going to be using a dictionary which is the fire dictionary uh and you have torchic flareon and volcanion so we have also an input which is called keyword keyword equals to input what fire type pokemon are you looking for so this will basically ask them um and then they can type their reply in and after that it will basically trigger a function called search and then inside the function there is a parameter called pokename and we'll just pass in keyword as the parameter but now let's take a look at the function so the function itself has the name search and a parameter called pokename and it says if poker name in fire which means if the keyword that we're searching for is inside of our fire dictionary then print poker name which is the keyword is in the database but if it's not then else print poker name is not in the database so let's take a look at uh the real thing so what are you looking for pretend i want to see uh a fire pokemon like moltres uh which is a fireball firebird like so oh no search is not defined okay let's see what it got wrong search and search uh let's see okay moltres i'm i don't know why i'm repeating it search is not defined name search but it's it's it's the same thing right or do i have how do i how did i get it wrong name search is not defined am i doing something wrong i didn't edit it one second okay guys i just figured out what it got wrong i am very very stupid but um it's not defined because it the keyword went first before the actual function is defined so this means that there is currently no function called search while they want to call it up so let's control x this and we're going to put it beneath our function so it's going to define our function before so like this and there we go it should work hopefully multrez okay multis okay and now click enter and there you go motors is not in the database uh the the reason an error appeared if you didn't get it was because uh i put this uh keyword that triggers the diction not the dictionary triggers the function before the actual function was did it um even existed which meant that there was actually no function called search until uh at the end of the code and of course it will have an error because there was no function called search at the time they called it so we have to put that after search was defined um but yeah that is how to fix the problem and now let's look at some pokemons that are inside the data set so like volcanion volcanion like this and there we go volcanion is in the database so we can use this as a user interface and you can develop it to be even more complex and more uh appliable i can say and make it better overall but yeah this is our uh data set of fire and this is how to check existing elements and now let's look at turning a dictionary into a list so let's look at this now some of you might be saying like that's so simple what do you mean it's so hard why do you need all this for loop for and you're probably thinking like we could just do like this list fire equals to list and then our our name fire like so now it converted the whole entire list into i mean the whole entire dictionary into a list um print l fire l l fire like this right and uh oh i forgot why do i put where did parentheses um there oh my gosh why am i putting quotation marks on yeah okay there we go and you're probably thinking like hey that's it now we turned our whole entire dictionary into a list but i thought that too in the beginning but then however i realized that it was not that simple we can see that in this dictionary right here we lost all our definitions meaning that we don't have any definitions for these pokemons at all but the what i want is i want to keep the definition as well as the item so i have to use a for loop and i'll show you how to do that right now so we have we're going to declare an empty list called l fire or saying for list fire and after that we're going to make a for loop for i in fire a equals to i comma fire and then the the i in parenthesis not parenthesis bracket this will basically grab each um grab the item and the item definition into the variable a and then it will append a to the variable l fire which is our list so it will add a into our list right here and after that it will just add and add an ad until it's completely done and once it does that we can just simply type it out and now it is a full list as you can see a full list toward chick um and by the way this right here we can call it up too so pretend we only want this one right so we can do we only want torchic so we want and torchic index is zero so if we were to do this and it will only print out torchic so yeah that is how to convert a dictionary into a list i was about to say how to convert a list into a dictionary but i'm getting too confused anyways let's move on why am i laughing so weird okay i'm gonna cut that part out um but uh yeah i am very sad inside okay let's move on um so now let's look at the popping dictionary it's not like a popcorn dictionary but it's like uh it's how to pop a dictionary so um in here we're going to be basically deleting some elements like we did before but it's a it's kind of different because instead of deleting any element we want from the dictionary we will delete the uh only the back uh the last item of the dictionary using the command dot pop and let's look at how to do it so we have a dictionary called grass and inside of grass there's some grass pokemons such as uh or plant type i mean both of them grass or plant uh glass grass who who calls it plant type i mean does your plant type even plant type pokemon i mean some people call it plant type but it's called grass type yeah it's called grass type but you know some people call it plants some people called grass but yeah it's some grasstype pokemon such as bulb sprout executor which is a great tank in pokemon uh and chest pin which is a little green how do i how do i even describe it it's like uh it's like a forest animal with a green and three little hair spikes here i'll show you a picture um chest pin all right let's look at him yeah three little spikes on his head he's a i don't even a squirrel i can say with a tail that's like that but yeah he he's a plant type and yeah that is our grass type dictionary and let's look at how to pop a grass type dictionary well not a grass type dictionary any dictionary so um let's first print out uh our dictionary before it was popped and then let's pop our dictionary using the command dictionary name or grass dot pop item and then inside uh we have a parenthesis after that and we put print after comma graph which will print the dictionary after it was popped as you can see this is our dictionary before it was popped uh executor is still there i mean not executed chest pin is still there but after chest pin is gone because it's been popped and we can keep on popping every uh single item until it's gone and eventually after that it will come and come up an error because there is nothing left uh it'll basically be deleting the whole entire dictionary but yeah that is how to pop a dictionary now let's look at our second to last code which is a set um however i don't have too much information on the set but it's kind of similar to a data not a data a list and a tuple not completely similar to uh i call it a dictionary because it doesn't have a definition it only has the the name or the item so let's look at it now this is how to create a set so what we need is we need a name equals to set parentheses and inside the parentheses we need brackets it it's really confusing but it it's how to create a set so this is to declare an empty set right here electric equals to set and now we have parentheses and inside the parentheses we have a bracket and whatever we put inside the back bracket integers uh lists dictionaries can you do yeah you can put dictionaries another set i think and integers strings etc and separated by a comma then that's inside of the set so right now i'm going to be using these three for our electric type set jolteon zapdos and galvantula uh galvantula is a pretty good pokemon in pokemon go it was my first 1000 cp uh pokemon i'm pretty sure galvantula okay um it's a pretty good pokemon overall it has uh i have one with like the best uh i call it the best um skill set and it's pretty tanky and it does a lot of damage so yeah oh this is a shiny i never had chinese only had a normal one but anyways let's go back to coding so this is just how to create a set and if we were to print that it prints it sort of like a dictionary with the curly brackets but it doesn't have the definition and it prints out the whole thing uh i'm pretty sure we can slice it too so if we want only galvantula oh no it is not sliceable so this was an experiment but sets are not sliceable which means you can't get only a part of them and so you got to print out the whole thing but yeah now let's look at how to update a set just like we updated our dictionary so electric equals to set jolteon.covangela basically we're creating a set called electric and we're going to print out electric or the set before it was uh before it was updated and then we're going to update our set by using the command uh set name or electric dot add and then whatever we want to add to the end of our set which is magnemite which is another electric pokemon it's pretty og i'm pretty sure it came in the early generation uh magnamite magnum might i'm sorry i just need to look it up magnemite generation again narration okay introduced in generation one yeah i knew it was an og so magnemite was been been there for a really long time but yeah once we added magnemite in we should have a magmite at the end and we will print out electric after it has been added after magnamine has been added so now let's look at it as you can see uh magnemite was added to number two that is very interesting it's been added to the middle um i am not sure why but it's been added there uh if i look at it from alphabetical order it doesn't really work because the z is zapdos it should be behind but uh let's look at a little detailed if we want dot add a parenthesis like so uh why did i how how is that even possible but all right let's look at this okay dot add orange right so it doesn't add it to the end oh no this is what list i need to do with set sets python set dot uh this ad set uh okay geeks for geeks over here so but they're very but they're using a uh we know that is a set um so this is a set add s print okay let's run this i don't think anybody's having oh sorry i don't think anybody's having the the sorry i don't think anybody's having the same issues that i am for some reason i don't know why my uh my magnemite is going into the middle but anyways uh that wraps up today's lesson and i hope you enjoyed see the next one bye