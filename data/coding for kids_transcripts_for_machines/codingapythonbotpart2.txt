hello everybody my name is Jimmy and today I would like to continue my series of making a python bot today is part two and we're going to be continuing our basics for uh our robot so yeah let's go ahead and get straight into it first things first again open visual Studios okay and this is our part one if you haven't seen the video you should go check it out it's just covering some basic python commands like printing F El concatenation uh commenting and arrays today we're going to be covering dictionaries for Loops while loops and also uh functions and yeah let's go ahead and get straight into it first we press crln this creates a new file let's close can actually I'll leave that open it's fine I'll press contr s to save it into my folder nameing this python bot 2 no actually P2 G simple py okay and now now once we're over here uh we are now in our. py file and we're going to to start off with uh dictionaries dictionary all right so dictionaries are quite are kind of similar to uh lists but dictionaries can store two things they store a word or keyword and also the meaning or it's more like the term and then there's a subject and there's a term I'll show you what it looks like we can say dig equals to uh equals to these little curly brackets and we're going to say first one we're going to say uh bun bun into M cat and then we're going to store his age or let's store his color first actually I'm going to make this Buton button all right I'm going to make color like orange okay and that's our first term and our second we just put a comma and then we can WR another one we can say age I think he's like a eight or seven I don't know but we can also store integers as well as uh as well as strings and we can store lists as well so we can store a lot of things inside of a dictionary I'm going to say uh we have the Color age and also what else food favorite food is probably cat food it's the only thing he eats cat food okay so if we have why is it like that oh I forgot had to comment okay all right now once we do this we can print out bun bun so print bun bun like so and we're to run this as you can see it prints out the dictionary and if we were to print the type what type is run bun so type bun bun like so it would also say dictionary like that now let's go ahead and print out an individual term so for example we can say print bun bun and have this uh bracket right here we can go for each of these categories I can say color PR bu button color like that one press Center and it would say orange and if we were to change color to age it would say seven and then the last one food would be like cat food there you go and now this is basically the simplest way to do dictionaries uh I realized spell dictionary wrong and now we can also make bun bun into a different type of diction we can do dick like this and then we can have uh parenthesis and this also turns to dictionary using the dictionary Command right uh wait maybe dictionary maybe it requires a function I'm not sure we have to change from those colons into an equal sign so let's go ahead and do that equal to equal to and equal to like that let's try it out uh I also think we have to make into one line oh and then we can delete these really quickly like so okay let's run it out all right okay now it works and then we can also uh check the type still it's probably still going to be dictionary print type bun bun like so it's going to be dictionary yeah so we can have two ways of writing a dictionary that way or the other way let me control Z back the other way because it looks more original like so okay there you go all right once we're done the dictionaries let's move on to our next one which is while Loops so while loop a while loop we can use to run something infinitely so for example we say while true what do we do uh let's have a variable called like a or something a equal to one and while true print a print a plus plus equal to one okay does this work I'm going to comment these this really quickly one two three okay right out A+ one is invalid syntax what if we go into here and we say A+ = 1 which basically adding itself and do that okay and also I'm going to import time because we need we need to slow it down just in case it goes too fast so import time we can go uh time do sleep well let's say like one second okay let's try it out one two three as you can see it will go on forever unless we stop it uh so let's go ahead and type okay wait let me just trash this all right after that uh that's basically while the while loop if you want something to go on for a long time that's what you can use it for but now what if we don't want to go on forever so we can say while a is less or equal to one uh equal to five then keep going okay once it is greater than five then we say else else uh break like so that work I'm not sure wa I have to have an if all right so instead of this I say if a is is I'm going say while true sorry while true if a is greater than five then break like so let's try it out one two three four five break there you go so that's basically how to stop a while loop you can keep adding it and then break it after that all right once we're done with this uh we can move on to our next one which is the for Loop the for Loop is quite similar to the while loop but it's more easy to control it has a lot more purpose I feel like so we can do 4 I in range and then we can specify how much we wanted to run so let's say run five times again we can I'm G to I'm going to copy this control C contr control V like that okay I'm G also going to comp this out okay so a goes to zero and then we can can do kind of the same thing so a plus = to 1 uh print a it's going to come out really quickly because I have no weight yeah as you can see 1 2 3 four five we can change this again to like six yeah and it goes to six uh another way to use for Loop is if we were to have like a like a list for example or an array we can do something like this so let's have a poex equals to uh this we're going to have Pikachu like so Pikachu uh I haven't played Pokemon a long time so I don't remember all of them Pichu I kind of forgot Pichu there's Raichu I think we'll do the evolutionary tree of Pikachu for now so now we're going to say po Pokey in Pokedex like that we don't need this anymore we're going to say print poke and what it does it's going to go through the loop and you're going to print each one of them out oh this is not callable poex print Pokey oh sorry make this an I then we can say in Pokedex print poke I like that Pokedex eye okay Iron Range list object is not callable Iron Range Pokedex this work L Pok√©dex okay maybe we do this L Pokedex so now it prints out okay there you go finally so it prints out the amount of Pokemon in here we can change it to add more so 10 pip plop as you can see just prints out pip plop instead of us having when you print it on our own so we can just keep adding to this list it'll print out everything that is inside here and yeah that's basically it for for Loops it's quite useful okay let's move on to our last one which is kind of complicated functions it's not complicated in the sense where it's hard to do but there's a lot of commands for us to execute which makes it a little bit longer than the rest so in functions we basically have to it's basically combining a big command into a small command so for example if we were to have if we were to dissect our walk so when we walk we put our right foot forward and our left foot then our right foot right so instead of saying right foot forward left foot forward we could say walk equals like Define walk and we can left foot forward right foot forward so when we walk we could say we walk instead of those individual commands uh for example let me demonstrate it so this is going to be a simple one we're going to move on to Advanced ones uh like after done this one so let's go ahead create this one really quickly uh let's say huh what is a good command and that is not useless but it's also not complicated uh we can say math again formula formula formula and I'm going to divide something by two then add two to it okay so Define formula we're going to have in here this is going to be our local variable where people can put stuff inside and then we can edit through there so inside of formula the local variable is going to be X as a number so we can save Define formula we're going to X Plus divide by two divide by two then x + 2 print X like so if we to run it nothing should happen because we haven't used it yet but if we say formula uh equal formula and we decide to call a variable and inside is going to be our number so we're going to put 4id two is no that doesn't really work let's do eight 8id by 2 is 4 plus 2 is six so let's try it what Okay so by two is 4 plus 2 is six why did it come out eight did not do this one yet uh print x what if we set this as a variable so AAL 2 and then xide two D that + two like that and we say print a all right now this works because I think if we print X it just print I what have we put inside but now since we make a new variable we can uh now make it work so let's do 12 12 2 is 6 2 8 so it should be eight there you go so this is a simple formula that we can use I mean simple function that we can use to do our Command instead of having to do do having to do this for all of them we can just say formula 12 and it will calculate it for us which is quite easy all right let's move on to some complicated things now so I'm going to com this out all right uh let's make this into a game scenario because I feel it's most inter aining so we're going to have a battle I guess and then this is to uh I'm going to make two functions to heal and to attack so let's make our Attack One first Define attack inside we're going to have um enemy and what health enemy and enemy health health and let's just say eh for enemy Health all right so we're going to do this and we're going to say enemy I'm just say n k n so uh if we say attack enemy and we put the name then we put the amount of HP they have right now we can say like uh F string print F string we're going to say n n got taken wait got attacked okay and then we're going to print another one we're going to say uh n lost and okay we got and got attacked and then after that we're going to say n is now at is now at uh eh minus let me make ehly current health so I'm say h equals to eh minus let's say 20 I put D for damage actually H minus D is now at H oh F string H like so all right so that's our attack we can try testing it so we can see attack who are we attacking let's see we're attacking bun bun bun bun okay and then no let not let's attack uh Ryon okay and then we're going to say eh is his current health so 100 then attacking maybe for like 10 HP I'm not I'm not going to put these in that okay 10 HP like so if you to run it we' say Ryon got attack Ryon is now 90 HP 90 HP okay which makes sense because uh basically we put our string in and then it subtract its current health from its the damage we put in and 100us 10 is 90 as you can see this is how to make a function that's a little bit more complicated so it has three local variables all right now I'm going to make a heal so heal a character uh this is the current H current health and let's say our heal so what should Health uh health I'm going to say life I guess so eh plus life instead of subtract okay and that's it so instead of heal we can say heal Ryon at 90 let's let's heal for 20 bam now it says okay I got so get attack R got healed okay let's try it again R got healed R is now at 110 HP there you go so that's basically these two uh functions but there is more as well we can have this in a separate folder and call it from this one from that uh file so let's go ahead and make a new file control n Save this as functions functions Ty I'm going to grab both of my functions and put them aside so contrl + C contrl + V I'm going to comment this function like so I'm going to save it make sure to save by the RO W work and then now I'm going to call it from here so if we were to run this right now with our heel with these commented as you can see it does not work because heel is not defined however if we were to do something like this from functions right it's our folder name functions import Star when we import Star we're basically saying import both of the all the functions that's inside of this file but if we were if we don't want to import everything we can just say import a tack like this and it'll only import a tack so he won't work if we try as you can see it still won't work so let's do import Star like so and it's going to heal the squiggly marks went away and now it works so yeah this is what I'm trying to say that it does work if you call from a different file and if we were to change something in this file for example if I were to change HP to Mana let's Mana Mana like so and if we don't save it it's still going to say HP because it didn't update yet but if we control s come back in here it's going to change to Mana so yeah make sure to save it if you want to ever do something like this it's going to be useful in like bigger projects where you don't want to you don't want your uh functions to get cluttered in your code so you separate them to another file this way you can also carry it around and you don't have to copy paste into different projects and anyways that's it for this video I hope you enjoyed and learned something uh the next video we're going to be covering some more Basics and yeah that's it see you