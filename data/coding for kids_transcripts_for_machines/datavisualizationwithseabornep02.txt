hello everybody my name is jemmy and today i will be giving you a brief overview on penguins just kidding today i'm going to be giving you a brief overview on seabourn ep2 and uh today's seabourn is going to be mostly about penguins and flights of aeroplanes but i'm just going to give you a little intro of penguins first uh we are going to be coming back to this slide really soon i just want to have an intro on this page because i think it would be funny but yeah let's move on to seabourn so i will be doing or editing most of my code inside of jupiter notebook which you can install with the video up here this is a video i made in the past how to install jupyter notebook you can go follow it it's very easy to do and to install without further ado let's start so first if you're in windows open up command prompt or type cmd in the search bar once you get that make sure to pip install c board as we are going to be using this library today however if you already have it then you don't need to but if you're not sure then do it anyways you don't lose anything and you can check too once you're done with that remember to pip install matplotlib which is another library for the data visualization once we did that we can open jupiter notebook so jupiter notebook type that in and boom it should open in your browser okay we can wait okay there we go and since jupyter notebook is a local notebook this means that it can only use as much information as you download so if pretend you're using google cool app then you won't have to aip install in your command prompt you can pip install in there but jupyter notebook is local this means that you would have to do it in command prompt and remember to keep command prompt running because if you stop it then the connection with jupiter notebook will be lost so just keep it in the back of your computer let's move on and let's go into my folder that i prepared if you don't have it then just click new um folder right here and then you can rename your folder to whatever you want that makes uh that has a clear definition of what we're going to be doing now so let's go into my folder um and today is ep 2 tomorrow's ep3 so like so and once we're in here the first thing we want to do is we want to import seaborne as sns which is um which is a way of making seaborne shorter so instead of saying seaborn every single time we want to use it we can just say s and s and after that we want to import matplotlib dot pi plot which is matplotlib as plt this joins down the whole name a bunch and we can use it later on once we're done with that we want to uh percent sign matplotlib inline which allows us to show graphs so if you don't have this then make sure to do it also i want to show you this link which is the official seaborn documentation if like pretend you have any uh questions about this or you want to do further research then i recommend you this link i will leave it down in the description it should be said seaborn documentation and then left this link you can go in there and follow me which is uh this link and one thing you should come to this page and you in contents we have an example gallery once we click in here there's a bunch of ways to um to display our data so there's joint plot re replot joint plot again joint grid pair grid all of this however we're going to be doing only some of them today such as the scatter plot the cat no where are we yes the cat plot uh the the heat map the cluster map and some more but we're not going to be covering every single one today if you want to you can go if you want to look at all of them and understand them you can go into each one individually where there's going to be an example code for you to try out but anyways let's get back to our code so right now we're going to be learning about metrics plots and as i said before we're going to be looking at two maps the heat map and the cluster map the these two maps are very similar to each other the heat map is basically going to show you um the these two are very similar to each other and let's continue so first thing i want to do is i want to um get data sets uh seaborn already has premade data sets for us this means that we don't actually need to have our own to make our own data set so we can just use theirs with this code s e list equals to s s dot get lit get data set named parentheses print d s list it will basically print out the whole uh the name of the data sets they already prepared for us and today we're going to be using two of them what you might have guessed was penguins and a flight and i will just uh clear my output since i already did this one and let's have to be a surprise so let's run this one first okay and then let's do this one okay and uh let we need to wait until it's connected and there we go after that we can do this and this one basically stores the penguin data set into a variable called pen i use pen because it's more shorter than writing penguins so just pen and pen dot head chose the first five columns of the penguin data set so there's the species which is basically the type of penguin there's the island where the penguin lives on there's the build length um the build depth the flipper length the body mass or the weight and the gender so i will be showing you what these four are build length build that flipper length and body mass so let's go back into your penguin slide so the let me use the thing okay so the bill length is this is how long the bill is the build depth is how wide the build is the body mass is how um heavy the penguin is or the weight of the penguin and by the way we're measuring the build length in millimeters and the build depth in millimeters and the body mass in grams we're also measuring the flippers flipper length in millimeters and flipper length is how long the foot is so basically that is all the data data you need to know for penguins um so just to make clear of everything okay and now once we come back into this page we should have a better understanding of what these four are now let's move on to flight so flight is the same thing as penguins but it just has a different data set so uh the flight let me show you we did the exact same thing we stored the data flight into the variable flight and then we made flight dot head which will show the first five rows of the data set flights and here they are um there are three cop three rows no three columns sorry they showed the first uh five rows okay sorry um i said columns it's they show the first five rows for head and then there's three columns in flight which is the year the month and the passengers if you want uh if we did some research i copied this passage from another website and basically the flight is uh this is the number of airline passengers who flew in each month each month from 1949 to 1960 so it shows that how much passengers flew from each month from 197 1949 to 1960 and yeah that is it um now let's move on to the heat map now ever since we've already prepared all of our uh data set we can move on to the heat map now the heat map there is pen dot core the pendant core is just showing the penguin in a matrix form metrics form is what we're going to be basing it off in the heat map so we just should get a visualization first in here now let's put into a heat map so here it is um it might look a bit strange to you but let me explain so the more white the columns or the tiles it are the more the greater the amount or the more uh the more correlated the more related they are to each other and the darker the amount the less related they are so we can see here that this on a diagonal line is extremely white or one this is because these are the same category build length with buildings build depth with build depth flipper length with flipper length and body mass with body mass so this doesn't count because they are the same category but let look let's look at the ones that aren't the same category but they're still pretty white so here the flipper length and the body mass are kind of white um and they are not the same category this means that they are both related to each other somehow maybe the flipper length makes most of the penguins mass but yeah we can tell if they're correlated by the how wide the tile are also we can tell how not correlated they are using the same method only vice versa which is how the more black the less correlated and now let's customize our heat map even more so we can make it different color themed um if we change the c map to cool and warm then it would look somewhat like this the more red the more correlated the less red the more blue the less correlated it would be now if we were to look at this we can even add some more things which is anode anode will show us the number specifically on each tile so let's run this so you can see here that this uh or the diagonal line is all one this is because they are the same category and the rest are just red numbers and in here we can see 0.87 is the most correlated out of all of them except for for the diagonal line also up here if we were to look um on our matrix 0.87 and 0.87 so they are the same number with the command and o we can display that let's move on to flights so we are still going to be using the heat map but we're going to be using the flight so this will basically show the matrix again um and these numbers in here are the passengers for each airline flight and this one this yaxis is the month and the xaxis is the year that they are traveling um let's put in a heat map okay so this might look a bit menacing but it is not uh and here the m flight the m flight is matrix flight uh and i made this variable new and flight equals to flight dot pivot table values equal passengers index equals month columns equal year this basically makes a heat map and sns dot heat map and flight note equals true fmt equals to g uh this is very confusing but don't worry i can explain if we were to take out this part and only focus like this it would print out something that looks somewhat like this okay and you can see that the same logic applies for the penguin the more darker the less people the more white um the more people so in here you can see that the dark the darker one means less people and the lighter ones means more people uh and this is because the airplane was invented in the 1903 which means that this is only a couple years later i mean people didn't trust as much as they would right now since it was just invented but over the years it developed in safety precautions and commercial flights so people started to trust it more and use it more we can also see the month right we can see that between july and august even though normal people don't really use it you can see it's more lighter than the other and in here we can also see that it's more light this is because uh over here um it's probably in break or people have been traveling a lot during these two months because break vacation uh business travels i don't know but we can see a pattern that develops now let's add these back so and note we can see from the beginning or the penguin that it's just going to show the numbers but if we don't have fmt equals to g like so then it would come up a whole mess uh this is because anode right now it is um on square which means that it will be an infinite number we can see some ease here that is not covered uh but if we add the fmt equals to g this will basically make it so that it is a normal number like uh the matrix above here so now like so and let's move on to the next one so sns.heat map m flight c map it goes to magma line color goes to pink line width equals to one this is basically customizing our heat map so it now looks like somewhere like this um or you can change the line color to whatever you want like white like so and we can change the line width to a greater amount like 10 or 100 that's too much like so and you can see it gets really small uh but i like to leave it as one because it looks nicer okay and now let's move on to the cluster map the cluster map is a sibling or a cousin of the heat map and it looks somewhat similar but it's not but second even though i'm not streaming today i will be drinking water on stream because that seems to be my signature now um fresh water everything that lives on land animal or plant depends upon it yet only one percent of it is within reach and here the cluster map as i said earlier they are a cousin or a sibling or a family member i can say of the the heat map and i'll show you why later so here let's show um this is what a heat map or sorry a cluster map looks like it looks somewhat like a heat map but if we notice on the year 1949 1950 it skips three years to 1953's gets one more year 1954 skips down three years to 1951 to one year to 1952. well 1956 and it's really weird however i can explain why they did this cluster map is basically um clustering as the name already says so what it would do is it would look at the numbers that have the same or a similar value to each other so if we look at these lines right it's kind of like a family tree um however it doesn't start from the top it starts from the bottom so if we look over here at these two pairs 148 and 148 this is exact right so they paired it up together 136 and 135 was exact so they paired it together again and they will pair numbers from this grid that has the same amount of numbers i mean not same amount this a similar amount of numbers it will pair them up together like so and once they pair them up it will pair them in in a bigger cluster so now these two are paired up right but they do have a similar value so the cluster map pairs them up again and now let's look at this one so one hundred one two nine with one two nine i mean one one nine with one two nine pretty similar so they paired it up with each other and one two one right here pairs up with one two nine one one nine uh so it goes on and on however it is kind of complicated so i highly recommend you do some research on it uh probably my explanation won't be enough but what i'm saying is it uh clusters them together the one that has a similar number or value together and then it will cluster even more greater amounts until it has two big x and y clusters and this is a cluster map and we can also customize cluster maps to be more uh colorful so in here we made the c map into cool and warm and then we had a line color which was white and the line width equals to one so now it looks somewhat like this now let's move on to our last section which is grit grids is a fun place to go because you can customize it and you can do a lot of stuff with it so this is pear grid um this is what it looks like right now this is an empty canvas because we didn't put anything on it yet and today we're going to be looking at the two paired brothers the pear grid and the pear plot um right now we're going to be looking at the pear grid these two are very simple um very similar but there are some differences i'll tell you right now so the pair grid is more or less flexible than the pair plot meaning they can't do as much stuff the pear plot however you can do a lot of stuff with it such as um i'll show you later but basically if you notice here uh this is the pair grid right so this is the code for the pair grid um it looks plt.scatter gridmap plt.scatter so you can see it's quite uh not that simple because you would have to assign the pair grid and then grid map it however let's look at the pair plot the pair plot i mean cn sns dot pair plot pen right that's it and over here you have two lines even though for um the grip pair grid yeah you need two lines but the pair plot you only need one that's the difference um pair plot is more easy and more flexible than the print so if we look at this this is a paired grid um the paragraph is just assigns us the scatter plot um and uh this is just a scatter and there is vocabulary for this too there this is the diagonal line this is the upper triangle and this is the lower triangle um we can see that the more diagonal or the more in the straight line is the more uh correlated it would be and this is kind of like the pattern we saw above uh like before with the penguin heat map this is kind of the same thing since these are the two cats same category then it would be the more straight and you can see here the flipper length and the body mass are almost diagonal with each other uh if not diagonal but you the other ones are not as diagonal as the flipper length and the body mass this is because they aren't related to each other as much okay let's move on to the assigning each one to be specific so right now all of them are uh all of them are scattered right scatter plots but let's make the middle one or the diagonal line a histogram the upper triangle a scatter plot and the lower triangle a kde plot oh no now we can see that they are very different and we can assign lots of things so this is how to assign a grid or a pair grid right very very complicated but if we were to do this to the uh hair plot it would be much easier like so so now we're moving on to the pair plot now you can see that with one line of code we can already create a histogram down the middle and scatter plots around here and as i was saying um this we already have a histogram and scatter plot on both sides with only one line however let's customize it even more so now we're going to put a hue and the hue basically makes our code or our um our pair plot more detailed and this cannot be done with the pair grid assign the hue so if we were to run this right now we made the heel equals to species so we can see that there are orange red i mean orange orange blue and green um and we can see here on the side there's a legion a legion will tell us basically what is what so the blue is the deli the orange is the shin strap and the green is the gen 2 um and we can see in here on the the diagonal line what is what however if we were to look here on to the the pear grid it just throws all the information in there you can't separate it at all um so you would have to try your best to think which one is what however on a pair plot you can split it with a heel but on a pair grid you can so it's just very not flexible as much as the pair plot is so here the pair plot you can see we separated them into individual plot or individual little sections and we can see what is what let's move on to the last one which is joint grid uh this what is what a joint grid canvas looks like is body mass by species and let's see so in here oh this one actually i'll tell you what happened so this one uh you cannot use a string with an integer i'm pretty sure because i did a species with uh his species with body mass and you can it didn't really work out for me so i changed it to a flipper link with body mass which are correlated um to each other you can see here that this is the line um that the body mass is and it's going through and the flipper length is also kind of diagonal along with the line this means that they are very similar or related to each other um so yeah i hope you enjoyed my uh basic seabourn ep 2. if you do thank you very much and thank you for sticking throughout the video uh i hope you enjoyed it see you bye