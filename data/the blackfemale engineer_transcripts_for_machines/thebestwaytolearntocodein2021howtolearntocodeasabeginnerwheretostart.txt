hello everybody my name is nya and i'm the black female engineer i provide content for new and aspiring software engineers and today we are talking about how to learn to code as a beginner really just the best way to start your coding journey to start learning how to code in 2021 so let's get to it so if you are looking to learn how to code odds are you are looking to get hired or paid for your work at some point in time so number one see what careers you can get with a programming language search types of software engineers types of software developers and you'll see a list of frontend developers backend developers game development etc and see what languages are needed to be employed as such and so if you know you want to be a frontend developer backend game dev or you do some reading and you see that okay yeah i would really like a career in x y and z then this puts you in a great spot in knowing what to learn to code because each career path tends to have their list of languages that you either must know or is highly recommended you know or as long as you know this your odds are you'll have a chance of getting a job in x and x fee this is also great for knowing that you are learning to code for a specific end goal in mind this is what's going to put you push you through those hard times rather than oh i'm bored let me learn how to code today and then you never pick it up ever again so having that end goal in mind also helps with that learning process but yes try to see if there's a career path that you really see stand out for you you think would be a great match in terms of personality wise and just interesting to do and go from there and actually my next video is going to be on how to pick that first coding language to learn so make sure you subscribe so you don't miss that if you don't know what career path you want to be on that is totally okay i didn't know a career path i wanted to be on until i had found the languages i liked and tailored the career path based on the language so that's totally okay what you can do instead is see what for example the easiest languages to learn are this is the first thing i did when learning how to code and i stumbled upon python python is known as one of the easiest languages to learn especially for beginners ruby and javascript are also great easy starter languages i started with python and then i ended up abandoning it because it just didn't speak to my soul and that's okay you're going to encounter things like that but those are different approaches to finding your first coding language again that'll be my next video but once you find your coding language that you are going to learn you're going to stick to you're next going to want to find the resources to aid in your learning some of the top resources include free code camp codecademy udemy and edx i used all of these when first learning how to code and so let me give you a quick run through of all of these different resources one free code camp free code camp is amazing i think they do great work over there especially with beginner programmers and so to me it's great as a beginner with really figuring out the foundational things and really what's a p tag what's an image tag how do you add x y and z to an html site and things like that however i ended up yearning for something more and so that's when i ended up going to codecademy and udemy udemy provides hours hours and hours and hours of tons hundreds of different courses some of which you can end up with a certificate in that specific course after you've completed it and so it's great for beginners and it's also great when you are a person kind of needs a teacher someone to follow along with where udemy can kind of go wrong is you can kind of get stuck in this tutorial just cycle of just doing tutorials after tutorials and courses after courses and meanwhile you don't really know why you're doing what you're doing you're just following along now some courses they are great and you won't do this but there are many that you just find yourself following along to what the teacher or instructor says without really knowing why if you were put in a room where you had to replicate what you just did you wouldn't even know where to start and even why to start and it's important to know the why however now courses are like this some of them are great i'll add links below for courses that i've heard some people boast about and so yeah just keep that in mind with udemy make sure that when you're going through them you are understanding the why if you don't understand the why it's okay to break out and google it ask okay what does an if statement do what does x y and z do and then go back to the to the tutorial make sure you're always understanding the meaning behind some of these things moving on to code codecademy ended up being my main resource for learning and i used their web development course which really goes into html css and javascript and i really liked codecademy up until the part that it got to javascript once i got to javascript it felt kind of like how udemy felt of this following along of okay this is an if statement but why am i here why am i using this and so that's kind of where i stepped off from codecademy when i was just doing things and understanding cost concepts but not understanding how i would use this at work how i would use this or when i would use it in building an app not saying that they weren't teaching the relevant things it's that i just didn't it didn't click why i was learning it and for me i need to know the why i need to know the why and it's really what makes a difference in my learning and so right when we got to javascript i kind of went off a bit and went a different direction however it is great for the beginner items it's great for knowing the fundamentals for knowing just the foundation of concepts and so i do still recommend and then lastly there's edx edx was great for understanding the computer science part of software engineering rather than just the programming and coding and so i used their i believe was their harvard computer science intro to computer science course or something like that i'm sure everyone and their mom has heard of it and so i'll leave a link to that below as well and i really like this because i was also a college student at the time when i was going through this and so i really liked that lecture feel of an actual instructor an actual teacher on the stage going over concepts and material with students with freshmen i really liked that feel and so i do also recommend that as well but overall don't be afraid to try all of these things out see which one resonates best for you and don't be afraid to switch around some things like i said start with free code camp it was great for beginner then went on to udemy was it i don't remember which came first udemy or codecademy but yeah went on to one of those did a little bit of what i needed to do then moved on to something else and so don't be afraid to jump around and figure out what the best course of action is for you after finding a resource for learning figure out your study plan it is important and maybe is this the planner in me i define myself identify as a planner it is important to have a plan because it is that plan and that goal that is going to get you through the hard days of wanting to quit wanting to just be done with everything it's the impending timeline that's going to drag you across the finish line and so one way to do this is to work backwards see that okay i want to be a developer within a year and so knowing that you want to have a job after 12 months of learning then you can identify what things you need to do now to get there say okay so i want to be a web developer in the next 12 months so it means i need to do three hours of learning every day every tuesday et cetera and build your study plan that way you can also go forward moving where you really don't have a timeline for yourself it happens when it happens and really you're focused on learning without the impending deadline that you've set for yourself that also works too and so see okay so i only have one hour of my day i can allocate to something that's not work related and so i'm going to devote this one hour every day to coding so whichever way you choose make sure you write something down have a study plan and stick to it seriously stick to it because at some point you'll realize how much material there is to learn and you don't want to shoot yourself in the foot by not recognizing the gravity of what you're trying to do here which is maybe switch careers or just get into your first career etc that's a big thing and so make sure you treat it like a big deal and have a study plan next build projects it's important to know how to think like a developer when you are hired you are going to be expected to think like a developer not just follow along to instructions and the way you think like a developer is by building projects of your own now following along when i say build projects i don't mean following along to some other udemy course that says we'll build five projects no put that away and think what kind of project do you want to build what kind of apps you want to build so okay i want to create a financial tracker so have that goal in mind and start building it out and so i say that not to mean that you have all the skills needed right now to build it you may not however you need to know how to learn you need to know where the gaps in your knowledge are and the best way to do that is by building and so you set on a plan to build a financial app and so now when after you build your landing page or your static page with html and css you see okay i need to make this dynamic and i need to make sure that each input is recognized so then you go to google and say how to make sure user can input new numbers to financial tracker or something maybe not that specific but but yes google things as they come and slowly build that way because trust me and you may not know this yet developers use google like they have stock in it we use google like it is running out of style like it is leaving at some point is about to become extinct you need to learn how to use google effectively like a developer because it's a way that we problem solve asking the right questions asking the right resources and seeing how best to use that information for our benefit for our apps for our projects you need to learn to do the same because it will not end once you get the job and so once you've developed the fundamentals and once you've gotten a bit more comfortable with the languages that you've set on to learn start building projects on your own not with cold steel in the background like no on your own and it's going to be long it's going to be painful painful but it's really going to be what teaches you the most because tutorials do not teach you how to problem problemsolve and now after you've taken the time to learn to grow to develop your own projects start looking at job postings and no this is not to get the job right now i say this because we want to see what jobs are looking for in their candidates what things do you see constantly pop up in the job listing for backend developer do you constantly see that they want you to learn sql do you constantly see that they want you to actually have this type of skill when using python et cetera so see what job postings are saying about the career path you want to be on and now alter your learning to account for these things to specifically learn these things that way when you are ready to go on the job hunt you are not caught off guard or you are not constantly being passed off because you don't have a specific skill that they are looking for that being said there are some jobs that will ask for the moon meanwhile are paying you 15.50 an hour and everything try to avoid those things try to instead really focus on the patterns that you're seeing do five out of every eight jobs request this specific thing then add that to your list of things to learn rather than oh this one job out of the 20 i've looked at asked that i know postgres so avoid that unless you would like to learn it that is totally fine but yes in terms of which things to really make sure you add to your learning list to your study plan go that direction and lastly don't be afraid to rinse and repeat don't be afraid to backtrack to change languages to change courses to figure out some type of other resource to use for your learning don't be afraid to rinse and repeat and repeat and repeat because odds are this for you is uncharted territory and so it's okay to see that okay i actually did this wrong let me go this direction and oh actually this is wrong too let me go this direction don't be afraid of that instead acknowledge that what you're doing is growing and celebrate that be happy that you're doing that even if you end up after months of learning deciding that python isn't for you that is completely okay and you are you are completely okay changing languages because you know what even just knowing that little sliver of python you just learned that is going to help you at some point in the future either on your learning journey seeing what things helped what things didn't what resources helped what resources didn't or on the job when you see a posting that says oh knows basic python principles even though it's for some web dev posting and so note that there's no loss in anything everything is helping you grow and develop and you'll see how much that helped in the end even after you've changed direction please don't forget to like and subscribe if you enjoyed this and if you did don't forget the next video is going to be specifically on how to choose a coding language where i go much more into depth onto the different coding languages for different career paths etc so thank you so much for watching and i'll see you all later bye