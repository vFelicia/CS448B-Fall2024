With timestamps:

00:00 - [Music]
00:14 - hello everyone welcome back in this
00:16 - class we are going to learn
00:18 - break statement
00:20 - one of the jump statements
00:22 - jump statements are
00:24 - used to skip some lines of code in the
00:28 - loop
00:29 - there are two main jump statements one
00:32 - is break the other one is continue
00:34 - these statements are also called as
00:37 - loop control statements as it decides
00:40 - whether to continue or break the loop
00:46 - break statement using
00:48 - for loop
00:50 - for
00:51 - variable in sequence
00:53 - the statement 1 is executed
00:57 - and then here is a condition and then
00:59 - break
01:00 - when the condition becomes true and then
01:01 - it breaks the loop
01:04 - when the condition is not true it will
01:06 - be executing statement two statement
01:08 - three continuously
01:12 - when all the variable in the
01:14 - for loop get completed and then no more
01:17 - thing to execute and then it comes out
01:19 - of the loop at that time one more
01:20 - statement is there to execute
01:23 - this is the general format
01:26 - when this condition is true
01:29 - then what happens it breaks the loop and
01:32 - then
01:33 - statement 2 and 3 will not get executed
01:35 - immediately it jumps to the fourth
01:37 - statement
01:41 - i will demonstrate the same using the
01:43 - python so that it will be easy for you
01:45 - to understand
01:48 - just i write a for loop for i in
01:52 - range
01:53 - 7 comma 14
01:55 - now just i wanted to print a statement
01:58 - maybe in the loop
02:04 - now let me also print the
02:06 - value of i
02:08 - print i
02:13 - when the loop get
02:14 - completely executed
02:17 - it will be coming out of the loop
02:19 - let me show one more message here that
02:21 - is outside the loop print
02:24 - loop
02:26 - successfully executed
02:30 - so here there is no break statement
02:33 - let me show you how the output is
02:39 - so in the loop 7 in the loop 8 so until
02:42 - 13 the 14 is not included you know that
02:46 - now let me introduce the
02:49 - break statement here
02:51 - with a condition
02:54 - i will give a condition when it is
02:57 - divisible by 10 then it breaks so if
03:01 - i mod 10
03:05 - equal to 0 so there is no remainder then
03:09 - it should be breaking break
03:12 - so what happens
03:14 - then when it comes to 10
03:17 - before this condition this will be
03:18 - printing but this condition is true for
03:21 - 10
03:22 - it breaks without printing 10 number
03:27 - now let me change this as
03:29 - terminated
03:34 - by the
03:38 - break statement
03:40 - just for reference
03:44 - so now we can see
03:49 - when it is 10 it didn't print this 10
03:51 - number here and then it jumped out of
03:54 - the
03:55 - loop
03:56 - so this is the
03:58 - break statement in for loop
04:00 - while loop
04:02 - while condition statement 1
04:05 - if condition and break
04:07 - statement 2 statement 3
04:09 - outside the
04:11 - loop statement 4
04:13 - similar way when the if condition
04:15 - becomes true
04:16 - and then it breaks
04:19 - jumps out of the loop and then statement
04:21 - 4 is execute
04:23 - let me also show you
04:24 - through python program
04:27 - now for a while loop
04:29 - i need to
04:31 - initialize a variable so i give x is
04:33 - equal to 7
04:35 - now while
04:37 - x is lesser than
04:40 - 14.
04:41 - now i print
04:45 - in the loop
04:50 - and also print x
04:52 - now outside the loop i print
04:56 - loop
04:58 - successfully
05:00 - executed
05:03 - before this we need to increment the x
05:05 - value
05:06 - x plus equal to 1.
05:11 - let me execute this
05:14 - so you could see the same output
05:17 - now let me introduce the
05:19 - condition if
05:21 - x mod 5 is equal to 0
05:25 - i am just changing this however the
05:27 - result is going to be same as it start
05:29 - from 7 first number which is divisible 5
05:32 - is going to be 10 only i just break this
05:35 - i change this also here
05:41 - terminated
05:43 - by break
05:48 - so you can see the
05:49 - similar
05:51 - output
05:53 - hope the concept is very clear to you
05:56 - let us meet in the next class with
05:58 - continue statement
06:00 - thank you

Cleaned transcript:

hello everyone welcome back in this class we are going to learn break statement one of the jump statements jump statements are used to skip some lines of code in the loop there are two main jump statements one is break the other one is continue these statements are also called as loop control statements as it decides whether to continue or break the loop break statement using for loop for variable in sequence the statement 1 is executed and then here is a condition and then break when the condition becomes true and then it breaks the loop when the condition is not true it will be executing statement two statement three continuously when all the variable in the for loop get completed and then no more thing to execute and then it comes out of the loop at that time one more statement is there to execute this is the general format when this condition is true then what happens it breaks the loop and then statement 2 and 3 will not get executed immediately it jumps to the fourth statement i will demonstrate the same using the python so that it will be easy for you to understand just i write a for loop for i in range 7 comma 14 now just i wanted to print a statement maybe in the loop now let me also print the value of i print i when the loop get completely executed it will be coming out of the loop let me show one more message here that is outside the loop print loop successfully executed so here there is no break statement let me show you how the output is so in the loop 7 in the loop 8 so until 13 the 14 is not included you know that now let me introduce the break statement here with a condition i will give a condition when it is divisible by 10 then it breaks so if i mod 10 equal to 0 so there is no remainder then it should be breaking break so what happens then when it comes to 10 before this condition this will be printing but this condition is true for 10 it breaks without printing 10 number now let me change this as terminated by the break statement just for reference so now we can see when it is 10 it didn't print this 10 number here and then it jumped out of the loop so this is the break statement in for loop while loop while condition statement 1 if condition and break statement 2 statement 3 outside the loop statement 4 similar way when the if condition becomes true and then it breaks jumps out of the loop and then statement 4 is execute let me also show you through python program now for a while loop i need to initialize a variable so i give x is equal to 7 now while x is lesser than 14. now i print in the loop and also print x now outside the loop i print loop successfully executed before this we need to increment the x value x plus equal to 1. let me execute this so you could see the same output now let me introduce the condition if x mod 5 is equal to 0 i am just changing this however the result is going to be same as it start from 7 first number which is divisible 5 is going to be 10 only i just break this i change this also here terminated by break so you can see the similar output hope the concept is very clear to you let us meet in the next class with continue statement thank you
