With timestamps:

00:00 - dear students we have seen keywords and
00:03 - identifiers in our previous class
00:06 - today we are going to discuss about
00:08 - literals
00:09 - literals our values are the data items
00:12 - that
00:12 - have a fixed value for example
00:16 - 48 vira which is inside the codes
00:20 - 16.27 all these
00:24 - literals are categorized into five
00:26 - groups
00:28 - string literals numerical literals
00:32 - boolean literals special literal
00:36 - and then literal collections
00:40 - let us see string literals the text
00:43 - enclosed in quotes
00:44 - forms a string letter
00:48 - it may be single quote or maybe double
00:50 - quote
00:51 - if it starts with single quote and then
00:53 - it should be ending with single quote so
00:54 - that means similar
00:56 - quotation you need to start and end
01:00 - two types of string literals are there
01:02 - single line strings
01:05 - for example painting
01:09 - portrait see one is with double
01:11 - quotation another one is with single
01:13 - quotation
01:14 - so both are string literals the other
01:17 - one is
01:17 - multi-line strings multi-line strings
01:21 - are nothing but
01:22 - the strings written in different lines
01:25 - so if we want to write like that
01:27 - we need to have the codes but three
01:29 - times in the beginning and the ending
01:32 - so three double quotes i start with
01:34 - sketching with pencil
01:36 - i write and then i close with again
01:38 - double quote three times
01:40 - in case if you are using the single
01:43 - quote and then you can also
01:44 - close with single quote that doesn't
01:46 - matter how much of a line you write
01:49 - so when you talk about strings all the
01:51 - alphabets
01:52 - symbols numbers whatever it is there on
01:55 - the keyboard that you can use but at the
01:57 - same time
02:00 - you may not be able to print few things
02:02 - on the screen
02:03 - for example space bar when you
02:06 - press on spacebar it gives one white
02:09 - space
02:10 - the other example i can give tab it is a
02:13 - collection of white spaces
02:15 - so all these are called non-graphic
02:17 - characters
02:20 - python allows to have some non-graphic
02:22 - characters
02:24 - in string values these can be
02:26 - represented by using backslash
02:29 - this is called escape sequence here are
02:31 - some escape sequences
02:34 - given backslash
02:36 - and t it gives one tab space so in
02:40 - python
02:42 - four white spaces together called one
02:45 - tab
02:46 - i already told about this when we were
02:48 - learning about indentation of
02:50 - python programming and then if you want
02:52 - to give a new line and then you need to
02:55 - give backslash and
02:56 - n better i will demonstrate instead of
03:00 - explaining here now let me start ideally
03:11 - i just assign a literal to a variable
03:15 - called maybe str which is equal to
03:20 - a single line string letter i like you
03:23 - inside the single quote i can give
03:26 - computer
03:30 - so if i want to get back a string
03:33 - if i use str it will be showing here
03:37 - similarly str1 i create
03:40 - with double code
03:43 - i write here keyboard
03:50 - then str1 is
03:53 - keyboard so it may be either with single
03:56 - quota double quote
03:58 - similar way you need to end so what
04:00 - happens if we have dissimilar
04:02 - quotes let us check
04:06 - vstr2 i will do here and then i open
04:10 - with single quote i give here
04:12 - keyboard i close with double quote then
04:15 - it says
04:16 - eol so that is end of line
04:19 - error okay because the single quote is
04:22 - not closed or double quote is not closed
04:25 - so whatever it is so you cannot give
04:29 - like that
04:30 - and the next we will see now multi-line
04:33 - strings
04:35 - str3 i give here having many lines here
04:40 - so that i should open with three similar
04:43 - codes
04:46 - and then i say
04:52 - learn python in
04:56 - easy way
04:59 - so i close this so now you can see learn
05:03 - python
05:04 - in easy way see
05:07 - here automatically backslash n has been
05:10 - shown that is a new line
05:12 - if i want to print learn
05:17 - python backslash niu that means a new
05:20 - line
05:21 - okay and then i say
05:24 - in easy way
05:29 - see you can see when i give this
05:32 - backslash and
05:32 - n it automatically takes into
05:36 - a new line so this is what escape
05:38 - sequencing
05:40 - so it should be either in this double
05:43 - quotes
05:43 - or it may be in the single quote any way
05:47 - you can give but that is taken
05:48 - as a string literally inside the
05:51 - quotation
05:52 - if i want to print here
05:56 - single quote and then i say
06:01 - mouse is to click
06:06 - if i want to give that in a new line
06:08 - what are you here
06:10 - backslash n
06:16 - now it prints into two different links
06:20 - in case just copy this
06:29 - now backslash t if i you
06:33 - it will be giving a tab space
06:37 - so you can see that one tab space is
06:39 - given there
06:40 - between ease and two so this is only
06:43 - called
06:44 - escape sequence now just i print
06:47 - ravi's dog
06:52 - see if i want to print a first of
06:55 - yes it takes as a closing
06:59 - quotation so and then again it takes
07:02 - this one as a starting one
07:04 - to avoid this we will be giving here as
07:06 - i escape sequency
07:08 - combining with backslash so now you can
07:11 - see
07:12 - rabbi's dog has been printed so now i
07:16 - think you are clear about why we are
07:18 - using this backslash
07:20 - similarly even for the double quote we
07:22 - can do that
07:23 - i have some code to print so that
07:27 - i want to display in the double
07:28 - quotation so that means for printing i
07:31 - give this
07:32 - and then to display again i should open
07:34 - this and then i have a quote
07:37 - every moment is
07:40 - a fresh
07:43 - beginning now i close this
07:47 - as a quotation and then i close
07:50 - this one as the string literal
07:54 - now immediately open and close it takes
07:58 - and again here it takes immediately open
08:01 - and close so this is not going to be
08:03 - printed at all if this is going to show
08:05 - a error
08:07 - so if you want to print this
08:10 - what will you do i just copy this and
08:12 - print here
08:16 - i will be giving here backslash
08:20 - and then one more backslash i will give
08:22 - here
08:23 - so that both the quotations are printed
08:25 - so you can see every moment is a fresh
08:27 - beginning
08:28 - similarly backslash when you want to
08:31 - print also you need to give
08:32 - two times backslash value for audible
08:35 - bell it is
08:36 - a and for even octal value and extra
08:38 - decimal value you need to use
08:41 - escape sequences okay let us know about
08:44 - the length of the string
08:47 - length of the string is nothing but
08:51 - a number of characters available in that
08:53 - string literal
08:55 - for example python is that p y t h
08:58 - o n so there are six letters so the
09:01 - length of this is six
09:03 - similarly if you take a escape sequence
09:08 - totally that is backslash and t so that
09:11 - is one tab space that is taken as one
09:13 - single
09:14 - space and then k e y three letters
09:17 - totally it become
09:18 - four is the size or length of the string
09:23 - so another example reimu four letters
09:27 - backslash quotation that is one
09:31 - five s six and then space is seven again
09:34 - three so totally it becomes 10 is the
09:37 - size
09:37 - but if you see multiple line string
09:41 - see computer i have splitted into two
09:44 - different
09:44 - lines c o m and then p u t e r
09:49 - so you cannot see any backslash
09:52 - n here but still it will be counting
09:55 - that
09:56 - also as a new line character as
09:59 - escape sequency so here this will become
10:02 - 9 instead of 8 letters
10:06 - but if you are using a
10:09 - backslash at the end
10:12 - it doesn't take that one as a count and
10:15 - then it will show only as
10:16 - 8. i will show that
10:24 - so we have a function to know the length
10:26 - of the string
10:27 - that we will learn in elaborate way in
10:29 - the future classes
10:31 - just you know le n is the function where
10:35 - it takes the length of the
10:37 - string so if i wanted to print
10:42 - len off okay so the length of this
10:46 - computer i say
10:48 - so computer's length is
10:52 - eight if i have same thing
11:02 - but with backslash
11:05 - n
11:09 - so you can see that it is 9.
11:12 - in case i have like this
11:17 - three quotations are there no so that
11:19 - means multiple
11:22 - lines now i say
11:25 - here sorry
11:29 - just i take this much first
11:37 - and then the remaining
11:42 - so now the length of this will be 9.
11:46 - see i have not given the backslash there
11:48 - but i have given in the next line using
11:50 - the triple quote
11:52 - now i have the same thing but with
11:56 - backslash and then this one
12:02 - so the length should be
12:05 - eight right
12:08 - i think now you are clear
12:12 - better you practice once to clarify
12:15 - yourself
12:17 - now we will see numerical literals
12:20 - there are three types of numerical
12:22 - literals integer literals
12:24 - floating point that is real values
12:27 - imaginary are part of complex numbers
12:32 - integer literals integer literals must
12:35 - have at least
12:36 - one digit and then there will not be
12:40 - any fractional part available with that
12:42 - that means no decimal numbers
12:43 - are available it may be combined with
12:47 - unary operator minus
12:49 - so you will learn more about the
12:51 - operators in the
12:52 - next class now just you can remember
12:56 - that
12:56 - plus or minus can be combined to say
12:59 - whether it is a positive number or
13:01 - negative number
13:03 - and then you need to remember that no
13:05 - commas are accepted
13:06 - when you are writing numbers
13:11 - again integer literals are having some
13:13 - different types
13:15 - we know all the different types of
13:17 - number systems
13:21 - that is decimal integer literal decimal
13:24 - means we know that is
13:25 - having 10 digits starting from 0 to
13:29 - 9 we are having 10 symbols for that
13:32 - so these are the numbers which we are
13:35 - using in the day-to-day life
13:37 - for example 592 994 all this
13:41 - and then binary integer literals are
13:43 - nothing but
13:45 - zeros and ones you know very well i hope
13:49 - if you write 1 0 0 1 as a binary integer
13:52 - literal
13:53 - normally it will take as decimal number
13:56 - so to specify as this is a binary
13:59 - integer literal
14:00 - you need to specify 0
14:04 - and capital b are small b prefix to the
14:07 - number
14:08 - for example first i will write 0
14:11 - and small b and then i write 1 0 1 1 0
14:15 - 1 is equivalent to 5 in decimal for 92
14:18 - if you want to write you need to write
14:21 - 0 it may be capital b or small b and the
14:24 - 92's value in
14:26 - binary is 1 0 1 one one
14:30 - zero zero similarly
14:34 - nine thousand nine hundred and ninety
14:36 - four
14:37 - is written as zero b one zero
14:40 - zero one one one zero zero zero zero
14:44 - one zero one zero next we are having
14:46 - octal integer literals
14:48 - octal integer literals are having the
14:51 - numbers are symbols from zero to seven
14:55 - so there will be
14:56 - eight symbols to specify that symbol
14:59 - eight will not be included okay remember
15:01 - zero to seven only will be there
15:04 - to specify this you need to use zero
15:08 - and o the o may be a capital o
15:12 - or small o but always starts with zero
15:17 - any number system other than decimal
15:19 - will be starting with zero only okay
15:22 - so now to specify five the equivalent
15:25 - octal number
15:26 - is 5 only so we will write 0
15:30 - 0 5 similarly for
15:33 - 92 in decimal if you want to represent
15:36 - in octal number you need to write
15:38 - 0 0 1 3 4
15:42 - the next number 0
15:45 - o 2 3 4 1 2.
15:49 - so next we are having hexadecimal
15:51 - integer literals so hexadecimal
15:54 - means 16 digits are there
15:58 - to mention this we need to start always
16:00 - with
16:02 - 0 and then x may be
16:05 - there as a small letter or a capital
16:08 - letter
16:10 - example here to specify decimal number 5
16:13 - in hexadecimal
16:15 - it is 5 only but we will write
16:19 - 0 x and 5. so
16:22 - 92 is 0 x and 5
16:25 - c similarly 0 x
16:30 - 2 7 0 capital a is equivalent to 9
16:34 - 94 see not to worry about this
16:38 - binary octal and hexadecimal integer
16:40 - literals
16:42 - we will learn these numbers and
16:44 - conversions
16:45 - in later part you will understand very
16:48 - much
16:49 - clearly just you need to know now the
16:51 - types of
16:52 - integer literals and then how do you
16:54 - denote it
16:55 - now we will see floating point literals
16:58 - floating point literals
17:00 - are with decimal numbers
17:03 - how you represent in mathematics
17:07 - so that means 5.25
17:10 - like that it has two forms
17:14 - one is fractional form so fractional
17:17 - form
17:18 - it must have at least one digit with a
17:20 - decimal point
17:23 - it may be combined with unary operator
17:25 - that is plus and minus symbol
17:30 - for example we have 2.25
17:33 - plus 587.003
17:37 - minus 653.745
17:41 - exponent form so you might have learned
17:44 - that in mathematics are in science
17:47 - we will have always 10 to the power
17:49 - right
17:50 - so that here we can have using capital
17:53 - letter e
17:54 - or small letter e it has two parts the
17:57 - first
17:57 - part is mantissa that is
18:00 - a integer or real number the other part
18:04 - is exponent part which we specify after
18:06 - capital e r small e for example we can
18:10 - have
18:11 - 5 e and 5 so that means
18:14 - 5 into 10 to the power 5 it means
18:18 - similarly minus 8.3
18:21 - into 10 to the power 6.
18:25 - the next example says 6.7 into
18:28 - 10 to the power minus 5 remember
18:30 - mantissa can be
18:32 - a real or integer value so that means
18:36 - you can see here
18:37 - 5 as a whole number and the second
18:39 - example you can see
18:40 - 8.3 and the third example also it is 6.7
18:46 - so this may have the fractional part but
18:49 - when you come to exponent form so that
18:51 - means
18:52 - after e so that means 10 to the power
18:55 - you are writing 5
18:56 - means 10 to the power 5 here you cannot
18:59 - write
19:00 - 10 to the power 5.5 so that means that
19:03 - is not allowed so i hope you are clear
19:05 - now
19:05 - we will move on to the next one
19:07 - imaginary little
19:08 - imaginary literal is a part of a complex
19:11 - number we know complex numbers
19:13 - we might have learnt in mathematics that
19:15 - is i
19:16 - so i implies root of minus 1
19:20 - to represent root of minus 1 in python
19:23 - we are having capital j
19:25 - or small z so this is a imaginary
19:28 - literal
19:28 - with this another number is combined and
19:31 - then it becomes complex number
19:33 - so complex numbers have real and
19:35 - imaginary both the parts for example we
19:38 - will have
19:38 - x plus y j here
19:41 - x is a real part
19:44 - y is imaginary part and then j
19:48 - is the imaginary number some examples
19:51 - are here
19:52 - 5 j 5 is a imaginary part
19:56 - and j is the imaginary number
20:00 - 8 plus 6 j 8 is a real part 6 is a
20:03 - imaginary part and j
20:04 - is the root of -1
20:10 - let us move to boolean laterals
20:16 - there are two boolean literals
20:19 - one is true another one is false
20:23 - so you must remember t is capital and
20:25 - then f is capital here
20:27 - both are keywords to represent true or
20:31 - false
20:32 - yes are no honor of present
20:35 - or absent we probably use true or false
20:38 - next one is special literal in python
20:42 - no ne that is known is used to
20:45 - indicate the absence of value so that
20:47 - means
20:48 - if there is no value there that is empty
20:50 - space then you can just
20:51 - say n o n e
20:55 - it is also used to indicate the end of
20:57 - the lists
20:58 - in python so list what is the list we
21:00 - will see in the
21:02 - future class not to worry about that
21:04 - next we have literal collection
21:06 - we have four types of literal collection
21:10 - list tuples dictionary
21:14 - and sets we will see elaborately all
21:17 - these
21:18 - in future classes just you remember this
21:20 - that is more than enough
21:22 - now just i will demonstrate using
21:28 - ideally
21:34 - first we will see about the integer
21:36 - literal in integer literal
21:38 - integer say x
21:41 - is equal to 5 so that is x if we give 5
21:49 - next in integer we have binary
21:52 - so equivalent to 5 in binary is 1 0 1
21:56 - so i give 0 in capital r small
21:59 - b i can give here and then i give
22:04 - 1 0 1 so it will show output in the
22:07 - decimal number
22:08 - as 5. you can also give zero
22:12 - and capital b one zero triple one
22:16 - double zero iq so it is 92
22:19 - next we will see octal integer so octal
22:22 - integer we need to represent using
22:24 - zero and small o are capital
22:28 - i give here 5 it is 5 itself
22:32 - then 0 and capital o i give
22:35 - say 134 so that is 92
22:41 - now next we are having hexa decimal
22:43 - number
22:44 - so to represent hexadecimal number we
22:47 - need to give
22:49 - 0 and then maybe capital x
22:52 - or small x for 5 it is 5 itself
22:55 - 0 capital x and then
22:58 - 5 c if i give that is equivalent to 92.
23:01 - so
23:02 - 0 x 270
23:06 - and then a i iq
23:10 - now let us see about floating point
23:13 - laterals
23:16 - 32.25
23:20 - this is the first form with fractional
23:23 - numbers the second form we are having
23:25 - the exponent form
23:28 - 3.225
23:31 - e and then 10 to the power 1 iq
23:35 - so that is one you can see 32.25
23:40 - i can give plus 25.003
23:48 - it is accepted i can give minus
23:51 - 32 point zero zero zero zero
23:56 - three it is accepted
24:00 - now if i give in exponent form plus
24:05 - four five three point
24:08 - one two four and then e to the power i q
24:12 - five so you can see that
24:16 - e to the power 5 that is 10 to the power
24:18 - 5 is been calculated there
24:20 - so i can also combine minus with this
24:24 - simply i give one number there then
24:27 - point
24:28 - 0 to the e to the power 3 iq it is
24:32 - accepted
24:33 - now i give five six point four
24:36 - five e now i give two point
24:40 - six see this is not accepted two point
24:43 - six
24:44 - in exponent is not accept just i am
24:46 - showing you but you can combine
24:49 - minus with that say 25.03
24:53 - e minus 3
24:57 - now let us check the complex numbers
25:00 - 2 plus 3 j so it is accepted
25:04 - j is here root of minus 1
25:08 - so it is given inside the bracket
25:12 - if i say 6 j
25:16 - that is also a number with
25:19 - imaginary part and then imaginary
25:22 - next we are having boolean literal which
25:25 - are
25:26 - only two things one is true and other
25:29 - one is false
25:31 - for example i say print true
25:37 - so it prints true print false
25:43 - see these are values whether it says
25:45 - true or false
25:47 - there is a difference between string
25:50 - true that is
25:51 - if you put it in the double quote for
25:54 - example like this print and then i say
25:56 - put it in a double quote then it
25:59 - is a string constant not a
26:02 - boolean literal but it will give the
26:05 - same output i said to print the true
26:07 - so it is print you should know to
26:09 - differentiate between these two
26:11 - when it calculates whether it is true or
26:13 - false then it should be a boolean liter
26:17 - now a special literal
26:20 - so i say spl is equal to
26:23 - n o and e
26:27 - so it is not giving any other value
26:31 - see if i want to know what is special
26:33 - means no value there
26:36 - at the same time if i ask to print it
26:39 - it will say it is nothing there that
26:42 - means it will show us
26:43 - known so this you need to note down now
26:46 - let us have a small exercise
26:49 - you take a paper and a pencil or pen
26:53 - write number 1 to 12 we are having 12
26:56 - questions here
26:58 - you can just write tick mark
27:01 - or wrong mark
27:04 - point eight seven three plus eight one
27:08 - minus twenty one point five zero four
27:10 - five point two
27:11 - e ninety four thousand seven hundred and
27:14 - fifty three point twenty eight
27:16 - i am a student six point three four
27:20 - two e zero five
27:23 - three point one four e two point five
27:28 - plus seven fifty five e minus six
27:31 - true mouse pad
27:36 - minus 65 minus 8j
27:40 - i hope you all noted down whether
27:43 - correct are
27:44 - wrong let us see the result
27:49 - first one is right the second one is
27:51 - correct
27:53 - you know well the third one is also
27:55 - right
27:57 - the fourth one is wrong because after e
28:00 - there should be a number to indicate 10
28:02 - to the power
28:04 - something so it is not given so it is
28:06 - wrong
28:08 - the fifth one is wrong because comma is
28:10 - added it is not allowed
28:12 - and the sixth one is also wrong because
28:15 - it is not enclosed with that triple
28:17 - quote it is one
28:18 - single time double quote at beginning
28:22 - and end
28:23 - so it is wrong if it is multiple line
28:26 - string literal then it
28:27 - has to be in triple quote
28:31 - and then seventh one is correct and the
28:35 - eighth one is wrong because
28:36 - 2.5 cannot be a power of 10
28:40 - and then ninth one is correct
28:43 - and the tenth one is wrong because
28:46 - true capital t is
28:49 - literal but small t is not a literal
28:54 - if it is enclosed with the
28:57 - quotation and then it may be a string
29:00 - value
29:01 - so this is wrong the mouse pad
29:04 - in all triple chord in two different
29:08 - line it is right
29:09 - and the last one minus 65 minus 8
29:13 - j is correct minus 65 is
29:16 - real part minus 8 is imaginary part
29:19 - j is the imaginary number hope students
29:23 - you understood well let us continue
29:26 - in the next class keep watching my
29:28 - channel
29:30 - thank you

Cleaned transcript:

dear students we have seen keywords and identifiers in our previous class today we are going to discuss about literals literals our values are the data items that have a fixed value for example 48 vira which is inside the codes 16.27 all these literals are categorized into five groups string literals numerical literals boolean literals special literal and then literal collections let us see string literals the text enclosed in quotes forms a string letter it may be single quote or maybe double quote if it starts with single quote and then it should be ending with single quote so that means similar quotation you need to start and end two types of string literals are there single line strings for example painting portrait see one is with double quotation another one is with single quotation so both are string literals the other one is multiline strings multiline strings are nothing but the strings written in different lines so if we want to write like that we need to have the codes but three times in the beginning and the ending so three double quotes i start with sketching with pencil i write and then i close with again double quote three times in case if you are using the single quote and then you can also close with single quote that doesn't matter how much of a line you write so when you talk about strings all the alphabets symbols numbers whatever it is there on the keyboard that you can use but at the same time you may not be able to print few things on the screen for example space bar when you press on spacebar it gives one white space the other example i can give tab it is a collection of white spaces so all these are called nongraphic characters python allows to have some nongraphic characters in string values these can be represented by using backslash this is called escape sequence here are some escape sequences given backslash and t it gives one tab space so in python four white spaces together called one tab i already told about this when we were learning about indentation of python programming and then if you want to give a new line and then you need to give backslash and n better i will demonstrate instead of explaining here now let me start ideally i just assign a literal to a variable called maybe str which is equal to a single line string letter i like you inside the single quote i can give computer so if i want to get back a string if i use str it will be showing here similarly str1 i create with double code i write here keyboard then str1 is keyboard so it may be either with single quota double quote similar way you need to end so what happens if we have dissimilar quotes let us check vstr2 i will do here and then i open with single quote i give here keyboard i close with double quote then it says eol so that is end of line error okay because the single quote is not closed or double quote is not closed so whatever it is so you cannot give like that and the next we will see now multiline strings str3 i give here having many lines here so that i should open with three similar codes and then i say learn python in easy way so i close this so now you can see learn python in easy way see here automatically backslash n has been shown that is a new line if i want to print learn python backslash niu that means a new line okay and then i say in easy way see you can see when i give this backslash and n it automatically takes into a new line so this is what escape sequencing so it should be either in this double quotes or it may be in the single quote any way you can give but that is taken as a string literally inside the quotation if i want to print here single quote and then i say mouse is to click if i want to give that in a new line what are you here backslash n now it prints into two different links in case just copy this now backslash t if i you it will be giving a tab space so you can see that one tab space is given there between ease and two so this is only called escape sequence now just i print ravi's dog see if i want to print a first of yes it takes as a closing quotation so and then again it takes this one as a starting one to avoid this we will be giving here as i escape sequency combining with backslash so now you can see rabbi's dog has been printed so now i think you are clear about why we are using this backslash similarly even for the double quote we can do that i have some code to print so that i want to display in the double quotation so that means for printing i give this and then to display again i should open this and then i have a quote every moment is a fresh beginning now i close this as a quotation and then i close this one as the string literal now immediately open and close it takes and again here it takes immediately open and close so this is not going to be printed at all if this is going to show a error so if you want to print this what will you do i just copy this and print here i will be giving here backslash and then one more backslash i will give here so that both the quotations are printed so you can see every moment is a fresh beginning similarly backslash when you want to print also you need to give two times backslash value for audible bell it is a and for even octal value and extra decimal value you need to use escape sequences okay let us know about the length of the string length of the string is nothing but a number of characters available in that string literal for example python is that p y t h o n so there are six letters so the length of this is six similarly if you take a escape sequence totally that is backslash and t so that is one tab space that is taken as one single space and then k e y three letters totally it become four is the size or length of the string so another example reimu four letters backslash quotation that is one five s six and then space is seven again three so totally it becomes 10 is the size but if you see multiple line string see computer i have splitted into two different lines c o m and then p u t e r so you cannot see any backslash n here but still it will be counting that also as a new line character as escape sequency so here this will become 9 instead of 8 letters but if you are using a backslash at the end it doesn't take that one as a count and then it will show only as 8. i will show that so we have a function to know the length of the string that we will learn in elaborate way in the future classes just you know le n is the function where it takes the length of the string so if i wanted to print len off okay so the length of this computer i say so computer's length is eight if i have same thing but with backslash n so you can see that it is 9. in case i have like this three quotations are there no so that means multiple lines now i say here sorry just i take this much first and then the remaining so now the length of this will be 9. see i have not given the backslash there but i have given in the next line using the triple quote now i have the same thing but with backslash and then this one so the length should be eight right i think now you are clear better you practice once to clarify yourself now we will see numerical literals there are three types of numerical literals integer literals floating point that is real values imaginary are part of complex numbers integer literals integer literals must have at least one digit and then there will not be any fractional part available with that that means no decimal numbers are available it may be combined with unary operator minus so you will learn more about the operators in the next class now just you can remember that plus or minus can be combined to say whether it is a positive number or negative number and then you need to remember that no commas are accepted when you are writing numbers again integer literals are having some different types we know all the different types of number systems that is decimal integer literal decimal means we know that is having 10 digits starting from 0 to 9 we are having 10 symbols for that so these are the numbers which we are using in the daytoday life for example 592 994 all this and then binary integer literals are nothing but zeros and ones you know very well i hope if you write 1 0 0 1 as a binary integer literal normally it will take as decimal number so to specify as this is a binary integer literal you need to specify 0 and capital b are small b prefix to the number for example first i will write 0 and small b and then i write 1 0 1 1 0 1 is equivalent to 5 in decimal for 92 if you want to write you need to write 0 it may be capital b or small b and the 92's value in binary is 1 0 1 one one zero zero similarly nine thousand nine hundred and ninety four is written as zero b one zero zero one one one zero zero zero zero one zero one zero next we are having octal integer literals octal integer literals are having the numbers are symbols from zero to seven so there will be eight symbols to specify that symbol eight will not be included okay remember zero to seven only will be there to specify this you need to use zero and o the o may be a capital o or small o but always starts with zero any number system other than decimal will be starting with zero only okay so now to specify five the equivalent octal number is 5 only so we will write 0 0 5 similarly for 92 in decimal if you want to represent in octal number you need to write 0 0 1 3 4 the next number 0 o 2 3 4 1 2. so next we are having hexadecimal integer literals so hexadecimal means 16 digits are there to mention this we need to start always with 0 and then x may be there as a small letter or a capital letter example here to specify decimal number 5 in hexadecimal it is 5 only but we will write 0 x and 5. so 92 is 0 x and 5 c similarly 0 x 2 7 0 capital a is equivalent to 9 94 see not to worry about this binary octal and hexadecimal integer literals we will learn these numbers and conversions in later part you will understand very much clearly just you need to know now the types of integer literals and then how do you denote it now we will see floating point literals floating point literals are with decimal numbers how you represent in mathematics so that means 5.25 like that it has two forms one is fractional form so fractional form it must have at least one digit with a decimal point it may be combined with unary operator that is plus and minus symbol for example we have 2.25 plus 587.003 minus 653.745 exponent form so you might have learned that in mathematics are in science we will have always 10 to the power right so that here we can have using capital letter e or small letter e it has two parts the first part is mantissa that is a integer or real number the other part is exponent part which we specify after capital e r small e for example we can have 5 e and 5 so that means 5 into 10 to the power 5 it means similarly minus 8.3 into 10 to the power 6. the next example says 6.7 into 10 to the power minus 5 remember mantissa can be a real or integer value so that means you can see here 5 as a whole number and the second example you can see 8.3 and the third example also it is 6.7 so this may have the fractional part but when you come to exponent form so that means after e so that means 10 to the power you are writing 5 means 10 to the power 5 here you cannot write 10 to the power 5.5 so that means that is not allowed so i hope you are clear now we will move on to the next one imaginary little imaginary literal is a part of a complex number we know complex numbers we might have learnt in mathematics that is i so i implies root of minus 1 to represent root of minus 1 in python we are having capital j or small z so this is a imaginary literal with this another number is combined and then it becomes complex number so complex numbers have real and imaginary both the parts for example we will have x plus y j here x is a real part y is imaginary part and then j is the imaginary number some examples are here 5 j 5 is a imaginary part and j is the imaginary number 8 plus 6 j 8 is a real part 6 is a imaginary part and j is the root of 1 let us move to boolean laterals there are two boolean literals one is true another one is false so you must remember t is capital and then f is capital here both are keywords to represent true or false yes are no honor of present or absent we probably use true or false next one is special literal in python no ne that is known is used to indicate the absence of value so that means if there is no value there that is empty space then you can just say n o n e it is also used to indicate the end of the lists in python so list what is the list we will see in the future class not to worry about that next we have literal collection we have four types of literal collection list tuples dictionary and sets we will see elaborately all these in future classes just you remember this that is more than enough now just i will demonstrate using ideally first we will see about the integer literal in integer literal integer say x is equal to 5 so that is x if we give 5 next in integer we have binary so equivalent to 5 in binary is 1 0 1 so i give 0 in capital r small b i can give here and then i give 1 0 1 so it will show output in the decimal number as 5. you can also give zero and capital b one zero triple one double zero iq so it is 92 next we will see octal integer so octal integer we need to represent using zero and small o are capital i give here 5 it is 5 itself then 0 and capital o i give say 134 so that is 92 now next we are having hexa decimal number so to represent hexadecimal number we need to give 0 and then maybe capital x or small x for 5 it is 5 itself 0 capital x and then 5 c if i give that is equivalent to 92. so 0 x 270 and then a i iq now let us see about floating point laterals 32.25 this is the first form with fractional numbers the second form we are having the exponent form 3.225 e and then 10 to the power 1 iq so that is one you can see 32.25 i can give plus 25.003 it is accepted i can give minus 32 point zero zero zero zero three it is accepted now if i give in exponent form plus four five three point one two four and then e to the power i q five so you can see that e to the power 5 that is 10 to the power 5 is been calculated there so i can also combine minus with this simply i give one number there then point 0 to the e to the power 3 iq it is accepted now i give five six point four five e now i give two point six see this is not accepted two point six in exponent is not accept just i am showing you but you can combine minus with that say 25.03 e minus 3 now let us check the complex numbers 2 plus 3 j so it is accepted j is here root of minus 1 so it is given inside the bracket if i say 6 j that is also a number with imaginary part and then imaginary next we are having boolean literal which are only two things one is true and other one is false for example i say print true so it prints true print false see these are values whether it says true or false there is a difference between string true that is if you put it in the double quote for example like this print and then i say put it in a double quote then it is a string constant not a boolean literal but it will give the same output i said to print the true so it is print you should know to differentiate between these two when it calculates whether it is true or false then it should be a boolean liter now a special literal so i say spl is equal to n o and e so it is not giving any other value see if i want to know what is special means no value there at the same time if i ask to print it it will say it is nothing there that means it will show us known so this you need to note down now let us have a small exercise you take a paper and a pencil or pen write number 1 to 12 we are having 12 questions here you can just write tick mark or wrong mark point eight seven three plus eight one minus twenty one point five zero four five point two e ninety four thousand seven hundred and fifty three point twenty eight i am a student six point three four two e zero five three point one four e two point five plus seven fifty five e minus six true mouse pad minus 65 minus 8j i hope you all noted down whether correct are wrong let us see the result first one is right the second one is correct you know well the third one is also right the fourth one is wrong because after e there should be a number to indicate 10 to the power something so it is not given so it is wrong the fifth one is wrong because comma is added it is not allowed and the sixth one is also wrong because it is not enclosed with that triple quote it is one single time double quote at beginning and end so it is wrong if it is multiple line string literal then it has to be in triple quote and then seventh one is correct and the eighth one is wrong because 2.5 cannot be a power of 10 and then ninth one is correct and the tenth one is wrong because true capital t is literal but small t is not a literal if it is enclosed with the quotation and then it may be a string value so this is wrong the mouse pad in all triple chord in two different line it is right and the last one minus 65 minus 8 j is correct minus 65 is real part minus 8 is imaginary part j is the imaginary number hope students you understood well let us continue in the next class keep watching my channel thank you
