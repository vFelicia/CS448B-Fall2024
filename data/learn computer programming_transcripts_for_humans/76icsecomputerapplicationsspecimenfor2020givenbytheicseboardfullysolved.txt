With timestamps:

00:00 - dear students in this video we are going
00:03 - to solve the specimen question paper of
00:06 - computer applications which is given by
00:09 - icac board for 2020 onwards in this
00:14 - video we will solve only section a and
00:17 - the next we'll continue section B
00:22 - section y a 40 marks answer all the
00:27 - questions question 1 what is
00:29 - encapsulation wrapping up of data under
00:35 - a single unit is called encapsulation it
00:39 - is the mechanism that binds together
00:41 - code and the data it manipulates this is
00:45 - one of the groups concept explain the
00:51 - purpose of using a new keyword in a Java
00:55 - program new keyword creates a Java
01:04 - instance that is object and allocates
01:08 - memory to that object
01:11 - question C what are literals literals
01:18 - are constants in Java a literal
01:22 - specifies a fixed value in a program D
01:30 - mentioned the types of access specifiers
01:35 - access specifiers are public private and
01:43 - protected there is one more we call it
01:47 - as default this is not a keyword when
01:51 - none of the above is mentioned it is
01:54 - called default if you write a default
01:58 - you must indicate that it is not a
02:00 - keyword what is constructor overloading
02:08 - when more than one constructor that is
02:11 - different parameters is given in the
02:14 - program it is called constructor
02:17 - overloading question number two a
02:26 - differentiate between boxing and
02:28 - unboxing converting primitive datatype
02:34 - into object is called boxing converting
02:38 - an object into corresponding parameter
02:40 - of data type is called unboxing these
02:42 - terms that is boxing and unboxing are
02:45 - added into new syllabus the world
02:49 - syllabus it was called wrapper classes I
02:52 - have already explained wrapper classes
02:55 - in my previous video please refer it
02:59 - then you will understand it clearly
03:04 - rewrite the following condition without
03:06 - using logical operators if a is greater
03:11 - than B or a is greater than C it print C
03:16 - a so we should not use and are not
03:20 - operators here so those are logical
03:22 - operators without that how we can use
03:25 - here R is there are we can use using if
03:30 - and else if statements if a is greater
03:35 - than B it is going to print a else if a
03:40 - is greater than C again it is going to
03:43 - print yeah so this is very simple tree
03:49 - write the following loop using for loop
03:51 - while true so it prints star while true
03:56 - means it is always true the condition
04:00 - becomes always true so how we can
04:02 - convert into farlow a always true means
04:07 - it is unbreakable one that is infinity
04:13 - loop so just we can create a infinity
04:16 - loop where there is no initialization no
04:19 - condition and then no increment so it
04:22 - becomes a infinity loop so we are going
04:26 - to print a star next question right the
04:32 - prototype of a function search so that
04:35 - means name of the function is search
04:37 - which takes two arguments one is a
04:40 - string and other is a character one and
04:42 - returns a integer value here we can
04:46 - write public static R that is optionally
04:50 - we can leave it I have mentioned it here
04:53 - it returns integer type so we mentioned
04:56 - int instead of void so public static int
04:59 - and then search is the name of the
05:02 - method and the arguments are string and
05:06 - character so string s comma cat see I
05:09 - have written differentiate between equal
05:15 - to and equal to equal to operators we
05:19 - know equal to operator is assignment
05:21 - operator this assigns value to the
05:24 - variable the value is right side and the
05:27 - variable should be left side equal to
05:30 - equal to operator is a relational
05:32 - operator this compares the values of a
05:35 - the side and returns a boolean it says
05:37 - whether true or false question 3 state
05:43 - the number of bytes and bits occupied by
05:46 - a character array of 10 elements so we
05:51 - know character data type has 2 bytes and
05:56 - then 10 elements are there in array so 2
05:59 - bytes into 10 elements equal to 20 bytes
06:02 - if we need it to convert into bits we
06:06 - can take it as 16 bits into 10 elements
06:10 - otherwise we can also calculate 20 bytes
06:14 - into 8 that gives in bits differentiate
06:21 - between binary certain linear search
06:24 - techniques
06:29 - linear search binary search linear
06:35 - search search element is compared one by
06:37 - one here binary search search element is
06:42 - compared with middle element linear
06:46 - search the entire process would be
06:48 - time-consuming here in binary search it
06:53 - is faster than linear search it is more
06:56 - efficient than linear search linear
07:00 - search works for both sorted as well as
07:03 - inserted RS binary search works only for
07:07 - satara's
07:08 - this question was asked in 2019 bore
07:12 - paper question see what is the output of
07:19 - the following string a is equal to Java
07:23 - is a programming language backslash n
07:26 - developed by backslash T backslash
07:31 - single inverted comma james gosling
07:34 - single inverted comma close with
07:36 - backslash so these are escape sequences
07:38 - backslash n gives a new length so until
07:42 - Java is programming language it will
07:44 - print and there will be a one space that
07:48 - we can't see and then the next line it
07:51 - starts after one space so there is a
07:54 - space before and after backslash in
07:58 - developed by and then backslash T that
08:01 - gives a single tab that much space is
08:05 - given and then james gosling inside the
08:08 - single quotation differentiate between
08:13 - break and system dot exit of 0 we know
08:20 - break is a key word but system dot exit
08:24 - of 0 is not a keyword it is a standard
08:27 - library function break eliminates this
08:32 - switch our loop here system dot exit of
08:36 - 0 terminates the execution of the
08:39 - program
08:42 - right a statement in Java for root of a
08:45 - plus B the whole cube divided by a plus
08:49 - B inside the two vertical lines that
08:52 - means the absolute value disk so first
08:55 - let us write the numerator one for a
08:58 - square root we will have math dot esq RT
09:00 - half a plus B whole cube is there so
09:03 - what we will do math dot s qrt off math
09:07 - dot three whoa W of a plus B comma three
09:11 - so we will be writing like this a plus B
09:15 - can be inside the bracket our without
09:18 - that that is option divided by math dot
09:22 - a BS half a plus B and then we
09:26 - terminated what is the value of M after
09:32 - the evaluating the following expression
09:35 - M minus equal to nine percentage plus
09:40 - plus n plus plus plus n divided by two
09:44 - the values are given here iam isten and
09:47 - near-miss six here we can notice that M
09:50 - minus equal to is given so what we do we
09:53 - will write m equal to M minus whatever
09:57 - is the right side expression within a
09:59 - bracket so first we have to evaluate
10:02 - that and then we will subtract from M so
10:07 - M value is ten minus nine percent a
10:11 - symbol plus plus y n so y n value is
10:14 - here six pre-increment
10:16 - so it becomes 7 plus already the value
10:19 - of VN will be seven again it has been
10:22 - pre incremented so it becomes eight
10:24 - divided by two so now if we evaluate as
10:28 - per operator precedence we should do
10:32 - multiplication or division or the
10:35 - percentage symbol first and then only we
10:38 - have to add so we will do this one first
10:39 - and then this one nine divided by 7
10:42 - gives to us a remainder then eight
10:46 - divided by two is four so we will add
10:49 - whichever is inside the bracket first so
10:51 - 10 minus six becomes four
10:55 - next predict the output of the following
10:59 - math dot P whoa W of 25 comma 0.5 plus
11:05 - math dot scene of 4.2 see here piwo W of
11:12 - 25 comma 0.5 0.5 means half so anything
11:17 - to the power half is route so it will be
11:21 - giving their value of 25 routing so that
11:25 - is five 5.0 + math dot seal so seal is
11:31 - always rounding up so it will do 5.0 so
11:35 - it becomes 10.0 here next math dot round
11:42 - of 14 point 7 + math.floor of seven
11:46 - point nine round means according to the
11:49 - mathematical law it will drown so here
11:53 - fourteen point seven it becomes 15-round
11:56 - use the output in integer type so it is
12:01 - 15 a math dot floor floor means round
12:06 - down so seven point nine though it is
12:09 - more than five point five it will leave
12:12 - that and they take only the integer
12:14 - value that is seven fifteen plus seven
12:17 - point zero it is been implicit by
12:19 - computer automatically so that both
12:22 - becomes double now so the result will be
12:24 - twenty two point zero you the output of
12:29 - the following Java statements here
12:34 - transparent dot to lower case of so the
12:38 - transparent is a string here it will be
12:41 - converted into lower case completely so
12:43 - it becomes transparent in lower case the
12:47 - next one transparent dot compare to
12:52 - transition see here you can see trans
12:56 - trans both are same in the beginning and
13:00 - then here P is there in the next one
13:03 - there is I so until that it will check
13:08 - both are same
13:09 - so wherever it is differing that is
13:12 - peace here is here so it will take the
13:14 - ASCII value of P and then ASCII value of
13:17 - I ask you value of P is 80 ASCII value
13:20 - of is 73 so it will take the difference
13:23 - first one - second one so that is 80
13:26 - minus 73 becomes seven as the answer
13:31 - Thank You students let us continue in
13:34 - the next session that is section B

Cleaned transcript:

dear students in this video we are going to solve the specimen question paper of computer applications which is given by icac board for 2020 onwards in this video we will solve only section a and the next we'll continue section B section y a 40 marks answer all the questions question 1 what is encapsulation wrapping up of data under a single unit is called encapsulation it is the mechanism that binds together code and the data it manipulates this is one of the groups concept explain the purpose of using a new keyword in a Java program new keyword creates a Java instance that is object and allocates memory to that object question C what are literals literals are constants in Java a literal specifies a fixed value in a program D mentioned the types of access specifiers access specifiers are public private and protected there is one more we call it as default this is not a keyword when none of the above is mentioned it is called default if you write a default you must indicate that it is not a keyword what is constructor overloading when more than one constructor that is different parameters is given in the program it is called constructor overloading question number two a differentiate between boxing and unboxing converting primitive datatype into object is called boxing converting an object into corresponding parameter of data type is called unboxing these terms that is boxing and unboxing are added into new syllabus the world syllabus it was called wrapper classes I have already explained wrapper classes in my previous video please refer it then you will understand it clearly rewrite the following condition without using logical operators if a is greater than B or a is greater than C it print C a so we should not use and are not operators here so those are logical operators without that how we can use here R is there are we can use using if and else if statements if a is greater than B it is going to print a else if a is greater than C again it is going to print yeah so this is very simple tree write the following loop using for loop while true so it prints star while true means it is always true the condition becomes always true so how we can convert into farlow a always true means it is unbreakable one that is infinity loop so just we can create a infinity loop where there is no initialization no condition and then no increment so it becomes a infinity loop so we are going to print a star next question right the prototype of a function search so that means name of the function is search which takes two arguments one is a string and other is a character one and returns a integer value here we can write public static R that is optionally we can leave it I have mentioned it here it returns integer type so we mentioned int instead of void so public static int and then search is the name of the method and the arguments are string and character so string s comma cat see I have written differentiate between equal to and equal to equal to operators we know equal to operator is assignment operator this assigns value to the variable the value is right side and the variable should be left side equal to equal to operator is a relational operator this compares the values of a the side and returns a boolean it says whether true or false question 3 state the number of bytes and bits occupied by a character array of 10 elements so we know character data type has 2 bytes and then 10 elements are there in array so 2 bytes into 10 elements equal to 20 bytes if we need it to convert into bits we can take it as 16 bits into 10 elements otherwise we can also calculate 20 bytes into 8 that gives in bits differentiate between binary certain linear search techniques linear search binary search linear search search element is compared one by one here binary search search element is compared with middle element linear search the entire process would be timeconsuming here in binary search it is faster than linear search it is more efficient than linear search linear search works for both sorted as well as inserted RS binary search works only for satara's this question was asked in 2019 bore paper question see what is the output of the following string a is equal to Java is a programming language backslash n developed by backslash T backslash single inverted comma james gosling single inverted comma close with backslash so these are escape sequences backslash n gives a new length so until Java is programming language it will print and there will be a one space that we can't see and then the next line it starts after one space so there is a space before and after backslash in developed by and then backslash T that gives a single tab that much space is given and then james gosling inside the single quotation differentiate between break and system dot exit of 0 we know break is a key word but system dot exit of 0 is not a keyword it is a standard library function break eliminates this switch our loop here system dot exit of 0 terminates the execution of the program right a statement in Java for root of a plus B the whole cube divided by a plus B inside the two vertical lines that means the absolute value disk so first let us write the numerator one for a square root we will have math dot esq RT half a plus B whole cube is there so what we will do math dot s qrt off math dot three whoa W of a plus B comma three so we will be writing like this a plus B can be inside the bracket our without that that is option divided by math dot a BS half a plus B and then we terminated what is the value of M after the evaluating the following expression M minus equal to nine percentage plus plus n plus plus plus n divided by two the values are given here iam isten and nearmiss six here we can notice that M minus equal to is given so what we do we will write m equal to M minus whatever is the right side expression within a bracket so first we have to evaluate that and then we will subtract from M so M value is ten minus nine percent a symbol plus plus y n so y n value is here six preincrement so it becomes 7 plus already the value of VN will be seven again it has been pre incremented so it becomes eight divided by two so now if we evaluate as per operator precedence we should do multiplication or division or the percentage symbol first and then only we have to add so we will do this one first and then this one nine divided by 7 gives to us a remainder then eight divided by two is four so we will add whichever is inside the bracket first so 10 minus six becomes four next predict the output of the following math dot P whoa W of 25 comma 0.5 plus math dot scene of 4.2 see here piwo W of 25 comma 0.5 0.5 means half so anything to the power half is route so it will be giving their value of 25 routing so that is five 5.0 + math dot seal so seal is always rounding up so it will do 5.0 so it becomes 10.0 here next math dot round of 14 point 7 + math.floor of seven point nine round means according to the mathematical law it will drown so here fourteen point seven it becomes 15round use the output in integer type so it is 15 a math dot floor floor means round down so seven point nine though it is more than five point five it will leave that and they take only the integer value that is seven fifteen plus seven point zero it is been implicit by computer automatically so that both becomes double now so the result will be twenty two point zero you the output of the following Java statements here transparent dot to lower case of so the transparent is a string here it will be converted into lower case completely so it becomes transparent in lower case the next one transparent dot compare to transition see here you can see trans trans both are same in the beginning and then here P is there in the next one there is I so until that it will check both are same so wherever it is differing that is peace here is here so it will take the ASCII value of P and then ASCII value of I ask you value of P is 80 ASCII value of is 73 so it will take the difference first one second one so that is 80 minus 73 becomes seven as the answer Thank You students let us continue in the next session that is section B
