With timestamps:

00:02 - welcome back students today we are going
00:06 - to see while look using while loop we
00:10 - are going to do few programs finding the
00:13 - sama digits of a given number finding
00:16 - whether the given number is amstrong
00:18 - number or not finding whether the given
00:20 - number is palindrome are not so these
00:23 - are the general programs before going to
00:26 - the program let us learn how we are
00:30 - going to extract the digits of a given
00:34 - number for example let us take n is
00:39 - equal to 6 7 8 9 so we have to extract
00:42 - each visit to get the total of all the
00:46 - digits that is 9 8 7 & 6 when we divide
00:50 - a number by 10 and take the remainder
00:52 - the last digit that is once remains us
00:57 - the remainder so the condition given
01:01 - here is when n is greater than 0 now n
01:05 - is 6 7 8 9 so it is true now we have a
01:11 - variable called LD that is last digit
01:14 - which is equal to n more 10 so when it
01:18 - is dividing by 10 and getting the
01:21 - remainder 9 remains as LD the next step
01:27 - we need to extract 8 so we have to
01:30 - remove this mine so that is once that
01:34 - can be done dividing by 10 so when we
01:38 - divide and get the quotient 6 7 8
01:41 - remains and this is the first round and
01:45 - the second done again it is going to do
01:48 - from the beginning because already it is
01:51 - youngness 6 7 8 9 then more 10 will
01:54 - become 8 the next time again we are
01:59 - going to divide by 10 and get it to
02:02 - become 67 Soyoung is 67
02:06 - again more it becomes 7 then Yong is
02:10 - going to be 6 when we divide by 10
02:13 - and the last round last digit will be
02:17 - six and then when we divide this by 10
02:19 - zero is the quotient then the condition
02:24 - doesn't satisfy it will come out of the
02:27 - loop so this is how we are going to
02:29 - extract each digit from a given number
02:34 - let us go to the program new class a
02:41 - special number 8
03:06 - let us take parameterised input so we
03:10 - will have name called input itself
03:15 - integer number
03:17 - Sen let us have D that is in D or
03:25 - capital W and then some we have to
03:30 - initialize as 0 here then we will go to
03:34 - condition while n is greater than 0 we
03:41 - will have a block of course so now first
03:45 - time we are going to extract the last
03:47 - digit by saying B is equal to n more
03:54 - then then the last digit is going to be
03:59 - added with the sum to find the sum of
04:02 - that number so sum is equal to sum plus
04:07 - D so next we have to remove the last
04:13 - digit for that we have n is equal to n
04:18 - divided by 10 so ultimately once you get
04:21 - removed and then new n becomes after
04:26 - removing the last digit so it will
04:31 - continue up to n is greater than 0 when
04:36 - it is false it will come out of the loop
04:39 - and then we will here print the sum of
04:42 - all the digits system dot out dot print
04:52 - line of sum of all the digits present in
05:07 - given number
05:11 - is equal to plus some so let us compile
05:17 - this no syntax error let us run this
05:23 - program let us give fifteen so sum of
05:32 - all the digits present in this given
05:34 - number is 6 so 1 plus 5 is 6
05:38 - let us try with the bigger number
05:50 - some of all the digits present in the
05:52 - given number is 31 I already told you
05:55 - while loop can be used when we doesn't
06:00 - know how many times we have to run the
06:02 - loop so we doesn't know here in this
06:05 - program how many times it is going to be
06:07 - executed if we give two digit number two
06:11 - times five is it number means five times
06:13 - it will get executed so we have given
06:17 - only the condition n is greater than
06:20 - zero number of times
06:22 - ultimately it decides until n is going
06:27 - to be greater than zero this is the
06:29 - benefit of while loop let us see how to
06:32 - find whether the given number is an
06:35 - strong number or not let us first know
06:38 - what is Armstrong number when a number
06:43 - is equal to the sum of nth power of
06:45 - digits in that number the number is
06:48 - called Armstrong number for example if
06:52 - we take a number two three four five
06:55 - then there are four digits available so
06:59 - 2 to the power 4 plus 3 to the power 4
07:02 - plus 4 to the power 4 plus 5 to the
07:04 - power fourth we calculate the sum of
07:06 - this if the sum of this is equal to the
07:10 - given number that is 2 3 4 5 then it is
07:12 - called Armstrong number generally we
07:15 - will have three-digit amstrong numbers
07:17 - for example 371 so there are 3 digits
07:22 - that is 3 to the power 3 plus 7 to the
07:25 - power 3 plus 1 to the power 3 so this is
07:28 - 27 7 to the power is 343 plus 1 so the
07:33 - sum of this becomes 371 which is again
07:36 - equal to the given number so it is
07:40 - amstrong number so let us do a program
07:43 - now here instead of finding the sum of
07:48 - each digit we are going to take cube of
07:52 - each digit so that is d into
07:57 - D into D so we need to argue the
08:05 - condition to find whether the given
08:07 - number is equal to the sum of this
08:09 - number but originally the number doesn't
08:12 - remain as we have given because here it
08:16 - is manipulated again and again by
08:19 - dividing by 10 so let us put this into a
08:22 - variable called X X is equal to M so
08:29 - what we do we preserve the copy of the
08:32 - given number in X so we will not lose
08:36 - the number given by the user now we will
08:41 - have the condition here if some is equal
08:48 - to equal to X then we will say given
08:56 - number is Armstrong else
09:25 - not a I'm strong number so here we have
09:29 - to declare in X then everything is fine
09:35 - compile this so let us give the I'm
09:42 - strong about that is 371 itself or even
09:46 - 370 also am strong number given number
09:49 - is I'm strangled and then 153 also I'm
09:54 - strong number let us have 153 yes
09:59 - given number is I am strong number let
10:03 - us knew other than the strong number
10:05 - just for verification
10:09 - 475 so given number is not a I am strong
10:13 - number now let us do a program to find
10:17 - whether given number is palindrome are
10:19 - not apparent row number is a number when
10:24 - it has been reversed also use the same
10:27 - number so let us learn how it works
10:31 - before going to your program it will be
10:33 - easy to do a program then so let us have
10:39 - n is equal to 1 2 3 4 and then when we
10:42 - reverse that the new number should be
10:44 - there for that we initialize RS 0 the
10:48 - condition while n is greater than 0 we
10:52 - have to take the remainder so we are
10:56 - doing n mod 10 then we get 4 as the
10:59 - number here we will have our into 10 to
11:05 - make that remainder to the higher place
11:09 - value here R is 0 so 0 plus D it becomes
11:14 - for the next round n is equal to n by 10
11:19 - we are going to remove this 4 by
11:21 - dividing that by 10 we will have 1 2 3
11:25 - now the next round D is equal to 3 after
11:30 - getting the remainder now R is 4 already
11:34 - here so what happens 4 into 10
11:37 - so the ones place moves to the next
11:40 - higher place that is tends by
11:43 - multiplying by ten so it becomes 40 plus
11:47 - the remainder here that is B is 343 it
11:51 - becomes and then again we are going to
11:54 - divide this one 23 divided by 10 and
11:57 - then we will get to a less the answer
12:00 - the third round D becomes 2 and then 43
12:05 - we already have into 10 so 43 becomes 4
12:08 - 30 and then this last digit is going to
12:12 - be added with this does become 432 now n
12:18 - is equal to 1 now the last 3 days it is
12:23 - 1 we are going to multiply this R into
12:27 - 10 that is 432 into 10 plus 1 so it
12:33 - becomes 4 3 2 1 then when we divide that
12:36 - one by 10 it becomes 0 which is false
12:41 - then it comes out of the loop so this is
12:44 - the working of reversing a number so we
12:47 - will compare this with the original
12:49 - number given by the user so if both are
12:51 - same then it is said to be a palindrome
12:54 - number so let us go to the program so we
12:59 - will modify this program instead of sum
13:02 - we will have R then while n is greater
13:07 - than 0 D is equal to n mod 10 then we
13:11 - are not having the sum instead of that
13:14 - we are going to have R is equal to R
13:19 - into 10 plus D then young is equal to n
13:28 - mod 10 so we have already stored the
13:31 - number in variable called X so we are
13:35 - going to check whether R is equal to
13:39 - equal to X R naught then if it is true
13:43 - then it is going to be pairing wrong
13:46 - number it is palindrome
13:53 - yes it is not a palindrome
14:05 - let us run this program
14:09 - what is q1 for one given number is
14:19 - palindrome let us give some other number
14:26 - this is not a palindrome number so it
14:29 - should say yes this matter parent
14:31 - remember students I hope you clearly
14:35 - understood how to use while loop and
14:39 - then do these programs

Cleaned transcript:

welcome back students today we are going to see while look using while loop we are going to do few programs finding the sama digits of a given number finding whether the given number is amstrong number or not finding whether the given number is palindrome are not so these are the general programs before going to the program let us learn how we are going to extract the digits of a given number for example let us take n is equal to 6 7 8 9 so we have to extract each visit to get the total of all the digits that is 9 8 7 & 6 when we divide a number by 10 and take the remainder the last digit that is once remains us the remainder so the condition given here is when n is greater than 0 now n is 6 7 8 9 so it is true now we have a variable called LD that is last digit which is equal to n more 10 so when it is dividing by 10 and getting the remainder 9 remains as LD the next step we need to extract 8 so we have to remove this mine so that is once that can be done dividing by 10 so when we divide and get the quotient 6 7 8 remains and this is the first round and the second done again it is going to do from the beginning because already it is youngness 6 7 8 9 then more 10 will become 8 the next time again we are going to divide by 10 and get it to become 67 Soyoung is 67 again more it becomes 7 then Yong is going to be 6 when we divide by 10 and the last round last digit will be six and then when we divide this by 10 zero is the quotient then the condition doesn't satisfy it will come out of the loop so this is how we are going to extract each digit from a given number let us go to the program new class a special number 8 let us take parameterised input so we will have name called input itself integer number Sen let us have D that is in D or capital W and then some we have to initialize as 0 here then we will go to condition while n is greater than 0 we will have a block of course so now first time we are going to extract the last digit by saying B is equal to n more then then the last digit is going to be added with the sum to find the sum of that number so sum is equal to sum plus D so next we have to remove the last digit for that we have n is equal to n divided by 10 so ultimately once you get removed and then new n becomes after removing the last digit so it will continue up to n is greater than 0 when it is false it will come out of the loop and then we will here print the sum of all the digits system dot out dot print line of sum of all the digits present in given number is equal to plus some so let us compile this no syntax error let us run this program let us give fifteen so sum of all the digits present in this given number is 6 so 1 plus 5 is 6 let us try with the bigger number some of all the digits present in the given number is 31 I already told you while loop can be used when we doesn't know how many times we have to run the loop so we doesn't know here in this program how many times it is going to be executed if we give two digit number two times five is it number means five times it will get executed so we have given only the condition n is greater than zero number of times ultimately it decides until n is going to be greater than zero this is the benefit of while loop let us see how to find whether the given number is an strong number or not let us first know what is Armstrong number when a number is equal to the sum of nth power of digits in that number the number is called Armstrong number for example if we take a number two three four five then there are four digits available so 2 to the power 4 plus 3 to the power 4 plus 4 to the power 4 plus 5 to the power fourth we calculate the sum of this if the sum of this is equal to the given number that is 2 3 4 5 then it is called Armstrong number generally we will have threedigit amstrong numbers for example 371 so there are 3 digits that is 3 to the power 3 plus 7 to the power 3 plus 1 to the power 3 so this is 27 7 to the power is 343 plus 1 so the sum of this becomes 371 which is again equal to the given number so it is amstrong number so let us do a program now here instead of finding the sum of each digit we are going to take cube of each digit so that is d into D into D so we need to argue the condition to find whether the given number is equal to the sum of this number but originally the number doesn't remain as we have given because here it is manipulated again and again by dividing by 10 so let us put this into a variable called X X is equal to M so what we do we preserve the copy of the given number in X so we will not lose the number given by the user now we will have the condition here if some is equal to equal to X then we will say given number is Armstrong else not a I'm strong number so here we have to declare in X then everything is fine compile this so let us give the I'm strong about that is 371 itself or even 370 also am strong number given number is I'm strangled and then 153 also I'm strong number let us have 153 yes given number is I am strong number let us knew other than the strong number just for verification 475 so given number is not a I am strong number now let us do a program to find whether given number is palindrome are not apparent row number is a number when it has been reversed also use the same number so let us learn how it works before going to your program it will be easy to do a program then so let us have n is equal to 1 2 3 4 and then when we reverse that the new number should be there for that we initialize RS 0 the condition while n is greater than 0 we have to take the remainder so we are doing n mod 10 then we get 4 as the number here we will have our into 10 to make that remainder to the higher place value here R is 0 so 0 plus D it becomes for the next round n is equal to n by 10 we are going to remove this 4 by dividing that by 10 we will have 1 2 3 now the next round D is equal to 3 after getting the remainder now R is 4 already here so what happens 4 into 10 so the ones place moves to the next higher place that is tends by multiplying by ten so it becomes 40 plus the remainder here that is B is 343 it becomes and then again we are going to divide this one 23 divided by 10 and then we will get to a less the answer the third round D becomes 2 and then 43 we already have into 10 so 43 becomes 4 30 and then this last digit is going to be added with this does become 432 now n is equal to 1 now the last 3 days it is 1 we are going to multiply this R into 10 that is 432 into 10 plus 1 so it becomes 4 3 2 1 then when we divide that one by 10 it becomes 0 which is false then it comes out of the loop so this is the working of reversing a number so we will compare this with the original number given by the user so if both are same then it is said to be a palindrome number so let us go to the program so we will modify this program instead of sum we will have R then while n is greater than 0 D is equal to n mod 10 then we are not having the sum instead of that we are going to have R is equal to R into 10 plus D then young is equal to n mod 10 so we have already stored the number in variable called X so we are going to check whether R is equal to equal to X R naught then if it is true then it is going to be pairing wrong number it is palindrome yes it is not a palindrome let us run this program what is q1 for one given number is palindrome let us give some other number this is not a palindrome number so it should say yes this matter parent remember students I hope you clearly understood how to use while loop and then do these programs
