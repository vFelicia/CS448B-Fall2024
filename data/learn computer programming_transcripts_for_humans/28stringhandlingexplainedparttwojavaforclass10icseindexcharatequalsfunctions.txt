With timestamps:

00:02 - welcome back students today we are going
00:05 - to see the continuation of string
00:07 - functions before seeing this let us know
00:11 - the index number of a string each
00:15 - character in a string will have its
00:17 - index number so here I have given
00:20 - exhibition he is having 0 as index
00:24 - number so always the index number starts
00:27 - with 0 and then it will keep on
00:30 - continuing until the last character so
00:33 - here last character we have 9 as the
00:36 - index number if we see the length of
00:38 - this is going to be 10 so the last index
00:42 - of the character is going to be 1 lesser
00:46 - than the total length of the string so
00:49 - we can say index of last character is
00:52 - equal to length of string minus 1 in
00:56 - case if we see the position of the
00:58 - character it is going to be one more
01:02 - than the index number so that is for
01:05 - example if we take this B here 1 2 3 4 5
01:11 - so this is the fifth character in the
01:14 - string but it will have 4 as index so if
01:18 - we wanted to know the position what we
01:20 - do we can add one with the index so
01:23 - position of the character is equal to
01:25 - index of the character plus 1 here we
01:31 - have index of so it is going to give the
01:35 - index of the particular character output
01:38 - will be integer type for example I have
01:42 - application dot index of P so it is
01:45 - going to give the index of P so that is
01:47 - the first occurrence of P it is going to
01:49 - be displayed so it will be 1 so that is
01:53 - 0 and then 1 next we have last index R
01:56 - so here again the index is going to be
01:59 - integer datatype
02:01 - then same application we say application
02:05 - that last index of P here the last
02:09 - occurrence of P is going to be taken so
02:12 - it is going to be
02:13 - this P so that is 0 1 2 so 2 is going to
02:17 - be the output next we are having
02:19 - character actor so we will give the
02:22 - index number output is going to be
02:25 - character type so for example I have
02:29 - computer dot character at 6 so the index
02:32 - which we are going to give is inside the
02:35 - bracket here so it will take the
02:38 - character at index 6 so 0 1 2 3 4 5 6 so
02:45 - II is going to be the output next we
02:48 - have ends width so it is going to check
02:51 - whether the string ends with the
02:53 - particular string so output data type is
02:58 - going to be true or false so that is
03:02 - boolean so phone dot ends with whoa so
03:08 - it is going to be false
03:09 - next I have starts with so again it is
03:13 - going to say whether it is true or not
03:15 - so again boolean data type cell dot
03:18 - starts with C which is given inside the
03:21 - quotation here so it is true C is right
03:24 - one so next we are having equals this
03:29 - will check whether given strings to
03:33 - strings are equal or not and then give
03:36 - the output as true or false so again it
03:39 - is going to be boolean data type so here
03:42 - we give first listing here dot equals of
03:45 - the second string inside the bracket so
03:50 - it is false because pin is not equal to
03:53 - capital ten here next we have equals
03:56 - ignore case of it is going to check
03:58 - whether both the strings given are equal
04:01 - or not by ignoring the case whether it
04:04 - is in uppercase or lowercase it is going
04:07 - to ignore so it is boolean type again
04:10 - pen dot equals ignore case of pen so
04:15 - both are equally if you ignore the case
04:18 - so it is going to be true
04:20 - we have few more functions we will see
04:25 - that in the
04:26 - next class let us know how to run all
04:29 - these using a program I will create the
04:32 - class I will copy the codes from the
04:44 - previous one let me copy all these codes
04:54 - then change the name of the class its
05:00 - rough number we are going to have a
05:02 - string enter a string for string STR is
05:10 - equal to BR dot readline off we are
05:16 - going to get the index after letter so
05:19 - we need integer variable int I is equal
05:23 - to so here string variable strname this
05:59 - let us close the method close the class
06:03 - compile this no syntax error let us run
06:08 - this so you say here book so index up
06:16 - woah that is first occurrence of work so
06:18 - it is going to be 1 0 and 1 let us check
06:23 - the last index so let us copy again the
06:27 - same for then modify this I am going to
06:34 - have here last index
06:36 - so last index of whoa so let me change
06:43 - here last index last index of letter
06:47 - work it is going to be rigidly last
06:53 - index then we are going to print also
06:56 - last index have you computed application
07:12 - so you can see index of voice one from
07:17 - the beginning the last index of woe is
07:19 - 18 now let us little it all this we will
07:28 - see character at function for that we
07:31 - need character data type output so
07:34 - character C is equal to STR that
07:40 - character hat may be just I am giving 6
07:45 - so it is going to give the character at
07:49 - index 6 let us print this
08:13 - and you shall so character at index
08:22 - exists e next we will see starts with
08:30 - and ends with so for that we need
08:32 - boolean data type so we will change here
08:36 - boolean for starts with SIU s is equal
08:41 - to STR dot starts W is in capital with
08:48 - so we are giving here inside the double
08:52 - quotation so I just give here a and then
09:00 - boolean ends with str dot ends
09:10 - let me give R so let me change this yes
09:31 - and then then we will just copy here
09:35 - whether ends with then whether it is
09:41 - with R then this is e compile this
09:52 - they say number so weather starts with a
09:57 - false weather ends with our it is true
10:03 - here not only a single character we can
10:06 - give a word also a string we can give if
10:11 - the same string occurs then it will say
10:14 - whether it starts whether it ends for
10:16 - example let me give here function yeah
10:24 - thank you Java so let us change here
10:28 - also here in Java compare this
10:44 - and you string function so you can see
10:53 - starts with function files but ends with
10:57 - Java it is true
11:01 - next we are going to learn equals and
11:06 - equals ignore case of so I will copy
11:09 - this array let me have yet another
11:15 - string so here yes they are one now I
11:23 - have taken two string type let me check
11:28 - Budhan check is equal to STR dot equals
11:36 - off I'm doing here str1 the next food in
11:45 - checks ignoring case STR o'clock ignore
12:00 - case of it is STR one so now it is going
12:06 - to check whether yes PR one whatever we
12:09 - have given whether it is equal to the
12:12 - next string which is given by the user
12:15 - same like that after ignoring the case
12:18 - it is going to check let us print the
12:21 - result
12:44 - so let me copy this and change hot
12:47 - ignore case then both the strings are
12:52 - equal it is check IEC AC no syntax error
13:08 - enter the string a pencil another string
13:16 - [Music]
13:17 - pen in small then c c IL in capital so
13:27 - whether both the strings are equal files
13:29 - whether both the strings are equal after
13:32 - ignoring the case it is true so it
13:34 - ignored whether capital r in small let
13:39 - us continue the same function in next
13:42 - video also thank your students

Cleaned transcript:

welcome back students today we are going to see the continuation of string functions before seeing this let us know the index number of a string each character in a string will have its index number so here I have given exhibition he is having 0 as index number so always the index number starts with 0 and then it will keep on continuing until the last character so here last character we have 9 as the index number if we see the length of this is going to be 10 so the last index of the character is going to be 1 lesser than the total length of the string so we can say index of last character is equal to length of string minus 1 in case if we see the position of the character it is going to be one more than the index number so that is for example if we take this B here 1 2 3 4 5 so this is the fifth character in the string but it will have 4 as index so if we wanted to know the position what we do we can add one with the index so position of the character is equal to index of the character plus 1 here we have index of so it is going to give the index of the particular character output will be integer type for example I have application dot index of P so it is going to give the index of P so that is the first occurrence of P it is going to be displayed so it will be 1 so that is 0 and then 1 next we have last index R so here again the index is going to be integer datatype then same application we say application that last index of P here the last occurrence of P is going to be taken so it is going to be this P so that is 0 1 2 so 2 is going to be the output next we are having character actor so we will give the index number output is going to be character type so for example I have computer dot character at 6 so the index which we are going to give is inside the bracket here so it will take the character at index 6 so 0 1 2 3 4 5 6 so II is going to be the output next we have ends width so it is going to check whether the string ends with the particular string so output data type is going to be true or false so that is boolean so phone dot ends with whoa so it is going to be false next I have starts with so again it is going to say whether it is true or not so again boolean data type cell dot starts with C which is given inside the quotation here so it is true C is right one so next we are having equals this will check whether given strings to strings are equal or not and then give the output as true or false so again it is going to be boolean data type so here we give first listing here dot equals of the second string inside the bracket so it is false because pin is not equal to capital ten here next we have equals ignore case of it is going to check whether both the strings given are equal or not by ignoring the case whether it is in uppercase or lowercase it is going to ignore so it is boolean type again pen dot equals ignore case of pen so both are equally if you ignore the case so it is going to be true we have few more functions we will see that in the next class let us know how to run all these using a program I will create the class I will copy the codes from the previous one let me copy all these codes then change the name of the class its rough number we are going to have a string enter a string for string STR is equal to BR dot readline off we are going to get the index after letter so we need integer variable int I is equal to so here string variable strname this let us close the method close the class compile this no syntax error let us run this so you say here book so index up woah that is first occurrence of work so it is going to be 1 0 and 1 let us check the last index so let us copy again the same for then modify this I am going to have here last index so last index of whoa so let me change here last index last index of letter work it is going to be rigidly last index then we are going to print also last index have you computed application so you can see index of voice one from the beginning the last index of woe is 18 now let us little it all this we will see character at function for that we need character data type output so character C is equal to STR that character hat may be just I am giving 6 so it is going to give the character at index 6 let us print this and you shall so character at index exists e next we will see starts with and ends with so for that we need boolean data type so we will change here boolean for starts with SIU s is equal to STR dot starts W is in capital with so we are giving here inside the double quotation so I just give here a and then boolean ends with str dot ends let me give R so let me change this yes and then then we will just copy here whether ends with then whether it is with R then this is e compile this they say number so weather starts with a false weather ends with our it is true here not only a single character we can give a word also a string we can give if the same string occurs then it will say whether it starts whether it ends for example let me give here function yeah thank you Java so let us change here also here in Java compare this and you string function so you can see starts with function files but ends with Java it is true next we are going to learn equals and equals ignore case of so I will copy this array let me have yet another string so here yes they are one now I have taken two string type let me check Budhan check is equal to STR dot equals off I'm doing here str1 the next food in checks ignoring case STR o'clock ignore case of it is STR one so now it is going to check whether yes PR one whatever we have given whether it is equal to the next string which is given by the user same like that after ignoring the case it is going to check let us print the result so let me copy this and change hot ignore case then both the strings are equal it is check IEC AC no syntax error enter the string a pencil another string pen in small then c c IL in capital so whether both the strings are equal files whether both the strings are equal after ignoring the case it is true so it ignored whether capital r in small let us continue the same function in next video also thank your students
