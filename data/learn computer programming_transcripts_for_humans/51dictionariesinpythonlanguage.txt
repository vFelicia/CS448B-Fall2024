With timestamps:

00:04 - [Laughter]
00:15 - hello everyone welcome back today we are
00:18 - going to start learning about
00:20 - dictionaries in
00:23 - Python let us see how to initialize a
00:26 - dictionary dictionaries come under
00:28 - collections but it is a special type I
00:33 - will tell how first let us consider a
00:36 - list I have e ID meaning employees
00:42 - ID in a list I'm having
00:46 - here 2 3 4
00:50 - 5 6 5 4 7
00:53 - 87 4 5
00:56 - okay here these are the elements that
01:00 - means values these values are referenced
01:04 - by the index number which by default
01:08 - starts by zero and then it keeps
01:11 - continuing the index number or the
01:14 - reference is not seen by us it is
01:17 - automatically given by the Python
01:19 - language when we come to the
01:23 - dictionary instead of this square
01:25 - bracket we have the flow bracket
01:33 - and the references index numbers are not
01:37 - there instead of that the creator gives
01:40 - the reference that is called key now I
01:45 - give here a name of a
01:48 - employee
01:50 - Rahim and then the key that is the
01:54 - reference and the
01:56 - value these are bifurcated using the
02:01 - colon now this together becomes an
02:07 - item now the second item will be having
02:11 - the reference given by the Creator which
02:14 - I give here as
02:17 - murali similar way I have the third item
02:21 - here
02:22 - giving Al so now this is a dictionary
02:26 - each item that is key and value pair is
02:31 - bated using the
02:34 - comma Now execute this so now if we want
02:39 - to see what is in Eid we will be getting
02:42 - this dictionary we can create the empty
02:46 - dictionary mentioning one the flower
02:49 - bracket without any item in it for
02:52 - example I have rcore n meaning RO number
02:56 - is equal to it is empty diction
03:01 - accessing the
03:03 - value if I want to access the
03:07 - value I can mention the name of the
03:11 - dictionary e ID in the square bracket as
03:16 - we used to give in the list the index
03:18 - number here we will give the key that is
03:22 - for example I give
03:27 - murali so now I will get the
03:30 - value which is mural's value that is
03:35 - 6547 in case we give which is not having
03:39 - the reference
03:42 - Eid it will be giving you the error
03:53 - ABC changing the value of an item and
03:58 - adding a new item
04:01 - now let us learn first to insert a new
04:07 - item see here rore n is empty one let me
04:12 - have one item
04:14 - there for that I will be giving rcore
04:18 - n inside the square bracket I will give
04:21 - the new key what I wanted to add for
04:26 - example Samir and then I give equal to
04:32 - 19 so now this item is added that means
04:37 - Samir as a key and 19 as a value let us
04:40 - check rcore
04:43 - n similar way we can add n number of
04:47 - items the items will be added at the
04:51 - end let me add one
04:58 - more mad
05:00 - is equal to 15 so
05:04 - now you can see that it is
05:07 - added now in case I need to change the
05:11 - value by mistake I put 15 here I want
05:15 - that to be 13 I will be giving rcore
05:19 - n the same key I will be
05:23 - giving and then equal to the new value
05:28 - so rcore and it is updating the value
05:32 - one thing you wanted to note down here
05:36 - the keys that means the references
05:40 - cannot be
05:43 - duplicated so it is unique one more
05:46 - thing you wanted to remember is the keys
05:49 - must be immutable type see there I have
05:53 - given the names in the code which is a
05:56 - string immutable type a number I can
06:01 - give so let me add new one rcore n
06:06 - 18 is equal to see there 18 is an
06:09 - integer that is also immutable
06:12 - type
06:14 - RAV so this is also accepted right so
06:19 - Keys cannot have mutable data type there
06:23 - it means in Python there are two data
06:27 - types which are mutable which is list
06:31 - and the dictionary itself yeah
06:34 - dictionaries are mutable as we are
06:36 - changing the value we could see that we
06:38 - changed 15 to 13 so we change the value
06:41 - of a dictionary so that comes under
06:45 - mutable in Python only dictionary and
06:50 - list are mutable all other data types
06:53 - are immutable we know let me create one
06:56 - more dictionary I have sales
07:00 - is equal to a dictionary having Monday
07:06 - sales in different
07:12 - branches see there I have given three
07:15 - different values but we cannot give like
07:18 - that but we can give this as a
07:23 - list so values can be any type it is
07:26 - even changeable that is mutable
07:32 - so this get accepted so now if I want to
07:36 - add an item here for Tuesday sales
07:41 - of Tue is equal to I give here as a list
07:47 - different
07:51 - values so again if you see
07:56 - there there are two different typ items
08:00 - I said keys are immutable right let me
08:03 - give one list there and
08:06 - check so this is mentioning the key here
08:10 - I give
08:11 - the value as a list simply I give 1
08:16 - comma 2 as a list there is equal to let
08:19 - me give just
08:22 - W
08:23 - so the list cannot be accepted
08:27 - there unhashable type
08:29 - right one more thing I wanted to tell
08:32 - you is until python 3.6 version
08:36 - dictionaries were unordered collection
08:40 - but 3.7 and above it is ordered
08:43 - collection let me summarize what we
08:46 - learned
08:58 - now
09:51 - keep watching my channel keep learning
09:54 - and keep
09:55 - sharing let us meet in the next class
09:58 - thank thank you

Cleaned transcript:

[Laughter] hello everyone welcome back today we are going to start learning about dictionaries in Python let us see how to initialize a dictionary dictionaries come under collections but it is a special type I will tell how first let us consider a list I have e ID meaning employees ID in a list I'm having here 2 3 4 5 6 5 4 7 87 4 5 okay here these are the elements that means values these values are referenced by the index number which by default starts by zero and then it keeps continuing the index number or the reference is not seen by us it is automatically given by the Python language when we come to the dictionary instead of this square bracket we have the flow bracket and the references index numbers are not there instead of that the creator gives the reference that is called key now I give here a name of a employee Rahim and then the key that is the reference and the value these are bifurcated using the colon now this together becomes an item now the second item will be having the reference given by the Creator which I give here as murali similar way I have the third item here giving Al so now this is a dictionary each item that is key and value pair is bated using the comma Now execute this so now if we want to see what is in Eid we will be getting this dictionary we can create the empty dictionary mentioning one the flower bracket without any item in it for example I have rcore n meaning RO number is equal to it is empty diction accessing the value if I want to access the value I can mention the name of the dictionary e ID in the square bracket as we used to give in the list the index number here we will give the key that is for example I give murali so now I will get the value which is mural's value that is 6547 in case we give which is not having the reference Eid it will be giving you the error ABC changing the value of an item and adding a new item now let us learn first to insert a new item see here rore n is empty one let me have one item there for that I will be giving rcore n inside the square bracket I will give the new key what I wanted to add for example Samir and then I give equal to 19 so now this item is added that means Samir as a key and 19 as a value let us check rcore n similar way we can add n number of items the items will be added at the end let me add one more mad is equal to 15 so now you can see that it is added now in case I need to change the value by mistake I put 15 here I want that to be 13 I will be giving rcore n the same key I will be giving and then equal to the new value so rcore and it is updating the value one thing you wanted to note down here the keys that means the references cannot be duplicated so it is unique one more thing you wanted to remember is the keys must be immutable type see there I have given the names in the code which is a string immutable type a number I can give so let me add new one rcore n 18 is equal to see there 18 is an integer that is also immutable type RAV so this is also accepted right so Keys cannot have mutable data type there it means in Python there are two data types which are mutable which is list and the dictionary itself yeah dictionaries are mutable as we are changing the value we could see that we changed 15 to 13 so we change the value of a dictionary so that comes under mutable in Python only dictionary and list are mutable all other data types are immutable we know let me create one more dictionary I have sales is equal to a dictionary having Monday sales in different branches see there I have given three different values but we cannot give like that but we can give this as a list so values can be any type it is even changeable that is mutable so this get accepted so now if I want to add an item here for Tuesday sales of Tue is equal to I give here as a list different values so again if you see there there are two different typ items I said keys are immutable right let me give one list there and check so this is mentioning the key here I give the value as a list simply I give 1 comma 2 as a list there is equal to let me give just W so the list cannot be accepted there unhashable type right one more thing I wanted to tell you is until python 3.6 version dictionaries were unordered collection but 3.7 and above it is ordered collection let me summarize what we learned now keep watching my channel keep learning and keep sharing let us meet in the next class thank thank you
