With timestamps:

00:00 - dear students today we are going to see
00:03 - function our method overloading
00:06 - this method our function overloading is
00:09 - concept of whoops as polymorphism you
00:15 - already know that we can write many
00:17 - methods in the class Java language also
00:22 - facilitates designing of number of
00:25 - functions with the same name when we
00:28 - write method name our function name as
00:30 - same name then it is called overloading
00:33 - let us create a class so let us create a
00:59 - variable which is common to the class
01:03 - into B let us create a method void
01:10 - volume so let us have cube so we need
01:16 - only one argument that is side into side
01:19 - in decide in yes calculating V is equal
01:27 - to yes into yes yes print this
01:52 - KBC photo press let us write down other
01:59 - makeup why Warren Beatty boy
02:55 - if we need for cube ID we run this video
02:58 - 3 Phi you search shows thousand in case
03:09 - if we need only four cube we will have
03:13 - 140 you can see no see these are having
03:23 - different method name we are going to
03:29 - make this as same name which becomes of
03:32 - overloading note so when it is having
03:38 - same name how it identifies it
03:41 - identifies by number of parameter see
03:45 - here only one parameter is there yet
03:47 - three parameters are there so when the
03:50 - arguments differ ultimately matches to
03:54 - the arguments and it runs it may be
03:58 - number of arguments or even type of
04:02 - arguments
04:03 - our arrangement of arguments also this
04:08 - is example for number of arguments let
04:13 - us win this you will have the same see
04:25 - shows 125
04:26 - no sorry trust us now let us have only
04:46 - one argument in both the methods
04:49 - so let us cancel this see now this is
04:54 - yell this is yes the name of the
04:59 - variable is different but that doesn't
05:01 - matter
05:01 - it checks whether type of the variable
05:06 - that is parameter is same are not sea
05:10 - trouts already method we boil of int is
05:13 - already differ in a plus function
05:16 - overloading so let us change the
05:18 - parameter type let us have as W so when
05:23 - we have double the answer must be also
05:26 - from in W let us change this as double
05:30 - so automatically so int can be converted
05:34 - to double but double cannot be cannot
05:36 - retained to int C no number of parameter
05:46 - is same for both so let us have this
05:50 - also so this still this is also volume
06:00 - of cube let it be like this only it does
06:02 - not change this just for understanding
06:05 - compile no syntax error
06:13 - see if we run w it asks double by so let
06:20 - us do twenty five point two three so you
06:26 - can see that I said in case you need
06:32 - fifty just ask
06:39 - so let us have example for arrangement
06:43 - of arguments that the number of argument
06:45 - be the same but arrangement of the
06:47 - arguments different so let us have here
06:52 - into length into breadth and the double
06:58 - height so let us you hear us let us just
07:09 - try let us do the same type simulate
07:28 - except no because these three are in the
07:32 - same arrangement int into double
07:34 - entailed double so let us change this
07:37 - see it is showing the error message link
07:45 - interpreting sorry into TR into let us
07:56 - change this yes the arrangement order of
08:03 - that sea so now there is no error
08:09 - because here you tell here double and
08:14 - then here int int double here in so
08:18 - order of the arguments is different let
08:22 - us run
08:33 - so first here it is asking intel eight
08:38 - will be five and then here double it is
08:43 - four point six three let us for this
08:56 - here W 2 point 5 then 5 so you can see
09:08 - keywords
09:10 - this must be easy example to understand
09:15 - the function overloading let us create
09:17 - one more program which calculates the
09:21 - area of different shapes so let us take
09:50 - yes yes so the another method why area
10:22 - same Lim s method name here let us have
10:29 - double 3.14
11:00 - [Music]
11:41 - here I meant reaches for with you hide
11:45 - so this is for let's compile this
12:14 - so no syntax errors my students send
12:24 - this for area of square we have one D
12:29 - length seventy so you can see this area
12:32 - of squares 4900 next so this is for
12:42 - circle 0.15 you can see area of circle
12:51 - and then our parallelogram b67
12:59 - item a t-33
13:08 - when this program here different type of
13:13 - parameter here number of parameter
13:16 - varies and then let us have one more
13:21 - also here see here it is here it is
13:40 - inked and double your double and in so
13:44 - however the arrangement of the argument
13:48 - differs so there one
14:24 - so let us how
14:33 - mm hypothesis so this is fine
14:47 - I hope that you learnt function
14:51 - overloading very clearly but you may ask
14:54 - one question that what is the use of
14:58 - function overloading and you can say
15:01 - instead of giving same name we can give
15:03 - different names and can be performed
15:06 - isn't it
15:06 - function overloading is useful when we
15:10 - do not like to remember so many names if
15:13 - names of the functions are all same then
15:18 - we do not require to remember many
15:22 - function names and according to
15:24 - arguments passed it will run
15:27 - hence function overloading is one of the
15:31 - most powerful and useful features of
15:35 - object-oriented programming which
15:38 - implements polymorphism which is a oops
15:41 - concept I hope this video might have
15:47 - been very helpful to you all for
15:50 - understanding function overloading in
15:53 - very simple manner please subscribe and
15:56 - like if this video helped

Cleaned transcript:

dear students today we are going to see function our method overloading this method our function overloading is concept of whoops as polymorphism you already know that we can write many methods in the class Java language also facilitates designing of number of functions with the same name when we write method name our function name as same name then it is called overloading let us create a class so let us create a variable which is common to the class into B let us create a method void volume so let us have cube so we need only one argument that is side into side in decide in yes calculating V is equal to yes into yes yes print this KBC photo press let us write down other makeup why Warren Beatty boy if we need for cube ID we run this video 3 Phi you search shows thousand in case if we need only four cube we will have 140 you can see no see these are having different method name we are going to make this as same name which becomes of overloading note so when it is having same name how it identifies it identifies by number of parameter see here only one parameter is there yet three parameters are there so when the arguments differ ultimately matches to the arguments and it runs it may be number of arguments or even type of arguments our arrangement of arguments also this is example for number of arguments let us win this you will have the same see shows 125 no sorry trust us now let us have only one argument in both the methods so let us cancel this see now this is yell this is yes the name of the variable is different but that doesn't matter it checks whether type of the variable that is parameter is same are not sea trouts already method we boil of int is already differ in a plus function overloading so let us change the parameter type let us have as W so when we have double the answer must be also from in W let us change this as double so automatically so int can be converted to double but double cannot be cannot retained to int C no number of parameter is same for both so let us have this also so this still this is also volume of cube let it be like this only it does not change this just for understanding compile no syntax error see if we run w it asks double by so let us do twenty five point two three so you can see that I said in case you need fifty just ask so let us have example for arrangement of arguments that the number of argument be the same but arrangement of the arguments different so let us have here into length into breadth and the double height so let us you hear us let us just try let us do the same type simulate except no because these three are in the same arrangement int into double entailed double so let us change this see it is showing the error message link interpreting sorry into TR into let us change this yes the arrangement order of that sea so now there is no error because here you tell here double and then here int int double here in so order of the arguments is different let us run so first here it is asking intel eight will be five and then here double it is four point six three let us for this here W 2 point 5 then 5 so you can see keywords this must be easy example to understand the function overloading let us create one more program which calculates the area of different shapes so let us take yes yes so the another method why area same Lim s method name here let us have double 3.14 here I meant reaches for with you hide so this is for let's compile this so no syntax errors my students send this for area of square we have one D length seventy so you can see this area of squares 4900 next so this is for circle 0.15 you can see area of circle and then our parallelogram b67 item a t33 when this program here different type of parameter here number of parameter varies and then let us have one more also here see here it is here it is inked and double your double and in so however the arrangement of the argument differs so there one so let us how mm hypothesis so this is fine I hope that you learnt function overloading very clearly but you may ask one question that what is the use of function overloading and you can say instead of giving same name we can give different names and can be performed isn't it function overloading is useful when we do not like to remember so many names if names of the functions are all same then we do not require to remember many function names and according to arguments passed it will run hence function overloading is one of the most powerful and useful features of objectoriented programming which implements polymorphism which is a oops concept I hope this video might have been very helpful to you all for understanding function overloading in very simple manner please subscribe and like if this video helped
