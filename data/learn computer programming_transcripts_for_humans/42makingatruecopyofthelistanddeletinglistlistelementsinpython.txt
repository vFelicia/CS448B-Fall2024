With timestamps:

00:00 - [Music]
00:08 - foreign
00:15 - welcome back in this class we are going
00:18 - to see copying and deleting list in
00:22 - Python
00:23 - usually we used to copy a variable using
00:27 - another variable with assignment
00:29 - operator but using assignment operator
00:32 - with new variable in list does not make
00:36 - a copy
00:38 - for example if I have a list like if is
00:42 - equal to 246
00:43 - if I want to make another copy of this
00:48 - with a new variable called num1
00:50 - num1 equal to U will not make a copy of
00:53 - view
00:55 - instead here num1 becomes another
00:58 - variable name for the same address of
01:02 - the list
01:03 - let us little more be clear with the
01:06 - diagram
01:07 - is equal to 246 if you see the ID of
01:11 - this
01:12 - it may be showing some idea on your
01:15 - computer right now if I give num1 is
01:18 - equal to U
01:20 - then both the IDS are for the same list
01:25 - it is not two different list then ID
01:28 - also is the same
01:31 - if you want to change the list having
01:33 - give as the name
01:35 - when you see num1 that also get changed
01:38 - that means it is one single list
01:40 - this is called shallow copy
01:43 - then how do we make the exact copy of
01:45 - list
01:48 - so let me again take the same
01:50 - example it has the ID as said before
01:55 - now if I want to copy I will be giving
01:59 - Eve dot copy of
02:03 - that I will put it in a new variable
02:05 - that means I can write
02:09 - num 2 equal to U dot copy of
02:14 - this will make a true copy of the list
02:17 - so if you see that num2 is another list
02:21 - having different ID now
02:23 - so now num2 is
02:26 - a true copy of Eve let me create a new
02:30 - list called num
02:33 - I'm just giving one two three four five
02:37 - n is equal to
02:40 - num let me check the ID of num
02:46 - also ID of n
02:50 - so both are same
02:53 - I am trying to change n so let me append
02:56 - n Dot
02:59 - print off
03:00 - I give 70 there
03:05 - now if I see n
03:07 - I didn't make any change to number right
03:11 - let me check what is num
03:15 - so you can see there
03:17 - change in Num also
03:19 - it is clear for us assignment operator
03:22 - creates one more variable name for the
03:24 - same list
03:26 - so let us use now copy of
03:30 - I am giving N1 is equal to
03:35 - num Dot
03:37 - copier
03:38 - see now N1 is a new list here let me
03:43 - check ID of N1 now
03:47 - it is different
03:50 - let me also change this
03:54 - N1 Dot
03:57 - up and off
03:59 - I am having a list inside list so just
04:02 - like you
04:03 - twenty Thirty nested list I make it
04:08 - so now if I see N1
04:10 - it is changed if I see num
04:14 - it Still Remains as it is so from this
04:17 - we are very clear that
04:20 - dot copy of only makes a true copy of
04:23 - the list given
04:26 - now let us learn Del
04:28 - is a keyword in Python
04:31 - we can make use of Del in different ways
04:36 - Del will delete a single element from a
04:39 - list
04:41 - Del will also help us to delete multiple
04:46 - Elements which is in a Range
04:48 - Del will also delete a list
04:52 - let us see the Syntax for these
04:56 - to delete a single element we will give
04:59 - Del space list and then the index number
05:04 - in the square bracket
05:07 - so that particular index numbers valued
05:10 - it removed
05:12 - if we want to delete multiple elements
05:14 - we can also give the range instead of
05:18 - single index
05:19 - Del space list of index range we give
05:24 - if we want to remove the complete list
05:27 - itself we can give Del space name of the
05:31 - list
05:33 - for example
05:35 - if CH is the list if I want to remove
05:39 - one element Del space CH of 5. so 5 will
05:45 - be F right that gets removed so if we
05:48 - see what is CH now it will be this one
05:54 - so let us take this list for the next
05:58 - operation
06:01 - if I want to delete a range of elements
06:05 - then I can give Del CH of 4 is to 8 so
06:10 - that means
06:12 - we know the slicing according to the
06:14 - slicing it will be
06:16 - removing the elements that means
06:20 - Fifth Element having index number S4
06:23 - that is e
06:26 - G
06:27 - h i
06:30 - so 4 5 6 7 8 is not introduced that
06:36 - means J will not be included it will be
06:38 - there so a b c d j will be the new list
06:42 - after performing this
06:46 - so next one if you want to delete the
06:49 - list itself we can give Del space CH if
06:52 - we try to check what is ch
06:55 - it will say it is not identified
06:58 - so that is CH is no longer available
07:03 - let us execute all these
07:06 - on the python ideally with different
07:08 - examples
07:09 - I'm just giving the same list which was
07:12 - in the example Dell space c h r
07:16 - I give six
07:18 - so that is g get removed ch
07:23 - I got removed
07:25 - now let me give some range here
07:27 - Del CH of
07:30 - 3 is to 7. so 3 4 5 6 so 4 elements get
07:37 - removed from the list let me check
07:42 - now let me have num is equal to
07:47 - one two three four five six seven eight
07:50 - nine
07:51 - then also 10.
07:55 - now
07:56 - till
07:58 - num of
08:00 - see I am giving the first index 0 and
08:03 - the last index is 9 I give 10 so that 9
08:06 - is also included if I do this
08:10 - this will remove all the elements right
08:11 - but I'm not doing this instead of that I
08:14 - am going with the step
08:15 - which is 3 here
08:18 - so now first element get removed
08:22 - 4 is removed 7 is removed and then 10
08:26 - also gets removed
08:28 - let me check now so even this facility
08:32 - is available when we are removing some
08:35 - particular
08:37 - range of sets
08:39 - so as the slicing
08:42 - we can remove the elements now if I want
08:45 - to delete
08:46 - CH it gets removed
08:50 - now let me check it
08:52 - it is not available

Cleaned transcript:

foreign welcome back in this class we are going to see copying and deleting list in Python usually we used to copy a variable using another variable with assignment operator but using assignment operator with new variable in list does not make a copy for example if I have a list like if is equal to 246 if I want to make another copy of this with a new variable called num1 num1 equal to U will not make a copy of view instead here num1 becomes another variable name for the same address of the list let us little more be clear with the diagram is equal to 246 if you see the ID of this it may be showing some idea on your computer right now if I give num1 is equal to U then both the IDS are for the same list it is not two different list then ID also is the same if you want to change the list having give as the name when you see num1 that also get changed that means it is one single list this is called shallow copy then how do we make the exact copy of list so let me again take the same example it has the ID as said before now if I want to copy I will be giving Eve dot copy of that I will put it in a new variable that means I can write num 2 equal to U dot copy of this will make a true copy of the list so if you see that num2 is another list having different ID now so now num2 is a true copy of Eve let me create a new list called num I'm just giving one two three four five n is equal to num let me check the ID of num also ID of n so both are same I am trying to change n so let me append n Dot print off I give 70 there now if I see n I didn't make any change to number right let me check what is num so you can see there change in Num also it is clear for us assignment operator creates one more variable name for the same list so let us use now copy of I am giving N1 is equal to num Dot copier see now N1 is a new list here let me check ID of N1 now it is different let me also change this N1 Dot up and off I am having a list inside list so just like you twenty Thirty nested list I make it so now if I see N1 it is changed if I see num it Still Remains as it is so from this we are very clear that dot copy of only makes a true copy of the list given now let us learn Del is a keyword in Python we can make use of Del in different ways Del will delete a single element from a list Del will also help us to delete multiple Elements which is in a Range Del will also delete a list let us see the Syntax for these to delete a single element we will give Del space list and then the index number in the square bracket so that particular index numbers valued it removed if we want to delete multiple elements we can also give the range instead of single index Del space list of index range we give if we want to remove the complete list itself we can give Del space name of the list for example if CH is the list if I want to remove one element Del space CH of 5. so 5 will be F right that gets removed so if we see what is CH now it will be this one so let us take this list for the next operation if I want to delete a range of elements then I can give Del CH of 4 is to 8 so that means we know the slicing according to the slicing it will be removing the elements that means Fifth Element having index number S4 that is e G h i so 4 5 6 7 8 is not introduced that means J will not be included it will be there so a b c d j will be the new list after performing this so next one if you want to delete the list itself we can give Del space CH if we try to check what is ch it will say it is not identified so that is CH is no longer available let us execute all these on the python ideally with different examples I'm just giving the same list which was in the example Dell space c h r I give six so that is g get removed ch I got removed now let me give some range here Del CH of 3 is to 7. so 3 4 5 6 so 4 elements get removed from the list let me check now let me have num is equal to one two three four five six seven eight nine then also 10. now till num of see I am giving the first index 0 and the last index is 9 I give 10 so that 9 is also included if I do this this will remove all the elements right but I'm not doing this instead of that I am going with the step which is 3 here so now first element get removed 4 is removed 7 is removed and then 10 also gets removed let me check now so even this facility is available when we are removing some particular range of sets so as the slicing we can remove the elements now if I want to delete CH it gets removed now let me check it it is not available
