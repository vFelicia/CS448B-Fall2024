00:00 - welcome to another video in which we are
00:02 - going to write Python program for string
00:04 - slicing examples so Guys these are the
00:06 - four examples that we are going to see
00:08 - in the vs code using the Python program
00:11 - as far as string slicing are concerned
00:13 - so basically the first thing is we are
00:15 - going to print the first five characters
00:17 - for a given string so let us move to the
00:19 - vs code over here the very first thing
00:21 - is we will be defining the string
00:23 - variable that is str1 it is equal to let
00:26 - us say we have this string that is
00:28 - programming for beginners that is the
00:31 - name of this YouTube channel which you
00:32 - should definitely subscribe if you have
00:34 - not done so and then guys the very first
00:36 - task is to print the first five
00:38 - characters for the string so over here
00:41 - the first five characters are p r o j
00:44 - and then R so basically how we can print
00:47 - this first five characters so we can
00:49 - simply use the string slicing inside the
00:52 - print statement so over here we will say
00:54 - print and then how do we use the spring
00:56 - slicing we simply use the string
00:58 - variable that is str1 over here followed
01:01 - by open and close square brackets so
01:03 - guys similar to how we access the list
01:05 - content or the array content in the
01:07 - other programming languages as well by
01:09 - providing some indices inside the square
01:12 - brackets similarly we can provide some
01:14 - numbers inside the square brackets in
01:16 - order to extract the entire or some of
01:19 - the characters in between the entire
01:21 - string so since we want to extract the
01:24 - first five characters over here the
01:26 - starting index is 0 and Then followed by
01:28 - colon and then we have to provide a 5
01:31 - that is the end index over here and then
01:33 - we have another colon and then there is
01:35 - a step index which is one by default so
01:38 - I am just going to Simply provide one
01:40 - over here so guys basically this start
01:42 - index that is 0 it is there by default
01:45 - and then we can provide the end index
01:47 - and then this is the step index over
01:49 - here let me just save this file now and
01:51 - try running this code so as you can see
01:53 - the first five characters that is p r o
01:56 - g r are getting printed over here on the
01:58 - terminal now guys over here we have
02:00 - provided 0 so what if we don't provide 0
02:03 - so by default the start index will be 0
02:06 - in this case and over here the step
02:08 - index as well is 1 by default so if you
02:10 - don't provide this one then also this
02:12 - should work so let me just save this
02:14 - file now and try running this code once
02:16 - again so as you can see p r o g r and
02:19 - then what if we don't provide this colon
02:21 - as well so this should also work since
02:23 - by default one will be considered as the
02:26 - step index so let me just save this file
02:28 - now and try running this code once again
02:30 - so as you can see we are getting the
02:32 - first five characters over here and this
02:34 - is the way that we can print the first
02:36 - five characters or any number of
02:38 - characters that you want to print now
02:40 - similarly how can we print the last five
02:42 - characters over here so basically we
02:45 - want to print the last five characters
02:46 - that is double n e r s so guys when you
02:50 - are dealing with string slicing Or List
02:53 - slicing as well always remember that the
02:55 - first index starts from zero and if you
02:57 - want to go to the last index you can
03:00 - mention minus one so basically what will
03:02 - happen when we mention minus 1 the
03:05 - control flow will come over here that is
03:07 - the S character will be accessed for the
03:10 - minus 1 index then the minus 2 index
03:12 - will again go back to the second last
03:14 - character then minus 3 will give you the
03:17 - third last character and so on so
03:19 - basically we want this character that is
03:21 - n so this is minus 1 minus 2 minus 3
03:25 - minus 4 minus 5 in this case so
03:28 - basically we can provide the minus 5 as
03:31 - the start index and the end index since
03:34 - we want to go up to the end we need not
03:36 - have to provide anything so I'll just
03:38 - remove this part and then step index
03:40 - will be 1 by default so let me just save
03:42 - this file now and try running this code
03:44 - so as you can see we are getting double
03:46 - n ERS and that is how we can get the
03:49 - last five characters over here what if I
03:51 - want to get the last 10 characters so
03:54 - instead of minus 5 we can provide minus
03:56 - 10 in this case let me just save this
03:58 - file now and try running this code so as
04:01 - you can see we are getting the last 10
04:02 - characters from the entire string guys
04:05 - remember that this is the start index
04:07 - for which we have provided the minus
04:09 - index in this case followed by colon and
04:12 - then after this colon we need to provide
04:14 - the end index over here and that is how
04:16 - the format of this string slicing Works
04:19 - inside the square brackets so guys let
04:21 - us move to another task how do we
04:22 - reverse the string so basically as I
04:25 - have told you the first index is the
04:26 - start index the second index is the end
04:28 - index so basically we can provide one
04:30 - two and then by default the step will be
04:33 - 1 over here so basically what this will
04:35 - do is it will start from the first index
04:38 - and it will go up to the second index
04:40 - over here so let me just save this file
04:42 - now and try running this code so R is
04:45 - printed over here that's because the
04:47 - second index is not included so always
04:49 - remember that whenever we provide the
04:51 - end index over here that number will not
04:53 - be included but the one that is previous
04:55 - to that number will be included and that
04:57 - is how we have got R over here and not
05:00 - getting o now if we provide 3 in this
05:02 - case then over here we should get R and
05:05 - O that's because they are at the
05:07 - positions one and two so let me just
05:09 - save this file now and try running this
05:11 - code so as you can see we are getting R
05:13 - and O now guys the third task is to
05:15 - reverse the string so what we have to do
05:17 - is we have to consider the entire string
05:19 - so I'll remove the start index from here
05:21 - and the end index from here now guys
05:24 - there is a very simple trick in order to
05:26 - reverse the entire string now before
05:27 - showing the trick I'll just show you
05:29 - what will be the result of this
05:31 - particular expression over here so let
05:33 - me just run this code once again so we
05:35 - are getting the entire string in this
05:37 - case now guys in order to reverse this
05:39 - entire string what we have to do is we
05:42 - simply have to provide the step index
05:44 - the value of -1 so instead of 1 which is
05:47 - the default value we simply provide
05:49 - minus 1 over here and we don't provide
05:52 - any start and N index in this case so
05:54 - basically the control flow will start
05:56 - from the end and it will start printing
05:58 - all these characters one at a time in
06:01 - the reverse order so let me just save
06:03 - this file now and try running this code
06:04 - once again so as you can see in the
06:06 - reverse order we are getting all the
06:08 - characters and then if you read from the
06:11 - right to the left then you will get the
06:13 - correct characters in this sequence that
06:15 - were assigned to this str1 variable so
06:18 - guys this is a very simple trick in
06:20 - order to reverse the string or in order
06:22 - to reverse the list as well now guys let
06:24 - us move to another task how do we print
06:26 - the characters at the even positions so
06:29 - what we have to do is we need to start
06:31 - from 0 over here so we say start index
06:34 - as 0 and we go up to the end now guys
06:37 - the default step index is 1 as I have
06:39 - already told you which will print all
06:41 - the characters one at a time but since
06:43 - we want only the even characters that is
06:46 - the character at the zeroth index then
06:48 - at the second index then at the fourth
06:51 - index so we have to provide the value of
06:53 - Step index S2 over here so basically
06:56 - this R and then we have G and then all
06:59 - the characters vectors at the odd index
07:01 - positions will be ignored over here and
07:04 - only the even position characters will
07:06 - be considered in order to be displayed
07:08 - on the terminal so let me just save this
07:10 - file now and try running this code once
07:12 - again so as you can see we are getting p
07:14 - and then we have O So this R character
07:17 - is not considered in this case next we
07:19 - have R so over here G was not considered
07:22 - and a was not considered then we have M
07:24 - and then again M was not considered and
07:27 - I was printed and then n was not
07:29 - considered G was printed and so on the
07:32 - characters at the odd index positions
07:34 - were not considered so guys this is the
07:36 - way that we can print only the
07:37 - characters at the even index position so
07:40 - please make sure that you practice on
07:41 - your own so that on different inputs you
07:43 - get different outputs make sure that you
07:45 - like this video so that it reaches to
07:47 - more people and subscribe to the channel
07:49 - so that you get the notifications on
07:51 - upcoming videos as well I'll see you in
07:52 - the next video till then you can watch
07:54 - my other videos in the playlist the link
07:57 - I have given in the description section
07:58 - below