00:00 - welcome to another video series in which
00:02 - we are going to learn about CSS tutorial
00:05 - for beginners so guys we are going to
00:07 - learn a lot about the CSS which we use
00:09 - along with the HTML documents and it is
00:12 - very important if you want to become a
00:14 - front-end developer so guys by the end
00:16 - of this video series you will go from
00:18 - the zeroth level to the advanced level
00:21 - of the CSS Concepts that you should know
00:24 - as far as front end development is
00:26 - concerned so the very first part is
00:28 - Introduction and overview of CSS so guys
00:31 - basically CSS is the language we use to
00:33 - style the HTML document so I've already
00:36 - created a separate video series
00:39 - regarding the HTML and how you can use
00:41 - HTML in order to make the web pages so
00:44 - you can watch that video series as well
00:47 - the link to which I have given in the
00:48 - description section below so guys it is
00:50 - very important that before learning CSS
00:53 - you should know at least the basics of
00:54 - the HTML and how the HTML tags work now
00:58 - CSS full form is cascading stylesheets
01:00 - and you can Define the CSS document
01:03 - externally or internal style is also
01:05 - allowed to be defined inside the HTML
01:08 - document or you can also Define the
01:10 - inline CSS properties as well so
01:13 - basically it describes how HTML elements
01:16 - should be displayed in a web page so
01:18 - guys so far in the HTML video playlist
01:21 - we have seen that how we can create the
01:24 - HTML elements but how they should be
01:26 - displayed on the web page along with
01:28 - some color or a different font family or
01:30 - the font size we can describe it by
01:33 - using the CSS property so CSS saves a
01:36 - lot of work it can control the layout of
01:38 - multiple Pages all at once so we are
01:41 - going to check this with the help of
01:42 - examples as well now there are three
01:44 - locations to write CSS code basically
01:47 - the inline CSS which we write inside the
01:50 - HTML tag and then we have something
01:52 - called as internal CSS which we Define
01:54 - inside the head element of the HTML
01:57 - document and then we have something
01:59 - called as external CSS which is a
02:01 - separate CSS file that we use in order
02:05 - to separate the HTML code from the CSS
02:07 - code now guys what is the CSS syntax so
02:10 - basically a CSS rule consist of a
02:13 - selector and a declaration block so as
02:15 - you can see this is the example we have
02:17 - the H1 tag so basically this is called a
02:20 - selector by which we are identifying
02:22 - which tag needs to be provided a
02:24 - particular CSS property and then we have
02:27 - the open curly braces and then this is
02:30 - called declaration so this block of code
02:33 - is called declaration over here which is
02:35 - followed by the selector so inside the
02:37 - curly braces we write different CSS
02:40 - properties so as you can see this is the
02:42 - example that is color followed by colon
02:44 - and then we have the color value that is
02:46 - blue so basically this is going to set
02:49 - the font color of the H1 text that we
02:52 - have set inside the HTML document that
02:55 - will be present inside the body tag and
02:58 - then apart from this we also have font
03:00 - size that is set to 22 pixels in this
03:02 - case so guys basically these are the two
03:04 - CSS properties that will be applied to
03:07 - the H1 element that is present inside
03:09 - the web page apart from this we also
03:12 - have another selector that is p so guys
03:14 - after this block of code over here in
03:16 - case we want to mention the CSS property
03:19 - for some another tag so in this case we
03:21 - have the P tag that is the paragraph tag
03:24 - we want the background color of this
03:26 - paragraph tag to be yellow so all the
03:28 - paragraph tags inside the web page will
03:31 - have the background color as yellow that
03:33 - will be set and will be displayed to the
03:35 - user so guys let us check this with the
03:37 - help of examples as well in vs code so
03:40 - basically over here I have included the
03:42 - CSS folder inside which we have the CSS
03:45 - tutorial. txt file which is having this
03:48 - particular content that I'm explaining
03:50 - you and apart from this we have also
03:52 - included a sample image over here that
03:54 - we are going to use in the upcoming
03:56 - Concepts as well so guys it becomes very
03:58 - important that you create a folder in a
04:00 - particular directory and include that
04:02 - directory inside the vs code so that all
04:05 - your files are organized over here now
04:08 - guys what we are going to do is we will
04:09 - be creating a new HTML document so we
04:12 - will click on this new file icon over
04:14 - here and then simply we will name it as
04:17 - index.html so guys basically this is
04:20 - going to be the HTML document that we
04:22 - are going to work with now guys we are
04:24 - going to include the HTML 5 code so over
04:26 - here simply we have to write HTML
04:29 - followed by colon and then as you can
04:31 - see this is the Mt abbreviation HTML
04:33 - colon 5 and when we click on this the
04:36 - default template that we can use is
04:38 - generated for us inside the vs code and
04:41 - guys this is one of the important
04:43 - functionalities that makes VSS code very
04:45 - attractive as far as writing HTML or any
04:49 - other code is concerned so basically it
04:51 - provides us with the HTML starting and
04:53 - the ending tag over here inside which we
04:56 - have the head tags as well apart from
04:58 - this inside the head tag we have the
05:00 - default text that is meta tag over here
05:03 - and the title of the document so this is
05:05 - basically the text that will be
05:07 - displayed on the browser tab so guys
05:09 - over here we are going to say CSS
05:11 - tutorial in this case and apart from
05:14 - this inside the body we are going to
05:16 - include just one element that is H1
05:19 - which is a header element inside HTML so
05:22 - guys if you are not aware about the HTML
05:24 - elements I would recommend you to go
05:26 - through my other tutorial playlist
05:28 - related to the HT HML tutorial videos
05:31 - the link to which I have given in the
05:32 - description section below so over here
05:34 - we will say this is heading one so guys
05:39 - basically this is the text that will be
05:40 - displayed inside the web page when we
05:43 - are going to open this particular web
05:44 - page so let me just save this file now
05:47 - and try opening this page on the browser
05:49 - so I'll right click over here on the
05:51 - index.html and copy the path from this
05:54 - particular option so I have copied it
05:57 - and simply we are going to open the
05:58 - browser you can open the browser of your
06:00 - choice I working with the Google Chrome
06:03 - browser over here and we are going to
06:04 - paste this link so over here after
06:07 - pasting the link to that particular HTML
06:09 - document we are going to press enter so
06:12 - as you can see I'll zoom in a little bit
06:14 - so that it is properly visible to you
06:16 - guys so this is heading one is getting
06:18 - displayed over here and this is the text
06:20 - that we have written inside this HTML
06:23 - document now guys let us say in this
06:25 - example we want to change the color to
06:27 - blue color in this case so what we can
06:29 - can do is inside this head element of
06:32 - the HTML document and after this title
06:34 - tag we have something called a style tag
06:37 - over here so guys as you can see this is
06:38 - the Mt abbreviation that we can use so
06:41 - basically it will help us in order to
06:43 - generate the starting and the ending
06:45 - tags over here so inside the style tag
06:48 - simply we can provide the tag name so in
06:50 - this case we want H1 for which the text
06:53 - should be of the color blue in this case
06:56 - so we will say H1 over here so this is
06:58 - the selector which is part of the format
07:01 - when we are defining the CSS property
07:03 - and Then followed by open and close
07:05 - curly braces over here now guys inside
07:07 - the curly braces we can Define our CSS
07:10 - properties so one of the property is
07:12 - color over here which is the font color
07:15 - so simply when we type color as you can
07:17 - see vs code is suggesting us various
07:19 - options in order to use the CSS
07:22 - properties so in this case we are going
07:24 - to use this color property and then
07:27 - simply we are going to provide the value
07:29 - that is blue so we are going to select
07:31 - this blue option so let me just save
07:33 - this file now so when we reload this
07:36 - page basically all the H1 tags that are
07:39 - present inside the body tag over here
07:41 - should be having the font color as blue
07:44 - so when we reload this page once again
07:45 - on the browser so as you can see the
07:47 - color has been updated to blue color in
07:50 - this case and this is how the CSS
07:52 - property Works guys apart from this let
07:54 - us say if we want to change the
07:55 - background color of this entire page
07:58 - then we can do so by applying the
08:00 - background color property to the body
08:02 - tag so guys basically this entire
08:05 - section that is the white color on the
08:07 - web page is the body section over here
08:10 - inside which we have the different HTML
08:12 - elements so let us say we provide the
08:15 - body tag over here inside the style tag
08:18 - and then after this we have open and
08:20 - close curly braces and then we apply
08:22 - something called as background color
08:24 - over here so we have background hyphen
08:27 - color in this case and then followed by
08:30 - colon and then let's say we have the
08:32 - color that is yellow to be applied to
08:34 - the background so let me just save this
08:36 - file now and try reloading this page
08:38 - once again on the browser so as you can
08:40 - see the entire background of the web
08:42 - page has been updated to yellow color
08:45 - and guys this is the way that you can
08:47 - use a CSS in order to display the
08:50 - various elements of the HTML document in
08:53 - the way you want based on your
08:54 - requirements we can also set the font
08:57 - size of a particular tag to a particular
08:59 - value based on your requirements so this
09:01 - font size property I'll leave up to you
09:03 - as a homework for you so now we will see
09:06 - inline versus internal versus external
09:09 - CSS so guys basically the CSS properties
09:12 - that are read last will be applied to
09:15 - the HTML elements so the full form of
09:18 - CSS is cascading stylesheet so basically
09:21 - whatever properties are being mentioned
09:23 - in the end will be applied to that
09:26 - particular HTML element and this we are
09:29 - going to to see with the help of
09:30 - examples as well and mostly in big
09:32 - projects we should use the external CSS
09:35 - to keep the HTML and CSS codes separate
09:38 - so guys basically it is a best practice
09:40 - in order to keep the HTML and CSS code
09:43 - separate by using the external CSS file
09:46 - which will be a separate file that will
09:48 - only Define the list of CSS properties
09:51 - for the different HTML Texs that we have
09:54 - defined in the web pages so guys let us
09:56 - check the difference and the priorities
09:58 - of the inline line internal and the
10:00 - external CSS over here so let us move to
10:03 - the vs code in this case and I'll remove
10:05 - the previous lines of code that is the
10:08 - style tag that we had written previously
10:10 - and then we are going to keep this H1
10:12 - tag that is this is heading one text
10:15 - inside the H1 and then let's say we want
10:18 - to add a paragraph tag over here with
10:20 - the help of the P tag and then simply we
10:22 - will say this is a paragraph So guys
10:26 - over here we have two tags that is H1
10:28 - tag this is heading one and then we have
10:30 - the paragraph tag that is this is a
10:32 - paragraph text is being displayed inside
10:35 - this tag let me just save this file now
10:37 - and try reloading this page once again
10:39 - on the browser so as you can see we have
10:41 - the heading one H1 and then we have the
10:43 - paragraph now guys let us say we want to
10:46 - apply some color to this particular
10:48 - paragraph so let's say if we want to
10:50 - apply the red color to this paragraph
10:53 - tag now guys there are three ways in
10:55 - which we can Define the CSS properties
10:57 - and first of all we are going to see how
10:59 - we can do it using the inline method now
11:02 - what do we mean by inline CSS so
11:04 - basically we can also Define the CSS
11:07 - properties inside the starting tag over
11:10 - here in this case we want to apply the
11:12 - red color to this paragraph so we can
11:15 - apply the CSS property inside this
11:18 - starting tag that is the P tag so after
11:21 - this P character we can have the space
11:23 - character over here and simply we can
11:25 - provide the style attribute so as you
11:27 - can see this is the suggestion that is
11:29 - being provided by the vs code and then
11:31 - after this we have equal to operator
11:33 - followed by double codes and then guys
11:36 - inside the double codes we have to
11:38 - provide the CSS property that we want to
11:40 - apply to this particular tag so in this
11:43 - case we want to update the color to Red
11:46 - so over here inside the double codes we
11:48 - will say color followed by colon and
11:51 - then we can provide the name of the
11:53 - color so in this case it is red and then
11:55 - after this simply we can provide
11:57 - semicolon now similarly like how we have
11:59 - applied color property we can apply more
12:02 - properties over here on the same line
12:04 - separated with the help of the semicolon
12:07 - that we have provided now guys let me
12:09 - just save this file now and try
12:10 - reloading this page once again on the
12:12 - browser so as you can see this is a
12:14 - paragraph text is being displayed with
12:16 - the red color now and guys in this way
12:19 - the inline CSS property works that is we
12:22 - can provide the CSS property inside the
12:25 - starting tag of the HTML element for
12:28 - which we want to apply the CSS property
12:30 - based on our requirements now guys what
12:32 - is the meaning of the internal CSS so
12:34 - over here the second type of CSS is the
12:37 - internal CSS in this case so previously
12:40 - we had seen inside the head tag we can
12:42 - Define the style tag as well so the
12:45 - style tag that we Define inside the head
12:47 - tag after the title tag over here is
12:50 - called internal CSS so the CSS that we
12:53 - Define in this way that is present
12:55 - inside the head tag is called the
12:57 - internal CSS that's because it is
12:59 - present inside this particular HTML
13:02 - document itself so guys over here let's
13:05 - say we provide the selector that is p in
13:07 - this case so we want to apply the font
13:09 - color to the paragraph tag over here and
13:12 - after the selector we provide the open
13:14 - and close curly braces and inside this
13:17 - we are going to provide the property
13:19 - that is color so after this property we
13:21 - need to provide the value of the color
13:23 - so in this case after colon we provide
13:26 - the value so let's say we provide the
13:28 - value as blue color in this case so guys
13:31 - basically for the internal CSS we are
13:33 - applying the color blue for the P tag so
13:36 - that the text that is present in all the
13:39 - paragraph tags will be displayed with
13:40 - the blue color so guys let me just save
13:43 - this file now and let us see whether
13:44 - this color that is blue will be applied
13:47 - to the text color of the paragraph or
13:49 - not so let me just reload this page once
13:51 - again on the browser so as you can see
13:54 - still we are able to see the red color
13:56 - for this paragraph text why so that's
13:58 - because because we have also provided
14:00 - the inline CSS over here and guys always
14:03 - remember the inline CSS property that we
14:06 - have provided to any of the HTML
14:09 - document will be given the highest
14:11 - priority compared to the internal CSS
14:14 - and the external CSS that we are going
14:16 - to see so in case you are making any
14:18 - changes in the internal CSS or the
14:21 - external CSS and those changes are not
14:24 - getting reflected to the element which
14:26 - you are expecting to change then please
14:29 - check if that particular element is
14:30 - having any inline CSS property that is
14:33 - being defined over here now guys if we
14:35 - simply remove this style attribute from
14:38 - this paragraph tag that is the inline
14:40 - CSS so over here we have removed the
14:43 - inline CSS let me just save this file
14:45 - now so now if we reload the page once
14:48 - again then this particular color that is
14:50 - blue should be displayed as the font
14:52 - color for the paragraph so let me just
14:54 - reload this page once again so before
14:56 - reloading it is red color over here and
14:58 - when we reload this page as you can see
15:01 - now the paragraph text is having the
15:03 - blue color that is being applied with
15:05 - the help of this internal CSS in this
15:07 - case so guys this is the way that we can
15:09 - Define the internal CSS as well for a
15:12 - particular HTML document now guys the
15:14 - other way in order to define the CSS is
15:17 - external CSS and this is the common way
15:19 - in which we provide the CSS properties
15:22 - so what we can do is simply over here
15:24 - inside the head tag we provide the link
15:27 - tag over here so guys in this case link
15:29 - followed by colon and then we have
15:31 - something called a CSS so as you can see
15:34 - this is the Mt abbreviation that is
15:36 - provided by the vs code we click on this
15:39 - particular option and then you can see
15:41 - that the relation that is R attribute it
15:44 - is being defined as stylesheet and hrf
15:46 - attribute is having the name of the CSS
15:49 - file that is style. CSS so guys we can
15:52 - provide any name over here but the
15:54 - extension should be do CSS in this case
15:57 - in order to have the Cs property being
16:00 - defined in the external file so guys
16:02 - over here we are going to create another
16:04 - file for which we will name that file as
16:07 - style. CSS that is provided over here to
16:09 - the hrf property so we add new file in
16:12 - this case and simply we provide style.
16:15 - CSS over here and press on enter so as
16:19 - you can see this is a new file that is
16:20 - created style. CSS and over here we can
16:24 - simply provide the CSS properties to be
16:26 - applied to different elements of of the
16:29 - HTML so let's say to the same paragraph
16:32 - We want to set the color to some other
16:34 - value so over here let's say we come to
16:37 - the style. CSS we provide the P that is
16:40 - the paragraph tag which is the selector
16:42 - and inside the open and close curly
16:44 - braces we provide the color property
16:47 - over here and then followed by colon and
16:49 - let's say we want to change the color to
16:51 - Green in this case so guys basically we
16:53 - want this green color to be set as the
16:55 - font color for the paragraph tag so let
16:58 - me just save this file now always
17:00 - remember to save this file that is
17:02 - style. CSS and the HTML file as well so
17:05 - both the files should be saved in order
17:08 - to see the latest changes that are being
17:10 - made in both the files so let me save
17:12 - this file as well and after saving this
17:14 - file let me just reload this page once
17:16 - again on the browser so as you can see
17:18 - the font color for this paragraph has
17:20 - been changed to Green in this case so in
17:23 - this way we are able to use the external
17:25 - CSS as well in order to apply the
17:27 - various CSS properties to the HTML
17:30 - elements now guys what is the priority
17:32 - between the internal and external CSS we
17:35 - have already seen that the highest
17:37 - priority is given to the inline CSS
17:39 - property that we had already defined
17:41 - which we have removed now but apart from
17:44 - this we also have both the types of CSS
17:46 - being defined over here we have the
17:48 - style tag inside the head document which
17:50 - is the internal CSS and we also have the
17:53 - link tag that is linking to the external
17:56 - CSS file over here and in this case it
17:58 - it is giving the priority to the
18:00 - external CSS file that's because we are
18:03 - able to see the color as green now guys
18:05 - since we have provided this particular
18:07 - link tag after the style tag that is the
18:10 - reason the green color is getting more
18:13 - priority compared to the blue color
18:15 - which we had defined inside the internal
18:17 - CSS so guys what we can do in order to
18:20 - give more priority to the internal CSS
18:23 - over here so first we need to define the
18:25 - link so we can simply remove the link
18:27 - tag from here that is after the style
18:30 - tag and we can provide the link tag
18:32 - before these style tags over here so
18:34 - before the style tag simply I'm going to
18:37 - provide the link tag in this case so
18:39 - what exactly is happening over here the
18:41 - control flow is first checking this
18:43 - particular link tag and it sees that
18:45 - there is an external CSS file in this
18:48 - case so it applies this particular green
18:50 - color but then it also sees later on
18:53 - that there is a internal styling that is
18:55 - also provided and in this case the color
18:57 - blue is applied so the latest color that
19:00 - is applied over here is from the
19:02 - internal style that is the color blue
19:04 - and that color will be applied to the
19:06 - paragraph tag over here so let me just
19:08 - save this file now and try reloading
19:10 - this page once again on the browser if
19:12 - you notice the current color is green
19:14 - which is from the external CSS file but
19:17 - since we have changed the position of
19:19 - the external CSS file now this
19:22 - particular color should be applied so
19:24 - when we reload this page as you can see
19:26 - blue color is getting applied to the
19:28 - paragraph text over here so Guys these
19:30 - are the different ways in which you can
19:32 - provide the CSS properties inside the
19:34 - HTML document the most common way is to
19:36 - use the external CSS that we have just
19:39 - seen in order to separate the code that
19:41 - is the CSS code and the HTML code so now
19:45 - we are going to see the different types
19:47 - of CSS selectors so guys basically below
19:50 - are some of the CSS selectors that we
19:52 - can use now CSS selectors are nothing
19:55 - but how do we identify that for which
19:58 - element the CSS properties are to be
20:00 - applied so basically the CSS selectors
20:03 - helps us in order to identify a
20:06 - particular HTML element to which the CSS
20:09 - properties will be applied now the first
20:11 - way is to use the CSS element selector
20:14 - so in this case simply we are going to
20:16 - mention the HTML tag to which the CSS
20:20 - properties needs to be applied so let us
20:22 - move to the vs code over here and I'll
20:24 - simply remove the internal styling that
20:26 - we had applied previously and we have a
20:29 - link tag that is linking us to the
20:31 - style. CSS external file over here where
20:35 - we are going to provide the CSS
20:37 - properties so guys we have two tags in
20:39 - this case the first is the H1 tag and
20:41 - the next is the P tag that is the
20:43 - paragraph tag over here so we are going
20:45 - to switch to the style. CSS file as well
20:48 - so we'll remove the previous lines of
20:50 - code over here and simply we are going
20:52 - to apply certain styling with the help
20:54 - of the CSS element selector so guys
20:57 - let's say we want to apply some color to
21:00 - this header element in this case so what
21:02 - we are going to do is in the style. CSS
21:04 - external file simply we can provide the
21:07 - tag name that is H1 in this case
21:09 - followed by open and close curly braces
21:12 - and inside these curly braces we can
21:14 - provide some color so let's say if we
21:16 - want to apply this brown color over here
21:18 - so simply we select the value of the
21:21 - color as brown so guys this is the first
21:23 - way that is by using the CSS element
21:26 - selector which is just the name of the
21:28 - HTML tag to which the CSS properties
21:31 - needs to be applied let me just save
21:33 - both these files now and try reloading
21:36 - this page once again on the browser so
21:38 - as you can see the color of this header
21:40 - element that is this is heading one is
21:42 - updated to brown color in this case so
21:45 - this is one of the simplest ways in
21:46 - order to provide the CSS Properties by
21:49 - using the CSS element selector now let
21:52 - us move to another type that is CSS ID
21:54 - selector so guys in case if you have
21:57 - certain ID to the HTML document then we
22:00 - can use that ID in order to provide the
22:03 - CSS property so let us check that as
22:06 - well so in case we want to apply certain
22:08 - property to this particular paragraph
22:11 - over here so what we can do is simply we
22:13 - can provide the ID to this paragraph so
22:16 - I'm going to provide the ID and Then
22:18 - followed by equal to operator and then
22:21 - after that we have the double Cod over
22:23 - here so guys let's say provide the ID
22:25 - par in this case let me just save this
22:27 - file now and and we can use this ID in
22:30 - order to identify this particular
22:32 - paragraph so I'm going to copy this ID
22:35 - and inside the style. CSS we are going
22:37 - to provide this ID as the selector now
22:40 - guys when we are going to provide the ID
22:43 - as the selector we need to start with
22:45 - the hash character so this is the hash
22:48 - character that we should have a prefix
22:50 - before providing the ID for the HTML
22:52 - element and simply we are going to have
22:54 - the ID that is par 1 so basically par 1
22:57 - is the ID and the prefix that we need to
23:00 - apply is the hash character over here
23:02 - when we use any of the ID values in
23:05 - order to provide the CSS property so
23:08 - after this selector we are going to
23:10 - provide the open and close early phes
23:12 - and then we can provide our CSS
23:14 - properties so let's say we want the
23:16 - background color for this paragraph to
23:18 - be yellow so we provide the background
23:21 - color property and we set the color is
23:23 - yellow in this case let me just save
23:25 - both the files over here and try
23:27 - reloading this page once again on the
23:28 - browser so as you can see for this
23:30 - paragraph the background color is set to
23:33 - yellow and this is the way that we can
23:35 - use CSS ID selector in order to apply
23:39 - the CSS properties now guys we can also
23:41 - use the class selector as well in which
23:43 - case we need to have the class for a
23:46 - particular HTML element so let us say we
23:48 - have another HTML element over here
23:50 - inside our web page and we will have the
23:53 - div element in this case with the class
23:56 - attribute as class one over here so guys
23:59 - basically we have the class attribute
24:01 - which is having the value as class one
24:03 - and inside this div basically we are
24:05 - going to have this is a div element so
24:08 - this content we are providing inside the
24:11 - div element over here let me just save
24:12 - this file now Ander try reloading this
24:15 - page once again on the browser so as you
24:17 - can see this is a Dev element is getting
24:19 - displayed over here right now now guys
24:21 - let us say we want to apply certain font
24:24 - size to this particular text inside the
24:26 - dev element so how we can do that by
24:29 - using the class attribute so as you can
24:31 - see we have the class attribute which is
24:33 - having the value that is class one we
24:36 - are going to copy this value that is
24:38 - class one and apply styling by using
24:41 - this particular class value so inside
24:43 - the style. CSS external file we have to
24:46 - come to the next line and the way that
24:49 - we use the class Name Is by using the
24:51 - period that is dot over here so guys
24:54 - basically we need to have the prefix
24:56 - that is Dot and Then followed by the
24:58 - class name in this case so we have dot
25:00 - followed by class one which is the name
25:02 - of the class and then after this we are
25:05 - going to provide our CSS properties
25:07 - inside the open and close curly braces
25:10 - so let's say we provide the font size
25:13 - property over here and we want the font
25:16 - size to be 30 pixels in this case so we
25:18 - provide 30 pixels over here let me just
25:21 - save this file now and try reloading
25:23 - this page once again on the browser
25:25 - before reloading as you can see this is
25:27 - the font size that is the default font
25:30 - size which is 16 pixels by default on
25:32 - this particular browser it depends on
25:34 - your browser which web browser you are
25:36 - working and what is the default font
25:38 - size for that particular browser so when
25:41 - we reload this page as you can see the
25:43 - font size is updated now to 30 pixels
25:45 - and the text is looking little bit
25:47 - larger over here so guys in this way we
25:49 - can also use the CSS class selector in
25:52 - order to provide certain CSS properties
25:55 - in this case now let us move to another
25:57 - CSS Lector and in this case we can also
26:00 - use the CSS class along with the HTML
26:03 - element so guys in the HTML tutorial
26:06 - series we have seen that the same class
26:08 - value can be provided to multiple HTML
26:11 - elements and that is what we are going
26:13 - to do in this case as well so let us say
26:15 - inside the HTML document for this
26:18 - paragraph tag we have the same class
26:20 - value that is class one over here so I'm
26:23 - going to copy this class attribute and
26:25 - paste it inside the starting paragraph
26:27 - tag over here for this is a paragraph
26:30 - text so guys basically we have two
26:32 - elements with the same class name that
26:34 - is a paragraph and the div HTML elements
26:37 - class one is the value for both the
26:39 - classes now guys for both these classes
26:42 - we have a class property that is font
26:44 - size 30 pixels so let me just save this
26:47 - file now that is HTML and the CSS files
26:50 - and reload this page once again on the
26:52 - web browser currently the font size is
26:54 - not updated but when we click on this
26:56 - reload button the font font size that we
26:59 - have applied to the class name will also
27:01 - be applied to the paragraph tag as well
27:04 - since we have provided the class
27:05 - attribute with the same value for this
27:08 - paragraph tag so when we reload this
27:10 - page as you can see the paragraph and
27:13 - the diff both are having the same font
27:15 - size now guys let us say we only want
27:18 - the font size of 30 pixels to be applied
27:21 - to this particular Dev element so what
27:23 - we can do is we can first of all have
27:26 - the element name in this case so so over
27:28 - here we can have the div that is the
27:31 - element name or we can say HTML tag and
27:34 - then after that HTML tag we have not
27:37 - followed by the name of the class as you
27:39 - can see this is the format first of all
27:41 - we provide HTML tag followed by dot that
27:44 - is period and then the name of the class
27:47 - so guys in this way we can specify that
27:49 - to which particular element we want the
27:52 - font size to be applied so let me just
27:54 - save this file now and try reloading
27:56 - this page once again on the browser this
27:59 - time the font size property should only
28:01 - be applied to the div element and the
28:03 - paragraph text should be displayed with
28:05 - the normal font size which is 16 pixels
28:08 - over here so when we reload this page as
28:10 - you can see the font size is normal for
28:13 - the paragraph whereas the font size for
28:15 - the div element is 30 pixels right now
28:18 - and in case if we want the font size to
28:20 - be applied to only the paragraph and not
28:23 - the div element so simply we can provide
28:25 - the P tag in this case instead of there
28:28 - so we provide P followed by Dot and then
28:31 - have class one let me just save this
28:33 - file now and try reloading this page
28:35 - once again on the browser so as you can
28:37 - see the size of the paragraph text is
28:40 - now increased to 30 pixels whereas the
28:42 - text size for the dev element is being
28:44 - displayed with the default text size
28:47 - over here and guys if you want both the
28:49 - elements to have the same font size then
28:51 - simply we don't have to specify any of
28:53 - the tags over here and simply we can
28:55 - provide the class name before which we
28:57 - have a period that is dot as the prefix
29:00 - so let me just save this file now and
29:02 - try reloading this page so as you can
29:04 - see both the HTML elements will be
29:06 - having the same font size and whatever
29:09 - HTML element that we provide inside our
29:11 - HTML document which will be having the
29:14 - class that is class one will have the
29:16 - font size is 30 pixels since we have
29:19 - applied this font size at the class
29:21 - level over here now guys apart from this
29:23 - we have another selector as well as you
29:25 - can see there's a universal selector so
29:27 - BAS basically we can also use the
29:29 - universal selector in order to apply a
29:32 - common styling to all the elements so
29:35 - let us say if we want the font size of
29:38 - all the elements over here inside the
29:40 - HTML documents to be set as 20 pixels so
29:43 - including the header and the paragraph
29:46 - tag and the div tag as well so what we
29:48 - can do is simply we can use the
29:50 - universal selector over here now how do
29:53 - we mention the universal selector it is
29:55 - best practice that we provide the
29:56 - universal selector at the start of the
29:59 - CSS document so over here at the start
30:02 - that is the first line we will be
30:04 - providing the universal selector that is
30:06 - star so guys basically star character is
30:09 - used in order to apply the CSS
30:12 - properties to all the HTML elements that
30:14 - are present inside the
30:16 - index.html so after this we are going to
30:19 - provide the open and close curly braces
30:21 - and let's say we provide the font size
30:24 - property and the value to be 20 pixels
30:27 - over here so let let me just save this
30:28 - file now and try reloading this page
30:30 - once again on the browser so as you can
30:33 - see 20 pixels is getting applied to the
30:35 - header but not to the paragraph and the
30:38 - div element over here guys we can also
30:40 - confirm this by right clicking on this
30:42 - element and going to the inspect option
30:45 - so when we click on this inspect option
30:48 - as you can see if we highlight this
30:50 - header that is this is heading one on
30:52 - the right hand side you can see that H1
30:54 - is having the CSS that is color is equal
30:56 - to Brown and if you scroll down it is
30:59 - also having the property that is the
31:01 - Universal Property over here for which
31:03 - the font size is 20 pixels we can play
31:05 - around over here by checking and
31:08 - unchecking these options as well so when
31:10 - we uncheck this option of color is equal
31:12 - to Brown so when we click on this option
31:15 - as you can see the color is now updated
31:17 - to the default color that is black in
31:19 - this case and when we check this option
31:21 - once again so it is updated to brown
31:24 - color now so guys basically we can play
31:26 - around with these options and see what
31:29 - is the best combination of the CSS
31:31 - properties that we can apply by checking
31:33 - and unchecking the options that are
31:35 - being present over here we can also
31:37 - uncheck this option so when we uncheck
31:39 - this the default font size of the header
31:42 - is being used in this case and when we
31:44 - check this option once again that is the
31:46 - font size is 20 pixels then again the 20
31:49 - pixels font size is applied to this
31:51 - particular header now guys the important
31:53 - question is why the font size is not
31:56 - applied to this paragraph tag and the
31:58 - div element over here so the main reason
32:00 - is basically after applying the font
32:02 - size of 20 pixels to the universal
32:05 - selector we also have the class one that
32:08 - is having the font size over here and as
32:11 - we have discussed previously whatever
32:13 - CSS properties are mentioned in the end
32:16 - will be applied to the HTML element so
32:19 - after this font size if let's say we
32:22 - have the internal styling as well after
32:24 - this link tag then that particular
32:26 - styling will be applied to the HTML
32:28 - element and in case if we have the
32:30 - inline styling over here then inline CSS
32:33 - properties will be given the highest
32:35 - priority so guys basically what we have
32:37 - to do is I'll comment out this line of
32:40 - code over here so simply we have to
32:42 - select this and press controll forward
32:44 - slash on the keyboard so as you can see
32:47 - this is the way that we can provide the
32:48 - commments in the CSS that is forward
32:50 - slash followed by the star character and
32:53 - then in the end over here we have star
32:55 - character followed by forward slash so
32:57 - this is a command that we provide in the
32:59 - CSS styling let me just save this file
33:01 - now and try reloading this page once
33:03 - again on the browser I'll just exit this
33:06 - inspect option and when we reload this
33:08 - page as you can see the font size is
33:10 - updated to 20 pixels for all the
33:13 - elements consistently throughout the
33:15 - document so guys this is the main
33:17 - functionality of the universal selector
33:19 - which means the CSS properties will be
33:22 - applied to all the elements let's say if
33:24 - we want to underline all the elements
33:26 - over here then we have something called
33:28 - as text decoration property so in this
33:31 - case we will say text decoration so as
33:34 - you can see this is the property that we
33:37 - will be using and then simply we can
33:39 - provide the underline value apart from
33:41 - this we have many other values that you
33:43 - can use but we will be using the
33:45 - underline value over here so when we
33:47 - select this underline value let me just
33:49 - save this file now and try reloading
33:52 - this page once again on the browser so
33:54 - as you can see all the elements are now
33:56 - being underlined with the help of the
33:58 - text decoration property that we have
34:00 - defined in the Universal selector over
34:02 - here another way is to use the CSS
34:05 - grouping selector now guys in this case
34:08 - we use multiple HTML tags in order to
34:11 - have the common CSS property so let's
34:14 - say instead of providing the universal
34:15 - selector over here in which case all the
34:18 - elements will get the font size as 20
34:20 - pixels if we only want this H1 and the
34:23 - paragraph tag to have the font size of
34:26 - 20 pixels then what we can can do is
34:28 - over here we'll remove these lines of
34:30 - code that is the universal selector we
34:32 - will also remove the dot class selector
34:35 - in this case and simply we have to use
34:37 - these two texts that is H1 and P which
34:40 - will be separated by comma so over here
34:43 - we provide H1 followed by comma and then
34:46 - we have P that is the paragraph tag over
34:48 - here so guys basically this is the
34:50 - meaning of the grouping selector in this
34:52 - case after this we can provide the open
34:54 - and close curly braces and simply we can
34:57 - provide the font size property so over
35:00 - here let us say we change it to 25
35:02 - pixels in this case guys what is the
35:04 - meaning of this block of code so we have
35:06 - the font size of 25 pixels which will be
35:09 - applied to two elements that is H1 and
35:12 - paragraph tags only so I'll save this
35:15 - file now and try reloading this page
35:17 - once again on the browser so as you can
35:19 - see we have this is heading one which is
35:21 - having the 25 pixels font size and this
35:24 - is a paragraph is also having the 25
35:27 - pixels font F size let us verify that as
35:29 - well we will right click on this header
35:32 - element and click on the inspect option
35:34 - over here so as you can see on the right
35:36 - hand side we have the font size of 25
35:39 - pixels for this header tag in this case
35:42 - and let's say we select this paragraph
35:44 - tag over here and we click on this you
35:46 - can see para 1 it is having the
35:48 - background color as yellow and over here
35:50 - below we have H1 comma P which is having
35:53 - the font size as 25 pixels what if we
35:56 - remove this checkbox when we we uncheck
35:58 - this as you can see this is a paragraph
36:00 - is now having the default font size over
36:03 - here and when we check this option once
36:05 - again both the header and the paragraph
36:07 - text are having the font size of 25
36:10 - pixels again so Guys these are certain
36:12 - ways in order to provide the CSS
36:14 - selectors that is by using the CSS
36:17 - element name then we can also use the
36:19 - CSS ID we can use the CSS class and then
36:22 - class with the HTML name as well and
36:25 - then apart from this we also have the
36:26 - universal selector which will apply the
36:29 - CSS properties defined inside the
36:31 - universal selector to all the HTML
36:34 - elements and apart from this we also
36:36 - have the CSS grouping selector that we
36:39 - have just seen while combining the
36:41 - different HTML tags so now we will see
36:44 - color values in CSS so guys basically
36:46 - there are various ways in order to
36:49 - define the colors in CSS so the very
36:52 - first way is by using the color names
36:54 - that we have seen previously as well and
36:56 - this is one of the example examples that
36:58 - we can give the color name as red yellow
37:01 - green to some of the CSS properties so
37:03 - let us check this with the help of
37:05 - examples as well in vs code so basically
37:07 - I'm going to remove the attributes in
37:09 - the existing HTML elements that we had
37:12 - return previously so as you can see over
37:15 - here we have a header element with the
37:17 - text this is heading one then we have a
37:19 - paragraph tag this is a paragraph and we
37:22 - have a div element that is this is a div
37:24 - element over here let me just save this
37:26 - file now and we'll also remove the
37:29 - content inside the style. CSS so we
37:32 - don't have any styling right now so let
37:34 - me just save this files and try
37:36 - reloading this page once again on the
37:38 - browser so as you can see this is the
37:40 - default way using which all the HTML
37:42 - elements are getting displayed now guys
37:44 - let us say we want to have certain
37:46 - background color to this entire page
37:48 - over here so in order to have the
37:50 - background color to this entire page
37:53 - which is being represented by the body
37:55 - tag what we can do is we can provide the
37:57 - background color to this body tag so
38:00 - inside the style. CSS we will provide
38:03 - the selector that is body tag in this
38:05 - case followed by open and close curly
38:08 - braces and then over here we will be
38:10 - providing the background color now guys
38:12 - how do we provide the background color
38:14 - in this case so the very first example
38:17 - is by using the color name so let us say
38:19 - we want the background color to be
38:21 - yellow so simply we can provide the
38:23 - yellow color name in this case so guys
38:25 - this is one of the basic phase in order
38:27 - to use the color names so that a
38:29 - particular color can be applied to the
38:31 - CSS property let me just save this file
38:34 - now and try reloading this page once
38:36 - again on the browser so as you can see
38:38 - the background color of the entire body
38:40 - has been updated to yellow color now
38:42 - guys let us move to another way over
38:44 - here we can also use the RGB values for
38:47 - color so we have to use the RGB function
38:50 - in this case inside which we will be
38:52 - having the numbers now these numbers are
38:55 - representing the red component green
38:58 - component and the blue component so over
39:00 - here we have three numbers which are
39:02 - separated by commas in this case and the
39:05 - numbers can go from 0 up to 255 now 0er
39:08 - means no red component is present and
39:11 - 255 means the entire red component is
39:14 - present inside this particular color and
39:17 - the same values are applicable for green
39:19 - and blue as well so guys this RGB stands
39:22 - for red green and blue which will have
39:24 - their own components based on our
39:26 - requirements we can Define so how do we
39:29 - apply this particular color so let us
39:31 - check that as well so let's say if we
39:33 - want the heading color to be red so what
39:36 - we can do is inside the style. CSS we
39:39 - have to provide the header tag that is
39:41 - H1 in this case followed by open and
39:44 - close curly braces now guys we want the
39:46 - font color to be red color so simply we
39:49 - can use the color property and this time
39:52 - instead of using the color name that we
39:54 - had used previously we will be using the
39:56 - RG B values so over here as you can see
40:00 - vs code is suggesting us this RGB option
40:03 - which is having the red green and blue
40:06 - parameters which we have to Define as
40:08 - numbers which should go from 0 up to 255
40:12 - so guys over here the red component we
40:14 - will apply it as 255 the green component
40:17 - let's say we don't want any green
40:19 - component to be displayed over here so
40:21 - we simply have to provide zero number
40:24 - and then for the blue component as well
40:26 - we provide zero so so that no blue
40:28 - component is applied to the color so
40:30 - basically it is going to be a pure red
40:32 - color in this case since it is having
40:34 - 255 value for the red component so let
40:37 - me just save this file now and try
40:39 - reloading this page once again on the
40:41 - browser so as you can see the header
40:44 - element is now having the font color as
40:46 - the red color with the help of this RGB
40:49 - function in this case so guys you can
40:51 - play around with the values of these RGB
40:54 - that you can provide with the help of
40:55 - these numbers let's say I want to reduce
40:58 - some portion of this red component so
41:00 - simply set it as 200 so instead of 255
41:03 - we set it as 200 over here so let me
41:06 - just save this file now and try
41:07 - reloading this page once again on the
41:09 - browser so it has been updated to a
41:12 - little darker version of the red color
41:14 - now one important point to note over
41:16 - here is when all the components are zero
41:18 - then it will be a black color so let's
41:20 - say we provide zero as the red component
41:23 - as well so it has been updated to black
41:25 - color as you can see over here in this
41:27 - Square so let me just save this file now
41:29 - and try reloading this page once again
41:31 - on the browser so it is a black color
41:33 - and if you provide the entire portion
41:35 - that is 255 to all the components so
41:39 - let's say we provide 255 to red green
41:42 - and then let's say we provide 255 to
41:45 - Blue as well so it will be converted to
41:47 - a white color now so let me just save
41:50 - this file and try reloading this page
41:52 - once again on the browser so this is a
41:54 - white color which is not mixing well
41:57 - with with the background color which we
41:58 - have already applied as the yellow color
42:00 - so guys in this way you can play around
42:02 - with these numbers and set the color
42:05 - based on your requirements So currently
42:07 - we want to set it as the red color for
42:09 - the text of the header element so I'll
42:11 - save this file now and try reloading
42:13 - this page so this is the red color by
42:15 - using the RGB values now guys let us
42:18 - move to another way of using the color
42:20 - values so we have another way as the hex
42:23 - values in this case for which we use the
42:26 - hash character followed by Red component
42:29 - that is being represented by the first
42:31 - two characters then we have green
42:33 - component that is third and fourth
42:35 - character and then fifth and sixth
42:37 - character as the blue component over
42:39 - here so just like RGB in which case we
42:42 - are having the numbers from 0 up to 255
42:45 - in the hex color we have 0 0 up to FF so
42:49 - 0 0 will be representing the black color
42:52 - and FF that is the maximum number will
42:55 - be representing the white color over
42:57 - here so guys let us say we want to
42:59 - change the font color of paragraph This
43:02 - Time with the help of the hex color so
43:04 - what we can do is again we have to come
43:06 - to this style. CSS file and then we
43:09 - provide the P tag which will help us in
43:12 - order to provide the CSS property to the
43:14 - paragraph and let's say we want the
43:16 - color in which case we will be using the
43:19 - hex color so this time we will be using
43:21 - the blue color in order to be applied to
43:23 - the text of this paragraph so what we
43:26 - can do is we Pro provide the hash
43:27 - character so the red component should be
43:30 - zero so this time we will provide 0 0
43:33 - and then we have the green component
43:34 - which should be again zero so 2 * 0 so
43:37 - guys total 4 * 0 and Then followed by 2
43:40 - * F because we want 100% of the blue
43:43 - color over here and that is why we have
43:45 - provided FF character in the end so guys
43:48 - total six characters will be there two
43:50 - characters from each that is red green
43:53 - and blue will be used in order to
43:55 - represent a particular color color so
43:57 - let me just save this file now and this
43:59 - time we have applied the blue color to
44:01 - the text and let us reload this page
44:03 - once again on the browser so as you can
44:05 - see this is a paragraph is getting
44:07 - displayed with the blue color as the
44:09 - text color now what if we provide the
44:11 - green component as well in this
44:13 - particular color so instead of 0 0 we
44:15 - will provide FF so this is the color
44:17 - that is the result of the combination of
44:20 - the green and the blue color now so let
44:22 - me just save this file now and try
44:24 - reloading this page once again on the
44:25 - browser so as you can see this is a
44:27 - paragraph is getting displayed in a
44:29 - different color which we have set by
44:32 - using this particular hex color so guys
44:34 - you can play around with this hex color
44:36 - values as well and understand how it
44:38 - works so that you can use it based on
44:40 - your requirements now guys apart from
44:42 - this we also have something called as
44:44 - Alpha component in the rgba values of
44:47 - the color now because Alpha is nothing
44:49 - but it defines the transparency that is
44:52 - how much transparent a particular color
44:55 - should be so let's say we want to to
44:57 - apply certain background color to this
44:59 - Dev element over here so what we can do
45:01 - is simply we have the dev element in
45:04 - this case inside the style. CSS file
45:07 - followed by open and close curly braces
45:10 - and this time we are going to use the
45:12 - background color property and we are
45:14 - going to provide
45:16 - RGB and as you can see we have the a
45:19 - component as well so you provide red
45:21 - green blue colors and then in the end
45:24 - you provide the alpha which will go from
45:26 - Z 0 up to 1 so let us check that as well
45:29 - so when we provide the red green and
45:31 - blue components so let's say we provide
45:33 - the same color that is red color over
45:35 - here as the background color for the div
45:37 - element so for the red component we
45:39 - provide 255 as the number for the green
45:42 - component we provide zero as the number
45:45 - and for the blue component we provide
45:47 - zero as the number and let's say we
45:49 - provide the alpha value as one this time
45:51 - so what will happen so let us check that
45:53 - I'll save this file now and try
45:55 - reloading this page once once again on
45:57 - the browser so as you can see the dev
46:00 - element is now having the background
46:02 - color as red color now and guys it is a
46:04 - pure red color so basically when we
46:07 - provide the alpha value as one there is
46:09 - no transparency for that particular
46:11 - color now let us say we want this
46:13 - background color to be transparent to
46:15 - some extent so let us say we change this
46:18 - Alpha component to 0.5 over here so when
46:21 - we change it from 1 to 0.5 in this case
46:24 - let me just save this file now and try
46:26 - reload loading this page once again on
46:28 - the browser as you can see the
46:30 - background color that is red is now
46:32 - little bit transparent and this is the
46:34 - way that you can Define transparency by
46:36 - using the alpha component in the RGB
46:39 - values let us say we want to make it
46:41 - more transparent so when we change it to
46:44 - 0.1 I'll save this file now and try
46:47 - reloading this page once again on the
46:48 - browser so it has become very
46:50 - transparent now there is a red color as
46:52 - you can see but it is very transparent
46:54 - in this case and when we set it to Z
46:57 - then it should disappear so when we
46:59 - change the alpha component to zero I'll
47:01 - save this file now and try reloading
47:03 - this page so there is no red component
47:05 - that is getting displayed as the
47:07 - background color let me just set it to
47:09 - 0.3 over here so that we can see that
47:12 - red color to some extent I'll save this
47:14 - file now and try reloading this page so
47:16 - as you can see we have the red color but
47:18 - it is little bit transparent over here
47:21 - and this is the way that we can use the
47:23 - alpha component if we want to show
47:25 - certain transparency to the the colors
47:27 - based on our requirements so Guys these
47:29 - are certain ways in order to provide the
47:31 - color values in CSS comment in the
47:34 - comment section below which is your
47:35 - favorite way of providing the CSS colors
47:38 - so now we will see background property
47:40 - in CSS so guys basically the CSS
47:43 - background properties are used to add
47:46 - background effects for elements and this
47:48 - we are going to check with the help of
47:50 - examples as well so below are some of
47:52 - the background properties in CSS that we
47:55 - can use so the very first property that
47:58 - we are going to see is the background
47:59 - color so let us move to the vs code over
48:02 - here so we already have three elements
48:04 - in this case that is H1 element this is
48:07 - heading one then we have a paragraph and
48:09 - we have a div element as well now guys
48:11 - we have a style. CSS property so I'll
48:14 - remove all the lines of code that we had
48:16 - return previously and let's say for this
48:18 - header that is H1 we want to have the
48:21 - background color as yellow so what we
48:23 - can do is I'll save this file now and
48:25 - try reloading this page on the browser
48:27 - first so this is the default page
48:29 - without any CSS that is applied on the
48:31 - web page so we will be applying the
48:34 - background color as yellow to this
48:36 - header element so we come to this style.
48:38 - CSS external file and over here we
48:41 - provide the selector that is H1 so for
48:44 - this H1 tag we are going to provide the
48:47 - background color property and the color
48:49 - that we are going to provide is yellow
48:51 - in this case let me just save this file
48:53 - now and try reloading this page once
48:55 - again on the browser so as you can see
48:58 - this is the way that we can provide the
49:00 - background color to any HTML element we
49:03 - can provide the background color to the
49:05 - entire body of the web page as well so
49:08 - instead of having this H1 selector we
49:10 - can simply provide the body tag and the
49:13 - same background color that is yellow
49:15 - will be applied to the entire body so
49:17 - let me just save this file now and try
49:19 - reloading this page once again on the
49:21 - browser so as you can see this is the
49:23 - color that is being applied to the body
49:26 - with the help of the background color
49:28 - now guys let us move to another property
49:30 - we have something called as opacity
49:32 - which means it specifies the opacity or
49:35 - transparency of an element it can take a
49:38 - value from 0.0 up to 1.0 the lower the
49:42 - value is the more transparent the color
49:45 - will be so guys what we can do is simply
49:47 - inside the same body tag we will have
49:50 - the opacity element as well so let's say
49:52 - we want the transparency to be 50% so
49:55 - simply we will provide the value as 0.5
49:58 - for the opacity property in this case
50:01 - let me just save this file now and try
50:03 - reloading this page once again on the
50:05 - browser so as you can see the opacity of
50:07 - the yellow background color is being
50:10 - updated with the help of this 0.5
50:12 - opacity so in this way you can provide
50:15 - the opacity property as well I'll remove
50:17 - this opacity factor for now so that we
50:20 - are going to deal with the pure colors
50:22 - in this case so let me just reload this
50:24 - page so as you can see we have the
50:25 - yellow background color for the property
50:28 - now guys let us move to another property
50:30 - we have something called as background
50:32 - image so guys this is one of the
50:34 - important properties if you want to set
50:37 - the background image for the HTML
50:39 - element so let's say we want to set the
50:41 - background image for the entire body so
50:44 - instead of a background color we should
50:46 - be having the background image so how do
50:49 - we Define that so basically we are going
50:51 - to have the background image in this
50:53 - case so as you can see this is the
50:55 - property that is suggested by the vs
50:58 - code so over here after we provide
51:00 - background image followed by colon we
51:02 - have to use the URL function so this is
51:05 - the function that we will be using and
51:07 - inside the open and close parenthesis we
51:10 - will provide the double codes now guys
51:12 - we already have the sample image over
51:14 - here as you can see sample image.png
51:18 - file is being stored in the same
51:20 - directory so what we have to do is
51:22 - simply we need to provide the name of
51:24 - this file so the sample _ image.png is
51:28 - the file that we are going to select so
51:30 - basically this is the image that will be
51:32 - displayed as the background image for
51:35 - the body element of the web page so guys
51:37 - let me just save this file now and try
51:40 - reloading this page once again on the
51:41 - browser so as you can see there is a
51:43 - background image that is set over here
51:45 - I'll just zoom out a little bit so that
51:48 - you can see the background image
51:49 - properly so as you can see this is the
51:52 - background image that is being set over
51:54 - here now guys by default whenever you
51:56 - set the background image to a particular
51:58 - HTML element the image will repeat
52:01 - itself in order to cover the entire
52:03 - screen so as you can see the same image
52:06 - is getting repeated over here multiple
52:08 - number of times so the next property
52:10 - that is background repeat will help us
52:13 - in order to set whether we want to
52:15 - repeat it in the horizontal direction or
52:18 - if we want to repeat it in the vertical
52:20 - direction or we don't want to repeat the
52:22 - background image so simply we have to
52:24 - come over here inside the same body tag
52:27 - in this case we will say background
52:30 - followed by hyphen and then we have the
52:33 - repeat words so basically it is the
52:35 - background repeat property that we are
52:37 - going to use and simply let's say if we
52:39 - want to repeat it in the horizontal
52:41 - Direction then we can use the repeat
52:43 - hyphen X by default the repeat value is
52:46 - being used in which case it is going to
52:48 - repeat horizontally and vertically as
52:51 - well but this time let's say if we want
52:53 - to repeat it horizontally so we'll set
52:55 - it as repeat Hy X in this case let me
52:58 - just save this file now and try
52:59 - reloading this page once again on the
53:01 - browser so as you can see the image is
53:04 - getting repeated in the horizontal
53:06 - Direction now and we also have the
53:08 - background color that is being applied
53:10 - to the remaining portion of the
53:12 - background now guys let us say if we
53:14 - want to repeat the image in the vertical
53:16 - Direction so what we can do is simply we
53:19 - can set the background repeat to repeat
53:21 - hyphen Y in this case so let me just
53:23 - save this file now and try reloading
53:26 - this page once again on the browser so
53:28 - as you can see the image is getting
53:30 - repeated in the vertical Direction now
53:32 - and let's say if we don't want to repeat
53:34 - the image if we want the image to be
53:37 - displayed only once so simply we can set
53:39 - the value as no repeat in this case so
53:42 - we have this no repeat value as well so
53:45 - we provide this no repeat value let me
53:47 - just save this file now and try
53:49 - reloading this page once again on the
53:51 - browser so as you can see the image is
53:53 - getting displayed only once so guys in
53:55 - this way you can also handle the
53:57 - background repeat property and set it
54:00 - accordingly whether you want to repeat
54:02 - the images or not now because apart from
54:04 - this we have another property that is
54:06 - background position so guys basically
54:08 - this will help us in order to provide
54:10 - certain position to the image so by
54:13 - default it is the top left position at
54:15 - which the background image is getting
54:17 - displayed right now but let's say if we
54:19 - want to display it at the top right
54:21 - position over here on the right hand
54:23 - side of the screen so what we can do is
54:25 - simply we have to provide the background
54:28 - position property in this case so we
54:31 - have background hyphen position and this
54:34 - time we are going to provide right and
54:36 - then followed by space and then we also
54:38 - have the top keyword so let me just save
54:40 - this file now and try reloading this
54:43 - page once again on the browser so as you
54:45 - can see the image is getting displayed
54:47 - on the right hand side and at the top
54:49 - side of the web page so guys the
54:51 - background position property will help
54:53 - us in order to provide certain position
54:56 - to the image that we want to display on
54:58 - the web page now guys apart from this we
55:00 - also have something called as background
55:02 - attachment over here now in order to
55:05 - check this we need to have multiple
55:06 - lines of code inside our HTML document
55:09 - So currently we are having only three
55:11 - elements that is header then we have
55:13 - paragraph and the div element so as you
55:15 - can see these are the elements over here
55:17 - I'll zoom out little bit so that you can
55:19 - properly see the image on the right hand
55:21 - side in this case now guys what we can
55:23 - do is simply I'm going to add more HTML
55:26 - elements over here in such a way that we
55:29 - are able to scroll this page so simply
55:31 - I'll come to this HTML document and we
55:34 - will have the paragraph tag over here
55:36 - and then we will have the lurm that will
55:39 - help us in order to generate the text
55:41 - now how many times we want this lurm
55:43 - sample text we are going to multiply it
55:46 - by 100 times which means 100 such
55:49 - sentences needs to be generated inside
55:51 - this paragraph tag over here so when we
55:53 - press enter as you can see automatically
55:56 - the entire text is getting generated so
55:58 - there's a very long text that is being
56:00 - displayed over here right now inside the
56:02 - paragraph tag now guys let me just save
56:05 - this file now and try reloading this
56:07 - page once again on the browser so as you
56:09 - can see this is the text that is getting
56:11 - displayed right now let me just zoom in
56:13 - a little bit over here now as you can
56:15 - see there is a scroll bar in this case
56:17 - now guys the important thing to note
56:19 - over here is when we scroll this web
56:21 - page as you can see the image is also
56:23 - getting scrolled so this is the
56:25 - background image that we have applied on
56:27 - this web page and when we scroll it
56:29 - vertically the image is going on the top
56:32 - and now it is getting disappeared from
56:33 - the screen so guys over here the
56:35 - background attachment property is being
56:37 - used and it is being set to scroll by
56:40 - default so what we can do is we have to
56:42 - come to the style. CSS external file and
56:46 - then simply we have to provide
56:47 - background hyphen attachment over here
56:51 - so this is the CSS property that we will
56:53 - be using so by default it is being set
56:55 - to scroll over here so let me just save
56:57 - this file now and try reloading this
57:00 - page as you can see the image is getting
57:02 - scrolled and it is getting disappeared
57:04 - but let's say if we want this image to
57:06 - be fixed at this particular position or
57:09 - any position based on your requirement
57:11 - so what we can do is we need to set this
57:14 - background attachment property to fixed
57:16 - value so I'll just remove this value and
57:19 - then we are going to provide the value
57:21 - that is fixed in this case so let me
57:23 - just save this file now and try
57:25 - reloading this page once again on the
57:26 - browser now if we try to scroll so as
57:29 - you can see we are scrolling the content
57:32 - but the image is at its fixed position
57:34 - over here that's because we have
57:36 - provided the background attachment
57:38 - property with the value that is fixed in
57:40 - this case so guys basically this line of
57:43 - code will help you in order to make your
57:46 - background image fixed and do not scroll
57:49 - based on the content of the web page so
57:51 - in this way we can use multiple
57:53 - background properties inside our CSS
57:56 - based on our requirements now guys apart
57:58 - from this we also have something called
58:00 - as background shorthand property so
58:03 - instead of using all these properties
58:05 - individually we can combine them and the
58:08 - sequence in which it is going to be
58:10 - combined is the same sequence that is
58:12 - first we are going to provide the
58:14 - background color then we have something
58:16 - called as background image then we have
58:18 - background repeat background position
58:20 - and background attachment so let me just
58:23 - remove all these lines of code over here
58:25 - and then let me me just save this file
58:27 - now and try reloading this page once
58:29 - again on the browser so as you can see
58:31 - we don't have any background property
58:33 - right now and simply we are having the
58:35 - normal text that we had defined inside
58:37 - the HTML page so let's say we want to
58:40 - Define certain background properties
58:42 - with the help of the shorthand method so
58:45 - simply we provide background CSS
58:47 - property and first of all we can provide
58:49 - the color so as you can see we need to
58:51 - provide the background color over here
58:53 - so let's say we provide the same color
58:55 - that is yellow in this case and then
58:57 - after this we need to provide the space
59:00 - character in order to provide the value
59:03 - for the next background CSS property so
59:05 - over here we have the background image
59:08 - property so simply we can provide the
59:10 - value for this image so how do we
59:12 - provide the value we use the URL
59:15 - function and then inside the parenthesis
59:17 - and double codes we have the name of the
59:20 - image or the directory path along with
59:23 - the image name so we have sample uncore
59:25 - image image.png in this case and then
59:28 - again followed by the space character
59:30 - and then we can have the background
59:32 - repeat property in case if you don't
59:34 - want to mention any of the values for a
59:36 - specific background property over here
59:38 - then you can ignore that property and
59:40 - move to the next property so over here
59:43 - background repeat is the next property
59:45 - so simply we can provide no repeat in
59:47 - this case which is one of the values for
59:49 - the background repeat property next
59:52 - after the space we are going to keep the
59:54 - position again as top top right over
59:56 - here so we simply have to provide right
59:59 - followed by space and then we have top
60:02 - keyword in this case and then guys the
60:04 - last property that is background
60:05 - attachment can be provided with a
60:07 - particular value over here so let's say
60:09 - if we want to ignore that property so
60:12 - simply we don't provide any value to
60:14 - that particular property so let me just
60:16 - save this file now if you notice that
60:18 - instead of having the four or five lines
60:20 - of code we have just provided the
60:23 - shorthand method that is background
60:25 - property and we have provided all the
60:27 - values in just one line and this is one
60:29 - of the efficient ways in order to
60:31 - provide multiple values to the CSS
60:34 - shorthand property of background guys
60:37 - let me just save this file now and try
60:38 - reloading this page once again on the
60:40 - browser so now as you can see there is a
60:42 - image that is getting displayed the
60:44 - first value that is yellow which is the
60:46 - background color of the body is being
60:48 - displayed over here and then after that
60:51 - the image is getting displayed which is
60:53 - not repeating itself so no repeat is
60:55 - also working working and it is at the
60:57 - position that is right top what if we
60:59 - want to get this image at the center of
61:01 - the screen at the top position so simply
61:04 - we provide the top keyword so that it is
61:07 - present at the top and at the center as
61:09 - well so let me just save this file now
61:11 - and try reloading this page once again
61:13 - on the browser so as you can see it is
61:16 - at the top and at the center position if
61:19 - we check it horizontally and then when
61:21 - we scroll this web page so as you can
61:23 - see the image is scrollable right now
61:25 - that's because because we have not
61:26 - provided the fixed value of the
61:29 - background attachment property if we
61:31 - provide the fixed value in the end in
61:33 - this case so let me just provide that
61:35 - value as well let me just save this file
61:37 - now and try reloading this page once
61:39 - again on the browser and if we scroll
61:41 - now so as you can see the image is
61:43 - getting fixed right now so guys this is
61:45 - one of the important ways in order to
61:47 - provide the background properties that
61:49 - you want to apply based on your
61:50 - requirements so now we will see border
61:52 - property in CSS so guys basically the Cs
61:56 - say border properties allow you to
61:58 - specify the style width and the color of
62:01 - the elements border so whatever HTML
62:04 - elements you have defined in the web
62:05 - page you can provide the border to that
62:08 - particular HTML element such as a div
62:10 - element or the paragraph element as well
62:13 - and we are going to check this with the
62:14 - help of examples now below are some of
62:17 - the Border properties in CSS so the very
62:19 - first property that we are going to see
62:21 - is border style so guys let us move to
62:23 - the vs code over here and basically we
62:26 - are going to have a simple div in this
62:28 - case so we have defined the div and we
62:30 - are going to Simply have the sample text
62:32 - that is lauram so LM Mt abbreviation is
62:35 - being provided by the vs code over here
62:37 - so we simply have to click on this Mt
62:40 - abbreviation so that random content is
62:42 - automatically generated for us now guys
62:44 - let me just save this file now and try
62:46 - reloading this page on the browser so as
62:49 - you can see this is the content that is
62:50 - being provided inside the dev element
62:53 - now guys let us provide certain
62:54 - background to this Dev element so over
62:56 - here what we have to do is we have to
62:58 - come to the style. CSS file in this case
63:01 - and simply we are going to define the
63:03 - tag that is Dev so by using the tag name
63:06 - we are going to define the background
63:07 - color so in this case we provide
63:10 - background color as the name of the
63:11 - property and let's say we provide the
63:14 - color as yellow in this case let me just
63:16 - save this file now and try reloading
63:18 - this page once again on the browser so
63:20 - as you can see we have the background
63:22 - color as yellow for this particular Dev
63:25 - now guys let us say we want to provide
63:26 - certain border so what we can do is we
63:29 - can provide the Border style in this
63:31 - case so when we provide border style
63:33 - over here there are multiple values that
63:35 - you can select from so as you can see
63:37 - this is the Border style and apart from
63:39 - that you can also provide the individual
63:42 - style for the individual sides so as you
63:44 - can see we have the top border over here
63:46 - then border left style then border right
63:49 - style and Border bottom style so
63:51 - basically there are four sides for this
63:52 - div that is top right bottom and and
63:55 - then left so guys you can select which
63:58 - of the sides you want the border to be
64:00 - provided and what style needs to be
64:02 - implemented for that particular HTML
64:05 - element so in this example we are going
64:06 - to Simply provide the Border style which
64:09 - will be applicable to all the four sides
64:11 - and in this case simply we are going to
64:13 - provide the solid border style so guys
64:15 - basically this is a very simple border
64:18 - style that we can use in order to
64:20 - provide the border to the dev element
64:22 - over here so let me just save this file
64:24 - now and try reloading loing this page
64:26 - once again on the browser so as you can
64:28 - see the border for the div element is
64:30 - being displayed over here and by default
64:32 - the color of the border is black and a
64:34 - specific border width is given to the
64:36 - div element now guys we can also Define
64:38 - the Border width as well by using the
64:40 - Border width property in this case
64:42 - before going to that property we can
64:44 - also have different values to this
64:46 - border style as well so as you can see
64:48 - we have dashed border style then we have
64:50 - dotted double Groove and many other
64:53 - border styles that you can see so if we
64:55 - provide de border style in this case let
64:57 - me just save this file now and try
64:59 - reloading this page once again on the
65:00 - browser as you can see the Border style
65:02 - is now dashed and it is not solid in
65:05 - this case we can also provide the double
65:07 - value as well so when we provide double
65:09 - let me just save this file now and try
65:11 - reloading this page so it is the double
65:13 - border that is getting implemented over
65:15 - here so guys basically we are going to
65:17 - keep the Border style as solid and let
65:20 - us move to another property that is
65:21 - border width so let's say we want to
65:24 - define the Border width with as 5 pixels
65:27 - in this case so we simply have to
65:29 - provide the Border withd property and
65:31 - the value that we provide is 5 pixels
65:33 - over here so let me just save this file
65:35 - now and try reloading this page once
65:37 - again on the browser so as you can see
65:39 - the Border width has being updated to 5
65:42 - pixels in this case apart from this we
65:44 - also have another property that is
65:45 - border color over here by default we can
65:48 - see that the Border color is black in
65:50 - this case what if you want to provide
65:52 - the Border color to be red so over here
65:55 - in the St f. CSS file simply we have to
65:57 - provide the Border color property so as
66:01 - you can see border hyphen color is the
66:03 - property name and simply we can provide
66:05 - the color name that is red you can also
66:08 - use the hex value or the RGB value as
66:11 - well based on your requirements so guys
66:13 - let me just save this file now and try
66:15 - reloading this page once again on the
66:16 - browser so as you can see the Border
66:18 - color is being implemented over here and
66:20 - it is red in color now guys apart from
66:22 - this as we have already discussed we can
66:25 - have the border for individual sites as
66:27 - well such as border top style border
66:29 - right style and so on so guys let us
66:32 - check that as well so instead of
66:33 - providing the Border style in this case
66:36 - simply we will provide border top style
66:39 - in this case so we have border top style
66:42 - over here and then let's say we want the
66:44 - Border top style to have dashed value
66:46 - over here so let me just save this file
66:48 - now and try reloading this page once
66:50 - again on the browser so as you can see
66:52 - only the top part of this Dev is having
66:55 - the border style now the other three
66:57 - sides are not having any border that's
66:59 - because we have specified the Border top
67:01 - style over here which is defined as
67:03 - dashed value over here so guys in this
67:05 - way you can also provide the Border
67:07 - styles to the specific sides of the HTML
67:10 - element that you want guys apart from
67:12 - this we also have something called as
67:13 - border shorthand property so guys so far
67:16 - we have defined the Border style border
67:18 - width and Border color separately in
67:21 - order to define the border for this
67:23 - particular div element but we also also
67:25 - have the short end property which will
67:27 - help you in order to Define all these
67:30 - values by just using one property over
67:32 - here so simply we can provide border and
67:35 - then first of all we need to provide the
67:37 - Border width in this case so we say five
67:39 - pixels followed by the border style so
67:42 - let's say we want the color to be red in
67:44 - this case so guys just by using this
67:47 - shorthand property that is the Border
67:49 - property you can Define the three values
67:51 - that is first value is for the Border
67:54 - width and then we have the border style
67:56 - followed by the border color value so
67:58 - let me just save this file now and try
68:00 - reloading this page once again on the
68:02 - browser so as you can see depending on
68:04 - the values that we have set the 5 pixel
68:06 - border is being defined over here with
68:08 - the Border style value that is solid and
68:11 - the Border color is red so guys you can
68:13 - also use the Shand property in order to
68:15 - Define your borders along with their
68:17 - colors based on your requirements now
68:19 - guys there is something called as border
68:21 - radius as well which will help us in
68:22 - order to provide certain radius to the
68:25 - Border Corners so guys let us check this
68:27 - as well so over here what we can do is
68:29 - simply we can provide border followed by
68:32 - hyphen and then we have something called
68:33 - as radius so guys let's say we provide
68:35 - 10 pixels as the radius in this case so
68:38 - let me just save this file now and try
68:40 - reloading this page so as you can see we
68:42 - have provided certain border radius over
68:44 - here so the corner of the border is
68:46 - having certain radius that is being
68:48 - defined by the border radius property so
68:50 - Guys these are some of the Border
68:52 - properties that you can use while
68:54 - defining the HTML elements so now we
68:56 - will see margin property in CSS so guys
68:59 - basically margins are used to create
69:02 - space around elements outside of any
69:05 - defined borders so previously we had
69:07 - seen how we can Define the borders for
69:09 - the HTML elements and if you want to
69:12 - provide certain spacing outside the
69:14 - borders of the HTML elements and in
69:16 - between the HTML elements then we can
69:19 - use the margin property in CSS so there
69:21 - are properties for setting the margin
69:23 - for each side of an element that is in
69:26 - the sequence of top right bottom and
69:29 - left so guys we will check this with the
69:31 - help of examples as well so the very
69:33 - first thing is we are going to see how
69:35 - we can Define the margin for a simple
69:37 - HTML element over here so let me just
69:39 - move to the vs code in this case and
69:41 - I'll just remove the previous lines of
69:43 - code in the index.html file and the
69:46 - style. CSS file as well that we had
69:48 - defined previously now guys what we will
69:50 - do is we will have two div elements over
69:53 - here so the first div element will be
69:55 - having the ID that is div one in this
69:57 - case and simply we are going to say this
70:00 - is div one and then guys I'm going to
70:03 - copy this line of code and paste this
70:05 - over here and we are going to have the
70:07 - second ID that is div 2 and we will
70:10 - Define this div as this is div 2 in this
70:13 - case let me just save this file now and
70:15 - try reloading this page on the browser
70:17 - so as you can see we have two divs in
70:19 - this case that is div 1 and div 2 now
70:22 - guys let us have some background color
70:23 - to both the divs so what we will do is
70:26 - inside the style. CSS file we are going
70:28 - to define the ID 1 that is div 1 in this
70:32 - case which should have the background
70:33 - color as yellow so we are going to
70:36 - provide the background color property
70:38 - and we will Define the value as yellow
70:40 - in this case and the second div which is
70:42 - having the ID as div 2 so we are going
70:45 - to provide hash div 2 in this case and
70:48 - then inside this we are going to provide
70:50 - the background color as Aqua in this
70:53 - case so guys basically we have provided
70:55 - this value that is equa so let me just
70:57 - save this file now and try reloading
70:59 - this page once again on the browser so
71:01 - as you can see we have the background
71:03 - colors that are set for both the divs
71:05 - that is div 1 and div two guys if you
71:07 - notice there is a white portion over
71:10 - here on the left on the top and on the
71:12 - right of these background colors so that
71:15 - is the default nature of the browser
71:17 - when a particular HTML page is being
71:19 - displayed to the user so guys what we
71:21 - can do is we can remove those margins or
71:24 - paddings that are being provided with
71:26 - the help of the body tag so inside the
71:29 - style. CSS file what we can do is for
71:32 - the body tag over here simply we are
71:34 - going to set the margin as zero in this
71:36 - case so we set it as zero and also the
71:39 - padding property needs to be set as zero
71:42 - so Guys these are the two settings that
71:44 - we can do in order to remove those white
71:46 - area that we can see on the web page
71:49 - outside of the background colors of the
71:51 - both the divs that we have defined so
71:53 - let me just save this file now and and
71:55 - if you notice when we refresh this page
71:57 - this white portion to the top left and
72:00 - right of these background colors should
72:02 - disappear so when we reload this page as
72:05 - you can see there is no white portion
72:07 - now and the entire width of the screen
72:09 - is being taken by the background color
72:12 - of both the div elements now guys how do
72:13 - we provide the margin over here so let's
72:16 - say we want to provide the margin of 10
72:18 - pixels to Dev one so in this case margin
72:21 - is nothing but it will be a blank space
72:23 - that will be provided in in all the four
72:26 - directions outside of the border so
72:28 - inside the style. CSS file for ID that
72:31 - is div one over here simply we are going
72:33 - to provide margin in this case and we
72:35 - will say 10 pixels over here let me just
72:37 - save this file now and try reloading
72:39 - this page once again on the browser so
72:42 - as you can see when we provide the
72:43 - margin of 10 pixels to the div 1 you can
72:46 - notice that on the top side right side
72:49 - bottom side and on the left hand side as
72:51 - well the margin is being provided with
72:53 - the help of the 10 pixels value that we
72:55 - have provided inside the style. CSS
72:58 - property and guys this is the meaning of
73:00 - providing margin over here it is the
73:02 - space outside of the border of the HTML
73:05 - element so if we provide the border to
73:08 - this first div element in this case the
73:10 - Border will enclose this first div
73:12 - element around this background color
73:14 - that we have already set so guys let us
73:16 - check that as well so over here simply
73:18 - we are going to provide a border in this
73:20 - case we will say the border with as two
73:22 - pixels and the Border style is solid and
73:25 - color is black so let me just save this
73:27 - file now and try reloading this page
73:29 - once again on the browser so as you can
73:31 - see the border is being provided to the
73:34 - first div element and the margin is 10
73:37 - pixels from all the sides so guys with
73:39 - the help of the margin property you can
73:42 - provide the margin on all the sides over
73:44 - here and this is the example of the
73:46 - margin shorthand property which means
73:48 - you can provide the margin to all the
73:50 - sides with the help of the margin
73:52 - property now guys let us say you only
73:53 - want to provide the mar Marg to the left
73:56 - and right of the web element so in this
73:58 - case you don't want the margin to be
74:00 - displayed on the top and the bottom of
74:03 - the first div element over here so what
74:05 - we can do is simply I'll remove this
74:07 - line of code let me just save this file
74:09 - now and try reloading this page once
74:10 - again on the browser so we don't have
74:12 - any margin right now to the first Dev
74:15 - element now let's say we want to provide
74:17 - 5 pixels margin to the left and 5 pixels
74:20 - margin to the right so what we can do is
74:22 - simply we can say margin left in this
74:25 - case so margin hyphen left is the
74:27 - property that you should be using so we
74:29 - provide five pixels over here and again
74:32 - we will provide margin right in this
74:34 - case and we will provide the value as 5
74:36 - pixels over here now let me just save
74:38 - this file now and try reloading this
74:40 - page once again on the browser so as you
74:42 - can see we have the 5 pixels margin on
74:45 - the left and 5 pixels margin on the
74:47 - right let us increase the margin values
74:50 - over here so that you can clearly see
74:52 - the margin on the UI so let us set the
74:55 - margin left and right to 20 pixels over
74:57 - here and when we reload this page once
74:59 - again on the browser as you can see the
75:01 - margin has been increased now so guys in
75:04 - this way you can specifically provide
75:06 - the margin to a particular side of the
75:08 - web element in this case now guys apart
75:10 - from this you can also Define such
75:13 - margins inside the margin property as
75:15 - well so I'll simply remove these lines
75:17 - of code and we will simply use the
75:20 - margin property and over here the
75:22 - sequence of the values for the margins
75:25 - that you are supposed to set is first of
75:27 - all you should be setting the margin for
75:29 - the top side of the web element so let's
75:31 - say we don't want the margin at the top
75:34 - side so simply we provide zero pixels
75:36 - over here followed by space and then
75:38 - let's say we want the margin to the
75:41 - right side to be 30 pixels over here so
75:43 - simply on the right hand side we can
75:45 - provide 30 pixels followed by we have
75:48 - the bottom side of the web element in
75:50 - this case so guys over here let's say we
75:52 - want the margin to be 10 pixels so in
75:54 - this case we provide 10 pixels now guys
75:57 - this 10 pixels will help us in order to
76:00 - have some space in between the first
76:02 - developement and the second Dev elment
76:04 - when we refresh the page and then after
76:06 - this we can Define the margin for the
76:08 - left hand side so let's say we want 100
76:10 - pixels as margin on the left hand side
76:12 - over here so guys on the left hand side
76:14 - we are going to have the highest margin
76:16 - in this case and we are going to check
76:18 - that on the UI as well so let me just
76:20 - save this file now and try reloading
76:23 - this page once again on the browser so
76:25 - as you can see on top there is no margin
76:27 - because we have provided 0er pixels and
76:29 - then on the right it is 30 pixels over
76:32 - here so you can see this is the 30
76:33 - pixels margin and at the bottom we have
76:36 - the 10 pixels margin over here so this
76:39 - is the 10 pixels margin which is
76:41 - dividing the first div element and the
76:43 - second div element as well and the last
76:45 - element inside the shorthand margin
76:47 - property is the left side margin which
76:50 - is 100 pixels so we are going to have
76:52 - 100 pixels in this case guys we can can
76:55 - also right click over here on the web
76:57 - element and select the inspect option in
77:00 - this case so on any browser that you are
77:02 - working you will be able to see the CSS
77:05 - properties for a particular web element
77:07 - over here so when we select this web
77:10 - element what we can do is we can scroll
77:12 - down and as you can see this is the
77:14 - margin that is being provided to this
77:17 - particular web element so on the top we
77:19 - don't have any margin on the right hand
77:21 - side we have 30 pixels on the bottom
77:23 - side we have 10 pixels and on the left
77:25 - hand side we have 100 pixels and that is
77:27 - what we have defined over here by using
77:30 - the margin Shand property so guys based
77:32 - on your requirements you can provide the
77:34 - margin to the different web elements and
77:37 - check whether it is being reflected over
77:39 - here by inspecting that element now guys
77:41 - apart from this we also have something
77:43 - called as margin Auto so basically the
77:45 - Auto Value will help us in order to
77:48 - align the web element at the center of
77:50 - the page so guys let us say we have
77:52 - certain width to this first Dev element
77:55 - so what we will do is I'll simply remove
77:57 - this line of code over here and simply
77:59 - we are going to have the width s 500
78:02 - pixels in this case so when we say 500
78:04 - pixels let me just save this file now
78:06 - and see how it looks like on the UI so
78:09 - as you can see this is the 500 pixels
78:11 - width for the first div element over
78:14 - here and it is taking the space up to
78:16 - almost the center of the screen in this
78:18 - case but the second div is taking the
78:20 - entire width of the screen so guys since
78:22 - we have limited the width to 500 pixels
78:25 - over here it is being displayed in this
78:27 - way now guys let us say we want this
78:29 - particular Dev element to be at the
78:31 - center of the page so what we can do is
78:34 - simply we can provide the margin Auto in
78:37 - this case so we provide the margin
78:39 - property and the value that we must
78:41 - Define is auto so guys this value is
78:44 - responsible in order to align the web
78:46 - element at the center of the page
78:48 - horizontally so let me just save this
78:50 - file now and try reloading this page
78:52 - once again on the browser so as you can
78:54 - see the div element is being aligned at
78:57 - the center of the page with the help of
78:59 - the auto value for the margin guys it is
79:01 - very important to note that when you are
79:03 - providing the Auto Value then you should
79:05 - have certain width for a particular web
79:08 - element that you want to be aligned at
79:10 - the center of the page now guys apart
79:12 - from this we have something called as
79:14 - margin inherit as well so the inherit
79:17 - value will help us in order to get the
79:20 - margin value from the parent value now
79:22 - guys apart from this the margin property
79:25 - can also have the negative values that
79:27 - we can set so to understand this when we
79:29 - have the margin value as positive for
79:32 - the left hand side margin over here the
79:34 - web element tends to go on the right
79:36 - hand side but guys when we have the
79:38 - margin as the negative value so the web
79:41 - element will go on the left hand side of
79:43 - the screen and it will be invisible to
79:45 - some extent so guys let us check that as
79:47 - well so for this web element that is
79:49 - having the ID div 2 over here we are
79:52 - going to have the negative left margin
79:54 - so we we will Define margin hyphen left
79:56 - in this case and let's say we provide 10
79:59 - pixels in this case let me just save
80:01 - this file now and try reloading this
80:03 - page once again on the browser so as you
80:05 - can see the content of this second Dev
80:08 - element is going on the left hand side
80:10 - the T character over here that was
80:12 - present inside the div 2 is now going to
80:15 - the left of the screen in this case so
80:17 - guys basically this is the functionality
80:19 - of having the negative margins which
80:21 - means when we provide the margin left as
80:23 - a negative value then the div element
80:25 - will go on the left hand side over here
80:27 - and when the margin top property is
80:29 - negative then the web element will go on
80:31 - the top side of the screen now guys
80:33 - apart from this we have something called
80:35 - as margin collapse as well so what is
80:37 - the meaning of this so guys the meaning
80:39 - of margin collapse is when we have the
80:41 - margin bottom for the first div element
80:44 - and the margin top for the second div
80:46 - element so let's say we have the margin
80:48 - bottom as 50 pixels for this first
80:50 - element and 20 pixels as the margin top
80:53 - for the second element over here so let
80:55 - us check that as well how it will look
80:57 - like so over here inside the style. CSS
81:00 - property I'll simply remove all the
81:02 - margins over here and the width as well
81:04 - so let me just save this file now and
81:06 - try reloading this page once again on
81:08 - the browser so as you can see these are
81:10 - the two div elements now guys let us say
81:13 - we provide the margin bottom to First
81:15 - div element over here and the margin
81:18 - bottom is 50 pixels in this case so let
81:21 - me just save this file now and try
81:23 - reloading this page so as you can see
81:25 - the margin bottom is provided to the
81:27 - first Dev element now guys let us say we
81:29 - provide the margin top to the second Dev
81:31 - element so ideally it should move away
81:34 - from the div 1 by more 20 pixels over
81:36 - here so 70 pixels should be the total
81:39 - margin in between both these elements so
81:42 - let us check that as well so in this
81:44 - case when we provide margin top over
81:46 - here to the second Dev element and we
81:49 - provide the value is 20 pixels in this
81:51 - case over here we have provided margin
81:53 - bottom and over here we have provided
81:56 - margin top so let me just save this file
81:58 - now and try reloading this page once
82:00 - again on the browser before reloading
82:02 - you can see that this is the space but
82:04 - when we reload over here as you can see
82:07 - there is no change now so guys even
82:09 - though we have provided additional 20
82:11 - pixels but since margin bottom and
82:14 - margin top in this case means the same
82:16 - thing that is it will provide the space
82:19 - in between both these elements so in
82:21 - this case the highest value will be
82:23 - taken from both these margins and only
82:25 - that margin will be implemented on the
82:28 - web page so if we inspect this so when
82:30 - we right click and inspect over here and
82:33 - let us inspect the first and the second
82:35 - element in this case as you can see we
82:38 - have the 50 pixels margin and that is
82:40 - what is being highlighted as brown color
82:42 - on the screen but guys we have also
82:44 - provided 20 pixels to the margin top of
82:47 - the second element so what happened to
82:49 - that so let us check that as well so in
82:51 - this case when we highlight the second
82:54 - div over here it is showing that we have
82:56 - 20 pixels but this is the normal
82:58 - behavior of the web page when you
82:59 - provide the margin bottom and the margin
83:02 - top for two consecutive elements that
83:04 - are being displayed on the screen so
83:06 - guys if we provide 60 pixels to any of
83:09 - these margins over here so let's say we
83:11 - provide 60 pixels as the margin top for
83:13 - the div 2 element when we reload this
83:16 - page once again on the browser you will
83:18 - notice that 60 pixels margin will be
83:21 - present in between both these div
83:23 - elements so so when we reload this page
83:26 - as you can see this is the 60 pixels
83:27 - margin that is being implemented over
83:29 - here on the web page so this is the 60
83:32 - pixels margin as the top margin for the
83:34 - div 2 element and this is the meaning of
83:37 - margin collapse which you should be
83:39 - aware of when you are implementing
83:41 - margins in your project so so now we
83:43 - will see padding property in CSS so guys
83:46 - basically padding is used to create
83:48 - space around an element's content inside
83:52 - of any defined borders so guys if you
83:54 - want to provide certain space inside the
83:57 - web element and within the borders of
83:59 - that particular web element then we can
84:01 - use the padding property in CSS so there
84:04 - are properties for setting the padding
84:06 - for each side of an element that is in
84:09 - the se1 top right bottom and left and
84:13 - guys we will check this with the help of
84:14 - examples as well so let us move to the
84:16 - VSS code over here and previously we had
84:19 - written certain lines of code in order
84:21 - to understand the margin property in CSS
84:23 - so guys we have the first div over here
84:25 - that is this is div 1 with ID that is
84:28 - div 1 in this case and we have another
84:30 - div that is this is div 2 with ID div 2
84:34 - over here and inside the style. CSS
84:36 - property we had defined certain
84:38 - properties and we are going to remove
84:40 - these properties so that we understand
84:42 - padding property in CSS now guys let me
84:45 - just save both these files now and try
84:47 - reloading this page on the browser so as
84:49 - you can see we have this is div 1 and
84:52 - this is div 2 without any CSS proper y
84:54 - now guys what we can do is inside the
84:57 - style. CSS we can provide certain
84:59 - background colors over here to both the
85:02 - div elements so first of all we are
85:04 - going to define the CSS property for the
85:06 - ID that is div 1 over here which will be
85:08 - reflected to this div element that is
85:10 - the first Dev so in this case we will
85:13 - simply provide the background color as
85:15 - the property and let's say we provide
85:18 - the background color as yellow in this
85:20 - case and guys the second ID that is div
85:22 - 2 we are going to Define another
85:23 - background color over here so we say
85:26 - background color property and let's say
85:28 - we provide the value as equ in this case
85:31 - let me just save this file now and try
85:33 - reloading this page once again on the
85:35 - browser so as you can see we have the
85:37 - background color to both the properties
85:39 - which is being extended to the width of
85:41 - the screen guys if you notice we have
85:44 - certain white spaces on the left top and
85:47 - the right of the div elements so we can
85:50 - get rid of it by using the margin and
85:52 - padding as Zer pixels by defining those
85:55 - CSS properties for the body tag over
85:58 - here so guys let us do that as well so
86:00 - that we understand the padding property
86:01 - more easily so over here we provide the
86:04 - body tag and we simply provide margin as
86:07 - 0 pixels in this case so we say 0 pixels
86:11 - and padding as well as zero pixels over
86:13 - here let me just save this file now and
86:15 - try reloading this page once again on
86:17 - the browser so as you can see we don't
86:19 - have any spaces around both these div
86:21 - elements now guys what is the meaning of
86:23 - padding so over here first of all we
86:25 - will Define the border for this first
86:27 - div in this case so let's say we provide
86:30 - the border to First div element by using
86:32 - the Border property we will provide two
86:34 - pixels border followed by the border
86:37 - style that is solid and the color of the
86:39 - border is black color so let me just
86:41 - save this file now and try reloading
86:43 - this page once again on the browser so
86:45 - as you can see this is the border of the
86:47 - first Dev element now guys when we
86:49 - provide padding for a particular web
86:51 - element the space is provided in between
86:53 - the border and the content of the
86:55 - element so let us check that as well we
86:58 - are going to provide the padding to the
87:00 - left hand side of this first div over
87:02 - here so simply we are going to come to
87:04 - this div 1 ID and we will say padding
87:07 - followed by hyphen and then we have left
87:10 - in this case and let's say we provide 20
87:12 - pixels as the padding to the left hand
87:14 - side of the div one so when we save this
87:17 - file now and try reloading this page as
87:20 - you can see this is the space that we
87:22 - have provided in between the order and
87:24 - the content of this tip and this can be
87:26 - achieved by using the padding left
87:29 - property over here and when we say
87:30 - padding top property the padding will be
87:33 - provided from the top side of the web
87:35 - element so let us check that as well so
87:38 - when we say padding top in this case and
87:41 - let's say we provide 30 pixels over here
87:43 - as the padding top let me just save this
87:45 - file now and try reloading this page
87:47 - once again on the browser so as you can
87:49 - see 30 pixels padding top is being
87:52 - provided over here similarly we can
87:54 - provide padding bottom as well and
87:56 - padding right as well in this case so
87:58 - guys in this way based on your
87:59 - requirements you can provide the padding
88:01 - property to the required HTML element so
88:05 - let us check the padding bottom as well
88:07 - so over here we simply provide padding
88:09 - bottom property and let's say we provide
88:11 - 50 pixels as padding bottom so when we
88:14 - save this file now and try reloading
88:16 - this page as you can see this is the
88:18 - padding that is being provided at the
88:20 - bottom of the side now guys apart from
88:22 - this we have something called as padding
88:24 - in shorthand property so in short we can
88:27 - also provide all these padding values
88:29 - with the help of just one property that
88:31 - is padding over here so I'll simply
88:34 - comment out these lines of code in this
88:36 - case and simply we are going to say
88:38 - padding over here and let's say we want
88:40 - padding to be 50 pixels from all the
88:43 - sides so simply we are going to provide
88:45 - 50 pixels as the value from all the
88:47 - sides over here so when we save this
88:50 - file now and try reloading this page
88:52 - once again on the browser so this is see
88:54 - 50 pixels padding from all the sides so
88:57 - if you want to verify this simply we can
88:59 - right click and click on this inspect
89:01 - option of the browser and on the right
89:03 - hand side you can see the CSS properties
89:05 - for a particular web element over here
89:07 - so this is the padding that is being
89:09 - applied over here that is 50 pixels from
89:12 - all the four sides that is being
89:13 - highlighted in light green color now
89:16 - guys apart from that let's say if you
89:17 - want to provide the padding top and
89:20 - padding bottom to be 20 pixels and
89:22 - padding left and padding right to be 50
89:24 - pixels over here so what we can do is
89:27 - the first value is taken as the padding
89:29 - Top Value so over here simply we will
89:31 - provide 20 pixels over here the second
89:34 - value will be taken as padding right in
89:36 - this case so let's say we provide 50
89:38 - pixels over here as padding right and
89:40 - the third element will be taken as
89:42 - padding bottom over here so simply we
89:44 - are going to say 20 pixels once again
89:47 - and followed by the padding left so over
89:50 - here we will provide 50 pixels once
89:52 - again so the sequence is padding top
89:55 - followed by padding right and then
89:56 - padding bottom and then padding left let
89:59 - me just save this file now and try
90:01 - reloading this page once again over here
90:03 - so as you can see this is the padding
90:05 - top and padding bottom which is 20
90:07 - pixels we can verify that using the
90:09 - inspect option over here so when we
90:11 - click on this and come down over here as
90:13 - you can see padding top is being defined
90:16 - as 20 pixels and padding right and left
90:18 - is being defined as 50 pixels over here
90:21 - so guys this is the way that you can
90:22 - Define the padding for individual sides
90:25 - of a web element over here also when the
90:27 - padding top and bottom are same and left
90:30 - and right are same what you can do is
90:32 - this additional 20 and 50 pixels are not
90:35 - required so over here when we provide
90:37 - two values so padding top and padding
90:40 - bottom will be provided as 20 pixels and
90:43 - padding right and left will be provided
90:45 - as 50 pixels over here I'll just change
90:48 - this value to 10 pixels so that we can
90:50 - see the change on the web browser and
90:53 - this one as 30 pixels over here so the
90:56 - padding will be 10 from top and bottom
90:58 - and 30 at the left and right so let me
91:00 - just save this file now and try
91:02 - reloading this page once again on the
91:04 - browser so as you can see the padding
91:06 - has been updated and we can verify this
91:08 - on the right hand side that is the Box
91:10 - model over here so at the top and bottom
91:12 - it is 10 pixels on the left and right it
91:14 - is 30 pixels so guys this is the way
91:17 - that you can use the padding shorthand
91:18 - property as well now guys it is very
91:21 - important to note that we have something
91:22 - called as box size ing property while we
91:25 - use padding now it becomes very
91:27 - important when we provide the width of
91:29 - the element and the padding of the
91:31 - element as well so I'll just remove
91:33 - these lines of code over here that we
91:35 - have already defined let me just save
91:37 - this file now and try reloading this
91:39 - page once again on the browser and let
91:41 - me just provide the border to the second
91:43 - div element as well so I'll simply copy
91:45 - this line of code and paste it inside
91:48 - the div 2 ID over here so as you can see
91:51 - we have provided the border to both the
91:53 - properties in this case now guys let us
91:55 - provide certain space in between both
91:57 - these web elements so over here simply
91:59 - we are going to provide certain line
92:01 - brakes so couple of line braks we can
92:04 - provide so that some blank space is
92:06 - being created in between both these div
92:09 - elements over here now guys what we will
92:11 - do is we will provide the width and
92:13 - padding to the first div element so in
92:15 - this case what we can do is let's say we
92:18 - provide the width as 500 pixels so over
92:20 - here we simply provide 500 pixels as
92:23 - width and let's say we provide the
92:25 - padding as 50 pixels over here so simply
92:28 - we are going to provide 50 pixels in
92:30 - this case let me just save this file now
92:32 - and try reloading this page once again
92:34 - on the browser so as you can see we have
92:36 - provided the width as 500 pixels and
92:39 - padding as 50 pixels from all the sides
92:42 - over here but guys if you see the entire
92:44 - width of the diff now is more than 500
92:47 - pixels that's because we have added
92:50 - additional padding over here on the left
92:52 - and right hand side so when we right
92:54 - click and click on the inspect option
92:56 - over here and check the CSS in this case
92:59 - you can see that the 500 with is being
93:02 - highlighted as the green color over here
93:05 - but the width is more than 500 pixels
93:07 - that's because we have provided this
93:09 - additional padding over here of 50
93:11 - pixels on the left and the right as well
93:13 - and we also have two pixels border as
93:16 - well so the entire width will be 500 +
93:19 - 50 into 2 + 2 into 2 which is equal to
93:23 - 600 4 so basically the entire width of
93:26 - this particular Dev element has now
93:28 - become 604 pixels which was not the case
93:31 - when we had provided the width as 500
93:34 - pixels so guys this is the problem when
93:36 - we provide padding and border to a
93:39 - particular web element so basically the
93:41 - padding and the border which is having
93:43 - their own size will be added to the HTML
93:46 - element and the entire width of the HTML
93:50 - element will be increased and displayed
93:52 - to the user so guys basically in order
93:54 - to strictly keep the width as 500 pixels
93:58 - what we can do is we can Define the Box
94:00 - sizing property over here so let us
94:03 - check that with the second div over here
94:05 - so I'll simply copy these lines of code
94:07 - that is withd end padding for which we
94:09 - are going to keep the same values over
94:11 - here let me just save this file now and
94:13 - try reloading this page once again on
94:15 - the browser so as you can see both the
94:18 - elements are having the same width now
94:20 - they are also having the padding and the
94:22 - borders as same the only difference is
94:24 - the background color over here but since
94:26 - we have seen the actual width of this
94:28 - entire dep is more than 500 pixels so in
94:31 - order to strictly keep the width as 500
94:34 - pixels simply we can say box sizing in
94:37 - this case and the value that we are
94:39 - going to set is border box over here so
94:42 - when we set this border let me just save
94:44 - this file now and try reloading this
94:46 - page once again on the browser now if
94:48 - you see the actual width of the entire
94:51 - diff will be 500 pixels over here here
94:53 - let me just right click and click on the
94:56 - inspect option in this case so as you
94:58 - can see on the right hand side we have
95:00 - the actual width of the content as 396
95:03 - pixels and then we have 50 pixels left
95:05 - padding and the right padding as well
95:07 - which is equal to 100 so it becomes 496
95:10 - plus 2 pixels border on the left and the
95:12 - right hand side of the dev element which
95:14 - makes it as 500 pixels as the total
95:17 - width so guys this is the way that you
95:19 - can set the width strictly to this
95:21 - particular value when we are using the
95:23 - padding and the borders for a particular
95:25 - HTML element by using the Box sizing
95:28 - property and the value should be border
95:30 - box if you notice both these div
95:32 - elements are having the same CSS
95:34 - properties the only difference is box
95:36 - sizing which is helping us in order to
95:38 - set the actual width of the HTML element
95:41 - now guys apart from this we had already
95:43 - discussed that margin can have negative
95:45 - values but can padding have negative
95:48 - values no we cannot have negative values
95:50 - for padding and it is not allowed so you
95:52 - have to make note of this while you are
95:54 - implementing margin and padding as per
95:56 - your requirements and to understand the
95:58 - difference between the padding and
95:59 - margin over here you can see that the
96:01 - padding is the space that we have
96:03 - provided inside the div element and
96:06 - inside the border of this div element
96:08 - let's say we provide the margin to the
96:10 - same div element over here and see what
96:12 - is the difference so when we provide
96:14 - margin left over here so in this case we
96:17 - say margin left and let's say we provide
96:19 - 50 pixels as margin left in this case
96:22 - when we save this file now and try
96:24 - reloading this page so as you can see
96:26 - this is the margin property which means
96:29 - the space that is outside of the border
96:31 - of the web element so when you want to
96:34 - provide the space outside of the border
96:36 - of the web element you can use margin
96:38 - and when you want to provide certain
96:40 - space inside of the border of the web
96:42 - element then you can provide the padding
96:44 - property in CSS based on your
96:46 - requirements so now we will see height
96:49 - width and Max width properties in CSS so
96:52 - guys basically the he height and width
96:54 - properties are used to set the height
96:57 - and width of an element inside the web
96:59 - page so this we are going to check with
97:01 - the help of examples as well the height
97:03 - and width properties do not include the
97:06 - padding Borders or margins that we have
97:09 - seen previously so guys whatever padding
97:11 - or margin that you define for a
97:13 - particular HTML element for which you
97:16 - have defined the height and width so
97:18 - those numbers that you add to the
97:20 - padding and margins will be added after
97:22 - the actual height and width numbers that
97:24 - you have already provided so we will
97:26 - check it with the help of examples as
97:28 - well so basically the height and width
97:30 - properties sets the height and width of
97:33 - the area inside the padding border and
97:35 - margin of the element so this you should
97:37 - be knowing while you are implementing
97:40 - these properties in your current Project
97:42 - based on the requirements now guys the
97:44 - max width property is used to set the
97:46 - maximum width of an element so let us
97:48 - move to the vs code in order to see the
97:51 - working of all these properties I'll
97:53 - simply remove the previous lines of code
97:55 - over here from the index.html file and
97:58 - also from the style. CSS file that we
98:00 - had return previously so we have the
98:02 - blank style. CSS file over here in which
98:06 - we are going to Define all the required
98:08 - CSS properties so guys first of all we
98:10 - are going to have a simple div over here
98:13 - with the ID that is div one in this case
98:15 - so we have the div tag with the ID div 1
98:18 - and let us provide some content over
98:20 - here so simply we will say this is Dev
98:23 - one so let me just save this file now
98:25 - and try reloading this page on the
98:27 - browser so this is a simple statement
98:29 - that is this is div 1 over here and we
98:31 - have not provided any styling for now to
98:34 - this div element now guys let us provide
98:36 - certain styling so what we will do is
98:38 - first of all we will have the background
98:40 - color for this div so simply we can use
98:43 - the div tag or we can also specify the
98:46 - ID that is div one over here so since we
98:48 - do not have any other div element simply
98:50 - we are going to provide the div tag name
98:52 - in this case as the CSS selector now
98:55 - guys let us provide the background color
98:58 - by using the background color property
99:00 - in this case and let us say we have the
99:02 - background color as yellow in this case
99:05 - let me just save this file now and try
99:06 - reloading this page once again on the
99:08 - browser so as you can see we have the
99:11 - background color that is yellow in this
99:13 - case for this particular div element
99:15 - also guys we have certain margin and
99:17 - padding that is provided to the body
99:19 - element over here so simply before this
99:21 - div tag we will provide the body tag as
99:24 - well and what we are going to do is we
99:26 - will keep the margin as zero and padding
99:29 - as well as zero so over here we have set
99:31 - the margin and padding as zero so that
99:33 - we get this background color on the
99:36 - extreme top left over here for this div
99:38 - element let me just save this file now
99:40 - and try reloading this page once again
99:42 - on the browser so as you can see there
99:44 - is no more padding or margin on the top
99:47 - left and the right of the web page now
99:49 - guys by default the width of this
99:51 - particular div element is set in such a
99:53 - way that the entire width of the screen
99:56 - is being taken over here so as you can
99:58 - see from the extreme left to the extreme
100:00 - right the background color is being
100:02 - implemented over here and apart from
100:04 - that the height of this particular Dev
100:06 - is set in such a way that the required
100:08 - content fits into this particular height
100:11 - in this case so guys let us provide a
100:13 - border as well over here to the div
100:14 - element so simply we will provide border
100:17 - of two pixels with solid border style in
100:20 - this case and the Border color will be
100:22 - black let me just save this file now and
100:24 - try reloading this page as you can see
100:26 - the entire screen width is being
100:28 - occupied by this particular div element
100:31 - on the top of this page now guys if you
100:33 - want to provide the width of this
100:35 - particular div element let's say you
100:37 - want to set the width as 500 pixels so
100:39 - simply you can provide the width
100:41 - property over here so when we provide
100:43 - the width property as you can see this
100:45 - is the width CSS property that you can
100:47 - use and simply we can provide 500 pixels
100:50 - over here so we are using the pixels
100:52 - unit you can also use the percentage if
100:55 - you provide 100% the entire width of the
100:58 - screen will be taken and if you provide
101:00 - 50% half of the screen width will be
101:03 - used in order to display this web
101:05 - element so guys over here we have
101:07 - provided 500 pixels for now let me just
101:10 - save this file now and try reloading
101:11 - this page once again on the browser so
101:14 - as you can see now the width of this
101:16 - particular Dev element is restricted to
101:18 - 500 pixels in this case and it is not
101:21 - taking the width of the entire screen
101:23 - over here so guys in this way you can
101:25 - set the width of the particular HTML
101:28 - element over here and if you want to set
101:30 - the height of this web element simply
101:32 - you can use the height property over
101:34 - here so we have the height property and
101:36 - let's say we want 100 pixels as the
101:38 - height of this particular div element
101:41 - let me just save this file now and try
101:42 - reloading this page once again on the
101:44 - browser as you can see the height is now
101:47 - set as the 100 pixels simply you can
101:49 - right click on this element and go to
101:51 - the inspect option in order to check the
101:54 - actual width and height of this element
101:57 - as you can see inside this box model we
101:59 - have this 500 into 100 which means the
102:02 - width is 500 pixels followed by height
102:04 - that is 100 pixels over here and apart
102:06 - from that we also have the two pixels
102:08 - border that is surrounding this
102:10 - particular Dev element now guys we have
102:12 - seen the height and the width properties
102:14 - over here now what is the meaning of Max
102:16 - width property so in some cases what
102:18 - happens is some of the HTML elements
102:21 - width is more than the screen size of
102:23 - the device that the user is using so
102:26 - let's say if we try to resize this
102:28 - browser over here so as you can see when
102:30 - we resize this browser you can see this
102:32 - horizontal scroll bar is appearing now
102:35 - that's because the width of this
102:37 - particular div element is more than the
102:40 - width of this browser in this case so in
102:42 - some cases when you provide 500 pixels
102:45 - as the width of the div element and if
102:47 - the user is viewing this particular HTML
102:50 - element from a mobile device which is
102:52 - having a small screen over here the user
102:55 - will be noticing this horizontal scroll
102:57 - bar which is not a good user experience
102:59 - so guys in order to avoid this
103:01 - horizontal scroll bar we can use the max
103:04 - with property in CSS so what we can do
103:06 - is simply I will comment out this line
103:08 - of code that is having the width
103:10 - property we will keep the height
103:12 - property as 100 pixels and over here we
103:15 - will Define another CSS property that is
103:18 - Max width over here now guys in this
103:20 - case let's say we have the max width as
103:22 - 500 pixels which means maximum the width
103:25 - of the HTML element will go to 500
103:28 - pixels and it will adjust its with based
103:31 - on the device that the user is using in
103:34 - order to access this particular HTML
103:37 - page so guys let me just save this file
103:39 - now and try reloading this page once
103:41 - again on the browser so on the normal
103:43 - browser you will not see any difference
103:46 - and in this case the width is being set
103:48 - to 500 pixels and not more than 500
103:51 - pixels but when the user tries to reduce
103:54 - the size of the browser over here so as
103:56 - you can see there is no horizontal
103:58 - scroll bar now so maximum 500 pixels
104:01 - will be allocated to this particular
104:03 - HTML element but when the user reduces
104:06 - the width of the browser as you can see
104:08 - the width of the div element is also
104:10 - decreasing over here and there is no
104:12 - horizontal scroll bar that is being
104:14 - displayed right now so let me just right
104:17 - click over here and click on the inspect
104:19 - option so let us check the Box model in
104:22 - this case so as as you can see 318 * by
104:26 - 100 is the size now where 318 is the
104:29 - width of the div element over here and
104:32 - 100 is the height so as we increase the
104:35 - size of the browser you can see that the
104:37 - width is also increasing So currently it
104:39 - is
104:40 - 39133 3 pixels over here so if we keep
104:43 - on increasing the size the maximum value
104:45 - for the width will be 500 pixels over
104:48 - here so as you can see 500 * by 100 is
104:51 - the size of this particular dep element
104:53 - now so this feature of CSS will help us
104:56 - in order to make the web pages
104:58 - responsive which means that the size of
105:00 - the HTML elements will be adjusted based
105:03 - on the screen size of the device that
105:06 - the user is using and guys this is the
105:08 - way that you can use the mix with
105:09 - property in CSS so now we will complete
105:12 - the exercise on the border margin and
105:15 - padding by using the CSS properties so
105:18 - guys it is very important that you
105:20 - practice on your own while you're
105:22 - learning the Cs say so that you get the
105:24 - better understanding about the different
105:26 - properties that you can use based on
105:28 - your project requirements now we will be
105:30 - following the below steps in order to
105:32 - complete this exercise so as you can see
105:35 - the first step is to create a Dev with
105:38 - 200 pixels height and 50% width with the
105:41 - yellow background color so guys let us
105:43 - complete this first task over here you
105:45 - can also pause this video and practice
105:47 - on your own vs code and try to solve
105:50 - this problem as we go step by step to
105:53 - complete all these five task over here
105:56 - so guys let us move to the VSS code in
105:58 - this case and I'll simply remove the
105:59 - previous lines of code in the HTML file
106:02 - and the CSS file as well now guys over
106:04 - here we are going to define the dep with
106:07 - 200 pixels height and 50% width so in
106:10 - this case simply we are going to have
106:11 - the div tag and over here we are going
106:13 - to generate the random text so simply we
106:16 - are going to type LM and this is the m
106:18 - abbreviation that you can use in order
106:20 - to Simply generate the random text over
106:23 - here so simply we click on this
106:25 - particular Mt abbreviation and we get
106:28 - the random text that is being generated
106:30 - in this case let me just save this file
106:32 - now and try reloading this page on the
106:34 - browser so as you can see this is the
106:36 - div element that is having some random
106:38 - text over here now guys what is the
106:40 - requirement we need to have the width of
106:43 - this particular diff as 50% and height
106:46 - as 200 pixels so simply we are going to
106:49 - go inside the style. CSS file since it
106:52 - is linked to this particular HTML file
106:54 - over here with the help of the link tag
106:56 - in this case so over here inside the
106:59 - style. CSS file we are going to have the
107:02 - tag name that is div and for this div so
107:04 - simply we Define 200 pixel as the value
107:08 - for height property and the width
107:10 - property we are going to Define it as
107:12 - 50% so guys so far we have used the
107:15 - pixel unit in order to define the height
107:17 - and width but we can also use the
107:19 - percentage in order to define the
107:22 - property in terms of the screen size of
107:25 - the device so over here the width of 50%
107:28 - meaning from the entire 100% of the
107:31 - screen width only the 50% that is half
107:34 - of the screen width will be considered
107:37 - in order to display this particular Dev
107:39 - element so let me just save this file
107:41 - now and try reloading this page once
107:43 - again on the browser so as you can see
107:45 - now the text is being displayed over
107:47 - here only in the 50% width of the screen
107:51 - which will be somewhere over here so
107:53 - this we will be able to make out by
107:55 - providing the yellow background color in
107:58 - this case which is the part of the first
108:00 - task over here so guys let us add the
108:02 - background color that is yellow to this
108:04 - div element so simply we will be using
108:07 - the background color CSS property over
108:09 - here and then we will provide the value
108:12 - as yellow in this case let me just save
108:15 - this file now and try reloading this
108:17 - page once again on the browser so as you
108:19 - can see the width is being taken as 50%
108:22 - and the height is 200 pixels over here
108:25 - let us verify that we can simply right
108:27 - click on this Dev element on the web
108:29 - page and go to the inspect option and on
108:33 - the right you can scroll down as you can
108:35 - see 441.66 7 pixels which means it is
108:39 - the 50% of this particular screen size
108:43 - is the width of the div element and the
108:45 - height is defined as 2 200 pixels over
108:47 - here and this is what is being
108:49 - highlighted in green color inside this
108:52 - web page over here so guys this is the
108:54 - way that you can Define the width and
108:56 - height and the background color for a
108:58 - particular HTML element now guys let us
109:00 - move to the second task over here have a
109:02 - black color border for this diff with 5
109:05 - PX border width so guys basically we are
109:08 - going to have the Border as well so
109:10 - simply we can Define the Border property
109:13 - over here and the first parameter will
109:15 - be the Border width which is 5 pixels as
109:18 - per the task followed by the border
109:21 - style that is solid and by default the
109:23 - color will be black so simply we are
109:25 - going to Define that color as well which
109:27 - is the Border color that is black color
109:30 - let me just save this file now and try
109:32 - reloading this page once again on the
109:33 - browser so as you can see a 5 pixels
109:36 - border is being defined to this div
109:39 - element now guys let us move to the next
109:41 - task over here set margin as 70 pixels
109:44 - from top and bottom and 50 pixels from
109:47 - left and right so guys basically we will
109:49 - be using the margin property in this
109:52 - case in order to define the margins from
109:55 - all the sides so over here inside the
109:57 - style. CSS simply we are going to define
110:00 - the margin shorthand method if we simply
110:02 - provide 70 pixels over here the 70
110:05 - pixels margin will be provided from all
110:07 - the sides but if you want to provide
110:09 - different margins from Individual sides
110:12 - of the div element then you can provide
110:14 - multiple values for this margin
110:16 - shorthand property so over here the
110:18 - first value will reflect to the top of
110:21 - the dev element the second value will be
110:24 - reflecting the right of the dev element
110:26 - so in this case on the right we want 50
110:29 - pixels as the margin and Then followed
110:31 - by the bottom margin which will be 70
110:33 - pixels once again and then followed by
110:35 - the left margin that is 50 pixels once
110:38 - again so guys over here we have the four
110:41 - values from all the sides so guys let me
110:43 - just save this file now and try
110:45 - reloading this page once again on the
110:46 - browser so as you can see from Top we
110:49 - have the 70 pixels margin and from the
110:51 - left we have defined the 50 pixels
110:54 - margin over here and same margins are
110:56 - applied on the bottom and right
110:58 - respectively so if we right click on
111:00 - this div element and click on the
111:02 - inspect option let's see the Box model
111:04 - over here as you can see the margin top
111:06 - it is 70 margin left is 50 margin right
111:10 - is 50 and margin bottom is 70 in this
111:13 - case based on the task that we want to
111:15 - achieve so guys this is the way that we
111:17 - can provide the margin to this
111:19 - particular div element as well now guys
111:21 - let us move to another task we need to
111:23 - set the padding as 30 pixels from all
111:26 - the sides now guys what is the
111:27 - difference between margin and padding so
111:29 - we have seen previously that margin is
111:32 - the space that we provide outside of the
111:34 - border of the HTML element so over here
111:37 - since this is the border that is black
111:39 - in color which is enclosing the yellow
111:41 - background and the content as well the
111:44 - space is being provided outside of this
111:46 - border when we have defined the margin
111:49 - but when we provide padding over here of
111:51 - 30 pixels the space space will be
111:53 - provided in between the content and the
111:55 - Border over here which means the space
111:57 - will be provided inside of the border
112:00 - and that is the only difference so let
112:02 - us check that as well so in this case
112:04 - simply we are going to provide a padding
112:07 - of 30 pixels from all sides so in this
112:09 - case we provide 30 pixels and this
112:12 - padding will be provided to all the
112:14 - sides of the div element so let me just
112:16 - save this file now and try reloading
112:18 - this page once again on the browser so
112:20 - as you can see this is the space inside
112:22 - inside the border that is 30 pixels is
112:24 - being provided from all the sides as the
112:27 - padding so if we right click on this
112:29 - HTML element and click on the inspect
112:31 - option we can also see the padding that
112:33 - is being provided over here so as you
112:35 - can see after this border we have the
112:38 - padding that is 30 that is being
112:40 - provided on all the sides of this
112:42 - particular div element now guys let us
112:44 - move to another task over here update
112:46 - the margin to get the diff in Center so
112:49 - how do we do that here is a hint that is
112:51 - being provided you can use the auto
112:54 - value for the margin so guys previously
112:56 - we had seen whenever we use the width as
112:59 - the CSS property for the HTML element we
113:02 - can use the auto value for the margin in
113:05 - order to get that element at the center
113:07 - of the page so guys I'll simply remove
113:09 - this margin property for now and let me
113:11 - just save this file now and try
113:13 - reloading this page once again on the
113:14 - browser so we don't have any margins for
113:17 - now over here outside of the border now
113:19 - the task is to get the div in the center
113:22 - of the page horizontally so guys how do
113:24 - we do it simply we can provide the
113:26 - margin property over here so we say
113:28 - margin and then we have the value that
113:31 - is Auto in this case now guys the value
113:33 - auto will help us in order to provide
113:36 - the proper margin from left and right
113:38 - side of the div element in such a way
113:41 - that the div element will be displayed
113:43 - at the center of the page horizontally
113:45 - when we have the width that is being
113:47 - defined over here so let me just save
113:49 - this file now and try reloading this
113:51 - page once again on the browser
113:52 - so as you can see the required margin is
113:55 - provided on the left and the right hand
113:57 - side so that the div element is present
114:00 - at the center of the page we can simply
114:02 - right click and go to the inspect option
114:04 - over here in order to check the values
114:07 - of the margin so as you can see it is
114:09 - 1861 167 on the left and on the right as
114:12 - well so this is possible when we provide
114:14 - the margin property with the value auto
114:17 - in this case guys what if we don't
114:19 - provide the width of this particular Dev
114:21 - element so what will happen in this case
114:23 - so simply if we remove the width of this
114:25 - web element over here let me just
114:27 - comment out this particular line of code
114:29 - so we have commented out this with CSS
114:31 - property let me just save this file now
114:34 - and try reloading this page once again
114:36 - on the browser so as you can see since a
114:38 - div element is taking the entire width
114:41 - of the screen we are not able to make
114:42 - out whether the div element is at the
114:44 - center of the page and that is why we
114:46 - should be using the withd property in
114:49 - such a case where we are using margin as
114:51 - Auto over here so when we save this file
114:54 - now and try reloading this page as you
114:56 - can see the width of the dev element is
114:58 - 50% of the screen right now we can also
115:01 - increase the width to 80% which means
115:04 - the width of the div element will be
115:06 - defined as 80% of the screen let me just
115:09 - reload this page once again on the
115:10 - browser so as you can see on the left
115:12 - 10% of the screen width is being left
115:15 - out and on the right as well another 10%
115:17 - of the screen width is left out and the
115:19 - remaining 80% of the width is being
115:22 - occup occupied over here by the div
115:23 - element as we have defined over here so
115:26 - guys let me just change this width to
115:27 - 50% over here as per the task so guys we
115:30 - have completed all the task over here
115:32 - inside the exercise so now we will see
115:34 - Box model in CSS so guys basically in
115:37 - CSS the term Box model is used when
115:41 - talking about design and layouts and
115:43 - this we are going to check with the help
115:44 - of examples as well the CSS Box model is
115:48 - essentially a box that wraps around
115:51 - every HTML element so guys whatever HTML
115:54 - element that you write in your web page
115:57 - will have the CSS Box model that will be
115:59 - applied behind the scenes and it will
116:01 - consist of the various components that
116:04 - is in the sequence we have the content
116:06 - first and then outside the content we
116:08 - will be having the padding that we will
116:10 - be specifying in our CSS file outside of
116:13 - the padding we have the borders and Then
116:15 - followed by the margins from all the
116:17 - four sides and this is the components of
116:20 - the Box model in CSS so guys if you see
116:23 - this is the example of Box model in CSS
116:26 - so first of all we have content in the
116:29 - middle over here and then which is
116:31 - surrounded by the padding element which
116:33 - we specify in the CSS file if there is
116:35 - no padding element that we have
116:37 - specified so this padding will not occur
116:39 - and it will be zero pixels when we see
116:41 - the Box model on the web page apart from
116:44 - that we have the Border as well which
116:46 - surrounds the padding of the web element
116:48 - over here and then followed by the
116:50 - margin from all the four sides in this
116:52 - case and this is the Box model in CSS
116:55 - that every HTML element will be
116:58 - represented when you inspect them on
117:00 - your web page so guys let us check this
117:02 - with the help of example in vs code over
117:04 - here so basically we are going to remove
117:07 - the previous lines of code that we had
117:08 - written from the HTML file as well as
117:11 - the style. CSS file over here so guys we
117:14 - do not have any content right now so
117:16 - basically we are going to have a simple
117:18 - Dev over here so let's say we provide
117:20 - the dev element and then let's say we
117:22 - simply provide a test statement that is
117:24 - this is a test div element so guys
117:28 - basically we have a very simple
117:29 - statement that is this is a test div
117:31 - element over here let me just save this
117:33 - file now and try reloading this page on
117:35 - the browser so as you can see this is
117:37 - the div element that we can see now guys
117:40 - let us provide some styling over here so
117:42 - let's say we provide a background color
117:44 - to this particular div element so we
117:46 - will be providing the background color
117:48 - property inside the style. CSS file over
117:51 - here so because this particular file is
117:53 - being linked to the HTML file by using
117:56 - the link tag in this case so basically
117:58 - we are going to provide the tag name
118:00 - that is div in this case and then inside
118:03 - this we are going to provide the
118:04 - background color property so let's say
118:06 - we want the background color to be
118:08 - yellow in this case let me just save
118:10 - this file now and try reloading this
118:12 - page once again on the browser so as you
118:14 - can see we have a background color that
118:17 - is yellow over here now guys let us say
118:19 - we want to see the Box model for this
118:21 - particular Dev element so what we can do
118:23 - is simply we have to right click on this
118:26 - HTML element over here and as you can
118:28 - see we have this inspect option so when
118:30 - we click on this inspect option on the
118:32 - right hand side you can see the CSS
118:34 - properties that are being provided to
118:36 - this div element over here and when you
118:38 - scroll down you can see that this is the
118:40 - Box model for this particular HTML
118:43 - element So currently we have only the
118:45 - content of this div that is this is a
118:48 - test div element and it is being
118:50 - highlighted in green color right now
118:52 - when we get the cursor on this content
118:54 - over here and as you can see this
118:57 - content is being surrounded by the
118:58 - padding which is currently not being
119:00 - defined and Then followed by the border
119:03 - and then we also have the margin in this
119:05 - case so guys let us provide all these
119:07 - components in the style. CSS file one at
119:10 - a time over here so what we will do is
119:12 - let's say we provide padding in this
119:14 - case of 5 pixels from all the four sides
119:17 - so let me just save this file now and
119:19 - try reloading this page once again on
119:21 - the browser so as you can see we have
119:24 - provided the padding to this content and
119:26 - the padding can be reflected on this
119:28 - background color over here we have
119:30 - certain spacing in between the border of
119:33 - the background color and the content
119:35 - itself so when we check the Box model
119:37 - right now as you can see for the padding
119:39 - part we are getting the five pixels over
119:42 - here as the number from all the four
119:44 - sides and it is being highlighted as
119:46 - light green color right now on the UI as
119:48 - well that is wrapping the content so
119:51 - basically this is the cont content that
119:52 - is being highlighted in light green
119:54 - color followed by the padding which is
119:56 - now getting highlighted now guys let us
119:58 - provide the Border as well for this
120:00 - particular HTML element so let's say we
120:02 - provide the Border Shand property and in
120:05 - this case we provide five pixels solid
120:08 - border which is going to be in the black
120:10 - color over here so we have provided five
120:13 - pixels solid border type and the Border
120:15 - color is black so let me just save this
120:17 - file now and try reloading this page
120:19 - once again on the browser so as you can
120:22 - see we have the border that is of the
120:23 - width 5 pixels in this case so let me
120:26 - just show you the Box model over here as
120:28 - you can see the border is also getting
120:30 - highlighted now and it is being
120:32 - represented on the Box model as well so
120:34 - this is the way that you can apply the
120:36 - border and check in the Box model in
120:38 - this case now guys the last thing that
120:40 - is margin needs to be applied to this
120:42 - particular HTML element so let us apply
120:44 - that as well so over here we will
120:47 - provide margin and then 10 pixels of
120:50 - margin from all the four sides so let me
120:52 - just save this file now and try
120:54 - reloading this page once again on the
120:55 - browser so as you can see if you scroll
120:58 - down we have the margin of 10 pixels
121:00 - from all the four sides so this is the
121:02 - brown color that we can see that is at
121:04 - the outside of the HTML element which
121:08 - represents the margin of the HTML
121:10 - element so guys this is the sequence
121:12 - that you should remember whenever you
121:13 - are going to study more about the Box
121:15 - model in CSS first of all there is a
121:17 - Content as you can see this is the
121:19 - content of the HTML element which is is
121:22 - then wrapped by the padding property of
121:24 - the HTML element which is then again
121:26 - wrapped by the border property of the
121:28 - HTML element and Then followed by
121:30 - wrapping by the margin property of the
121:33 - HTML element over here so it is very
121:35 - important that you understand the
121:37 - sequence of the Box model over here so
121:39 - that you can distinguish between the
121:41 - margins and padding so basically the
121:42 - padding comes inside the border and the
121:45 - margin comes outside of the borders over
121:47 - here as far as Box model is concerned
121:49 - now guys when we provide the width and
121:51 - height at attributes basically these
121:53 - attributes will be applied to the
121:55 - content of the HTML element and not on
121:58 - the other attributes as you can see the
122:00 - padding borders and margins of the HTML
122:03 - element so let us apply the width and
122:05 - height attributes for this particular
122:07 - HTML element over here currently if you
122:09 - see inside the Box model the width is
122:12 - 855 followed by the height that is 18
122:15 - pixels over here so what if we provide
122:17 - the width of 500 pixels in this case so
122:20 - let us provide that as well so over here
122:22 - when we provide width s 500 pixels over
122:25 - here let me just save this file now and
122:27 - try reloading this page once again on
122:29 - the browser so as you can see the width
122:32 - of the div element is being reduced now
122:34 - to 500 pixels let us check the Box model
122:37 - over here so it is 500 multili by 18
122:41 - which means only the content of this
122:44 - HTML element is 500 pixels and not the
122:47 - width of the entire Box model over here
122:50 - so 500 is the width of the content
122:52 - followed by the padding which is again 5
122:55 - pixels from the left and 5 pixels from
122:57 - the right which makes a total width of
122:59 - 10 pixels over here again we have the
123:01 - border of total 10 pixels as far as
123:03 - width is concerned and the width of the
123:05 - margin will be 20 pixels that is 10
123:07 - pixels on the left and 10 pixels on the
123:10 - right so basically the entire width of
123:12 - the Box model over here will be 540
123:15 - pixels whereas the width that we had
123:17 - provided was 500 pixels and this will
123:20 - only reflect to the content of this div
123:23 - element that you can see over here which
123:25 - is a simple text in this case so guys
123:27 - you should remember this whenever you
123:29 - are going to apply the width and height
123:31 - attributes as well so if we provide the
123:33 - height property as well over here we
123:35 - need to provide height of let's say 100
123:37 - pixels in this case let me just save
123:39 - this file now and try reloading this
123:41 - page once again on the browser so as you
123:44 - can see now we have 500 multiplied by
123:46 - 100 which is the width and height of the
123:49 - content of this HTML element which is
123:52 - getting highlighted with the light green
123:54 - color now guys in order to make the
123:56 - entire Box model have the width of 500
123:59 - pixels and height of 100 pixels what we
124:01 - can do is we can provide the Box sizing
124:04 - property so over here we have something
124:06 - called as box sizing property in this
124:09 - case so this is the property that we can
124:11 - use with the value that is box border so
124:13 - guys this will tell the CSS in order to
124:16 - have the width and height that is being
124:18 - provided inside this diff tag over here
124:21 - to be appli to the entire Box model so
124:24 - let me just save this file now and try
124:26 - reloading this page once again on the
124:27 - browser so now if you see we have 480
124:31 - multiplied by 80 as the width and height
124:34 - of the content over here so basically
124:37 - the content width and height will be
124:39 - adjusted after providing the required
124:42 - spacing for the padding borders and the
124:45 - margins as well if they are provided
124:47 - inside the CSS file so guys basically
124:49 - this is the way in order to provide the
124:52 - entire width and height that is being
124:54 - specified over here inside the CSS to
124:56 - the Box model of the HTML element so
124:59 - simply you can use the Box sizing
125:01 - property with the value that is border
125:03 - box over here so now we will see outline
125:05 - property in CSS so guys basically an
125:08 - outline is a line drawn outside of the
125:11 - element's border so whatever border is
125:14 - being provided to the HTML element you
125:16 - can provide the outline which will
125:18 - appear outside of the border of that
125:21 - particular HTML element and we will
125:23 - check this with the help of examples as
125:25 - well with the help of different outline
125:27 - properties so the very first outline
125:29 - property is the outline style which is
125:31 - the required property over here so guys
125:33 - let us move to the vs code in this case
125:36 - and simply I'm going to remove the
125:37 - previous lines of code that we had
125:39 - written over here and we will have the
125:41 - dev element with a sample text that is
125:43 - lorm which is the Mt abbreviation over
125:46 - here that will help us in order to
125:48 - generate the random text in this case
125:50 - apart from that in the style. CSS file
125:53 - I'll simply remove all the lines of code
125:55 - over here so let me just save these
125:56 - files now and try reloading this page on
125:59 - the browser so as you can see we have
126:01 - the random text that is getting
126:03 - generated and being displayed on the web
126:05 - page now guys what we need to check is
126:07 - the border of this particular HTML
126:10 - element needs to be implemented over
126:12 - here and then after that we are going to
126:14 - provide the outline property as well so
126:16 - the very first property in the style.
126:18 - CSS that we are going to apply is the
126:21 - background color over here so let's say
126:22 - we have the background color and the
126:25 - color is aqua in this case and then
126:27 - apart from this let us say we have the
126:30 - border which is going to be 5 pixels and
126:33 - the Border style will be solid in this
126:35 - case with the color that is black over
126:37 - here so guys we have a border of five
126:39 - pixels that is of the solid style in
126:41 - this case and the color is black so let
126:44 - me just save this file now and try
126:46 - reloading this page once again on the
126:47 - browser so as you can see for this Dev
126:50 - element we have the back round color
126:52 - that is aqua and we have the Border
126:54 - color that is black with 5 pixels width
126:57 - now guys simply we can use the outline
126:59 - style property in order to provide the
127:02 - outline to this particular HTML element
127:05 - so let us check that as well so over
127:07 - here we will provide outline in this
127:09 - case and then as you can see these are
127:11 - the suggestions that is being provided
127:13 - by the vs code over here we will be
127:15 - using the outline style and you can see
127:17 - multiple values in this case for the
127:19 - outline style property so we have dashed
127:22 - value or the dotted double Groove hidden
127:26 - inherit and multiple other values as
127:29 - well so let's say we want to provide the
127:31 - dotted outline style so over here we are
127:33 - going to apply the dotted outline style
127:36 - let me just save this file now and try
127:38 - reloading this page once again on the
127:40 - browser as you can see there is a dotted
127:42 - outline that is getting displayed
127:44 - outside of the border that we had
127:47 - implemented now guys let us change the
127:49 - Border color so that we can identify the
127:52 - outline that is wrapping the border so
127:55 - over here what we will do is instead of
127:57 - having the black color let's say we
127:58 - provide red color border so let me just
128:01 - save this file now and try reloading
128:02 - this page so as you can see after this
128:04 - red color we have the dotted outline
128:07 - over here and that is the meaning of the
128:09 - outline which we can provide outside of
128:11 - the border of the HTML element now guys
128:14 - let us move to another property so we
128:16 - have only provided the outline style so
128:18 - far let us provide the outline width as
128:21 - well of five pixels in this case so when
128:23 - we provide the outline width in this
128:26 - case so basically the width of the
128:28 - outline will be increased and it will be
128:30 - set to five pixels so let me just save
128:32 - this file now and try reloading this
128:34 - page once again on the browser so as you
128:36 - can see this is the dotted outline of 5
128:39 - pixels width that we have provided
128:41 - outside of the border of the HTML
128:44 - element now guys let us move to another
128:45 - attribute we have something called as
128:47 - outline color as well so by default the
128:50 - color of the outline is black color let
128:52 - us provide the outline color in the CSS
128:55 - file so in this case we will provide
128:57 - outline color property and let's say we
129:00 - want to provide the outline color as
129:02 - blue color in this case so let me just
129:04 - save this file now and try reloading
129:06 - this page once again on the browser so
129:08 - as you can see this is the blue color
129:09 - outline that is getting displayed over
129:11 - here outside of the red color border now
129:14 - guys apart from this we can also use the
129:16 - outline shorthand property so similar to
129:18 - The Border property that we have used
129:20 - over here this is the Border shorthand
129:22 - property we can provide the values of
129:24 - all these outline properties inside the
129:27 - outline shorthand property so simply I'm
129:29 - going to comment out these lines of code
129:32 - over here let me just save this file now
129:34 - and try reloading this page once again
129:36 - on the browser so as you can see there
129:38 - is no outline for now so what we are
129:40 - going to do is simply we are going to
129:42 - use the outline shorthand property in
129:44 - this case and one by one we are going to
129:47 - provide all these values so first of all
129:49 - we are going to provide the outline
129:51 - withd so let's say we have five pixels
129:53 - outline over here and then let's say
129:55 - instead of the dotted style we want to
129:57 - have the solid style of the outline so
130:00 - we provide the solid outline style and
130:02 - Then followed by the outline color so
130:04 - let's say we provide the outline color
130:06 - is blue in this case let me just save
130:09 - this file now and try reloading this
130:11 - page once again on the browser so as you
130:13 - can see we have the outline of blue
130:15 - color now which is wrapping the border
130:17 - of red color so this outline style is
130:20 - being set as the solid it outline and
130:22 - that is why you can see the style of the
130:24 - outline is same as that of the style of
130:26 - the border the only difference is the
130:28 - color over here we can change the border
130:30 - and the outline with as well in order to
130:33 - identify the outline and Border colors
130:36 - more clearly so we have updated the
130:38 - border and the outline width as 10
130:40 - pixels over here let me just save this
130:42 - file now and try reloading this page
130:44 - once again on the browser so as you can
130:46 - see this is the border which is having
130:48 - the red color and then we have the blue
130:50 - color outline in in this case now guys
130:52 - apart from this we have something called
130:54 - as outline offset as well which means
130:57 - what should be the space in between the
130:59 - border and the outline so by default we
131:02 - don't have any space in this case in
131:04 - between the outline and the Border
131:06 - colors over here so what if we want
131:08 - certain space let's say we want two
131:10 - pixels of space in between the outline
131:13 - and the border so what we can do is
131:15 - simply we have to provide the outline
131:18 - offset property inside our CSS file so
131:21 - over here we simply have to provide the
131:24 - two pixels withd so that there is a
131:26 - space in between the outline and the
131:28 - border for a particular HTML element so
131:31 - let me just save this file now and try
131:33 - reloading this page once again on the
131:35 - browser so as you can see there is a
131:38 - white space you can see in between the
131:40 - red and the blue color which are
131:42 - representing the border and the outline
131:44 - respectively let us increase the space
131:47 - in between the outline and the bord so
131:49 - over here let's say we provide 5 pixels
131:51 - as the outline offset so let me just
131:54 - save this file now and try reloading
131:55 - this page once again on the browser so
131:58 - as you can see there's a space in
131:59 - between the border and the outline now
132:02 - and that is how the outline offset will
132:04 - work in order to provide certain spacing
132:06 - in between the border and the outline of
132:08 - the HTML element based on your
132:10 - requirements guys in this way you can
132:12 - easily use the properties of the outline
132:14 - over here either by using the outline
132:16 - short end property or the individual
132:19 - properties of the outlines so now we
132:21 - will see text color and Alignment
132:23 - property in CSS so guys basically the
132:26 - color property is used to set the color
132:29 - of the text and apart from this the text
132:32 - align property is used to set the
132:34 - horizontal alignment of a text so we
132:36 - will check this with the help of
132:38 - examples as well in vs code so the very
132:40 - first property that we are going to see
132:42 - related to the text in HTML is the color
132:45 - property so guys let us move to the vs
132:47 - code over here and I'll simply remove
132:49 - the previous lines of code in this case
132:51 - case and basically we are going to have
132:53 - a simple heading that is with the tag H1
132:56 - over here and we will say this is
132:59 - heading one so basically we have the
133:01 - statement that is this is heading one
133:03 - inside the H1 heading tag over here let
133:06 - me just save this file now and we will
133:08 - also clear the lines of code that we had
133:10 - return previously inside the style. CSS
133:13 - so let me just save these files now and
133:15 - try reloading this page on the browser
133:18 - so as you can see we have this is
133:19 - heading one over here now guys by
133:22 - default the color of this text is black
133:24 - color so what if we want to provide the
133:27 - different text color to this heading so
133:30 - let me just go to the style. CSS file
133:32 - over here since the HTML file is linked
133:35 - to the style. CSS by using the link tag
133:37 - in this case so guys over here we will
133:40 - provide the tag name that is H1 and
133:42 - simply we are going to provide the color
133:44 - property over here so as you can see
133:47 - this is the property that we are going
133:48 - to use and we can provide any color in
133:51 - this case in order to be reflected s the
133:53 - text color for this heading that is H1
133:56 - over here so guys what we will do is
133:58 - simply we are going to provide the color
134:00 - that is red color in this case let me
134:03 - just save this file now and try
134:04 - reloading this page once again on the
134:06 - browser so as you can see now the color
134:09 - of this heading is being updated as red
134:11 - color so this is the way that we can use
134:13 - the color property in order to update
134:16 - the text color for a specific HTML
134:19 - element now guys apart from this you can
134:21 - also use the hex color or the RGB values
134:24 - as well for the color value so let's say
134:26 - we want to provide the hex value over
134:28 - here so we provide hashtag followed by
134:30 - the red color component that is double F
134:33 - and then the green color component that
134:35 - is 0 0 and then we have the blue color
134:37 - component that is 0 0 over here so this
134:40 - will be the red color what if we want to
134:42 - mix the red and green color over here so
134:44 - simply we have to provide the 2 * f for
134:47 - the green component as well so it will
134:49 - be updated to this particular color
134:51 - color that is the yellow color over here
134:52 - which is the mixture of red color and
134:55 - the green color so let me just save this
134:56 - file now and try reloading this page so
134:59 - as you can see this is the yellow color
135:01 - that is being displayed on the UI it is
135:03 - not going so well with the white color
135:05 - background over here so let me just
135:07 - change the background color as well so
135:09 - in this case we will provide the
135:11 - background color as black in this case
135:13 - let me just save this file now and try
135:15 - reloading this page so as you can see we
135:17 - have the background color is black and
135:19 - the text color is yellow now so guys
135:21 - this is the way that you can define the
135:23 - color value using the hex value or the
135:25 - color name or the RGB values as well now
135:28 - guys apart from this in order to align
135:30 - the text you can use the text align
135:32 - property as well so by default over here
135:35 - as you can see on the UI the text is
135:37 - being aligned on the left hand side
135:40 - let's say we want this text to be
135:42 - displayed at the center over here of
135:44 - this particular screen so what we can do
135:46 - is simply we can use the text align
135:48 - property so over here we have text
135:51 - hyphen align so this is the text align
135:53 - property that we will be using and it is
135:55 - having multiple values so as you can see
135:57 - Center is the value we also have end
136:00 - justify left right so basically by
136:03 - default this is the value that is left
136:05 - value for the text align which is
136:07 - getting applied on all the HTML elements
136:10 - so over here let's say we want the text
136:12 - to be displayed at the center so simply
136:14 - we provide the center value to the text
136:16 - align property let me just save this
136:18 - file now and try reloading this page one
136:20 - once again on the browser so as you can
136:22 - see the text is getting displayed at the
136:25 - center of the screen now with the help
136:27 - of the text align property similarly if
136:29 - we want this text to be displayed on the
136:31 - right hand side of the screen so what we
136:33 - can do is instead of having the center
136:36 - value we can have the right value over
136:38 - here let me just save this file now and
136:40 - try reloading this page once again on
136:42 - the browser so as you can see we are
136:44 - having this particular text on the right
136:46 - side of the browser so this is the way
136:49 - that the text align property works for a
136:51 - particular text element which is the
136:53 - part of the HTML element now guys apart
136:56 - from this we also have something called
136:57 - as text align last so basically this
137:00 - reflects the alignment of the last line
137:03 - of a particular paragraph so let us
137:04 - check that as well so guys in order to
137:07 - understand this we need to have a
137:09 - paragraph which is having multiple lines
137:11 - over here so let's say we have the P tag
137:13 - we can also have the text inside the Dev
137:15 - tag as well and over here we are going
137:17 - to Simply generate the random text by
137:20 - using the LM M abbreviation so over here
137:23 - we have the simple random text that is
137:26 - getting generated let me just save this
137:28 - file now and try reloading this page so
137:30 - as you can see this is the text that is
137:33 - generated inside the paragraph tag over
137:35 - here now guys what is the meaning of the
137:37 - text align last property so basically
137:40 - the last line over here inside the
137:42 - paragraph will be aligned based on the
137:44 - value that we provide to this text align
137:46 - last property so let us check that as
137:49 - well so over here since we have used
137:50 - used the paragraph tag in the style. CSS
137:53 - property we will be defining the P tag
137:56 - over here and for this tag we are going
137:58 - to provide the text align last property
138:01 - so as you can see this is the property
138:03 - that we are going to use and let's say
138:05 - we want the last line to be at the
138:08 - center of the screen so simply we can
138:09 - provide the center apart from the center
138:12 - we also have many other values as you
138:14 - can see we have justify left right and
138:17 - so on so basically we are going to apply
138:19 - the center value in this case let me
138:21 - just save this file now and try
138:23 - reloading this page once again on the
138:25 - browser so as you can see the last line
138:27 - of this paragraph is now getting
138:29 - displayed at the center of the screen
138:32 - now guys if we want to display it on the
138:34 - right hand side of the screen so what we
138:36 - can do is simply we can provide the
138:38 - right value to this property over here
138:40 - let me just save this file now and try
138:43 - reloading this page so as you can see
138:45 - the last line of the paragraph is now
138:47 - getting displayed on the right of the
138:49 - screen and apart from from that we also
138:51 - have something called as justify value
138:54 - so let us check what happens let me just
138:56 - save this file now and try reloading
138:58 - this page once again on the browser so
139:00 - as you can see every word on this last
139:03 - line is now getting separated with the
139:05 - help of equal spaces in between them so
139:08 - guys if you want the last line of the
139:11 - paragraph to be displayed in this way
139:13 - you can use the justify value for the
139:15 - text align last property inside the CSS
139:19 - file so this is the working of another
139:21 - text align property that you can apply
139:23 - for the last line of a particular
139:25 - paragraph or the div element now guys
139:27 - apart from this we have something called
139:29 - as direction as well so basically this
139:31 - will Define the direction of text which
139:33 - will be displayed on the browser so by
139:35 - default it will be left to right so over
139:37 - here as you can see the direction of the
139:40 - text is from left to right let us check
139:42 - this with another example over here so
139:44 - let's say we have another div tag in
139:47 - this case so simply we are going to have
139:48 - the div tag and we will say this is a
139:52 - test div element so guys basically we
139:54 - have a simple this is a test div element
139:57 - over here let me just save this file now
139:59 - and try reloading this page once again
140:01 - on the browser so as you can see this is
140:03 - a Dev element now guys what is the
140:05 - meaning of Direction CSS property so let
140:09 - us provide that property in the style.
140:11 - CSS file over here so inside this file
140:14 - we are going to provide the diff tag in
140:16 - this case and simply we are going to
140:18 - provide the direction CSS property so
140:21 - guys basically we have the values that
140:23 - is LTR which stands for left to right
140:26 - which is the default value which means
140:28 - the letters will be displayed from left
140:31 - to right and that is the standard way in
140:33 - order to display the letters and apart
140:35 - from that we also have other value that
140:37 - is RTL which stands for right to left so
140:40 - guys let us check what happens in this
140:42 - case so let me just save this file now
140:44 - and try reloading this page once again
140:46 - on the browser so as you can see now the
140:48 - text is getting displayed on the right
140:51 - but in order to reverse this text we
140:53 - have another property so we can use that
140:56 - as well so we have the property that is
140:58 - unic code hyphen BD so guys over here we
141:01 - are going to use this property and we
141:03 - say the value that is BD override so in
141:06 - this case what will happen is the
141:08 - letters will be displayed from the right
141:10 - to left Direction so let me just save
141:12 - this file now and try reloading this
141:14 - page once again on the browser so now if
141:16 - you see the letters are reversed so
141:19 - basically you need to read from the
141:21 - right to the left in order to understand
141:23 - the statement that is being provided
141:25 - inside this Dev element so guys in this
141:28 - way if you want to reverse the direction
141:30 - of the letters that are being displayed
141:32 - on the UI you can use the combination of
141:35 - these two CSS properties that is
141:37 - direction should be RTL and the Unicode
141:39 - BD should be BD hyphen override in this
141:42 - case so Guys these are certain CSS
141:44 - properties as far as the text color and
141:46 - the text alignment is concerned so now
141:49 - we will see text decor oration property
141:51 - in CSS so guys basically the text
141:54 - decoration property is used to format
141:57 - the text using CSS and this we are going
141:59 - to check with the help of examples as
142:01 - well there are multiple properties
142:03 - inside the text decoration and the first
142:06 - property that we are going to use is the
142:08 - text decoration line so guys let us
142:10 - check this with the help of example and
142:12 - vs code over here so I'll simply remove
142:14 - the previous lines of code from the
142:17 - index.html file and also from the style.
142:19 - CSS file F over here basically we have a
142:22 - simple statement that is this is a test
142:24 - div element let me just save this file
142:26 - now and try reloading this page on the
142:28 - browser so as you can see this is the
142:31 - div tag inside which we have the
142:33 - statement that is this is a test div
142:36 - element now guys what is the meaning of
142:37 - the text decoration line so over here we
142:40 - have the CSS property that we can Define
142:43 - inside the style. CSS file so let us
142:45 - move to the style. CSS file here so guys
142:49 - basically this is the property that we
142:50 - are going to use and you can see there
142:52 - are multiple values for this text
142:54 - decoration line such as line through and
142:57 - then we have over line underline and
143:00 - none so guys basically the value that is
143:02 - underline will help us in order to
143:04 - underline this particular text inside
143:06 - the dev element so let us check that
143:08 - with the help of the underline value so
143:11 - let me just save this file now and try
143:13 - reloading this page on the browser so as
143:15 - you can see the text is getting
143:17 - underlined over here so the text
143:19 - decoration line helps us in order to
143:21 - provide a line to the text in this case
143:23 - apart from underline we have other
143:25 - values as well so let us check what is
143:27 - the meaning of line through over here so
143:29 - let me just save this file now and try
143:31 - reloading this page once again on the
143:33 - browser so it will be kind of a strike
143:35 - through in this case where the text will
143:37 - be displayed behind the strike through
143:39 - over here with the help of the line
143:41 - through value apart from this we also
143:44 - have other value as well so let us check
143:46 - that so we have something called as
143:48 - overline over here so let me just save
143:50 - this this file now and try reloading
143:52 - this page once again on the browser so
143:54 - similar to underline a line will be
143:56 - drawn above the text with the help of
143:58 - the overline value for the text
144:00 - decoration line so guys this is the way
144:02 - that we can provide the different values
144:04 - for the text decoration line over here
144:07 - simply we will provide the value that is
144:09 - underline so let us reload this page
144:11 - once again so the text is getting
144:13 - underlined now inside this div element
144:16 - now guys apart from this we can also
144:18 - have the text decoration color so let us
144:20 - apply the color to this underline that
144:22 - we have provided to this Dev element so
144:25 - inside the Dev tag simply we are going
144:27 - to provide text decoration hyphen color
144:30 - so this is the property that we are
144:32 - going to use and let us say we want to
144:34 - provide red color as the color for the
144:36 - underline so let me just save this file
144:38 - now and try reloading this page once
144:40 - again on the browser so as you can see
144:43 - the underline is having the red color
144:45 - now with the help of the text decoration
144:47 - color apart from that we also have
144:49 - something called as text decoration
144:51 - style so let us check what will be the
144:53 - values of the text decoration style over
144:55 - here so we simply have to provide text
144:58 - decoration hyphen style in this case so
145:01 - this is the CSS property and as you can
145:03 - see we have multiple values over here by
145:05 - default the value will be solid in this
145:08 - case so let us provide the dashed value
145:10 - to the text decoration style let me just
145:13 - save this file now and try reloading
145:15 - this page once again on the browser so
145:17 - this is the text decoration style that
145:19 - is having the dashed value in this case
145:21 - apart from that we can also provide the
145:23 - dotted value as well so let us check how
145:26 - it looks like so now the underline is
145:28 - getting represented with the help of the
145:30 - dots for this particular HTML element
145:33 - now guys apart from that we have
145:34 - something called as text decoration
145:36 - thickness so basically you can provide
145:39 - the width of the underline that is being
145:41 - provided to the HTML element so we can
145:44 - use this thickness property in order to
145:47 - provide the width of the underline so
145:49 - over here we have the text decoration
145:51 - thickness in this case so this is the
145:54 - CSS property that we will be using and
145:56 - let's say we provide 5 pixels as the
145:58 - thickness for this underline let me just
146:00 - save this file now and try reloading
146:02 - this page once again on the browser so
146:05 - as you can see this is the five pixels
146:07 - dotted underline that we can see for
146:08 - this HTML element let us change the
146:11 - style to the solid value so that it
146:13 - looks more decent over here so when we
146:15 - change the value of the text decoration
146:17 - style in this case as solid let me just
146:19 - save this file now and try reloading
146:21 - this page as you can see this is the
146:23 - solid underline with the color red and
146:26 - having the width as 5 pixels with the
146:28 - help of the text decoration thickness
146:30 - CSS property so guys in this way you can
146:33 - easily use all these text decoration
146:36 - properties based on your requirements
146:38 - and apart from that you can also provide
146:40 - the simple text decoration CSS property
146:43 - that is the shorthand property in order
146:46 - to provide the values for all these CSS
146:48 - properties so guys let us check check
146:50 - that as well so I'll simply remove all
146:52 - these lines of code over here and simply
146:54 - let me just save this file now and try
146:56 - reloading this page once again on the
146:58 - browser so there is no text decoration
147:00 - that is being provided right now so what
147:03 - we can do is simply we can provide the
147:05 - text decoration shorthand property in
147:08 - this case and simply we are going to
147:10 - provide all these values one at a time
147:12 - over here so first of all the text
147:14 - decoration line should be underline
147:16 - followed by the space character and then
147:19 - the color of the underline should be red
147:21 - color followed by the style which should
147:23 - be the solid style in this case and
147:25 - let's say we want the text decoration
147:27 - thickness to be 7 pixels so simply we
147:29 - will provide the seven pixels over here
147:32 - so guys this is the sequence that we can
147:34 - provide inside the text decoration
147:36 - shorthand property that will allow us
147:38 - with the help of a single line of code
147:41 - provide all the text decoration CSS
147:43 - properties now let me just save this
147:45 - file now and try reloading this page
147:47 - once again on the browser so as you can
147:49 - see there is a underline that is being
147:51 - provided to this HTML element based on
147:54 - the text decoration values that we have
147:56 - provided over here now instead of
147:58 - underline let us say we want it to be
148:00 - the overline text decoration in this
148:03 - case so simply instead of underline we
148:05 - will say overline over here as the value
148:08 - for the text decoration line so let me
148:10 - just save this file now and try
148:12 - reloading this page once again on the
148:14 - browser so as you can see we have the
148:16 - over line now for this particular HTML
148:19 - element so guys this is the way that you
148:21 - can use the different text decoration
148:23 - properties and they are well used inside
148:26 - the HTML and the CSS code based on your
148:29 - requirements to be displayed on the web
148:31 - page now guys apart from this as you
148:33 - know that all the links in HTML are
148:35 - underlined by default so basically it is
148:38 - not a good practice in order to manually
148:40 - underline a particular text value inside
148:43 - the web page since a default way of
148:45 - providing the links to HTML is having
148:47 - the underline to that particular text
148:50 - which is the hyperlink but sometimes you
148:52 - will see that the links are styled with
148:54 - no underline and how that is done with
148:56 - the help of text decoration value that
148:59 - is set to none and it is used to remove
149:01 - the underline from links so guys let us
149:04 - check that as well with the help of
149:05 - example over here so what we will do is
149:08 - let us have the anchor tag over here
149:10 - which will help us in order to provide a
149:12 - link so over here we have a tag followed
149:15 - by href inside which we are going to
149:17 - provide the URL of a specific web page
149:20 - so over here we don't want it to be
149:21 - redirected to any other web page so we
149:24 - will simply provide the hash character
149:26 - over here and simply we will say click
149:28 - here in this case so when we say click
149:30 - here this is the text which will appear
149:33 - as a link on our web page so guys let me
149:35 - just save this file now and try
149:37 - reloading this page once again on the
149:38 - browser so as you can see this is the
149:40 - link that is getting displayed and by
149:42 - default there's a underline as you can
149:45 - see with the help of a blue color over
149:47 - here now guys let us say we don't want
149:49 - this underline to will be displayed for
149:50 - this particular link so what we can do
149:52 - is simply inside the style. CSS file for
149:56 - this a tag we will Define the text
149:58 - decoration so over here we provide the a
150:00 - tag in this case and inside this we will
150:03 - say text decoration over here and simply
150:06 - for this text decoration CSS property we
150:09 - will assign the value that is none in
150:11 - this case so guys the meaning of none
150:13 - over here is basically no text
150:15 - decoration will be applied to this tag
150:17 - that is the a tag in this case so guys
150:19 - let me just save this file now and try
150:21 - reloading this page once again on the
150:23 - browser before reloading you can see
150:25 - that there is an underline for this
150:26 - click here Link in this case but when we
150:29 - reload this page as you can see there is
150:31 - no underline now for this particular
150:33 - link so guys this is the way that you
150:35 - can remove the underline from all the
150:38 - links on your web page by using the text
150:40 - decoration which should be having the
150:43 - value as none that will remove all the
150:45 - underlines from the link which is being
150:47 - displayed by default so now we will see
150:49 - TT text transformation property in CSS
150:52 - so guys basically the text transform
150:55 - property is used to specify the
150:58 - uppercase and the lowercase letters in a
151:00 - text so guys let us check this with the
151:02 - help of examples in vs code over here so
151:05 - simply I'll remove the previous lines of
151:07 - code that we had written in the HTML and
151:09 - the CSS file over here and in the HTML
151:12 - file simply we are going to have a tag
151:14 - which is representing the heading two
151:16 - with the help of h2 tag in this case and
151:18 - we will say the this is heading two so
151:22 - guys basically we have simply defined
151:24 - the text that is this is heading two
151:26 - over here let me just save this file now
151:28 - and try reloading this page on the
151:30 - browser so as you can see we have the h2
151:33 - tag with the text that is this is
151:34 - heading to now guys let us say we want
151:37 - all the characters that is all the
151:39 - letters inside this heading to be
151:42 - uppercase letters so what we can do is
151:44 - simply inside the style. CSS file we
151:47 - have to define the tag in this case we
151:49 - will Define h2 tag over here and simply
151:51 - we have the text transform property
151:54 - which is a CSS property that can help us
151:56 - in order to provide the uppercase or the
151:59 - lowercase letters for the text inside
152:01 - the HTML elements so as you can see it
152:04 - has multiple values we have capitalize
152:06 - then we have lowercase we have none and
152:09 - then uppercase so guys by default the
152:11 - none value is being applied to all the
152:13 - HTML elements but in case we want all
152:16 - the letters to be uppercase simply we
152:18 - can provide the uppercase value over
152:20 - here so let me just save this file now
152:22 - and try reloading this page once again
152:24 - on the browser so as you can see all the
152:27 - characters over here in this case are
152:29 - uppercase and this is the way that we
152:30 - can use the text transform property with
152:33 - the help of the value that is uppercase
152:35 - in this case now guys apart from this
152:37 - let us say we want all the letters to be
152:39 - lower case so what we can do is let's
152:42 - say we have another paragraph over here
152:44 - so simply inside the HTML we will say P
152:47 - tag in this case and we type this this
152:50 - is a simple paragraph So guys if you
152:54 - notice we have typed all the letters in
152:56 - the uppercase over here so that we can
152:58 - see how the lowercase value for the text
153:00 - transform will work for this paragraph
153:02 - tag so let me just save this file now
153:05 - and try reloading this page once again
153:06 - on the browser so as you can see by
153:08 - default all the letters are uppercase
153:11 - over here so what we can do is let's say
153:13 - we want all the letters to be lowercase
153:15 - for this P tag so simply we will provide
153:17 - the P tag over here inside this tag CSS
153:20 - property and again we will be using the
153:22 - text transform property in this case and
153:25 - this time we will be using the value as
153:27 - lower case so when we say lower case all
153:29 - the letters for this text inside the
153:32 - HTML element that is the P tag will be
153:35 - converted to lower case let me just save
153:37 - this file now and try reloading this
153:39 - page once again on the browser so as you
153:41 - can see all the letters are being
153:44 - displayed as lowercase letters now guys
153:46 - apart from that we have another value
153:48 - that is capitalized so let us check that
153:50 - as well so inside the HTML file in this
153:53 - case let us say we have the div element
153:56 - and this time we will type all the
153:58 - letters in lower case so simply we will
154:00 - say this is a test Dev element so guys
154:05 - over here all the letters are in lower
154:07 - case so this is a test Dev element is
154:10 - the text that we have written inside the
154:12 - dev element let me just save this file
154:14 - now and try reloading this page once
154:16 - again on the browser so as you can see
154:18 - all the letters for this div element is
154:20 - in lower case now so what we can do is
154:23 - simply we come to the style. CSS file
154:25 - and for the div tag we want to apply the
154:28 - text transform property so over here we
154:31 - say text transform and this time we
154:33 - select capitalize value so guys what
154:36 - will happen when we say capitalize as
154:38 - the value for the text transform let us
154:40 - check that so let me just save this file
154:42 - now and try reloading this page once
154:45 - again on the browser so as you can see
154:47 - the first letter of all the words are
154:49 - now being converted to the uppercase
154:51 - letter now so the word that is this is
154:54 - having the first letter as uppercase and
154:56 - then we have this I as the uppercase
154:59 - then we have a as uppercase t is also
155:02 - uppercase and then this D inside the dev
155:04 - is also uppercase and the last word that
155:07 - is element is also having the e letter
155:09 - as uppercase letter over here so guys
155:12 - this is the meaning of capitalize value
155:14 - for the text transform which means the
155:16 - first letter in all the words will be
155:19 - converted to the uppercase letter and it
155:21 - will be displayed on the web page based
155:23 - on your requirements so guys we have
155:25 - seen all the values of the text to
155:26 - transform this is the uppercase value
155:28 - then we have the lowercase value and
155:30 - then we have the capitalized value and
155:33 - in this way you can set the text
155:34 - transform value based on your
155:36 - requirements so now we will see text
155:38 - spacing property in CSS so guys
155:41 - basically there are multiple text
155:43 - spacing properties in CSS that we can
155:46 - use and we are going to check this with
155:48 - the help of examples as well so the very
155:50 - first property is text indent which will
155:53 - help us to specify the indentation of
155:56 - the first line of the text so guys let
155:59 - us check this with the help of example
156:00 - in VSS code so in the vs code we will
156:03 - remove the previous lines of code that
156:05 - we had return previously in the HTML
156:07 - file as well as the CSS file we will
156:10 - remove all the content so guys in this
156:13 - case what we are going to do is we are
156:15 - simply going to have a Dev element over
156:17 - here and inside this Dev element we will
156:19 - simply generate the text with the help
156:21 - of the lurm m at abbreviation and then
156:24 - let's generate multiple sentences so
156:26 - over here I'll just multiplied by two so
156:28 - that random text is getting generated
156:31 - over here now guys let me just save this
156:33 - file now and try reloading this page on
156:35 - the browser so as you can see there are
156:37 - multiple lines inside this div HTML
156:40 - element now guys what we will do is we
156:42 - will be using the text indent property
156:45 - and check how we can do the indentation
156:47 - of the first line of of the text so
156:50 - basically this is the first line inside
156:53 - this entire text over here and there
156:55 - will be certain indent that will be
156:57 - provided on this first line by indent we
157:00 - mean there will be some space that will
157:02 - be provided before the start of the
157:04 - statement over here so let us check that
157:06 - in vs code so over here inside the
157:08 - style. CSS file we will provide the div
157:12 - HTML element and simply we are going to
157:14 - say text hyphen indent in this case so
157:18 - guys basically we are going going to
157:19 - provide let's say 20 pixels of text
157:22 - indent over here so this is the space
157:24 - that will be provided for the first line
157:26 - of the entire text so let me just save
157:29 - this file now and try reloading this
157:31 - page on the browser once again so as you
157:33 - can see this is the 20 pixels text
157:36 - indent that is provided over here let us
157:39 - increase the indent to 50 pixels so that
157:41 - we can see it more clearly that some
157:43 - kind of indentation is provided on the
157:46 - first line let me just save this file
157:48 - now and try reloading this page once
157:50 - again on the browser so as you can see
157:52 - this is the 50 pixels text indent that
157:55 - is being provided which helps us in
157:57 - order to provide certain spacing for the
158:00 - first line of the entire text in this
158:02 - HTML element so guys in this way the
158:05 - text inent property will work in CSS now
158:08 - let us move to another property that is
158:11 - letter spacing so guys basically there
158:13 - is a default spacing that is being used
158:15 - over here in between each character that
158:18 - is being displayed in inside this HTML
158:20 - element so we can update that spacing
158:23 - with the help of the letter spacing
158:26 - which helps us to specify the space
158:28 - between the characters in a text so let
158:30 - us check that as well so inside the CSS
158:33 - file we will provide letter spacing DSS
158:36 - property so this is the property that we
158:38 - are looking for and let's say we provide
158:40 - five pixels of letter spacing so let us
158:43 - check what happens over here so let me
158:45 - just save this file now and try
158:46 - reloading this page once again on the
158:48 - browser so as you can see we have five
158:51 - pixels of spacing in between the
158:54 - characters that are present inside this
158:56 - text and that is how the letter spacing
158:58 - will work so in case you want certain
159:01 - spacing to be provided apart from the
159:03 - default spacing that is provided to the
159:05 - text we can use the letter spacing over
159:08 - here let us reduce the letter spacing to
159:10 - two pixels let me just save this file
159:12 - now and try reloading this page once
159:14 - again on the browser so as you can see
159:17 - the two pixels letter spacing helps us
159:19 - in order to read the text properly so
159:21 - you can use it based on your
159:23 - requirements now let us move to another
159:25 - property over here so we have something
159:27 - called as line height in this case which
159:30 - will specify The Space Between the Lines
159:32 - so guys basically the letter spacing
159:34 - helps us in order to provide the space
159:37 - in between the characters but what if we
159:39 - want to provide the spacing in between
159:41 - the lines over here so as you can see
159:44 - there's a spacing in between the first
159:46 - line and the second line over here which
159:48 - is currently being handled by the line
159:50 - height property and this is the property
159:52 - we are going to check so guys let us
159:54 - provide this property as well inside the
159:57 - CSS file so over here we will provide
160:00 - line hyphen height property in this case
160:03 - and let us provide five pixels s the
160:05 - line height over here let us check what
160:07 - will happen so let me just save this
160:09 - file now and try reloading this page
160:11 - once again on the browser so as you can
160:14 - see now the line height is very small
160:16 - since we have provided five pixels the
160:18 - lines are overlapping each other so let
160:21 - us increase the line height to let's say
160:23 - 20 pixels in this case so over here we
160:25 - will provide 20 pixels as the line
160:27 - height let me just save this file now
160:29 - and try reloading this page once again
160:31 - on the browser so as you can see the
160:33 - line height has increased so if we
160:35 - comment out this line over here so let
160:37 - me just comment out this line and check
160:39 - the line height once again so guys this
160:41 - is the default line height that is being
160:43 - provided on the UI and the moment we
160:46 - provide the line height over here with
160:48 - some number so let's say we increase the
160:50 - line height to 25 pixels in this case so
160:53 - when we provide 25 pixels over here let
160:55 - me just save this file now and before
160:57 - reloading you will notice that the space
161:00 - in between the corresponding lines will
161:02 - increase so when we reload this page as
161:05 - you can see the space in between the
161:07 - lines are increased over here now let us
161:10 - move to another text spacing property
161:12 - and we have something called as word
161:14 - spacing in this case which specify the
161:16 - space between the words in a text so
161:19 - guys basically there are spaces in
161:21 - between the multiple words over here
161:23 - that is being provided inside this text
161:26 - how we can increase or decrease that
161:27 - space we can do so by using the word
161:30 - spacing over here so let me provide that
161:32 - word spacing CSS property as well so in
161:35 - this case we provide word spacing and
161:37 - let's say we provide the spacing of 10
161:40 - pixels in this case so spaces in between
161:42 - the words of the text should be set to
161:44 - 10 pixels in this case let me just save
161:46 - this file now and when we reload this
161:48 - page you you will notice that the space
161:50 - in between the words will increase so
161:52 - when we reload as you can see the width
161:54 - of this space has increased over here in
161:57 - between the words with the help of the
161:59 - word spacing CSS property so Guys these
162:01 - are some of the text spacing properties
162:04 - that you can use based on your
162:05 - requirements so comment in the comment
162:07 - section below whether you have learned
162:08 - something out of this video please make
162:10 - sure that you like this video so that it
162:12 - reaches to more people and subscribe to
162:14 - this channel so that you get the
162:16 - notifications on upcoming videos as well
162:18 - the next video that we are going to talk
162:20 - about is text Shadow property in CSS so
162:24 - stay tuned so now we will see text
162:26 - Shadow property in CSS so guys basically
162:30 - the text Shadow property adds the shadow
162:32 - to the text that is present inside the
162:35 - HTML element and this we are going to
162:37 - check with the help of examples as well
162:39 - and this is the syntax that we will be
162:41 - using that is text Shadow property and
162:44 - then we have the horizontal and the
162:46 - vertical measurements to be provided
162:48 - where the shadow will appear over here
162:51 - and then followed by the optional color
162:53 - value as well and apart from that we
162:55 - will also see some other attributes that
162:57 - we can use inside the text Shadow
163:00 - property so guys let us check this with
163:02 - the help of example in vs code over here
163:04 - so basically I'm going to remove the
163:06 - previous lines of code that we had
163:08 - written in the HTML file and the CSS
163:11 - file as well and now we are simply going
163:13 - to have a simple paragraph over here
163:15 - using the P tag inside the HTML and we
163:18 - will say this is a paragraph So guys we
163:21 - have a very simple statement that is
163:23 - this is a paragraph in this case let me
163:25 - just save this file now and try
163:27 - reloading this page once again on the
163:29 - browser so as you can see we have this
163:31 - is a paragraph now guys what if we want
163:33 - to provide the text Shadow to this
163:36 - paragraph over here so let us check by
163:38 - using the text Shadow CSS property so
163:41 - inside the style. CSS we will be using
163:43 - the P tag in this case since we have
163:46 - provided the text inside the paragraph
163:48 - tag over here and then we will say textt
163:51 - shadow so guys basically this is the
163:53 - property that is text hyphen shadow that
163:56 - we will be using and for this property
163:58 - we will be providing the horizontal and
164:00 - vertical measurement is 2 pixels and
164:02 - Then followed by space and then vertical
164:05 - measurement as 2 pixels over here let me
164:07 - just save this file now and let us check
164:09 - what happens when we provide the text
164:11 - Shadow property with these values so let
164:14 - me just reload this page once again on
164:16 - the browser so as you can see there's a
164:18 - shed that is being provided to this text
164:21 - behind this particular text over here
164:23 - with the measurements that is 2 pixels
164:25 - at the horizontal and two pixels at the
164:28 - vertical side so guys in this way you
164:30 - can provide the text Shadow over here
164:32 - now guys this particular Shadow is
164:34 - confusing us and it is not helping us to
164:36 - read the text properly so what we will
164:38 - do is we will color the shadow over here
164:41 - so after the measurements that we have
164:43 - provided simply we can provide the color
164:45 - for the shadow so let's say we provide
164:47 - the color as red in this this case let
164:50 - me just save this file now and try
164:51 - reloading this page once again on the
164:53 - browser so as you can see there is a red
164:55 - color for the shadow that is being
164:57 - provided over here so in this way we can
164:59 - also provide the color to the shadow in
165:01 - this case guys what if we provide zero
165:04 - pixels for the horizontal and vertical
165:06 - directions so let us check that as well
165:08 - so when we provide Zer pixels of
165:10 - measurements to the text Shadow let me
165:13 - just save this file now and try
165:14 - reloading this page once again on the
165:16 - browser as you can see the shadow is
165:19 - just behind the actual text over here
165:21 - and this is the reason we won't be able
165:23 - to see the shadow for this particular
165:25 - text in this case and that is why we
165:27 - provide certain horizontal and vertical
165:29 - measurements over here so let us provide
165:32 - that as well this time let us provide
165:34 - one pixels of horizontal and vertical
165:36 - measurements in this case let me just
165:38 - save this file now and try reloading
165:40 - this page so as you can see there is a
165:42 - red color shadow that is being displayed
165:44 - behind the scenes now guys there is
165:45 - something called as blur effect that you
165:48 - can provide to this text Shadow over
165:50 - here so how we can provide the blur
165:52 - effect so after the vertical and
165:54 - horizontal measurements that we have
165:55 - provided simply we can provide another
165:58 - measurement over here that will reflect
166:00 - the blur effect so let's say we provide
166:02 - four pixels over here as the measurement
166:04 - let me just save this file now and try
166:06 - reloading this page once again on the
166:08 - browser so as you can see this is the
166:10 - blur effect on the shadow that we have
166:13 - provided behind this text so guys
166:15 - basically this third measurement is used
166:18 - in order to blur the shadow that is
166:21 - being displayed with the help of this
166:23 - color over here so let us increase the
166:26 - horizontal and vertical measurements
166:27 - over here as well to see how it will
166:29 - look like on the UI let me just save
166:32 - this file now and try reloading this
166:33 - page once again on the browser so as you
166:36 - can see the horizontal and vertical
166:37 - measurements has increased the size of
166:40 - the Shadow as well and this is the blur
166:42 - effect that you can provide in order to
166:45 - make the text more readable and if we
166:47 - provide the measurements as 0 pixels
166:49 - over here so the shadow will be just
166:51 - behind the text but it will be displayed
166:54 - since we have provided the measurements
166:56 - for the blur effect over here so let me
166:58 - just save this file now and try
166:59 - reloading this page once again on the
167:01 - browser so as you can see just behind
167:03 - the actual text we are also getting the
167:05 - red color shadow but with a blur effect
167:08 - which is making this text look more
167:10 - decent over here on the UI so guys in
167:12 - this way you can provide the shadow to
167:14 - the text based on your requirements now
167:16 - let us change the color of this text to
167:18 - White White and the shadow color to
167:20 - Black in this case so let us check that
167:23 - as well what we will do is we will
167:25 - provide the color as white color over
167:27 - here and instead of red color for the
167:29 - text Shadow we will provide black color
167:32 - in this case let me just save this file
167:34 - now and try reloading this page once
167:36 - again on the browser so as you can see
167:38 - this is the white color text with a
167:41 - black color shadow in this case and this
167:43 - is how it will look like and let us do
167:45 - the reverse of this so what will happen
167:47 - when we provide the col color as black
167:50 - and the text Shadow as white color in
167:52 - this case so when we do that but since
167:55 - we have the background as white color so
167:57 - you won't be able to see the effect
167:59 - properly so let us check that as well
168:01 - I'll save this file now and try
168:03 - reloading this page so as you can see
168:05 - the white shadow is not that visible
168:06 - over here let us provide certain
168:08 - background color in this case as well so
168:11 - when we provide the background color of
168:12 - let's say gray color over here so let me
168:15 - just save this file now and try
168:17 - reloading this page so as you can see to
168:19 - some extent there is a white color
168:21 - behind this black color text So based on
168:23 - your requirements you can choose the
168:25 - color of the text as well as of the
168:27 - shadow in order to display the text on
168:29 - the screen comment in the comment
168:31 - section below whether you have learned
168:33 - something out of this video please make
168:34 - sure that you like this video so that it
168:36 - reaches to more people and subscribe to
168:38 - this channel so that you get the
168:40 - notifications on upcoming videos as well
168:42 - the next video that we are going to talk
168:44 - about is fonts in CSS so stay tuned so
168:48 - now we will see fonts in CSS so guys
168:51 - basically there are multiple properties
168:53 - related to fonts in CSS and this we are
168:56 - going to check with the help of examples
168:58 - as well so basically the first property
169:00 - is the font family which will help us in
169:03 - order to specify the font of a text so
169:06 - guys let us check this with the help of
169:08 - example in vs code over here so simply
169:10 - I'm going to remove the previous line of
169:12 - code that we had return from the HTML
169:15 - and the CSS files as well so in the HTML
169:18 - file we are going to have the div
169:20 - element in this case and let us generate
169:23 - some random text over here so as you can
169:25 - see we have generated the random text
169:27 - using the lurm M abbreviation let me
169:30 - just save this file now and try
169:31 - reloading this page on the browser so as
169:34 - you can see this is the text that we
169:36 - have written inside our Dev element now
169:38 - guys this is the default font family
169:40 - over here we have not provided any font
169:43 - family in our external CSS file so how
169:46 - do we provide the font family in the
169:49 - style. CSS file over here so simply we
169:52 - are going to go inside the style. CSS
169:54 - file and for the div element we are
169:57 - going to set the font family in this
169:59 - case now guys when we provide the font
170:01 - family property as you can see there are
170:04 - multiple values in this case to be
170:06 - provided as the font family now guys
170:09 - what is the meaning of these multiple
170:11 - values that are separated by comma so
170:14 - over here let us say we want to provide
170:15 - the aial font family so when we select
170:18 - this as you can see the first font
170:20 - family is aial and Then followed by
170:23 - comma we have something called as
170:24 - helvetica and then we have sense s so
170:27 - guys basically this is nothing but a
170:29 - fallback mechanism that will work in
170:32 - such a way that first of all the web
170:34 - browser will check whether the aial font
170:36 - family is being installed locally on
170:39 - that particular browser and if yes then
170:41 - the text will be applied this particular
170:44 - font family and if not then the
170:46 - helvetica will be checked whether it is
170:48 - is present or not and if it is present
170:50 - then helvetica will be provided and if
170:53 - this is also not present then s siif is
170:55 - the generic font family name that will
170:58 - be applied which is having the group of
171:00 - different values for the font family
171:03 - over here so guys basically the last
171:05 - name for the font family CSS property
171:07 - will be the generic font family so as
171:09 - you can see it specifies a prioritized
171:11 - list of font family names or generic
171:14 - family names so some of the browser
171:16 - versions might not have the first or the
171:18 - the second font family value and this is
171:20 - the fallback mechanism that is being
171:22 - used over here now guys let us check how
171:25 - this font family will be displayed on
171:26 - the UI so let me just save this file now
171:29 - and try reloading this page on the
171:31 - browser so as you can see the font has
171:33 - been updated now with the help of the
171:35 - font family CSS property similarly if we
171:38 - provide some other font family over here
171:40 - so let's say we provide Times New Roman
171:43 - font family in this case so first of all
171:45 - this Times New Roman will be checked
171:47 - whether the browser is having this
171:48 - particular font family if not then this
171:51 - times font family will be checked and if
171:54 - this is also not present then the siif
171:56 - generic family will be applied to the
171:58 - text over here so guys let me just save
172:00 - this file now and try reloading this
172:02 - page before reloading you will be seeing
172:04 - that the font family will be updated
172:06 - over here to Times New Roman so when we
172:09 - reload this page as you can see this is
172:12 - the text that is being displayed with
172:13 - the font family of Times New Roman over
172:16 - here let us update to some other font
172:19 - Family Value in this case so let us
172:21 - select Verana over here so let me just
172:23 - save this file now and try reloading
172:25 - this page once again on the browser so
172:27 - as you can see the font family has been
172:29 - updated over here and this is how you
172:31 - can apply the font family to your text
172:33 - based on your requirements now guys let
172:35 - us move to another property over here so
172:38 - we have something called as font style
172:39 - in this case which will specify whether
172:42 - the text needs to be displayed as it so
172:45 - guys let us check that as well so over
172:47 - here simply we can provide font style
172:49 - CSS property and for this style we have
172:52 - multiple values that is italic or normal
172:55 - or obl so guys basically by default we
172:57 - have the normal value so let us see how
173:00 - the text will be displayed when we
173:02 - provide the value as italic for font
173:05 - family CSS property so let me just save
173:07 - this file now and try reloading this
173:09 - page once again on the browser as you
173:11 - can see the value of ITC is being
173:13 - provided over here as the font style CSS
173:17 - property now guys let us move to another
173:19 - CSS property we have something called as
173:21 - font weight over here so let us check
173:23 - that as well which will help us in order
173:25 - to specify the weight of the font so
173:28 - guys over here simply we will say font
173:30 - weight property and we have multiple
173:32 - numbers that we can provide also we can
173:35 - provide the value that is bold over here
173:37 - or Bolder or lighter so by default we
173:40 - have the value that is normal so what if
173:42 - we provide the Bold value in this case
173:44 - let me just save this file now and try
173:46 - reloading this page once again on the
173:48 - browser so as you can see this is the
173:50 - meaning of bold font weight in this case
173:53 - and based on your requirements if you
173:55 - want to display the text in this way you
173:57 - can provide the font weight over here
173:59 - now guys let us move to another property
174:01 - we have something called as font size in
174:03 - this case which sets the size of the
174:05 - text and we can use the various units
174:07 - which is pixels and EM over here so guys
174:10 - let us check this with the help of
174:11 - example in vs code so let us have
174:13 - another paragraph in this case so we
174:15 - will have the P tag over here and then
174:17 - simply we will say this is a paragraph
174:20 - So guys we are going to apply the font
174:22 - size property on this paragraph let me
174:24 - just save this file now and try
174:26 - reloading this page once again on the
174:28 - browser so as you can see this is a
174:30 - paragraph text is getting displayed so
174:32 - guys how do we provide the font size
174:34 - property to this paragraph so simply we
174:36 - are going to come in this CSS file we
174:39 - are going to provide the P Tex and we
174:41 - are going to say font size in this case
174:44 - so guys by default the font size is 16
174:47 - pixels on most of the browsers and let's
174:49 - say we want to provide 22 pixels as font
174:52 - size so let me just save this file now
174:54 - and try reloading this page once again
174:56 - on the browser so as you can see the
174:58 - size of this particular font has
175:00 - increased to 22 pixels let us inspect
175:03 - this element so when we right click on
175:05 - this HTML element and click on the
175:07 - inspect option you will be seeing all
175:10 - the CSS properties that are being
175:12 - provided to this paragraph tag over here
175:14 - when we uncheck this font size as you
175:17 - can see this is the default font size
175:18 - for the paragraph tag and when we check
175:21 - it with the 22 pixels value the text is
175:23 - getting displayed with the help of font
175:25 - size of 22 pixels if we increase the
175:28 - size to 26 pixels so over here when we
175:31 - change it to 26 you will notice on the
175:33 - UI that the size will increase over here
175:36 - so when we make it as 26 pixels as you
175:38 - can see the size of the paragraph has
175:40 - increased more so in this way you can
175:42 - provide the various font size to the
175:44 - text let me just reload this page once
175:46 - again on the browser so so that the
175:48 - changes that we have made on the CSS
175:50 - file is getting reflected on the page
175:53 - and guys apart from this we have
175:54 - something called as em unit as well so
175:57 - basically 1 em is equal to the current
176:00 - font size and by default the current
176:02 - font size that is the text size in the
176:05 - browsers is 16 pixels so when we provide
176:08 - 1 em as the font size over here it will
176:10 - be the default font size of the browser
176:13 - so let us check that as well we provide
176:15 - 1 em as the font size in this case let
176:18 - me just save this file now and try
176:20 - reloading this page so as you can see
176:22 - this is by default 16 pixels over here
176:25 - if you want to double this size that is
176:27 - 32 pixels simply we can provide 2 em in
176:29 - this case so let me just save this file
176:31 - now and try reloading this page once
176:34 - again on the browser so this is the 32
176:36 - pixels font size that is getting
176:38 - displayed over here now guys what if we
176:40 - want to make the size as 28 pixels so
176:43 - simply we can come to calculator over
176:45 - here and for this 28 pixels we are going
176:48 - to divide it by 16 since 1 em is equal
176:51 - to 16 pixels so we need to get a number
176:54 - that is corresponding to the EM unit for
176:57 - which the pixels unit is 28 so let me
176:59 - just check that as well so it is 1.75 em
177:03 - so guys basically the EM unit also
177:06 - allows you to provide the numbers in
177:08 - decimal so let us check this as well
177:10 - when we provide 1.75 em over here what
177:13 - will happen so we have provided 1.75 em
177:17 - let me just save this file now and try
177:19 - reloading this page once again on the
177:21 - browser so as you can see the size has
177:23 - been updated to 1.75 Em which is
177:27 - equivalent to 28 pixels over here and if
177:30 - we want to make it as 24 pixels simply
177:32 - we will say 1.5 Em which will correspond
177:35 - to the 24 pixels if you calculate this
177:38 - so when we say 24 ided 16 it will give
177:42 - us 1.5 s the EM unit so guys let me just
177:45 - save this file now and try reloading
177:47 - this p page once again on the browser so
177:50 - as you can see this is the 24 pixels or
177:52 - 1.5 em font size for this particular
177:55 - text now guys it is very important that
177:57 - we use the text size that is the font
178:00 - size with the help of the EM unit so
178:02 - that on different browsers the text is
178:04 - automatically scaling up or down and it
178:07 - is recommended in order to use a
178:09 - combination of percent as well in the
178:11 - body tag along with this em so guys
178:14 - inside this style. CSS file simply we
178:17 - can say body and then for the font size
178:20 - property over here so simply we are
178:22 - going to say font size as 100% so guys
178:26 - what will happen is the font size for
178:28 - all the HTML elements inside the body
178:31 - will be set as 100% and whenever we are
178:34 - going to use the font size as the EM
178:36 - unit for the other HTML elements it will
178:39 - properly scale up or scale Down based on
178:42 - the browser and the device size on which
178:44 - the user is using the web page so guys
178:46 - this is one of the best practices that
178:48 - you must follow while providing the CSS
178:51 - property of font size to the different
178:53 - text element now guys we have something
178:55 - called as font shorthand property that
178:57 - will help us in order to provide the
179:00 - values of all these CSS properties
179:02 - related to font in just one CSS property
179:06 - that is font in this case so guys I'll
179:08 - leave this up to you as a homework for
179:10 - you so that you can practice on your own
179:12 - and use the different values for the
179:14 - different font properties that is
179:16 - related to text so guys comment in the
179:18 - comment section below whether you have
179:20 - learned something out of this video
179:21 - please make sure that you like this
179:23 - video so that it reaches to more people
179:25 - and subscribe to this channel so that
179:27 - you get the notifications on upcoming
179:28 - videos as well the next video that we
179:30 - are going to talk about is icons in CSS
179:34 - so stay tuned so now we will see icons
179:37 - in CSS so guys basically icons can
179:40 - easily be added to your HTML Page by
179:44 - using an icon library and there are many
179:47 - popular icon libraries that you can use
179:49 - with the help of the HTML code so guys
179:52 - over here we have the font awesome icons
179:55 - that you can use in which case you will
179:57 - be providing the script tag inside your
179:59 - HTML code and provide the icons inside
180:03 - the body tag in order to be displayed on
180:05 - the UI and similarly we have the
180:08 - bootstrap icons in which case you have
180:10 - to provide the CSS file that is the
180:12 - external CSS file using which you can
180:15 - provide the icons in your HTML page and
180:18 - also we have the Google Icons which will
180:20 - help us in order to provide the external
180:22 - CSS file as well so guys we are going to
180:25 - use the Google Icons this time so we
180:28 - have to add the below line of code in
180:30 - the head section of the HTML page so
180:33 - guys basically when we add this
180:34 - particular line inside the head section
180:37 - of the HTML page you don't have to
180:39 - download any of the icons to display
180:41 - them but simply you have to refer to
180:43 - them by using the name of that icon so
180:46 - guys let me just copy Cy this line of
180:48 - code over here that is the link tag
180:51 - which is of the relation stylesheet and
180:53 - having the hre to this particular URL
180:56 - that you can see so let me just copy
180:59 - this file and provide it inside our HTML
181:02 - file over here I'll simply remove the
181:04 - previous lines of code that we had
181:06 - written and after this external
181:08 - stylesheet in this case we will provide
181:10 - this line of code which will help us in
181:12 - order to display the Google Icons so
181:15 - guys over here we have provided the line
181:17 - of code inside inside the head section
181:18 - of the HTML page now simply we can use
181:22 - this particular syntax in order to
181:24 - provide the icon on the page over here
181:27 - so guys let me just copy this line of
181:29 - code in this case and over here inside
181:31 - the body tag we will have the paragraph
181:34 - tag and we will say below our some of
181:37 - the Google Icons so guys basically we
181:40 - are having the simple text over here and
181:42 - then after this we are going to use this
181:45 - particular syntax that is having the I
181:47 - tag over here and simply we are going to
181:49 - have the class attribute in this case
181:52 - which is going to have the value as
181:54 - material icons and simply we can provide
181:57 - the name of the icon that we want to
181:59 - display so guys in this case it is the
182:02 - cloud icon that we are going to display
182:04 - so let me just save this file now and
182:06 - try reloading this page once again on
182:08 - the browser so as you can see below are
182:11 - some of the Google Icons paragraph is
182:13 - getting displayed and this is the Google
182:15 - icon that is getting displayed with the
182:17 - help of this line of code that we had
182:19 - written inside the head section over
182:21 - here now guys similarly if you want to
182:24 - display the icon for the computer so
182:26 - what you can do is simply I'll copy the
182:28 - line of code in this case and paste it
182:31 - over here and instead of having the
182:33 - cloud we will simply say computer in
182:35 - this case let me just save this file now
182:38 - and try reloading this page once again
182:40 - on the browser so as you can see the
182:42 - computer icon is getting displayed over
182:44 - here apart from this let us say we want
182:47 - to display the home home icon so simply
182:49 - I'm going to copy this and paste this
182:51 - line of code and over here we are going
182:54 - to provide the home keyword so let me
182:57 - just save this file now and try
182:59 - reloading this page once again on the
183:00 - browser so as you can see home icon is
183:03 - getting displayed now guys how you will
183:05 - come to know what is the name that you
183:07 - are supposed to provide for a particular
183:09 - icon because not all the words that you
183:12 - will provide over here will have the
183:14 - icon in the Google Icons website so guys
183:17 - what you can do is I have also provided
183:19 - the link over here to the Google Icons
183:22 - so this is the link for the icons that
183:24 - are related to the fonts. google.com
183:26 - website so let us check this URL over
183:28 - here so I'll just go to this page in
183:31 - this case so as you can see if you
183:32 - scroll down you will see all the list of
183:35 - icons that is present over here so in
183:37 - case you want to display the settings
183:39 - icon simply you have to provide the
183:41 - settings name over here inside your code
183:44 - in this particular syntax so let me just
183:47 - copy the syntax and paste this over here
183:49 - and instead of home we will simply say
183:51 - settings in this case let me just save
183:53 - this file now and try reloading this
183:55 - page once again on the browser so as you
183:58 - can see the settings icon is getting
184:00 - displayed now guys what if we miss out
184:02 - the last s over here and simply we say
184:05 - setting in this case so what will happen
184:07 - in such cases where the name of the icon
184:10 - is not matching with the list of icons
184:12 - that are present in the Google fonts
184:14 - over here so let me just save this file
184:16 - now and try reloading this page page
184:17 - once again on the browser so since the
184:20 - name is not matching the setting icon is
184:22 - not getting displayed in this case so
184:24 - guys it is very important that you match
184:26 - the name over here inside the Google
184:28 - fonts icon according to your
184:30 - requirements and display them by using
184:33 - this particular synex that we have seen
184:35 - over here so I'll simply change it to
184:37 - settings in this case let me just save
184:39 - this file now and try reloading this
184:41 - page once again on the browser so as you
184:43 - can see the settings icon is getting
184:45 - displayed over here now let us display
184:47 - the search icon as well inside our HTML
184:50 - page so simply I'm going to copy the
184:52 - syntax and paste this over here and
184:54 - instead of settings we will say search
184:56 - in this case let me just save this file
184:58 - now and try reloading this page once
185:00 - again on the browser so as you can see
185:02 - the search icon is getting displayed
185:04 - over here guys in this way you can
185:06 - easily include Google icons on your HTML
185:09 - page just by including this particular
185:11 - line of code over here that is related
185:14 - to Google fonts so guys comment in the
185:16 - comment section below whether you have
185:17 - learned something out of this video
185:19 - please make sure that you like this
185:21 - video so that it reaches to more people
185:23 - and subscribe to this channel so that
185:24 - you get the notifications on upcoming
185:26 - videos as well the next video that we
185:28 - are going to talk about is an exercise
185:31 - on text properties font and icons in CSS
185:34 - so stay tuned so guys it is important
185:38 - that you practice the CSS properties in
185:41 - order to understand them in a more
185:43 - better way so we are going to check the
185:45 - exercise on the text property font and
185:48 - icons in CSS so basically you are
185:51 - supposed to follow the below steps in
185:53 - order to complete this exercise so guys
185:55 - you can pause this video and make sure
185:57 - that each of the task are completed from
186:00 - your side before checking the solution
186:02 - for all these task over here so let us
186:04 - move to the first task in this case so
186:07 - we are supposed to create a div with 500
186:10 - pixels Max width and align it to the
186:12 - center of the page with some background
186:14 - color so guys let us move to the vs code
186:17 - over here and implement this task so
186:19 - I'll just remove the previous lines of
186:21 - code in this case from the HTML file as
186:24 - well as the CSS file over here now guys
186:26 - we are going to have the div element in
186:28 - this case so we will say div tag over
186:31 - here and let's say we generate some
186:33 - random text over here with the help of
186:34 - the LM Mt abbreviation so guys in this
186:38 - case we have generated the random text
186:40 - inside the dev element over here let me
186:43 - just save this file now and try
186:44 - reloading this page on the browser so as
186:47 - you can see see we have this text inside
186:49 - the div tag over here now guys for this
186:51 - div element we are going to have the 500
186:54 - pixels Max width so how do we do that
186:57 - inside the style. CSS file first of all
186:59 - we will Define the div tag over here and
187:02 - inside this div tag we will have Max
187:05 - with CSS property and for this Max with
187:08 - CSS property we will say 500 pixels let
187:11 - me just save this file now and try
187:13 - reloading this page once again on the
187:15 - browser so as you can see this text is
187:17 - getting displayed within the 500 pixels
187:20 - withd over here now guys apart from this
187:22 - we also want to align it to the center
187:25 - of the page with some background color
187:27 - so let us do that as well so in order to
187:30 - align this at the center of the page
187:33 - simply we are going to use the margin
187:35 - property and the value that we can use
187:37 - is auto so guys basically this auto
187:39 - value for the margin property will help
187:42 - us in order to have the div element at
187:45 - the center of the page so let us check
187:47 - that as as well I'll save this file now
187:49 - and try reloading this page once again
187:51 - on the browser so you can see that the
187:53 - text is getting displayed at the center
187:55 - of the page and in order to make it more
187:57 - clear we are going to have the
187:59 - background color as well so simply we
188:01 - are going to provide the background
188:03 - color for this div element and let's say
188:05 - we provide the color as Aqua let me just
188:08 - save this file now and try reloading
188:10 - this page once again on the browser so
188:12 - as you can see the background color is
188:14 - getting displayed over here and also the
188:16 - div element is at the center of the page
188:18 - now now guys let us move to another task
188:21 - keep the text color as red and align the
188:23 - text to the center of the dev element so
188:26 - basically we are supposed to have the
188:28 - text color as red color so which CSS
188:30 - property do we use in order to make the
188:32 - text color as red so over here simply we
188:35 - are going to use the color property and
188:37 - we will say red color in this case and
188:40 - also we are going to use the text align
188:43 - property that will help us in order to
188:45 - align the text at the center of the live
188:47 - element so over here we will select the
188:50 - center value so let me just save this
188:52 - file now so two things will happen over
188:54 - here first of all the color of the text
188:56 - will be updated to red color and the
188:58 - alignment of this text will be at the
189:00 - center of this particular dep which is
189:03 - having this background color so let me
189:05 - just reload this page so as you can see
189:07 - the text color is updated to red and the
189:09 - text alignment is now set as Center over
189:12 - here now guys let us move to another
189:14 - task we need to provide the five pixels
189:16 - black border and the two pixels yellow
189:19 - outline to this dep so over here we will
189:22 - provide the Border property first of all
189:25 - so we will say Border in this case and
189:27 - it is going to be 5 pixels solid border
189:31 - with a black color so guys this will be
189:33 - the border and the same way we are going
189:35 - to provide the outline property as well
189:38 - which is going to have two pixels
189:40 - outline width and the color will be
189:42 - yellow so over here we will say outline
189:45 - in this case we will say two pixels as
189:47 - the outline width and the outline style
189:50 - will be again solid in this case and the
189:52 - color of the outline will be yellow so
189:54 - let me just save this file now and try
189:56 - reloading this page once again on the
189:58 - browser so as you can see we have the
190:00 - black border and then after the Border
190:03 - we have the yellow color outline so guys
190:05 - if you remember first of all we have the
190:08 - border and then after the border the
190:10 - outline property will be displayed for
190:13 - that particular HTML element so this is
190:15 - the way that we have implemented the
190:17 - border and the outline properties as
190:19 - well let us move to the next task so
190:21 - over here we are going to provide some
190:23 - line height to create extra space
190:26 - between the lines of the text so guys
190:28 - basically we have this default line
190:30 - height over here that is being displayed
190:32 - in between the lines so let us provide
190:34 - the line height as well so inside this
190:37 - div element we are going to say line
190:39 - height in this case and let's say we
190:41 - provide the line height of 10 pixels so
190:44 - let me just save this file now and try
190:46 - reloading this page once again on the
190:48 - browser so as you can see the 10 pixels
190:50 - light height is not helping us to
190:53 - provide the required extra space over
190:55 - here so instead of 10 pixels let us say
190:58 - we want to provide 25 pixels as the line
191:01 - height let me just save this file now
191:03 - and try reloading this page so as you
191:05 - can see we have sufficient space in
191:07 - between the lines that are getting
191:09 - displayed inside this div element over
191:11 - here now guys let us move to the next
191:13 - task over here make the font size as 24
191:16 - pixel using em unit so guys what will be
191:19 - the EM unit for the 24 pixels so if you
191:22 - remember whatever pixels we have we need
191:25 - to divide it by 16 so over here we say
191:28 - 24 pixels divided by 16 since 1 em is
191:32 - equal to 16 pixels so in this case we
191:35 - will get the value in terms of em so we
191:38 - have 1.5 em as the font size over here
191:42 - so simply we are going to set the font
191:44 - size property as 1.5 a.m so guys guys
191:47 - over here inside the div element we will
191:49 - say font size CSS property and in this
191:53 - case we will say 1.5 em let me just save
191:56 - this file now and try reloading this
191:57 - page once again on the browser so as you
192:00 - can see the font size of the text has
192:02 - been updated now to 1.5 a.m. now guys
192:05 - let us move to another task so over here
192:07 - we need to add the icons of heart and
192:10 - computer on the last line of this div
192:13 - using the Google Icons CSS so guys
192:16 - basically in the previous video we have
192:18 - seen how we can include the Google Icons
192:21 - line of code over here in order to
192:24 - display the icons inside the HTML page
192:27 - so guys this is the line of code that we
192:29 - are going to include related to the
192:31 - Google fonts inside the head section of
192:33 - the HTML page over here and then after
192:36 - this div tag simply we are going to use
192:39 - the I tag over here and the syntax that
192:41 - we are supposed to use we have already
192:43 - seen in the previous video that this is
192:45 - the syntax in this case by using the I
192:48 - tag over here so guys I'm going to
192:50 - Simply copy this line of code and this
192:52 - is the link tag that we are going to use
192:54 - inside the head section that we have
192:56 - already provided so let us provide the
192:59 - syntax over here after the div tag and
193:01 - the icons that we are supposed to
193:03 - provide is the heart icon and the
193:06 - computer icon over here so simply we are
193:08 - going to say heart in this case as the
193:10 - icon name let me just save this file now
193:13 - and try reloading this page once again
193:15 - on the browser so guys you can see that
193:17 - we are not having any icon over here
193:19 - that's because the name of the icon is
193:21 - not correct in this case simply we have
193:23 - provided the heart but if we go to the
193:25 - official website of the Google fonts and
193:28 - search for the heart as you can see the
193:30 - name of the icon must be favorite over
193:32 - here so let us provide this particular
193:35 - name that is favorite in this case so
193:37 - I'm going to Simply update this name to
193:40 - favorite over here let me just save this
193:42 - file now and try reloading this page
193:44 - once again on the browser so as you can
193:46 - see the heart icon is getting displayed
193:48 - over here but it is getting displayed
193:50 - outside of this div element can we get
193:53 - this heart icon inside of this div
193:55 - element let us try that so what we will
193:57 - do is simply I'm going to remove this
193:59 - line of code over here and inside the
194:02 - div tag in this case simply we are going
194:04 - to have the line break over here so let
194:07 - us have the line break and after this we
194:09 - are going to have this it te along with
194:12 - the favorite Google icon let me just
194:14 - save this file now and try reloading
194:16 - this page once again on the browser so
194:18 - as you can see we have this heart icon
194:21 - over here so guys basically we have just
194:23 - included this line of code in between
194:25 - the div starting and the ending tag and
194:28 - that is how we can get the icons inside
194:31 - any of the existing HTML elements now
194:33 - guys apart from this we also want to
194:35 - display the computer icon as well so
194:38 - what we will do is simply I'm going to
194:40 - copy this line of code and paste it
194:42 - after this and we will say computer
194:45 - instead of favorite so guys basically
194:47 - this is the name of the icon that you
194:49 - want to display on the HTML page let me
194:52 - just save this file now and try
194:53 - reloading this page once again on the
194:55 - browser so as you can see computer icon
194:58 - is getting displayed over here inside
195:00 - the dev element so guys in this way we
195:02 - have completed all the task that are
195:04 - being mentioned inside this particular
195:06 - exercise and this is how we can practice
195:08 - on our own in order to understand the
195:11 - different CSS properties so that it
195:13 - becomes easy for us when we are going to
195:15 - implement them based on our requirement
195:17 - so guys comment in the comment section
195:19 - below whether you have learned something
195:20 - out of this video please make sure that
195:22 - you like this video so that it reaches
195:24 - to more people and subscribe to this
195:26 - channel so that you get the
195:27 - notifications on upcoming videos as well
195:30 - I'll see you in the next video till then
195:32 - stay tuned so now we will see link
195:35 - styling properties in CSS so guys
195:37 - basically the links can be styled with
195:40 - any CSS properties such as text color
195:43 - font family background and many other
195:46 - CSS properties that we are going to
195:47 - check with the help of examples as well
195:50 - now the Links can be styled differently
195:52 - depending on what state they are in so
195:55 - guys basically links are used in order
195:58 - to navigate to other web pages on the
196:00 - same website or the different website so
196:03 - as you can see we use the a tag that is
196:06 - the anchor tag in order to represent the
196:09 - link and in the CSS file we can use
196:11 - colon followed by link over here in
196:14 - order to represent a normal unvis
196:16 - visited link which is not visited yet by
196:19 - the user apart from that we can also use
196:22 - the a followed by colon and then the
196:24 - visited keyword in order to specify the
196:28 - CSS properties when the link has been
196:30 - visited by the user and then guys we
196:32 - also have a followed by colon and then
196:35 - we have hover so that the CSS properties
196:38 - can be used when we get the mouse cursor
196:40 - on the link text and apart from this we
196:43 - also have the active State when the
196:45 - moment we click click on that particular
196:48 - Link in which case the CSS properties
196:50 - that are defined will be activated the
196:52 - moment when we click on that particular
196:55 - link so guys let us check this with the
196:56 - help of examples as well and we must
196:59 - note that the hover state must come
197:01 - after the link State and the visited
197:03 - state as well and apart from this the
197:06 - active state must also be defined after
197:08 - the hover state so guys let us check
197:10 - this in the VSS code over here so
197:12 - basically we are going to Define an
197:15 - anchor tag in this case so we Define the
197:17 - a tag so over here by default we have
197:19 - the hrf attribute for which we will have
197:21 - the value of hash character over here
197:24 - and then after this we are simply going
197:26 - to provide the text that is click here
197:28 - so guys let me just save this file now
197:30 - and try reloading this page on the
197:32 - browser so as you can see we have the
197:34 - link over here with the text click here
197:36 - so guys when we get the cursor on this
197:39 - click here text the icon of the cursor
197:41 - is converted to this hand tool over here
197:44 - but guys we are going to Define certain
197:46 - properties in such a way that when we
197:48 - get the cursor on this link text the
197:50 - color must be updated and then when it
197:52 - is visited then the color must be
197:54 - updated to some other color so guys let
197:57 - us check this with the CSS properties
197:59 - over here so in style. CSS what we are
198:01 - going to do is first of all we are going
198:04 - to define the a tag and simply after
198:06 - this we are going to say colon and as
198:09 - you can see vs code is suggesting us
198:11 - certain keywords that we can use after
198:13 - the colon so basically we are going to
198:15 - use the link keyword over here and this
198:17 - will be the default CSS properties for
198:20 - all the anchor Texs that are present on
198:22 - the web page so guys what we are going
198:24 - to do is let's say we don't want the
198:26 - underline so simply we are going to say
198:28 - text decoration and then we can say none
198:31 - in this case and then apart from this
198:33 - let us say we want the text color to be
198:36 - green so simply we are going to say
198:38 - color and over here we will say green
198:41 - color in this case let me just save this
198:43 - file now and try reloading this page
198:45 - once again on the browser so as you can
198:47 - see we have the textt color is green and
198:50 - then the underline is no longer present
198:53 - on this particular link text now guys
198:55 - this is the normal way in which the
198:56 - links will be displayed over here by
198:59 - using the a followed by colon and then
199:01 - we have the link keyword now guys apart
199:04 - from this we also have the visited state
199:06 - over here in which case when the link is
199:09 - clicked and the URL is visited then
199:11 - those CSS properties will be activated
199:14 - so let us check that as well so we have
199:16 - the the a followed by colon and then we
199:19 - have visited keyword over here so guys
199:22 - inside this what we are going to do is
199:24 - simply we are going to change the color
199:26 - to Red in this case so guys basically we
199:28 - are going to set the color as red when
199:30 - the link is already visited so let me
199:33 - just save this file now and try
199:34 - reloading this page once again on the
199:36 - browser so as you can see there is no
199:38 - change by default the green color is
199:40 - getting displayed but the moment we
199:42 - click on this particular link basically
199:44 - the text of the color will be updated to
199:47 - red color so when we click on this so as
199:49 - you can see the link is visited now and
199:51 - the color is updated to red color in
199:54 - this case so guys in this way we can use
199:56 - the visited state of the anchor tag in
199:59 - order to Define our CSS properties now
200:02 - guys apart from this we also have the
200:04 - hover property over here in which case
200:06 - when we get the mouse cursor on this
200:09 - particular link the CSS properties will
200:11 - be activated so let us check that as
200:13 - well so over here after the visited
200:15 - state we will have a tag followed by
200:18 - colon and then simply we can say over in
200:20 - this case and then after this we are
200:22 - going to provide the CSS property so
200:24 - let's say we change the color to Blue in
200:27 - this case so we are setting the color to
200:29 - Blue let me just save this file now and
200:31 - try reloading this page once again on
200:33 - the browser now guys the link is already
200:35 - visited that is why the color is being
200:37 - set to Red in this case but when we get
200:40 - the mouse cursor on this particular link
200:42 - as you can see the color is getting
200:44 - updated to blue color now that's because
200:46 - because we have set the CSS property on
200:49 - the hover state of the anchor tag so in
200:51 - this way we can set the CSS properties
200:54 - on the H state of the anchor tag as well
200:58 - and then apart from this we also have
200:59 - the active state in this case so let us
201:01 - check that as well over here so in the
201:04 - vs code simply we are going to define
201:06 - the a tag followed by colon and then we
201:09 - have the active state in this case and
201:12 - then after this let us say we want the
201:14 - color to be updated to black color color
201:16 - so simply we are going to Define black
201:18 - color let me just save this file now and
201:21 - try reloading this page once again on
201:23 - the browser now guys the CSS properties
201:25 - defined in the active state will be
201:27 - implemented when we click on that
201:29 - particular link so let us check that as
201:31 - well so when we hover on this particular
201:33 - link as you can see blue color is
201:36 - getting displayed and when we click on
201:38 - this link as you can see the color of
201:40 - the text has been updated to black color
201:42 - and in this way the active state is
201:44 - getting implemented over here so guys in
201:47 - this way you can set any of the CSS
201:49 - properties for all these four states of
201:51 - the anchor tag now guys apart from this
201:54 - we have also seen how we can implement
201:56 - the text decoration so basically if you
201:58 - don't want the underline that comes by
202:01 - default simply you can set the text
202:03 - decoration as none in this case when we
202:05 - don't set this text decoration as none
202:07 - let me just save this file now and try
202:10 - reloading this page once again on the
202:11 - browser so you will be seeing the
202:13 - underline by default for all the
202:16 - anchored tags that you define in your
202:18 - HTML file now guys apart from this we
202:21 - have something called as background
202:22 - color as well what we can do is simply
202:25 - we can set the background color for this
202:27 - link so basically over here for the
202:29 - anchor tag in the link State what we can
202:32 - do is we will set the background color
202:34 - over here and let's say we set the
202:36 - background color as yellow let me just
202:38 - save this file now and try reloading
202:40 - this page once again on the browser so
202:43 - as you can see the yellow background
202:44 - color is getting displayed over over
202:46 - here behind this particular link and
202:49 - then apart from this we can also display
202:51 - the link as a button so in order to do
202:53 - this simply we can provide certain
202:55 - padding over here for the anchor tag
202:58 - with the link state so inside this we
203:01 - will have the CSS property as padding
203:03 - and simply we are going to say five
203:05 - pixels in this case let me just save
203:07 - this file now and try reloading this
203:09 - page once again on the browser so as you
203:11 - can see the link is getting displayed as
203:13 - a button now let me just provide the
203:15 - Border as well for this button and also
203:18 - we will remove the underline from the
203:20 - link so over here we will again say text
203:23 - decoration as none and let us provide
203:25 - the Border as well so over here we will
203:27 - use the Border CSS property of 2 pixels
203:31 - border width and let's say we provide
203:33 - the Border style as solid border let me
203:36 - just save this file now and try
203:37 - reloading this page once again on the
203:39 - browser so as you can see this is the
203:41 - link that is getting displayed as a
203:43 - button and a background color over here
203:45 - so guys in this way you can customize
203:47 - your links that you have provided in
203:49 - your HTML web pages comment in the
203:52 - comment section below whether you have
203:54 - learned something out of this video
203:56 - please make sure that you like this
203:57 - video so that it reaches to more people
203:59 - and subscribe to this channel so that
204:01 - you get the notifications on upcoming
204:03 - videos as well the next video that we
204:05 - are going to talk about is list styling
204:07 - properties in CSS so stay tuned so now
204:12 - we will see list styling properties in
204:14 - CSS so guys basically we can style the
204:17 - list items in HTML using the CSS
204:20 - properties and this we are going to
204:22 - check with the help of examples as well
204:24 - now guys the very first thing that we
204:26 - are going to see is the list style type
204:28 - CSS property so let us move to VSS code
204:31 - over here and simply I'm going to remove
204:33 - the previous lines of code that we had
204:35 - written in the HTML and the CSS file in
204:39 - this case and then guys simply we are
204:41 - going to have the unordered list so guys
204:43 - basically there are two types of list in
204:45 - HTML that we we can Define that is
204:47 - unordered list and the ordered list as
204:50 - well so first of all we will check the
204:52 - example of the unordered list so simply
204:54 - we are going to say UL so this is the Mt
204:57 - abbreviation so UL tag stands for
205:00 - unordered list over here inside which we
205:02 - are going to have the list item so guys
205:04 - we can simply Define the Alli tags in
205:07 - this case and inside the Alli tags we
205:09 - can provide the content of the list so
205:12 - guys simply we are going to say
205:14 - unordered list and item one in this case
205:18 - and simply I'm going to copy paste these
205:20 - lines of code so that we can have more
205:22 - items over here and we will name them as
205:25 - item 2 item three and then item four
205:28 - respectively let me just save this file
205:30 - now and try reloading this page on the
205:32 - browser so as you can see we have the
205:35 - unordered list item from 1 up to 4 now
205:38 - guys by default this is the list style
205:41 - type that is getting displayed with the
205:43 - help of the bullets over here now guys
205:45 - instead of displaying these bullets we
205:47 - can display something else as well for
205:49 - these unordered list so let us check
205:52 - that with the help of example over here
205:54 - so we need to do it inside the style.
205:56 - CSS file and inside this first of all we
205:59 - are going to define the tag that is UL
206:01 - in which case we are going to define the
206:03 - CSS properties for the unordered list
206:06 - and then guys we have something called
206:08 - as list style type over here so as you
206:10 - can see this is the CSS property that we
206:13 - are going to use and then we can have
206:15 - many values as you can see we have
206:17 - Circle apart from this we also have
206:19 - square we can also have none in which
206:21 - case there will be no bullets that will
206:23 - be displayed by default so let us say we
206:26 - want the elements to be displayed with
206:28 - the help of the circle over here so we
206:30 - have set the value as Circle in this
206:32 - case let me just save this file now and
206:34 - try reloading this page once again on
206:36 - the browser so instead of bullets we are
206:39 - getting Circle in this case now let us
206:41 - say we want to display them as squares
206:44 - so what we can do is simply insert of
206:46 - the circle value we can say Square value
206:49 - let me just save this file now and try
206:51 - reloading this page once again on the
206:53 - browser so as you can see the list are
206:56 - getting displayed with the help of the
206:58 - squares in this case on their left hand
207:00 - side and guys in this way we can easily
207:02 - use the list style type for the
207:04 - unordered list now guys apart from this
207:07 - we can also have the list style type for
207:09 - the ordered list as well so let us check
207:12 - that so inside the HTML file after the
207:15 - unordered list we will have the ordered
207:17 - list tag so we have the o tag over here
207:20 - inside which we are going to define the
207:22 - list items so let's say we have the
207:24 - items say ordered list one and then
207:28 - simply I'm going to copy paste this line
207:30 - of code so that we can have the multiple
207:33 - items over here we will say item we
207:36 - missed out the item keyword in this case
207:39 - so we have list item one and then we
207:41 - will say list item 2 three and then four
207:51 - so guys basically we have the ordered
207:53 - list item 1 up to four in this case let
207:56 - me just save this file now and try
207:58 - reloading this page once again on the
208:00 - browser so as you can see in the ordered
208:02 - list by default we get the numbers that
208:05 - gets displayed which will tell us the
208:07 - number at which the list item is present
208:10 - now guys let us say we want to change
208:12 - the list style type over here and we
208:14 - want to display the r numbers in this
208:17 - case so what we can do is simply we can
208:19 - come inside the style. CSS file and over
208:22 - here we will Define the o tag since we
208:25 - want the list style type to be defined
208:28 - for the ordered list and inside this we
208:30 - are going to say list style type CSS
208:33 - property and let's say we provide the
208:35 - Roman numbers and we want the upper
208:38 - Roman numbers over here so guys we have
208:40 - lower Roman and we also have the upper
208:42 - Roman so we select this value that is
208:45 - upper Roman let me just save this file
208:47 - now and try reloading this page once
208:49 - again on the browser so as you can see
208:51 - Roman numbers are getting used over here
208:54 - in order to define the item numbers in
208:57 - this case inside the ordered list so
209:00 - guys this is the main difference inside
209:01 - the unordered list we don't know at
209:04 - which number a particular item is
209:06 - present but inside the ordered list we
209:09 - have the numbers that is 1 2 3 4 which
209:12 - will represent the items inside that
209:14 - ordered list and we can customize the
209:17 - list style type over here by using this
209:20 - particular CSS property now apart from
209:22 - this we also have the list style
209:25 - position so guys let us check this as
209:27 - well with the help of examples so let us
209:29 - say we have some random text over here
209:31 - for this unordered list items in such a
209:34 - way that the items are occupying
209:36 - multiple number of lines so guys what we
209:38 - can do is inside this ordered list I'm
209:41 - going to keep only two items in this
209:43 - case so I'm going to remove the third
209:45 - and the four fourth item over here and
209:47 - we will change the content of the first
209:49 - and the second item so simply we are
209:52 - going to generate some random text with
209:54 - the lurm m at abbreviation and then we
209:56 - multiply it by two so that we get some
209:59 - good amount of random text over here for
210:02 - the first item and the second item as
210:05 - well so over here as well we will say
210:07 - lurm m at abbreviation so guys basically
210:10 - in both the list items we have generated
210:13 - some good amount of content over here
210:15 - let let me just save this file now and
210:17 - try reloading this page once again on
210:19 - the browser so as you can see we have
210:22 - the list items that are occupying
210:24 - multiple lines in this case so over here
210:27 - four lines are getting occupied for each
210:29 - list item in the unordered list now guys
210:32 - let us use the list style position over
210:35 - here that is the next CSS property so we
210:38 - will move to the style. CSS over here
210:40 - and inside the unordered list we will
210:43 - say list style position so as you can
210:46 - see this is the CSS property that we
210:49 - want to use and by default the value of
210:52 - this list style position is outside so
210:55 - basically when we set it to outside we
210:57 - won't see any changes in this case so
210:59 - let me just save this file now and try
211:01 - reloading this page once again on the
211:03 - browser so as you can see there is no
211:05 - change right now so guys what is the
211:07 - meaning of this particular CSS property
211:10 - that is list style position so guys it
211:13 - is the position of this particular
211:15 - square that is representing the list
211:18 - item so it is currently outside of the
211:21 - content of this list item so as you can
211:24 - see when we highlight this content it is
211:26 - to the left of this content but let's
211:29 - say if we want this Square to be the
211:31 - part of this list item inside the
211:34 - unordered list so what we can do is
211:36 - simply we can set the list style
211:38 - position to inside in this case so as
211:41 - you can see this is the list of values
211:43 - that we can set so the other value is
211:46 - inside so we are going to set that
211:48 - particular value let me just save this
211:50 - file now and try reloading this page
211:52 - once again on the browser so now if you
211:54 - see the square is now the part of this
211:57 - particular list item and it is getting
211:59 - displayed inside of the list item that
212:02 - is being displayed on the page so the
212:05 - second line over here it is just below
212:07 - this particular Square which tells us
212:10 - that this particular list style position
212:12 - is set to inside value so guys in this
212:15 - way if you want this square or Circle or
212:18 - any other value that you have set for
212:20 - this list style type to be the part of
212:23 - the list item then you can set the list
212:25 - style position to inside and if you want
212:28 - it to be outside then that will be the
212:30 - default value and you don't have to set
212:32 - it explicitly now guys apart from this
212:35 - we can also remove the default settings
212:37 - by setting the list style Type To None
212:40 - So guys let us check that as well so
212:42 - what we will do is simply we are going
212:44 - to have another list list that is the
212:46 - unordered list over here and let's say
212:49 - we have the item one and item two in
212:52 - this case so simply I'm going to paste
212:54 - this list item over here and we will say
212:57 - item two let me just save this file now
212:59 - and try reloading this page once again
213:01 - on the browser so as you can see we have
213:03 - item one and item two in this case now
213:06 - guys let us set the ID for this
213:08 - particular unordered list because we
213:10 - already have another unordered list that
213:12 - we have set previously so in this case
213:15 - we will set the ID and the value that we
213:18 - are going to set is remove style in this
213:21 - case so guys basically we are going to
213:22 - use this value of the ID in order to set
213:26 - the CSS property so let me just copy
213:28 - this value and let me just save this
213:30 - file that is the HTML file and over here
213:33 - we are going to use the ID so we say
213:35 - hash character followed by the ID that
213:38 - is remove style so guys if you remember
213:41 - if we want to provide the CSS properties
213:44 - with the help of the ID of the HTML
213:46 - element then we use the hash character
213:49 - over here before specifying the ID of
213:51 - the HTML element and if we want to use
213:53 - the class then we use the dot character
213:55 - before the class name so guys inside
213:58 - this simply we are going to say list
214:00 - style type it is equal to none so guys
214:03 - basically whatever default CSS
214:05 - properties are set for the unordered
214:08 - list all those properties will be
214:10 - removed so in this case we will be
214:12 - seeing that the square that is getting
214:14 - displayed over here will be removed and
214:16 - these will be simple item one and item
214:19 - two that will be displayed on the web
214:22 - browser so let me just save this file
214:24 - now and try reloading this page once
214:26 - again on the browser so as you can see
214:29 - there is no bullet or any other list
214:31 - style type that is getting displayed but
214:34 - we are simply getting the items that is
214:36 - item one and item two being displayed on
214:39 - the web browser so in this way you can
214:41 - remove the default settings from the
214:44 - list by using the list style type value
214:47 - is none now guys apart from this we also
214:49 - have something called as list style
214:51 - image so instead of displaying the
214:54 - square or the circles over here or the
214:56 - Roman numbers in this case we can also
214:59 - use the image icons that will help us in
215:02 - order to make them look more attractive
215:04 - so guys I'll leave this property that is
215:06 - list style image as a homework for you
215:09 - so that you can practice on your own so
215:10 - comment in the comment section below
215:12 - whether you have learned something out
215:13 - of this video please make sure that you
215:15 - like this video so that it reaches to
215:17 - more people and subscribe to this
215:19 - channel so that you get the
215:20 - notifications on upcoming videos as well
215:22 - the next video that we are going to talk
215:24 - about is table styling properties in CSS
215:28 - so stay
215:30 - tuned so now we will see table styling
215:33 - properties in CSS so guys basically the
215:36 - look of the HTML table can be greatly
215:39 - improved with the help of CSS properties
215:41 - and this we are going to check with the
215:43 - help of examples as well so we are going
215:45 - to perform certain tasks so as you can
215:48 - see these are the task that we are going
215:50 - to perform in order to understand the
215:52 - CSS properties of the HTML table more
215:55 - clearly so guys first of all we are
215:57 - going to create a table with the border
216:00 - and a padding for better readability so
216:03 - what we are going to do is I'll move to
216:05 - the vs code over here and simply we are
216:07 - going to remove the previous lines of
216:09 - code that we had written in the HTML
216:12 - file as well as the CSS file over here
216:14 - we are going to Define find the table in
216:16 - this case inside the body tag and inside
216:19 - this table we are going to have the
216:21 - first row which is going to have the
216:23 - headers over here so guys inside the TR
216:26 - tags in this case we will have the table
216:28 - header tag that is the th tag and we are
216:31 - going to define the simple headers that
216:34 - is column 1 up to column 4 so guys
216:37 - basically over here we have defined the
216:39 - column 2 column 3 and column 4 as well
216:42 - so guys in this way inside the first row
216:45 - of the table we can Define the table
216:48 - headers for the HTML table now guys
216:51 - after this first row we are going to go
216:53 - to the second row and this time we are
216:55 - going to use the TD tag which defines
216:57 - the table data which is going to say Row
217:01 - one and column 1 in this case similarly
217:04 - we will go up to column 4 and similarly
217:07 - we will have another row so in this case
217:09 - simply I'm going to copy these lines of
217:12 - code and paste it over here I'm going to
217:14 - update all the row and the columns will
217:16 - be from 1 up to 4 so guys let me just
217:19 - save this file now and try reloading
217:21 - this page on the browser to see how the
217:23 - HTML table looks like so as you can see
217:26 - the table headers are getting displayed
217:29 - over here from column 1 up to column 4
217:31 - in this case and Below them we have the
217:34 - table data as well for Row one and row
217:37 - two in this case now guys this
217:39 - particular table is not looking that
217:41 - great because we are not having any
217:43 - background colors or the borders as as
217:45 - well so let us apply the borders first
217:47 - of all so basically we will be defining
217:50 - the CSS properties inside the style. CSS
217:53 - now guys over here simply we can say the
217:56 - table tag you can also use the ID or the
217:59 - class name that you have provided to the
218:01 - table in your web page and then over
218:04 - here inside the curly braces so guys
218:07 - basically we are going to define the
218:08 - border for the table so let me just save
218:11 - this file now and try reloading this
218:13 - page once again on the browser so as you
218:15 - can see this particular border is
218:17 - getting displayed for the table now guys
218:19 - we also want the borders to be displayed
218:22 - inside of the table for all the TD tags
218:25 - as well so what we can do is if we want
218:28 - the same border to be implemented to the
218:30 - multiple tags we have already defined
218:33 - the table tag we want to also Define the
218:36 - TD tag over here so simply we can
218:38 - provide a comma and provide another tag
218:41 - in this case so guys always remember if
218:43 - you want to apply the same CSS property
218:46 - to multiple tags in this case you can
218:49 - provide all the tags which are separated
218:51 - by commas and then Implement your CSS
218:54 - properties so once we provide the TD tag
218:57 - over here after providing the comma
218:59 - character simply we have to save this
219:01 - file now basically what this means is
219:04 - the Border will be applied to all the
219:06 - table data tags as well so let us check
219:09 - how it will look like on the web page so
219:12 - let me just reload this page once again
219:13 - on the browser so as you can see the
219:16 - borders are getting applied to all the
219:18 - TD tags over here but guys it is not
219:21 - getting applied to the table headers why
219:23 - so so let us check that as well so
219:26 - inside the HTML file as you can see we
219:28 - have defined the table data that is a TD
219:31 - tags in order to Define all the data but
219:34 - for the columns we had defined the th
219:37 - tag over here for which we have not
219:39 - applied the border so let us apply the
219:41 - border for the th tag as well so inside
219:44 - the style. Cs file over here simply we
219:47 - have to provide the comma once again and
219:49 - provide the th tag as well let me just
219:51 - save this file now and try reloading
219:53 - this page once again on the browser so
219:56 - now as you can see we have the border
219:58 - for the table haters as well but guys if
220:01 - you notice we have the double borders
220:03 - over here that is we also have the
220:05 - outside Border in this case for the
220:07 - table and individually we have different
220:10 - borders for all the table data and all
220:13 - the table headers so how do we we get
220:16 - rid of this and just apply one single
220:18 - border line for all the table data and
220:21 - the table headers so let us check that
220:24 - we have something called as border
220:25 - collapse so can we apply this border
220:28 - collapse property for all these tags
220:30 - over here so let's check that so
220:33 - basically we are going to provide border
220:35 - collapse and in this case we are going
220:37 - to use the collapse value so let me just
220:40 - save this file now and try reloading
220:42 - this page once again on the browser so
220:44 - now as you can see there are no double
220:46 - borders in this case and a single line
220:48 - is getting displayed for all the table
220:50 - headers and the table data cells over
220:52 - here for the HTML table now guys apart
220:55 - from this we can also provide the
220:56 - padding for better readability so what
220:59 - we will do is for all these table data
221:01 - in the table headers we will provide the
221:03 - five pixels padding so that there is
221:05 - certain spacing between the border and
221:08 - the content of the table data so in this
221:11 - case simply we are property with the 5
221:14 - pixel value so let me just save this
221:16 - file now and try reloading this page
221:19 - once again on the browser so as you can
221:21 - see we have the five pixels and now the
221:23 - table is looking more readable in this
221:26 - case now guys let us move to another
221:27 - task we need to provide the green
221:30 - background color for the table headers
221:32 - with the white text over here so let us
221:35 - apply this as well now in this case we
221:37 - want the background color to be applied
221:39 - only to the th tag in this case so what
221:42 - we can do is we can see TR tag over here
221:45 - and inside the TR tag specifically we
221:47 - want to apply the CSS property for the
221:50 - th tag so we can say TR tag first of all
221:54 - followed by the space character and then
221:57 - th tag so guys in case you want to go to
222:00 - the child element over here first of all
222:02 - we say the TR tag which is the parent
222:04 - tag for this th tag which is the child
222:07 - tag then you can provide the space
222:09 - character in between them also we can
222:11 - have the table tag over here before the
222:14 - TR tag order to make it more clear how
222:17 - this particular parent and child
222:18 - relationship works so after this we are
222:21 - going to have the curly braces and then
222:24 - inside this we are color which will be
222:26 - of the value green color in this case
222:28 - and apart from this we will also have
222:30 - the white text color so that it goes
222:33 - better with the green background color
222:35 - and the value will be white in this case
222:38 - let me just save this file now and try
222:40 - reloading this page once again on the
222:41 - browser so now as you can see we only
222:44 - have the green green color for the table
222:46 - header in this case that's because we
222:48 - have specified that inside the table we
222:51 - need to go to the table row which is
222:53 - having the th tag over here and if we
222:56 - simply change this th tag to TD tag so
222:59 - basically all the TD tags meaning this
223:02 - particular Rose will have the green
223:04 - color and not the th tags in this case
223:07 - so let us check that as well so I'll
223:09 - save this file now and try reloading
223:11 - this page once again on the browser so
223:13 - as you can see there is no no background
223:15 - color for the table headers over here
223:18 - but all the table data that is the TD
223:21 - tags are having the background color of
223:23 - green so guys in this way you can use
223:26 - the parent child relationship and simply
223:28 - you are going to go in that particular
223:30 - sequence you can also use the ID of the
223:32 - table or the class name of the table by
223:35 - using the hash character or the dot
223:37 - character respectively in order to apply
223:40 - the different CSS properties so guys let
223:42 - us move to the th tag over here so so
223:45 - that we apply the background color to
223:47 - only the headers of the table and let me
223:49 - just reload this page once again so as
223:52 - you can see we have the background color
223:54 - for the table headers currently now guys
223:56 - apart from this we also need to provide
223:59 - the background color to the alternate
224:01 - rows over here so basically alternate
224:03 - rows meaning we want to apply certain
224:06 - background color to this particular row
224:08 - and then we need to ignore the second
224:10 - row and go to the third row in order to
224:13 - apply the same background color so guys
224:15 - in this case let us increase the number
224:18 - of rows now in the HTML file so I'm
224:21 - going to Simply copy these lines of code
224:23 - and paste it over here so we get the
224:26 - third row as well so I'll update it and
224:29 - again we are going to have the fourth
224:31 - row as well over here so we are going to
224:34 - update the content of the fourth row and
224:37 - let us say we have another row in this
224:39 - case so simply I'm going to paste the
224:41 - code once
224:43 - again so as you can see to total of five
224:45 - rows we have defined inside the HTML
224:48 - table let me just save this file now and
224:50 - try reloading this page once again on
224:52 - the browser so as you can see we have
224:54 - the rows from one up to the row five and
224:57 - all the four columns have different data
224:59 - inside them now guys what do we want to
225:02 - do is we want to apply certain
225:04 - background color to this particular row
225:06 - and then we need to ignore this second
225:09 - row and apply the same background color
225:11 - to the third row as well and Then
225:13 - followed by the same background color to
225:15 - the fifth row so alternate rows need to
225:18 - be provided with the background color so
225:21 - inside the style. CSS property what we
225:23 - can do is simply we can say table first
225:26 - of all in order to define the parent tag
225:29 - and inside this we are going to go to
225:32 - the TR tag over here now guys we don't
225:34 - want to apply the background color at
225:37 - the TD level but at the row level in
225:40 - this case so basically we want to color
225:42 - this entire row which is at the second
225:45 - number right now so guys if you remember
225:47 - first of all we have defined the first
225:49 - row for the header of the table so this
225:51 - is the first row and then apart from
225:54 - this this is the second row which means
225:56 - it is the even number row and then we
225:58 - have the third row which we want to
226:00 - ignore and then this is the fourth row
226:02 - which is the even row so guys over here
226:04 - we need to define something called as
226:07 - nth child so guys how do we do that so
226:09 - we provide the TR tag followed by colon
226:12 - and then we have something called as n
226:14 - ch child over here so as you can see vs
226:17 - code is suggesting us this particular
226:19 - option so we are going to use this and
226:21 - inside this nth child parenthesis we can
226:24 - Define the number of the child that we
226:27 - want to Define so guys basically we want
226:29 - all the even number of child in this
226:31 - case because we are going to apply the
226:34 - background color to these even number of
226:36 - rows so this is the second row and then
226:38 - we have the fourth row and then we have
226:40 - the sixth row over here so guys let us
226:43 - use this particular even key key word
226:45 - and inside these curly braces we are
226:47 - going to see the background color
226:50 - property so we are going to define the
226:52 - normal CSS properties inside this after
226:55 - we have used this particular selector so
226:57 - guys this is one of the important
226:59 - selectors when you are going to use the
227:01 - tables or any other HTML elements and
227:04 - you want to navigate to a particular
227:06 - child of a parent tag over here in which
227:09 - case table is the parent tag and TR is
227:12 - the child tag and from this child tag we
227:15 - are selecting one of the child tags in
227:18 - this case and specifically we are
227:20 - selecting the even number of Childrens
227:22 - so guys basically we have the background
227:24 - color over here and let's say we have a
227:26 - shade of gray color that we want to
227:28 - display as the background color so
227:30 - simply we are going to Define this
227:32 - particular color that is a shade of the
227:34 - gray color let me just save this file
227:36 - now and try reloading this page once
227:38 - again on the browser so now as you can
227:40 - see we have the background colors
227:43 - getting displayed to all the alt
227:44 - alternate rows specifically the even
227:47 - number of rows are getting the
227:49 - background colors being implemented over
227:51 - here so guys in this way we can provide
227:53 - the CSS properties for the alternate
227:55 - rows inside the table now guys let us
227:58 - move to the next task we are going to
228:00 - update the hover color on the table rows
228:03 - as well so what we can do is we have
228:05 - already provided the background color to
228:07 - the even number of rows let us provide
228:10 - the hover color in such a way that when
228:12 - we get the cursor on the table row of
228:15 - the HTML table then the color of the
228:18 - background must be updated so what we
228:20 - can do is simply in the style. CSS
228:23 - property we will again Define the table
228:25 - tag you can also Define the ID or the
228:28 - class of the table as well and then
228:30 - after this we are going to have the TR
228:32 - tag in this case now guys for the TR tag
228:35 - we want the hover state of the HTML
228:38 - element to be used in order to provide
228:41 - the background color so simply we are
228:43 - going to have the colar and then we are
228:46 - going to provide the hover property so
228:48 - as you can see this is the option that
228:50 - we can use so basically when we are
228:53 - going to hover over the TR tag then we
228:55 - need to have certain background color
228:58 - getting displayed so guys let us provide
229:00 - the background color over here so in
229:02 - this case let us say we want the
229:04 - background color to be Aqua so basically
229:07 - we are going to provide this particular
229:09 - value so the meaning of this is whenever
229:12 - we are going to get the cursor to any
229:14 - row of the table then the background
229:16 - color of that particular row will be
229:18 - updated to Aqua so let me just save this
229:21 - file now and try reloading this page
229:23 - once again on the browser so now if we
229:26 - get the cursor as you can see the color
229:28 - is getting updated to aqua color so for
229:31 - the entire row of the table the color is
229:34 - getting updated so guys in this way you
229:36 - can provide your own CSS properties on
229:38 - the HTML table based on your
229:40 - requirements comment in the comment
229:42 - section below whether you have learned
229:44 - something out of this video please make
229:45 - sure that you like this video so that it
229:47 - reaches to more people and subscribe to
229:49 - this channel so that you get the
229:51 - notifications on upcoming videos as well
229:53 - the next video that we are going to talk
229:55 - about is display property in CSS so stay
229:59 - tuned so now we will see display
230:01 - property in CSS so guys basically the
230:04 - display property is used to specify how
230:07 - an element is displayed on the web page
230:10 - so every HTML element has a default
230:13 - display value and depending on what type
230:16 - of element it is the display value will
230:18 - be set on the web page Now the default
230:21 - display value for most of the elements
230:23 - is either block or in line and this we
230:26 - are going to check with the help of
230:28 - examples as well now the display
230:30 - property is used to change the default
230:32 - display behavior of the HTML element
230:35 - guys over here the first display value
230:37 - is the Block Level elements in this case
230:40 - so basically a block level element
230:42 - always starts on a new line and takes up
230:45 - the full width that is available on the
230:47 - screen which means it stretches out to
230:50 - the left and the right as far as it can
230:53 - and basically these are certain examples
230:55 - of the Block Level elements over here we
230:58 - have already seen that the div tag takes
231:00 - the entire width of the screen also the
231:03 - H1 up to H6 tags which are the header
231:06 - tags will take the entire width of the
231:08 - screen so let us check these with the
231:10 - help of examples over here in the vs
231:12 - code so I'm going to Simply remove the
231:14 - previous lines of code in the HTML and
231:17 - the style. CSS files so guys over here
231:20 - inside the HTML file inside the body tag
231:23 - simply we are going to have the div tag
231:25 - in this case so basically we are going
231:27 - to say this is a text div with block and
231:30 - Then followed by hyphen and we will say
231:32 - block element so guys basically we are
231:35 - going to identify that this is the block
231:37 - element over here and apart from this we
231:39 - will also have the paragraph tag and we
231:42 - will say this is a paragraph and again
231:45 - we will say this is the block element so
231:49 - guys let me just save this file now and
231:50 - try reloading this page on the browser
231:53 - so as you can see we have this is a text
231:55 - Dev which is a block element and it is
231:57 - taking the entire width of the screen
232:00 - and then again we have the paragraph tag
232:02 - which is taking the entire width of the
232:04 - screen now guys to understand this more
232:06 - clearly let us have the background color
232:09 - as well so that it looks like this is
232:11 - already taking the entire width of the
232:13 - screen over over here so in the style.
232:16 - CSS file in this case simply we are
232:18 - going to have the div tag followed by
232:20 - the P tag as well so both the tags we
232:23 - have separated using the comma since we
232:25 - are going to have the background color
232:27 - over here and the same color we are
232:29 - going to apply so let's say we provide
232:31 - the background color of yellow in this
232:33 - case so guys when you want to apply
232:35 - certain CSS property that is the same
232:38 - CSS property to the multiple tags or the
232:40 - multiple IDs of the tags or any other
232:43 - CSS selectors of the tags you can use
232:46 - these comma separated tag names or the
232:49 - other CSS selectors as well so let me
232:52 - just save this file now and try
232:53 - reloading this page once again on the
232:55 - browser so now as you can see the div
232:58 - element and the paragraph element is
233:00 - taking the entire width of the screen
233:03 - and this can be proved by seeing that we
233:05 - have the background color up to the
233:07 - width of the screen over here right from
233:09 - the left up to the right of the screen
233:12 - guys this is the way that the Block
233:13 - Level elements work and these are
233:15 - certain examples apart from this we also
233:17 - have the headers which are the Block
233:19 - Level elements and then we have the form
233:21 - tag header tag footer tag and the
233:24 - section tag over here so you can try
233:26 - these tags as well as a homework for you
233:28 - and check how these Block Level elements
233:30 - work and apart from this we also have
233:32 - the second display element that is the
233:35 - inline element in this case now guys
233:37 - before moving to inline elements let us
233:39 - verify the CSS properties of both these
233:42 - HTML tags so simply I'm going to right
233:45 - click over here and click on the inspect
233:47 - option to see the CSS property so as you
233:50 - can see already for the div tag over
233:52 - here we have the display as block that
233:55 - is the default display value that is
233:57 - getting displayed and let us check for
233:59 - the paragraph tag that is the P tag over
234:02 - here so again we have the background
234:04 - color that is yellow for the P tag and
234:07 - then we also have the display equal to
234:10 - block for the P tag in this case and
234:12 - automatically we also have the margins
234:14 - that are getting implemented over here
234:17 - so guys this is the default behavior for
234:19 - these tags that is the div tag and the
234:21 - paragraph tag and the other list of tags
234:24 - that we have seen in which case the
234:26 - display CSS property will be provided
234:28 - with the block value by default now guys
234:31 - apart from this let us see the other
234:32 - inline elements over here so an inline
234:35 - element does not start on a new line and
234:38 - it only takes up as much width as
234:40 - necessary so guys over here we have seen
234:43 - that the block element is taking the
234:45 - entire width of the screen but in case
234:47 - of the inline element it will only take
234:50 - the width as much as required by the
234:52 - content of that particular HTML tag so
234:55 - guys let us check that as well some of
234:57 - the examples are the span tag and then
235:00 - we also have the hyperlink that is the
235:02 - anchor tag over here and then we also
235:05 - have the image tag so guys let us check
235:07 - the example of the span tag in this case
235:10 - so what I'm going to do is simply inside
235:12 - the HTML file over here we are going to
235:15 - define the span tag in this case and
235:17 - simply we are going to say this is a
235:20 - span tag and Then followed by hyphen and
235:23 - then we will say inline element so guys
235:26 - let me just save this file now and try
235:28 - reloading this page once again on the
235:30 - browser so as you can see the content is
235:32 - getting displayed currently we cannot
235:34 - see any difference between the span tag
235:36 - and the paragraph tag and the diff tag
235:39 - but the background color has made it
235:40 - more clear that both these tags are
235:42 - taking the entire withd of the screen we
235:45 - can also see whether this particular
235:47 - span tag is taking the entire width of
235:49 - the screen let us check that so simply
235:51 - we can go to the style. CSS file over
235:54 - here and let's say we want the same
235:55 - background color that is yellow color to
235:57 - be displayed for the span tag as well so
236:00 - after the P tag we are going to provide
236:02 - comma and then simply we are going to
236:04 - provide the span tag in this case so
236:07 - guys all the three tags are having the
236:09 - same background color but let us see
236:11 - what will be the difference so let me
236:13 - just save this file now and try
236:14 - reloading this page once again on the
236:16 - browser so as you can see the background
236:19 - color for this pen tag is only applied
236:22 - up to this particular point where the
236:24 - content is getting displayed so guys
236:26 - basically it is not taking the entire
236:29 - width of the screen over here right now
236:31 - but it is only taking this much space
236:34 - inside which the content is getting
236:36 - displayed now guys let us provide
236:38 - another span tag after this first span
236:41 - tag over here inside our code so what we
236:43 - can do is let's say we provide a full
236:46 - stop over here and then we have a space
236:48 - character at the end of the span tag and
236:51 - let us Define the other span tag and we
236:53 - will say this is another span tag so
236:58 - guys basically we are defining another
237:00 - span tag over here and if you notice the
237:03 - content will be continued on the same
237:05 - line that's because the span tags are
237:08 - defined as the inline elements over here
237:10 - and whatever element that we Define
237:12 - after the inline element
237:14 - and if we have another inline element
237:16 - after the first inline element then both
237:19 - the HTML elements that is the content
237:22 - will be displayed on the same line so
237:24 - let me just save this file now and try
237:26 - reloading this page once again on the
237:28 - browser so as you can see the content of
237:30 - both the span tags are getting displayed
237:33 - on the same line that's because these
237:35 - tags are the inline tags over here let
237:37 - us provide the other example that is of
237:40 - the anchor tag as well so simply I'm
237:42 - going to come on the next line after the
237:44 - full stop over here and then we have the
237:46 - anchor tag in this case and for the hrf
237:49 - attribute simply we are going to provide
237:51 - the hash character over here and we will
237:54 - say click here as the text of the link
237:57 - so guys let me just save this file now
237:59 - and try reloading this page once again
238:01 - on the browser so as you can see the a
238:03 - tag is also the inline element tag over
238:06 - here and it is getting displayed on the
238:08 - same line rather than displaying it on
238:11 - the next line but let's say if we have
238:13 - another block element M after this a tag
238:15 - so so let's say we have the header tag
238:18 - over here so simply we are going to
238:19 - define the H3 tag in this case and we
238:22 - will say this is heading three so guys
238:25 - basically since this is the Block Level
238:27 - element then the H3 tag content should
238:31 - be displayed on the next line over here
238:33 - after providing certain spacing on the
238:36 - top and the bottom so let me just save
238:38 - this file now and try reloading this
238:40 - page once again on the browser so as you
238:42 - can see automatically The Heading
238:45 - content is getting displayed on the next
238:47 - line after this inline element so guys
238:49 - this is the difference between the Block
238:51 - Level element and the inline elements
238:53 - over here basically the Block Level
238:55 - element takes the entire width of the
238:57 - screen and it also provides the
238:59 - automatic spacing to the top and the
239:02 - bottom of the HTML element whereas the
239:04 - inline element only takes the required
239:07 - space as far as its content is concerned
239:09 - now guys apart from this we also have
239:11 - something called as display none over
239:13 - here so guys to understand this more
239:15 - clearly what we can do is let's say this
239:17 - click here that is the anchor tag we get
239:20 - it in between both these span tags in
239:22 - this case so inside this HTML code over
239:25 - here simply I'm going to cut this line
239:27 - of code and paste it in between the span
239:29 - tags so let me just save this file now
239:32 - and try reloading this page once again
239:34 - on the browser so as you can see we have
239:36 - the first span tag over here followed by
239:38 - the a tag that is the anchor tag and
239:41 - Then followed by another span tag in
239:43 - this case now guys let's say we want to
239:46 - provide display none property for the a
239:48 - tag now guys what is the meaning of
239:50 - display none basically it is going to
239:52 - hide this particular HTML element from
239:55 - the web page so let us check that as
239:57 - well so inside the style.css file over
240:00 - here specifically for the a tag we want
240:02 - the display property to be set as none
240:05 - so in this case we are going to provide
240:07 - the display CSS property and the value
240:10 - will be none over here so let me just
240:12 - save this file now enter by reloading
240:14 - this page once again on the browser if
240:16 - you notice currently we have the click
240:18 - here text which is the anchor tag in
240:21 - this case now when we reload this page
240:23 - as you can see now it is no longer
240:25 - present so guys we use the display none
240:28 - property in such cases where we don't
240:30 - want to display the HTML element or we
240:33 - want to temporarily hide the HTML
240:35 - element from the user in order to
240:37 - achieve certain functionality so if you
240:40 - go to the inspect option over here let
240:42 - us go to the inspect option in this case
240:45 - and we will be seeing that there is the
240:47 - a tag over here but it is having the
240:49 - display property as none so when we
240:51 - uncheck this property so again it is
240:53 - getting displayed right now and then
240:55 - when we check this property it is
240:57 - getting hidden and one important thing
240:59 - that you can notice is there is no space
241:02 - that is left for that particular a tag
241:04 - and the other inline element is taking
241:07 - the space for that particular anchor
241:09 - text over here so guys this is the
241:11 - functionality of the display none
241:13 - property now apart from this we also
241:15 - have something called as visibility is
241:17 - equal to Hidden so guys we have the
241:19 - visibility CSS property that we can use
241:22 - in order to hide the HTML element but
241:25 - there is a difference between the
241:26 - display none property and the hidden
241:28 - value of the visibility CSS property so
241:31 - let us check that as well so instead of
241:33 - providing display none over here let me
241:36 - just comment out this line of code and
241:38 - what we will do is simply we are going
241:40 - to say visibility CSS property in this
241:43 - case and we will say hidden so guys let
241:45 - me just save this file now and try
241:47 - reloading this page once again on the
241:49 - browser so now if you see instead of
241:51 - display property since we are using
241:53 - visibility hidden so the space that is
241:56 - required by that particular anchor text
241:59 - is still getting reserved over here and
242:01 - the next inline element is getting
242:03 - displayed after the space that is
242:04 - reserved for this particular inline
242:07 - element over here so guys this is the
242:09 - main difference when we use the display
242:11 - none property so if we check the dis
242:14 - none property over here the space is no
242:16 - longer present for that particular HTML
242:19 - element but when we use the visibility
242:21 - hidden property then the space will be
242:23 - reserved so when we check this
242:25 - particular CSS property over here so the
242:28 - HTML element is hidden but the space is
242:31 - reserved for that HTML element So based
242:33 - on your requirements if you want to hide
242:35 - any of the whether it is a inline
242:38 - element or the block element you can
242:40 - either use display none property if you
242:42 - don't want to reserve the the space for
242:44 - that particular element and if you want
242:46 - to reserve that space then you can use
242:48 - the visibility is equal to Hidden
242:50 - property over here now guys apart from
242:52 - this we also have something called as
242:54 - inline block so we have seen the Block
242:56 - Level element and the inline element as
242:59 - well what is the meaning of inline block
243:01 - so guys let's say we remove the display
243:03 - and the visibility CSS property in this
243:06 - case so guys after removing the display
243:08 - and the visibility properties over here
243:10 - let's say we want to apply certain
243:12 - height to this anchor tag so we provide
243:15 - the height CSS property and for this
243:18 - height let's say we want the 50 pixels
243:20 - value to be provided so let me just save
243:23 - this file now and try reloading this
243:24 - page once again on the browser so guys
243:27 - as you can see we have provided the
243:29 - height of 50 pixels over here but let us
243:31 - say we want to provide certain
243:33 - background color as well so that we can
243:35 - see that height of 50 pixels so in this
243:38 - case let us say we provide the
243:40 - background color and this color will be
243:42 - aqua color over here so let me just
243:44 - reload this page once again on the
243:46 - browser so as you can see we have
243:48 - provided the aqua background color as
243:50 - well but guys this particular height
243:52 - property is not getting implemented over
243:54 - here and we have this little icon in
243:57 - this case and it says the display inline
243:59 - property prevents height from having an
244:02 - effect try setting display to something
244:04 - other than inline as in this specific
244:06 - example whenever you want to set the
244:08 - width and height of the inline elements
244:11 - you can make the display property of
244:13 - that that inline element as inline block
244:16 - so guys let us check that as well so
244:18 - simply inside the anchor tag we will
244:20 - have the display CSS property by default
244:23 - it is set to the inline value for this
244:26 - particular anchor tag but in this case
244:28 - we will say inline hyphen block so guys
244:31 - this is the value that we are going to
244:33 - use and this value will help us in order
244:36 - to set the height and width for that
244:39 - particular HTML element so let me just
244:41 - save this file now and try read loading
244:44 - this page once again on the browser so
244:46 - now if you see we have the height of 50
244:48 - pixels that is getting displayed and it
244:50 - can be proved since we are getting the
244:52 - background color as Aqua for this
244:54 - particular link tag which is having the
244:56 - height of 50 pixels over here and now
244:59 - there is no longer any icon that is
245:00 - getting displayed over here so we can
245:03 - uncheck the height as well so by default
245:05 - it is taking the required height in this
245:07 - case and when we check this option so it
245:09 - is taking the 50 pixels height in this
245:12 - case so guys basically you can use the
245:14 - inline block display value in order to
245:17 - set the height and width of a particular
245:19 - HTML element specifically for those
245:22 - elements for which the display value is
245:24 - in line so guys in this way you can use
245:26 - the inline and the Block Level elements
245:28 - over here based on your requirements
245:30 - comment in the comment section below
245:32 - whether you have learned something out
245:33 - of this video please make sure that you
245:35 - like this video so that it reaches to
245:37 - more people and subscribe to this
245:39 - channel so that you get the
245:40 - notifications on upcoming videos as well
245:42 - the next video that we are going to talk
245:44 - about is going to be an exercise to
245:46 - create the navigation bar in CSS so stay
245:51 - tuned so now we will work on an exercise
245:54 - to create the navigation bar in CSS so
245:57 - basically we are going to follow the
245:59 - below steps in order to complete this
246:01 - practice exercise on creating the
246:03 - navigation bar in CSS so guys you can
246:06 - pause this video and practice on your
246:08 - own using the CSS properties that you
246:10 - have learned so far so first of all we
246:12 - are going to create the unordered list
246:15 - and have the four items as links that is
246:18 - home blog languages and contact so guys
246:21 - let us move to the vs code over here and
246:23 - simply I'm going to remove the previous
246:25 - lines of code that we had written inside
246:27 - the body tag of the HTML file and also
246:30 - we will remove the content of the CSS
246:33 - file over here and then inside the HTML
246:36 - file we are going to have the unordered
246:38 - list with the list item so guys over
246:41 - here as a shortcut you can also use the
246:44 - unordered list that is the UL tag
246:46 - followed by the greater than symbol and
246:49 - Then followed by the lii tag over here
246:51 - guys as you can see this is the event
246:53 - abbreviation and when you press enter as
246:55 - you can see you have the starting and
246:57 - the ending unordered list that is the UL
247:00 - tag and also the first list item over
247:02 - here with the help of the LI tag and
247:05 - inside this we can Define our list items
247:08 - as well but these list items are going
247:10 - to be links in this case so guys
247:12 - basically we are are going to use the a
247:14 - tag over here and for the HF attribute
247:17 - we are going to provide the hash
247:19 - character and inside the a tag it is
247:21 - going to be the home tag over here
247:24 - followed by blog languages and contact
247:27 - so guys let us Define that as well
247:29 - simply I'm going to paste this line of
247:31 - code and then over here we will say blog
247:34 - followed by languages and then in the
247:37 - end we have the contact list item in
247:40 - this case so guys let me just save this
247:42 - file now and try reload this page on the
247:44 - browser so as you can see we have all
247:47 - the list items in this case and since it
247:49 - is the unordered list we have the
247:51 - bullets over here now guys let us move
247:53 - to another task we need to remove the
247:55 - bullets and the underline from the
247:57 - unordered list item so what we can do is
248:00 - simply we have to provide the CSS
248:02 - properties inside the style. CSS so guys
248:05 - in order to remove the bullets from this
248:08 - unordered list over here you can see
248:10 - these bullets what we can do is we can
248:12 - use the list Style type property for the
248:15 - unordered list tag so in this case we
248:18 - say the UL tag over here and simply we
248:21 - are going to provide the list type CSS
248:23 - property and we will say none in this
248:26 - case so guys in order to remove the
248:28 - bullets from the unordered list or the
248:31 - numbers from the ordered list we can
248:33 - Define the list style type equal to none
248:36 - so that there are no bullets or the
248:37 - numbers getting displayed for the list
248:40 - items let me just save this file now and
248:42 - try reloading this this page once again
248:44 - on the browser so as you can see there
248:46 - are no bullets right now that are
248:47 - getting displayed now guys what we can
248:49 - do is simply we can remove the underline
248:52 - from these links as well so we will move
248:54 - to style. CSS property and what we can
248:57 - do is we can use the UL tag as the
248:59 - parent tag followed by the space
249:01 - character and then we have the Alli tag
249:04 - that is the anchor tag so guys simply we
249:06 - can also use the a tag over here but as
249:09 - your application grows into the complex
249:12 - application we need to be more specific
249:14 - as far as the CSS selectors are
249:16 - concerned so guys over here we are going
249:18 - to use the text decoration property in
249:21 - order to remove the underline from the
249:24 - anchor tags so in this case we are going
249:26 - to use the text decoration property and
249:28 - in this case we are going to use the
249:31 - value as none so guys basically by
249:33 - default we have the underlines for this
249:35 - anchor tag but we can use the text
249:37 - decoration property in order to remove
249:40 - the underline by using the none value
249:42 - for the Cs s property so let me just
249:45 - save this file now and try reloading
249:47 - this page once again on the browser so
249:49 - as you can see there is no underline now
249:51 - and we are seeing the pure anchor tags
249:54 - over here without the underline and also
249:56 - it doesn't look like this is the list
249:58 - items inside the unordered list now guys
250:01 - we need to convert this list into the
250:03 - navigation bar over here which is going
250:05 - to have certain background color in this
250:08 - case so guys let us move to another task
250:10 - so as you can see make the items look in
250:12 - line with a black background color so
250:15 - guys what we can do is we need to make
250:17 - these list items look in line over here
250:20 - so simply we are going to come inside
250:22 - the style. CSS file and for the list
250:24 - items we are going to have the display
250:27 - property as inline block so guys let us
250:30 - do that as well so inside the unordered
250:32 - list we are going to have the lii tag
250:35 - over here and for this particular CSS
250:38 - selector we are going to say display CSS
250:41 - property and simply we are going to use
250:43 - the inline Sal property so guys
250:45 - basically this is the property that we
250:47 - are going to use in order to make all
250:49 - these list items look in line so that
250:52 - they are displayed on the same line over
250:54 - here so guys let me just save this file
250:56 - now and try reloading this page once
250:58 - again on the browser so as you can see
251:00 - the list items are getting displayed on
251:03 - the same line now and guys we will also
251:05 - have the background color so for the UL
251:08 - that is the unordered list we are going
251:10 - to have the background color over here
251:12 - so guys for the UN ordered list that is
251:14 - the UL tag we will have the back so
251:17 - let's say we have the background color
251:19 - and we Define the background color as
251:21 - black in this case and apart from this
251:23 - for the black background color we would
251:25 - want the text color of these links to be
251:28 - displayed as white color so for the a
251:30 - tag for which we have the text
251:32 - decoration as none we will simply say
251:34 - color and this text color we need to set
251:37 - it as white so that it looks more decent
251:40 - on the black color background so guys
251:42 - let me just save this file now and try
251:44 - reloading this page once again on the
251:46 - browser so as you can see we have the
251:48 - black background in this case and then
251:50 - we have the white text color as well now
251:53 - guys we can also have certain padding
251:55 - over here for all the links so that it
251:57 - becomes more readable and also it looks
252:00 - like it is a navigation bar so what we
252:02 - can do is again inside the a tag we are
252:04 - going to have the padding of five pixels
252:07 - so let's say we have the padding of 5
252:10 - pixels in this case let me just save
252:12 - this file now and I reloading this page
252:14 - once again on the browser so as you can
252:16 - see we have the padding as well as 5
252:19 - pixels in this case now guys apart from
252:21 - this you can see there is certain
252:22 - spacing on the left of the home over
252:25 - here and also above the navigation bar
252:28 - and to the left of the navigation bar so
252:30 - guys let us check the main reason behind
252:32 - this spacing and the margins so let us
252:34 - go to the inspect option over here after
252:37 - right clicking and let us check one at a
252:39 - time all the HTML elements so as you can
252:42 - see for the tag over here we are getting
252:45 - the margin so the orange color region
252:47 - over here above and below the black
252:50 - color background is displaying the
252:52 - margin of this UL tag so guys if you
252:55 - come over here you can see that we have
252:57 - the margins that are getting displayed
252:59 - by default for this Block Level element
253:01 - so what we can do is for the UL tag
253:04 - simply we are going to set the margin as
253:06 - 0 pixels so in this case we are going to
253:09 - say margin is equal to 0 pixels over
253:12 - here let me just save the this file now
253:14 - and try reloading this page once again
253:15 - on the browser so now as you can see
253:17 - there is no margin right now when we
253:20 - hover over this UL tag in this case but
253:22 - guys again we have certain margin over
253:25 - here for the body tag so as you can see
253:27 - on the body tag we are getting the
253:29 - orange color that is getting highlighted
253:31 - which is the margin by default for the
253:34 - body tag that is getting displayed over
253:36 - here you can see that it is the 8 pixels
253:38 - margin so let us remove that as well so
253:41 - before the UL tag it is one of the best
253:44 - practices that you provide the body tag
253:47 - and then you provide the values of
253:48 - margin as 0er pixels and padding as well
253:52 - as 0er pixels over here so guys this is
253:54 - done as one of the best practices in
253:56 - order to remove the default margin and
253:59 - paddings from the body tag so let me
254:01 - just save this file now and try
254:03 - reloading this page once again on the
254:05 - browser so now as you can see we don't
254:07 - have any spacing for the body tag over
254:10 - here as well now guys we can also
254:11 - increase the spacing for the list items
254:14 - over here as far as the top and the
254:16 - bottom spacing is concerned for all
254:18 - these list items so what we can do is
254:21 - inside the LI tag over here for which we
254:23 - have displayed as inline block we can
254:26 - provide the padding tag in this case and
254:29 - let's say we want five pixels of padding
254:31 - over here so let me just save this file
254:33 - now and try reloading this page once
254:35 - again on the browser now as you can see
254:37 - we have the padding that is getting
254:39 - defined for these list items on the top
254:42 - and the bottom as well well and guys
254:43 - apart from this let's say we want to
254:45 - come on these particular links that is
254:47 - the home and the blog link and we want
254:49 - certain background color so that the
254:52 - user gets the confirmation that yes this
254:54 - is the link that he or she wants to
254:56 - select so what we can do is specifically
254:59 - for this Li elements over here that is
255:01 - the list items we want to provide the
255:04 - background color but guys it should be
255:06 - on the hover state which means when we
255:08 - get the cursor on that particular list
255:10 - item then the background color should be
255:12 - updated so simply we are going to define
255:15 - the UL tag over here followed by the lii
255:18 - tag and this time we want to use the
255:19 - hover state so in this case we are going
255:22 - to use the colon followed by over state
255:25 - in this case so guys let me use this
255:27 - particular option guys for this state we
255:29 - are going to provide the background
255:31 - color CSS property so let us provide the
255:33 - CSS property and let's say we want the
255:36 - background color to be read when we get
255:38 - the mouse cursor on this particular list
255:41 - item inside the UN ordered list so guys
255:44 - let me just save this file now and try
255:46 - reloading this page once again on the
255:47 - browser so now if you see when we get
255:50 - the cursor over here the items are
255:52 - getting displayed with the red color
255:54 - background and this is one of the good
255:56 - practices that you can follow based on
255:58 - your requirements whenever you are
255:59 - creating project so guys in this way out
256:02 - of a very simple unordered list that we
256:04 - have defined inside our HTML file we
256:07 - have converted it into one of the
256:10 - attractive navigation Bars by using the
256:13 - style. CSS properties over here for the
256:16 - unordered list and the list items and
256:18 - the anchor tags as well so guys this is
256:21 - one of the ways that you can use in
256:23 - order to create your own navigation bars
256:25 - over here so guys comment in the comment
256:27 - section below whether you have learned
256:29 - something out of this video please make
256:31 - sure that you like this video so that it
256:32 - reaches to more people and subscribe to
256:34 - this channel so that you get the
256:36 - notifications on upcoming videos as well
256:38 - the next video that we are going to talk
256:40 - about is position property in CS SS so
256:43 - stay
256:45 - tuned so now we will see position
256:47 - property in CSS so guys basically the
256:50 - position property specifies the type of
256:53 - positioning method that is used for an
256:55 - HTML element and there are five
256:58 - different position values that we will
257:00 - see with the help of examples as well so
257:02 - the very first position value is the
257:04 - static which is the default position
257:07 - value so guys the static positioned
257:09 - elements are not affected by the top
257:12 - bottom left and right properties that we
257:15 - are going to see with the help of
257:16 - examples apart from the static value we
257:19 - have the relative value of the position
257:21 - property we also have the fixed value
257:24 - and then we have absolute value and then
257:26 - we have the sticky value so guys we will
257:28 - check all these in detail with the help
257:30 - of examples so let us move to the vs
257:33 - code over here and we will remove the
257:35 - previous lines of code that we had
257:36 - return previously in the HTML and the
257:39 - CSS files over here now guys in the HTML
257:42 - file let us create a div so over here we
257:44 - will have the div tag and let's say for
257:47 - this div tag we are going to give the
257:49 - class name as static so guys we will
257:51 - give this class name so that we can
257:53 - create the properties related to this
257:56 - particular class and we will identify
257:58 - the different Dev tags based on these
258:01 - class names over here so guys basically
258:03 - we are going to write the content that
258:05 - this is a Dev tag with static position
258:10 - so guys over here this is the content of
258:12 - this div tag let me just save this file
258:14 - now and try reloading this page on the
258:16 - browser so as you can see we have a
258:18 - simple statement that is this is a div
258:20 - tag with static position now guys we
258:22 - have not provided any CSS properties for
258:25 - now for this particular div tag so let
258:27 - us do that as well so what we will do is
258:30 - over here in the CSS file we will say
258:33 - div tag with the class name that is
258:35 - static over here and then inside this we
258:38 - are going to give the border so let's
258:40 - say we have the border of 2 pixels that
258:42 - is of the type solid and then we have
258:45 - the color s black color for this border
258:48 - let me just save this file now and try
258:49 - reloading this page once again on the
258:51 - browser so as you can see this is a diff
258:54 - tag with static position which is the
258:55 - default position over here now guys when
258:58 - we provide the other properties such as
259:00 - top or left or right or bottom so these
259:03 - properties will not be implemented on
259:06 - this particular div tag so let us check
259:08 - that as well so let's say we want
259:10 - certain spacing from the top so
259:12 - basically we use the top property of the
259:15 - CSS in order to provide the spacing from
259:17 - the top and let's say when we provide 30
259:19 - pixels over here s the spacing so let me
259:22 - just save this file now and try
259:23 - reloading this page once again on the
259:25 - browser so as you can see there is no
259:27 - change for now since a default position
259:29 - that is the static position does not
259:31 - allow you to make any changes with
259:34 - respect to the spacing as far as these
259:36 - properties are concerned that is top
259:38 - left bottom and right so guys this is
259:40 - the default behavior of all the HTML
259:43 - Elements which have the position as
259:45 - static by default now guys let us see
259:47 - another example over here we have the
259:49 - relative value as well so the element is
259:52 - positioned relative to its normal
259:54 - position so guys let us create another
259:56 - diff tag over here so in the VSS code
259:58 - inside the HTML file in this case we
260:01 - will create another Dev with the class
260:04 - name that is relative over here so gu
260:06 - simply you can use a DOT character
260:09 - followed by the name of the class in
260:11 - order to create the div tag with this
260:13 - particular class name and when we press
260:15 - on the enter button over here as you can
260:17 - see the div tag with the class name is
260:19 - created in this case and simply we can
260:22 - say this is a diff tag with relative
260:25 - position so guys over here this is the
260:27 - statement inside this div tag let me
260:29 - just save this file now and try
260:31 - reloading this page once again on the
260:33 - browser so now as you can see we have
260:35 - this is a div tag with relative position
260:37 - and this is the default static position
260:39 - over here since we have not provided the
260:42 - relative position explicitly inside the
260:44 - CSS file so guys this is the default
260:47 - behavior of all the HTML elements that
260:49 - you are going to write on this
260:50 - particular web page so let us see how we
260:53 - can provide the relative position for
260:55 - this particular Dev so guys we will use
260:57 - the tag name that is diff followed by
260:59 - dot since it is a class name and Then
261:01 - followed by the relative class name over
261:04 - here and then we are going to say
261:05 - position in this case and the value that
261:07 - we are going to use is relative so guys
261:10 - this is the value that we will be using
261:12 - so let's let me just save this file now
261:13 - and try reloading this page once again
261:15 - on the browser as you can see there is
261:17 - no change for now that's because we have
261:19 - not provided any top or left property
261:22 - over here guys again in this case we
261:24 - have missed out the position property
261:26 - which is by default static so over here
261:28 - we will mention the position as static
261:31 - in this case so it doesn't matter
261:32 - whether you provide this position
261:34 - property with the value of static or not
261:36 - since the default behavior that is the
261:38 - default value of this position property
261:40 - will be static always until and unless
261:43 - you provide the other value for this
261:45 - position property now guys since there
261:47 - is no change for this D tag with the
261:49 - relative position let us provide certain
261:51 - top and left properties of the CSS so
261:55 - over here let's say we provide the top
261:57 - property and we provide the value as 30
261:59 - pixels and for the left property as well
262:02 - we provide the 30 pixels in this case
262:04 - let me just save this file now notice
262:06 - that we had also provided the top
262:09 - property as 30 pixels for static but
262:11 - this time we are providing adding the
262:12 - top and left property for the relative
262:15 - position over here first of all let us
262:17 - check how the top property will work so
262:19 - let me just comment out this line of
262:21 - code let me just save this file now and
262:23 - try reloading this page once again on
262:25 - the browser so as you can see this is
262:27 - the spacing that is being provided over
262:29 - here which is 30 pixels right now from
262:31 - top and this is the way that the
262:33 - relative Position will work so basically
262:35 - whatever its original position would be
262:37 - with static position property from there
262:40 - onwards whatever value we provide that
262:42 - is for the top or the left property or
262:44 - the other two that is bottom and right
262:47 - properties so those properties will be
262:49 - implemented over here let's say from the
262:51 - left also we want the 30 pixels of
262:53 - spacing for this particular depth so
262:55 - what we can do is simply we will
262:59 - uncommanded border of two pixels over
263:02 - here with the Border style of solid and
263:05 - the color that is black in this case and
263:07 - let me provide the background color as
263:09 - well over here so we have provided the
263:11 - background color of of yellow so let me
263:13 - just save this file now and try
263:15 - reloading this page once again on the
263:16 - browser so as you can see from the left
263:18 - also we have the 30 pixels of spacing
263:21 - and over here from Top as well we have
263:23 - the 30 pixels of spacing now guys one
263:25 - very important thing over here is this
263:27 - entire div is being shifted to the right
263:30 - in this case so as you can see we are
263:31 - getting the scroll bar that is the
263:33 - horizontal scroll bar on the bottom so
263:35 - it is going outside of the screen over
263:37 - here right now that's because we have
263:39 - not provided any specific width for this
263:42 - particular Dev and this is how the
263:44 - behavior of the position will work
263:46 - whenever we are going to use it along
263:48 - with the other properties such as top
263:50 - left bottom and right so guys this is
263:52 - the relative position example that we
263:54 - have seen so far and it will overlap
263:57 - with the other div elements as well so
263:59 - let us provide another element in this
264:01 - case in the HTML page so let's say we
264:04 - have a P tag over here so simply we are
264:07 - going to have the P tag with the
264:09 - statement that is this is a paragraph
264:11 - tag so over here we have the very simple
264:14 - statement so let me just save this file
264:15 - now and try reloading this page once
264:17 - again on the browser so as you can see
264:19 - we have the statement that is this is
264:21 - the paragraph tag which is behind this
264:23 - particular div tag over here why so
264:26 - because this particular div tag was
264:28 - supposed to be over here at its normal
264:30 - position but it has changed the position
264:32 - and now it is overlapping with the
264:34 - paragraph tag which is at its normal
264:36 - position right now so guys this is how
264:38 - the relative Position will work it might
264:40 - overlap with the other HT ml elements if
264:43 - you provide the spacing properties that
264:45 - is top left bottom or right if we remove
264:48 - the top spacing over here from the
264:50 - relative class so let me just comment
264:52 - out this line of code and let me just
264:54 - save this file now and try reloading
264:56 - this page once again on the browser so
264:57 - as you can see there is no top spacing
264:59 - right now and this is the normal
265:01 - behavior of all the HTML element now
265:04 - guys apart from this we also have
265:05 - something called as fixed value so the
265:07 - element is positioned relative to the
265:09 - view port in this case which means it
265:11 - always stays in the same place even if
265:14 - the page is scrolled so guys let us
265:16 - check the example of this particular
265:18 - fixed value of the position property so
265:20 - let us use this example of paragraph tag
265:23 - in order to implement the position of
265:25 - fixed value so let me just provide the
265:28 - class name as fixed over here in this
265:30 - case so we have provided the class name
265:32 - as fixed and then in the style. CSS file
265:34 - over here we will say P tag followed by
265:37 - Dot and then we have something called as
265:39 - fixed over here so guys let us say we
265:41 - want this particular paragraph to be
265:43 - fixed at the bottom left of this page so
265:46 - how we can do that so we can use the
265:48 - position is equal to fixed property in
265:50 - such cases where we want to fix the HTML
265:53 - elements on the web pages so guys over
265:55 - here first of all we will provide the
265:57 - position property and the value will be
265:59 - fixed in this case and in order to make
266:01 - it as fixed at the bottom left we have
266:04 - to use the bottom property and it should
266:06 - be zero pixels over here which means we
266:08 - want no spacing as far as the bottom
266:10 - spacing is concerned and and from the
266:12 - left as well we don't want any spacing
266:14 - so we provide the left property and we
266:17 - say zero pixels in this case guys apart
266:19 - from this let us provide certain width
266:21 - and the background color as well for
266:23 - this particular paragraph tag so let's
266:25 - say we provide the width of 500 pixels
266:27 - in this case so simply we are going to
266:29 - say 500 pixels as width and the
266:32 - background color as Aqua so over here we
266:35 - are using the aqua background color and
266:37 - let us provide the Border as well of two
266:39 - pixels which is of the type solid and
266:41 - the color color will be black in this
266:43 - case let me just save this file now and
266:45 - try reloading this page once again on
266:47 - the browser so as you can see this is a
266:49 - paragraph tag is now being fixed at the
266:52 - bottom of the page over here with the
266:54 - 500 pixels width now guys even if you
266:56 - scroll this page this paragraph will be
266:58 - fixed at the bottom left so guys how do
267:01 - we check this let us provide certain
267:03 - content over here so that we can scroll
267:05 - this web page horizontally so we will
267:07 - have another paragraph tag that is the P
267:10 - tag over here and let's generate some
267:12 - random text on this page so guys over
267:14 - here we will use the lauram Mt
267:16 - abbreviation so as you can see we have
267:18 - generated some random text over here on
267:20 - this particular web page let me just
267:22 - save this file now and try reloading
267:24 - this page once again on the browser so
267:26 - as you can see we have the enough
267:27 - content on this web page now in order to
267:30 - scroll this page so guys when we scroll
267:32 - this page so as you can see vertically
267:34 - we are scrolling the page the other
267:36 - content that is the static position and
267:38 - the relative Position will scroll itself
267:40 - and it will disappear from the page as
267:42 - we scroll down but as you can see the
267:44 - paragraph is still fixed over here at
267:46 - the bottom position in this case so guys
267:48 - in this way you can easily use the
267:50 - position is equal to fixed property in
267:52 - order to fix any particular HTML element
267:55 - on the web page based on your
267:57 - requirement now guys apart from this we
267:59 - also have another value that is absolute
268:01 - for the position property so in this
268:03 - case the element is positioned relative
268:06 - to the nearest positioned ancestor so
268:08 - guys let us check this with the help of
268:10 - example now so I'm going to remove this
268:12 - particular paragraph tag with the random
268:15 - text that we had generated and we are
268:17 - going to create another diff but this
268:19 - time we are going to create the diff tag
268:22 - inside this particular diff tag which is
268:24 - having the position that is relative
268:26 - over here so guys we have to come inside
268:28 - this particular diff tag and then we
268:30 - will say div with the class absolute so
268:32 - guys we have created the class that is
268:34 - absolute over here and before providing
268:36 - any content let us make some changes in
268:38 - the relative class as far as the CSS
268:41 - properties are concerned so what we can
268:43 - do is for the relative class over here
268:45 - we will provide the top property as 30
268:48 - pixels and the left property as well as
268:50 - 30 pixels over here but guys we are also
268:52 - going to provide the width so let's say
268:54 - we provide the width of 400 pixels in
268:57 - this case so we provide the width of 400
268:59 - pixels and also we want to provide the
269:02 - height of 300 pixels so over here we
269:04 - have provided the width and height of
269:06 - 400 and 300 pixels respectively let me
269:09 - just save this file now and try
269:11 - reloading this page once again on the
269:13 - browser so as you can see this is the
269:15 - div with the relative position now guys
269:17 - the height is too much over here so let
269:19 - me just change the height to 100 pixels
269:21 - in this case so let me just save this
269:23 - file now and try reloading this page so
269:25 - as you can see we have the height of 100
269:27 - pixels and the width of 400 pixels right
269:29 - now now guys inside this particular diff
269:31 - tag we will be creating another diff
269:34 - which is having the absolute positions
269:36 - over here we will say this is a diff tag
269:39 - with absolute position guys this is a
269:41 - statement that is this is a diff tag
269:43 - with absolute position let us see how it
269:45 - will look like on the UI so let me just
269:47 - save this file now and try reloading
269:49 - this page once again on the browser so
269:51 - as you can see this statement is just
269:53 - below the statement of the parent TI tag
269:56 - that is the relative position tag now
269:58 - guys let us say we want this particular
270:00 - absolute position tag to be at the
270:03 - bottom right of this particular parent
270:05 - tag over here so what we can do is first
270:08 - of all let us provide some background
270:09 - color over here so that we can identify
270:12 - the absolute diff tag over here so we
270:15 - will say div followed by Dot and then we
270:18 - have this absolute class name now guys
270:20 - what we will do is we will provide the
270:23 - background color of let's say blue color
270:25 - in this case so let me just save this
270:27 - file now and try reloading this page
270:29 - once again on the browser so we have
270:31 - this blue color is the background color
270:33 - let us use some light color over here so
270:35 - instead of blue color let's say we have
270:38 - this aquamarine color in this case so
270:40 - guys let me just save this file now and
270:42 - try reloading this page once again on
270:43 - the browser so this is looking good now
270:46 - now guys let us say we want to decrease
270:48 - the width of this particular div tag
270:50 - because it is taking the width of its
270:52 - parent tag over here which is 400 pixels
270:55 - so let us provide the width as 300
270:57 - pixels over here so we will say width is
270:59 - equal to 300 pixels now guys what is the
271:02 - meaning of absolute position so based on
271:05 - its parent tag which is this particular
271:08 - relative position tag over here it will
271:10 - change its position so let's say if we
271:12 - want this particular div tag to be at
271:15 - the bottom right of this parent tag
271:17 - simply we can say bottom is equal to0
271:20 - and right is equal to zero so it will
271:22 - position itself based on its ancestor
271:25 - which is the parent tag over here so let
271:27 - us try that so what we will do is simply
271:29 - we will say bottom position which should
271:31 - be zero over here and the right position
271:34 - as well which should be zero in this
271:36 - case so let me just save this file now
271:38 - and try reloading this page once again
271:39 - on the browser so when we reload this
271:41 - page as you can see there is no change
271:43 - right now now guys that's because we
271:45 - have not provided the position property
271:47 - over here so let us provide that so we
271:49 - provide the position property in this
271:51 - case and simply we will say absolute
271:54 - over here now guys let me just save this
271:56 - file now and try reloading this page
271:58 - once again on the browser so as you can
272:00 - see now it is at the bottom right of
272:03 - this particular parent tag that is the
272:05 - relative diff tag over here so guys in
272:07 - this way whenever you are going to use
272:09 - the position is equal to Absolute
272:11 - property for any particular HTML element
272:14 - then the position of that particular
272:16 - element will be provided based on its
272:18 - ancestor which is the parent tag over
272:21 - here now guys there is another scenario
272:23 - let's say if this particular absolute
272:25 - div tag is not present in any of the
272:28 - parent HTML tags over here but in case
272:30 - it is present directly inside the body
272:33 - so in this case what will happen so when
272:35 - we remove this particular diff tag and
272:37 - let's say we provide it inside the body
272:40 - tag over here so in this case Cas the
272:42 - body tag is its parent tag that is the
272:44 - ancestor tag over here so in such a case
272:47 - the entire body that is the entire page
272:50 - will be considered and then accordingly
272:52 - the diff tag will be positioned over
272:54 - here so let me just save this file now
272:56 - and try reloading this page once again
272:58 - on the browser so as you can see on the
273:00 - bottom right of this entire page this
273:03 - particular diff tag with the absolute
273:05 - position is now getting displayed so
273:07 - guys in this way whenever you are going
273:09 - to use the absolute value for the
273:11 - position property so based on the
273:14 - ancestor or the parent tag the HTML
273:17 - element will be positioned on the web
273:19 - page now guys apart from this we also
273:21 - have something called as sticky value
273:22 - for the position so whenever you want
273:25 - the element to be positioned based on
273:27 - the users scroll position then you can
273:30 - use the sticky value and you must also
273:32 - specify at least one of top right bottom
273:35 - or left for sticky positioning to work
273:38 - so guys let us check this with the help
273:39 - of example now in vs code over here so
273:42 - what we will do is we will create
273:44 - another paragraph tag in this case and
273:46 - this time we will say class is equal to
273:49 - Sticky over here so we will say class is
273:51 - sticky and simply we are going to say
273:53 - this is a paragraph tag with sticky
273:56 - position so guys basically we have the
273:58 - statement that is this is a paragraph
274:00 - tag with sticky position and let us
274:02 - provide the top attribute for this
274:04 - sticky position over here so after
274:07 - saving this file let us come to this
274:08 - style. CSS file over here with the PEX
274:11 - followed by dot we have to use the class
274:14 - name that is sticky and then inside this
274:16 - we are going to give the position
274:17 - property first of all in which case we
274:19 - are going to say that this is the sticky
274:21 - position and let's say we provide the
274:23 - top property with 100 pixels of spacing
274:26 - and after giving the top property let's
274:28 - say we provide the background color as
274:30 - well so over here we will give the
274:32 - background color as a deep sky blue
274:35 - color over here so let us provide this
274:37 - particular color in this case let me
274:38 - just save this file now and try
274:40 - reloading this page once again on the
274:42 - browser so as you can see we have this
274:44 - is a paragraph tag with sticky position
274:46 - now guys what is the meaning of sticky
274:48 - position so whenever the user is going
274:50 - to scroll this particular web page this
274:52 - particular paragraph tag will stick
274:54 - itself at the top of this page so guys
274:56 - let us check that as well so we need to
274:59 - provide certain random text over here on
275:01 - the web page so guys we will create
275:03 - another paragraph tag in this case and
275:06 - simply we are going to generate the
275:08 - random text over here so guys by using
275:10 - the lauram m cre ation we have created
275:13 - some random text after the paragraph
275:15 - which is having the sticky class over
275:17 - here and the position is also sticky for
275:20 - this particular paragraph let me just
275:21 - save this file now and try reloading
275:23 - this page once again on the browser so
275:25 - as you can see we have some random text
275:27 - that is generated over here and we have
275:29 - the scroll bar that we can scroll in
275:31 - this case now guys as we scroll down you
275:33 - can notice that this is a paragraph tag
275:35 - will go up at the top of the page and
275:38 - then it will stick at the top of the
275:39 - page so when we are scrolling down over
275:41 - over here as you can see now it is
275:43 - sticky so guys since we have given the
275:45 - top property as 100 pixels over here
275:48 - that is the reason why it is keeping
275:50 - that space of 100 pixels in this case
275:52 - let us provide it as 0 pixels over here
275:54 - so when we provide top as 0 pixel in
275:57 - this case let me just save this file now
275:59 - and try reloading this page once again
276:01 - on the browser so now if you see when we
276:03 - scroll down it will go at the top of the
276:05 - page and then it will stick itself so
276:07 - guys this is the main functionality of
276:09 - the sticky position so basically you use
276:12 - the position is equal to Sticky whenever
276:14 - you want to fix something at the top of
276:17 - the page or at the bottom of the page
276:19 - while scrolling the web page so guys in
276:21 - this way you can use all the five values
276:23 - of the position property based on your
276:25 - project requirements now guys apart from
276:27 - this it is very important to note that
276:28 - the Internet Explorer does not support
276:31 - sticky positioning and the Safari
276:33 - browser requires a web kit prefix for
276:36 - the sticky position over here so this
276:38 - you should note while you are applying
276:40 - the position property in your project so
276:42 - guys comment in the comment section
276:44 - below whether you have learned something
276:45 - out of this video please make sure that
276:47 - you like this video so that it reaches
276:49 - to more people and subscribe to this
276:50 - channel so that you get the
276:51 - notifications on upcoming videos as well
276:54 - the next video that we are going to talk
276:55 - about is z index property in CSS so stay
276:59 - tuned so now we will see Zed index
277:02 - property in CSS so guys basically the
277:05 - Zed index property specifies the stack
277:08 - order of an element and this we are
277:10 - going to check with the help of EX
277:11 - examples as well when the elements are
277:13 - positioned they can overlap other
277:15 - elements as we have seen previously with
277:18 - the position property so guys The Zed
277:20 - index property specifies the stack order
277:23 - of an element that is which element
277:25 - should be placed in front of the other
277:27 - element or behind of the other element
277:30 - and so on so guys we will see how the
277:32 - Zed index property will get the elements
277:35 - in front or behind of the other HTML
277:37 - elements and the element can also have
277:40 - the positive and the negative stack
277:41 - order so when we say the Zed index is
277:44 - positive then it will be displayed on
277:46 - the top and when we say the Zed index is
277:48 - negative then it will be displayed
277:50 - behind of the existing HTML elements and
277:53 - by default The Zed index value will be
277:55 - zero now guys it is very important to
277:57 - note that the Z index only works on
278:00 - positioned elements such as when the
278:02 - position is equal to Absolute or
278:04 - position is equal to relative or if it
278:06 - is fixed or if it is sticky position
278:08 - guys The Zed index will not work with
278:10 - the position that that is set a static
278:12 - value and guys apart from this The Zed
278:14 - index will also work on the flex items
278:17 - that is the elements that are direct
278:19 - Children of the display is equal to flex
278:21 - so guys let us move to the vs code over
278:23 - here in order to see how the Zed index
278:25 - works and let me just remove the
278:27 - previous lines of code that we had
278:29 - written from the HTML file as well as
278:31 - the CSS files over here now guys simply
278:34 - we are going to define the P tag over
278:35 - here that is the paragraph tag and we
278:37 - will say below is an example of Zed
278:41 - index IND property so guys over here we
278:43 - are just providing the simple statement
278:45 - that is below is an example of Z index
278:47 - property and guys now let us provide the
278:49 - image over here so we use the IMG tag in
278:52 - this case and we have a sample image in
278:54 - our directory over here so this
278:56 - particular name we are going to provide
278:57 - in our SRC attribute so in this case we
279:00 - provide the name that is sample
279:03 - image.png file and let's say we provide
279:06 - the alternate text test test image over
279:08 - here apart from this we will also have
279:10 - the width and height in this case so
279:12 - let's say we have 150 pixels width and
279:14 - 100 pixels of height so we set the
279:16 - height as 100 pixels over here because
279:19 - apart from this let us have another
279:21 - paragraph tag so simply we are going to
279:23 - provide the P tag over here and this
279:25 - time let's say we generate some random
279:27 - text using the lurm Mt abbreviation so
279:29 - we have provided the random text over
279:32 - here now guys let me just save this file
279:34 - now and try reloading this page on the
279:36 - browser so as you can see we have a
279:38 - simple statement that is below is an
279:39 - example of Z index property and then we
279:42 - have the random text that is getting
279:43 - generated over here now guys let us
279:45 - provide the position property in such a
279:48 - way that this particular text should
279:50 - overlap with this image that we have
279:52 - provided over here on this web page so
279:54 - guys what we have to do is inside the
279:56 - style. CSS property we have to provide
279:58 - the position property for this P tag
280:00 - over here so guys before providing the
280:02 - position property let's say we provide
280:04 - certain ID over here and let's say we
280:06 - provide the ID as per 1 so guys let me
280:09 - just save this file now and over here we
280:11 - have to use this ID that is par 1 in
280:14 - this case so that we can identify that
280:16 - specific paragraph for which we want to
280:18 - set the position so guys let us provide
280:20 - the position as relative and then guys
280:22 - we will use the left and bottom
280:24 - attributes in order to get this
280:26 - particular text at the top of this image
280:29 - so guys let us do that as well so over
280:31 - here inside the par 1 iD of the
280:34 - paragraph We will say left is equal to
280:36 - 10 pixels in this case so that there is
280:38 - certain spacing that is provided from
280:40 - the left and from the bottom as well we
280:42 - should get some spacing so that the text
280:44 - is displayed on the top of the image so
280:47 - over here we will say bottom attribute
280:49 - in this case and let's say this time we
280:51 - provide 20 pixels on the bottom so guys
280:53 - let me just save this file now and try
280:55 - reloading this page once again on the
280:57 - browser so as you can see the text is
280:59 - now positioned slightly on top but guys
281:01 - still it is not coming on top of the
281:03 - image so what we have to do is I will
281:05 - increase the spacing from bottom to 40
281:08 - pixels over here let me just save this
281:10 - file now and try read loading this page
281:12 - so as you can see the text is now coming
281:14 - on top of this particular image guys let
281:16 - us provide the bottom to 70 pixels over
281:18 - here so that we can easily Identify some
281:21 - of the text that is coming on top of the
281:23 - image so this is the text that you can
281:25 - see is coming on top of the image and
281:27 - guys you will face these issues while
281:29 - you are working on your project based on
281:31 - the requirements so HTML elements are
281:34 - going to overlap with each other based
281:37 - on such positions or any other
281:39 - attributes that you will be giving to
281:40 - the HTML element so guys in such cases
281:43 - based on the requirements you have to
281:45 - decide which element needs to be
281:47 - displayed on top of the other element so
281:49 - by default the HTML Elements which are
281:51 - written later in our HTML file will be
281:54 - displayed on top by default so guys over
281:57 - here since the image is defined first
281:59 - and then followed by this P tag with the
282:01 - ID par one that is why this particular
282:04 - content of the paragraph is getting
282:06 - displayed on top of the image that we
282:08 - are displaying over here now guys in
282:10 - order to get this image on top of the
282:12 - text that is getting displayed over here
282:14 - inside the paragraph We need to provide
282:16 - the Zed index property for this
282:18 - particular image so guys let me just
282:20 - move to the style. CSS file over here so
282:23 - simply we are going to provide the image
282:25 - tag in this case and then over here
282:27 - simply we can provide the Zed index
282:29 - property and for this property we can
282:31 - set the value as one so guys basically
282:33 - by default The Zed index property for
282:36 - all the HTML element is set to zero over
282:38 - here and that is what is being set over
282:40 - here for the par one which is having the
282:42 - Zed index value as zero but when we set
282:45 - the Zed index property to one which
282:47 - means this particular image tag should
282:49 - come on top of the other HTML elements
282:52 - that is having the value of zero for the
282:54 - Zed index property guys apart from this
282:56 - we also have to set the position is
282:58 - equal to relative for this particular
283:01 - image tag in order for this Zed index to
283:03 - be effective because by default the
283:06 - position is static over here for the IMG
283:08 - tag in this case so let us test this
283:10 - scenario first first before providing
283:12 - the position property let me just save
283:14 - this file now and try reloading this
283:16 - page once again on the browser so as you
283:18 - can see the image is still behind this
283:20 - particular paragraph text over here
283:22 - that's because as I have already told
283:24 - you the Zed index only works on the
283:26 - positioned Elements which is having
283:28 - certain position and it should not be a
283:30 - static value so guys over here we need
283:33 - to provide the position property and
283:35 - then this position property let's say we
283:37 - provide it as relative value over here
283:39 - let me just save this file now and try
283:41 - reloading this page once again on the
283:43 - browser so now as you can see the image
283:45 - is getting displayed on top of this
283:47 - particular paragraph text since the imag
283:49 - is now having Zed index is equal to 1
283:52 - now guys let us provide the Zed index is
283:54 - equal to 2 for this paragraph text so
283:56 - let us see what happens if we do so so
283:59 - basically we are going to provide the
284:00 - Zed index is equal to 2 so this time the
284:03 - Zed index of 2 is greater than the Zed
284:05 - index of one for the image tag over here
284:08 - so the paragraph should come on top of
284:09 - the image so let me just save this file
284:11 - now and try reloading this page once
284:13 - again on the browser so as you can see
284:15 - this text is getting displayed on top of
284:17 - the image over here and that is how the
284:19 - Zed index property Works in order to
284:22 - stack the HTML elements on the web page
284:24 - so guys comment in the comment section
284:26 - below whether you have learned something
284:28 - out of this video please make sure that
284:29 - you like this video so that it reaches
284:31 - to more people and subscribe to this
284:33 - channel so that you get the
284:34 - notifications on upcoming videos as well
284:36 - the next video that we are going to talk
284:38 - about is Overflow property in CSS so
284:41 - stay tuned so now we will see overflow
284:44 - property in CSS so guys basically the
284:47 - Overflow property specifies whether to
284:50 - clip the content or to add scroll bars
284:52 - when the content of an element is too
284:55 - big to fit inside the specified area so
284:58 - guys we will check this with the help of
285:00 - examples as well so basically when the
285:02 - specified area let's say we have a diff
285:04 - tag if it is smaller compared to the
285:07 - content inside the diff tag so basically
285:09 - the text content will go outside of the
285:12 - specified area that is outside of the
285:14 - dep tag and we can handle it by using
285:16 - the Overflow property so guys basically
285:19 - the Overflow property has the following
285:21 - values so as you can see visible is one
285:23 - of the value which is the default value
285:25 - over here so the Overflow is not clipped
285:28 - in this case the content is displayed
285:30 - outside of the elements box so guys let
285:33 - us check this with the help of example
285:34 - in vs code over here so simply I'm going
285:37 - to remove the previous lines of code
285:38 - that we had written in the HTML and the
285:41 - CSS files and now guys we are going to
285:43 - define the diff tag with the class
285:45 - container over here so simply we are
285:47 - going to say dot container in this case
285:50 - so guys basically this is the Mt
285:52 - abbreviation that we can use in order to
285:54 - create a diff tag with the class
285:56 - container over here now guys let us
285:58 - generate some random text inside this
286:01 - div element over here so guys we have
286:03 - created some random text in this case
286:05 - let me just save this file now and try
286:07 - reloading this page on the browser to
286:09 - see how the content looks like like so
286:11 - as you can see we have the div tag with
286:13 - the class container over here with this
286:15 - random generated text now guys what we
286:17 - will do is we will change the width and
286:19 - height of this particular container over
286:21 - here and we will also have certain
286:23 - background color so let me just move to
286:25 - the CSS file over here so simply for
286:27 - this container class we are going to
286:29 - Define certain CSS properties so let me
286:32 - just provide this particular container
286:34 - class over here and the CSS properties
286:36 - that we are going to provide is width is
286:38 - equal to let's say we provide the width
286:40 - of 40% of the entire screen and let's
286:43 - say we provide the height as 100 pixels
286:45 - over here apart from this we will also
286:47 - have certain background color so let's
286:49 - say we provide the background color as
286:51 - Aqua now guys let me just save this file
286:53 - now and try reloading this page once
286:55 - again on the browser to see how it looks
286:57 - like so as you can see the width of this
286:59 - particular div tag with this background
287:01 - color that is aqua is set to 40% of the
287:05 - entire width of the screen that we have
287:07 - set over here inside the CSS file and
287:09 - the height is equal to 100 pixel now
287:11 - guys the problem over here is the text
287:14 - that we have provided inside the diff
287:16 - tag is going out of the boundary of this
287:18 - particular diff tag over here let us
287:21 - provide the Border as well for this diff
287:23 - tag so we provide border of 2 pixel with
287:26 - solid style and the color is black let
287:29 - me just save this file now and try
287:30 - reloading this page once again on the
287:32 - browser so as you can see the border is
287:34 - also getting displayed but still we have
287:36 - the problem that is the text is going
287:38 - outside so guys this problem can be
287:40 - solved by using using the Overflow
287:41 - property for which by default the value
287:44 - is visible over here so as we can see
287:46 - one of the values is visible which is
287:48 - the default value so if we provide the
287:50 - Overflow value as visible so nothing
287:52 - will change over here for now so let me
287:55 - just provide the visible value in this
287:57 - case let me just save this file now and
287:59 - try reloading this page once again on
288:01 - the browser so as you can see there is
288:02 - no change right now the other value is
288:05 - hidden in which case the Overflow is
288:07 - clipped and the rest of the content will
288:09 - be invisible so because basically
288:11 - whatever text is outside of the boundary
288:14 - of the container tag over here that text
288:16 - will be invisible when we provide the
288:19 - Overflow value as hidden so guys let us
288:21 - check that as well so instead of visible
288:24 - we will simply say hidden in this case
288:26 - let me just save this file now and try
288:28 - reloading this page once again on the
288:29 - browser so as you can see whatever text
288:32 - was going outside of this container is
288:35 - now not visible over here and simply we
288:37 - can see only the text within this
288:39 - particular container which is having
288:41 - this background color now guys apart
288:43 - from this if we want to see the other
288:45 - content which is already clipped and is
288:48 - not visible to the user we can use the
288:50 - other value that is the scroll value so
288:52 - what will happen is the Overflow is CLI
288:55 - and the scroll bar is added to see the
288:57 - rest of the content so guys basically we
288:59 - will be able to see a scroll bar over
289:01 - here inside this container when we use
289:04 - the value as scroll so guys let us check
289:06 - that as well so when we provide the
289:08 - scroll value for the Overflow property
289:10 - so let me just save this file now and
289:12 - try reloading this page once again on
289:14 - the browser as you can see we are
289:16 - getting the scroll bar now and we can
289:18 - see all the content which was clipped
289:20 - previously by using the hidden value for
289:22 - the Overflow property so guys you can
289:24 - use this value as well which will
289:26 - provide the scroll bar over here on the
289:28 - right and on the bottom now guys apart
289:31 - from this we also have the fourth value
289:33 - that is the Auto Value which is similar
289:35 - to scroll but it adds scroll bars only
289:37 - when necessary so guys basically if you
289:39 - can see there is another section at the
289:41 - bottom which is having the scroll bar
289:43 - section but there is no scroll bar over
289:46 - here which will allow you to scroll
289:48 - horizontally so you can avoid that since
289:50 - it is not necessary right now to scroll
289:53 - on the left or right so we can use the
289:55 - fourth value that is Auto in this case
289:57 - so guys when we use Auto basically a
289:59 - scroll bar will be provided but only
290:01 - where it is required so let me just
290:03 - reload this page once again so as you
290:05 - can see there is no horizontal scroll
290:07 - bar section over here but we still have
290:09 - the vertical scoll bar that will allow
290:11 - you to read the entire content within
290:14 - this particular container so guys in
290:16 - this way if you want to restrict the
290:18 - width and height of a specific HTML
290:20 - element within which you want to display
290:22 - certain text over here and you want some
290:25 - extra text to be displayed then you can
290:27 - use the Overflow property that will
290:29 - allow you to display the scroll bar to
290:32 - the user so that all the information is
290:34 - displayed to the user based on your
290:36 - project requirements guys comment in the
290:38 - comment section below whether you have
290:40 - learned something out of this video
290:41 - please make sure that you like this
290:43 - video so that it reaches to more people
290:45 - and subscribe to this channel so that
290:46 - you get the notifications on upcoming
290:48 - videos as well the next video that we
290:50 - are going to talk about is float and
290:52 - clear property in CSS so stay
290:55 - tuned so now we will see float and clear
290:59 - properties in CSS so guys basically the
291:02 - float property is used for positioning
291:04 - and formatting the content inside the
291:07 - HTML web page and this we are going to
291:09 - check with the help of examples as well
291:11 - so a very simple example as far as the
291:14 - usage of the float property is concerned
291:17 - is an example in order to let an image
291:20 - float left to the text in a container so
291:23 - guys basically we will create a
291:24 - container with the diff tag and inside
291:27 - the div tag we will have the image that
291:29 - will be displayed either on the left or
291:31 - the right of the container and we will
291:34 - display the text accordingly besides the
291:37 - image which is present inside the
291:39 - container now guys the flo property can
291:41 - have one of the following values so
291:43 - basically we will see the left value in
291:45 - which case the element floats to the
291:47 - left of its container when we use the
291:50 - right value the element floats to the
291:52 - right of its container and when the
291:54 - value is none the element does not float
291:57 - it will be displayed just where it
291:59 - occurs in the text and this is the
292:01 - default behavior and when we use the
292:03 - inherit option basically the element
292:06 - inherits the float value from its parent
292:09 - tag over here now guys let us move to
292:11 - the vs codee and I'll simply remove the
292:13 - previous lines of code that we had
292:15 - written in the HTML and the style. CSS
292:18 - files over here now guys in order to
292:21 - understand the example of the float
292:22 - property we will have the D tag with the
292:25 - class container over here so guys
292:27 - basically we will Define the diff tag
292:29 - with the class container and inside this
292:32 - let us say we have the image so simply
292:34 - we are going to provide the IMG tag over
292:37 - here and the SRC attribute will have the
292:40 - sample image.png file in this case which
292:43 - we already have in our directory over
292:45 - here now guys apart from this we will
292:47 - also have the alternate text as test
292:50 - image in this case and then over here we
292:52 - will provide the width of 150 pixels and
292:55 - let's say the height of 100 pixels so
292:58 - that the image is properly displayed
293:00 - inside this container and then guys
293:03 - apart from this let us have some random
293:05 - text over here inside the container so
293:08 - we use the lurm Mt abbreviation over
293:10 - here here so guys we have generated the
293:12 - random text as well let me just save
293:14 - this file now and let us see how this
293:16 - particular image and the text will be
293:18 - displayed inside the div tag with the
293:20 - class container on the web page so let
293:23 - me just reload this page over here on
293:25 - the browser so as you can see by default
293:27 - we don't have any float property that is
293:29 - provided in the CSS file and the float
293:32 - property is set to none and this is the
293:34 - way that the image is getting displayed
293:36 - over here inside the container and to
293:39 - the right of this particular image we
293:41 - are having the text that is the random
293:43 - text that we have generated now guys let
293:45 - us say we want this text to be displayed
293:48 - exactly to the right of this particular
293:50 - image and without wasting this
293:52 - particular space that you can see which
293:54 - is a blank space over here so what we
293:56 - can do is simply we can say that this
293:58 - particular image tag should have the
294:00 - float property as left so what we will
294:02 - do is over here in the style. CSS file
294:06 - we will say image tag in this case and
294:08 - over here we will say float property for
294:11 - which the value should be left in this
294:13 - case let me just save this file now and
294:15 - try reloading this page once again on
294:17 - the browser so now as you can see the
294:19 - image is set to the left of this
294:22 - particular diff container over here let
294:24 - us provide certain border and the
294:26 - background color as well for the diff
294:28 - container so simply we are going to copy
294:30 - this class name and use it inside the
294:33 - style. CSS file so we use the dot
294:35 - character for the class name and then we
294:38 - will provide the CSS property so let's
294:40 - say we provide the background color as
294:42 - Aqua over here and also we will provide
294:44 - certain border as well so let's say we
294:46 - provide the border of two pixels which
294:49 - is of the type solid and the color is
294:51 - black so let me just save this file now
294:54 - and try reloading this page once again
294:55 - on the browser so as you can see we have
294:58 - the image that is floating to the left
295:00 - of this particular container and the
295:02 - text is getting displayed to the right
295:04 - of this particular image and in this way
295:06 - we can easily use the float property in
295:08 - order to position a a specific image or
295:11 - any other HTML element inside the
295:13 - container now guys let us say we want
295:15 - this particular image to be displayed on
295:17 - the right so what we can do is instead
295:20 - of providing the value as left we can
295:22 - simply say right over here so let me
295:24 - just save this file now and try
295:26 - reloading this page once again on the
295:28 - browser so as you can see we have the
295:30 - image that is getting displayed on the
295:32 - right of this container now let us
295:34 - provide certain padding as well to The
295:36 - Container so that it looks more decent
295:38 - so let me just provide the padding
295:41 - property of let's say 5 pixels in this
295:44 - case so let me just save this file now
295:45 - and try reloading this page once again
295:47 - so as you can see we have the five
295:49 - pixels padding that is being provided
295:51 - inside the container and in this way
295:53 - based on your project requirements you
295:55 - can use the float property over here now
295:57 - guys apart from this we also have the
295:59 - other value that is inherit in which
296:01 - case the image will inherit the float
296:04 - property from its parent so over here
296:06 - the parent is the diff tag in this case
296:09 - so guys let us check that as well so
296:11 - what we will do is let's say we provide
296:13 - the float property as inherit over here
296:16 - so by default the float property for the
296:18 - parent that is the container class is
296:21 - none in this case so the way the UI was
296:23 - displayed by default initially the same
296:26 - way the changes will be provided on the
296:29 - web page right now so let me just save
296:30 - this file now and try reloading this
296:33 - page once again on the browser so as you
296:35 - can see we have this particular image
296:37 - and the text is getting displayed on the
296:38 - right of the image but we still have the
296:40 - spaces on top of this text which we
296:42 - don't want to waste so guys what we can
296:45 - do is since we are inheriting the value
296:47 - of loat over here and the parent of this
296:50 - image is the diff tag in this case which
296:52 - is having the class container we can
296:55 - provide the float property to this
296:57 - container as well so over here let's say
297:00 - we provide the float property and we can
297:02 - decide where we want to display the
297:04 - image so let's say we want to display
297:06 - this image on the right hand side so
297:08 - simply we will say right and in this
297:10 - case so basically this float is equal to
297:12 - right will be inherited by this
297:14 - particular image tag over here since we
297:17 - have provided the float is equal to
297:19 - inherit value over here let me just save
297:21 - this file now and try reloading this
297:23 - page once again on the browser so as you
297:25 - can see we have the float is equal to
297:27 - right that is in action now guys when we
297:29 - provide the float is equal to left and
297:31 - now we are inheriting this value in the
297:34 - image tag so basically the image will be
297:36 - displayed on the left so let me just
297:38 - reload this page the image is getting
297:40 - displayed on the left of the container
297:42 - so guys based on your requirements you
297:44 - can provide the float property over here
297:46 - so guys in its very simple use the float
297:49 - property can be used to wrap the text
297:52 - around the images which we have seen
297:53 - with the help of examples as well now
297:56 - guys as a homework for you you can
297:57 - complete this example you can create
298:00 - three div elements and place them next
298:03 - to each other by using the float
298:05 - property which should be equal to left
298:07 - and comment in the comment section below
298:09 - once you have completed Ed this homework
298:11 - now guys apart from this we also have
298:13 - the clear property as well so when we
298:15 - use the float property and we want the
298:18 - next element below not on the right or
298:21 - the left so we will have to use the
298:23 - clear property so guys whenever we are
298:25 - using the fluid property we will have to
298:27 - clear it by using the clear property as
298:30 - well now the clear property specifies
298:32 - what should happen with the element that
298:34 - is next to the floating element and this
298:36 - we are going to check with the help of
298:38 - examples as well so the clear property
298:40 - has the value that is none by default in
298:42 - which case the element is not pushed
298:44 - below left or right floated elements
298:47 - apart from this we also have the left
298:49 - value in which case the element is
298:51 - pushed below left floated elements in
298:53 - the right value the element is pushed
298:55 - below right floated elements and by
298:57 - using the both value the element is
299:00 - pushed below both left and right floated
299:02 - elements and we also have the inherit
299:05 - value as well so the element inherits
299:07 - the clear value from its parent so guys
299:10 - let us check this with the help of
299:11 - examples in vs code over here so simply
299:14 - I'm going to remove the previous lines
299:15 - of code in this case from the HTML and
299:18 - the CSS files over here and then guys
299:20 - what we will do is we will take this
299:22 - example that I have just mentioned that
299:24 - is to display the div elements next to
299:27 - each other over here so guys what we
299:29 - will do is first of all we will have the
299:31 - container tag over here so we have the
299:33 - class name that is container in this
299:35 - case and let's say we have the three div
299:38 - elements so first div element will have
299:40 - the ID that is div 1 over here and it
299:43 - will have the text that is div 1 and
299:45 - then similarly we will have div 2 and
299:48 - div 3 over here so guys over here we
299:50 - have defined the three div tags with the
299:52 - IDS that is div 1 div 2 and div 3 inside
299:56 - the class that is container now guys
299:58 - what we will do is inside the style. CSS
300:00 - file we will give separate background
300:02 - colors for all the diff tags over here
300:04 - so first of all we will Define the ID
300:06 - that is div one and let's say we have
300:08 - the background color of aqua and then
300:12 - let's say we have the div 2 ID over here
300:15 - and this time we will give the
300:17 - background color so basically we will
300:18 - use the color that is yellow this time
300:21 - and for the third diff let's say we use
300:23 - the diff 3 ID and this time we will use
300:26 - the background color property and let's
300:28 - say the color that we provide is coral
300:30 - this time so guys let me just save this
300:32 - file now and try reloading this page
300:34 - once again on the browser so as you can
300:37 - see we have the div 1 div 2 and div 3 is
300:40 - getting displayed right now we don't
300:42 - have the background color for diff 3 let
300:44 - us check why so so basically we have
300:46 - made a mistake over here so instead of
300:48 - Dev 3 we had provided Dev hash which is
300:51 - not correct let me just save this file
300:53 - now and try reloading this page once
300:55 - again on the browser so as you can see
300:57 - we have the background colors for all
300:59 - the div tags right now guys in order to
301:01 - get all these div elements next to each
301:04 - other simply we can use the float
301:06 - property over here so in the style. CSS
301:08 - file for all all these div tag elements
301:11 - we are going to use the div tag this
301:13 - time and simply inside this div tag we
301:16 - are going to use the float property and
301:19 - for this we are going to use the value
301:21 - that is left over here let me just save
301:23 - this file now and try reloading this
301:25 - page once again on the browser so as you
301:27 - can see all the div elements now are
301:29 - floating to the left now guys let us
301:31 - provide certain padding as well so over
301:33 - here we will say padding of 5 pixels for
301:36 - all the div elements over here let me
301:38 - just save this file now enter by
301:40 - reloading this page so as you can see
301:42 - now it is having a better readability so
301:44 - all the div elements are placed next to
301:46 - each other and that is the important
301:48 - thing so guys basically just by using
301:50 - the float property over here we can have
301:53 - all the elements that are being placed
301:55 - next to each other so let's provide the
301:57 - float value for the div tag that is
301:59 - having the ID div one over here and we
302:02 - provide the value as left and from this
302:04 - div tag I'm going to comment out this
302:06 - particular float property let me just
302:08 - save this file now and see what will
302:10 - happen over here to this particular div
302:12 - that is div 1 let me just reload this
302:15 - page once again so as you can see we
302:17 - have div 1 element over here but to the
302:19 - right of this div one we again have div
302:22 - 2 this time so guys we have not provided
302:24 - any float property over here to div 2
302:27 - element but still it is to the right of
302:29 - the div 1 so in order to clear this
302:32 - particular property of load that we had
302:34 - provided to div one we need to use this
302:37 - clear property that we have just
302:39 - mentioned so guys what we will do is for
302:41 - this div 2 ID we will simply say clear
302:45 - and then we will say left in this case
302:47 - so guys what will happen is this div 2
302:50 - should come below of this div 1 element
302:53 - so let me just save this file now and
302:55 - try reloading this page once again on
302:57 - the browser so as you can see we have
302:59 - cleared the float property by using the
303:01 - clear property over here and now this
303:04 - particular div 2 is getting displayed
303:06 - below the div 1 element so guys in this
303:08 - way whatever next element is present
303:11 - inside the HTML file we have provided
303:13 - the float property to div 1 but if we
303:16 - want the next element that is diff 2 to
303:18 - be present on the next line we have to
303:20 - provide the clear property for this diff
303:23 - 2 element over here and that is what we
303:25 - have mentioned inside the style. CSS
303:27 - file that is clear it is equal to left
303:30 - guys apart from this you can also try
303:31 - the other values of the clear property
303:33 - as a homework for you so guys comment in
303:35 - the comment section below whether you
303:37 - have learned something out of this video
303:39 - please make sure that you like this
303:40 - video so that it reaches to more people
303:42 - and subscribe to the channel so that you
303:44 - get the notifications on upcoming videos
303:46 - as well the next video that we are going
303:48 - to talk about is an exercise on Zed
303:51 - index overflow float and clear
303:53 - properties in CSS so stay tuned so now
303:58 - let us work on this exercise on Zed
304:00 - index overflow float and the clear
304:02 - properties in CSS so guys you can pause
304:05 - this video and practice on your own and
304:07 - complete all these task in this
304:09 - particular the exercise so that you get
304:11 - the better understanding on all these
304:13 - CSS properties so we are going to follow
304:15 - the below steps to complete the practice
304:17 - exercise first of all we will create the
304:20 - two div elements that is div 1 and div
304:22 - two IDs with the background colors and
304:24 - some padding so guys let us move to the
304:26 - VSS code over here so simply I'm going
304:28 - to remove the previous lines of code
304:30 - that we had written in the HTML and the
304:33 - CSS files over here and simply we are
304:35 - going to create the two div elements
304:38 - with the ID div 1 and div 2 so guys over
304:41 - here we have the div 1 and we are going
304:44 - to provide the text that is div 1 over
304:46 - here and similarly we will have the ID
304:48 - with the div 2 for another div tag and
304:51 - we will say that the text is div 2 in
304:53 - this case and after this we are going to
304:55 - move to the style. CSS file over here
304:58 - simply we are going to provide the ID
305:00 - that is div 1 by providing the hash
305:02 - character followed by the ID that is div
305:05 - one over here we will provide the
305:07 - background color so let's say we have
305:09 - the background color is yellow and guys
305:11 - for all the diff tag we want the padding
305:13 - so let's say we simply provide the diff
305:16 - tag over here and inside the curly
305:18 - braces we will have the padding of five
305:20 - pixels in this case so guys basically
305:22 - this padding of five pixels will be
305:24 - applied to all the diff tags over here
305:27 - and the background colors will be
305:29 - separately applied based on the ID of
305:31 - the diff tag so over here we have the
305:34 - second div that is diff two over here
305:36 - and then again we will have the
305:37 - background color and let's say we have
305:39 - the background color of aqua let me just
305:41 - save this file now and try reloading
305:43 - this page on the browser so as you can
305:45 - see we have div 1 and div 2 getting
305:48 - displayed on the web page now guys let
305:49 - us move to another task over here we
305:51 - have position the div 2 above div 1 with
305:55 - relative position and applying left and
305:57 - bottom properties so guys basically we
305:59 - have to move the second div above the
306:02 - first div over here by using the
306:03 - relative position so guys what we can do
306:06 - is for this diff 2 we will set the
306:08 - position as Rel this time so over here
306:11 - we say position is equal to relative and
306:13 - we will say left it is equal to 20
306:16 - pixels so guys basically we want certain
306:19 - spacing from the left and the bottom as
306:21 - well so that this second div element can
306:24 - be displayed on top of this first div
306:26 - element over here so let's say we
306:28 - provide the left property with the
306:30 - spacing of 30 pixels so we say 30 pixels
306:33 - and from the bottom as well we provide
306:35 - some spacing so let's say 20 pixels of
306:38 - spacing is provided over here from the
306:40 - bottom let me just save this file now
306:42 - and try reloading this page once again
306:44 - on the browser so as you can see we have
306:46 - the div 1 now getting displayed behind
306:49 - this particular div 2 element so guys
306:51 - this happened because from the normal
306:53 - position of the div 2 we have slightly
306:56 - moved it or positioned it from the left
306:58 - and the bottom with these numbers that
307:01 - we have specified in the CSS file over
307:03 - here and apart from this since we have
307:05 - defined the second element after the
307:07 - first element and that is the reason
307:09 - Reon why div 2 is getting displayed on
307:11 - top of the div 1 so guys we have
307:14 - completed the second task as well that
307:16 - is position the div 2 above div 1 with
307:18 - relative position and applying left and
307:21 - bottom properties now guys we need to
307:23 - get the div 1 above div 2 using the Z
307:26 - index property so guys over here what we
307:28 - have to do is at the same position we
307:31 - want to display div one on top of this
307:34 - particular div 2 so what we can do is
307:36 - simply inside the style. CSS file for
307:39 - this D 1 we can provide the Zed index
307:41 - property so over here when we provide
307:43 - the Zed index by default The Zed index
307:45 - of div 2 is zero so we want to provide a
307:48 - number that is greater than zero for
307:50 - this Zed index of the first div element
307:53 - so over here we will provide the Zed
307:55 - index of one let me just save this file
307:57 - now and try reloading this page once
307:59 - again on the browser so as you can see
308:00 - there is no change right now we were
308:02 - expecting that d one should come on top
308:04 - of div 2 so guys why there is no change
308:07 - because we have not provided the
308:08 - position property for the first div so
308:11 - guys Z index property will not work for
308:13 - the position is equal to static value
308:16 - which is the default value for the
308:17 - position attribute and by default the
308:20 - position value is now having the static
308:22 - value for this first Dev element so
308:24 - simply we can say position is equal to
308:27 - relative this time so that we are
308:29 - positioning this particular first div
308:31 - element as well let me just save this
308:33 - file now and try reloading this page
308:35 - once again on the browser now to see
308:37 - whether the Zed index is effective this
308:39 - time so when we reload this page as you
308:41 - can see div 1 with the yellow background
308:43 - color is now getting displayed on top of
308:46 - the div 2 which has now gone behind over
308:48 - here so guys let us reduce certain
308:50 - spacing from the bottom for the diff 2
308:52 - element so that we can see certain text
308:55 - over here for the second Dev element so
308:57 - let's say we provide the 12 pixel
308:59 - spacing from the bottom let me just save
309:01 - this file now and try reloading this
309:03 - page so as you can see div 2 is still
309:05 - getting displayed behind of this
309:07 - particular div one element so in this
309:09 - way we have used the Zed index property
309:12 - always remember that it should have the
309:14 - position property as well whenever you
309:16 - are using the Z index property and the
309:18 - value of the position property should be
309:20 - anything other than static value now
309:23 - guys apart from this let us create div 3
309:25 - with 40% width and 100 pixels height
309:28 - with random text that will overflow so
309:31 - guys let us check this as well so over
309:33 - here after the second div let us create
309:35 - another div over here with div 3 ID and
309:38 - let's say we create create some generate
309:40 - text over here by using the LM M
309:42 - abbreviation so over here we have
309:44 - generated certain random text so let me
309:46 - just save this file now and try
309:47 - reloading this page once again on the
309:49 - browser so as you can see we have
309:51 - another div element over here now guys
309:53 - in the same task we want this div
309:55 - element to be having the width of 40%
309:58 - and height of 100 pixels so let us set
310:00 - that as well so inside the style. CSS
310:03 - file we will say div three which is the
310:05 - ID of this third div element and for
310:08 - this third div we we want the width of
310:10 - 40% this time as per the task over here
310:13 - so we have the width of 40% and height
310:15 - is 100 pixels so here we will say height
310:18 - it is equal to 100 pixels this time and
310:21 - apart from this the random text Will
310:23 - overflow so guys we will also have the
310:25 - background color so let's say we have
310:27 - the background color of coral value over
310:30 - here so let me just save this file now
310:32 - and try reloading this page once again
310:34 - on the browser so as you can see we have
310:36 - the 40% width for this third div element
310:39 - and the height of 100 pixel but guys by
310:41 - default we have the Overflow value as
310:44 - visible this time so basically the text
310:46 - is going outside of this container so
310:48 - guys we have completed the task but the
310:50 - text is still going outside of this
310:52 - particular container that is the diff
310:54 - tag so what we will do is we will move
310:56 - to the other task that is use the
310:58 - Overflow property to create scroll bar
311:01 - for this diff three element so guys what
311:03 - we will do is since this particular text
311:06 - is going outside of the container simply
311:08 - we can use the Overflow property and
311:10 - have the scroll bar on this particular
311:13 - container so that entire text is limited
311:16 - to be displayed within this particular
311:18 - container so guys let us provide this
311:19 - overflow property over here inside the
311:22 - style. CSS file so over here we will say
311:25 - overflow property and this time we will
311:27 - say scroll over here so basically a
311:30 - horizontal scroll bar will be displayed
311:32 - we can also use the value of Auto over
311:34 - here for the Overflow property let me
311:37 - just save this file now and try
311:38 - reloading this page once again on the
311:40 - browser as you can see we have the
311:42 - vertical scroll bar over here and this
311:44 - is the way that we can use the Overflow
311:46 - property in order to make the extra text
311:49 - fit inside the container that is having
311:51 - the limited width and height over here
311:53 - guys apart from this let us move to the
311:55 - other task that is to create the diff
311:57 - four and five that should float left and
312:00 - right respectively so guys what we will
312:02 - do is we will create more two div tags
312:05 - over here inside the HTML file so after
312:08 - this div 3 we will have div 4 so let's
312:11 - create the fourth div with the ID div 4
312:13 - over here and we will say div four this
312:15 - time and again we will create another
312:18 - div with the ID that is div 5 over here
312:21 - so we have created div 4 and div 5 as
312:23 - well we will also apply the background
312:25 - colors for this diff four and div five
312:27 - so let us do that as well so we say diff
312:29 - four with the background color so let's
312:32 - provide some background color over here
312:34 - so we will provide the color as yellow
312:36 - green and for D five as well we will
312:38 - provide some other color this time so
312:40 - guys over here we use the background
312:42 - color and let me just see what can be
312:44 - the value so we will use some light
312:46 - value over here so let's say we use this
312:48 - particular color for the background
312:50 - color let me just save this file now and
312:52 - try reloading this page once again on
312:54 - the browser so as you can see we have
312:56 - both the divs that are getting displayed
312:58 - but guys we want both these divs to be
313:00 - displayed on the left and on the right
313:03 - respectively by using the float property
313:05 - over here so both the divs should float
313:08 - on the left and the right side of the
313:10 - screen so guys what we can do is simply
313:12 - we can provide the float property for
313:14 - the diff Four Element so over here we
313:16 - will say float it is equal to left and
313:18 - for the div Five Element we can say
313:20 - float it is equal to right this time let
313:23 - me just save this file now and try
313:25 - reloading this page once again on the
313:27 - browser so as you can see we have D four
313:29 - on the left and div five on the right
313:31 - and that is how we can use the float
313:33 - property in order to make the HTML
313:36 - elements position on any side of the
313:38 - screen on on the left or the right of
313:40 - the screen now guys let us move to
313:42 - another task we will create another div
313:44 - that is div 6 that should be displayed
313:46 - below div 4 and diff 5 so let us create
313:49 - another diff tag over here so basically
313:51 - we are going to create another diff tag
313:54 - for which the ID should be six this time
313:56 - and the value will be D six over here
313:59 - let us see how this will be displayed by
314:01 - default without providing any position
314:03 - so in the style. CSS simply we are going
314:06 - to provide the background color for this
314:08 - sixth element so over here we will say
314:10 - diff six and then let's say we provide
314:13 - the background color and we will use
314:15 - this particular color over here as the
314:17 - background color this time let me just
314:19 - save this file now and try reloading
314:21 - this page once again on the browser so
314:23 - as you can see diff six element by
314:25 - default is getting displayed to the
314:27 - right of D4 and to the left of D5 but
314:30 - guys based on our task we want to
314:32 - display the diff 6 below the div 4 and
314:35 - the div Five Element so how this can be
314:37 - done we can use the clear property since
314:40 - we have already used the float property
314:42 - for the div 4 and div 5 so since the div
314:44 - 6 element is the next element to the div
314:47 - 4 and div five elements we need to use
314:49 - the clear property over here in order to
314:52 - get this sixth div element on the next
314:55 - line so guys what we can do is simply we
314:57 - will say clear and then we will have the
315:00 - value as both so let me just save this
315:02 - file now and try reloading this page
315:04 - once again on the browser so now as you
315:06 - can see diff 6 is getting displayed
315:08 - below this diff 4 and diff 5
315:10 - respectively and this is how we can use
315:12 - the float and clear properties as well
315:15 - if we provide the left value over here
315:17 - let us check what will happen so when we
315:19 - save this file now and try reloading
315:21 - this page so there is no change right
315:23 - now and with the value that is right as
315:25 - well probably there will be no change
315:27 - over here so guys basically the
315:28 - important thing is to make use of this
315:30 - clear property after we have used the
315:33 - float property on any of the HTML
315:35 - elements to make the other that is the
315:37 - next HTML element ments appear on their
315:40 - original positions so guys in this way
315:42 - we have completed all these task in our
315:44 - exercise over here so comment in the
315:46 - comment section below whether you have
315:48 - learned something out of this video
315:49 - please make sure that you like this
315:51 - video so that it reaches to more people
315:53 - and subscribe to this channel so that
315:54 - you get the notifications on upcoming
315:56 - videos as well the next video that we
315:58 - are going to talk about is horizontal
316:00 - and vertical align in CSS so stay tuned
316:04 - so now we will see horizontal and
316:06 - vertical alignment in CSS so guys
316:09 - basically in order to horizontally
316:11 - Center a block element we can use the
316:14 - margin property and set the value as
316:16 - Auto and this we are going to check with
316:18 - the help of examples as well it is very
316:21 - important to note that Center aligning
316:23 - has no effect if the width property is
316:26 - not set or is set to 100% so guys
316:29 - whenever we are going to use the margin
316:31 - property with the value as Auto we need
316:33 - to have the width property of that
316:35 - particular HTML element so guys let us
316:38 - check this with the help of example in
316:39 - vs code over here so I'll simply remove
316:42 - the previous lines of code that we had
316:44 - written in the HTML and the CSS files
316:46 - over here now guys in the HTML file
316:49 - simply we are going to have the div
316:50 - element so let's say we have the div tag
316:53 - over here and simply we are going to say
316:55 - this is a div element so guys let me
316:58 - just save this file now and try
317:00 - reloading this page on the browser so as
317:02 - you can see we have this is a div
317:04 - element over here now guys let us have
317:06 - certain background color padding and the
317:08 - the width of this particular Dev element
317:11 - so what we can do is simply in the
317:13 - style. CSS file over here we are going
317:15 - to define the Dev tag and let's say we
317:17 - provide the width as 50% over here so we
317:20 - say 50% of width and then let's say we
317:23 - have the background color property and
317:26 - we set the value as yellow color in this
317:28 - case and then apart from this let us say
317:31 - we have the padding of 10 pixels from
317:33 - all the four sides so guys in this way
317:36 - we have provided the width of 50% over
317:38 - here here so only the 50% of the entire
317:41 - width of the screen will be taken by
317:44 - this particular Dev element so let me
317:46 - just save this file now and try
317:48 - reloading this page once again on the
317:50 - browser so as you can see the 50% width
317:52 - is being taken by this Block Level
317:54 - element that is the dev element over
317:56 - here inside this web browser guys let us
317:59 - have the Border as well so over here
318:01 - what we will do is we will have the
318:03 - Border property and we will see two
318:05 - pixels width of the border and then the
318:08 - Border style will be solid and the color
318:10 - of the Border should be black color in
318:12 - this case let me just save this file now
318:14 - and try reloading this page once again
318:16 - on the browser so as you can see it is
318:18 - now looking more decent over here the
318:20 - div is now having the border of the
318:22 - black color and also the yellow
318:24 - background color now guys this
318:26 - particular div element is aligned at the
318:28 - left hand side of the browser what if we
318:31 - want this particular div element at the
318:33 - center of this particular web page so
318:35 - what we can do is simply we can provide
318:37 - the margin property so over here we will
318:40 - say margin and the value should be Auto
318:42 - so guys when we set the value as Auto
318:45 - the margin from the left hand side of
318:47 - this div element and the right hand side
318:49 - of this div element will be set
318:51 - automatically in such a way that the
318:53 - left margin and the right margin will be
318:55 - same so guys let me just save this file
318:57 - now and try reloading this page once
318:59 - again on the browser so as you can see
319:01 - the left hand side and the right hand
319:03 - side margin is set as same and in this
319:05 - way the div element is now placed set
319:08 - the center as far as the horizontal
319:11 - alignment is concerned so guys this is a
319:13 - very basic way in order to align the
319:15 - HTML element horizontally at the center
319:18 - location by using the margin equal to
319:20 - Auto property over here now guys apart
319:23 - from this we can also Center align the
319:25 - text over here by using the text align
319:28 - property so guys if you notice on this
319:30 - particular web page the text is being
319:32 - aligned at the left hand side of this
319:34 - particular Dev element what if we want
319:37 - this particular text at the center of
319:39 - the div element that is over here so
319:41 - what we can do is simply we will say
319:43 - text align property in this case so we
319:46 - have text align and the value that we
319:48 - provide is Center let me just save this
319:50 - file now and try reloading this page
319:52 - once again on the browser so as you can
319:54 - see the text is now aligned at the
319:56 - center of this particular Dev element
319:59 - and in this way you can also align the
320:01 - text horizontally based on your
320:02 - requirements now guys apart from this we
320:04 - can also Center an image by using the
320:07 - margin equal to order
320:09 - and display is equal to block so guys so
320:11 - far we have seen how we can display the
320:14 - div element at the center of the page
320:16 - what if we have the image to be provided
320:19 - on the web page and it should be aligned
320:21 - at the center of the page so guys let us
320:23 - check that as well so what we will do is
320:26 - after this div element we will simply
320:28 - have the image tag over here and for
320:30 - this image tag we will have the SRC that
320:33 - is the source attribute and simply we
320:35 - are going to provide the image name over
320:37 - here so let's say we provide sample
320:39 - forest image in this case which is
320:41 - already present inside the directory
320:43 - where this particular HTML page is being
320:45 - stored and then guys apart from this for
320:48 - this alt attribute we will say test
320:50 - image in this case so let me just save
320:52 - this file now and try reloading this
320:54 - page once again on the browser so as you
320:56 - can see the image is getting displayed
320:58 - over here let us decrease the width and
321:00 - height of this particular image so that
321:02 - it can be displayed properly so inside
321:05 - the style. CSS file over here simply we
321:08 - are going
321:09 - the IMG tag and then guys over here let
321:12 - us say we first of all provide the
321:14 - display property and we want to display
321:16 - it as a block element so guys by default
321:19 - the image elements are displayed as
321:21 - inline elements and we can display them
321:24 - as block element by using the display
321:26 - property over here and then apart from
321:28 - this we will set the width of let's say
321:31 - 100 pixels over here and also the height
321:34 - as 100 pixels in this case we will be
321:36 - setting the width and height as 100
321:38 - pixels so that the size of the image on
321:41 - the web browser is displayed properly so
321:44 - guys let me just save this file now and
321:46 - try reloading this page once again on
321:48 - the browser so as you can see this is
321:50 - the image that is getting displayed over
321:52 - here now guys let us say we want this
321:54 - particular image to be displayed at the
321:56 - center of the page so what we can do is
321:58 - simply we can provide the Marin equal to
322:01 - Auto so over here we will provide the
322:03 - margin property and simply we are going
322:06 - to provide the value as Auto in this
322:08 - case and for the display part we have
322:10 - already provided the value as block so
322:12 - let me just save this file now and try
322:15 - reloading this page once again on the
322:16 - browser so as you can see now the image
322:19 - is getting displayed at the center of
322:21 - this web page apart from this you can
322:23 - also increase the width and height of
322:25 - this image so let's say we provide the
322:27 - width as 200 pixels and height as 150
322:29 - pixels over here let me just save this
322:31 - file now and try reloading this page
322:33 - once again on the browser so now as you
322:36 - can see the image is being displayed
322:37 - properly over here and it is getting
322:39 - displayed at the center of the page so
322:41 - guys just by using the margin property
322:44 - with the value of Auto you can Center
322:46 - align the elements as far as the
322:48 - horizontal alignment is concerned now
322:51 - guys apart from this we can also have
322:53 - the elements Center vertically by using
322:56 - the top and bottom padding over here so
322:58 - guys let us have another HTML element in
323:00 - this case and this time let us say we
323:02 - have the paragraph tag over here so guys
323:05 - let me just save this file now and try
323:07 - reloading this page one again on the
323:09 - browser so as you can see we have this
323:11 - is a paragraph tag over here now guys
323:13 - let us provide certain background color
323:15 - and the height property to this
323:17 - particular paragraph tag so what we can
323:19 - do is simply in the style. CSS file over
323:22 - here we will have the P tag and simply
323:24 - we are going to say the background color
323:27 - and this time we will say the color as
323:29 - aqua and then guys apart from this let
323:32 - us have certain height as so over here
323:34 - we will say height and let's say we have
323:37 - the height of 50 pixels in this case so
323:40 - simply we are going to provide the 150
323:42 - pixels value for this height attribute
323:44 - over here and the width of this
323:46 - particular paragraph will be the entire
323:48 - width of the screen by default so guys
323:51 - let me just save this file now and try
323:53 - reloading this page once again on the
323:54 - browser so as you can see we have the
323:57 - background color is aqua for this
323:59 - particular paragraph tag and we have
324:01 - this text over here that is the
324:02 - paragraph tag in this case now guys let
324:04 - us say we want to align this particular
324:06 - text at the center as far as vertical
324:09 - alignment is concerned inside this
324:11 - paragraph tag over here so guys what we
324:14 - can do is simply inside the style. CSS
324:16 - file over here we can provide the
324:19 - padding property now guys the padding
324:21 - property takes the values in such a way
324:23 - that the first value will be provided to
324:26 - the top padding followed by the right
324:28 - padding and then we have the bottom
324:29 - padding and then we have the left
324:31 - padding over here so simply what we can
324:33 - do is we can provide 70 pixels of top
324:36 - padding in this case and the pixs from
324:39 - right and then again 70 pixels from
324:42 - bottom so that the top and bottom
324:44 - padding are same over here which will
324:46 - help us in order to keep this text at
324:49 - the center of this particular paragraph
324:51 - tag and then after this we have the zero
324:53 - pixels for the left padding over here so
324:56 - I simply we are going to provide Zer
324:58 - pixels in this case let me just save
325:00 - this file now and try reloading this
325:02 - page once again on the browser so as you
325:04 - can see the top and bottom padding are
325:07 - being provided over here but guys if you
325:09 - notice we have also provided the height
325:12 - as well so if we inspect this particular
325:14 - paragraph tag in this case let us check
325:16 - the CSS Box model over here so as you
325:19 - can see this is the content but we also
325:21 - have the padding that is getting
325:23 - highlighted over here in the light green
325:25 - color so the padding of top and bottom
325:28 - is getting highlighted but apart from
325:30 - this we also have the height of 150
325:32 - pixels over here so guys simply we have
325:34 - to remove the height of 150 pixels in
325:37 - order to see that the text is perfectly
325:39 - at the center of the paragraph tag as
325:42 - far as the vertical alignment is
325:44 - concerned so guys let me just save this
325:46 - file now and try reloading this page
325:48 - once again on the browser so now if you
325:50 - notice we have the text at the center of
325:53 - this particular paragraph tag as you can
325:55 - see the vertical alignment is at the
325:57 - center of this background color now so
326:00 - guys in this way we can simply provide
326:01 - the padding property in order to
326:03 - vertically align the text inside the
326:05 - HTML element now guys let us say we want
326:08 - this particular text at the center over
326:10 - here as far as the horizontal alignment
326:13 - is concerned so guys what we can do is
326:15 - simply we can use the text align
326:17 - property and we can set the value as
326:20 - Center let me just save this file now
326:22 - and try reloading this page once again
326:24 - on the browser so as you can see the
326:26 - text is now aligned at the center of
326:29 - this particular paragraph tag over here
326:31 - so guys in this way we can use the
326:33 - combination of the padding property and
326:35 - the text align property in order to
326:37 - Center align the text inside the HTML
326:40 - element now guys apart from this we can
326:43 - also have the text aligned at the center
326:46 - vertically by using the line height
326:48 - property so guys I'll leave this task as
326:50 - a homework for you so that you can
326:52 - practice on your own and comment in the
326:55 - comment section below how you can use
326:57 - the line height property in order to
326:59 - vertically align the text at the center
327:01 - of the HTML element so guys comment in
327:04 - the comment section below whether you
327:05 - have learned something out of this video
327:07 - please make sure that you like this
327:08 - video so that it reaches to more people
327:11 - and subscribe to this channel so that
327:12 - you get the notifications on upcoming
327:14 - videos as well the next video that we
327:16 - are going to talk about is combinators
327:18 - in CSS so stay tuned so now we will see
327:22 - combinators in CSS so guys basically
327:25 - combinators are the way to select the
327:28 - HTML elements using the CSS selectors
327:31 - and this we are going to check with the
327:33 - help of examples as well so basically
327:35 - there are four different combinators in
327:37 - CSS so the very first combinator is The
327:40 - Descendant selector which we use with
327:43 - the help of the space character over
327:45 - here so guys let us check this with the
327:46 - help of example in vs code over here I'm
327:49 - going to remove the previous lines of
327:51 - code that we had return in the HTML and
327:54 - the CSS files we have the two paragraph
327:56 - tags inside the diff tag in this case so
327:59 - guys let me just save this file now and
328:01 - try reloading this page on the browser
328:03 - so as you can see we have this is para
328:05 - one inside div tag and we have this is
328:08 - par 2 inside diff tag now guys what do
328:11 - you mean by descendant selector so
328:14 - basically inside the diff tag let us say
328:17 - we want to identify these two paragraph
328:20 - tags over here so since both these
328:22 - paragraph tags are inside this
328:24 - particular diff tag simply we can use
328:27 - the div tag followed by the space
328:29 - character and then we can mention this
328:31 - paragraph tag over here so guys let us
328:33 - move to the CSS file over here we can
328:36 - provide the diff tag in this case
328:38 - followed by the space character and then
328:40 - we have the P here so basically this
328:43 - space character that we have provided in
328:45 - between the div and the P tag is The
328:48 - Descendant selector over here by which
328:50 - we are saying that inside the div tag we
328:53 - have the paragraph tag over here and
328:55 - only for those paragraph tags we want to
328:58 - provide certain CSS property that we are
329:01 - going to apply over here basically the
329:03 - paragraph text inside the diff text
329:05 - should have the background color as
329:07 - yellow so let me just save this file now
329:09 - and try reloading this page once again
329:11 - on the browser so as you can see both
329:14 - these paragraph tags are now having the
329:16 - background color as yellow that's
329:18 - because both of them are present inside
329:20 - the diff tag and we have provided the
329:23 - CSS property in such a way that the diff
329:26 - tag should have the paragraph tag then
329:28 - only the background color should be
329:31 - applied as yellow color over here now
329:33 - guys let us say we have another
329:34 - paragraph tag which is outside of this D
329:37 - tag let me just say save this file now
329:39 - and try reloading this page once again
329:40 - on the browser so now if you see this is
329:43 - the paragraph 3 outside diff tag is
329:46 - getting displayed but it is not having
329:48 - the background color as yellow that's
329:50 - because it is not present inside one of
329:53 - the diff tags over here so if you notice
329:56 - we have provided the CSS property to
329:58 - only those paragraph Texs which are
330:00 - present inside the DI tag over here and
330:03 - this is how the descendant selector will
330:05 - work as far as the CSS property the
330:08 - implementation is concerned now guys
330:10 - apart from this we also have the child
330:12 - selector over here which can be used by
330:15 - using this greater than symbol so guys
330:17 - let us check the example of this as well
330:19 - so by child selector we mean that this
330:21 - is the parent tag that is the div tag
330:23 - over here and inside this parent tag we
330:26 - have the two child tags that is having
330:28 - the text that is this is par one inside
330:31 - div tag and this is par 2 inside div tag
330:35 - now guys let us say we have another
330:36 - paragraph tag over here inside this div
330:39 - tag so guys basically this is the
330:41 - section tag which is the direct child of
330:43 - this div tag over here so guys basically
330:46 - we are saying this is a par tag inside a
330:48 - div section tag which means first of all
330:51 - there is a div tag over here and then we
330:53 - have the section tag which is the direct
330:55 - child tag of this div tag and then
330:58 - inside the section tag we have the
330:59 - paragraph tag let me just save this file
331:02 - now and try reloading this page once
331:04 - again on the browser so if you notice
331:06 - this is parat tag inside d section tag
331:08 - is also having the background color as
331:11 - yellow that's because we have provided
331:13 - this particular CSS property that is the
331:16 - background color is yellow for all the
331:18 - paragraph tags that are present inside
331:20 - the diff tag now guys let us say we only
331:23 - want to provide the background color to
331:25 - the direct child tags of this diff tag
331:28 - so what we can do is all we provide the
331:30 - diff tag and use the greater than sign
331:33 - over here so guys this is basically the
331:35 - child selector that we are using in
331:37 - which case we are saying that the parent
331:40 - tag should directly have the child tag
331:43 - over here in order to apply the CSS
331:45 - properties Bally we are going to provide
331:47 - the P tag over here so we have the div
331:49 - tag followed by greater than symbol
331:51 - which is the child selector and then we
331:54 - have P tag so guys what change will you
331:56 - notice on the web browser so basically
331:58 - whatever direct childrens of this div
332:01 - tag are present will be having the
332:03 - background color as Aqua which means
332:05 - both these paragraph tags should have
332:07 - the aqua color and then whatever
332:09 - descendants are present which means the
332:11 - div tag which is also having the section
332:14 - tag over here which is again having the
332:16 - child tag as the paragraph tag over here
332:18 - this paragraph should have the yellow
332:20 - background color now so guys let me just
332:22 - save these files now and try reloading
332:24 - this page once again on the browser so
332:26 - as you can see the two paragraphs that
332:28 - are the direct childrens of the div tag
332:31 - are now having the aqua color because of
332:34 - this child selector over here and this
332:36 - descendant selector is helping us in
332:39 - order to have the paragraph tag inside
332:41 - the diff tag have the background color
332:43 - as yellow color over here guys apart
332:46 - from this we also have something called
332:47 - as adjacent sibling selector so guys let
332:50 - us check that as well so what is the
332:52 - meaning of adjacent sibling selector
332:54 - over here so inside this vs code if you
332:57 - notice we have this div tag over here
332:59 - and inside the div tag we have the
333:01 - paragraph tags as well now guys what do
333:03 - we mean by sibling selector over here so
333:06 - basically after this D tag we have this
333:08 - paragraph tag over here which is the
333:10 - sibling tag for this particular diff tag
333:13 - so how do we apply the CSS property to
333:16 - this sibling tag so simply we are going
333:18 - to use the plus character over here in
333:21 - order to provide the CSS properties to
333:23 - the Adent sibling selector over here so
333:26 - guys what we will do is inside the
333:28 - style. CSS file over here simply we are
333:31 - going to set and Then followed by plus
333:34 - and then we have the P tag over here and
333:36 - then inside this let us say we want the
333:38 - color of the text to be displayed as red
333:41 - color so over here we provide the color
333:43 - property and the value as red so let me
333:46 - just save this file now and try
333:48 - reloading this page once again on the
333:49 - browser so as you can see the text color
333:52 - of this paragraph tag is now updated to
333:55 - the red color so this is the meaning of
333:57 - the ages and sibling selector by using
333:59 - the plus symbol over here so whatever
334:02 - tag that we use that is in this case we
334:04 - have used the diff tag over here
334:06 - followed by plus operator
334:08 - and then we have the P tag which means
334:10 - whatever sibling is present after the
334:12 - diff tag should have these particular
334:14 - CSS properties over here and since this
334:17 - particular paragraph tag was after this
334:19 - particular diff tag in this case the red
334:22 - color was provided s the text color to
334:25 - this paragraph tag over here guys let us
334:27 - have couple of more paragraph tag after
334:29 - this Par 3 over here so I'm going to
334:32 - copy these lines of code over here
334:34 - simply we will say this is 4 and par
334:37 - five
334:38 - outside diff tag so the same CSS
334:41 - property will be applied to the
334:43 - remaining paragraph tags over here as
334:45 - well so let us check that simply I'm
334:47 - going to save this file now and try
334:49 - reloading this page once again on the
334:51 - browser so as you can see the para 4 and
334:53 - par 5 are now getting displayed but it
334:55 - is not having the text color as red
334:57 - color why so because the plus operator
335:00 - that we have used in order to provide
335:02 - the CSS property for the ages and
335:04 - sibling selector will only work to the
335:07 - direct sibling selector over here and
335:09 - that is why only this first paragraph
335:12 - tag will have the text color as red now
335:14 - guys in order to apply the CSS
335:16 - properties to the remaining siblings as
335:19 - well that is the par 4 and par five as
335:22 - well what we can do is we can use the
335:24 - fourth combinator that is the general
335:26 - sibling selector and this is the symbol
335:28 - that we are going to use so guys let us
335:30 - check this as well so over here what we
335:32 - will be doing is first of all we will
335:34 - provide the diff tag over here and then
335:37 - we will have have the general sibling
335:39 - selector over here followed by the P tag
335:41 - in this case and then guys we can have
335:43 - the color that we want to have based on
335:45 - our requirements so let us say we
335:47 - provide the text color as blue color now
335:50 - so over here we will provide the blue
335:52 - color as the text color let me just save
335:55 - this file now notice that we have used
335:57 - the general sibling selector now after
335:59 - the agent sibling selector so guys
336:02 - basically all the siblings should have
336:04 - the color as blue color as far as the
336:06 - text color is concerned so let me just
336:08 - save this file now and try reloading
336:10 - this page once again on the browser so
336:12 - as you can see the par 4 and par 5 are
336:15 - now having the text color as blue color
336:18 - now so guys this is the difference when
336:19 - we use the agent sibling selector only
336:22 - one sibling will be used in order to
336:25 - apply the CSS property after this
336:27 - particular diff tag that we had used
336:29 - over here but when we use the general
336:32 - sibling selector then all the siblings
336:34 - will be used in order to provide the
336:37 - required CSS properties that we have
336:39 - provided over here so guys in this way
336:41 - you can use the different combinators as
336:43 - we have seen in this particular examples
336:46 - based on your requirements in order to
336:48 - provide the required CSS properties
336:51 - comment in the comment section below
336:52 - whether you have learned something out
336:54 - of this video please make sure that you
336:55 - like this video so that it reaches to
336:57 - more people and subscribe to this
336:59 - channel so that you get the
337:00 - notifications on upcoming videos as well
337:03 - the next video that we are going to talk
337:04 - about is sudo classes in CSS so so stay
337:08 - tuned so now we will see Pudo classes in
337:11 - CSS so guys basically a Pudo class is
337:14 - used to define a special state of an
337:17 - element and this we are going to check
337:19 - with the help of examples as well so for
337:21 - example Pudo classes can be used in
337:24 - order to style an element when a user
337:26 - mouses over it another example is to
337:29 - style the visited and unvisited links
337:31 - differently and we can also style an
337:34 - element when it gets focused so guys we
337:36 - will check some of the examples how we
337:38 - can use the sudo classes by using the
337:40 - CSS properties so the very first example
337:43 - that we are going to see is how do we
337:45 - display the paragraph when the mouse is
337:47 - over the div element so guys let us move
337:49 - to the VSS code over here and simply I'm
337:52 - going to remove the previous lines of
337:53 - code that we had written in the HTML and
337:56 - the style. CSS files so inside the HTML
338:00 - file over here let us first of all
338:02 - Define the div tag in this case so
338:04 - basically we are going to have the div
338:06 - tag and simply we are going to say this
338:09 - is a div tag get mouse cursor on this
338:14 - div tag so guys basically we have a very
338:16 - simple statement that this is a div tag
338:18 - and we need to get the mouse cursor on
338:20 - this div tag after which the paragraph
338:23 - tag will be displayed so guys basically
338:25 - we will have another paragraph tag over
338:27 - here so simply we are going to have the
338:29 - P tag in this case and then we will say
338:31 - this is a paragraph tag so guys we have
338:35 - a simple statement that is this is a
338:36 - paragraph tag let me just save this file
338:39 - now and try reloading this page on the
338:41 - browser so as you can see we have this
338:43 - is a diff tag get mouse cursor on this
338:45 - diff tag so basically when we get the
338:47 - mouse cursor on this particular diff tag
338:50 - we want this particular paragraph tag to
338:53 - be displayed so guys by default both the
338:55 - diff tag and the paragraph tags are
338:57 - getting displayed right now so let us
338:59 - Define certain CSS properties in order
339:02 - to achieve this task in such a way when
339:05 - the user gets the cursor on this
339:07 - particular diff tag the paragraph tag
339:09 - should get displayed so guys over here
339:11 - inside the style. CSS file first of all
339:14 - we are going to Define certain CSS
339:16 - properties for the paragraph tag over
339:18 - here so we will say background color as
339:21 - yellow so we are going to provide the
339:23 - background color for this paragraph tag
339:25 - over here and apart from that we are
339:27 - also going to have the padding of 10
339:29 - pixels in this case so guys let me just
339:31 - save this file now and try reloading
339:33 - this page once again on the browser so
339:35 - as you can see this is a paragraph tagt
339:37 - is now having certain CSS properties
339:39 - that we have already defined in the CSS
339:42 - file now guys what we will do is simply
339:44 - we are going to provide display property
339:47 - and the value that we are going to use
339:49 - is none in this case so that the
339:51 - paragraph is not displayed by default
339:54 - and when the user gets the cursor on
339:56 - this particular diff tag we want that
339:58 - paragraph to be displayed so let us
340:00 - Define those CSS properties as well so
340:02 - we have provided the display is equal to
340:04 - none let me just save this file now and
340:06 - try reloading this page page once again
340:07 - on the browser so as you can see the
340:09 - paragraph is not getting displayed by
340:11 - default because we have provided the
340:13 - display property as none now guys when
340:16 - we get the mouse cursor on this
340:17 - particular diff tag nothing is happening
340:19 - over here right now so we need to define
340:22 - the codo class over here so that is what
340:24 - we are talking about right now so we can
340:26 - use the Cudo class in order to display
340:29 - the paragraph that is not getting
340:31 - displayed by default over here so how do
340:33 - we do that so we need to define the
340:35 - hover property on this diff tag over
340:37 - here so we need to define the diff tag
340:39 - over here inside the style. CSS file
340:42 - followed by colon and then we have
340:44 - something called as hover so guys always
340:46 - remember that we use a single colon over
340:49 - here in order to define the codo class
340:52 - so in this case you can see there are
340:54 - multiple pseudo classes that you can use
340:57 - after a single colon over here so
340:59 - basically as you can see these are all
341:00 - the sudo classes that you can use now
341:03 - guys after using the hover Pudo class
341:05 - over here we want this particular
341:07 - paragraph tag which is the sibling which
341:10 - means it is the HTML tag that is next to
341:13 - the div tag over here so guys basically
341:15 - this is the sibling of the diff tag so
341:18 - we want this particular paragraph tag to
341:20 - be displayed so what we can do is after
341:23 - this over the next paragraph tag that is
341:25 - a sibling needs to be displayed so
341:27 - simply we are going to use the
341:29 - combinator that is plus over here and
341:31 - then followed by the paragraph tag that
341:33 - is p in this case so guys what do we
341:35 - mean by this so basically Whenever there
341:37 - is a div tag and we get the mouse on
341:40 - that particular diff tag the next
341:42 - sibling to that particular div tag which
341:44 - is represented by the paragraph tag over
341:47 - here should be applied the CSS
341:49 - properties that we are going to Define
341:51 - inside these curly braces so simply we
341:53 - are going to say display it is equal to
341:56 - block in this case so guys basically
341:58 - instead of display is equal to none it
342:00 - will be set as display is equal to block
342:03 - let me just save this file now and try
342:05 - reloading this page once again on the
342:06 - browser so now if you see the paragraph
342:09 - is not getting displayed by default but
342:11 - the moment we get the cursor on this div
342:13 - tag as you can see this is a paragraph
342:15 - tag is getting displayed below the diff
342:18 - tag so guys in this way you can easily
342:20 - use this Udo class in order to Define
342:23 - your own State inside the style. CSS
342:26 - file over here based on your project
342:28 - requirement so guys this was one of the
342:30 - example of this Udo classes over here
342:32 - and we have used the sibling combinator
342:34 - in this case there can be cases wherein
342:36 - the paragraph tag is inside the diff tag
342:39 - over here so let us check that example
342:41 - as well so let's say we cut this line of
342:43 - code over here and paste it inside the
342:46 - diff tag in this case so guys basically
342:48 - this paragraph tag is now the child of
342:51 - this particular parent tag that is the
342:52 - div tag so let me just save this file
342:55 - now so instead of using the plus
342:57 - operator simply we can use the space
342:59 - character over here so guys what do we
343:01 - mean by this so basically we have the
343:03 - div tag and when we get the cursor on
343:06 - this particular div tag the paragraph
343:08 - tag inside the diff tag should be
343:10 - displayed based on this particular CSS
343:12 - property that is display is equal to
343:14 - block so guys let me just save this file
343:16 - now and try reloading this page once
343:18 - again on the browser so there will be no
343:20 - change in the functionality the only
343:22 - change that we have done is we have made
343:24 - this particular paragraph tag as the
343:26 - child tag of this diff tag which is the
343:28 - parent tag now so guys when we get the
343:31 - cursor on this particular diff tag the
343:33 - paragraph tag is getting displayed over
343:35 - here based on the CSS properties that we
343:38 - have defined so guys this is one of the
343:40 - examples of the codo classes over here
343:42 - apart from this for the anchor tags that
343:44 - is the link tag over here we have
343:46 - different classes as well so if you see
343:49 - we have something called as link Pudo
343:52 - class and apart from this we also have
343:54 - the active sudo class as well and then
343:56 - we also have the visited sudo class so
343:58 - guys basically these are all the sudo
344:00 - classes that you can use in order to
344:03 - define the CSS properties based on the
344:06 - state of that particular anchor tag
344:08 - whether it is being visited by the user
344:10 - or not and then guys apart from this we
344:13 - also have something called as first
344:15 - child Pudo class over here which matches
344:17 - a specified element that is the first
344:20 - child of another element over here so
344:22 - guys let us check this as well with the
344:24 - help of example so if we take the same
344:26 - example that is inside the diff tag we
344:29 - have a paragraph tag over here and let
344:31 - us copy this line of code once again and
344:34 - we will say this is a paragraph tag one
344:36 - and for the second paragraph tag we will
344:38 - say this is a paragraph tag two over
344:41 - here now guys let me just save this file
344:43 - now and try reloading this page once
344:45 - again on the browser so now if we get
344:47 - the cursor on this particular div tag
344:50 - both the paragraphs that is paragraph
344:52 - tag one and paragraph tag two are
344:54 - getting displayed over here that's
344:56 - because we have provided the CSS
344:58 - properties for all the paragraph tags
345:01 - inside the diff tag over here now guys
345:03 - let us say we only want the first child
345:06 - that is the first paragraph tag over
345:08 - here to have the display property in
345:10 - this case so guys what we can do is
345:13 - simply we can use the first child Pudo
345:15 - class over here so in the same example
345:18 - we are going to go in this style. CSS
345:20 - file over here and after the paragraph
345:22 - tag that is the P tag in this case we
345:24 - will provide colon and Then followed by
345:27 - first child in this case so as you can
345:29 - see this is the Cudo class that we can
345:31 - use so guys after this P tag we have the
345:33 - first child Pudo class so guys by this
345:36 - we mean that we need to take only that
345:38 - particular paragraph which is the first
345:40 - child of this particular diff tag over
345:43 - here so let me just save this file now
345:45 - and try reloading this page once again
345:47 - on the browser so now if we get the
345:49 - cursor on this particular diff tag only
345:51 - the first paragraph tag is getting
345:54 - displayed over here that's because we
345:56 - have instructed the CSS file in this
345:58 - case in order to display the paragraph
346:01 - which is the first child of this diff
346:03 - tag over here guys apart from this you
346:05 - can also combine the HTM ML Class name
346:08 - with the pseudo classes as well so this
346:10 - I'll leave up to you as a homework for
346:12 - you so that you can practice on your own
346:14 - so guys comment in the comment section
346:15 - below whether you have learned something
346:17 - out of this video please make sure that
346:19 - you like this video so that it reaches
346:20 - to more people and subscribe to this
346:22 - channel so that you get the
346:23 - notifications on upcoming videos as well
346:26 - the next video that we are going to talk
346:27 - about is Pudo elements in CSS so stay
346:31 - tuned so now we will see sudo elements
346:34 - in CSS so guys basically a CSS sudo
346:37 - element is used to style specified parts
346:40 - of an element and this we are going to
346:42 - check with the help of examples as well
346:45 - so for example the sudo elements can be
346:48 - used to style the first letter or the
346:51 - first line of an HTML element or also it
346:54 - can be used in order to insert the
346:56 - content before or after the content of
346:59 - an element so guys some of the examples
347:02 - include we have something called as
347:04 - first line over here which is one of the
347:06 - C elements now guys it is very important
347:09 - to note that whenever you are using the
347:11 - Udo elements in the style. CSS file we
347:15 - need to have two times colon over here
347:17 - followed by the pseudo element that we
347:19 - are going to use so guys let us check
347:21 - this with the help of example in vs code
347:23 - over here so simply I'm going to remove
347:25 - the previous lines of code that we had
347:27 - written in the HTML and the CSS files
347:30 - over here now guys we are going to have
347:32 - a diff tag in this case so simply we are
347:34 - going to have the diff tag and and we
347:37 - are going to Define some random text
347:39 - over here so simply we are going to have
347:42 - the lurm Mt abbreviation over here that
347:44 - can help us in order to generate the
347:46 - random text in this case now guys let me
347:49 - just save this file now and try
347:50 - reloading this page once again on the
347:52 - browser so as you can see we have
347:54 - certain random text that is getting
347:56 - generated on the web browser now guys
347:58 - let us say we want this particular first
348:01 - line of this diff tag to be colored as
348:04 - red color over here so how do we do that
348:07 - so basically we can simply use the Pudo
348:10 - element that is the first line in this
348:12 - case inside the CSS file in order to
348:15 - have the text color as red so guys let
348:18 - us move to the CSS file over here and
348:20 - inside the CSS file simply we are going
348:22 - to define the div tag in this case and
348:25 - then as I have told you we have to use
348:27 - two times colon over here and then
348:30 - followed by the pseudo element that is
348:32 - first line in this case so guys
348:34 - basically we are going to use the first
348:36 - line hudo element and then we need to
348:39 - have the open and close curly braces
348:42 - inside which we are going to define the
348:44 - CSS properties so guys in this case
348:46 - simply we are going to use the color CSS
348:48 - property and simply we are going to set
348:50 - the text color as red color over here so
348:53 - guys let me just save this file now and
348:55 - try reloading this page once again on
348:57 - the browser so as you can see the first
348:59 - line of this particular diff tag which
349:02 - is having four lines over here is now
349:04 - having the text color as red color in
349:07 - this case guys we can have other CSS
349:09 - properties as well being defined over
349:11 - here so let's say we want the text size
349:14 - to be larger so in this case simply we
349:16 - are going to use the font size CSS
349:19 - property and simply we will say large
349:21 - value in this case so let me just save
349:23 - this file now and try reloading this
349:26 - page once again on the browser so as you
349:28 - can see the font size is increased to
349:30 - some extent now let us use some other
349:32 - value that is larger in this case so
349:35 - that we can see the font size of the
349:36 - first line clearly larger compared to
349:39 - the other lines of this particular diff
349:42 - tag over here so guys let me just reload
349:44 - this page once again on the browser so
349:46 - as you can see the font size is larger
349:48 - now compared to the font size of the
349:50 - other lines of the same diff tag in this
349:52 - case now guys apart from this we can
349:54 - also use the first letter hudo element
349:57 - so let's say instead of having the red
349:59 - color for this first letter we want this
350:01 - first letter to be displayed in some
350:03 - other color so guys what we can do is
350:05 - simply inside this style. CSS file over
350:08 - here again we are going to define the
350:10 - diff tag and then after this we are
350:12 - going to provide two times colon and
350:14 - then simply we can say first letter
350:16 - pseudo element so guys basically we use
350:19 - the first letter pseudo element in order
350:22 - to define the CSS property for the first
350:25 - letter of this particular HTML element
350:27 - over here so guys inside this what we
350:29 - are going to do is let's say we want a
350:31 - different color so the color that we are
350:34 - going to use is blue in this case so
350:36 - guys we have set the color as blue and
350:38 - let's say we want the font size to be
350:40 - larger over here so simply we are going
350:42 - to define the font size as 32 pixels in
350:45 - this case so guys let me just save this
350:47 - file now and try reloading this page
350:49 - once again on the browser so as you can
350:51 - see the color of the first letter of
350:54 - this particular diff tag has been
350:55 - updated to the blue color now and also
350:58 - the font size of this first letter is 32
351:01 - pixels in this case just like how we
351:03 - have defined over here inside the style
351:06 - do CSS file so guys basically this first
351:08 - letters Udo element can help you in
351:11 - order to provide certain CSS properties
351:14 - to this particular first letter of this
351:16 - HTML element based on your project
351:18 - requirements now guys apart from this we
351:21 - also have something called as before
351:23 - Pudo element so guys let us check this
351:25 - as well so what we are going to do is
351:27 - before this diff tag we are going to
351:29 - have a heading over here which is going
351:32 - to be the H1 heading so we will say this
351:35 - is heading one in this case so guys let
351:38 - me just save this file now and try
351:40 - reloading this page once again on the
351:41 - browser so as you can see we have the
351:43 - heading and it is having its default
351:45 - font size over here now guys let us say
351:48 - we want some icon to be displayed before
351:51 - this particular heading so what we can
351:53 - do is simply we can use the before
351:55 - pseudo element in order to display a
351:58 - particular icon or Emoji before the HTML
352:01 - element so guys let us check that as
352:03 - well how it can be done so basically
352:05 - inside the time CSS file over here
352:08 - simply we are going to define the H1 tag
352:10 - in this case and Then followed by 2 *
352:13 - colon and then we have something called
352:15 - as before so as you can see this is the
352:17 - Pudo element that we will be using and
352:20 - then guys inside this what we can do is
352:22 - simply we are going to have the content
352:24 - CSS property and we are going to say URL
352:28 - and inside this URL we are going to
352:30 - provide the name of the Emoji that we
352:32 - want to display before the heading so
352:35 - guys over here I have downloaded a
352:37 - smiley emoji over here so we are going
352:39 - to use the same smiley emoji in this
352:42 - case so basically we are going to
352:44 - provide the name of this PNG file that
352:46 - is smiley. PNG so guys since we are
352:49 - using the before pseudo element the
352:51 - smiley emoji will be displayed before
352:54 - the heading over here so guys let me
352:57 - just save this file now that is the
352:58 - style. CSS file and let me just reload
353:01 - this page once again on the browser so
353:03 - as you can see this is the smiley emoji
353:06 - that is getting displayed just before
353:08 - the heading that we have defined over
353:10 - here now guys in order to display this
353:12 - Emoji after the heading over here that
353:15 - is this is heading one so what we can do
353:17 - is simply instead of using the before
353:19 - pseudo element we can use the after Pudo
353:22 - element so guys what we can do is simply
353:25 - inside the style. CSS file over here
353:28 - instead of having before we will have
353:30 - after in this case so guys let me just
353:32 - save this file now and try reloading
353:34 - this page once again on the browser so
353:36 - so as you can see now the Emoji is
353:38 - getting displayed after the heading over
353:40 - here just by using the after pseudo
353:43 - element in this case so guys in this way
353:45 - we can use the different pseudo elements
353:47 - based on our requirements now guys apart
353:49 - from this we have something called as
353:51 - marker pseudo element as well which is
353:53 - used in order to define the CSS
353:56 - properties for the unordered list or the
353:59 - ordered list markers that are the
354:01 - numbers or the bullet points so guys
354:03 - this marker Pudo element I'll leave up
354:05 - to you as a homework for you so that you
354:07 - can practice on your own as far as the
354:09 - list items are concerned so guys comment
354:12 - in the comment section below whether you
354:13 - have learned something out of this video
354:15 - please make sure that you like this
354:17 - video so that it reaches to more people
354:19 - and subscribe to this channel so that
354:20 - you get the notifications on upcoming
354:22 - videos as well the next video that we
354:24 - are going to talk about is opacity or
354:27 - transparency in CSS so stay tuned so now
354:31 - we will see opacity or transparency in
354:34 - CSS so guys basically the opacity
354:37 - property specifies the opacity or the
354:39 - transparency of an element and this we
354:42 - are going to check with the help of
354:43 - examples as well the opacity property
354:46 - can take a value from 0.0 up to 1.0 so
354:51 - guys basically we can provide the values
354:53 - that is from 0.0 and then we can also
354:56 - provide 0.1 0.2 0.3 and up to the value
355:00 - that is 1.0 so if you provide the lower
355:03 - value the more transparent the element
355:05 - will be B so guys by default the opacity
355:08 - will be set as 1.0 to all the HTML
355:11 - elements and simply by decreasing this
355:14 - value towards 0.0 you will be increasing
355:17 - the transparency of that particular HTML
355:20 - element so guys let us check this with
355:22 - the help of example in vs code over here
355:25 - so simply I'm going to remove the
355:26 - previous lines of code that we had
355:28 - written in the HTML and the CSS files
355:31 - over here now guys what we are going to
355:32 - do is we are going to insert an image in
355:35 - our HT ml file in this case so basically
355:38 - we are going to have the image and for
355:40 - the source attribute we are going to
355:42 - define the sample image over here that
355:45 - we have already saved in our directory
355:47 - so guys basically we are going to use
355:49 - this particular sample forest image in
355:52 - this case and then for the alt attribute
355:54 - simply we are going to provide test
355:57 - image as the alternate text over here so
356:00 - guys let me just save this file now and
356:01 - try reloading this page once again on
356:03 - the browser so as you can see this is
356:05 - the IM image that is getting displayed
356:07 - over here now guys we are going to set
356:09 - the width and height of this particular
356:11 - image inside the style. CSS file so over
356:14 - here simply we are going to provide the
356:17 - width and height inside the IMG tag over
356:20 - here so guys let's say we have the width
356:22 - as 200 pixels and height is 150 pixels
356:25 - over here so basically we are going to
356:27 - Define these withd and height in this
356:29 - case let me just save this file now and
356:32 - try reloading this page once again on
356:33 - the browser so as you can see this is
356:36 - this is the image that is getting
356:37 - displayed over here on the web browser
356:39 - now because by default the opacity value
356:42 - is one over here so simply when we
356:44 - provide the opacity CSS property so as
356:47 - you can see this is the opacity CSS
356:49 - property that we are talking about right
356:51 - now so by default the value is one right
356:54 - now over here so it is 1.0 let me just
356:57 - save this file now and try reloading
357:00 - this page when we reload this page we
357:02 - won't be able to see any change because
357:04 - this is the default value that we have
357:06 - provided over here so as you can see
357:09 - after reloading the page there is no
357:11 - change inside the image in this case now
357:13 - guys let us decrease the opacity to some
357:16 - extent over here so that we can see
357:18 - certain transparency inside this
357:20 - particular image so let's provide the
357:23 - value as 0.8 in this case so the moment
357:26 - we provide 0.8 as opacity transparency
357:30 - effect should be provided to some extent
357:32 - to this particular image so guys let me
357:34 - just save this file now enter TR
357:36 - reloading this page once again on the
357:38 - browser so as you can see to some extent
357:41 - we can see the transparency inside this
357:43 - image now and that is how the opacity
357:45 - CSS property works let us decrease the
357:48 - value to 0.5 now so that 50% of the
357:52 - transparency can be implemented on this
357:55 - particular image let me just save this
357:57 - file now and try reloading this page
357:59 - once again on the browser so as you can
358:01 - see 50% transparency can be seen in this
358:04 - particular image right now guys what we
358:06 - will do is we will also provide the
358:08 - original image as well over here so
358:10 - simply what we will do is again we are
358:13 - going to copy this line of code once
358:15 - again over here so this IMG tag is again
358:18 - having the source attribute as the
358:19 - sample forest image and it is also
358:21 - having the alternate text test test
358:24 - image over here now guys in order to
358:26 - identify what we will do is simply we
358:28 - are going to provide couple of line
358:30 - breaks in this case so first of all for
358:33 - the first image what we will do is we
358:35 - will say that this is the original image
358:37 - over here so simply we are going to
358:39 - provide the paragraph tag in this case
358:41 - and then we will say that this is the
358:43 - original image and then after the line
358:46 - breaks again we are going to have the
358:48 - paragraph tag over here and then we will
358:50 - say that this is the modified image in
358:52 - this case so guys for the original image
358:54 - we are going to have certain ID over
358:56 - here so let's say we have the ID as
358:59 - original in this case and for the second
359:01 - image that is the modified image we are
359:03 - going to have the ID which is going to
359:05 - be modified in this case so Guys these
359:08 - IDs are provided so that we can identify
359:11 - between both of these images right now
359:13 - since we are using the common width and
359:16 - height for both the images so guys what
359:18 - we will do is I'll simply remove the
359:20 - opacity over here from this particular
359:22 - image and then we would Define the ID of
359:25 - the modified image over here so simply
359:28 - we are going to provide the hash
359:29 - character and for the modified ID so we
359:32 - are going to copy this modified ID and
359:34 - paste it over here and we are going to
359:36 - provide the opacity as 0.5 that is the
359:40 - 50% of transparency so guys basically
359:43 - for the modified image we are going to
359:45 - provide the opacity as 50% that is 0.5
359:48 - is the value and for the original image
359:51 - we have not provided any opacity for
359:53 - which the default opacity will be one in
359:56 - this case so guys let me just save this
359:58 - file now and try reloading this page
360:00 - once again on the browser so as you can
360:02 - see we have this original image that is
360:05 - having the opacity as one and we have
360:07 - the modified image over here which is
360:09 - having certain kind of transparency in
360:12 - this case when we set the opacity as 1.0
360:15 - so there will be no change in both the
360:16 - images let me just reload this page once
360:19 - again on the browser so as you can see
360:21 - there is no change right now but when we
360:23 - decrease the opacity so let's say we
360:25 - provide 0.3 as the opacity so basically
360:28 - a lot of transparency will be provided
360:30 - to the modified image over here so let
360:33 - me just save this file now and try
360:34 - reloading this page once again on the
360:36 - browser so as you can see 0.3 opacity is
360:39 - helping us in order to provide the
360:41 - transparency to this particular modified
360:44 - image over here so guys in this way you
360:46 - can easily use the opacity CSS property
360:49 - in order to provide certain transparency
360:51 - to your images or any other HTML
360:54 - elements based on your requirements now
360:56 - guys apart from this let us check
360:58 - another example let us provide the
361:00 - transparency on Hover effect so guys
361:03 - what does this mean is whenever we are
361:05 - going to get the cursor on this
361:07 - particular image over here the
361:08 - transparency should be applied over here
361:11 - so guys what we will do is instead of
361:13 - Simply Having the modified ID and
361:15 - providing the opacity is 0.3 over here
361:19 - we are going to provide 50% transparency
361:22 - so we are going to provide opacity is
361:24 - equal to 0.5 but this should be applied
361:27 - when we get the cursor on this
361:29 - particular modified image over here and
361:31 - not by default so guys what we have to
361:33 - do is simply for this X modified CSS
361:37 - selector after this we are going to
361:39 - provide colon and then we are going to
361:41 - use the codo class that is hover over
361:44 - here so guys basically what does this
361:45 - mean is whenever we are going to get the
361:48 - mouse cursor on this particular HTML
361:51 - element that is having the ID as
361:53 - modified the opacity of 0.5 will be
361:56 - applied over here so guys let me just
361:58 - save this file now and try reloading
362:00 - this page once again on the browser so
362:02 - as you can see the original and the
362:04 - modified images both are looking same
362:07 - because by default the opacity is one
362:09 - right now on both the images but the
362:12 - moment we get the cursor on this
362:13 - particular modified image as you can see
362:16 - the transparency effect can be seen over
362:18 - here since we have provided the hover
362:20 - effect on this modified image over here
362:23 - by applying the opacity is equal to 0.5
362:26 - in this case so guys basically when we
362:28 - get the cursor over here transparency is
362:30 - set to 50% and when we get the cursor
362:33 - outside of this image the opacity is
362:35 - again set to 1.0 which is the default
362:38 - value so guys in this way you must be
362:40 - seeing many websites wherein when you
362:42 - get the cursor on a specific image the
362:44 - transparency is either increased or
362:46 - decreased so this is how the CSS
362:49 - properties are applied on those websites
362:52 - in such a way that the hover effect will
362:54 - help you in order to increase or
362:56 - decrease the transparency by using the
362:59 - opacity CSS property so guys comment in
363:02 - the comment section below whether you
363:03 - have learned something out of this video
363:05 - please make sure that you like this
363:07 - video so that it reaches to more people
363:09 - and subscribe to this channel so that
363:10 - you get the notifications on upcoming
363:12 - videos as well the next video that we
363:14 - are going to talk about is vertical
363:16 - navigation bar in CSS so stay tuned so
363:21 - now we will see vertical navigation bar
363:23 - in CSS so guys basically having an easy
363:26 - to use navigation is very important for
363:29 - any website and with the help of CSS you
363:32 - can transform the boring HTML menu into
363:36 - a goodlook navigation bar and this we
363:38 - are going to check with the help of
363:40 - examples as well by creating the
363:42 - vertical navigation bar using CSS so
363:45 - guys basically a navigation bar is
363:47 - nothing but it is the list of links and
363:50 - we are going to create the unordered
363:53 - list inside which we are going to have
363:55 - the list of links which we are going to
363:57 - convert it into the vertical navigation
364:00 - bar using CSS so guys we will be using
364:03 - the UL which means the unordered list
364:05 - and the lii items to create a navigation
364:08 - bar so guys let us move to the vs code
364:11 - over here and simply I'm going to remove
364:13 - the previous lines of code that we had
364:15 - written in the HTML and the CSS files
364:18 - over here now guys simply what we are
364:20 - going to do is as I have told you we are
364:22 - going to use the unordered list over
364:24 - here so we are going to have the UL tag
364:27 - along with it we are going to have the
364:29 - Ali items as well which are the list
364:31 - items and we are going to have four list
364:34 - items initially so guys as you can see
364:37 - we have created the unordered list
364:39 - inside which we are going to have the
364:41 - four list items over here and then guys
364:43 - apart from this we are also going to
364:45 - have four links inside all these list
364:48 - items so we are going to have the a tag
364:51 - over here and then for the hrf attribute
364:53 - simply we are going to provide the hash
364:56 - character in this case for the test
364:58 - purpose now guys let us provide certain
365:00 - link text over here so first of all we
365:02 - are going to have home and then we have
365:04 - news and then then we have contact over
365:07 - here and then we are going to have the
365:09 - fourth item that is about in this case
365:12 - so guys basically we have defined the
365:13 - unordered list inside which we are
365:15 - having the four list items and each list
365:18 - item is having the anchor tag which are
365:21 - having the different link text over here
365:23 - so guys let me just save this file now
365:25 - and try reloading this page on the
365:27 - browser so as you can see we have four
365:29 - links over here now guys we are going to
365:31 - make use of the CSS file in this case
365:34 - and we are going to use used the
365:35 - different CSS properties in order to
365:38 - convert this list item into the vertical
365:41 - navigation bar over here so guys what we
365:44 - have to do is inside the style. CSS file
365:47 - which is attached to this HTML file over
365:49 - here first of all we are going to remove
365:52 - these bullet items in this case so we
365:55 - are going to have the unordered list
365:57 - that is the UL tag over here and simply
365:59 - we are going to say list style type CSS
366:03 - property the value should be none in
366:05 - this case so guys basically what will
366:07 - happen is these bullets will be removed
366:09 - from the web browser so guys let me just
366:11 - save this file now and try reloading
366:13 - this page on the browser so as you can
366:15 - see there are no bullets that are
366:16 - appearing inside this list now guys let
366:19 - us remove the padding and the margin as
366:21 - well that is present by default over
366:23 - here inside the UL tag so simply we are
366:26 - going to provide padding and margin it
366:28 - is equal to 0 pixels in this case let me
366:31 - just reload this page once again so as
366:33 - you can see there is no more padding and
366:35 - Mar for the unordered list over here now
366:38 - guys for these links what we are going
366:40 - to do is we are going to remove the
366:42 - underling setup present over here so
366:44 - simply we have to provide the Alli tag
366:47 - inside which we have the anchor tag over
366:49 - here that is the a tag so for this
366:51 - particular text we are going to provide
366:54 - the text decoration for which the value
366:56 - should be none so that the underline
366:58 - that is present by default for all the
367:01 - anchor text over here will be removed so
367:04 - guys let me just save this file now and
367:05 - try reloading this page so as you can
367:08 - see the underline from all the text is
367:10 - removed over here guys let us have
367:12 - certain background color as well for
367:14 - this unordered list in this case so what
367:17 - we are going to do is inside the UL tag
367:20 - simply we are going to say background
367:21 - color and we are going to say the color
367:24 - will be black in this case and for the
367:26 - anchor text that is the a tag over here
367:28 - simply we are going to set the font
367:30 - color as white so that the text can be
367:33 - easily seen on the black color
367:35 - background over here so guys let me just
367:37 - save this file now and try reloading
367:39 - this page once again on the browser so
367:41 - as you can see we have the background
367:43 - color over here as black color and the
367:46 - text color is now getting displayed with
367:48 - the help of a white color now now guys
367:50 - since the UL tag is the Block Level
367:53 - element over here and that is why the
367:55 - entire width of the screen is being
367:57 - taken over here so what we can do is
367:59 - simply we can Define the width of let's
368:01 - say 100 pixels in this case so let us
368:04 - check whether the 100 pixels with this
368:05 - enough or not so let me just reload this
368:08 - page once again on the browser so as you
368:10 - can see we have a good vertical
368:12 - navigation bar over here now guys let us
368:14 - provide certain padding as well to the
368:16 - Alli elements over here so simply we are
368:19 - going to define the Alli tag in this
368:21 - case and we are going to provide the
368:24 - padding of 10 pixels in this case so
368:26 - that we have sufficient spaces around
368:29 - the LI elements so guys let me just save
368:31 - this file now and try reloading this
368:33 - page so as you can see we have this
368:35 - sufficient spacing now around the text
368:38 - that are getting displayed over here now
368:40 - guys what we are going to do is when we
368:42 - get the mouse cursor on these elements
368:44 - we want the background color to be
368:46 - updated so that the user comes to know
368:48 - that this is the particular link that he
368:50 - or she is going to click so guys what we
368:53 - are going to do is over here on the
368:55 - hover so guys simply we are going to use
368:57 - the hover Udo class over here so on lii
369:00 - we are going to provide the hover
369:02 - element in this case and for the a tag
369:05 - we are going to change the background
369:07 - color so over here simply we are going
369:09 - to set the background color as red so
369:11 - basically what we have done is when we
369:13 - get the mouse cursor on the LI element
369:16 - over here the hover sudo class will help
369:19 - us in order to set the background color
369:21 - of the anchor text as red color over
369:24 - here so guys let me just save this file
369:26 - now and try reloading this page once
369:28 - again on the browser and when we get the
369:30 - cursor over here we are getting the
369:32 - background color of anchor text as red
369:34 - color over here now guys we want the
369:36 - entire lii element to be having the
369:39 - background color as red color so what we
369:41 - can do is if we simply remove this a tag
369:44 - so basically the entire Alli element
369:46 - should have the background color as red
369:48 - color over here let me just save this
369:50 - file now and try reloading this page
369:52 - once again on the browser so now if you
369:54 - see on the hover of the Ali element the
369:57 - entire list element is now getting the
369:59 - background color as red color over here
370:02 - and this is one of the important
370:03 - implementation as far as this vertical
370:06 - navigation bar is concerned and guys
370:08 - apart from this let us say we are
370:10 - currently on this homepage over here so
370:12 - what we can do is simply for this anchor
370:15 - tag with the home text we are going to
370:17 - define the class as active over here so
370:19 - that we come to know that this is the
370:22 - anchor tag which is active right now so
370:24 - guys let me just save this file now and
370:26 - inside the style. CSS file simply we are
370:29 - going to say the active class with the
370:31 - help of the dot character over here we
370:34 - are going to define the background color
370:36 - so guys basically what we are saying is
370:38 - the active link text should have the
370:41 - aqua background color over here so that
370:43 - we can easily identify that which of the
370:45 - pages is active right now so guys let me
370:47 - just save this file now and try
370:49 - reloading this page once again on the
370:51 - browser so as you can see we have the
370:53 - aqua color over here for the anchor text
370:55 - guys let us change the color over here
370:57 - so that it is displayed properly with
370:59 - the white color text over here and also
371:02 - we need to provide this class to the LI
371:04 - element in this okay so simply I'm going
371:06 - to remove the class from the a tag and
371:09 - we are going to paste it for the LI
371:11 - element over here and for the active
371:14 - class we are going to change the
371:15 - background color to let's say green
371:17 - color over here which is a dark color
371:20 - and it will go well with the text color
371:22 - that is white in this case so guys let
371:23 - me just save this file now and try
371:25 - reloading this page once again on the
371:27 - browser so as you can see we have the
371:29 - active page that is the homepage right
371:32 - now and then the user can go to the
371:34 - other options over here now guys apart
371:36 - from this you can also see certain
371:37 - spacing on the left of this navigation
371:40 - bar and on the top of this navigation
371:42 - bar as well so what we can do is simply
371:45 - for the body tag we can remove the
371:47 - padding and margin over here which is
371:49 - one of the best practices so guys simply
371:51 - we are going to provide the body tag at
371:53 - the start of the CSS file and simply we
371:56 - are going to say margin is equal to zero
371:58 - and padding also is equal to zero in
372:01 - this case let me just save this file now
372:03 - and try reloading this page once again
372:05 - on the browser so now if you see there
372:07 - is no more additional spacing on the
372:09 - left or on the top of this navigation
372:11 - bar and simply we can increase the
372:13 - options of this navigation bar as well
372:15 - so what we have to do is inside the
372:17 - index dot we can add more options over
372:20 - here so guys over here what we will do
372:22 - is let's say we have photos as one
372:25 - option and then videos as another option
372:28 - and then we have languages as well so
372:30 - guys basically we are defining more
372:32 - options inside our vertical navigation
372:35 - bar and the last option is site map over
372:37 - here so guys basically we have around
372:39 - eight options in this case inside a
372:42 - vertical navigation bar let me just save
372:44 - this file now and try reloading this
372:46 - page once again on the browser so as you
372:48 - can see this is a very good looking
372:49 - vertical navigation bar that we have
372:51 - created and based on your project
372:53 - requirements you can also create similar
372:56 - kind of vertical navigation bar just by
372:58 - using the unordered list and the list
373:01 - items over here and apart from this
373:03 - these are the CSS properties that we
373:05 - have used inside the style. CSS file in
373:08 - this case so guys comment in the comment
373:09 - section below whether you have learned
373:11 - something out of this video please make
373:13 - sure that you like this video so that it
373:15 - reaches to more people and subscribe to
373:16 - this channel so that you get the
373:18 - notifications on upcoming videos as well
373:20 - the next video that we are going to talk
373:22 - about is a horizontal navigation bar in
373:24 - CSS so stay tuned so now we will see
373:28 - horizontal navigation bar in CSS so guys
373:31 - basically navigation bar is a list of
373:34 - links which we are going to check with
373:36 - the help of examples as well and by
373:38 - using those list of links we are going
373:40 - to create a horizontal navigation bar so
373:43 - guys horizontal navigation bar can be
373:45 - created by using the display equal to
373:48 - inline property on the list of item so
373:51 - guys let us check this with the help of
373:53 - examples in vs code over here and
373:55 - previously we had seen how we can create
373:57 - the vertical navigation bar over here so
374:00 - guys similarly we are going to create a
374:02 - horizontal navigation bar in this case
374:04 - so what we are going to do is simply I'm
374:06 - going to remove the previous lines of
374:08 - code that we had written in the HTML and
374:10 - the CSS files over here now simply we
374:13 - are going to have the unordered list in
374:15 - this case inside which we are going to
374:17 - have the four list items so basically we
374:20 - are going to define the Four list items
374:22 - over here and then inside these list
374:24 - items we are going to have the anchor
374:26 - tags over here and they are going to
374:29 - have the hrf attribute with the hash
374:31 - character over here for test purpose now
374:33 - guys let us Define the text inside these
374:36 - anchor tags over here so let's say we
374:38 - have home and then we have blog and then
374:41 - let's say we have photos and then we
374:44 - have videos over here so these are the
374:46 - four list items that should be present
374:48 - inside the horizontal navigation bar
374:51 - guys over here we are going to go step
374:53 - by step in order to create a complete
374:56 - horizontal navigation bar with the help
374:58 - of these unordered list items over here
375:01 - so guys let me just save this file now
375:03 - and try reloading this page on the
375:05 - browser so as you can see we have this
375:07 - unordered list which is present in the
375:09 - form of a vertical list over here so
375:11 - guys now first of all we are going to
375:13 - remove these bullets from the unordered
375:16 - list and also remove the padding and the
375:18 - margin that is present by default inside
375:20 - this horizontal list so guys inside the
375:23 - style. CSS file over here simply we are
375:25 - going to define the UL that is the
375:27 - unordered list tag and then we are going
375:30 - to say list style type so guys basically
375:33 - this is the CSS property that is used
375:35 - used in order to Define what kind of
375:37 - bullet points we want to display as far
375:40 - as the unordered list is concerned so by
375:42 - default it is the circle that is getting
375:44 - displayed over here we can display them
375:46 - as Square as well so when we save this
375:48 - file now and try reloading this page
375:50 - once again on the browser so as you can
375:52 - see these are the square bullets over
375:54 - here but guys since we are creating the
375:56 - horizontal navigation bar we don't want
375:59 - any bullets over here so simply we are
376:01 - going to provide none s the list style
376:03 - type so let me just save this file now
376:05 - and try reloading this page once again
376:07 - on the browser so as you can see we no
376:09 - longer have any of the bullets over here
376:12 - now guys simply we are going to remove
376:13 - the padding and margin as well from
376:15 - these unordered list so we are going to
376:18 - say padding is equal to zero and also
376:20 - the margin attribute as zero over here
376:23 - so let me just save this file now and
376:25 - try reloading this page so as you can
376:27 - see there is no longer padding and
376:29 - margin that is present by default inside
376:31 - this unordered list now guys what we are
376:33 - going to do is we will be removing the
376:35 - underlines from all these anchor tags
376:37 - over here so simply inside the LI that
376:40 - is the list item we have the anchor tags
376:42 - over here and then we are going to say
376:45 - text decoration it should be equal to
376:47 - none and also we are going to set the
376:49 - color as white in this case so guys
376:51 - basically we are going to set the text
376:53 - color as white and the background color
376:56 - of this unordered list as black so guys
376:58 - basically we are going to say background
377:00 - color as black in this case so guys when
377:03 - we are going to set the background color
377:05 - of this entire unordered list as black
377:07 - so the background color of the
377:09 - navigation bar will be updated to black
377:12 - color and the text color of the anchor
377:14 - text over here will be updated to white
377:17 - color and that is how we are going to
377:19 - make a perfect navigation bar so guys
377:21 - let me just save this file now and try
377:23 - reloading this page once again on the
377:24 - browser so as you can see we have the
377:27 - black background color over here and the
377:29 - text color of all these links is being
377:31 - updated to white color now now guys one
377:33 - more important thing we we are going to
377:35 - have all these text in one line over
377:37 - here so what we can do is simply these
377:39 - list items that we have created we need
377:42 - to display them as inline since they are
377:44 - being displayed as the Block Level
377:46 - elements over here right now so simply
377:48 - we are going to define the Alli that are
377:50 - the list items and we are going to say
377:53 - display is equal to inline in this case
377:56 - so that all the list items are displayed
377:58 - in one line so guys let me just save
378:00 - this file now and try reloading this
378:02 - page once again on the browser so as you
378:04 - can see all the list items are now
378:05 - getting displayed on the same line now
378:07 - guys apart from this let us provide
378:09 - certain spacing in between these list
378:11 - items as well so what we are going to do
378:13 - is simply we are going to set the
378:15 - padding as 10 pixels over here so guys
378:17 - let me just save this file now and try
378:19 - reloading this page once again on the
378:21 - browser so as you can see we have
378:23 - provided certain spacing around the list
378:25 - items over here now guys apart from this
378:27 - we also want the top and bottom padding
378:30 - as well so let's say we provide the top
378:32 - and bottom padding inside the unordered
378:34 - list in this case so simply we are going
378:36 - to say padding as 10 pixels for top and
378:39 - bottom and for the left and right we are
378:41 - going to say it as zero pixels over here
378:43 - so guys this is the way that we provide
378:45 - the top and bottom padding for any of
378:48 - the HTML elements and the next number
378:50 - will be representing the left and the
378:52 - right padding over here so guys let me
378:54 - just save this file now and try
378:56 - reloading this page once again on the
378:57 - browser so as you can see we have
378:59 - provided the top and bottom padding as
379:01 - well with the help of the padding CSS
379:03 - property so guys the horizontal
379:05 - navigation bar is almost complete over
379:07 - here but the user should get at least
379:10 - some kind of confirmation that he or she
379:12 - will be clicking on one of these links
379:14 - so guys what we are going to do is when
379:16 - we get the mouse cursor on this
379:18 - particular list item over here so the
379:20 - list item background color should be
379:23 - updated to some color so that the user
379:25 - gets the confirmation or the feedback
379:27 - that he or she will be clicking on these
379:29 - list items which is the part of the
379:31 - navigation bar so guys what we are going
379:33 - to do is simply on the hover of the LI
379:36 - item over here so we Define the LI item
379:39 - followed by colon and then we use the
379:41 - sudo class that is over in this case so
379:44 - when we get the cursor on the list item
379:46 - we want to change the background color
379:48 - to red color over here so simply we are
379:51 - going to say the background color CSS
379:53 - property and then we are going to set
379:55 - the value as red color over here so guys
379:58 - let me just save this file now and try
379:59 - reloading this page once again on the
380:01 - browser so now if you see we are getting
380:03 - the background color as red color over
380:05 - here and user is at least getting the
380:07 - feedback that he or she will be clicking
380:10 - on that particular link which is getting
380:12 - highlighted as red color over here so
380:14 - guys in this way we have created a very
380:16 - simple horizontal navigation bar that
380:18 - you will be seeing in many of the
380:20 - website so guys this is one of the
380:22 - important ways in order to create the
380:24 - horizontal navigation bar by using the
380:27 - unordered list items over here and using
380:29 - some of the CSS properties that we have
380:31 - defined over here now guys apart from
380:33 - this if you notice there is certain
380:35 - spacing on the left and on the top of
380:37 - this navigation bar so how we can get
380:39 - rid of that so basically it is the
380:41 - padding and the margin of the body tag
380:44 - over here so guys the body tag is
380:46 - representing the entire page that is the
380:49 - web page on this particular web browser
380:51 - so inside the body tag over here simply
380:54 - we are going to set the margin as zero
380:57 - and also the padding as zero over here
380:59 - so guys this is one of the best
381:01 - practices that the programmers follow in
381:03 - order to avoid the spacing that is
381:05 - present by default in some of the web
381:08 - browsers so guys let me just save this
381:09 - file now and try reloading this page
381:11 - once again on the browser so now if you
381:13 - see there is no spacing on the left or
381:15 - on the top of this navigation bar and
381:17 - simply we can go and select one of the
381:19 - list items from this navigation bar guys
381:22 - apart from this we can also have more
381:24 - options over here so simply you can add
381:26 - more options in this case so over here
381:28 - simply I'm going to copy these lines of
381:30 - code in this case and simply we are
381:32 - going to have more options so let's say
381:35 - we have languages over here and then
381:36 - let's say we have news and then let's
381:39 - say we have the contact option and then
381:41 - the last option is the about option over
381:43 - here so guys let me just save this file
381:45 - now and simply we have to reload this
381:47 - page so as you can see the other options
381:49 - are also getting displayed over here and
381:52 - this is the way that you can create the
381:54 - horizontal navigation bar now guys we
381:56 - have used the HF attribute as the hash
381:59 - character over here for the test purpose
382:01 - but these are going to be the real
382:03 - production links when you are going to
382:05 - implement them in your project so guys
382:07 - please make note of this hrf attribute
382:09 - over here and apart from this you can
382:11 - replicate these styling for your next
382:13 - project and you can practice on your own
382:15 - so guys comment in the comment section
382:17 - below whether you have learned something
382:19 - out of this video please make sure that
382:20 - you like this video so that it reaches
382:22 - to more people and subscribe to this
382:24 - channel so that you get the
382:25 - notifications on upcoming videos as well
382:27 - the next video that we are going to talk
382:29 - about is creating a drop-down option in
382:32 - CSS so stay tuned
382:34 - so now we will see how we can create the
382:37 - drop- down options in CSS so guys
382:40 - basically we are going to create a
382:42 - hoverable drop down with the help of the
382:44 - CSS and the drop- down options should be
382:47 - displayed when the mouse is hovered over
382:50 - a button so guys let us check this with
382:52 - the help of examples in vs code over
382:54 - here so simply I'm going to remove the
382:56 - previous lines of code that we had
382:58 - written in the HTML and the CSS files
383:01 - over here now guys as far as the drop
383:03 - down option concerned simply you can
383:05 - have the select tag over here and inside
383:09 - the select tag you can have multiple
383:11 - options in this case so let's say we
383:13 - have one of the option as option one
383:15 - over here so simply we are going to say
383:18 - one in this case and then you can copy
383:20 - paste this line of code and then we can
383:23 - change the text to the other options
383:25 - over here so we have the two so we have
383:28 - the second option is two and the third
383:31 - option is three over here so guys
383:33 - basically you can simply have the drop
383:34 - down options with the help of the HTML
383:37 - tag that is the select and the option
383:39 - tags over here let me just save this
383:41 - file now and try reloading this page on
383:43 - the browser so as you can see we have
383:46 - these drop- down options over here but
383:48 - guys we are going to implement the drop
383:50 - down options by using the CSS in this
383:53 - case instead of using the select and the
383:55 - option tags over here so what we are
383:58 - going to do is we are going to Define
384:00 - certain diff tags over here and a button
384:03 - tag as well and using the CSS file over
384:06 - here and certain CSS properties we are
384:08 - going to display these options when we
384:10 - get the mouse cursor on that particular
384:13 - button that we are going to Define so
384:15 - guys let us complete this exercise over
384:17 - here so simply we are going to have
384:19 - let's say the h2 tag over here and then
384:22 - we will say get your mouse cursor on
384:26 - below button so guys simply we are
384:28 - having this particular statement that is
384:30 - get your mouse cursor on below button
384:32 - over here and we are going to Define the
384:35 - diff tag in this case which is going to
384:37 - have the class name as drop down over
384:39 - here so simply we are going to define
384:41 - the diff tag followed by the dot
384:43 - character and then we have the name of
384:45 - the class that is dropped down and when
384:46 - we press enter as you can see a diff tag
384:49 - with the class name that is drop down is
384:51 - getting created over here now guys
384:54 - inside this we are going to have the
384:55 - button tag over here and for this button
384:58 - tag we are going to say drop down s the
385:00 - text and then guys over here we are
385:03 - going to have the class and the class
385:05 - name will be button drop down in this
385:08 - case guys we are going to make use of
385:10 - these class names inside the CSS files
385:12 - and that is why we are defining these
385:14 - classes over here and it is one of the
385:16 - best practices in order to create the
385:19 - classes or the IDS for the different
385:21 - HTML elements that you create based on
385:24 - your requirements now guys apart from
385:26 - this after this button we are going to
385:28 - have another diff tag over here and then
385:30 - we are going to have the class name in
385:32 - this case as the drop down content so
385:35 - guys basically this is the diff tag
385:37 - which is going to display the drop-down
385:39 - content that is all the options as you
385:42 - can see these are the options that will
385:44 - be present inside this particular diff
385:46 - tag over here so guys inside this what
385:48 - we will do is we will have the anchor
385:51 - tags in this case so we are going to
385:53 - have the HF attribute as the hash
385:55 - character and simply we are going to
385:57 - provide link one over here and then we
386:00 - are going to copy paste these lines of
386:01 - code and simply we are going to say link
386:04 - link two and Link three so guys
386:06 - basically what we are doing is we are
386:08 - having three options over here inside
386:10 - the diff that is defining the drop- down
386:13 - content in this case so guys let me just
386:15 - save this file now and try reloading
386:17 - this page once again on the browser so
386:19 - as you can see we have the h2 tag over
386:22 - here which is having the simple
386:23 - statement get your mouse cursor on below
386:26 - button so guys when we get the mouse
386:27 - cursor on this particular button over
386:29 - here all these link items that are the
386:32 - options should get displayed in this
386:34 - this case so guys let us provide certain
386:36 - CSS properties to this button element
386:39 - first of all so what we are going to do
386:41 - is we will copy the class of this button
386:43 - over here and simply inside the style.
386:46 - CSS file we are going to use the dot
386:48 - character followed by the name of the
386:50 - class in this case so guys basically we
386:53 - are going to have certain background
386:54 - color so let's say we have the
386:56 - background color over here and the text
386:59 - color is white so guys basically we have
387:01 - the color CSS property as white over
387:04 - here and also we will have the padding
387:06 - of let's say 10 pixels in this case let
387:08 - me just save this file now and try
387:10 - reloading this page once again on the
387:12 - browser so as you can see we have this
387:14 - particular button with the background
387:16 - color that is green and the text color
387:18 - is white and we have certain padding
387:20 - that we have implemented over here guys
387:22 - there is a default border that is
387:24 - getting displayed over here so what we
387:26 - are going to do is simply inside this
387:28 - button we are going to say border it is
387:30 - equal to none so that we can remove this
387:32 - border from this button let me just save
387:34 - this file now and try reloading this
387:36 - page once again on the browser so as you
387:38 - can see we don't have any border right
387:40 - now over here now guys what we are going
387:42 - to do is these link items are present in
387:45 - one line we want them to be on the
387:47 - separate lines over here and also we
387:49 - want the div section that is the drop-
387:52 - down content it should have certain
387:54 - background color so guys what we are
387:56 - going to do is first of all we are going
387:57 - to style this drop down content diff tag
388:00 - over here so simply I'm going to copy
388:02 - this class name and then inside the the
388:04 - style. CSS file we are going to provide
388:06 - the dot character followed by the class
388:08 - name over here and then we are going to
388:11 - provide the background color in this
388:13 - case so let's say we provide the gray
388:15 - color as the background color over here
388:17 - so guys we have the 6 * D characters in
388:20 - this case which is representing a gray
388:22 - color shade over here and then apart
388:24 - from this we also want the width of this
388:27 - particular section to be limited so we
388:29 - are going to provide the width as 100
388:31 - pixels in this case let me just save
388:33 - this file now and try reloading this
388:35 - page once again on the browser so as you
388:37 - can see we have the background color as
388:39 - the gray color over here but guys apart
388:41 - from this we also want these links to be
388:43 - present on the next line so what we can
388:45 - do is simply inside this class name so
388:48 - we are going to provide dot followed by
388:50 - the class name and whatever a tags are
388:52 - present we are going to provide the
388:54 - anchor tag over here and then inside
388:57 - this we are going to say display is
388:59 - equal to block so guys by default the
389:01 - display properties is in line for this
389:04 - particular anchor tag and that is why
389:06 - all the links are getting displayed on
389:08 - the same line so we are going to provide
389:10 - displays equal to block so that all of
389:13 - them are displayed on separate lines
389:15 - over here so let me just save this file
389:17 - now and try reloading this page once
389:19 - again on the browser so as you can see
389:20 - all the links are now getting displayed
389:23 - on the separate lines apart from this
389:25 - let us remove the underline as well from
389:27 - these anchor tags so we will provide the
389:30 - text decoration is equal to none in this
389:33 - case and also apart from this let us
389:35 - provide the color of this text as black
389:37 - color over here so we are going to
389:39 - provide the color as black and also
389:41 - provide the padding so guys over here
389:43 - simply we are going to provide the
389:45 - padding as 5 pixels let me just save
389:47 - this file now and try reloading this
389:49 - page so as you can see we have the
389:51 - padding also we have removed the
389:53 - underline over here and we have the text
389:56 - color as black color right now now guys
389:58 - apart from this when the user gets the
390:00 - cursor on these particular links we want
390:02 - the background color to be up Creed for
390:04 - these links so what we can do is simply
390:06 - on the hover property of these a tag we
390:09 - can change the background color so
390:11 - simply I'm going to copy these lines of
390:13 - code and paste it over here but we are
390:15 - going to provide the sudo class in this
390:18 - case which is the over sudo class and on
390:20 - this H Udo class we want to change the
390:23 - background color so simply we are going
390:24 - to say background color in this case and
390:27 - let's say we have the background color
390:28 - as Aqua so guys basically we are going
390:30 - to set this particular background color
390:33 - when the user gets the mouse on that
390:35 - particular link text so let me just save
390:37 - this file now and try reloading this
390:39 - page once again on the browser so now
390:41 - when we get the cursor over here on
390:43 - these links that is the options the
390:45 - background color of that particular
390:47 - option is now getting updated now now
390:49 - guys very important thing is when we get
390:51 - the mouse cursor on this drop- down then
390:54 - only we want this particular section to
390:57 - be displayed that is having the list of
390:59 - options so by default all these list of
391:01 - options should be hidden over here so so
391:04 - what we can do is simply for this
391:06 - particular drop- down content class we
391:08 - are going to define the display is equal
391:10 - to nonone property so over here we
391:13 - already have this drop- down content
391:15 - inside our CSS file so simply we are
391:17 - going to say display is equal to none
391:20 - this time so guys basically by default
391:22 - this particular diff tag that is having
391:24 - the class that is drop down content will
391:26 - not be displayed over here so let me
391:28 - just save this file now and try
391:30 - reloading this page once again on the
391:32 - browser so as you can see after defining
391:34 - all the CSS properties we have set the
391:37 - display is equal to none property so by
391:39 - default this particular section which is
391:41 - present over here right now but it is
391:43 - not getting visible and we want it to be
391:45 - visible when we get the mouse cursor on
391:47 - this drop down button over here so guys
391:50 - how do we make it visible so basically
391:52 - we are going to set the display is equal
391:54 - to block property when we get the mouse
391:56 - cursor on this particular diff tag over
391:59 - here so what is the diff tag in this
392:00 - case so it is the diff tag that is
392:02 - having the class equal to drop down so
392:04 - simply I'm going to copy this class that
392:06 - is drop down over here and then inside
392:09 - the style. CSS file simply we are going
392:11 - to say dot followed by the name of the
392:13 - class that is dropped down and when we
392:15 - get the mouse cursor on this particular
392:18 - diff tag we are going to provide the
392:21 - hover sudo class over here so basically
392:23 - it says that whenever we are going to
392:25 - get the mouse cursor on the diff tag
392:28 - that is having the class drop down over
392:30 - here then these particular CSS
392:32 - properties will be implemented so what
392:34 - we want to do is we want to make the
392:37 - drop- down content as visible so guys
392:39 - when we hover over this particular diff
392:42 - tag we want the drop- down content that
392:44 - is this particular diff to be visible
392:46 - over here so we need to copy this class
392:49 - name that is drop down content over here
392:51 - and after this H we need to provide the
392:54 - space character and the diff that is
392:56 - with this particular class name should
392:58 - be displayed so we need to provide the
393:00 - dot character since it is a class name
393:02 - and then inside this we are going to say
393:05 - display it is equal to block this time
393:07 - so guys by default it was display is
393:09 - equal to none but when we get the mouse
393:11 - cursor on this particular diff tag that
393:14 - is having the class drop down so on the
393:16 - hover sudo class we want to get the
393:19 - drop- down content to be displayed over
393:21 - here with the help of the display equal
393:23 - to blog so let me just save this file
393:24 - now and try reloading this page once
393:26 - again on the browser so by default there
393:28 - is no drop down that you can see over
393:31 - here but the moment we get the mouse
393:33 - cursor on this drop down button over
393:35 - here you can see that the drop- down
393:37 - content is now getting displayed over
393:39 - here now guys if you notice when we get
393:40 - the mouse cursor over here as well on
393:43 - the right hand side the drop- down
393:44 - content is again getting displayed why
393:47 - so that's because we have provided the
393:49 - display equal to block on the drop-down
393:52 - class which is the diff tag over here
393:54 - and as you know the diff tag is the
393:56 - Block Level element so let us right
393:58 - click over here and click on the inspect
394:00 - option let us see the length of the diff
394:02 - tag over here so as you can see this is
394:04 - the diff tag with the class drop down on
394:07 - which we have provided the hover
394:09 - property and and if you see the entire
394:11 - width of the screen is getting
394:13 - highlighted over here so guys what we
394:15 - can do is simply for this particular
394:17 - diff tag that is having the class drop
394:19 - down we can have the display property as
394:22 - inline so simply we are going to go
394:24 - inside the style. CSS file over here and
394:27 - for this class that is the drop down
394:29 - over here we are going to provide the
394:31 - dot character followed by the class name
394:33 - that is dropped down and simply we are
394:35 - going to say display is equal to in line
394:38 - so basically it is going to take only
394:40 - that much width as required by the text
394:43 - inside this particular diff tag over
394:45 - here let me just save this file now and
394:47 - try reloading this page once again on
394:49 - the browser so now if you see the drop-
394:51 - down diff tag it is not taking the
394:53 - entire width of the screen but it is
394:55 - only taking the width of the button that
394:58 - is present over here right now so guys
395:00 - when we get the mouse cursor over here
395:02 - as you can see we are getting the drop
395:04 - down content that is getting visible
395:06 - right now but when we get the mouse
395:07 - cursor on the right hand side now there
395:09 - is no drop- down content that is getting
395:11 - displayed so guys only when you get the
395:14 - mouse cursor on this particular button
395:16 - then only the drop- down content that is
395:19 - having the list of options to be
395:21 - selected will be displayed over here so
395:23 - guys this is the way that you can
395:25 - implement the drop- down options by
395:27 - using CSS properties comment in the
395:29 - comment section below whether you have
395:30 - learned something out of this video
395:32 - please make sure that you like this
395:33 - video video so that it reaches to more
395:35 - people and subscribe to this channel so
395:37 - that you get the notifications on
395:38 - upcoming videos as well the next video
395:40 - that we are going to talk about is
395:42 - attribute selectors in CSS so stay tuned
395:46 - so now we will see attribute selectors
395:48 - in CSS so guys it is possible to style
395:52 - the HTML elements that have specific
395:54 - attributes or the attribute values so
395:57 - far we have seen the IDS or the class
396:00 - names that we have used as the CSS
396:02 - selectors in order to identify the HTML
396:05 - elements but we can also use the
396:07 - attribute selectors over here so
396:09 - basically this is the syntax first of
396:11 - all we use the tag and Then followed by
396:13 - the square bracket and then inside that
396:16 - we can use the attribute name and also
396:19 - the value that we can use in order to
396:21 - identify a particular HTML element so
396:24 - guys let us check this with the help of
396:26 - examples in vs code over here so simply
396:28 - I'm going to remove the previous lines
396:30 - of code that we had written inside the
396:32 - HTML and the style. CSS files over here
396:36 - now guys what we are going to do is
396:37 - simply we are going to have the
396:38 - paragraph tag in this case so guys we
396:41 - have a very simple statement that is
396:43 - this is paragraph one over here and for
396:45 - this paragraph tag let us have the title
396:47 - attribute as well and we are going to
396:49 - have the title that is par over here now
396:52 - guys similarly we are going to have more
396:54 - paragraph tags over here so I'm going to
396:56 - copy these lines of code in this case
396:58 - and simply we are going to have this is
397:00 - paragraph 2 and then we have this is
397:02 - paragraph 3 and then we have this is
397:04 - paragraph 4 over here and then guys we
397:06 - are also going to update the title in
397:09 - this case so let's say we have par 2
397:11 - over here and let's say simply we are
397:13 - going to say title in this case as the
397:16 - title attribute and let's say for the
397:18 - fourth paragraph we don't have the title
397:20 - attribute over here so Guys these are
397:22 - the four different paragraph tags which
397:24 - are having different statements and they
397:26 - are also having the title attributes the
397:29 - last paragraph is not having any of the
397:31 - title attribute over here now guys let
397:33 - me just save this file now and try
397:35 - reloading this page on the browser so as
397:38 - you can see we have all these four
397:40 - paragraphs that are getting displayed
397:42 - with the statements that we have defined
397:44 - inside the HTML files over here now guys
397:47 - what we have to do is let's say we want
397:49 - to identify those paragraphs which are
397:52 - having the title attribute over here and
397:54 - we want to have the background color as
397:57 - yellow for those paragraphs over here so
397:59 - guys in such problem statement we can
398:01 - use the attribute leor over here and
398:04 - check whether the paragraph is having
398:07 - the attribute that is title in this case
398:09 - so simply inside the style.css file
398:12 - first of all we are going to have the
398:13 - background color for all the four
398:15 - paragraphs over here so simply for the P
398:18 - tag we have to define the background
398:20 - color CSS property in this case and the
398:23 - value that we use is yellow over here so
398:25 - guys let me just save this file now and
398:27 - try reloading this page once again on
398:29 - the browser so as you can see all the
398:31 - four paragraphs are now having the
398:33 - background color as yellow color now now
398:35 - guys what we will do is we will color
398:38 - only those paragraph with the background
398:40 - color as yellow which is having the
398:42 - title attribute so simply we are going
398:44 - to modify this particular style. CSS
398:47 - file in such a way that for this
398:49 - existing CSS property that is for the
398:52 - existing CSS selector over here that is
398:54 - the P tag we are going to provide open
398:57 - and close square brackets over here and
398:59 - inside the square brackets we are going
399:01 - to provide the title attribute
399:03 - so guys what is the meaning of this so
399:06 - only those B tag that is the paragraph
399:08 - tag which is having the title attribute
399:11 - should be provided the CSS property that
399:13 - is the background color as yellow color
399:16 - over here and the rest of the paragraphs
399:18 - should not have the background color so
399:20 - guys initially we have seen that all the
399:22 - four paragraphs were having the
399:24 - background color but in this case since
399:26 - the fourth paragraph is not having the
399:29 - title attribute so the fourth paragraph
399:31 - will not have the background color now
399:34 - since we are only selecting those
399:36 - paragraphs which are having the title
399:38 - attribute over here so guys let me just
399:40 - save this file now and try reloading
399:43 - this page once again on the browser so
399:45 - as you can see the first second and
399:47 - third paragraphs are now having the
399:49 - background color as yellow the fourth
399:51 - paragraph is not having the background
399:53 - color now and in this way you can simply
399:56 - use the open and close square brackets
399:58 - over here and provide one of the
400:00 - attributes that must be present inside
400:03 - that particular HTML tag in order to
400:06 - provide the CSS properties based on your
400:08 - requirements so guys this is a simple
400:10 - example as far as the attribute selector
400:12 - is concerned now guys we have certain
400:14 - more examples as well apart from this
400:17 - attribute that is the title we can also
400:20 - provide the value of that particular
400:22 - title so let's say inside the style. CSS
400:25 - file what we do is let's say for this
400:27 - first paragraph over here which is
400:29 - having the title equal to par only this
400:32 - particular paragraph should be having
400:34 - the background color as yellow so what
400:36 - we can do is simply we provide the title
400:39 - attribute and Then followed by equal to
400:41 - and then we provide the value that is
400:43 - par over here so guys basically what
400:46 - this means is only those paragraphs
400:48 - which is having the attribute that is
400:50 - title with a value that is par should
400:53 - have these CSS properties that are
400:55 - defined over here so let me just save
400:57 - this file now and try reloading this
400:59 - page once again on the browser so as you
401:02 - can see only the first first paragraph
401:04 - is now getting the background color as
401:06 - yellow that's because this particular
401:08 - condition is getting satisfied with only
401:11 - the first paragraph since that is the
401:13 - title value that is present over here so
401:16 - guys this is another example of the
401:17 - attribute selection apart from this we
401:19 - can also use attribute followed by this
401:22 - particular symbol and then equal to and
401:25 - then we can provide the value so
401:26 - basically it will check whether the tag
401:29 - contains the value word or not so guys
401:31 - what we can do is simply inside inside
401:33 - the style. CSS file we can use this
401:36 - particular symbol over here and this
401:38 - expression is going to check whether the
401:40 - title attribute is containing the par
401:43 - word or not so how many paragraphs that
401:45 - are having the title attribute is having
401:48 - the par word over here we can see that
401:50 - paragraph 1 and paragraph 2 are having
401:53 - the title with a word that is par that
401:55 - is present as the value of the title
401:58 - attribute so guys one and two paragraphs
402:00 - should be having the background color
402:02 - over here in this case so let me just
402:04 - save this file now and try reloading
402:06 - this page once again on the browser so
402:08 - as you can see paragraph 1 and paragraph
402:10 - 2 are now having the background color as
402:13 - yellow color over here so guys apart
402:15 - from this we can also have the attribute
402:17 - and Then followed by the raise to symbol
402:20 - and then equal to symbol followed by the
402:22 - value which means the attribute should
402:25 - start with the value that is getting
402:27 - provided over here apart from this we
402:29 - also have this dollar symbol which means
402:31 - that the attribute should end with this
402:33 - particular value and also we have the
402:36 - star character over here which means the
402:38 - attribute contains the value over here
402:40 - now guys what is the difference between
402:42 - this particular symbol and the star
402:45 - symbol over here so let us check that so
402:47 - basically we have checked whether this
402:49 - title is containing this word par or not
402:52 - and based on this condition the first
402:54 - and the second paragraph are having the
402:56 - background color is yellow but guys let
402:58 - us say we only provide the substring
403:01 - from this particular word so let's say
403:02 - we remove the last a character and then
403:05 - we provide p a r so basically can we use
403:08 - this in order to have the background
403:11 - color for both these paragraphs over
403:13 - here so let us check that so let me just
403:15 - save this file now and try reloading
403:17 - this page once again on the browser so
403:19 - as you can see we don't have any
403:20 - background color for any of the
403:22 - paragraphs so guys what we have done is
403:25 - this particular symbol it checks whether
403:27 - the entire word is present for that
403:30 - particular attribute or not but this
403:32 - word is is not present but if you want
403:35 - to use the substring from any of the
403:37 - word which means this p a substring is
403:41 - present in both the paragraphs that is
403:43 - paragraph 1 and paragraph 2 then you can
403:46 - use the star character over here so
403:48 - basically we can use the star character
403:50 - followed by equal to and then we can
403:52 - provide the substring of any of the word
403:55 - that is present as the value for that
403:57 - particular attribute of the HTML element
404:01 - so now guys if we save this file andent
404:03 - by reloading this page once again on the
404:04 - browser as you can see the title that is
404:07 - p is present in both that is paragraph 1
404:11 - and paragraph 2 and this is the
404:13 - substring that is getting matched over
404:15 - here and that is why we are having the
404:17 - background color as yellow for both of
404:19 - these paragraphs so guys in this way you
404:21 - can use the attribute selectors over
404:23 - here so guys apart from this the other
404:25 - two attribute selectors that is
404:27 - attribute starts with and the attribute
404:29 - ends with you can try on your own as a
404:32 - homework for you you so guys comment in
404:34 - the comment section below whether you
404:35 - have learned something out of this video
404:37 - please make sure that you like this
404:39 - video so that it reaches to more people
404:41 - and subscribe to this channel so that
404:42 - you get the notifications on upcoming
404:44 - videos as well the next video that we
404:46 - are going to talk about is an exercise
404:49 - on alignment sudo classes combinators
404:52 - and the attribute selectors so stay
404:56 - tuned so guys now we are going to work
404:58 - on an exercise on alignment pseudo
405:02 - classes combin ators and the attribute
405:04 - selectors that we have seen previously
405:07 - so guys it is very important that you
405:09 - practice on your own so that you get the
405:11 - better understanding of all these
405:13 - Concepts as far as CSS is concerned so
405:16 - guys we are going to complete the below
405:18 - task in order to finish this particular
405:20 - exercise so first of all we are going to
405:23 - create a diff tag with a sample text and
405:26 - with a width of 50% and having the
405:29 - yellow background color and some border
405:31 - over here so guys let us create the diff
405:33 - tag in this case so I'm going to Simply
405:35 - remove the previous lines of code that
405:37 - we had written in the HTML and the CSS
405:40 - files over here guys if you are new to
405:42 - these Concepts you can watch my previous
405:44 - videos in the playlist the link I have
405:46 - given in the description section below
405:48 - related to the CSS tutorial so you get
405:51 - the better understanding of all these
405:53 - Concepts that we are going to work on in
405:55 - this particular list of task so guys
405:57 - first of all we are going to create the
405:59 - diff tag in this case so basically we
406:02 - have this diff tag and inside this div
406:04 - tag let us have certain text over here
406:06 - so simply we are going to say this is a
406:09 - div tag over here now guys let me just
406:11 - save this file now and inside the CSS
406:14 - file what we are going to do is we are
406:16 - going to have the width as 50%
406:18 - background color is yellow and some
406:20 - border for this div tag so inside the
406:23 - style. CSS file we are going to Define
406:26 - this div tag and then we will say withd
406:29 - s 50% of the screen width and then the
406:32 - background color color as yellow so we
406:34 - are going to say the background color
406:36 - CSS property as yellow color over here
406:38 - and apart from this we are going to have
406:40 - the Border as well so let's say we have
406:42 - two pixels border of the solid type and
406:45 - the color as the black color for the
406:47 - border so guys let me just save this
406:49 - file now and try reloading this page on
406:51 - the browser so as you can see we have a
406:53 - very simple diff tag over here that we
406:55 - have created based on the first task
406:58 - inside this exercise now guys we need to
407:00 - Center align the above diff tag
407:03 - horizontally using the margin so guys we
407:05 - had seen in the alignment video how we
407:08 - can align this D tag horizontally at the
407:10 - center of the screen over here so
407:12 - basically we can use the margin CSS
407:15 - property in this case so guys inside the
407:17 - style. CSS file simply we are going to
407:19 - say margin CSS property and simply we
407:22 - can say the and the value that we are
407:24 - going to use is auto over here so that
407:26 - from the left and right hand side the
407:28 - margin is equal and the diff tag is
407:31 - centered horizontally as as far as the
407:33 - horizontal alignment is concerned so
407:35 - guys let me just save this file now and
407:37 - try reloading this page once again on
407:39 - the browser so as you can see this is
407:41 - the way that we can Center a particular
407:43 - dep at the center of the screen as far
407:45 - as horizontal alignment is concerned
407:48 - guys apart from this let us move to the
407:49 - next task so over here we need to create
407:52 - a paragraph with random text on multiple
407:54 - lines so guys inside the HTML file over
407:57 - here what we have to do is we need to
407:59 - create the P tag that is the paragraph
408:01 - tag over here and simply we are going to
408:03 - generate some random text in this case
408:06 - so let us say we use the lurm Mt
408:08 - abbreviation over here in order to
408:10 - generate some random text that will be
408:12 - displayed on multiple lines on the web
408:14 - browser so guys let me just save this
408:16 - file now and try reloading this page one
408:18 - second on the browser so as you can see
408:21 - multiple lines are getting displayed
408:23 - over here inside the paragraph tag now
408:25 - guys the next task is to color the first
408:27 - line of the paragraph as green color
408:30 - using the Pudo class over here and also
408:33 - increase the font size to 28 pixels so
408:36 - guys if you remember for this paragraph
408:38 - tag what we can do is we can use the Udo
408:40 - class that is the first line in order to
408:43 - implement certain CSS properties for the
408:46 - first line over here for this paragraph
408:48 - tag so for the P tag in this case simply
408:51 - we are going to provide colon and then
408:53 - we have something called as first line
408:55 - over here so we have first iphon line in
408:58 - this case so guys this is the sudo
409:00 - element that we will be using that is
409:02 - the first line over here and then inside
409:04 - this we are going to set the color as
409:07 - green color based on the requirements
409:09 - and the font size will be 28 pixels so
409:13 - as you can see this is the 28 pixels
409:15 - that is the font size that we have to
409:17 - set so we have set the font size is 28
409:19 - pixels over here let me just save this
409:21 - file now and try reloading this page
409:23 - once again on the browser so as you can
409:25 - see the first line of this paragraph is
409:28 - now having the color as green color and
409:30 - the font size is also 28 pixels that is
409:33 - getting implemented over here now guys
409:35 - let us move to another task we need to
409:37 - create another paragraph below and using
409:40 - the sibling combinator make the
409:42 - background color as Aqua over here so
409:44 - guys what we will do is first of all for
409:46 - this particular paragraph We are going
409:48 - to provide the ID as parah over here so
409:51 - simply we are going to say parah in this
409:53 - case and the same ID we are going to use
409:55 - while we are using this Udo element that
409:58 - is first line so guys let me just copy
410:00 - this ID and provide it over here here
410:02 - inside of the P tag so basically we are
410:05 - going to use the hash character followed
410:07 - by the par ID over here so guys let me
410:09 - just save this file now and try
410:11 - reloading this page so as you can see
410:13 - this Udo element is helping us in order
410:15 - to implement the CSS properties that we
410:18 - have already defined over here now guys
410:20 - let us complete the next task in order
410:22 - to create the paragraph So basically we
410:25 - are going to create another paragraph
410:27 - over here below this paragraph that is
410:29 - having the ID as par so we have the
410:31 - paragraph over over here let us have
410:33 - another ID that is par one in this case
410:36 - and then we will say this is another
410:39 - paragraph So guys we have a very simple
410:41 - statement that is this is another
410:43 - paragraph over here let me just save
410:45 - this file now and try reloading this
410:47 - page once again on the browser so as you
410:49 - can see we have a very simple statement
410:51 - that is this is another paragraph now
410:53 - guys what we have to do is we need to
410:55 - use the sibling combinator selector in
410:58 - order to make the background color as
411:00 - equa for this particular paragraph so
411:02 - guys basically as per the requirement we
411:04 - don't have to select this paragraph
411:06 - directly but we need to select this
411:09 - paragraph that is having the IDS par and
411:11 - then we need to find the next sibling
411:13 - which is this particular paragraph for
411:15 - which the background color needs to be
411:17 - set so guys what we can do is since we
411:19 - have provided the ID as parah over here
411:22 - previously the same ID we are going to
411:24 - use that is par for this main paragraph
411:26 - that is the first paragraph We have
411:28 - created and then we are going to use the
411:30 - sibling combinator which is the plus
411:33 - character over here so guys basically
411:35 - when we use the plus character it is
411:37 - going to identify the next sibling over
411:39 - here and the next Sibling Tag is the P
411:42 - tag over here so guys basically we are
411:44 - using the sibling combinator in this
411:46 - case in order to identify this new
411:49 - paragraph that we have created and for
411:51 - this new paragraph We need to set the
411:53 - background color as Aqua so over here we
411:56 - are going to set the background color as
411:58 - aqua color let me just save this file
412:00 - now and try reloading this page once
412:02 - once again on the browser so as you can
412:04 - see the background color is now updated
412:06 - to aqua color over here so guys in this
412:09 - way we can easily use the sibling
412:11 - combinator selector in order to select
412:13 - the next sibling as far as the CSS
412:16 - selector is concerned now guys apart
412:17 - from this let us create another
412:19 - paragraph with the title equal to para
412:22 - and make the font weight as bold by
412:24 - using the attribute selector over here
412:27 - so guys let us move to the HTML file in
412:29 - this case and then let us have another
412:32 - paragraph for which we need to have the
412:34 - title attribute over here which should
412:36 - be equal to par in this case and then
412:39 - let us say we have this is another
412:42 - paragraph with title attribute so guys
412:45 - basically we have a very simple
412:46 - statement that is this is another
412:48 - paragraph with title attribute over here
412:51 - let me just save this file now and try
412:53 - reloading this page once again on the
412:54 - browser so as you can see this is
412:56 - another paragraph with title attribute
412:58 - so what we have to do is we need to make
413:01 - the font weight as bold by using the
413:03 - attribute selector in this case so guys
413:05 - how do we use the attribute selector
413:08 - that is title over here so simply we can
413:10 - use the P tag inside the CSS file so let
413:13 - me show you that we have used the P tag
413:16 - previously and then inside the open and
413:18 - close square brackets we need to provide
413:21 - the attribute that is title so guys this
413:23 - is another way in order to select the
413:26 - HTML Elements by using the attribute
413:29 - selector by providing the attribute
413:31 - inside the square square brackets over
413:33 - here and then followed by open and close
413:35 - curly braces simply we can have the font
413:38 - weight in this case and simply we can
413:40 - see a value as bold over here so guys
413:42 - basically it is going to identify that
413:45 - paragraph which is having the title
413:47 - attribute over here so far we have
413:49 - created the other two paragraphs with
413:51 - only the ID attributes but not the title
413:54 - attribute but since this third paragraph
413:56 - is having the title attribute the CSS
413:59 - property that is font weight equal to
414:01 - bold will be implemented on this third
414:03 - paragraph that is having the title
414:05 - attribute over here so guys let me just
414:07 - save the CSS file in this case and let
414:09 - me just reload this page once again on
414:11 - the browser so as you can see font
414:13 - weight equal to bolt is now getting
414:15 - implemented over here and the text is
414:18 - appearing as bold text over here on the
414:20 - web browser guys apart from this we can
414:22 - also increase the font size over here so
414:25 - inside the same CSS selector that is by
414:27 - using the attribute selector we can have
414:30 - the font size as 30 pixels in this case
414:33 - so let's say we provide the value as 30
414:36 - pixels let me just save this file now
414:37 - and try reloading this page so as you
414:39 - can see the font size is increased to 30
414:42 - pixels over here so guys in this way we
414:44 - can also use the attribute selector we
414:47 - can provide the value of the attribute
414:49 - as well so since we have used the value
414:51 - as para simply we can copy this value
414:54 - and paste this over here so we provide
414:56 - equal to operator followed by double
414:58 - codes and inside the double codes simply
415:00 - we can provide the para value for this
415:02 - particular title attribute let me just
415:04 - save this file now and try reloading
415:06 - this page there will be no change since
415:08 - we have already applied the CSS
415:10 - properties previously so let us provide
415:12 - another CSS property let us make this
415:15 - text as underline over here so what we
415:17 - can do is simply inside this particular
415:20 - P tag that is having the title attribute
415:22 - as para we are going to say text
415:24 - decoration in this case and then we are
415:26 - going to say underline s the value for
415:29 - this text decoration let me just save
415:31 - this file now and try reloading this
415:33 - page once again on the browser so as you
415:35 - can see we are getting the underline for
415:37 - this particular text inside this
415:39 - paragraph So guys in this way we can
415:41 - also use the attribute selector over
415:43 - here instead of using the tag or the ID
415:46 - or the class name as the selectors that
415:48 - we have seen previously so guys we have
415:50 - completed all the task in this
415:52 - particular exercise hopefully you have
415:54 - also completed all these task on your
415:56 - own so guys it is very important that
415:58 - you practice on your own so that you get
416:00 - a better understanding as far as as the
416:02 - CSS concepts are concerned comment in
416:05 - the comment section below whether you
416:06 - have learned something out of this video
416:08 - please make sure that you like this
416:09 - video so that it reaches to more people
416:11 - and subscribe to this channel so that
416:13 - you get the notifications on upcoming
416:15 - videos as well the next video that we
416:16 - are going to talk about is styling forms
416:19 - in CSS so stay
416:21 - tuned so now we will see styling forms
416:24 - in CSS so guys basically the look of an
416:27 - HTML form can be greatly improved with
416:30 - the help of CSS and this we are going to
416:32 - check with the help of example and we
416:34 - are going to see how we can style the
416:36 - forms in CSS so let us move to the VSS
416:39 - code over here so simply inside this
416:41 - HTML file we are going to create a form
416:44 - so basically we are going to create a
416:46 - div tag with the class container over
416:49 - here and inside the St tag let us create
416:51 - a form in this case so guys basically we
416:54 - are going to use the form tag over here
416:56 - and then inside this form let us have
416:59 - couple of text boxes over here so what
417:01 - we will do is simply we will have the
417:02 - input followed by colon and then we will
417:05 - have the text input so basically we are
417:07 - going to set the name attribute as first
417:09 - name and also the ID attribute as first
417:12 - name over here also for this input let
417:14 - us have the label so that the user can
417:17 - recognize what kind of input is expected
417:20 - inside this text box over here so guys
417:22 - basically we are going to have the label
417:24 - tag and for the four attribute we are
417:26 - going to paste the value of the name
417:28 - attribute over here inside the input
417:31 - that is the first name in in this case
417:32 - and then we are going to have the label
417:34 - that is first name and after the first
417:36 - name let us have the line break over
417:38 - here so that the input is displayed on
417:41 - the next line in this case and also we
417:43 - are going to have the placeholder over
417:45 - here so we are going to say your first
417:48 - name in this case so guys basically we
417:50 - have the placeholder that will be
417:52 - displayed in which case this particular
417:54 - text will be displayed inside the text
417:56 - box of the first name now guys after
417:58 - this let us have couple of line breaks
418:00 - over here so that we can have another
418:02 - text box for the last name input field
418:05 - so guys simply I'm going to copy these
418:07 - lines of code over here and we are going
418:09 - to replace this first name with last
418:12 - name over here so I'm simply going to
418:14 - copy this last name and paste it to the
418:16 - ID attribute and for the for attribute
418:18 - as well and over here we are going to
418:20 - say last name label and for the
418:22 - placeholder as well we are going to say
418:25 - your last name in this case so guys in
418:27 - this way we have provided two text boxes
418:30 - let me just save this file now and try
418:32 - Rel loading this page on the browser so
418:34 - as you can see we have the simple text
418:36 - boxes which is having first name and
418:38 - last name over here now guys let us have
418:40 - another input in this case and we are
418:42 - going to have the drop- down option for
418:44 - the third input so what we are going to
418:46 - do is we will use the select a tag over
418:49 - here since it will help us in order to
418:51 - have the drop- down options so what are
418:53 - the options that we are going to set
418:55 - over here so we are going to set the
418:56 - list of colors so guys basically I'm
418:58 - going to provide the name attribute as
419:01 - color over here and also we will paste
419:03 - the same value to the ID attribute as
419:05 - well and we are also going to have the
419:08 - label for the select tag and we will say
419:10 - select your favorite color so guys
419:13 - basically you are going to select the
419:15 - favorite color over here so guys for the
419:17 - four attribute we will say color as the
419:19 - value and the text that we are going to
419:21 - display for this label will be select
419:24 - your favorite color so guys basically
419:26 - the user will be allowed to select the
419:28 - favorite color from the list of options
419:31 - now guys what are the options that we
419:32 - are going to provide simply we are going
419:34 - to use the option tag over here and we
419:36 - are going to have some colors over here
419:38 - so basically we will have the first
419:40 - color as blue and let me just copy this
419:42 - line of code multiple number of times
419:44 - and let us say we have the other colors
419:46 - as yellow green and red so guys as you
419:49 - can see we have different options over
419:51 - here for the color selection we have
419:53 - blue yellow green and red colors now
419:56 - guys apart from this let us have the
419:57 - submit Button as well after the select
420:00 - tag so simply we are going to have
420:02 - couple of line braks over here and then
420:04 - after this we are going to have the
420:06 - input with the type submit so guys
420:08 - basically we are going to say input
420:10 - colon submit in this case which is the
420:12 - Mt abbreviation and simply we are going
420:14 - to say value as submit in this case guys
420:17 - after this label we are going to have
420:19 - the line break so that the list of
420:21 - options are displayed on the next line
420:23 - over here so guys as you can see we have
420:25 - these lines of code inside our HTML form
420:28 - let me just save this file now and try
420:30 - reloading this page once again on the
420:32 - browser so this is how the form will
420:34 - look like on the browser without any CSS
420:37 - properties so guys this is a very simple
420:39 - form it is not looking that attractive
420:42 - but with the help of the CSS properties
420:44 - that we are going to see now we are
420:46 - going to make this form little bit
420:48 - attractive with certain background
420:49 - colors and the borders as well so that
420:52 - you can include it in your project and
420:54 - based on your project requirements you
420:55 - can apply the different CSS properties
420:58 - so guys what we will do is inside the
421:00 - style. CSS file that is attached to this
421:02 - particular HTML file over here first of
421:05 - all we will style this particular
421:07 - container div tag over here so simply
421:09 - I'm going to copy this class name and
421:11 - inside the style. CSS file first of all
421:14 - we will use the dot character followed
421:16 - by the container and let's say we have
421:18 - certain background color for this D tag
421:20 - so guys basically we are going to have
421:22 - the background color for this entire
421:24 - form over here so let us say we have the
421:27 - background color as this particular
421:29 - color which is Alli blue over here and
421:31 - and then guys let us also have some
421:33 - Border in this case so basically we are
421:35 - going to set the Border as two pixels of
421:38 - the solid type and let's say the color
421:40 - is gray color for the Border let me just
421:43 - save this file now and try reloading
421:45 - this page once again on the browser so
421:47 - as you can see we have set the
421:49 - background color and the border for this
421:51 - particular container now guys let us
421:53 - have certain space on the left and top
421:55 - of these particular labels which is
421:57 - inside the form so that they can be
421:59 - placed a little bit away from the border
422:01 - of this particular container so let us
422:03 - provide the padding of let's say 20
422:05 - pixels in this case and apart from this
422:08 - let us have certain border radius as
422:10 - well for this container so we will
422:12 - provide the Border radius of 5 pixels in
422:15 - this case let me just save this file now
422:17 - and try reloading this page once again
422:19 - on the browser so as you can see we have
422:21 - provided the padding which will help us
422:23 - in order to provide the spacing between
422:25 - the labels and the border of this
422:27 - particular container and apart from this
422:29 - we also have the Border radius now guys
422:32 - let us decrease the width of this
422:34 - particular container since it is taking
422:35 - the entire width of the screen so let us
422:38 - set the width to 30% of this particular
422:41 - screen width so over here simply we are
422:43 - going to save width as 30% let me just
422:46 - save this file now Ander try reloading
422:48 - this page once again on the browser so
422:50 - as you can see we have set the width of
422:52 - this particular container is 30% and
422:54 - also let us get this diff container at
422:57 - the middle of the screen so what we can
422:59 - do is simply we can set the margin as
423:01 - Auto over here now guys what is the use
423:04 - of this auto value for the margin
423:06 - property so basically from the left and
423:08 - right of this particular diff container
423:11 - the margin will be set in such a way
423:13 - that this entire box will be placed at
423:15 - the center of the screen over here which
423:17 - means the margin left and margin right
423:20 - will be equal so let me just save this
423:22 - file now and try reloading this page
423:24 - once again on the browser so as you can
423:26 - see we have CAU the form at the middle
423:28 - of the screen so in case in your project
423:30 - requirements if you want to Center the
423:32 - div element over here inside your HTML
423:35 - file so simply you can use the margin
423:37 - CSS property and provide the value as
423:40 - Auto so that the diff can be placed at
423:42 - the center of the screen now guys let us
423:44 - provide certain styling to the submit
423:46 - Button as well so what we will do is
423:48 - simply we are going to use the input tag
423:51 - and what we are going to do is we will
423:53 - use the attribute selector over here
423:55 - which is type equal to submit in this
423:57 - case so guys basically we have to use
423:59 - the square brackets and then inside the
424:01 - this we use the typ equal to and then
424:04 - inside the single codes or double codes
424:06 - we can use the value that is submit over
424:09 - here so guys basically we are using the
424:11 - attribute selector which will help us in
424:13 - order to select this particular button
424:15 - now guys what we will do is simply we
424:17 - are going to set the background color in
424:20 - this case so basically we are going to
424:22 - set the value of this background color
424:24 - as green color over here and apart from
424:26 - this let us set the color as well in
424:29 - this case and the value will be white
424:31 - over here so that it goes well with the
424:33 - background color of green now guys apart
424:35 - from this let us also set the padding of
424:37 - five pixels in this case so that the
424:39 - text can be easily displayed inside the
424:42 - button and apart from this lets also
424:44 - have the width of the button as 100%
424:46 - over here so that the button takes the
424:49 - entire space as far as the width of this
424:51 - particular diff container is concerned
424:53 - now guys let me just save this file now
424:55 - and try reloading this page once again
424:57 - on the browser so as you can see this is
424:59 - the button that is getting displayed
425:01 - over here let us remove this border that
425:03 - is already present by default and also
425:06 - set the pointer when we get the cursor
425:08 - over here on this submit button so guys
425:11 - what we will do is simply we are going
425:12 - to set the Border property as none in
425:15 - this case and also we will set the
425:17 - cursor over here as pointer so as you
425:20 - can see this is the cursor CSS property
425:22 - and simply we are going to set the value
425:24 - as pointer so let me just save this file
425:26 - now and try reloading this page once
425:28 - again on the browser so the B is removed
425:30 - now and when we get the cursor over here
425:32 - on this button the cursor is changed to
425:35 - the hand icon or pointer over here which
425:37 - is one of the good designs as far as
425:39 - HTML form is concerned now guys when we
425:42 - get the cursor over here on this button
425:44 - let us change the background color so
425:46 - what we can do is simply we are going to
425:48 - use this attribute selector so I'm going
425:50 - to copy this line of code over here and
425:52 - paste it and on H we are going to change
425:55 - the background color so we are going to
425:57 - use the codo class that is hover over
425:59 - here and then inside this we are going
426:02 - to change the background color of this
426:04 - button when the user gets the mouse on
426:06 - this particular button that is the
426:08 - submit button so guys what is the color
426:10 - that we are going to set so basically we
426:12 - are going to set some lighter version of
426:14 - this green color over here so simply we
426:16 - are going to change this green color to
426:18 - little bit light in this case so let us
426:21 - set this color over here so let me just
426:23 - save this file now and try reloading
426:25 - this page once again on the browser now
426:27 - if we get the cursor on the submit
426:29 - Button as you can see the back ground
426:31 - color is updated now so guys whenever
426:34 - user wants to click on the submit button
426:36 - the background color of the submit
426:37 - button will be changed and this is one
426:39 - of the good designs as far as HTML forms
426:41 - are concerned now guys apart from this
426:43 - what we will do is let us also increase
426:46 - the width of these text boxes and the
426:48 - drop- down option in such a way that it
426:50 - takes the entire width of the container
426:53 - over here so what we can do is simply we
426:55 - are again going to use the attribute
426:57 - selector in this case so we will say
426:59 - input and this time we will say type it
427:01 - is equal to text this time because both
427:04 - the input tags over here are having the
427:06 - type equal to text in this case so we
427:08 - are going to say type is equal to text
427:11 - and then apart from this we are also
427:13 - going to provide the same CSS property
427:15 - to this select tag as well so guys we
427:17 - are going to provide comma over here and
427:20 - then we are going to provide the select
427:22 - tag so guys in this way if you want to
427:24 - provide the same CSS properties to
427:26 - multiple HTML elements you can separate
427:29 - them with the help of the comma over
427:31 - here here before providing the CSS
427:33 - properties guys what we will do is
427:35 - simply we are going to say with it is
427:37 - equal to 100% in this case let me just
427:39 - save this file now and try reloading
427:41 - this page once again on the browser so
427:43 - as you can see the width of both the
427:45 - text boxes and the select drop down
427:48 - options is updated to the 100% withd of
427:51 - the div container over here apart from
427:53 - this let us also have the Border box in
427:56 - this case so guys basically we are going
427:57 - to have the box sizing CSS property and
428:00 - then we will set the value as border box
428:03 - in this case let me just save this file
428:04 - now this will help us in order to set
428:06 - the width of these two text boxes get
428:09 - aligned with the drop down option and
428:11 - the submit option over here so guys let
428:13 - me just reload this page once again in
428:15 - this case so as you can see the right
428:17 - hand side of both these text boxes are
428:19 - now aligned with the drop- down option
428:21 - and the submit Button as well so guys in
428:24 - this way you can use your own CSS
428:26 - properties just like how we have used
428:28 - over here in order to style our HTML
428:30 - form apart from this you can also have
428:32 - the H2 header over here before the div
428:35 - container so guys basically we are going
428:37 - to have the H2 header and then we will
428:39 - say below is the form to be filled so
428:43 - guys basically this is the header that
428:45 - will help the user to submit the form in
428:48 - this case now as far as submitting this
428:50 - form is concerned it will be the part of
428:52 - the JavaScript tutorial which we will be
428:54 - covering in the upcoming videos so
428:56 - comment in the comment section below
428:58 - whether you have learned something out
428:59 - of this video please make sure that you
429:01 - like this video so that it reaches to
429:02 - more people and subscribe to this
429:04 - channel so that you get the
429:05 - notifications on upcoming videos as well
429:08 - the next video that we are going to talk
429:09 - about is counters in CSS for automatic
429:12 - numbering so stay tuned so now we will
429:15 - see counters in CSS for automatic
429:18 - numbering so guys basically CSS counters
429:21 - are variables which are maintained by
429:24 - CSS whose values can be incremented by
429:27 - CSS rules to track how many times they
429:30 - are used and guys this we are going to
429:31 - check with the help of examples as well
429:33 - so counters let you adjust the
429:36 - appearance of content based on its
429:38 - placement in the document so guys
429:40 - basically we are going to have certain
429:42 - list of values for which we are not
429:44 - going to have the numbers inside our
429:46 - HTML code but we will be using certain
429:49 - CSS rules in order to number those list
429:52 - of items so guys let us move to the VSS
429:54 - code in order to check the example of
429:56 - counters in CSS over here so simply I'm
429:59 - going to remove the previous lines of
430:01 - code code from the HTML and the CSS
430:03 - files that we have written now guys
430:05 - inside our HTML file what we are going
430:07 - to do is first of all we are going to
430:09 - have the hedge1 tag over here and we
430:11 - will say below are Su of the programming
430:15 - languages so guys basically we have this
430:17 - particular header that is below are some
430:20 - of the programming languages and let us
430:22 - have certain programming languages
430:23 - inside the h2 tag over here so guys
430:26 - basically inside the h2 tag we will have
430:29 - certain programming languages so let's
430:31 - say we have the first programming
430:33 - language as Java and then let's say we
430:35 - have python as the second programming
430:37 - language and then we have C++ and then
430:40 - let's say we have C over here so guys
430:42 - basically we have these four programming
430:44 - languages inside the h2 tag let me just
430:47 - save this file now and try reloading
430:49 - this page on the browser so guys as you
430:51 - can see we have the H1 tag and Then
430:53 - followed by the H2 tags which are having
430:56 - the name of the programming languages
430:58 - over here now guys let us say we want to
431:00 - number all these programming languages
431:02 - in such a way that the first language is
431:04 - Java and then the second language in the
431:06 - list is Python and then we have third
431:08 - language as C++ and fourth language is C
431:11 - so the first option is to use the
431:13 - numbers inside the HTML code over here
431:16 - but guys we don't want to use that so
431:18 - the other option is to use the CSS
431:20 - counters over here now guys how do we
431:22 - use the CSS counter let us check that so
431:25 - inside our style. CSS file which is
431:28 - attached to this HTML file over here
431:30 - with the help of the the link tag what
431:32 - we will do is first of all we will
431:34 - Define the body tag in this case and
431:36 - then we have the CSS property which is
431:39 - counter reset in this case so guys
431:42 - basically we use the counter reset CSS
431:45 - property in order to Define a variable
431:47 - so guys let us say we provide the name
431:49 - of the variable as number so guys
431:51 - basically this variable we are going to
431:54 - use in order to provide the numbers to
431:57 - all these programming languages that we
431:59 - have displayed on the UI so guys what we
432:01 - are going to do is after this we have to
432:04 - provide the tag before which we want to
432:07 - provide the number so guys basically
432:09 - what tag we have used over here in order
432:11 - to display the programming languages we
432:13 - have used the h2 tag over here so guys
432:16 - basically we will use the h2 tag and
432:18 - then we have to use the codo element
432:21 - that is before so guys 2 * colon we have
432:24 - to use followed by the before keyword in
432:27 - this case so guys basically the meaning
432:29 - of this is whatever content we provide
432:32 - inside the curly braces for this
432:34 - particular selector that content will be
432:37 - displayed over here before the content
432:39 - of the h2 tag in this case so guys what
432:42 - we have to do is inside this particular
432:44 - h2 tag for which we have the sudo
432:46 - element that is before we have to use
432:48 - the counter increment CSS property so
432:51 - guys basically we use this counter
432:53 - increment CSS property and we use the
432:56 - same variable that is number over here
432:58 - so simply we are going to set the
433:00 - variable that is is number and then guys
433:02 - after this we have to use the content in
433:05 - this case so this is the CSS property
433:07 - that we will be using which is content
433:09 - over here which will set this particular
433:12 - number before the h2 tag which is
433:14 - displaying these programming languages
433:16 - so guys over here inside the content we
433:19 - will be using the function that is
433:20 - counter in this case so guys basically
433:23 - this counter is a function which will
433:25 - take one parameter and we are going to
433:27 - pass this number as the parameter over
433:29 - here so guys this is theun function that
433:31 - is counter and instead of this name we
433:33 - are going to provide number over here so
433:36 - guys basically what will happen is
433:38 - automatically the number will start from
433:40 - one and then for the second programming
433:42 - language two will be displayed and then
433:44 - we have three and then four so guys
433:46 - after providing the number we also have
433:49 - to provide certain space or the dot
433:51 - character as well so after this counter
433:53 - function we provide the space character
433:56 - followed by double codes and let's say
433:57 - we provide a DOT character and Then
433:59 - followed by space so guys after this
434:02 - space the name of the programming
434:03 - languages will be displayed over here as
434:06 - we can see in this particular web
434:08 - browser right now so guys let me just
434:10 - save this file now and try reloading
434:12 - this page once again on the browser so
434:14 - as you can see the counters are helping
434:16 - us in order to provide the numbers to
434:19 - all these programming languages and this
434:21 - is how you can provide the counters in
434:23 - the CSS in order to provide the numbers
434:26 - to the list of items based on your
434:28 - project requirements guys you can also
434:30 - change change the format over here after
434:32 - the number so let's say instead of the
434:34 - dot character we can also provide hyphen
434:36 - over here so instead of the dot
434:38 - character in this case that us have a
434:40 - space character followed by hyphen and
434:42 - then the space character again so let me
434:44 - just save this file now and try
434:46 - reloading this page once again on the
434:48 - browser so as you can see we have the
434:50 - hyphen character in this case instead of
434:52 - the dot character apart from this we can
434:54 - also provide this number in the square
434:56 - brackets as well so let us remove these
434:59 - formatting over here and let's say we
435:01 - provide the open square bracket first of
435:03 - all so simply inside the double codes we
435:05 - provide the open square brackets and
435:08 - then after this we have the space
435:09 - character and then we will be having the
435:11 - number and then let's say we have the
435:13 - square bracket over here which is ending
435:15 - so we have the closing square bracket in
435:17 - this case and then let's say followed by
435:19 - the space character after which the
435:21 - programming language should be displayed
435:23 - in this case so let me just save this
435:25 - file now and try reloading this page
435:27 - once again on the browser so as you can
435:29 - see these are the numbers that are
435:31 - getting displayed over here so guys
435:32 - based on your project requirements and
435:34 - the format in which you want to display
435:37 - the numbers you can display them by
435:39 - using this counter method and providing
435:41 - the variable name that you have provided
435:44 - inside the counter reset now guys apart
435:46 - from this we can also have the nested
435:49 - counter so let us check the example of
435:51 - the nested counters in CSS so what we
435:54 - will do is let's say inside this h2 tag
435:57 - we have certain paragraph tags over here
435:59 - so simply we will say p tag and then we
436:01 - will say this is some test data so guys
436:05 - basically inside each programming
436:07 - language we will have certain pointers
436:09 - to be displayed and for testing purpose
436:11 - we are simply providing this test data
436:13 - over here so let's say we have these two
436:16 - paragraph over here inside the Java
436:18 - programming language and then let's say
436:20 - we have these three paragraphs inside
436:22 - the Python programming language and
436:24 - apart from this let us say we have one
436:26 - paragraph inside C++ language and two
436:29 - paragraphs over here inside the C
436:31 - language Let me just save this file now
436:34 - and try reloading this page once again
436:36 - on the browser so as you can see we have
436:38 - certain pointers over here after each
436:41 - programming languages now guys we also
436:44 - want to number these pointers inside the
436:47 - programming languages so what we have to
436:49 - do is we need to provide another counter
436:51 - variable so guys inside the style. CSS
436:54 - first of all after the body tag what we
436:57 - will do is we want to provide the
436:59 - numbers inside the these programming
437:01 - languages which are defined by using the
437:04 - h2 tag over here so simply we have to
437:07 - use the h2 tag in this case and we can
437:10 - provide the variable by using the
437:12 - counter reset and this time instead of
437:15 - providing the variable name as number we
437:17 - will say sub number over here so guys
437:19 - basically it is going to be a number
437:21 - like 1.1 or 1.2 in this case and so on
437:25 - so guys basically we use the counter
437:28 - reset CSS property once again and we
437:30 - provide the variable name as sub number
437:33 - over here and then guys what we have to
437:34 - do is we need to use the P tag followed
437:37 - by the pseudo element that is before
437:39 - that's because we are using the
437:41 - paragraph tag over here and before the
437:43 - content of this paragraph tag we want to
437:46 - display the number over here so simply
437:48 - we use the pag followed by 2 * colon and
437:52 - then we will use the before sudo element
437:54 - and then guys what we have to do is
437:56 - again we have to use the counter
437:58 - increment CSS property and this time we
438:01 - will be using this sub number variable
438:04 - so let me just copy this and paste this
438:06 - over here for the counter increment CSS
438:08 - property and then after this we have to
438:11 - use the content CSS property so guys
438:14 - over here first of all we will have to
438:16 - use the number variable so that this
438:19 - particular number that is one can be
438:20 - displayed followed by Dot and the sub
438:23 - number should be displayed after that so
438:25 - basically we use the counter function
438:27 - once again over here so we say counter
438:30 - and then in instead of name we will be
438:31 - using the number and then guys after
438:34 - this we want the dot character so let's
438:36 - say we provide dot character over here
438:38 - followed by space and this time we will
438:40 - be using the counter function once again
438:43 - and over here instead of name we will be
438:45 - using sub number this time because that
438:47 - is the counter that we want to display
438:49 - for all the sub points inside the
438:52 - programming languages that we are
438:53 - displaying on the web browser so guys
438:55 - this is the sub number that we are using
438:58 - so basically this is the format the
439:00 - first number that that is one will be
439:01 - displayed followed by Dot and the sub
439:03 - number that is one will be displayed so
439:05 - 1.1 will be displayed for this
439:07 - particular point over here followed by
439:09 - 1.2 for this particular point over here
439:12 - and then guys for the Python programming
439:14 - language 2.1 will be displayed followed
439:16 - by 2.1 and Then followed by 2.2 and Then
439:20 - followed by 2.3 so guys let me just save
439:23 - this file now and try reloading this
439:25 - page once again on the browser so as you
439:27 - can see we have the numbers that is 1.1
439:29 - then 1. 2 and then for the points inside
439:32 - the Python programming language we have
439:34 - 2.1 2.2 2.3 and so on so guys over here
439:38 - we have missed out the space to be
439:40 - provided over here so simply we can
439:42 - provide the space character inside the
439:44 - double codes in this case let me just
439:46 - save this file now and try reloading
439:48 - this page once again on the browser so
439:50 - as you can see the space characters are
439:52 - now getting displayed over here so for
439:54 - the C++ programming language we have 3.1
439:57 - as the pointer and then for the fourth
439:59 - language that is C we have 4.1 and Then
440:02 - followed by 4.2 over here so guys in
440:04 - this way you can provide the auto
440:06 - numbering with the help of the counter
440:08 - method over here inside the CSS file in
440:11 - this case so guys comment in the comment
440:13 - section below whether you have learned
440:14 - something out of this video please make
440:16 - sure that you like this video so that it
440:18 - reaches to more people and subscribe to
440:20 - this channel so that you get the
440:21 - notifications on upcoming videos as well
440:23 - the next video that we are going to talk
440:25 - about is the length units in CSS so stay
440:29 - tuned so now now we will see length
440:31 - units in CSS so guys basically CSS has
440:35 - several different units for expressing a
440:38 - length and many CSS properties take
440:40 - length values such as width margin
440:43 - padding font size Etc and this we are
440:46 - going to check with the help of examples
440:48 - as well that what are the different
440:50 - units that we can provide to all these
440:53 - CSS properties over here now guys length
440:56 - is a number followed by a length unit
440:59 - such as 10 pixels over here so when we
441:01 - say 10 pixels 10 is the length and pixel
441:05 - is one of the length units inside the
441:08 - CSS apart from this we also have 2 em
441:11 - over here where two is the length and EM
441:14 - is the length unit that we are going to
441:16 - check the that we are going to check
441:18 - with examples as well so guys let us see
441:20 - what are the different absolute lenss
441:22 - over here so basically the absolute
441:24 - length units are fixed and the length
441:27 - expressed in any of these will appear
441:30 - has exactly that size over here on the
441:33 - screen that you are viewing your web
441:35 - page so guys let us see how this CM that
441:38 - is CM will work so let us move to the vs
441:41 - code over here and simply I'm going to
441:43 - remove the previous lines of code that
441:45 - we had written in the HTML and the CSS
441:48 - files now guys what we will do is simply
441:50 - we are going to have the paragraph tag
441:52 - over here and then we will say this font
441:56 - size is in cm so guys basically we have
442:00 - the state statement that is this font
442:01 - size is in cm over here and then guys
442:04 - what we will do is we are going to have
442:06 - the class for this particular paragraph
442:08 - and simply we are going to say cm in
442:11 - this case which represents the CM length
442:14 - over here let me just save this file now
442:16 - and try reloading this page on the
442:18 - browser so as you can see we have a very
442:20 - simple statement that is this font size
442:22 - is in cm now guys we have not provided
442:25 - any font size in this case inside our
442:27 - style. CSS file so by default if if you
442:30 - see the font size of this particular
442:33 - paragraph text will be 16 pixels over
442:35 - here so most of the browsers provide the
442:38 - font size of 16 pixels for all the text
442:41 - that are displayed on the web page so
442:43 - guys let me just inspect this particular
442:45 - paragraph tag so as you can see if we
442:48 - scroll down so we cannot see any of the
442:50 - CSS properties for this paragraph tag
442:53 - apart from these default CSS properties
442:55 - over here so guys what we will do is
442:57 - inside our style. CSS file in this case
443:00 - simply we are going to say dot followed
443:02 - by CM that is the class name for this
443:04 - particular paragraph tag and then we
443:06 - will say font size it is equal to let's
443:09 - say we have 16 pixels in this case so
443:12 - guys for test purpose we are going to
443:13 - see whether the font size is going to
443:15 - change or not so let me just save this
443:17 - file now and try reloading this page
443:19 - once again on the browser so as you can
443:21 - see the font size is not updated for
443:23 - this particular paragraph tag and the
443:25 - font size of 16 pixels is now getting
443:28 - reflected under this inspect option guys
443:31 - you can also change the font size from
443:33 - here so basically you can see that this
443:35 - is 16 pixels in this case you can simply
443:37 - provide 20 pixels over here and simply
443:40 - the font size is going to be updated in
443:42 - this case you can also provide 22 pixels
443:45 - or any of the size over here now guys
443:47 - the important thing is we are supposed
443:48 - to provide the font size in cenm so what
443:51 - we have to do is instead of pixels over
443:53 - here let's say we provide the font size
443:55 - as 5 cm that is CM over here in this
443:58 - case so guys let me just sa this file
444:00 - now and try reloading this page once
444:02 - again on the browser so as you can see
444:04 - this is a very big font size over here
444:06 - so let me just change the length in this
444:09 - case so let's say we provide 0.5 CM over
444:12 - here let me just save this file now and
444:14 - try reloading this page so as you can
444:16 - see this font size is in cm and you can
444:19 - see that the CM class is having the font
444:21 - size as 0.5 CM let us increase the font
444:25 - size to 0.8 cm over here let me just
444:28 - save this file now and try reloading
444:30 - this page so as you can see this font
444:32 - size is in cm and the size has increased
444:35 - to 0.8 cm over here so guys in this way
444:38 - this is one of the absolute length that
444:40 - you can use based on your project
444:42 - requirements now guys apart from this
444:44 - you can also provide the length in
444:46 - millim so let us have another paragraph
444:48 - over here so simply I'm going to copy
444:50 - this line of code over here and then
444:52 - instead of CM we are going to have
444:54 - millimet that is MM in this case is the
444:57 - class name and then we will say this
444:59 - font size is in m mm over here guys let
445:01 - me just save this file now and inside
445:03 - the style. CSS file once again we are
445:06 - going to have the mm class name over
445:08 - here so simply we will have mm in this
445:11 - case and for the font size let's say we
445:13 - have 5 mm over here so guys 5 mm is
445:16 - nothing but it is 0.5 CM so let me just
445:19 - save this file now and try reloading
445:21 - this page once again on the browser so
445:23 - as you can see this font size is an mm
445:26 - and if we inspect this particular
445:27 - paragraph over here it says 5 mm in this
445:30 - case now guys let us update this
445:32 - particular font size to 8 mm which means
445:35 - it will be equal to 0.8 cm so when we
445:38 - say 8 mm so in this case both the
445:41 - paragraph that is having the class that
445:42 - is CM and the mm will have the same font
445:45 - size because 0.8 cm is same as 8 mm over
445:50 - here let me just save this file now and
445:52 - try reloading this page once again on
445:54 - the browser so as you can see the font
445:56 - size of both the paragraph is now
445:58 - looking same and this is how you can use
446:00 - the millim length unit as well now guys
446:03 - apart from this we also have something
446:04 - called as inches so basically 1 in it is
446:07 - equal to 96 pixels over here which is
446:09 - equal to 2.54 CM so guys let us check
446:13 - this as well so basically I'm going to
446:15 - copy this line of code over here and
446:17 - simply we are going to have the class
446:19 - name as in in which is inches in this
446:21 - case and then let us say we have this
446:24 - text test this font size is in inches
446:26 - let me just save this file now and over
446:28 - here we are going to copy this line of
446:30 - code for the class inches and let us
446:33 - change this class name to ion in this
446:35 - case and let us have some unit in terms
446:38 - of inches over here now guys what is 1
446:40 - in it is equal to 96 pixels but it will
446:43 - be a very big font size so let's say we
446:46 - want 0.2 in in this case which will be
446:49 - approximately 19 pixels over here so
446:51 - guys let us have 0.2 in in this case so
446:55 - ion is the unit that you can use when
446:57 - you want to provide the font size in
446:59 - terms of inches so guys let me just save
447:02 - this file now and try reloading this
447:03 - page once again on the browser so as you
447:06 - can see this font size is in inches and
447:08 - it is 0.2 in right now so when we
447:11 - inspect over here it says it is 0.2 in
447:14 - and if we calculate how many in it will
447:17 - be so we multiply 96 pixels by 0.2 in
447:21 - over here so basically it is 19.2 pixels
447:24 - in this case so guys if we provide 19.2
447:27 - pixels as the size over here that is the
447:29 - font size for this paragraph there will
447:31 - be no change in this case so when we
447:33 - provide 19.2 pixels let me just save
447:35 - this file now and try reloading this
447:37 - page you will notice that there will be
447:39 - no change for the font size of this
447:41 - particular paragraph tag over here so
447:43 - when we reload so as you can see there
447:45 - is no change in this particular
447:47 - paragraphs font size and it is set in
447:50 - terms of pixels over here so guys
447:52 - basically this is the conversion that
447:53 - you can use that is 1 in it is equal to
447:56 - 96 pixels based on your project
447:58 - requirements and then guys apart from
447:59 - this we can also use the pixels unit
448:02 - which we were using till now so
448:04 - basically let us use that as well so
448:06 - over here what we will do is we will
448:07 - roll back this change to 0.2 in in this
448:10 - case and then guys apart from this let
448:12 - us have another paragraph over here in
448:15 - which case the class will be PX which
448:17 - represents the pixels length in this
448:19 - case so basically we are going to say
448:21 - the font size is in pixels for this
448:24 - paragraph so let me just save this file
448:26 - now and over here inside the style. CSS
448:28 - file let us have the entry for the
448:31 - pixels class so we have PX in this case
448:34 - and let's say we have the 24 pixel size
448:37 - for this particular font size over here
448:39 - so guys let me just save this file now
448:41 - and try reloading this page once again
448:43 - on the browser so as you can see this
448:45 - font size is in pixels over here and
448:47 - then when we inspect this particular
448:49 - paragraph you can see that we have the
448:51 - 24 pixels font size we can increase or
448:53 - decrease this font size so let us say we
448:56 - provide the 28 pixels and you can see
448:58 - that the size of this particular
449:00 - paragraph is increased now so guys in
449:02 - this way you can use the pixels length
449:04 - unit as well and apart from this we also
449:06 - have the PT which represents the point's
449:09 - length over here and then we also have
449:11 - PC which is P's length over here now one
449:14 - point it is equal to 1 by 72 of 1 in and
449:18 - 1 PC is equal to 12 points over here so
449:21 - guys both these length units I leave up
449:23 - to you as a homework for you so that you
449:25 - can practice on your own on different
449:27 - HTML elements and understand it in a
449:29 - more clear way now guys apart from this
449:32 - we also have certain relative lens as
449:34 - well so far we have seen what are the
449:36 - absolute lens which means these numbers
449:38 - will be directly applied to those HTML
449:41 - elements now guys what is the meaning of
449:43 - relative lens over here so basically the
449:45 - relative length units specify a length
449:48 - relative to another length property and
449:51 - the relative length units scale better
449:53 - between different rendering mediums so
449:56 - guys let us check this with the help of
449:57 - examples now the first relative length
450:00 - the unit is em over here now guys it is
450:02 - relative to the font size of the element
450:05 - and 2 em means 2 * the size of the
450:08 - current font over here so guys let us
450:10 - check this with the help of example in
450:11 - VSS code so what we are going to do is
450:14 - let us copy this line of code over here
450:17 - and simply what we are going to do is
450:19 - for this paragraph We are going to say
450:20 - the class name is em and then we will
450:23 - say this font size is in EM over here
450:26 - now guys as we know the default font
450:28 - size for almost all the browsers is 16
450:31 - pixels over here so when we say 1 em it
450:34 - will be equal to 16 pixels so let us
450:37 - check that as well let me just save this
450:39 - HTML file and move to the CSS file over
450:42 - here and simply we are going to have the
450:44 - entry for the class name that is em so
450:46 - we have do em in this case and then guys
450:49 - for the font what we will do is we will
450:51 - set it as 1 em in this case let me just
450:54 - save this file now and try reloading
450:56 - this page once again on the browser so
450:58 - as you can see this font size is is in
451:00 - EM now guys if we inspect this
451:02 - particular option over here when we
451:04 - inspect this particular paragraph you
451:06 - can see that the font size is equal to 1
451:08 - em over here so when we uncheck this as
451:11 - you can see the font size is not
451:13 - changing that's because the default font
451:15 - size for this particular browser is 16
451:18 - pixels and that is what is getting
451:20 - applied over here when we uncheck this
451:22 - option and when we check this option it
451:24 - is set to 1 em and 1 em is also equal to
451:28 - 16 pixels so guys what we we do is let's
451:30 - say we want to change it to 2 em over
451:33 - here so what will happen so since 1 em
451:36 - is 16 pixels 2 * em will be equal to 32
451:39 - pixels which can be calculated by 2 * by
451:43 - 16 so guys over here the font size will
451:45 - be increased to 32 pixels in this case
451:48 - so let me just save this file now and
451:50 - try reloading this page once again on
451:52 - the browser so as you can see this is
451:54 - equal to 32 pixels right now when we
451:56 - uncheck this option it will go back to
451:58 - 16 pixels 1 once again because we have
452:01 - not provided any font size but when we
452:03 - provide the font size of 2 em so it will
452:05 - change to 32 pixels and guys over here
452:08 - the decimal numbers also work so let's
452:10 - say we want to provide 1.5 em in this
452:13 - case so instead of 2 em let's say we
452:15 - provide 1.5 em over here let me just
452:18 - save this file now and try reloading
452:20 - this page once again on the browser so
452:22 - now the font size is equal to 24 pixels
452:25 - which is equal to 1.5 em over here so
452:28 - guys in this way you can use the em
452:30 - length unit which is a relative length
452:32 - unit in this case where 1 em is equal to
452:35 - 16 pixels of the font size now guys
452:38 - apart from this we also have something
452:40 - called as RM which is relative to the
452:43 - font size of the root element so guys
452:45 - what is the meaning of root element so
452:47 - over here for the HTML document we have
452:50 - the root tag as the HTML tag over here
452:53 - which is this particular tag so guys
452:55 - whatever font size of this HTML tag is
452:58 - basically based on that font size the RM
453:01 - unit will work so let us check that as
453:04 - well so in this case we are going to
453:06 - have the paragraph tag with the class
453:08 - name that is RM and then we will say
453:10 - this font size is in RM over here let me
453:13 - just save this file now and go to the
453:15 - style. CSS file in this case and then
453:17 - guys what we will do is we will also
453:19 - have the HTML tag in this case and
453:22 - inside this we are going to say font
453:24 - size and by default let's say we have
453:26 - the font size as 16 pixels so we are
453:28 - going to set the 16 pixels as the value
453:31 - for the font size inside the HTML tag
453:34 - now guys we will have the RM entry over
453:37 - here so basically we are going to have
453:39 - dot followed by the class name that is
453:41 - RM and let's say we have one RM as the
453:45 - length unit so guys basically for the
453:47 - paragraph which is having the class that
453:49 - is RM over here the font size will be
453:51 - equal to 1 RM which means it will be
453:54 - equal to 1 multiplied by the font size
453:57 - of the root element that is 16 pixels so
453:59 - so basically it will be equal to 16
454:01 - pixels in this case let me just save
454:03 - this file now and try reloading this
454:05 - page once again on the browser so as you
454:07 - can see the font size is an RM and
454:10 - basically this font size is 16 pixels
454:12 - over here and the moment we change this
454:14 - font size let's say to 20 pixels in this
454:17 - case for the root element which is HTML
454:20 - element over here the font size for this
454:22 - paragraph will also increase so guys let
454:25 - me just save this file now and try
454:27 - reloading this page once again on the
454:28 - browser no notice that the font size for
454:31 - this particular paragraph will increase
454:33 - now so when we reload this page as you
454:35 - can see the font size for this paragraph
454:38 - has increased over here so guys in this
454:40 - way you can use the RM unit over here
454:42 - apart from this you can also increase
454:44 - the RM unit so let's say we increase
454:47 - this unit to 1.5 over here let me just
454:50 - save this file now and this time it
454:52 - should be equal to 30 pixels because the
454:55 - HTML font size is 20 pixels right now so
454:58 - when we reload this page once again you
455:00 - will notice that this particular font
455:02 - size will increase so when we reload
455:04 - this page so as you can see the font
455:06 - size has now increased 2 30 pixels this
455:09 - time so guys in this way you can use the
455:10 - RM unit as well now guys apart from this
455:13 - we also have two more important relative
455:16 - units that is VW which is relative to 1%
455:19 - of the width of the viewport and VH
455:22 - which is relative to the 1% of the
455:25 - height of the viewport so guys over here
455:27 - W stands for width and H stands for for
455:29 - height and V is nothing but it is the
455:31 - viewport now guys what is viewport over
455:34 - here so basically viewport is nothing
455:36 - but the visible area that you can see on
455:38 - this particular browser so since we have
455:41 - opened console over here by using the
455:43 - F12 option on windows so basically this
455:46 - is the viewport you can see that we can
455:48 - increase or decrease the width of the
455:50 - viewport and the same number can be
455:52 - displayed over here that what is the
455:54 - width of this particular screen right
455:56 - now so when we increase the width to
455:58 - let's say this this is 688 pixels over
456:01 - here so right now you can see it is 688
456:04 - pixels so what we are going to do is let
456:06 - us create another paragraph tag in this
456:09 - case so guys over here what we will do
456:10 - is inside the HTML file we will have
456:13 - another paragraph tag over here and
456:15 - simply we are going to have the class
456:17 - name as VW and then we will say this
456:20 - width is in VW so guys we are going to
456:22 - set the width property over here for
456:24 - this particular paragraph So this width
456:27 - is in VW unit so guys let me just save
456:30 - this file now and inside the style. CSS
456:33 - file again we are going to have the
456:35 - entry for this VW class so guys over
456:38 - here we have dot followed by VW and this
456:41 - time let us have the background color
456:43 - for this paragraph tag so that we can
456:45 - identify that what is the width of this
456:48 - particular paragraph So guys over here
456:50 - we have the background color as yellow
456:52 - and then what we will do is we are going
456:54 - to set the width in this case so guys
456:56 - basically as we have seen that VW is
456:59 - nothing nothing but it is 1% of the
457:01 - width of the viewport so guys when we
457:03 - say 1 VW it is 1% but let's say we want
457:07 - the 50% of this particular view Port so
457:10 - basically it is 688 pixels of width that
457:13 - we have seen just now so what we can do
457:15 - is 50% of the VW unit will be equal to
457:19 - 344 pixels so the same withd we are
457:21 - going to set so guys basically we are
457:23 - going to set 50 length and then the unit
457:26 - that we are going to use is VW over here
457:29 - so let me just save this file now and
457:31 - try reloading this page once again on
457:33 - the browser so as you can see we have
457:35 - this paragraph which is having this
457:37 - width is in VW unit text over here and
457:40 - we have the background color as yellow
457:42 - and it is taking 50% of the width over
457:44 - here as far as this viewport is
457:46 - concerned guys what we are going to do
457:48 - is we will just comment out the previous
457:50 - paragraphs over here so that we can
457:53 - understand the VW and VH units more
457:55 - clearly so we have commented out the
457:57 - previous paragraphs over here let me
457:59 - just save this file now and try
458:01 - reloading this page so as you can see we
458:03 - are only seeing this particular
458:04 - paragraph over here now guys if we
458:06 - increase or decrease the width basically
458:09 - the width of this paragraph that is
458:11 - having the background color as yellow
458:13 - will also increase or decrease so when
458:15 - we decrease the width you can see that
458:17 - the width of the paragraph is also
458:19 - decreasing that's because the viewport
458:21 - width is decreasing over here and
458:23 - accordingly we are setting the 50% of
458:26 - this particular viewport as the width of
458:28 - the parag graph and that is why the
458:30 - width of the paragraph is also
458:32 - decreasing in this case and when we
458:34 - increase the width of the viewport the
458:36 - width of the paragraph is increasing
458:39 - over here and let's say we set it to 600
458:41 - pixels over here as the width so
458:43 - basically now the width of this
458:45 - paragraph is 300 pixels so guys let us
458:48 - check that as well so instead of having
458:50 - 50 VW let us comment out this line of
458:53 - code over here and we are going to set
458:55 - up withd once again and this time we are
458:57 - going to set up with as 300 pixel over
458:59 - here that's because the viewport width
459:02 - is 600 pixels let me just save this file
459:04 - now and try reloading this page once
459:06 - again on the browser you will notice
459:08 - that there will be no change right now
459:10 - over here so when we reload this page as
459:12 - you can see there is no change right now
459:14 - over here and when we remove this line
459:16 - of code let us comment out this line of
459:18 - code and let us uncomment the line of
459:21 - code having the viewport with that is
459:23 - the VW unit over here let me just save
459:25 - this file now it is same as 300 pixels
459:28 - so there will be no change so when we
459:30 - reload this page as you can see there is
459:32 - no change over here and now let us
459:34 - decrease the width of this particular
459:36 - paragraph so let us set it to 40 VW so
459:40 - let me just save this file now and try
459:41 - reloading this page once again on the
459:43 - browser so as you can see the width has
459:45 - been decreased now and based on the
459:48 - viewport over here it decrease or
459:50 - increase in this case now guys we can
459:52 - also see that the height is
459:55 - 4467 over here so what we can do is we
459:58 - can use another unit unit that is VH for
460:00 - the height so basically it will be
460:02 - approximately equal to 202 pixels if if
460:06 - we set the height as 50 VH in this case
460:09 - so guys let us move to the vs code over
460:11 - here and what we are going to do is
460:13 - simply for the same class that is VW
460:16 - over here we are going to set the height
460:19 - CSS property and this time we will use
460:21 - 50 VH which is the viewport height in
460:24 - this case so guys let me just save this
460:26 - file now and try reloading this page
460:28 - once again on the browser so as you can
460:30 - see this is the 50% height of the view
460:33 - Port that is getting displayed over here
460:35 - so let us increase and decrease the
460:37 - height of the browser to see how it will
460:39 - affect the height of the paragraph as
460:41 - well so you can see that the height is
460:43 - 300 pixels right now over here so when
460:46 - we decrease the height you can see that
460:48 - the background color of the paragraph is
460:50 - also decreasing so guys in this way we
460:52 - can set the viewport width and the
460:55 - viewport height based on the viewport of
460:58 - that particular device on which the user
461:00 - is viewing your web page so Guys these
461:02 - are some of the absolute and relative
461:05 - length units that we have seen and based
461:08 - on your project requirements you can use
461:10 - them to complete your task so guys
461:11 - comment in the comment section below
461:13 - whether you have learned something out
461:14 - of this video please make sure that you
461:16 - like this video so that it reaches to
461:18 - more people and subscribe to this
461:20 - channel so that you get the
461:21 - notifications on upcoming videos as well
461:23 - the next video that we are going to talk
461:24 - about is specificity and priority in CSS
461:28 - so stay Ted
461:30 - so now we will see specificity and
461:32 - priority in CSS so guys basically if
461:35 - there are two or more CSS rules that
461:38 - point to the same HTML element then the
461:41 - selector with the highest specificity
461:43 - value will win over here and it's style
461:46 - declaration will be applied to that HTML
461:49 - element now guys what is the meaning of
461:51 - specificity over here so basically let's
461:54 - say if you have identified a particular
461:56 - HTML element with the help of two or
461:59 - more CSS selectors over here then the
462:02 - CSS selector with the highest priority
462:04 - will be applied in this case and this is
462:07 - the priority list the very first
462:09 - selector that will be used is using the
462:11 - inline styles that you can use inside
462:14 - the HTML element and then after that the
462:17 - IDS will be used over here in the
462:20 - priority list and Then followed by the
462:22 - classes or the sudo classes and the
462:24 - attribute selectors and Then followed by
462:26 - the elements and the sudo elements over
462:28 - here here so guys let us check this with
462:30 - the help of examples in vs code in this
462:33 - case so let me just remove the previous
462:35 - lines of code that we had written in the
462:37 - HTML and the CSS files over here now
462:41 - guys what we will do is in the HTML file
462:43 - let us have the paragraph tag that is
462:46 - the P tag over here and simply we are
462:48 - going to say this is a paragraph tag so
462:51 - guys basically we have this very simple
462:53 - statement that is this is a paragraph
462:55 - tag so guys let me just save this file
462:57 - now and try reloading this p page on the
462:59 - browser so as you can see we have this
463:02 - is a paragraph tag text being displayed
463:04 - over here with the help of a P tag now
463:07 - guys what we will do is let's say we
463:09 - want to change the color of this text so
463:11 - what we can do is simply in the style.
463:13 - CSS file we can provide the P tag over
463:16 - here and then inside this P tag simply
463:19 - we can set the color as let's say we
463:21 - want to set the color as red color over
463:23 - here so guys let me just save this file
463:25 - now and try reloading this page once
463:28 - again on the browser so as you can see
463:30 - we have this is a paragraph tag now
463:32 - getting displayed with the red color so
463:34 - guys this is a very simple CSS property
463:37 - that we have applied now guys as far as
463:40 - priority is concerned the very first
463:42 - priority is given to the inline style
463:44 - that we can provide over here inside the
463:47 - paragraph tag in this case and Then
463:49 - followed by the style that we provide
463:51 - inside the style tag under the head
463:54 - section and then the style that is
463:56 - present and Then followed by the style
463:58 - that is present in the external files so
464:00 - guys let's say we provide the same
464:02 - paragraph tag over here inside the head
464:04 - section within the style tag so we are
464:06 - going to define the style tag over here
464:09 - and let's say we Define the paragraph
464:11 - tag in this case and we say that the
464:13 - color is blue this time so guys
464:15 - basically we are setting the color of
464:17 - the same text as blue over here so we
464:20 - have defined the color inside the
464:22 - external file as well but we are also
464:25 - defining the color inside the internal
464:27 - style as well over here under the head
464:30 - section so in this case what the color
464:32 - of the text will be set to let us check
464:34 - that as well so let me just save this
464:36 - file now and try reloading this page
464:38 - once again on the browser so as you can
464:40 - see the text of this paragraph is now
464:42 - getting displayed with the blue color
464:43 - over here that's because more priority
464:46 - is given to the internal styling over
464:48 - here when we provide the style tag under
464:50 - the head section in this case compared
464:52 - to the external styling that we have
464:54 - provided now guys more priority will be
464:57 - given to the inline styling that we will
464:59 - be providing over here inside the HTML
465:02 - tag so let us say inside the P tag in
465:04 - this case let us provide the style
465:06 - attribute in this case and then we are
465:08 - going to provide the color CSS property
465:11 - and then guys let's say we want to set
465:13 - the color as brown this time so guys
465:15 - when we set the color as brown let us
465:17 - see what will happen so let me just save
465:19 - this file now and try reloading this
465:21 - page once again on the browser so as you
465:23 - can see the text is now getting
465:25 - displayed with the brown color over here
465:27 - so guys basically this is the meaning of
465:29 - the inline Styles which is having the
465:31 - highest priority in this case and after
465:34 - the inline Styles the internal styling
465:36 - will be given the priority which is over
465:39 - here that is defined inside the head tag
465:41 - and Then followed by the external
465:43 - styling over here now guys apart from
465:45 - this we also have something called as
465:47 - IDs and the classes for the HTML
465:49 - elements that we use so what priority is
465:52 - given to such attributes so guys let us
465:54 - check that as well so simply we are
465:56 - going to remove the inline styling from
465:58 - here here and in this case we are going
466:01 - to provide the ID as well so let's say
466:03 - we provide the ID as par and also we are
466:06 - going to provide the class so let's say
466:08 - the value of class is class one over
466:10 - here so guys basically we have provided
466:12 - the ID attribute and the class attribute
466:14 - as well so simply over here inside the
466:17 - internal styling what we are going to do
466:19 - is let's say we provide the ID so
466:21 - basically we provide the hash character
466:23 - followed by the par that is the ID of
466:25 - this particular paragraph and then let's
466:27 - say we provide the color over here and
466:30 - this time let us take some other color
466:31 - over here so let's say we provide the
466:33 - color value as chocolate in this case so
466:36 - guys let me just save this file now and
466:38 - try reloading this page once again on
466:39 - the browser so as you can see the text
466:42 - color is getting displayed with the
466:44 - chocolate color over here now guys if we
466:46 - provide the class name as well so what
466:48 - will happen so let us provide the class
466:50 - name over here so let me just provide
466:52 - dot followed by the class name that is
466:54 - class one and then inside this let us
466:57 - provide the color attributes over here
466:59 - so guys let's say we provide the color
467:01 - as black this time so that the text can
467:03 - be displayed as black but notice that we
467:05 - have also provided the ID attribute over
467:08 - here as far as the color CSS property is
467:11 - concerned so let me just save this file
467:13 - now and try reloading this page once
467:15 - again on the browser so as you can see
467:17 - the text color is still set as the
467:19 - chocolate color over here that's because
467:21 - the ID CSS selector is given more
467:24 - priority compared to the class CSS
467:26 - selector over here so guys even though
467:28 - this particular class selector is
467:31 - mentioned after the ID selector still
467:33 - the ID selector will be implemented over
467:36 - here and that is how the priority will
467:38 - work as far as the ID and the classes
467:40 - are concerned so basically the very
467:42 - first priority will be given to the
467:44 - inline Styles over here and then
467:46 - followed by the IDS that you provide and
467:48 - Then followed by the classes hudo
467:50 - classes attribute selectors and Then
467:52 - followed by the elements and the pseudo
467:54 - elements now guys apart from this the
467:56 - internal styling that we provide over
467:58 - here in inside the head section will be
468:00 - given more priority compared to the
468:02 - external styling when we provide the CSS
468:05 - selectors over here but guys let us
468:07 - check one more scenario in this case so
468:09 - let us say we provide the class CSS
468:11 - selector over here inside the internal
468:13 - styling and let us remove the ID
468:15 - selector from here so let me just save
468:17 - this file now and try reloading this
468:19 - page once again on the browser so as you
468:21 - can see the text color is now getting
468:23 - displayed with the black color over here
468:25 - by using the CSS selector now guys what
468:28 - we will do is inside the external
468:30 - stylesheet over here we will provide the
468:33 - ID selector with the color chocolate so
468:35 - let us see whether this particular ID
468:37 - selector will be given the priority or
468:40 - this class selector will be given the
468:41 - priority inside the internal styling so
468:44 - let me just save this file now and try
468:46 - reloading this page once again on the
468:48 - browser so as you can see ID selector is
468:51 - getting more priority compared to the
468:53 - class selector even though the ID
468:55 - selector is provided inside the external
468:58 - Style sheet over here so guys basically
469:00 - you need to remember that the highest
469:02 - priority will be given to the inline
469:04 - styling over here so let us check that
469:06 - as well once again since we have
469:08 - provided the ID selector so when we
469:10 - provide style followed by the color CSS
469:13 - property and let's say this time we
469:15 - provide the value as blue over here let
469:17 - me just save this file now and try
469:19 - reloading this page once again on the
469:20 - browser so as you can see blue color
469:22 - text is getting displayed so in this way
469:25 - the inline styling is given the highest
469:27 - priority followed by the ID selector
469:30 - that can be defined inside the internal
469:32 - styling or the external styling over
469:34 - here and then followed by the class
469:36 - selector that we have just mentioned
469:38 - along with the Cudo classes and the
469:40 - attribute selectors that we have seen
469:42 - previously and then after that the
469:44 - elements and the pseudo elements will be
469:46 - given the priority in the end so guys
469:48 - basically elements are nothing but these
469:51 - individual tags that we have already
469:53 - seen over here so guys let us remove the
469:55 - CSS properties one at a time so let us
469:57 - remove the in line styling first of all
470:00 - so when we remove the blue color from
470:02 - here so basically next we have the ID
470:04 - with the color chocolate over here so
470:06 - guys let me just save this file now and
470:09 - since we don't have the blue color over
470:10 - here let me just reload this page so the
470:12 - text is now getting displayed with the
470:14 - chocolate color this time now guys apart
470:16 - from this what we will do is let us get
470:18 - this element selector inside the
470:21 - internal styling and after the class
470:23 - selector over here so that the latest
470:26 - color is from this particular element s
470:28 - selector so guys let me just save this
470:30 - file now the HTML and the CSS files and
470:33 - try reloading this page once again on
470:35 - the browser so still the color from the
470:37 - ID selector is getting displayed over
470:39 - here from the external style sheet so
470:42 - let us remove that as well so when we
470:43 - remove the ID selector from here the
470:46 - next priority will be given to the class
470:48 - selector this time so the black color
470:50 - text should be displayed so let me just
470:52 - reload this page once again on the
470:54 - browser so as you can see the black
470:56 - color text is now getting displayed and
470:58 - and then finally we have in the end the
471:00 - priority that is given to the element
471:03 - selector over here so we need to remove
471:05 - this class selector so that the red
471:07 - color text that is present for this
471:09 - particular color CSS property inside the
471:12 - element selector can be implemented on
471:14 - the paragraph So when we save this file
471:17 - now and try reloading this page once
471:19 - again on the browser so red color text
471:21 - is getting displayed over here so guys
471:23 - in this way this is the list of priority
471:25 - for which the CSS properties will be
471:27 - implemented on on the required selectors
471:30 - of the HTML elements that you want to
471:32 - implement based on your requirements so
471:34 - guys comment in the comment section
471:36 - below whether you have learned something
471:37 - out of this video please make sure that
471:39 - you like this video so that it reaches
471:41 - to more people and subscribe to this
471:42 - channel so that you get the
471:44 - notifications on upcoming videos as well
471:46 - the next video that we are going to talk
471:48 - about is important rule in CSS so stay
471:52 - tuned so now we will see important rule
471:55 - in CSS so guys basically the important
471:58 - important rule in CSS is used to add
472:01 - more importance to the property / value
472:04 - than the normal importance given to the
472:07 - CSS property so guys the syntax is in
472:09 - this way that you have to provide the
472:12 - exclamation symbol followed by the
472:14 - important keyword over here so guys if
472:16 - you use the important rule it will
472:19 - override all the previous styling rules
472:21 - for that specific property on that
472:23 - element so guys previously we had seen
472:26 - the priority of the CSS properties that
472:28 - are applied so first of all the highest
472:31 - priority is given to the inline styling
472:33 - and Then followed by the IDS selector
472:36 - and Then followed by the classes Pudo
472:38 - classes and the attribute selectors and
472:40 - Then followed by the HTML element Tex
472:43 - and the pseudo element selectors now
472:45 - guys there is an exception over here so
472:47 - even if we follow this priority list
472:49 - still we can override this priority list
472:52 - by using the important rule over here
472:55 - which can be done by using this
472:56 - exclamation mark followed by the
472:58 - important keyword so guys let us check
473:00 - this with the help of example in vs code
473:02 - over here so simply I'm going to remove
473:04 - the previous lines of code that we had
473:06 - return in the HTML and the CSS files
473:09 - over here now guys what we are going to
473:11 - do is let us say we have a paragraph in
473:13 - this case and we will say this is first
473:16 - par so guys basically we have this very
473:18 - simple statement that is this is first
473:20 - par and let me just copy this paragraph
473:22 - tag over here so that we can provide
473:25 - multiple paragraph tags in this case so
473:27 - we have this is first par this is second
473:29 - par and this is third par over here now
473:31 - guys let us provide the ID for the first
473:34 - par and let's say we provide the value
473:35 - of the ID as first and then over here
473:38 - for the second par as well we will
473:40 - provide the ID as second in this case
473:42 - and then for the third par let us
473:44 - provide the ID as third over here so
473:47 - guys basically we have the ID for all
473:49 - these three paragraph tags this time so
473:52 - guys let me just save this file now and
473:53 - try reloading this page on the browser
473:55 - so as you can see we have three
473:57 - paragraphs over here here this is first
473:59 - par this is second par and this is third
474:01 - par respectively now guys let us set
474:03 - certain background colors to all these
474:05 - paragraph over here so what we can do is
474:08 - simply inside the style. CSS file we are
474:10 - going to provide the ID over here for
474:12 - the first PA and let's say we have the
474:15 - background color as yellow this time so
474:17 - guys basically we have the yellow
474:19 - background color for the first par and
474:21 - similarly we are going to provide the ID
474:24 - of the second paragraph as well and this
474:26 - time let us provide the background color
474:28 - col as aqua color over here and for the
474:30 - third paragraph let us provide the
474:32 - background color as some other color so
474:35 - let's say we use this chart reuse color
474:37 - over here so guys let me just save this
474:39 - file now and try reloading this page
474:41 - once again on the browser so as you can
474:43 - see we have the yellow background color
474:45 - aqua background color and the chart
474:47 - reuse background color over here now
474:49 - guys this is the normal CSS properties
474:52 - that we have defined inside the external
474:54 - file over here and we have not used the
474:57 - important rule so far bar now guys what
474:59 - happens when we provide the HTML element
475:01 - over here inside the ID so let us
475:04 - provide the P tag instead of the ID of
475:06 - the third paragraph that is Hash
475:08 - character now guys instead of having
475:10 - this ID that is Hash character followed
475:12 - by the third ID over here for the third
475:14 - paragraph let us provide the HTML
475:17 - element so let me just provide the P tag
475:19 - over here now what will happen so let me
475:21 - just save this file now so if you notice
475:23 - we have the first paragraph and the
475:25 - second paragraph having their own
475:27 - background color and for the third
475:29 - selector that is the pag we are going to
475:32 - have the chart reuse which will be
475:34 - applied to this third paragraph over
475:36 - here so in short there will be no change
475:38 - in this case why so because we have
475:40 - removed the ID from the style. CSS file
475:44 - for the third paragraph and we are
475:46 - applying the CSS property by using the
475:48 - HTML element name so guys let me just
475:51 - save this file now and try reloading
475:53 - this page once again on the browser so
475:55 - as you can see there is no change right
475:56 - now but guys if you notice this HTML
475:59 - element also applies to the other
476:02 - paragraphs as well so the first and the
476:04 - second paragraph is also having the P
476:06 - tag over here so in case if we don't
476:09 - provide the first and the second ID over
476:12 - here so let me comment out these lines
476:13 - of code in this case and simply we are
476:16 - going to have this simple Fe tag over
476:18 - here as you can see so basically this
476:20 - background color will be applied to all
476:23 - the paragraph tag so guys let me just
476:25 - save this file now and try reloading
476:27 - this page once again on the browser so
476:29 - as you can see this chart reuse color is
476:31 - getting applied as the background color
476:33 - for all the paragraph tags over here but
476:36 - since the ID is having more priority
476:38 - compared to the HTML element name and
476:41 - that is why the background color will be
476:43 - updated to these colors respectively
476:45 - when we uncomment these lines of code so
476:48 - now we are applying the background color
476:50 - as yellow and aqua this time so let me
476:52 - just save this file now and try
476:53 - reloading this page once again on the
476:55 - browser so as you can see the background
476:57 - color is is now getting applied to all
477:00 - the three paragraphs based on these
477:02 - colors that we have applied to the ID
477:04 - and the HTML element name now guys very
477:07 - important thing we have seen previously
477:09 - that the ID selector is having more
477:11 - priority compared to the HTML element
477:13 - name over here now guys what we can do
477:16 - is we can remove that priority by using
477:18 - the important rule over here so simply
477:21 - after providing the value what we have
477:23 - to do is we have to provide the space
477:25 - character followed by exclamation mark
477:28 - and you can see that we already have
477:30 - this Mt abbreviation that is important
477:32 - so guys basically this is the important
477:34 - rule over here now guys what will happen
477:36 - is we have already seen that the yellow
477:39 - and the aqua background color was
477:41 - already applied to the first and the
477:43 - second paragraph Without the important
477:45 - rule but the moment we provide this
477:47 - important rule over here so whatever CSS
477:50 - properties that were applied to the
477:53 - other paragraphs will not be applied
477:55 - over here and only this particular CSS
477:58 - property will be applied to all the P
478:00 - tags over here so guys let me just save
478:02 - this file now and try reloading this
478:04 - page once again on the browser so as you
478:06 - can see the chart reuse background color
478:08 - is now getting applied to all the
478:10 - paragraph tags over here because we have
478:13 - used the important rule so guys this is
478:15 - the meaning of the important rule it
478:17 - will override the value of the CSS
478:19 - property that we have provided over here
478:22 - compared to the same CSS property that
478:24 - we had provided using any of the
478:26 - selectors inside the external file or
478:29 - even the HTML file in this case now guys
478:31 - let us check whether the inline styling
478:33 - will work over here or not so what we
478:36 - will do is we will provide the inline
478:38 - styling over here for the third
478:39 - paragraph so let me just provide the
478:41 - style in this case and let's say we
478:43 - provide the background color this time
478:45 - and the value that we are going to use
478:47 - is the red color over here so guys
478:49 - basically we have seen that the inline
478:51 - styling is having the highest priority
478:53 - compared to the other CSS selectors so
478:56 - let us check this let me just save the
478:58 - file now and try reloading this page
479:00 - once again on the browser so as you can
479:02 - see the red background color is not
479:04 - getting displayed over here for the
479:05 - third paragraph even though we have
479:07 - provided the inline styling over here
479:10 - that's because we have provided the
479:11 - important rule in this case which is
479:13 - getting applied to all the paragraph tag
479:16 - now guys the moment we remove this
479:18 - important rule from this particular CSS
479:21 - selector let me just save this file now
479:23 - and since we don't have any important
479:25 - rule over here the yellow and the aqua
479:27 - background color will now be displayed
479:29 - for the first and the second paragraph
479:31 - since their IDs are getting mentioned
479:34 - over here and then since we have the
479:36 - inline styling for the third paragraph
479:38 - the red color should be displayed over
479:40 - here so let me just save this files now
479:42 - and try reloading this page once again
479:44 - on the browser so as you can see we have
479:46 - yellow and the aqua colors and this time
479:48 - we are getting the color from the inline
479:51 - styling that is the red background color
479:53 - from this particular inline style that
479:55 - we have mentioned inside the paragraph
479:57 - tag over here but guys the moment you
480:00 - provide the important rule inside this
480:02 - particular element name that is the P
480:04 - tag let us provide that so we provide
480:07 - the exclamation mark followed by the
480:08 - important keyword and let's say we
480:10 - change this particular background color
480:12 - to some other color so let's say we
480:14 - provide CN color this time so when we
480:16 - provide the CN color let me just save
480:18 - this file now and try reloading this
480:20 - page once again on the browser so as you
480:22 - can see the Canan background color is
480:24 - getting displayed over here for all the
480:26 - three paragraphs so guys the doesn't
480:28 - matter whatever color you apply over
480:30 - here inside the inline styling as the
480:33 - background color still that particular
480:35 - change will not be reflected over here
480:37 - on your browser and you will be confused
480:39 - while you are debugging where the issue
480:41 - is so guys basically it is very
480:43 - important to note that it is good to
480:45 - know about the important rule you might
480:47 - see it in some of the CSS source code as
480:50 - well however do not use it unless you
480:53 - absolutely have to so guys basically if
480:55 - it is possible to avoid the important
480:57 - keyword over here you should be avoiding
480:59 - it in order to avoid the confusion while
481:02 - you are debugging your CSS properties so
481:04 - even though if you are providing the CSS
481:06 - property as the inline styling over here
481:09 - still those CSS properties will not be
481:11 - applied if the same CSS properties are
481:14 - being used with the important rule in
481:16 - your external or the internal styling so
481:19 - guys this is the way that you can use
481:20 - the important rule over here as far as
481:23 - the CSS properties are concerned comment
481:25 - in the comment section below whether you
481:26 - have learned something on of this video
481:28 - please make sure that you like this
481:30 - video so that it reaches to more people
481:32 - and subscribe to this channel so that
481:33 - you get the notifications on upcoming
481:35 - videos as well the next video that we
481:37 - are going to talk about is math
481:39 - functions in CSS so stay tuned so now we
481:43 - will see math functions in CSS so guys
481:46 - basically the CSS math functions allow
481:48 - mathematical Expressions to be used as
481:51 - property values and this we are going to
481:53 - check with the help of examples as well
481:55 - so we will see the various functions
481:57 - such as the Kelsey function and the max
481:59 - function and the Min function over here
482:01 - so guys basically we can provide the
482:03 - mathematical expressions in between
482:06 - these parenthesis that you can see
482:07 - inside this for these CSS math functions
482:10 - so guys let us check the examples over
482:12 - here so basically the caly function
482:14 - performs a calculation to be used as the
482:17 - property value so guys let us check this
482:19 - with the help of example in VSS code
482:21 - over here so simply inside this body
482:22 - section of the HTML web page what we are
482:25 - going to do is we will simply have the
482:27 - div container over here so we will
482:29 - Define the diff tag with the class
482:30 - container in this case and then guys
482:32 - basically we are going to generate some
482:34 - random text over here using the lurm Mt
482:37 - abbreviation so guys as you can see we
482:39 - have generated some random text in this
482:41 - case now guys let me just save this file
482:43 - now and try reloading this page on the
482:45 - browser so as you can see this is some
482:47 - random text that we have generated now
482:49 - guys what we will do is inside the
482:50 - style. CSS file we will provide certain
482:53 - CSS properties to this class container
482:56 - over here which is associated created
482:58 - with the diff tag that we have defined
483:00 - so guys basically we are going to have
483:01 - the background color as yellow in this
483:03 - case so we will use the background color
483:05 - CSS property also we will Define the
483:08 - Border as two pixels border withd with
483:11 - the Border style as solid and the Border
483:13 - color as black color in this case let us
483:16 - also provide certain padding over here
483:17 - so we will provide the value as 5 pixels
483:20 - in this case let me just save this file
483:21 - now and try reloading this page once
483:23 - again on the browser so as you can see
483:25 - this is the dev with the class container
483:28 - with the required CSS properties that we
483:31 - have defined now guys how do we use the
483:33 - Kelsey function that is the math
483:35 - function over here inside the style. CSS
483:37 - file so guys we can use the width CSS
483:40 - property in order to define the width of
483:43 - this particular diff tag So currently it
483:45 - is taking the 100% width of this entire
483:48 - screen let us set it to 50% width of the
483:51 - screen so how we can do that simply by
483:53 - providing the withd property over here
483:56 - and then simply we can provide 50 % in
483:58 - this case so let me just save this file
484:00 - now and try reloading this page once
484:01 - again on the browser so as you can see
484:03 - we have the 50% within this case now
484:06 - guys this is the direct way in order to
484:08 - provide certain value to the CSS
484:10 - property but let's say from this 100% of
484:12 - the width of this particular diff
484:14 - container that we have seen just now so
484:16 - let us change it to 100% in this case so
484:19 - let's say if we only want to remove the
484:21 - 200 pixels from the right so what we can
484:23 - do is simply we can use the math
484:25 - function that is Kelsey over here so as
484:28 - you can see this is the function and
484:29 - inside this we have to provide the
484:31 - expression that is 100% minus 200 pixels
484:36 - so guys basically this is the
484:37 - mathematical expression that we are
484:39 - providing what we are saying to the web
484:41 - browser over here is from the 100% of
484:44 - the width please remove 200 pixels so
484:46 - whatever the result will be of this
484:48 - particular expression that result will
484:50 - be set as the width of this particular
484:53 - class that is container over here so let
484:55 - me just save this file now and try
484:56 - reloading this page once again on the
484:58 - browser so as you can see from the right
485:00 - 200 pixels has been removed from here
485:02 - that is from the 100% we are subtracting
485:05 - 200 pixels of the width and this is the
485:07 - way that the width of a particular div
485:09 - container or any other HTML element can
485:12 - be set by using the Kelsey math function
485:15 - over here guys apart from this let us
485:17 - say if we want to remove more 100 pixels
485:19 - from the right so what we can do is from
485:21 - the 100% of the width we want to remove
485:24 - 300 pixels from here so simply we have
485:26 - to minus the 300 00 pixels let me just
485:28 - save this file now and try reloading
485:30 - this page once again on the browser so
485:32 - as you can see 300 pixels is removed
485:35 - from the 100% of the width of this
485:37 - particular div container and in this way
485:39 - you can provide the mathematical
485:41 - expression inside the parenthesis of
485:43 - this math function that is Kelsey now
485:45 - guys apart from this we also have the
485:47 - max function over here which uses the
485:49 - largest value so we will be providing
485:51 - the comma separated list of values from
485:54 - which the largest value will be used in
485:56 - order to set the property value in this
485:59 - case so guys let us check this as well
486:01 - so what we will do is instead of using
486:03 - the Kelsey math function we will use the
486:05 - max math function over here and inside
486:08 - this let us say we only provide one
486:10 - value that is 300 pixels over here so
486:12 - guys what will happen so in this case
486:14 - since the largest value is 300 pixels
486:16 - because that is the only value that is
486:18 - present right now inside the max math
486:20 - function so that is what is going to be
486:22 - set as the value for this particular
486:24 - width of the container so guys let me
486:26 - just save this file now and try
486:27 - reloading this page once again on the
486:29 - browser so as you can see this is the
486:31 - 300 pixels width of the diff container
486:34 - if we right click over here and click on
486:35 - the inspect option we will be able to
486:38 - see the width of the container over here
486:40 - as you can see the content is 300 MTI
486:43 - 180 so over here 300 is the width of
486:46 - this particular Dev element right now so
486:48 - guys in this way you can use the max
486:50 - function with just one value and apart
486:52 - from this let us say we also want to
486:54 - provide another value that is 50% of the
486:57 - end entire width of the screen so guys
486:59 - over here we have to provide comma
487:01 - followed by 50% so guys this is another
487:04 - value over here so currently 300 pixels
487:07 - is this much on the screen that you can
487:08 - see and when we say 50% it will be at
487:11 - the center of the screen where the right
487:13 - hand side of the div element must be
487:16 - present so Guys Somewhere over here the
487:17 - right hand side of the div element
487:19 - should occur when we apply these changes
487:21 - over here so let me just save this file
487:23 - now and try reloading this page once
487:25 - again on the browser so as you can see
487:27 - the 50% of the width of the screen is
487:29 - being taken right now and the border is
487:32 - present at the center of the page over
487:34 - here as far as horizontal alignment is
487:36 - concerned so guys out of 300 pixels and
487:38 - 50% 50% is greater right now and that is
487:42 - what is being set as the value of the
487:44 - width CSS property now guys apart from
487:46 - this let us say we also have 70% as the
487:49 - width So currently 70% of the width will
487:52 - be the highest number over here so let
487:54 - me just save this file now and try
487:55 - reloading this page once again on the
487:57 - browser so 70% is being set as the width
488:00 - of the div container so in this way you
488:02 - can also use the max math function
488:05 - inside the CSS for any of the CSS
488:07 - properties that you want to use the
488:09 - mathematical expression for now guys
488:11 - similarly we will have the Min function
488:13 - as well which uses the smallest value
488:16 - from the comma separated list of values
488:18 - as the property value so guys let us
488:20 - check this as well so out of all these
488:22 - three values that we have provided 70%
488:25 - is the largest value and that is is what
488:27 - we have seen over here that is 70% of
488:30 - the width is getting implemented right
488:32 - now for this div container what if we
488:35 - provide the Min function for the same
488:37 - list of values so in this case the
488:39 - minimum value will be 300 pixels because
488:41 - that is the smallest value out of all
488:44 - these three values and that is what
488:46 - should be set as the width for this
488:48 - particular div container so guys let me
488:50 - just save this file now and try
488:52 - reloading this page notice that we have
488:54 - provided the Min function over here
488:56 - instead of Max function so when we
488:58 - reload this page as you can see the
489:00 - minimum value which is 300 pixels out of
489:03 - all these list of values will be
489:05 - implemented as the width of the div
489:07 - container when we right click and click
489:09 - on the inspect option you can see that
489:11 - the 300 pixels that is the width is
489:13 - being set for this particular HTML
489:15 - element apart from this we can also
489:17 - reduce the width so let's say we provide
489:19 - another value as 200 pixels So currently
489:22 - 200 pixels is the smallest value out of
489:24 - all these values that we can see right
489:27 - now so when we save this file now and
489:29 - try reloading this page once again on
489:30 - the browser so as you can see 200 pixels
489:33 - is being set as the width of the HTML
489:36 - element and instead of using Min we can
489:38 - also use max function in this case let
489:40 - me just save this file now so currently
489:42 - 70% will be set as the width of the div
489:45 - element so when we reload this page as
489:47 - you can see this is the 70% of the
489:49 - screen that is being taken by this HTML
489:52 - element so guys comment in the comment
489:53 - section below whether you have learned
489:55 - something out of this video please make
489:57 - sure that that you like this video so
489:58 - that it reaches to more people and
490:00 - subscribe to this channel so that you
490:01 - get the notifications on upcoming videos
490:03 - as well the next video that we are going
490:05 - to talk about is rounded Corners in CSS
490:08 - so stay
490:09 - tuned so now we will see rounded Corners
490:12 - in CSS so guys basically in CSS the
490:15 - Border radius property can be used in
490:18 - order to provide the rounded Corners to
490:21 - the HTML elements and this we are going
490:23 - to check with the help of examples as
490:25 - well remember that we can easily use the
490:27 - order radius property and provide
490:29 - certain length unit in order to provide
490:31 - the rounded Corners to the HTML element
490:34 - so guys let us check the example with
490:36 - the help of the div element that is
490:38 - having the background color over here so
490:40 - simply I'm going to remove the previous
490:42 - lines from the style. CSS and the HTML
490:45 - file over here now guys what we will do
490:47 - is simply we are going to have the div
490:48 - tag and inside the div tag we are going
490:50 - to say this is a sample HTML element
490:57 - so guys basically we have this very
490:58 - simple statement that is this is a
491:00 - sample HTML element over here now guys
491:03 - let me just save this file now and try
491:05 - reloading this page once again on the
491:06 - browser so as you can see we have this
491:08 - is a sample HTML element which is inside
491:11 - the diff tag now guys let us provide
491:13 - certain CSS properties over here to the
491:15 - diff tag so inside the style. CSS file
491:18 - we will be having the diff tag over here
491:20 - and for this diff tag we are going to
491:22 - have the background color so let's say
491:24 - we are going to set the color as yellow
491:27 - yellow over here and then apart from
491:29 - this we will also set the border so
491:31 - border width will be two pixels over
491:33 - here apart from this the Border style
491:35 - will be solid and the color will be
491:37 - black in this case and let us also
491:39 - provide certain padding so let's say we
491:41 - provide five pixels of padding over here
491:43 - let me just save this file now and try
491:45 - reloading this page once again on the
491:46 - browser so as you can see we have the
491:49 - yellow background color and also the
491:51 - border that is getting displayed for
491:53 - this particular div element now guys
491:55 - since the div element is the Block Level
491:56 - element ment that is why it is taking
491:59 - the entire width of the screen so guys
492:01 - what we can do is simply we are going to
492:03 - say display it is equal to inline so
492:06 - that the div element only takes the
492:08 - width that is required by the content of
492:11 - this div element so over here we will
492:13 - say display it is equal to in line so
492:15 - let me just save this file now and try
492:17 - reloading this page so as you can see we
492:19 - have the dev element that is taking only
492:22 - that much width which is required by the
492:24 - content of the dev element now simply we
492:26 - can use the Border radius property over
492:29 - here in order to provide the rounded
492:31 - corners for this HTML element that is
492:33 - the diff tag so simply we can provide
492:35 - the length unit of let's say 5 pixels
492:37 - over here so guys border radius is the
492:39 - CSS property that we can use and the
492:42 - length unit that we are using right now
492:44 - is 5 pixels let me just save this file
492:46 - now and try reloading this page once
492:48 - again on the browser as you can see we
492:50 - have certain rounded Corners over here
492:52 - let me just zoom in little bit so as you
492:54 - can see these are the rounded Corners
492:56 - that are implemented for this particular
492:58 - Dev tag if we remove this border radius
493:00 - property let me just save this file now
493:02 - so currently there are no rounded
493:04 - corners but when we provide the Border
493:06 - radius CSS property along with certain
493:08 - value over here so when we reload this
493:10 - page as you can see these are the
493:12 - rounded Corners let me just increase the
493:14 - value to 10 pixels over here let me just
493:16 - save this file now and try reloading
493:18 - this page so as you can see these are
493:20 - the rounded Corners that can be
493:22 - displayed for this particular HTML
493:24 - element so guys in this way you can
493:26 - easily use the border radius CSS
493:28 - property in order to have the rounded
493:30 - Corners over here guys apart from this
493:32 - we can also use the value in terms of
493:35 - percentage for the Border radius so guys
493:37 - let's say we provide 10% of Border
493:40 - radius in this case so let me just save
493:42 - this file now and try reloading this
493:44 - page once again on the browser so this
493:45 - is the 10% border radius that you can
493:48 - see over here similarly if you provide
493:50 - 50% of Border radius what will happen so
493:53 - guys let me just save this file now and
493:55 - try reloading this page once again on
493:57 - the browser so as you can see this is
493:58 - the 50% value for the Border radius that
494:01 - we have provided now guys you can also
494:03 - make a circle over here for a particular
494:06 - div element in this case now guys you
494:07 - can also create a circle by using the
494:10 - Border radius with the help of the div
494:12 - tag over here but in that case you need
494:14 - to provide the width and height of the
494:16 - diff tag in such a way that both the
494:18 - width and the height must be equal so
494:20 - guys let us check that as well so what
494:22 - we are going to do is simply we will say
494:24 - with it is equal to 100 pixels and
494:27 - height it is again equal to 100 pixels
494:29 - over here and apart from this we will
494:31 - remove this property that is display it
494:33 - is equal to inline right now and then
494:35 - let us decrease some text over here so
494:38 - simply we are going to say the word that
494:40 - is div in this case let me just save
494:42 - this file now and try reloading this
494:44 - page once again on the browser so as you
494:46 - can see this is a circle that is getting
494:48 - implemented right now let us remove this
494:51 - text from the D tag over here and guys
494:53 - this circle is Possible only when you
494:55 - provide the Border radius it is equal to
494:57 - 50% when you make it as 40% it won't be
495:00 - the perfect circle let me just save this
495:02 - file now and try reloading this page
495:04 - once again on the browser so as you can
495:06 - see it is not a perfect circle right now
495:08 - when we remove the Border radius there
495:10 - will be no rounded Corners right now and
495:12 - it will be simply a square since we have
495:15 - provided the width and height which is
495:16 - having the same value that is 100 pixels
495:19 - let me just save this file now andery
495:21 - reloading this page so as you can see
495:22 - this is a square that is getting
495:24 - displayed right now with the help of the
495:26 - div tag but when we provide the Border
495:28 - radius of 50% it will be the circle that
495:31 - will be displayed on the web browser so
495:33 - let me just save this file now and try
495:35 - reloading this page once again on the
495:37 - browser so this is the circle that is
495:39 - getting displayed on the web browser so
495:41 - guys in this way if you want a circle or
495:43 - the rounded corners for the HTML
495:45 - elements based on your project
495:46 - requirements you can use the Border
495:49 - radius property inside the style. CSS
495:51 - file comment in the comment section
495:53 - below whether you have learned something
495:54 - out of this video please make sure that
495:56 - you like this this video so that it
495:58 - reaches to more people and subscribe to
496:00 - this channel so that you get the
496:01 - notifications on upcoming videos as well
496:04 - the next video that we are going to talk
496:05 - about is color gradients in CSS so stay
496:09 - tuned so now we will see color gradients
496:12 - in CSS so guys basically the CSS
496:15 - gradients let you display the smooth
496:17 - transitions between two or more
496:20 - specified colors and this we are going
496:22 - to check with the help of examples as
496:24 - well and there are basically three types
496:26 - of gradient that we will be seeing in
496:28 - the CSS so the very first gradient type
496:31 - is the linear gradient over here for
496:33 - which the directions can go from top to
496:35 - down or up left right or diagonally as
496:38 - well apart from this we also have the
496:40 - radial gradient that we can use which is
496:42 - defined by their Center and then the
496:45 - third gradient is the conic gradients
496:47 - which is rotated around the center point
496:49 - so guys let us check all these with the
496:51 - help of examples in vs code over here so
496:54 - simply I'm going to remove the previous
496:55 - lines of code that we had return in the
496:57 - HTML and the style. CSS file in this
497:00 - case now guys let us simply provide the
497:02 - div tag over here and for this D tag we
497:04 - are going to provide certain CSS
497:06 - properties so inside the style. CSS file
497:09 - we will have the div tag that is the CSS
497:11 - selector and inside the curly braces let
497:14 - us say first of all we provide the
497:15 - simple background color so guys
497:17 - basically this background color is the
497:19 - solid color that we are providing and it
497:21 - is not a mixture of two or more specific
497:24 - colors over here so let me provide the
497:26 - width and height of this diff tag as
497:28 - well so in this case let us provide the
497:31 - width as 500 pixels and also the height
497:34 - as 300 pixels right now so guys over
497:36 - here we have provided the width and
497:38 - height properties as well apart from
497:39 - this lets also provide certain border so
497:42 - let's say we have two pixels border
497:44 - width and then the Border style is solid
497:46 - and the Border color is black right now
497:49 - so guys let me just save this file now
497:50 - and try reloading this page on the
497:52 - browser so as you can see we have this
497:55 - diff tag that is having the background
497:57 - color yellow it is also having the
497:59 - border and specific width and height
498:01 - that we have defined so guys this is the
498:03 - solid background color that we have seen
498:05 - so far so basically what gradient colors
498:08 - allow you to do is have multiple colors
498:11 - and there will be smooth transitions in
498:13 - between those two colors so guys
498:15 - basically we can have two or more colors
498:17 - in this case so let us see how linear
498:19 - gradients can be used so guys in this
498:22 - case what we have to do is we need to
498:24 - comment out this background color CSS
498:26 - property since in order to use the
498:28 - gradient colors we need to use the
498:30 - background image CSS property so guys
498:33 - over here we will say background image
498:36 - so guys this is the CSS property that
498:38 - you have to use in order to provide the
498:40 - gradient colors and then over here
498:42 - simply we are going to say linear
498:44 - gradient in this case so you can see
498:46 - this is the method that we have to use
498:48 - and inside the linear gradient we need
498:50 - to provide the colors so guys let us say
498:52 - we provide yellow color as the first
498:55 - color and followed by comma and then
498:57 - let's say we provide green color as the
498:59 - second color over here so guys basically
499:01 - these are the two colors that we want to
499:03 - be present as the background color for
499:06 - this diff tag and basically the default
499:08 - direction will be top to down in this
499:10 - case so guys you can see that we can go
499:12 - in any direction we are going to see
499:14 - that how we can set the direction but
499:16 - first of all the default direction will
499:19 - be top to down and that we are going to
499:21 - check with the help of these two colors
499:23 - that is yellow and green so guys let me
499:25 - just save this file now and reloading
499:27 - this page once again on the browser so
499:29 - as you can see on top we have the yellow
499:31 - color and then as we go down the yellow
499:33 - color component is getting reduced and
499:36 - then the green color component is
499:38 - getting increased over here and at the
499:40 - end that is at the bottom of this
499:41 - particular div element we have the
499:43 - complete green color over here so guys
499:45 - in this way we can create the linear
499:47 - gradient from top to bottom which is the
499:50 - default direction we can also make the
499:52 - direction from left to right as well so
499:55 - how we can do that simply before the
499:57 - first color we can also set the
499:58 - direction from left to right in this
500:00 - case so how we can do that simply when
500:03 - we provide the first color over here
500:05 - before that we need to provide the
500:06 - direction that is to right in this case
500:09 - so guys basically we have this direction
500:11 - that is to right we can change it to
500:13 - left up down so basically by default we
500:16 - have two down over here so since it is
500:18 - the default value so we don't have to
500:20 - provide it but in case if we want to
500:22 - change the direction so simply we can
500:24 - say to right so basically in this case
500:26 - yes yellow color will start from the
500:28 - left and then it will end with the green
500:30 - color on the right of this diff tag over
500:32 - here so let me just save this file now
500:34 - and try reloading this page once again
500:36 - on the browser so as you can see yellow
500:38 - color is starting from the left and it
500:40 - is ending with the green color on the
500:42 - right now guys apart from this we can
500:43 - also have multiple colors over here we
500:45 - have just used yellow and green color
500:48 - right now we can also provide the third
500:50 - color after providing comma so let's say
500:52 - we provide blue color in this case so
500:54 - blue color is the third color let me
500:56 - just save this file now and try
500:57 - reloading this page once again on the
500:59 - browser so as you can see we have the
501:01 - yellow color on the left and then when
501:03 - we move to the middle of this D tag we
501:05 - are getting the green color and then
501:07 - when we move to the right of this D tag
501:09 - we are getting the blue color over here
501:11 - and this is the smooth transition that
501:12 - you can see so there is no sudden green
501:15 - color after a particular point on this
501:16 - div tag and there is no sudden blue
501:18 - color after this point over here so guys
501:20 - basically this is the smooth transition
501:22 - that is happening between the colors
501:24 - that we have provided and you can
501:26 - provide any number of colors over here
501:28 - so guys in this way we can use the
501:30 - linear gradient over here so this was
501:32 - the simple example in this case we can
501:34 - also use the angles instead of
501:36 - directions so guys over here what we
501:37 - have done is we have provided the
501:39 - direction to right or we can also say to
501:42 - left over here so basically the yellow
501:44 - color will start from the right and the
501:45 - blue color will end at the left so let
501:47 - me just save this file now so basically
501:49 - the colors will reverse themselves in
501:51 - terms of directions the yellow color
501:53 - will come on the right and the blue
501:54 - color will go to the left whereas the
501:56 - green green color will stay at the
501:57 - middle so when we reload this page as
501:59 - you can see the direction is to left
502:01 - over here now guys how do we provide the
502:04 - angles so basically when we say 0° over
502:07 - here so let me just provide 0 D EG so in
502:10 - this way you can provide the angle over
502:12 - here so let me just save this file now
502:14 - and try reloading this page once again
502:16 - on the browser the color is starting
502:18 - from the bottom so as you can see we
502:20 - have the yellow color at the bottom and
502:22 - then the blue color at the top and when
502:24 - we say 180° over here let me just change
502:27 - it to 180° this will be the default
502:29 - behavior when the yellow color is coming
502:31 - from top and the blue color is ending at
502:33 - the bottom over here so as you can see
502:35 - this is 180° right now so guys what will
502:38 - happen when we provide 90° over here let
502:40 - us check that as well so let me just
502:42 - save this file now and try reloading
502:44 - this page so as you can see it is coming
502:46 - from left over here right now so in this
502:48 - way you can also provide the angles as
502:50 - far as the degrees are concerned as the
502:52 - first parameter before providing the
502:54 - first color and what is the default
502:56 - behavor when we save this file now and
502:58 - try reloading this page as you can see
503:00 - the color is coming from the top which
503:01 - means it is 180° by default so if we
503:04 - check that when we provide 180° over
503:07 - here so let me just save this file now
503:09 - and try reloading this page so there is
503:11 - no change right now over here so by
503:13 - default it is 180° now guys apart from
503:15 - this we can also have the rainbow colors
503:18 - over here so before checking the random
503:20 - colors we can also check how we can set
503:22 - the colors diagonally so guys let us go
503:25 - from top left to right right bottom over
503:27 - here so how do we do that so basically
503:29 - simply we have to provide two right
503:31 - bottom in this case so we say two right
503:35 - bottom so guys when we save this file
503:37 - now and try reloading this page once
503:39 - again on the browser so as you can see
503:40 - the yellow color is coming from the top
503:42 - left and then we have the green color
503:45 - the direction is diagonal right now and
503:47 - then in the end the bottom right is now
503:49 - having the blue color and that is how
503:51 - you can set the gradient color as
503:52 - diagonal in this case now guys let us
503:54 - check another example that is how we and
503:56 - create the rainbow colors so what we can
503:58 - do is simply we have to go from left to
504:00 - right so over here we are going to keep
504:02 - two right in this case and then we are
504:04 - going to define the colors of the
504:06 - rainbow so guys first of all the first
504:08 - color is violet in this case and Then
504:10 - followed by Indigo and then we have blue
504:13 - and then we have green followed by
504:16 - yellow and then we have orange and Then
504:19 - followed by red so guys this is the
504:21 - sequence of the rainbow color so we have
504:23 - violet indigo blue green yellow orange
504:26 - red so guys let me just save this file
504:28 - now and try reloading this page so
504:30 - remember that we have set the direction
504:31 - as to right so basically it will go from
504:34 - left to right in this case so when we
504:35 - save this file so as you can see these
504:37 - are the rainbow colors that you can see
504:39 - on this particular diff tag over here so
504:41 - guys in this way we can easily use the
504:43 - linear gradient function for the
504:46 - background image property so guys it is
504:48 - very important to note that we are using
504:49 - the background image CSS property
504:52 - instead of the background color property
504:54 - now guys apart from this let us move to
504:55 - the next gradient that is radial
504:57 - gradients over here which is defined by
504:59 - their Center so guys let us check the
505:01 - example of the radial gradient in this
505:03 - case so instead of using the linear
505:05 - gradient simply we have to provide the
505:07 - radial gradient over here so inside this
505:10 - radial gradient what we have to do is
505:12 - let us provide certain color so we will
505:14 - provide yellow and then green color in
505:17 - this case let me just save this file now
505:19 - and try reloading this page once again
505:21 - on the browser so guys this is the
505:22 - radial gradient actually it is the size
505:25 - of the ellipse over here in between you
505:27 - can see that it is the yellow color and
505:29 - then the outside of this particular div
505:31 - element is the green color over here
505:33 - when we provide more colors so let us
505:35 - provide the blue color as well as the
505:37 - third color let me just reload this page
505:39 - so as you can see the ellipse is getting
505:42 - displayed on this particular web browser
505:44 - which is the default shape when we use
505:46 - the radial gradient so guys in this way
505:48 - if you want this kind of gradient to be
505:51 - displayed on any of the HTML element you
505:53 - can use the radial gradient and apart
505:55 - from this we can also have the circle
505:58 - shape as well instead of the ellipse
506:00 - shape so guys by default this is the
506:02 - ellipse shape but before the first color
506:04 - simply we can provide the keyword that
506:06 - is circle over here so guys what will
506:08 - happen is instead of ellipse we will
506:10 - have the circle shape for this
506:12 - particular radial gradient that will be
506:14 - implemented so let me just save this
506:16 - file now and try reloading this page
506:18 - once again on the browser so as you can
506:19 - see this is the circular shape of this
506:22 - particular radial gradient that is
506:23 - getting displayed inside this div
506:25 - element over here so guys in this way
506:27 - you can use the radial gradients as well
506:30 - apart from this we also have conic
506:31 - gradients which is rotated around the
506:34 - center point so guys let us check this
506:35 - with the help of example over here so
506:37 - simply what we have to do is instead of
506:39 - radial gradients we can say conic
506:42 - gradient in this case so we have conic
506:45 - hyphen gradient and let us use some
506:47 - color so again we will use the yellow
506:49 - color and the green color for this coric
506:52 - gradient and Then followed by semicolon
506:54 - over here let me just save this file now
506:56 - and try reloading this page once again
506:57 - on the browser so guys as you can see
506:59 - this is the rotation that is happening
507:01 - from this particular point over here
507:03 - first of all we have the yellow color
507:05 - which is making a transition over here
507:07 - as we move in the clockwise Direction
507:09 - and then we go towards the green color
507:11 - over here and then in this way the
507:13 - Corning gradient can help us in order to
507:16 - display the HTML element with this
507:18 - particular gradient color let us provide
507:20 - some other color over here so let's say
507:22 - we provide the third color as the aqua
507:24 - color let me just save this file now and
507:26 - try reloading this page once again on
507:28 - the browser so as you can see we are
507:30 - making the transition from the yellow
507:31 - color and then we are moving towards a
507:33 - green color and then again we are moving
507:35 - to the aqua color over here so guys you
507:37 - can use the conic gradient as well if
507:40 - this is the requirement apart from this
507:41 - we can also mention the angles with the
507:44 - degree so guys over here by default the
507:46 - angles that are provided to the
507:48 - different colors are equal over here but
507:50 - we can mention the degrees as well so
507:53 - let's say we provide certain angles in
507:55 - this case so let's say we want the angle
507:57 - of the yellow to be 45° in this case so
507:59 - simply we can set the 45° over here let
508:02 - me just save this file now and try
508:04 - reloading this page once again on the
508:05 - browser so as you can see the yellow
508:08 - color is now spread towards the 45°
508:11 - angle over here right now so based on
508:13 - your project requirements you can
508:15 - mention the degree of the colors as well
508:17 - and then apart from this you can also
508:19 - have the starting point over here so
508:21 - guys simply we can use the from keyword
508:23 - in this case so basically you can see
508:25 - that the this is the starting point from
508:27 - where the colors are starting but you
508:29 - can provide the angle from where you
508:31 - want those colors to start so let us
508:33 - check that as well so before the first
508:35 - color what we can do is let me just
508:37 - remove this angle over here so before
508:39 - the first color simply we use the from
508:42 - keyword and let's say we provide 90° as
508:45 - the starting point from where we want to
508:47 - start this color that is yellow followed
508:49 - by green and Then followed by aqua color
508:52 - let me just save this file now and try
508:53 - reloading this page once again on the
508:55 - browser notice that we have the start
508:57 - point over here right now but when we
508:59 - reload this page as you can see the
509:01 - start Point has changed over here from
509:03 - the right hand side the yellow color is
509:05 - starting now so guys in this way if you
509:07 - want to change the starting point you
509:09 - can use the from keyword over here
509:11 - followed by the angle that you need to
509:13 - provide inside this conic gradient and
509:15 - Then followed by the colors that you
509:17 - want to set so guys in this way you can
509:19 - use the conic gradients as well so these
509:21 - are some of the gradients that you can
509:23 - use in the CSS so we have the linear
509:25 - gradients that we have seen radial
509:27 - gradient and also the conic gradient as
509:29 - well so guys comment in the comment
509:31 - section below whether you have learned
509:32 - something out of this video please make
509:34 - sure that you like this video so that it
509:36 - reaches to more people and subscribe to
509:38 - this channel so that you get the
509:39 - notifications on upcoming videos as well
509:42 - the next video that we are going to talk
509:43 - about is how to make a pie chart in CSS
509:46 - so stay tuned so now we will see how we
509:50 - can make a pie chart in CSS so guys
509:52 - basically we can easily make the pie
509:54 - chart in CSS using using the conic
509:56 - gradient for the background image CSS
509:59 - property so guys previously we have seen
510:01 - how we can use the conic gradient and
510:03 - apart from that we have also seen the
510:05 - linear gradient and the radial gradient
510:08 - for the background image CSS property if
510:10 - you have not watched that video you can
510:12 - check the playlist of the CSS tutorial
510:14 - the link I have given in the description
510:16 - section below so guys basically we have
510:18 - seen that the conic gradient help us in
510:20 - order to have the gradient color being
510:23 - rotated from the center point so guys
510:25 - over here we are going to use that
510:27 - property of the conic gradient in order
510:29 - to make the pie chart in CSS so guys
510:32 - this is the example that we are going to
510:34 - make use of different colors and we will
510:36 - be providing the angle for those colors
510:38 - as well so let us check this with the
510:40 - help of example in vs code over here let
510:42 - me just remove the previous lines of
510:44 - code that we had written and then guys
510:46 - inside the HTML file what we are going
510:48 - to do is we are going to have the div
510:50 - tag over here which will be a square div
510:52 - tag in this case so we are going to
510:54 - Define certain CSS properties over here
510:57 - so let's say we provide the width as 300
511:00 - pixels in this case also the height as
511:02 - 300 pixels since we want to have the
511:04 - Square D tag over here out of which we
511:07 - are going to make a pie chart in CSS so
511:09 - guys we have the width and height over
511:11 - here in this case let us also have the
511:13 - background color for now which we are
511:15 - going to comment out later on so let's
511:17 - say we have the color as Aqua over here
511:20 - also we will provide the border of let's
511:22 - say 2 pixels solid border with the color
511:25 - that is black in this case let me just
511:27 - save this file now and try reloading
511:29 - this page on the browser so as you can
511:30 - see this is the diff tag with the width
511:32 - and height that we have set over here so
511:35 - guys what we have to do is instead of
511:36 - using the background color over here we
511:38 - have to use the background image so let
511:40 - me just comment out this line of code
511:43 - and simply we are going to say
511:44 - background image in this case so guys
511:46 - for this background image we have to use
511:48 - the conic gradient over here so we say
511:51 - conic hyph gradient in this case and
511:53 - Then followed by open and close
511:55 - parenthesis so guys using the conic
511:57 - gradient will help us in order to
511:59 - provide the gradient color from the
512:01 - center point and rotate it in the
512:03 - clockwise Direction so guys let us check
512:05 - the example of that so let me just set
512:07 - the first color as blue color over here
512:09 - and second color as the yellow color the
512:12 - third color is the green color and
512:14 - fourth color is the red color over here
512:16 - so guys we have the four basic colors
512:18 - blue yellow green red let me just save
512:20 - this file now and try reloading this
512:22 - page once again on the browser so as you
512:24 - can see we are starting starting from
512:26 - this particular point over here the
512:28 - first color is the blue color and then
512:29 - we have the smooth transition towards
512:31 - the yellow color over here and then
512:33 - again we have the transition towards
512:35 - green color followed by the transition
512:37 - towards the red color so it is the
512:39 - sequence in which we have provided the
512:42 - colors over here inside the coric
512:43 - gradient now guys how do we make a pie
512:45 - chart out of this Square shaped div
512:48 - element so first of all we need to
512:50 - convert the square shape to the circle
512:52 - shape so what we can do is simply we can
512:54 - use the Border radius over here and if
512:57 - you have seen my previous videos we have
512:59 - the Border radius equal to 50% that will
513:02 - help us in order to have the HTML
513:05 - element in a circle shape only when the
513:07 - width and height values of that
513:09 - particular HTML element are same so guys
513:12 - basically we need to have the width and
513:13 - height to be same in order to have the
513:16 - circular shape with the help of the
513:17 - Border radius equal to 50% let me just
513:20 - save this file now and try reloading
513:22 - this page once again on the browser so
513:24 - as you can see we have the circular
513:25 - shape over here for this particular Dev
513:27 - element now guys we don't want this
513:29 - particular smooth transition that is
513:31 - happening between colors so what we can
513:33 - do is simply we can provide the starting
513:35 - and the ending point for these colors so
513:37 - first of all the blue color it is
513:39 - starting from 0° and then it is ending
513:42 - at 45° so we need to provide comma and
513:45 - then simply we have to provide blue
513:47 - again and then we will say 90° over here
513:49 - so guys basically it is 90° and not 45°
513:53 - so basically it will be the one quarter
513:55 - of this part particular Circle over here
513:57 - right now and Then followed by again
513:59 - yellow color which is starting from 90°
514:01 - from where the blue color got over and
514:04 - then followed by once again the yellow
514:05 - color which should get over at 180°
514:08 - right now so we have 180° in this case
514:11 - let me just save this file now and see
514:12 - how the changes will look like so when
514:14 - we reload this page so there are no
514:15 - changes right now let me just complete
514:17 - this code over here we have the green
514:19 - color which should start from the 180°
514:22 - right now so we have 180° for the green
514:25 - color and again we have green color over
514:27 - here so we will say green color followed
514:30 - by 270° so we have 270° and then we have
514:35 - the red color over here so we need to
514:36 - have comma as well so we have red color
514:39 - followed by 270° from where it should
514:42 - start and then it should end at 360° so
514:45 - we have red color followed by 360° over
514:48 - here so let me just save this file now
514:50 - guys over here we have done a mistake we
514:52 - have provided the space character over
514:54 - here so always remember that when we are
514:56 - providing the angles we need to provide
514:58 - the space character after the color but
515:01 - not in between the value and the D
515:04 - string over here so you need to remember
515:06 - this let me just save this file now and
515:08 - try reloading this page once again on
515:10 - the browser so as you can see this is
515:11 - the perfect pie chart and all the colors
515:14 - are taking the 1/4 area for this
515:16 - particular Circle we have the blue color
515:18 - followed by the yellow color then we
515:20 - have green color and then we have the
515:22 - red color so guys no longer we are
515:24 - having the smooth transitions over here
515:26 - in between the colors because we have
515:28 - provided the strict angles over here the
515:30 - starting and the ending angles right now
515:33 - so guys we can change these angles as
515:34 - well so instead of having the 90° for
515:37 - the blue color we can end it at 45°
515:40 - which should be somewhere over here that
515:42 - is the half of the quarter of this
515:44 - particular pie chart and then we can
515:46 - start the yellow color from that
515:47 - particular point so we have 45° over
515:50 - here from where the yellow color should
515:51 - start so let me just save this file now
515:54 - and try reloading this page once again
515:55 - on the browser so as you can see the
515:57 - blue color is starting at the zero Dee
516:00 - and then it is ending at the 45° and
516:02 - then the yellow color is starting from
516:04 - the 45th Dee and then it is ending at
516:07 - the 180° over here so guys in this way
516:09 - based on your requirements you can
516:11 - provide the different angles for the
516:13 - different colors that you want to set
516:15 - inside your pie chart so guys in this
516:17 - way you can easily create the pie chart
516:19 - by using the conic gradient for the
516:21 - background image CSS property apart from
516:24 - this you can also display the Legends
516:26 - for this particular pie chart along with
516:28 - the different values that those Legends
516:30 - represent so guys comment in the comment
516:32 - section below whether you have learned
516:34 - something out of this video please make
516:36 - sure that you like this video so that it
516:37 - reaches to more people and subscribe to
516:39 - this channel so that you get the
516:41 - notifications on upcoming videos as well
516:43 - the next video that we are going to talk
516:44 - about is text Shadow property in CSS so
516:48 - stay tuned so now we will see text
516:51 - shadow in CSS so guys basically the CSS
516:54 - text Shadow prop property applies the
516:56 - shadow to the text and this we are going
516:58 - to check with the help of examples as
517:00 - well basically in its simplest use you
517:02 - can only specify the horizontal Shadow
517:05 - and the vertical Shadow so guys let us
517:07 - check this with the help of example in
517:09 - vs code over here so simply I'm going to
517:11 - remove the previous lines of code that
517:13 - we have written in the HTML and the CSS
517:16 - file over here simply we are going to
517:18 - have the paragraph tag in this case and
517:21 - simply we will say sample paragraph So
517:23 - guys over here we have the sample parag
517:25 - paragraph that is the text getting
517:27 - displayed inside the paragraph tag let
517:29 - me just save this file now and try
517:31 - reloading this page on the browser so as
517:33 - you can see this is the sample paragraph
517:35 - text getting displayed now guys let us
517:37 - provide certain CSS properties to this
517:39 - paragraph tag over here so first of all
517:42 - we will set the font size in this case
517:44 - so let's say we set the font size as 3
517:46 - Em which means three times of 16 pixels
517:50 - which is the default size for the web
517:52 - browser and guys apart from this we have
517:54 - to provide the text shed property so
517:56 - simply we will say text hyphen Shadow
517:59 - and as you can see this is the CSS
518:01 - property that we have to use so guys
518:03 - what value we need to provide for this
518:04 - text Shadow first of all we need to
518:07 - provide the horizontal Shadow and Then
518:09 - followed by the vertical Shadow so for
518:11 - example let's say we provide two pixels
518:13 - as horizontal Shadow over here followed
518:15 - by the space character and then we have
518:17 - the two pixels of vertical Shadow so let
518:20 - me just save this file now and try
518:21 - reloading this page once again on the
518:23 - browser so as you can see theone font
518:25 - size of this particular sample paragraph
518:28 - is increased to 3 em over here and you
518:30 - can see to some extent that all the
518:33 - characters are now having the shadow
518:35 - just behind them so guys basically since
518:37 - we have used a very small value that is
518:39 - 2 pixels for horizontal Shadow and two
518:41 - pixels for vertical Shadow and without
518:44 - changing any color for the shadow that
518:46 - is the reason we are not able to see the
518:48 - clear Shadow over here when we remove
518:50 - this Shadow right now let me just save
518:52 - this file now and try reloading this
518:53 - page as you can see this is the normal
518:55 - text getting displayed but when we
518:57 - implement the shadow once again so we
518:59 - will be seeing the shadow to some extent
519:02 - over here now guys to see this Shadow
519:04 - properly what we will do is we will
519:06 - change the horizontal Shadow and we will
519:08 - take this particular Shadow somewhere
519:10 - over here so guys currently what is
519:11 - happening is If You See Your Shadow as
519:13 - well when the sun is exactly above the
519:16 - top of your head so you are not able to
519:18 - see your own shadow properly but when
519:21 - the sun is at a particular angle in
519:23 - front of you or behind you you will be
519:25 - able to see your own shadow and that is
519:28 - what we are going to do right now let's
519:30 - say the sun is over here on the extreme
519:32 - left of this particular sample paragraph
519:34 - So the shadow should occur somewhere
519:36 - over here on the right so what we will
519:38 - do is we will increase the horizontal
519:40 - Shadow over here so let's say we provide
519:42 - 300 pixels in this case and 0 pixels for
519:45 - the vertical Shadow so let me just save
519:47 - this file now and try reloading this
519:49 - page once again on the browser so as you
519:51 - can see this is the shadow that is
519:52 - appearing over here let us increase the
519:55 - horizontal Shadow to 400 pixels let me
519:57 - just save this file now so as you can
519:59 - see now this is the shadow that is
520:01 - getting appeared over here on the right
520:03 - hand side of the actual Tex so guys
520:05 - basically the sun is on the left hand
520:06 - side and the shadow is appearing
520:08 - somewhere over here and this is the
520:10 - meaning of the horizontal Shadow right
520:12 - now and when we use the vertical Shadow
520:14 - the shadow will come somewhere down over
520:16 - here so let us check that as well when
520:18 - we provide let's see 50 pixels of
520:20 - vertical Shadow so the shadow should
520:22 - appear down somewhere over here so let
520:24 - me just reload this page so as you can
520:26 - see the shadow has appeared down so
520:28 - horizontally it is 400 pixels away and
520:30 - vertically it is 50 pixels away so guys
520:32 - in this way you can provide the
520:34 - horizontal and the vertical Shadow over
520:36 - here now guys how do we add the color to
520:38 - the text Shadow over here so guys simply
520:40 - we have the third property in this case
520:42 - so after the vertical Shadow we need to
520:44 - provide the space character and simply
520:46 - we can provide the color for the shadow
520:48 - so let's say we provide the color as red
520:50 - color so let me just save this file now
520:52 - so notice that we have provided the
520:54 - original text over here here so this
520:56 - particular color that we have provided
520:57 - inside the text Shadow will only be
521:00 - applied to the shadow for this
521:02 - particular text so this is the text that
521:04 - should get the red color so let me just
521:06 - reload this page once again on the
521:08 - browser as you can see this is the red
521:10 - color shadow that is getting displayed
521:12 - over here on the right hand side so guys
521:14 - in this way you can provide the color
521:15 - after the vertical Shadow value over
521:17 - here now guys apart from this we can
521:19 - also provide the blur effect to the text
521:21 - Shadow so guys before implementing the
521:23 - blur effect what we will do is we will
521:25 - get the shadow closer to the original
521:28 - text over here so we will simply provide
521:30 - two pixels of horizontal shadow in this
521:33 - case and two pixels of vertical Shadow
521:35 - let me just save this file now and try
521:37 - reloading this page once again on the
521:38 - browser so as you can see we have the
521:40 - black color text and just behind the
521:42 - black color text you can also see the
521:44 - red color shadow for this particular
521:46 - text now guys in order to provide the
521:47 - blur effect for this particular Shadow
521:49 - we can simply provide the length unit
521:52 - before the color for the shadow so over
521:54 - here let's let say we provide five
521:56 - pixels so basically this will help us in
521:58 - order to provide the blur effect to some
522:00 - extent so let me just save this file now
522:02 - and try reloading this page once again
522:04 - on the browser so as you can see we have
522:06 - provided the blur effect and it is not
522:08 - showing the solid color right now so if
522:10 - you want to see that separately once
522:12 - again let us provide the 400 pixels of
522:15 - horizontal Shadow and 50 pixels of
522:17 - vertical Shadow over here so that we can
522:19 - see the text Shadow somewhere over here
522:21 - right now on the web browser so when we
522:23 - reload this page you can see that this
522:25 - is the blur effect that is getting
522:27 - implemented over here when we remove
522:29 - this blur effect it will be the normal
522:31 - text that is getting displayed but if we
522:33 - provide the blur effect so five pixels
522:35 - of blur effect we'll provide the blur
522:37 - effect for this particular text Shadow
522:39 - and guys this gives a good look as far
522:42 - as your text is concerned that you want
522:44 - to display based on your project
522:45 - requirements so guys let me just change
522:48 - this horizontal Shadow to 2 pixels and
522:50 - also the vertical Shadow to 2 pixels
522:52 - over here and then reload this page once
522:54 - again so now now guys this is giving a
522:56 - good look as far as the blur effect is
522:58 - concerned now guys apart from this we
523:00 - can also have the white text with the
523:02 - black shadow over here so guys let us
523:04 - check this as well so what we have to do
523:06 - is first of all we will remove the text
523:08 - Shadow from here and simply we are going
523:11 - to set the color so this time we are
523:13 - going to set the color as white color
523:15 - because what we are doing is we are
523:17 - setting the text color as white color
523:19 - and also we are having the background
523:21 - color is white color so we won't be able
523:23 - to see the text by default but what we
523:25 - are going to do is we are going to make
523:27 - its shadow as black color so let us
523:29 - check that let me just save this file
523:31 - now and try reloading this page once
523:33 - again on the browser as you can see we
523:35 - are not able to see the text by default
523:37 - but it is currently present when we
523:39 - highlight the text somewhere over here
523:41 - you can see that the text is getting
523:43 - highlighted which is having the white
523:45 - color as the text color now guys what we
523:47 - are going to do is we will use the text
523:49 - Shadow CSS property so over here we have
523:51 - the text Shadow and again we are going
523:53 - to use the two pi pixels of horizontal
523:56 - and vertical Shadow right now and apart
523:58 - from this we will set the color of this
524:01 - particular text Shadow as black so let
524:03 - me just save this file now and try
524:04 - reloading this page once again on the
524:06 - browser notice that we don't have any
524:08 - text right now but the moment when we
524:10 - reload this page as you can see we are
524:12 - getting the black color text Shadow due
524:15 - to which we are able to see the sample
524:17 - paragraph text to some extent now guys
524:19 - how do we improve this so basically we
524:21 - can also add the blur effect over here
524:24 - so before the color and after the
524:26 - vertical Shadow simply we can provide
524:28 - the five pixels of blur effect let me
524:30 - just save this file now and try
524:32 - reloading this page once again on the
524:33 - browser so as you can see it is looking
524:36 - more beautiful now so we can see that
524:37 - the text is coming on top and we are
524:40 - having the text Shadow is the black
524:42 - color behind the original text which is
524:44 - giving it a 3D look over here so guys in
524:47 - this way we can have the white text with
524:49 - the black color shadow over here which
524:51 - can be displayed on the web browser now
524:54 - guys apart from this we can also have
524:56 - the multiple Shadows over here so to the
524:58 - same text Shadow we can add multiple
525:00 - colors so what we have to do is let's
525:02 - say we want to add the blue color text
525:04 - Shadow once again to this existing
525:07 - sample text so what we will do is after
525:09 - this black color text Shadow simply we
525:11 - have to provide comma and Then followed
525:14 - by we will provide Zer pixels of
525:16 - horizontal and vertical Shadow this time
525:19 - and then apart from this we are going to
525:21 - increase the blur effect to 20 pixels
525:23 - and the color that we are going to use
525:25 - this blue color over here let me just
525:27 - save this file now and try reloading
525:29 - this page once again on the browser so
525:31 - as you can see we are getting the blue
525:33 - color text Shadow to some extent which
525:35 - is improving the appearance of this
525:38 - particular sample text now guys apart
525:40 - from this we can also add a darker
525:42 - version of the blue color as well as the
525:44 - third text Shadow so again we are going
525:46 - to provide comma and Then followed by 0
525:49 - pixels of horizontal and vertical
525:51 - Shadows over here and this time we are
525:53 - going to use five pixels of glare effect
525:56 - and Then followed by the dark blue color
525:58 - over here which is the darker version of
526:00 - this particular blue color let me just
526:02 - save this file now and try reloading
526:04 - this page once again on the browser so
526:06 - as you can see now it is more improved
526:09 - the text is looking more beautiful this
526:11 - time so guys in this way you can use the
526:12 - combination of the different colors for
526:15 - the text Shadows along with the
526:16 - different blur effects that we have
526:18 - implemented over here based on your
526:20 - requirements so guys comment in the
526:22 - comment section below whether you have
526:23 - learned something out of this video
526:25 - please make sure that you like this
526:26 - video so that it reaches to more people
526:28 - and subscribe to this channel so that
526:30 - you get the notifications on upcoming
526:32 - videos as well the next video that we
526:34 - are going to talk about is box shadow in
526:36 - CSS so stay tuned so now we will see box
526:40 - shadow in CSS so guys basically the CSS
526:44 - box Shadow property is used to apply one
526:47 - or more Shadows to an element and this
526:49 - we are going to check with the help of
526:51 - examples as well we can specify a
526:53 - horizontal and a vertical Shadow to the
526:56 - Box in which case we can have any of the
526:58 - HTML element have the horizontal and the
527:01 - vertical Shadow so guys over here the
527:03 - default color of the Shadow will be the
527:06 - current text color and as you can see
527:08 - this is the syntax we have taken the div
527:10 - HTML element over here and simply we can
527:13 - use the Box Shadow CSS property and
527:16 - provide the horizontal and the vertical
527:18 - Shadow based on our project requirements
527:21 - so guys let us move to the vs code over
527:23 - here and simply we are going to to use
527:25 - the diff tag in this case that is going
527:27 - to have the box Shadow over here and
527:30 - then we will say this is a simple diff
527:33 - tag so guys basically we have a very
527:35 - simple statement that is this is a
527:37 - simple diff tag over here let me just
527:39 - save this file now and over here inside
527:42 - the style. CSS file we are going to
527:44 - provide certain CSS properties to this
527:47 - div tag so guys first of all let us
527:49 - provide the width and height of this
527:51 - diff tag over here so let's say we have
527:53 - the width of 100x in this case and also
527:56 - the height of 100 pixels and then guys
527:58 - apart from this let us have certain
528:00 - background color for this D tag so let's
528:02 - say we have the yellow color as the
528:04 - background color for this particular
528:06 - HTML element let me just save this file
528:09 - now and try reloading this page on the
528:11 - browser so as you can see we have a
528:13 - simple Square in the form of the diff
528:16 - element over here let us provide certain
528:18 - padding as well so in this case we are
528:20 - going to provide the padding of let's
528:22 - say 10 pixels and also we will provide
528:25 - the border of black color over here so
528:27 - guys let's say we have the Border width
528:29 - of two pixels and the Border style is
528:31 - solid and the color as black color in
528:34 - this case let me just save this file now
528:36 - and try reloading this page so as you
528:38 - can see we have a good looking div tag
528:40 - over here which is having the background
528:42 - color along with it we have the Border
528:44 - as well now guys how do we use the Box
528:46 - Shadow so over here as we can see the
528:48 - syntax is box Shadow CSS property
528:51 - followed by the horizontal and the
528:53 - vertical shadow that we can can provide
528:55 - so guys inside the VSS code simply
528:58 - inside the style. CSS file we will say
529:01 - box Shadow CSS property and over here
529:03 - let's say we provide five pixels of
529:05 - horizontal Shadow and five pixels of
529:08 - vertical Shadow over here so let me just
529:11 - save this file now and try reloading
529:13 - this page once again on the browser so
529:15 - as you can see the shadow can be
529:16 - displayed over here as far as the 5
529:19 - pixels length is concerned guys what we
529:21 - will do is we will remove the border
529:23 - from this particular or diff tag so that
529:26 - we can see clearly that it is a black
529:27 - color shadow so we are going to Simply
529:30 - comment out this line of code over here
529:32 - let me just save this file now and try
529:34 - reloading this page so as you can see it
529:36 - is a black color shadow right now and
529:38 - the shadow color will be the text color
529:41 - by default which is black color over
529:43 - here can we change that color so let us
529:45 - try that as well so simply we can set
529:47 - the color as some other color so let's
529:50 - say we provide the color as blue color
529:52 - over here let me just save this file now
529:54 - and try reloading this page so as you
529:56 - can see the text color is changed to
529:58 - blue color now and also the text Shadow
530:00 - color is changed to blue color over here
530:03 - now guys apart from this you can also
530:05 - provide the shadow color Inside the Box
530:08 - Shadow CSS property so how we can do
530:10 - that simply after the vertical shadow
530:12 - that we have provided we can provide the
530:14 - color of the shadow that you want to
530:16 - show so guys let's say we have the aqua
530:19 - color that we want to display as the Box
530:21 - Shadow over here for this particular
530:23 - diff tag so so simply we can provide the
530:25 - color that is aqua let me just save this
530:28 - file now and try reloading this page
530:30 - once again on the browser so as you can
530:32 - see it is the aqua color that is getting
530:34 - displayed over here let us change it to
530:36 - some dark color in this case so let's
530:37 - say we provide a dark blue color as the
530:40 - Box Shadow color for this particular
530:42 - diff tag let me just save this file now
530:44 - and try reloading this page so as you
530:46 - can see we have the dark blue color as
530:48 - the shadow color over here now guys
530:50 - apart from this we can also have the
530:52 - blur effect over here for this
530:54 - particular box of Shadow so we have
530:56 - specified the color for the shadow
530:57 - already as the third parameter but the
531:00 - blur effect can be provided after this
531:03 - vertical shadow that we have provided
531:05 - over here so guys after this vertical
531:07 - Shadow and before the color that we have
531:10 - provided simply we can provide the
531:12 - length unit for the blur effect so guys
531:14 - what this will do is instead of having
531:16 - the solid color as you can see this dark
531:18 - blue color is the solid color that you
531:20 - can see right now we will be having
531:22 - certain blur effect for this particular
531:25 - solid color so let us check that as well
531:27 - we have provided the length that is 10
531:29 - pixels over here let me just save this
531:31 - file now and try reloading this page
531:33 - once again on the browser so as you can
531:35 - see now it is having some blur effect
531:38 - for this particular dark blue color and
531:40 - in this way it gives a good look as far
531:42 - as this particular Dev HTML element is
531:45 - concerned guys apart from this you can
531:47 - also design your cards based on your
531:49 - project requirements that you want to
531:50 - display on the website that you are
531:52 - building in this way and it it gives a
531:55 - kind of a 3D look over here which means
531:57 - that this particular card is coming up
531:59 - and we can see the shadow behind this
532:01 - particular card in this case so guys
532:03 - this is the way that you can provide the
532:05 - blur effect Inside the Box Shadow over
532:07 - here apart from this we also have
532:09 - something called as spread radius of the
532:11 - Shadow which increases the size of the
532:14 - Shadow so guys let us check that as well
532:16 - so over here instead of having the 10
532:18 - pixels blur effect let us have five
532:20 - pixels of blur effect let us check the
532:22 - changes over here so as you can see the
532:24 - this is the 5 pixels blur effect now
532:26 - guys you can increase the size of this
532:28 - particular Shadow simply by providing
532:30 - another length unit after the blur
532:32 - effect which we call it as the spread
532:34 - radius so guys let us check that as well
532:36 - so if you provide two pixels of spread
532:39 - radius let us see how the changes will
532:41 - look like let me just save this file now
532:43 - and try reloading this page once again
532:45 - on the browser so as you can see to some
532:47 - extent the shadow size has been
532:50 - increased for this particular diff tag
532:52 - over here and in this way you can
532:54 - provide the B radius as well so to
532:56 - summarize first of all we have the
532:57 - horizontal radius and Then followed by
532:59 - the vertical radius and Then followed by
533:02 - the blur effect that we have seen
533:03 - already and Then followed by the spread
533:06 - radius that you want to optionally
533:08 - provide and then apart from that we also
533:10 - have the color that we have displayed
533:12 - over here guys we can provide any other
533:14 - dark color as well so let's say we
533:16 - provide dark green color over here so
533:18 - you will see the dark green color as the
533:20 - Box Shadow for this particular diff tag
533:22 - let me just save this file now and try
533:24 - reloading this page so as you can see we
533:27 - have the dark green color as the shadow
533:29 - for this particular diff tag over here
533:31 - now guys apart from this we also have
533:33 - something called as insert parameter
533:35 - which changes from the outer to the
533:37 - inner Shadow so guys if you notice over
533:39 - here we are getting the shadow on the
533:41 - right hand side and at the bottom of
533:43 - this particular HTML element what if we
533:45 - want the shadow on the other side that
533:47 - is on the left as well as on the top as
533:50 - well so guys simply we can reverse the
533:52 - Shadow by using the inser value for this
533:55 - particular back so guys simply we can
533:57 - provide the shadow on the left and the
533:59 - top by using the inser value for this
534:01 - particular CSS property that is box
534:04 - Shadow so after the color simply we can
534:06 - say insert over here and let me just
534:09 - save this file now and try reloading
534:11 - this page once again on the browser so
534:12 - as you can see now the shadow is getting
534:14 - displayed on the other side of this
534:16 - particular diff tag so guys in this way
534:19 - you can easily use the inser value as
534:21 - well and apart from this you can also
534:23 - have the multiple shadow which are
534:24 - separated using comma so guys let us
534:26 - check this as well so I'm going to
534:28 - Simply remove this ins set property also
534:30 - we are going to remove the spread radius
534:33 - over here and simply what we are going
534:35 - to do is we will set the Box Shadow as
534:38 - blue color over here and in this case we
534:40 - are going to increase the blur effect to
534:42 - 20 pixels so guys let me just save this
534:45 - file now and try reloading this page
534:47 - once again on the browser so as you can
534:48 - see we have the blur effect of 20 pixels
534:51 - and the shadow color is blue right now
534:53 - guys we can can have more darker version
534:55 - of the blue color so over here we are
534:58 - going to set another color that is dark
535:00 - blue in this case so how we can do that
535:02 - is we can provide comma after this blue
535:04 - color and then provide the horizontal
535:07 - and vertical so let's say this time we
535:09 - don't want to provide the length units
535:11 - for the horizontal and vertical
535:12 - direction for the Shadows but simply we
535:14 - want to provide the blur effect so over
535:16 - here simply we can say five pixels of
535:18 - blur effect and the color that we want
535:20 - is dark blue in this case so guys this
535:22 - is the darker version of the blue blue
535:24 - color that we have already applied so
535:26 - let us see how the changes looks like so
535:28 - let me just save this file now and try
535:30 - reloading this page once again on the
535:32 - browser so as you can see the dark blue
535:34 - color is also getting highlighted over
535:36 - here as the Box Shadow for this
535:38 - particular diff tag and in this way you
535:40 - can provide your own box Shadow based on
535:43 - your requirements if you want to provide
535:45 - multiple box Shadows for a particular
535:47 - HTML element in this case so guys
535:50 - comment in the comment section below
535:51 - whether you have learned something out
535:53 - of this video please make make sure that
535:54 - you like this video so that it reaches
535:56 - to more people and subscribe to this
535:58 - channel so that you get the
535:59 - notifications on upcoming videos as well
536:01 - the next video that we are going to talk
536:03 - about is text effects in CSS so stay
536:07 - tuned so now we will see text effects in
536:10 - CSS so guys basically we are going to
536:12 - learn various text effects properties in
536:14 - this particular video with the help of
536:16 - examples so let us move to the vs code
536:19 - over here and simply I'm going to remove
536:21 - the previous lines of code that we had
536:22 - written in the HTML and the style. CSS
536:25 - files now guys over here simply we are
536:27 - going to have the div tag in this case
536:30 - and inside the diff tag we are going to
536:32 - have certain randomly generated text so
536:35 - let's say we have just 10 words over
536:37 - here inside this particular diff tag so
536:39 - guys in this way we can have the M
536:41 - abbreviation that is LM followed by the
536:44 - number of words that you want to
536:45 - randomly generate so when we press enter
536:48 - as you can see 10 words are randomly
536:50 - generated over here using the lurm Mt
536:53 - abbreviation okay let me just save this
536:55 - file now and try reloading this page
536:57 - once again on the browser so as you can
536:58 - see this is the simple text that is
537:00 - getting displayed inside the diff tag
537:02 - now guys what we are going to do is we
537:04 - will provide certain CSS properties to
537:07 - this diff tag over here so let's say we
537:09 - have the 30% as the width for this
537:11 - particular diff tag out of the entire
537:13 - width of the screen guys apart from this
537:15 - we will also set the bord so let's see
537:18 - we have two pixels of solid B with the
537:21 - black color over here let me just save
537:23 - this file now and reloading this page
537:25 - once again on the browser so as you can
537:27 - see we have the 30% width in this case
537:30 - for this particular diff tag and then
537:31 - apart from this the entire sentence is
537:34 - getting displayed in two lines over here
537:36 - now guys one of the important CSS
537:39 - properties as far as text effect is
537:41 - concerned is to use the wies space CSS
537:43 - property with the value that is no R so
537:46 - guys in this case when you want the text
537:48 - to be displayed only on one line you can
537:51 - use this whites space CSS property so
537:53 - guys let let us check this so what we
537:55 - are going to do is we are going to say
537:57 - white space CSS property and this time
538:00 - we are going to set the value as no rap
538:03 - over here which means the entire content
538:05 - should be displayed on one line so let
538:07 - me just save this file now and try
538:09 - reloading this page once again on the
538:11 - browser so as you can see the entire
538:13 - content is getting displayed on one line
538:16 - over here with the help of the whes
538:17 - space CSS property which is one of the
538:20 - important properties as far as text
538:22 - effects is concerned in CS SS now guys
538:25 - apart from that if you notice that we
538:26 - have a issue now over here the text is
538:29 - going outside of the border so guys if
538:31 - you remember we have set the width of
538:33 - 30% in this case so the border is set
538:36 - over here as you can see on the right
538:38 - hand side and the text is going to the
538:40 - right of this particular border so guys
538:42 - what we can do in order to solve this
538:44 - issue so guys over here we have
538:45 - something called as overflow equal to
538:48 - Hidden so guys basically we can use the
538:50 - Overflow CSS property in this case in
538:52 - order to hide the text that is going
538:55 - outside of this particular border so
538:57 - guys let us check that as well so over
538:59 - here what we are going to do is Overflow
539:01 - CSS property is the one that we are
539:04 - going to use and simply we are going to
539:05 - use this value that is hidden in this
539:08 - case so guys let me just save this file
539:09 - now so what this will do is it will hide
539:12 - the content that is going outside of the
539:14 - border of the HTML element on the right
539:17 - hand side so let me just reload this
539:19 - page once again on the browser so as you
539:21 - can see the content that was going out
539:24 - outside of this particular border is Now
539:26 - hidden but guys as you can see we can
539:28 - still see that some word is continuing
539:30 - over here which which gives a sense of
539:32 - incompleteness so guys over here we have
539:35 - another CSS property that we can use so
539:37 - we have something called as text
539:39 - overflow for which the default value is
539:41 - the clip value so guys let us check this
539:44 - as well so when we use text overflow
539:46 - property as you can see we have the list
539:48 - of values which includes clip value and
539:51 - the ellipses value so let us first check
539:53 - the clip value over here let me just
539:55 - save this file now and this is the
539:57 - default value that was set and that is
539:59 - why we won't see any change over here
540:01 - right now so let me reload this page
540:03 - once again on the browser so there is no
540:05 - change that is getting reflected over
540:07 - here right now but guys the other value
540:09 - that we have apart from the clip value
540:11 - is the ellipses value over here so let
540:14 - us check that as well what will happen
540:16 - so let me just save this file now and
540:18 - try reloading this page once again on
540:19 - the browser so as you can see we have
540:21 - these three dots now getting displayed
540:24 - over here which is due to this Ellipsis
540:26 - value for the text overflow CSS property
540:29 - so guys in this way if you want to show
540:31 - the user that there is certain text
540:33 - after this particular border but you
540:35 - want to restrict that text before that
540:38 - border so basically you can use this
540:40 - ellipses value for the text overflow
540:42 - property and guys apart from this you
540:44 - can also display the remaining text on
540:46 - over so what we have to do is we need to
540:49 - change the Overflow property to visible
540:51 - value when the user gets the mouse on
540:54 - that particular diff tag so guys let us
540:56 - check that as well what we want to do is
540:58 - when the text overflow property is set
541:00 - to Ellipsis that we have done in this
541:03 - particular case and when the user gets
541:05 - the cursor on this particular diff tag
541:08 - we want the remaining text to be
541:09 - displayed outside of this particular
541:11 - border so guys let us check that as well
541:14 - what we have to do is simply we will
541:16 - Define the diff tag followed by the
541:18 - pseudo class that is over in this case
541:20 - and then guys whatever CSS property that
541:22 - we apply over here will get implemented
541:25 - when the user gets the cursor on this
541:27 - particular diff tag so what we want to
541:29 - do is we want to change the Overflow CSS
541:32 - property to visible in this case so
541:34 - basically when we change the Overflow
541:37 - property to visible then the remaining
541:39 - text that we had hidden by using this
541:42 - particular overflow property will be now
541:44 - visible so guys let me just save this
541:46 - file now and try reloading this page
541:48 - once again on the browser notice that by
541:50 - default we don't have any text that is
541:52 - getting displayed after this particular
541:54 - border but when user gets the cursor on
541:57 - this diff tag as you can see the
541:59 - remaining text is now getting displayed
542:01 - over here and when the user takes away
542:03 - the cursor from the diff tag the
542:05 - remaining text is getting hidden with
542:07 - the help of overflow equal to Hidden and
542:10 - text overflow equal to Ellipsis values
542:12 - so guys in this way you can use the
542:14 - different text effects CSS properties
542:16 - that we have discussed so far apart from
542:19 - this we also have something called as
542:20 - word w over here which can be said to
542:22 - break word when when there is a very
542:24 - large word which is going outside of the
542:27 - border so guys let us check that as well
542:29 - so what we want to do is I'll simply
542:31 - remove these CSS properties and simply
542:34 - we are going to see the default behavior
542:36 - of the diff tag which is having the
542:38 - width of 30% and the Border as two
542:40 - pixels with the color black so guys let
542:42 - me just reload this page once again so
542:45 - as you can see this is the diff tag that
542:47 - is getting displayed over here now guys
542:49 - let us say this particular word is very
542:51 - long and while displaying it on the
542:53 - browser it is going outside of the
542:55 - border so guys what we have to do is
542:57 - simply I'm going to provide certain
543:00 - letters after this particular word over
543:02 - here so we are going to append certain
543:04 - random letters in this case so guys
543:07 - basically this is a very long word that
543:09 - is appearing over here which is longer
543:11 - than the width of the div element so
543:14 - guys let me just save this file now and
543:16 - try reloading this page once again on
543:17 - the browser so notice that by default
543:20 - the browser will try to get the words on
543:22 - the next line if we have the limited
543:25 - width that is provided to the HTML
543:27 - element but guys in this case when a
543:29 - specific word is very long and it is
543:31 - going outside of the border of the HTML
543:34 - element then in that case what we have
543:36 - to do is simply we can use the word rep
543:38 - CSS property so guys over here inside
543:40 - the style. CSS file simply we are going
543:43 - to say word r CSS property and we will
543:46 - say break word so guys what this
543:48 - particular value will do is it will
543:50 - break the word which is very long over
543:52 - here that is going outside of the border
543:54 - and continue that word on the next line
543:56 - in such a way that the entire content
543:59 - should be within this particular width
544:01 - of the HTML element so guys let me just
544:03 - save this file now and try reloading
544:06 - this page once again on the browser so
544:08 - as you can see the remaining letters
544:10 - inside this word is shifted to the next
544:12 - line over here in such a way that the
544:14 - content of this div tag is within the
544:17 - border of this particular HTML element
544:19 - so guys in this way you can use the
544:21 - different CSS properties as far as the
544:23 - text effects are concerned in CSS during
544:26 - your project implementation so guys
544:28 - comment in the comment section below
544:30 - whether you have learned something out
544:31 - of this video please make sure that you
544:33 - like this video so that it reaches to
544:35 - more people and subscribe to this
544:36 - channel so that you get the
544:37 - notifications on upcoming videos as well
544:40 - the next video that we are going to talk
544:41 - about is 2D transform property in CSS so
544:45 - stay tuned so now we will see 2D
544:48 - transform property in CSS so guys
544:51 - basically the CSS transform allows you
544:54 - to move rotate scale and skew the HTML
544:57 - elements that we Define inside our web
545:00 - page and this we are going to check with
545:01 - the help of multiple examples over here
545:04 - so guys before moving towards the
545:06 - examples let us understand the basic of
545:08 - the x-axis and the Y AIS that is going
545:11 - to be very important when you're are
545:12 - going to use this transform property
545:15 - values so guys over here if you have
545:17 - already learned about the x-axis and Y
545:20 - AIS previously in your mathematics class
545:22 - basically we we have the x-axis in the
545:25 - horizontal Direction over here so
545:27 - basically we have the x-axis in this way
545:30 - so this is the horizontal line that you
545:32 - can see which is x-axis over here simply
545:34 - we are going to provide the text box
545:36 - that is x-axis in this case so guys
545:39 - basically we can move the HTML elements
545:42 - in this particular direction when we
545:44 - provide the value as a positive value
545:46 - then the element will move towards the
545:48 - right in this case on the x-axis and
545:51 - when we provide the value as negative
545:53 - then the HTML element moves towards the
545:56 - left of the x-axis over here now guys
545:58 - similarly we have the Y AIS as well
546:01 - which is displayed in the vertical
546:02 - Direction so let us provide the y- AIS
546:05 - as well so over here we have the Y AIS
546:07 - in the vertical Direction in this case
546:10 - so guys basically this is the Y AIS now
546:12 - guys it is very important to note that
546:14 - during our mathematics class we were
546:16 - told that the positive y AIS is on the
546:19 - top over here and the positive xais is
546:21 - on the right hand side so this is the
546:23 - first quadrant and Then followed by this
546:25 - is the second quadrant in which case the
546:27 - x-axis have the negative values and the
546:30 - Y AIS have the positive values but guys
546:32 - when we deal with the web browser what
546:35 - happens is our web browser is present
546:37 - inside this fourth quadrant over here so
546:39 - what will happen is when we provide the
546:41 - positive xais number the HTML element
546:45 - should move towards the right but when
546:47 - we provide the Y AIS as the positive
546:49 - number then the HTML element should move
546:51 - down in this case so guys basically
546:53 - basically this is the screen over here
546:55 - so I'll simply draw the screen as well
546:57 - in this case so this is the screen that
546:59 - we will be dealing with in our examples
547:01 - so guys now let us move to the different
547:04 - values that we can provide to the
547:05 - transform property so over here the
547:07 - first value that we can provide is the
547:09 - translate which will help us in order to
547:12 - move an element to the specified
547:14 - position so guys over here we can see
547:16 - that the translate is a function which
547:18 - will take parameters over here that is
547:20 - the first parameter will be the x-axis
547:22 - that is the length unit you have to
547:24 - provide in order to move the element
547:27 - towards the x-axis over here if it is
547:29 - positive then the element will move
547:31 - towards the right direction and if the
547:33 - value is negative then the HTML element
547:35 - will move towards the left Direction so
547:38 - guys let us check this with the help of
547:39 - examples in vs code over here so simply
547:42 - I'm going to remove the previous lines
547:43 - of code that we had WR in the HTML and
547:46 - the style.css files now guys over here
547:49 - what we are going to do is simply we
547:51 - will have the div tag and it is going to
547:53 - have a specific width and height over
547:55 - here so simply we are going to say width
547:57 - of let's say 100 pixels this time and
548:00 - then the height as well of 100 pixels
548:02 - guys apart from this let us have certain
548:04 - border as well so let's say we have the
548:06 - border of two pixels and with border
548:09 - style as solid and the color is black
548:11 - color in this case and apart from this
548:13 - we will also have the background color
548:15 - of yellow so guys over here we have a
548:17 - simple diff tag and then guys apart from
548:20 - this let us have the diff tag at the
548:22 - center of the screen over over here so
548:24 - right now the diff tag is at the top
548:25 - left what we want is we want to get the
548:28 - diff tag somewhere over here at the
548:30 - center of the screen so what we can do
548:32 - is simply we can provide the margin and
548:34 - we can say Auto so basically this is
548:37 - going to provide the automatic margin
548:39 - from the left and right and simply let's
548:41 - say we provide the 10% for the top and
548:44 - the bottom margin as well so let me just
548:46 - save this file now and try reloading
548:47 - this page so from the left and right we
548:50 - have the equal margin with the help of
548:52 - this Auto Value and from the top we are
548:54 - providing the 10% margin over here so it
548:57 - is somewhat at the middle of the screen
548:59 - let us increase this percentage to 15%
549:02 - let me just save this file now and try
549:04 - reloading this page as you can see we
549:06 - have the div element at the center of
549:08 - the screen now guys let us check the
549:10 - first example that is the translate
549:12 - function inside the transform property
549:14 - so guys what we will do is over here we
549:16 - are going to have the H effect for this
549:19 - particular div element so simply we are
549:21 - going to say div followed by colon and
549:23 - then we have the codo class that is over
549:26 - so guys what exactly we are going to do
549:28 - is when the user is going to get the
549:30 - cursor on this particular diff tag then
549:32 - we are going to see the different
549:34 - transform property values that we are
549:36 - going to Define so first of all we will
549:38 - see how this translate Works which means
549:40 - it moves an element to the specified
549:43 - position so guys let us check this so
549:45 - over here what we have to do is simply
549:47 - we have to use the transform CSS
549:49 - property and as you can see there are
549:51 - multiple methods that you can use these
549:53 - are nothing but the CSS functions that
549:55 - can be used over here and based on the
549:57 - project requirements you can use your
549:59 - own functions that are listed over here
550:02 - so the first function is the translate
550:04 - function which will take two parameters
550:06 - the first parameter is the x-axis so
550:08 - let's say we want to move the HTML
550:11 - element by 20 pixels on the right hand
550:14 - side so simply we can provide the value
550:16 - as 20 pixels so in this case what will
550:18 - happen is when we get the cursor over
550:20 - here on the diff tag this particular
550:22 - square box should move to the right hand
550:25 - side by 20 pixels that we have defined
550:27 - over here so let me just save this file
550:29 - now and try reloading this page once
550:31 - again on the browser notice that this is
550:33 - the original position of the diff tag
550:35 - and the moment we get the cursor on this
550:37 - diff tag as you can see it has moved to
550:40 - the right hand side so if you see when
550:42 - we get the cursor back it is going back
550:44 - to the original position over here so
550:46 - guys in this way the translate property
550:48 - Works basically since we have only
550:50 - provided the value for the x-axis that
550:53 - is why it is just moving on the right
550:55 - hand side if we want to get this
550:57 - particular diff tag down as well so we
550:59 - will be providing the length unit for
551:02 - the second parameter as well so after
551:04 - this we need to provide a comma and
551:06 - let's say we provide 50 pixels so by 50
551:08 - pixels the diff tag should come down
551:11 - from the center of the screen so let me
551:13 - just save this file now and try
551:14 - reloading this page once again on the
551:16 - browser so when we get the cursor on
551:18 - this particular diff tag as you can see
551:20 - it is coming down as well so by 50 pix
551:23 - Els the diff tag is coming down over
551:25 - here so guys in this way you can use the
551:27 - translate function inside the transform
551:30 - CSS property in order to move a
551:32 - particular HTML element to the specified
551:35 - position over here guys apart from this
551:37 - we also have something called as rotate
551:39 - which rotates an element clockwise or
551:42 - counterclockwise according to the given
551:44 - degree so guys let us check this as well
551:46 - with the help of example so over here
551:48 - instead of translate what we are going
551:50 - to do is on over of this particular diff
551:52 - tag simply we are going to use the
551:54 - rotate function over here and then guys
551:57 - what it is expecting is it is expecting
551:59 - the angle in terms of degrees so let's
552:01 - say we have 20° over here by which this
552:03 - particular HTML element that is the diff
552:06 - tag which is a square box should rotate
552:08 - and it will rotate in the clockwise
552:10 - Direction by default so guys let me just
552:12 - save this file now and try reloading
552:14 - this page once again on the browser so
552:16 - when the user gets the cursor on this
552:18 - particular box as you can see it has
552:20 - rotated on the right with the help of
552:22 - the 20° that we had provided inside the
552:25 - rotate function so guys in this way the
552:27 - rotate function works over here let us
552:29 - increase the angle as well so if we
552:32 - increase it by 45° let me just save this
552:34 - file now and try reloading this page so
552:36 - as you can see it is rotating by 45°
552:39 - over here in the clockwise Direction
552:41 - guys we can also change the direction
552:43 - that is we can rotate it in the
552:45 - counterclockwise direction as well so
552:47 - what we have to do is instead of having
552:49 - the positive number we should have the
552:51 - negative number and provide the the
552:53 - angle so let's say this time we provide
552:55 - -20° so let me just save this file now
552:58 - and try reloading this page so if you
553:00 - notice it is now rotating itself in the
553:02 - counterclockwise Direction over here
553:04 - with the help of the negative angle that
553:06 - we have provided guys apart from this we
553:09 - also have something called a scale
553:10 - function which increases or decreases
553:13 - the size of an element so guys let us
553:15 - check this as well so again inside the
553:17 - over Udo class over here we have to use
553:20 - the scale function in this case so guys
553:22 - basically this is the function that we
553:24 - are going to use and simply we need to
553:26 - provide the number by which we want to
553:28 - increase the width and height of this
553:30 - particular HTML element so guys simply
553:32 - if we provide 1 comma 1 so over here
553:35 - there will be no change because this is
553:37 - the original scaling of the HTML element
553:40 - let me just save this file now Ander try
553:42 - reloading this page so as you can see
553:44 - when we get the cursor over here on the
553:46 - div element there is no change right now
553:48 - but the moment we increase this number
553:50 - so let's say we increase it to 1.5 over
553:52 - here here as the width and 1.5 as the
553:55 - height of the HTML element so let me
553:57 - just save this file now and try
553:59 - reloading this page once again on the
554:00 - browser and when we get the cursor over
554:02 - here as you can see it has scaled to 1.5
554:05 - times the width and the height of the
554:07 - original diff tag that we had defined so
554:10 - guys in this way you can scale up the
554:12 - HTML element that you want to scale by
554:15 - using this particular CSS function guys
554:17 - apart from this you can also decrease
554:19 - the size as well so any number lower
554:22 - than one in this case we decrease the
554:24 - size of the HTML element so let's say we
554:26 - change the number to 0.8 over here as
554:29 - the width and height in this case let me
554:31 - just save this file now and try
554:32 - reloading this page so now if we get the
554:34 - cursor on this div tag as you can see it
554:37 - is decreasing the size and the width and
554:39 - height is decreasing over here if you
554:41 - simply want to decrease the width so
554:42 - what we can do is we need to keep the
554:44 - height as zero in this case let me just
554:46 - save this file now and try reloading
554:48 - this so guys based on your project
554:50 - requirements you can scale up or scale
554:51 - down the HTML Elements by providing the
554:54 - units that you want to provide inside
554:57 - the CSS function that is scale in this
554:59 - case guys apart from this we also have
555:01 - something called as scale X and scale Y
555:04 - which will be scaling the width and
555:06 - height respectively for that particular
555:08 - HTML element so guys I'll leave this up
555:10 - to you as a homework for you so that you
555:12 - can practice on your own and understand
555:15 - these CSS functions more clearly guys
555:17 - apart from this we have something called
555:19 - a skew as well so it skews an element so
555:22 - basically it skew an element along the X
555:24 - and the Y AIS by the given angles so
555:27 - guys let us check this as well so over
555:28 - here what we have to do is instead of
555:30 - the scale function we will use the skew
555:33 - function this time and let's say we
555:35 - provide 10° as the x-axis first of all
555:38 - let us check how the xais Q will work so
555:40 - let me just save this file now and try
555:42 - reloading this page once again on the
555:44 - browser so this is the original position
555:46 - of the diff tag and the moment we get
555:48 - the cursor as you can see it has changed
555:50 - its position so this is the function
555:53 - ality of the skew function that we have
555:55 - provided and the angle is 10° over here
555:57 - by the x-axis and then guys again if we
556:00 - want the skew to be applied on the Y AIS
556:02 - as well simply we are going to say 20°
556:05 - for the Y AIS component over here let me
556:07 - just save this file now and try
556:09 - reloading this page once again on the
556:11 - browser and when we get the cursor over
556:13 - here as you can see the x-axis is having
556:15 - this que of 10° in this case and the Y
556:18 - AIS as you can see from this top left to
556:21 - the right over here this part Direction
556:23 - This is the skew of the Y AIS in this
556:26 - case and it is 20° in terms of angle so
556:29 - guys in this way you can provide the
556:30 - skew CSS function based on your project
556:33 - requirement guys apart from this you
556:35 - have something called as skew X and skew
556:37 - y as well which will skew along the
556:39 - x-axis and y- axis respectively which we
556:42 - have already discussed with the help of
556:43 - this particular diagram previously so
556:46 - this is the x axis in the horizontal
556:48 - Direction and this is the y- axis in the
556:50 - vertical direction as far as two
556:52 - dimensional directions are concerned now
556:54 - guys apart from this we also have
556:56 - something called as Matrix function
556:58 - which will help us in order to provide
557:00 - the numbers for all the functions that
557:02 - we have seen so far so guys this is the
557:04 - sequence that you must follow first of
557:06 - all we can provide the scale X number
557:09 - that we want to mention based on the
557:10 - requirements and Then followed by skew Y
557:13 - and then skew X and then we have the
557:14 - scale Y and then we have translate X
557:17 - followed by Translate Y so guys let us
557:19 - check this example as well so we have
557:21 - the example Matrix function over here so
557:24 - the first parameter is one which means
557:26 - the scale X will be one in this case so
557:28 - basically it is not going to scale since
557:30 - we have provided one number over here so
557:33 - simply we can increase the scale value
557:35 - to 1.2 this time and then we have q y
557:38 - which is negative number SK X will not
557:40 - be implemented since it is zero and then
557:42 - again we have scale Y which we should
557:44 - increase over here to 1.2 once again and
557:47 - there is no translate X and Translate Y
557:49 - since we have provided the numbers as
557:51 - zero over here so guys let me just copy
557:53 - this line of code and paste it for this
557:55 - particular transform CSS property so
557:58 - what will happen let us check this as
558:00 - well so let me just save this file now
558:01 - and try reloading this page once again
558:03 - on the browser notice that we have
558:05 - provided the scale X and scale y values
558:08 - and also the Q X is in negative
558:10 - Direction over here so when we get the
558:12 - cursor on this particular diff tag as
558:14 - you can see the size of the diff tag
558:16 - that is a square box is increasing and
558:18 - this Q value of the 0.3 is helping us in
558:22 - in order to tilt the square box in a
558:25 - particular direction over here guys
558:26 - apart from this we can also have the
558:28 - translate X and Translate Y numbers as
558:30 - well so what we will do is let's say we
558:32 - provide 100 pixels over here as
558:34 - translate X and 100 pixels as Translate
558:37 - Y so basically the Box should come
558:39 - somewhere over here on the bottom right
558:41 - so let us check that as well so when we
558:43 - reload this page and when we get the
558:45 - cursor over here as you can see the
558:47 - square box is coming down over here on
558:49 - the right hand side in this case so guys
558:51 - in this way you can provide the The
558:53 - Matrix CSS function in order to provide
558:55 - the multiple values for all the
558:57 - functions that we have discussed so far
558:59 - which belongs to the transform CSS
559:01 - property so guys comment in the comment
559:03 - section below whether you have learned
559:05 - something out of this video please make
559:07 - sure that you like this video so that it
559:08 - reaches to more people and subscribe to
559:10 - this channel so that you get the
559:11 - notifications on upcoming videos as well
559:14 - the next video that we are going to talk
559:15 - about is 3D transform property in CSS so
559:19 - stay tuned so now we will see 3D trans
559:22 - transform property in CSS so guys
559:25 - basically the CSS also supports 3D
559:27 - Transformations by specifying the Xs and
559:30 - this we are going to check with the help
559:32 - of examples as well we are going to see
559:34 - the different CSS functions that are
559:36 - used with the help of the transform
559:38 - property so guys over here we have
559:40 - something called as rotate X then we
559:42 - have rotate Y and rotate Zed as well so
559:45 - guys let us check this with the help of
559:47 - examples in vs code over here so simply
559:49 - I'm going to remove the previous lines
559:51 - of code that we had written we are going
559:53 - to write them once again so that you get
559:55 - the practice of writing the code in the
559:57 - HTML and CSS over here so guys simply we
560:00 - are going to have the diff tag over here
560:02 - once again and for this diff tag we are
560:05 - going to have fixed width and height so
560:07 - guys let's say we have the width as 150
560:10 - pixels over here and the same 150 pixels
560:13 - for the height attribute as well that is
560:15 - the height CSS property so guys over
560:17 - here we have width and height of 150
560:19 - pixels let us have the background color
560:22 - of EO aqua color this time so basically
560:24 - we have the aqua color is the background
560:26 - color for this particular diff tag which
560:28 - will be a square shaped diff tag over
560:30 - here and apart from this we will also
560:32 - have the Border CSS property the Border
560:35 - width is two pixels and the Border style
560:37 - is solid and the Border color is black
560:40 - color over here so guys let me just save
560:42 - this file now and try reloading this
560:43 - page once again on the browser so as you
560:46 - can see we have this Square shaped div
560:48 - element in this case guys apart from
560:50 - this let us get this square at the
560:52 - center of the screen so over here we
560:54 - will provide the margin as Auto for the
560:56 - left and right margin and for the top
560:58 - margin we will provide the 10% of margin
561:01 - in this case let me just save this file
561:03 - now and try reloading this page so as
561:05 - you can see to some extent we have CAU
561:07 - this square box at the center of the
561:09 - screen now guys let us see how this
561:11 - rotate X function will work with the
561:13 - help of the transform property so guys
561:15 - over here what we want to do is inside
561:17 - the style. CSS file when we get the
561:20 - cursor on this particular D tag we want
561:22 - to rotate it so let us check that how we
561:25 - can do it so basically we have to use
561:27 - the diff tag followed by colon and then
561:29 - we are going to use the H hudo class
561:32 - over here and on Hover we are going to
561:34 - use the transform CSS property for which
561:37 - we are going to use the rotate function
561:39 - now guys previously we had seen the 2D
561:41 - transform properties which included
561:44 - rotate function over there but now we
561:46 - have the different rotate functions in
561:48 - terms of 3D transformation so we have so
561:51 - we have rotate X X we have rotate Y and
561:54 - we have rotate Zed which is expecting
561:56 - certain angles over here so guys let us
561:58 - see how this rotate X will work so let
562:00 - us say we provide certain angle in this
562:02 - case so we provide 30° in this case so
562:06 - let me just save this file now and try
562:08 - reloading this page once again on the
562:09 - browser so as you can see this is the
562:11 - original position of the diff tag and
562:13 - the moment we get the cursor on this
562:15 - particular diff tag the diff tag is
562:17 - rotating itself so basically we are
562:19 - seeing that the size of the diff tag is
562:21 - decreasing that is the height is
562:23 - decreasing over here but guys in reality
562:26 - the square box is rotating itself with
562:28 - the help of the x-axis over here so guys
562:30 - if you remember in the previous video we
562:33 - understood the x-axis and the y axis
562:35 - when we were learning the 2D
562:37 - transformation but this time we are
562:39 - going to learn 3D transformation over
562:41 - here so what exactly is happening in
562:43 - this case is so this was the screen that
562:45 - we had seen previously let us remove
562:47 - this and we are going to have the square
562:50 - that we had just drawn on the web
562:51 - browser so basically we have this square
562:54 - box that we have drawn on the web
562:56 - browser over here let me just change the
562:58 - color to some other color so let's say
563:00 - we have yellow color over here now guys
563:02 - what exactly is happening is when we say
563:04 - rotate X basically this is the x-axis in
563:07 - the horizontal Direction so when we are
563:09 - rotating this particular box with the
563:11 - help of the x-axis so the height of this
563:15 - particular diff tag is decreasing over
563:17 - here but basically in reality it is not
563:19 - decreasing but the box is rotating
563:22 - itself in this x-axis and that is why it
563:25 - is looking like the height is decreasing
563:27 - over here so guys in this way the rotate
563:29 - X will work that is the HTML element
563:31 - will rotate itself in the x-axis
563:34 - Direction now similarly when we use the
563:36 - Y AIS over here that is using the rotate
563:39 - y so you will see that the width of this
563:41 - particular square box will decrease to
563:43 - some extent when we use the rotate y so
563:45 - guys let us check that as well so over
563:47 - here we are going to say rotate y this
563:50 - time and then let's say we use the same
563:52 - angle that is 30° over here so simply we
563:55 - provide 30 deeg that is the unit let me
563:58 - just save this file now and try
564:00 - reloading this page once again on the
564:01 - browser and when we get the cursor over
564:03 - here as you can see the square box is
564:06 - rotating itself with the help of the Y
564:08 - AIS this time and it looks like the
564:10 - width of this particular square box is
564:12 - decreasing but in reality it is rotating
564:15 - itself with the help of this y AIS over
564:17 - here so guys in this way the rotate X
564:19 - and rotate y will work now guys apart
564:21 - from this we also have something called
564:23 - as rotate Zed so how this will work so
564:26 - guys in 3D transformation we have
564:28 - another axis that is Zed AIS over here
564:31 - which is coming on top from the center
564:33 - over here so guys if I draw this
564:35 - particular Z axis it will look something
564:37 - like this over here and we draw the Z
564:39 - AIS so basically it will start from the
564:41 - center that is the origin and it will
564:43 - come on top so guys basically it will
564:45 - look something like this over here so
564:47 - this is the Z AIS as far as the 3D
564:50 - transformation is concerned so guys over
564:52 - here here when we rotate in terms of Z
564:54 - AIS it will actually look like the
564:56 - square bracket is rotating itself as
564:58 - normal rotation so guys let us check
565:00 - this as well so basically what will
565:02 - happen is this Square will be displayed
565:04 - over here and in terms of Z AIS it will
565:07 - rotate itself in the clockwise Direction
565:10 - in this way so guys let us check this
565:11 - with the help of example over here so
565:13 - instead of rotate y we will say rotate Z
565:16 - this time and then we will also provide
565:18 - 30° as the value over here so simply we
565:21 - are going to provide 30° let me just
565:24 - save this file now and try reloading
565:25 - this page and when we get the cursor
565:27 - over here on the square box that is a
565:29 - diff element as you can see it is
565:31 - rotating itself and 30° is the rotation
565:34 - so guys in this way the Z AIS rotation
565:36 - will work it will look like it is
565:38 - actually rotating and that is how the Z
565:40 - AIS rotation Works guys apart from this
565:42 - we also have the translate X and
565:44 - Translate Y and the translate Z as well
565:47 - so let us check that as well with the
565:49 - help of examples so over here simply we
565:51 - are going to provide translate X in this
565:54 - case and let's say we provide 100 pixels
565:56 - over here as the value so guys basically
565:58 - the square box should go on the right
566:01 - hand side by 100 pixels over here when
566:03 - we say translate X so let us check this
566:05 - as well let me reload this page once
566:07 - again on the browser and when we get the
566:09 - cursor on this diff tag as you can see
566:12 - the box is going on the right hand side
566:14 - by 100 pixels over here and this is how
566:16 - the translate X will work guys apart
566:18 - from this we also have something called
566:20 - as Translate Y so this time the square
566:23 - box should come down over here by 100
566:25 - pixels so let us check that as well so
566:27 - let me just save this file now and try
566:29 - reloading this page so when we get the
566:31 - cursor over here as you can see the box
566:33 - is coming down by 100 pixels and that is
566:36 - how the Translate Y will work based on
566:38 - the X's that we have seen over here and
566:41 - then guys apart from this we also have
566:42 - something called as translate Zed as
566:44 - well so guys over here translate Z will
566:47 - make the box to come on top by 100
566:50 - pixels so guys it will be on the same
566:52 - position if we are viewing it from top
566:55 - so let me just reload this page so if we
566:57 - get the cursor over here we won't be
566:59 - able to see any change right now but
567:02 - actually it is at the ground and from
567:04 - the ground it is coming at the height of
567:06 - 100 pixels over here on that same
567:08 - position because that is how the Zed AIS
567:11 - will work as we have seen over here in
567:13 - this particular diagram so guys in this
567:15 - way you can provide the translate in all
567:17 - the X's as well and we can also provide
567:20 - the other functions related to scale as
567:22 - well so guys let us check this as well
567:24 - with the help of a example over here so
567:26 - let us provide the scale X this time and
567:29 - we will provide 1.2 as the number by
567:32 - which the square box will increase its
567:34 - size with the help of x-axis so let me
567:37 - just save this file now and try
567:38 - reloading this page once again on the
567:40 - browser so when we get the cursor on
567:42 - this particular diff tag as you can see
567:44 - on the x-axis direction that is the
567:46 - width of this particular square box is
567:48 - increasing and now it is becoming a
567:50 - rectangle so guys basically this div tag
567:52 - is increasing its width with the help of
567:54 - the 1.2 value that we have given over
567:57 - here if we want to double the width then
567:59 - we can simply provide the value of two
568:01 - for the scale X function so let me just
568:04 - reload this page once again so as you
568:06 - can see this is the double width of the
568:08 - original width of the diff tag and then
568:10 - guys apart from this we can also provide
568:12 - the scale Y which will help us in order
568:14 - to increase the height over here when we
568:17 - reload this page as you can see it is
568:19 - increasing the height of the sff tag in
568:21 - terms of Y AIS over here and when we say
568:24 - scale Zed so let us check that as well
568:26 - so over here when we provide scale Zed
568:28 - this time so let me just save this file
568:30 - now and try reloading this page you
568:31 - won't be able to see any change that's
568:33 - because we are scaling it in the bottom
568:36 - to top Direction over here when we see
568:38 - the box from the top so guys basically
568:40 - this is the importance of the Zed AIS
568:42 - that is the third axis as far as the 3D
568:45 - transformation is concerned and you can
568:47 - use all these CSS functions by using the
568:50 - transform CSS property based on
568:52 - requirements so guys comment in the
568:53 - comment section below whether you have
568:55 - learned something out of this video
568:56 - please make sure that you like this
568:58 - video so that it reaches to more people
569:00 - and subscribe to the channel so that you
569:02 - get the notifications on upcoming videos
569:04 - as well the next video that we are going
569:05 - to talk about is transition property in
569:08 - CSS so stay tuned so now we will see
569:12 - transition property in CSS so guys
569:14 - basically the CSS transition allows you
569:17 - to change the property values smoothly
569:20 - over a given duration so guys so far we
569:23 - have seen how we can transform a
569:25 - particular HTML element with the help of
569:28 - the translate rotate or the scale
569:31 - functions inside the CSS but guys those
569:33 - changes were made in such a way that
569:36 - there was no smooth transitioning over
569:38 - here so guys for example if I show you
569:41 - over here if we see the translate X
569:44 - function and let's say we provide 50
569:46 - pixels of translate X over here so
569:48 - basically what will happen is it is
569:51 - directly moving on the right hand side
569:53 - by 50 pixels and there is no smooth
569:55 - transitioning that is happening from the
569:58 - original position to the Target position
570:00 - over here so guys we will check the
570:02 - entire HTML and the CSS code with the
570:05 - help of example and we are going to make
570:07 - the smooth transition that will work
570:09 - over here so guys what we will do is
570:11 - simply I'm going to remove the previous
570:12 - lines of code that we had written in the
570:15 - HTML and the CSS files over here we are
570:18 - going to start from scratch and we are
570:20 - going to see how the transition will
570:22 - work so basically in order to create a
570:24 - transition effect you must specify two
570:27 - things so what are those two things so
570:29 - the very first important thing is the
570:31 - CSS property you want to add an effect
570:34 - to and the second important thing is the
570:36 - duration of the effect so guys we will
570:38 - check the example now over here we are
570:40 - going to increase the width smoothly in
570:43 - 2 seconds for a particular HTML element
570:46 - so guys over here inside the body tag
570:48 - simply we are going to have the D tag
570:51 - over here and for this div tag let us
570:53 - Define certain CSS properties so let's
570:56 - say we have the width of 100 pixels and
570:59 - the height as well of 100 pixels over
571:01 - here so basically we are going to have
571:03 - the square box with the help of this
571:05 - drift tag and apart from this let us
571:07 - also provide the border of two pixels
571:10 - with the black color in this case so
571:12 - basically we have the Border style is
571:13 - solid and the Border color is black now
571:16 - guys apart from this let us also have
571:17 - the background color as yellow color
571:20 - this time and also we will get get this
571:22 - div HTML element at the center of the
571:24 - screen so basically we are going to use
571:26 - the margin equal to Auto so this will
571:29 - get the div tag at the center of the
571:31 - screen as far as the horizontal
571:33 - direction is concerned and for the
571:34 - vertical Direction let's say we provide
571:37 - the top margin as 15% over here so let
571:40 - me just save this file now and try
571:41 - reloading this page once again on the
571:43 - browser so as you can see this is the
571:45 - square diff tag that we can see right
571:47 - now so guys what we will do is let's say
571:49 - we want to rotate this particular left
571:52 - tag by 45° so simply we can use the
571:55 - transform property that we had used
571:57 - previously and we can say rotate by 45°
572:01 - over here so basically the value that we
572:03 - have provided is 45 D EG which stands
572:06 - for degrees let me just save this file
572:08 - now and try reloading this page once
572:10 - again on the browser so as you can see
572:12 - it is rotated by 45° what we will do is
572:15 - we will apply the CSS property on Mouse
572:18 - over so basically we want to use the
572:20 - diff tag followed by colon and then we
572:23 - will use the codo class that is hover so
572:25 - we are going to paste this transform
572:27 - property so when the user gets the mouse
572:30 - that is the cursor on this particular
572:32 - diff tag then only the transform
572:34 - property should be applied so guys let
572:36 - me just save this file now and try
572:38 - reloading this page so as you can see
572:39 - this is the original position and when
572:41 - the user gets the mouse on this
572:43 - particular diff tag it is rotating
572:45 - itself but guys if you notice there is
572:47 - no smooth rotation over here basically
572:50 - from the original position it is getting
572:52 - the target position that is rotated at
572:54 - the 45° over here without any smooth
572:57 - transitioning so we are going to apply
572:59 - the smooth transition with the help of
573:01 - the transition property inside CSS so we
573:05 - must have the two important things so
573:07 - first of all the CSS property that we
573:09 - want to use so in this case we are going
573:12 - to have the transform CSS property and
573:14 - Then followed by the duration of the
573:16 - effect so guys basically how do we do
573:18 - that so inside the diff tag over here
573:21 - simply we have to use the transition CSS
573:24 - property this time and the very first
573:26 - parameter will be the CSS property that
573:28 - we want to use so in this case it is
573:30 - going to be transform over here and then
573:33 - followed by the space character and
573:34 - let's say we want to rotate it in 2
573:37 - seconds and not instantly as it is
573:39 - happening by default so guys over here
573:41 - simply we have to provide 2 s which
573:43 - stands for 2 seconds over here let me
573:45 - just save this file now and try
573:47 - reloading this page once again over here
573:49 - so with the help of this particular CSS
573:51 - property property what will happen is
573:53 - this diff tag that is the square box
573:55 - will rotate itself with the help of the
573:57 - 45° but this will happen in 2 seconds so
574:00 - it will look like a smooth rotation over
574:03 - here so let me just reload this page one
574:05 - again and when we get the mouse cursor
574:07 - on this diff tag as you can see it is a
574:09 - smooth rotation that is happening over
574:11 - here and when we get the mouse cursor
574:13 - away from this diff tag again it is a
574:15 - smooth transition that is rotation
574:18 - towards its original position over here
574:20 - so guys in this way this is the
574:22 - transition CSS property that we can use
574:24 - in order to provide the smooth rotation
574:27 - or any of the properties that we want to
574:29 - implement in a smooth way so guys let us
574:32 - check another example over here we can
574:34 - also add the multiple properties to the
574:36 - transition so guys notice that we also
574:39 - have another property that is width over
574:41 - here which is 100 pixels so let's say
574:43 - during this transform that is the
574:45 - rotation we also want to increase the
574:47 - width to 200 pixels over here so what we
574:50 - can do is simply we can provide comma
574:52 - after this 2 seconds and we have to
574:54 - provide the CSS property that we want to
574:57 - change that is width in this case and
574:59 - let's say with that same duration of 2
575:01 - seconds we want to increase the width
575:03 - now guys how much we want to increase
575:05 - the width that we need to provide on
575:07 - this hover property over here so
575:09 - basically we want to change the width to
575:12 - 200 pixels this time which is the double
575:15 - value of this 100 pixels which is the
575:17 - original width of the square box so guys
575:19 - let me just save this file now and try
575:21 - read reloading this page once again on
575:23 - the browser so now when we get the
575:25 - cursor on this particular square box
575:27 - what will happen is the transform will
575:29 - happen in 2 seconds which will rotate
575:31 - the box and also it is going to increase
575:33 - the width within 2 seconds over here to
575:36 - 200 pixels simultaneously so both these
575:39 - things will happen simultaneously over
575:41 - here in the span of 2 seconds in this
575:43 - case so let me just reload this page
575:45 - once again on the browser and when we
575:47 - get the cursor over here so as you can
575:49 - see in 2 seconds the square box got
575:51 - rotated to 45° as well and apart from
575:54 - that the width also increased to 200
575:57 - pixels and now it is a rectangle that we
576:00 - can see and when we get the mouse cursor
576:02 - away from this HTML element as you can
576:04 - see it is coming back to its original
576:06 - position over here so guys in this way
576:09 - we can apply the multiple transition
576:11 - properties over here and we need to
576:13 - provide the values to these CSS
576:15 - properties over here on the hover or any
576:18 - other condition that you want to
576:20 - implement based on the project
576:22 - requirement so guys apart from this we
576:24 - can also have the transition timing
576:26 - function property which is another
576:28 - property that you can mention over here
576:30 - so guys basically menu type transition
576:32 - as you can see this is the CSS property
576:34 - over here that is the timing function so
576:37 - we have multiple values that you can use
576:39 - over here so basically when we provide
576:40 - the value of e it will start slowly and
576:43 - then in between it will move faster and
576:46 - then in the end the transition will end
576:48 - slowly so guys let me just save this
576:50 - file now and try reloading this page
576:52 - once again on the browser when we get
576:53 - the cursor over here as you can see in
576:55 - the middle it was very fast and at the
576:57 - start and at the end it was very slow
577:00 - over here so guys this is the meaning of
577:02 - e value in this case we can also provide
577:05 - linear in which case the speed of the
577:07 - transition will be same throughout the
577:09 - span so guys over here there will be no
577:12 - slow start or slow end so let us check
577:15 - that as well so when we reload this page
577:17 - as you can see this is the linear
577:18 - transition that we can see over here so
577:21 - guys you can check out the other values
577:22 - for this particular transition timing
577:24 - function as you can see these are the
577:27 - list of suggested values over here and
577:29 - then guys apart from this we also have
577:31 - something called as transition delay
577:33 - which will help us in order to delay the
577:35 - transition so guys let us check that as
577:37 - well so over here what we are going to
577:39 - do is simply I'll comment out this line
577:41 - of code and basically we are going to
577:43 - have this transition delay CSS property
577:46 - so guys basically it is going to delay
577:48 - the transition so let's say we provide 2
577:50 - seconds of delay so basically the
577:52 - transition is not going to start up to 2
577:55 - seconds and then after that the
577:56 - transition will start that we have
577:58 - already mentioned over here so let me
578:00 - just save this file now and when we
578:02 - reload this page once again on the
578:04 - browser and let's get the cursor over
578:06 - here so 1 2 so after 2 seconds the
578:09 - transition is happening over here and
578:10 - when we get the cursor away again after
578:13 - 2 seconds the transition will occur in
578:15 - such a way that the HTML element will go
578:18 - back to its original position so guys in
578:20 - this way you can also provide the
578:22 - transition delay based on the project
578:24 - requirements where you want to delay the
578:26 - transition for that particular HTML
578:28 - element guys while doing so can we
578:30 - change the background color as well so
578:32 - let us check that as well so what we
578:34 - will do is over here let us remove the
578:36 - delay as well and after this width we
578:39 - are going to provide the background
578:41 - color property as well and within 2
578:44 - seconds we want to change so the
578:45 - original color is the yellow color over
578:48 - here let us change the color to some
578:50 - other value so let's say we have the
578:52 - background color as aqua color this time
578:54 - so guys we are moving from yellow color
578:56 - to the aqua color and within the span of
578:58 - 2 seconds over here the color should
579:00 - change so guys let me just save this
579:02 - file now it will be a gradual change if
579:04 - you can see so let me just reload this
579:07 - page once again on the browser so when
579:09 - we get the cursor over here as you can
579:11 - see the color is also changing to Aqua
579:13 - gradually from yellow to Aqua and then
579:16 - when we get the cursor back from this
579:18 - particular rectangle right now that is
579:20 - the h HTML element the color should
579:23 - change back from Aqua to Yellow so guys
579:25 - over here as you can see gradually it is
579:27 - also changing the background color so
579:30 - guys whatever CSS properties that you
579:32 - want to change you need to provide
579:34 - inside the transition CSS property and
579:37 - then apart from that you have to provide
579:39 - the time duration during which the CSS
579:42 - property should get updated over here
579:44 - and the final value should be applied
579:47 - and when that CSS property will update
579:49 - its value the transition will be be
579:51 - applied to the HTML element we can also
579:54 - have the different timings over here as
579:55 - well so let's say we want to finish the
579:57 - background color transition within 1
579:59 - second so we have provided 1 second over
580:02 - here let me just save this file now and
580:03 - try reloading this page once again on
580:05 - the browser so now if you notice the
580:07 - aqua color has completed its transition
580:10 - within 1 second over here and this is
580:12 - the way that you can provide the
580:14 - different times for the transition that
580:16 - you have applied for the transition CSS
580:18 - property so guys comment in the comment
580:20 - section below whether you have learned
580:21 - something out of this video please make
580:23 - sure that you like this video so that it
580:25 - reaches to more people and subscribe to
580:27 - this channel so that you get the
580:28 - notifications on upcoming videos as well
580:31 - the next video that we are going to talk
580:33 - about is animations in CSS so stay
580:37 - tuned so now we will see animations in
580:40 - CSS so guys basically an animation lets
580:43 - an element gradually change from one
580:45 - style to another style and this we are
580:48 - going to check with the help of examples
580:49 - as well you can change as many CSS
580:52 - properties as you want and as many times
580:55 - you want so guys basically in order to
580:57 - use the CSS animation you must first
581:00 - specify some key frames for the
581:02 - animation so what are these key frames
581:04 - so guys basically the key frames hold
581:06 - what styles the element will have at
581:09 - certain times and the Styles will
581:11 - transition from one particular style to
581:13 - another style for the element that we
581:15 - are going to select so guys let us check
581:17 - the examples of the animation so first
581:19 - of all we will see at the key frames
581:22 - keyword that we can use in the CSS file
581:25 - over here so guys let us move to the vs
581:27 - code in this case and let me just remove
581:29 - the previous lines of code that we had
581:31 - written in the HTML and the CSS files
581:34 - over here now guys what we are going to
581:36 - do is simply we will have the div tag
581:38 - over here and we are going to create a
581:40 - square box out of this div tag so guys
581:43 - over here in the style. CSS file simply
581:46 - we are going to provide certain CSS
581:48 - properties to this div tag so let us say
581:50 - we have the width of 100 pixels over
581:53 - here also the height of 100 pixels in
581:55 - this case and let's say we have the
581:57 - background color of aqua over here so
581:59 - guys basically we have a diff tag which
582:01 - is a square box with the background
582:03 - color that is aqua so guys let me just
582:05 - save these files now and let us see how
582:07 - it looks like on the web browser so as
582:09 - you can see this is the square box that
582:11 - we have included on our HTML page now
582:13 - guys let us have the Border as well so
582:15 - over here we will have the Border CSS
582:17 - property with two pixels width and the
582:19 - Border type as and the Border color will
582:22 - be black in this case so let me just
582:24 - save this file now and try reloading
582:26 - this page so we have the border for the
582:28 - square box over here now guys let us say
582:30 - we want to move the square box from left
582:33 - hand side to somewhere over here at the
582:35 - middle of the screen so how we can do
582:37 - that so guys basically we can use the
582:39 - animation that is with the help of key
582:41 - frames keyword in order to animate the
582:44 - square box and move from one position to
582:46 - another so guys let us check that as
582:48 - well so over here what we have to do is
582:50 - first first of all we will have to use
582:52 - the at theate character and then we need
582:55 - to use the key frames over here so guys
582:57 - basically this is the key frames keyword
582:59 - that will be used in order to provide
583:02 - the animations in CSS now guys after
583:04 - this key frame we need to provide
583:06 - certain name to the animation so let us
583:08 - say we provide the animate name over
583:10 - here and then after this inside the
583:12 - curly braces we need to define the
583:14 - animation inside the from and two
583:16 - keywords so guys let us say we want to
583:19 - move from left to right over here so
583:21 - simply we can use the left CSS property
583:24 - in order to mention the position of the
583:26 - box so guys over here first of all we
583:28 - need to define the position equal to
583:30 - relative property so that we can use the
583:33 - left CSS property over here so inside
583:35 - the from keyword we need to First Define
583:38 - the left it is equal to 0 pixels over
583:40 - here and then guys after this we have
583:42 - something called as two keyword so over
583:44 - here we can simply provide the left as
583:47 - 300 pixels so guys basically what
583:49 - exactly is happening over here is the
583:51 - initial position of this particular div
583:54 - should be left equal to 0 pixels and
583:56 - then it should move to the left which
583:58 - must be equal to 300 pixels now guys we
584:01 - need to link this animation name that is
584:03 - animate with this diff tag over here so
584:06 - simply I'm going to copy this animated
584:08 - name and then inside the diff tag we
584:11 - need to use the animation name CSS
584:13 - property so guys basically we need to
584:15 - provide the animation name CSS property
584:18 - the value must be equal to the value
584:20 - that we have Pro provided for this key
584:22 - frames over here so we have provided the
584:24 - animate as the value for the animation
584:26 - name and apart from this we also have to
584:29 - set the animation duration over here so
584:31 - let's say we want to move this box
584:33 - within 2 seconds so simply we can
584:35 - provide the value as 2 seconds over here
584:38 - so let me just save this file now and
584:39 - try reloading this page once again on
584:41 - the browser so when we reload as you can
584:44 - see the box is moving from left to right
584:47 - over here so guys in this way we can
584:48 - simply provide certain animations that
584:51 - we have seen over here with the help of
584:53 - the key frames keyword now guys apart
584:55 - from this you can also use the
584:57 - percentages instead of from and two
584:59 - keyword which is the starting and the
585:01 - ending position so instead of from we
585:04 - can provide 0% which is the starting
585:06 - position and instead of two keyword we
585:08 - can provide 100% that is the ending
585:11 - position of the box over here so let me
585:13 - just save this file now and try
585:15 - reloading this page once again on the
585:16 - browser so as you can see there is no
585:19 - change in the animation the Box is still
585:21 - moving from left to right over here now
585:23 - guys apart from this since we have
585:25 - provided the percentages we can also
585:28 - provide the 50% or any other number that
585:31 - we want to provide so let's say for the
585:33 - first 50% we want to move from left to
585:36 - right over here so we have provided 50%
585:39 - in this case and then we want to define
585:41 - the 100% as well in which case we want
585:44 - to move the box from top to bottom over
585:46 - here somewhere at the center of the
585:48 - screen so guys what we will do is
585:50 - instead of 50% over here we will provide
585:52 - 100% so from 0 to 50% the box is moving
585:56 - from left to right and then for the 100%
585:59 - we want the top CSS property to be
586:01 - provided so guys over here simply we can
586:04 - provide the top CSS property and let's
586:06 - say we want 200 pixels value from the
586:09 - top so let me just save this file now
586:11 - and try reloading this page once again
586:13 - on the browser so as you can see the box
586:15 - is coming from left to right but guys it
586:17 - is not going from top to bottom properly
586:20 - so let us Define the top property for
586:22 - the 0% and the 50% parameters as well so
586:26 - over here the top CSS property must be
586:28 - zero and for the 50% as well the top CSS
586:31 - property must be zero in this case now
586:34 - let me just save this file now and try
586:36 - reloading this page once again on the
586:37 - browser so as you can see the box is now
586:40 - moving from left to right and then it is
586:42 - going from top to bottom over here so
586:45 - guys in this way we have completed this
586:47 - particular animation as well let us
586:49 - complete the entire cycle let's say now
586:51 - we want the box to move from left to
586:53 - right and then from right to bottom and
586:56 - then from bottom back to the original
586:58 - position over here so guys what we have
587:00 - to do is we need to make this as 33%
587:03 - over here and then the next step will be
587:05 - 66% and then the last step should be
587:08 - 100% in this case for which the Box
587:10 - should come at the original position
587:12 - over here so guys simply we will Define
587:14 - this particular position for the 100% as
587:17 - well so I'm going to copy the same line
587:19 - of code over here let me just save this
587:21 - file now and try reloading this page
587:23 - once again on the browser so as you can
587:25 - see it is coming from left to right and
587:27 - then going from top to bottom and then
587:30 - from bottom to top as well at the top
587:32 - left position over here so guys in this
587:34 - way we have completed the animation we
587:37 - can also increase the duration to let's
587:39 - say 4 seconds over here so that the
587:41 - speed of the animation is little bit
587:42 - slow so as you can see this is the
587:44 - animation that you can do with the help
587:47 - of the key frames keyword over here now
587:49 - guys there are some more CS properties
587:51 - that you can use we have already used
587:53 - the animation name and the animation
587:55 - duration over here we can also provide
587:57 - the animation delay in this case so guys
588:00 - basically what is the meaning of
588:01 - Animation delay over here so let us
588:03 - check that as well so when we provide
588:05 - the animation delay of let's say 2
588:07 - seconds so there will be a delay of 2
588:10 - seconds first of all after which the
588:12 - animation will start based on the CSS
588:15 - properties that we have defined inside
588:17 - this particular block of code so guys
588:19 - let me just save this file now and try
588:21 - reloading this page once again on the
588:23 - browser so as you can see there will be
588:24 - delay of 2 seconds after which the box
588:27 - has started to move over here so guys in
588:29 - this way you can use the animation delay
588:31 - as well apart from this we also have the
588:33 - animation iteration count which will
588:35 - help us in order to repeat the animation
588:38 - so guys by default the animation
588:40 - iteration is just one count over here so
588:42 - we can make it as two count as well so
588:45 - the animation will occur twice so let me
588:47 - just save this file now and try
588:49 - reloading this page once again again on
588:51 - the browser over here so as you can see
588:53 - after the delay the animation has
588:54 - started so it has completed one round
588:56 - over here but since we have given the
588:58 - count of two it is completing the two
589:00 - rounds over here after which it will
589:02 - stop itself so guys basically you can
589:05 - also use the iteration count as infinite
589:08 - in order to continue the animation on
589:11 - the web browser let us comment out the
589:13 - delay part over here so that we can
589:16 - instantly see the animation in action so
589:18 - let me just save this file now and try
589:20 - loading this page so as you can see the
589:22 - animation has started and it will
589:24 - continue infinitely until and unless you
589:27 - close the page or you want to change the
589:29 - animation iteration count CSS property
589:32 - so guys in this way you can use the
589:33 - animation iteration count as well apart
589:36 - from this we also have animation
589:38 - Direction so guys basically this is the
589:40 - default direction that the box is moving
589:43 - over here so guys we can also Define the
589:45 - direction of the animation so let's say
589:47 - we provide the animation Direction in
589:49 - this case what are the values the normal
589:52 - is the default value over here but when
589:54 - we provide the reverse value the
589:56 - animation will be in the reverse
589:58 - Direction so let me just provide the
590:00 - reverse Direction over here and let me
590:02 - just save this file now and try
590:03 - reloading this page once again on the
590:05 - browser so as you can see the animation
590:07 - is in Reverse Direction now first it is
590:09 - moving over here at the bottom Direction
590:12 - and then to the top over here and then
590:14 - followed by to the left Direction in
590:16 - this case which is the reverse Direction
590:17 - over here apart from this we also have
590:20 - the alternate value as well so first it
590:22 - will go in the normal Direction and then
590:24 - in the second iteration the Box will
590:26 - move to the reverse Direction and Then
590:28 - followed by the normal Direction and
590:30 - then reverse Direction and so on the
590:32 - alternate directions will be used so
590:34 - guys let me just save this file now and
590:35 - try reloading this page once again on
590:37 - the browser so this is the normal
590:39 - direction of the box that is moving and
590:41 - then it is moving in the reverse
590:43 - Direction right now based on the
590:45 - animation direction that we have
590:47 - provided over here with the value as
590:49 - alternate now guys apart from this we
590:51 - also have something called as animation
590:53 - timing function so guys let us check
590:55 - that as well so basically it will Define
590:57 - the speed of the box that is moving over
591:00 - here so guys we can use this animation
591:03 - timing function over here and by default
591:05 - and we can provide the speed as linear
591:08 - in this case which means the speed will
591:10 - be same throughout the animation so let
591:12 - me just save this file now if you notice
591:14 - currently the speed is decreasing when
591:17 - it is moving towards the end of the
591:19 - animation over here but when when we
591:20 - provide the linear timing function over
591:23 - here the speed will be same throughout
591:25 - the animation so let me just reload this
591:27 - page once again so as you can see the
591:29 - speed is linear over here and it is not
591:31 - increasing or decreasing at the end or
591:34 - at the start of the animation so Guys
591:36 - these are some of the animation CSS
591:38 - properties that you can use apart from
591:40 - this we also have something called as
591:42 - animation field mode which can help us
591:45 - in order to define the status at the
591:47 - start or at the end of the animation so
591:50 - guys I leave the CSS property as a
591:52 - homework for you so that you can
591:53 - practice on your own we can also
591:55 - decrease the line of code over here
591:57 - since a 0% and the 100% is having the
592:00 - same CSS properties and the values as
592:02 - well so simply I'm going to remove this
592:05 - 100% from here and then we will provide
592:07 - comma after the 0% and provide 100% in
592:10 - this case which means the 0% and the
592:13 - 100% state is going to have the same
592:16 - value over here let me just provide the
592:18 - animation direction as normal in this
592:20 - case so let me just save this file now
592:22 - and try reloading this page so as you
592:24 - can see this is the original animation
592:26 - that we have provided and with 0% and
592:29 - 100% that is having the same CSS
592:31 - properties over here now guys apart from
592:33 - this while this box is moving we can
592:35 - change the background color of the box
592:37 - as well so let's say initially we have
592:39 - the background color as aqua color over
592:42 - here and then at the 33% State we want
592:45 - the color to be blue color so simply we
592:48 - will provide the background color as
592:49 - blue color over here at the 33% State
592:53 - and then for the 66% State let's say we
592:55 - have the color as yellow over here so
592:57 - guys basically we are changing the
592:59 - background colors as well as the box is
593:01 - moving based on the different status of
593:04 - the animations so let me just save this
593:06 - file now and try reloading this page
593:07 - once again on the browser so as you can
593:09 - see from Aqua the box is changing its
593:12 - color to blue color and then when the
593:14 - box is moving down the color is changed
593:16 - to yellow color over here so guys in
593:18 - this way we can change the background
593:20 - color or any other CSS properties based
593:22 - on your requirements while you are
593:24 - providing the animations in CSS so guys
593:27 - comment in the comment section below
593:28 - whether you have learned something out
593:29 - of this video please make sure that you
593:31 - like this video so that it reaches to
593:33 - more people and subscribe to this
593:35 - channel so that you get the
593:36 - notifications on upcoming videos as well
593:38 - the next video that we are going to talk
593:40 - about is loading animation in CSS so
593:43 - stay tuned so now we will see a simple
593:46 - loading animation in CSS with the help
593:49 - of example over here so guys let us move
593:51 - to the VSS code in this case and simply
593:53 - we are going to remove the previous
593:55 - lines of code that we had written in the
593:57 - HTML and the CSS files over here now
594:00 - guys we need to create a diff tag that
594:02 - will help us in order to create a circle
594:06 - with the help of the Border CSS property
594:08 - and then we are going to rotate the diff
594:11 - tag in order to create a simple loading
594:13 - animation with the help of CSS
594:15 - properties so guys first of all we will
594:17 - provide the diff tag with the help of
594:19 - the loading CSS class over here so
594:22 - basically we have used the diff tag with
594:24 - the class name that is loading in this
594:26 - case and simply we are going to use this
594:28 - class name over here inside the style.
594:31 - CSS file so guys we are going to paste
594:33 - this class name with the help of the dot
594:36 - character over here so that we can
594:37 - provide certain CSS properties for this
594:40 - diff tag so first of all we will provide
594:42 - the with s 200 pixels in this case and
594:45 - also the height of 200 pixels so that we
594:48 - get a square box out of this diff tag
594:50 - over here and then apart from this we
594:52 - will also provide certain background
594:55 - color to the body tag over here so let's
594:57 - say we have a dark background color in
594:59 - this case so we have provided the dark
595:01 - background color and let's say the color
595:03 - of the text is white over here now guys
595:05 - apart from this we also want the
595:07 - background color of this diff tag to be
595:09 - displayed so let's say we have the
595:11 - background color for the diff tag is
595:13 - white color in this case and then apart
595:15 - from this let us get this diff tag at
595:18 - the center of the screen so simp we are
595:20 - going to provide the margin CSS property
595:23 - with the value as Auto over here now
595:25 - guys let me just save this file now and
595:27 - try reloading this page once again on
595:29 - the browser so as you can see this is
595:31 - the diff tag that we have included on
595:33 - the HTML file now guys we are going to
595:35 - make a circle out of the St tag so how
595:38 - do we do that so first of all we will
595:40 - provide the Border radius over here
595:42 - which should be 50% in order to make the
595:46 - diff tag as a circular diff tag over
595:48 - here let me just save this file now and
595:50 - try reloading this page so as you can
595:52 - see with the help of this border radius
595:54 - equal to 50% we have converted the
595:57 - square box to a circle over here now
595:59 - guys we only want the border of the
596:01 - circle to be displayed so what we will
596:03 - do is simply I'm going to comment out
596:05 - this background color in this case and
596:07 - let's say we provide the Border as 10
596:10 - pixels with the color that is white and
596:13 - the Border style will be solid in this
596:15 - case so guys basically we have provided
596:17 - the 10 pixels solid white color border
596:19 - over here here instead of the background
596:21 - color so let me just save this file now
596:23 - and try reloading this page so as you
596:25 - can see we have provided the Border over
596:27 - here for this particular Circle let us
596:30 - increase the width of the border to 20
596:32 - pixels so that we can see the loading
596:34 - animation properly so as you can see
596:36 - this is the circle that we have drawn
596:38 - over here and this is just the border
596:40 - that we have included now guys simply we
596:42 - can rotate this circle in order to see
596:44 - the simple loading animation and in
596:46 - order to do that we need to have one
596:49 - side of the Border have a different
596:51 - color so what we will do is we will
596:53 - divide this values for the Border CSS
596:56 - property so first of all we will say
596:58 - border width of 20 pixels that we had
597:01 - defined and then the Border style should
597:03 - be solid so over here we will Define the
597:06 - Border style as solid in this case and
597:08 - then guys for the Border color we will
597:10 - provide the color as white so simply we
597:13 - will say border color in this case so
597:16 - all these are CSS properties that you
597:18 - can Define separately let's just save
597:20 - this file now and try reloading this
597:22 - page so as you can see there is no
597:24 - change right now we want the top border
597:26 - to be of the different color so simply
597:29 - we will Define the first color which
597:31 - will be corresponding to the top border
597:33 - over here as gray color so let's say we
597:36 - provide the gray color as the value for
597:37 - the top border and then for the left and
597:41 - right border we want the white color and
597:43 - then for the bottom side we also want
597:45 - the white color to be displayed so guys
597:47 - basically the first border color will be
597:49 - top color follow followed by the right
597:50 - hand side and Then followed by the
597:52 - bottom side and then we have the left
597:54 - hand side so over here the gray color
597:56 - will be at the top side and then this
597:58 - white color will be at the right side
598:00 - followed by the white color at the
598:02 - bottom side and then again since we have
598:04 - not provided the fourth color the left
598:06 - color will be taken from this particular
598:08 - white color over here let me just save
598:10 - this file now and try reloading this
598:12 - page once again on the browser so as you
598:14 - can see this is the gray color at the
598:16 - top of the circle over here now guys
598:18 - simply we want to rotate create this
598:20 - circle with the help of the animation so
598:23 - what we will do is we will simply Define
598:25 - the key frames over here and then we
598:27 - will say loading as the name of the
598:30 - animation so what we want to do is
598:32 - simply at the 0% we are going to provide
598:35 - the CSS property that is transform over
598:37 - here and simply we are going to say
598:39 - rotate and initially it should be 0° in
598:42 - this case and then after this for the
598:44 - 100% what we are going to do is we are
598:47 - going to Define this as 100% over here
598:49 - we we are going to still use the
598:51 - transform CSS property and this time we
598:53 - want to rotate it by 360° over here so
598:57 - guys as you can see we are going from 0°
598:59 - to 360° as far as rotation of the HTML
599:04 - element is concerned and now guys we are
599:06 - going to link this animation to the diff
599:09 - tag over here so basically for this
599:11 - particular block of CSS properties we
599:14 - are going to provide the animation name
599:16 - over here so simply we are going to
599:18 - provide the loading that is the
599:20 - animation name we have provided in this
599:22 - case after the key frames keyword and
599:24 - also we need to provide the animation
599:26 - duration which we can say 2 seconds in
599:29 - this case so guys basically within 2
599:31 - seconds the animation should complete
599:33 - let me just save this file now and try
599:35 - reload this page once again on the
599:37 - browser so as you can see the circle is
599:40 - rotating itself and only once it has
599:42 - rotated itself so guys basically we can
599:44 - also use the iteration count as well for
599:47 - the animation so over here we will say
599:49 - itation count equal to infinite so that
599:52 - it loads infinite number of times so let
599:55 - me just reload this page so as you can
599:57 - see the diff element that is the circle
600:00 - is rotating itself continuously within
600:02 - the span of 2 seconds over here now guys
600:05 - if you notice the speed of the animation
600:07 - is decreasing at the end of the
600:09 - animation over here so what we can do is
600:11 - simply we can provide the speed as
600:13 - linear in this case so we need to use
600:15 - the animation timing function in which
600:18 - case we are going to provide the value
600:19 - as L here so let me just save this file
600:22 - now and try reload this page once again
600:24 - on the browser so as you can see the
600:26 - speed of the loading icon is linear over
600:28 - here and this is the way that you can
600:30 - easily create the loading animation icon
600:34 - with the help of the HTML and the CSS
600:36 - properties so guys comment in the
600:38 - comment section below whether you have
600:39 - learned something out of this video
600:41 - please make sure that you like this
600:43 - video so that it reaches to more people
600:45 - and subscribe to this channel so that
600:47 - you get the notifications on upcoming
600:48 - videos as well the next video that we
600:50 - are going to talk about is customized
600:52 - tool tip text in CSS so stay tuned so
600:56 - now we will see customized tool tip text
600:59 - in CSS so guys basically a tool tip is
601:02 - often used to specify extra information
601:05 - about something when the user moves the
601:08 - mouse pointer over an HTML element so
601:11 - guys we are going to check with the help
601:12 - of examples what is the meaning of tool
601:15 - tip and how we can customize the tool
601:17 - tip text with the help of CSS property
601:20 - now guys first of all we will check the
601:22 - basic inbuilt tool tip that is provided
601:25 - by the HTML using the title attribute so
601:28 - let us move to the vs code over here and
601:30 - simply I'm going to remove the previous
601:32 - lines of code inside the HTML and the
601:35 - CSS files over here now simply we are
601:37 - going to have the paragraph tag that is
601:39 - the P tag in this case and we will say
601:42 - get your mouse cursor on below text so
601:45 - guys we have a very simple statement
601:47 - over here that is get your mouse cursor
601:49 - on below text T in this case and simply
601:51 - we are going to have the diff tag with
601:53 - the class that is text in this case so
601:55 - guys inside this diff tag we are going
601:57 - to have the hover me text over here so
602:00 - that the user can get the mouse cursor
602:03 - on this text and basically by default we
602:05 - want to show certain tool tip so we are
602:08 - going to use the title attribute over
602:11 - here that is provided by the HTML by
602:13 - default so guys in this case we are
602:15 - simply going to provide tool tip text
602:18 - over here so let me just save this F
602:19 - file now and try reloading this page
602:21 - once again on the browser as you can see
602:23 - we have this paragraph that is get your
602:25 - mouse cursor on below text over here and
602:28 - then when we get the mouse cursor on the
602:30 - hover me text as you can see the tool
602:32 - tip text is getting displayed and we can
602:35 - provide any information inside this
602:37 - title attribute to be displayed when the
602:40 - user gets the mouse cursor on this over
602:43 - me text or any other text based on your
602:45 - requirement now guys this is the default
602:47 - Behavior as far as the display playing
602:50 - of the tool tip is concerned now how do
602:52 - we customize this tool tip so basically
602:54 - we can use certain CSS properties in
602:57 - order to customize this tool tip over
602:59 - here so what we will do is simply I'm
603:01 - going to remove this inbuilt tool tip in
603:04 - this case that is the title attribute
603:06 - and we are going to have the span tag
603:08 - over here with the class name that is
603:10 - tool tip so guys basically we are going
603:12 - to provide certain CSS properties for
603:15 - this span tag as well and simply we are
603:17 - going to say the text that is tool tip
603:19 - text over here that we had defined
603:21 - previously inside the title attribute as
603:24 - well now guys inside the style. CSS file
603:26 - what we are going to do is we will
603:28 - provide certain CSS properties for this
603:30 - class name that is corresponding to the
603:32 - span tag over here so simply we are
603:35 - going to provide dot character followed
603:37 - by the tool tip and let's say we provide
603:39 - the background color as the black color
603:41 - over here for the span tag apart from
603:44 - this we want to have the color as white
603:46 - color and also we will have the padding
603:48 - of five pixels in this case so that the
603:51 - tool tip is displayed properly when we
603:53 - get the mouse cursor on the diff tag so
603:56 - let me just save this file now and try
603:58 - reloading this page once again on the
603:59 - browser as you can see this is the tool
604:02 - tip text that will be displayed with
604:04 - different CSS properties that we have
604:06 - applied so far we can also have the
604:08 - Border radius over here so simply we
604:10 - will have the Border radius of 5 pixels
604:13 - so that the corners are rounded for this
604:16 - particular tool tip text as you can see
604:18 - this is the way that we have the rounded
604:20 - Corners over here now guys the important
604:23 - thing in this case is when the user gets
604:25 - the mouse cursor on this text that is
604:27 - over me then only the tool tip text
604:29 - should be displayed so what we can do is
604:32 - simply we will provide the visibility
604:34 - equal to Hidden in this case so this is
604:37 - the CSS property that we are going to
604:39 - use with the value that is hidden so by
604:41 - default the span tag that is having the
604:43 - class name Tool tip will be hidden on
604:46 - the HTML page let me just save this file
604:48 - now and try reload in this page as you
604:50 - can see we don't have any span tag over
604:52 - here and when we get the mouse cursor on
604:54 - this over me text we are not able to see
604:57 - the tool tip text so in order to display
604:59 - the tool tip over here we have to
605:02 - provide the hover codo class in this
605:04 - case so the class name that we are going
605:05 - to use is text in this case which is
605:07 - corresponding to the diff tag which is
605:10 - having the text that is over me so guys
605:12 - let me just copy this class name and
605:14 - after the dot character we will paste
605:16 - this class name and then what we have to
605:18 - do is on Hope over we need to display
605:21 - the span tag that is having the tool tip
605:23 - class over here so simply we will use
605:25 - the over Cudo class in this case and
605:28 - Then followed by the class name that is
605:29 - tool tape over here so guys basically
605:32 - when the user gets the mouse cursor on
605:34 - this diff tag which is having the text
605:36 - we need to provide certain CSS
605:38 - properties for the tool tip text and in
605:40 - this case we are going to use the
605:42 - visibility it is equal to visible over
605:45 - here so guys basically from visibility
605:47 - equal to Hidden we are going to
605:49 - visibility equal to visible when the
605:51 - user gets the mouse cursor on this class
605:54 - name that is text which is corresponding
605:56 - to the diff tag that is having the text
605:58 - that is over me let me just save this
606:00 - file now and try reloading this page
606:02 - once again on the browser and now when
606:04 - we get the mouse cursor on this over me
606:06 - text as you can see we are able to see
606:09 - the tool tip text over here so guys in
606:11 - this way we can have the customized tool
606:13 - tip text over here with the help of the
606:15 - CSS properties let us get all these text
606:18 - at the center of the screen now so
606:20 - simply we are going to provide the style
606:22 - for the body tag over here so we will
606:25 - say style and then simply we can say
606:27 - text the line it is equal to Center let
606:29 - me just save this file now and try
606:31 - reloading this page as you can see when
606:33 - we get the mouse cursor on this overover
606:35 - me text the tool tip text is now getting
606:37 - displayed over here now guys currently
606:39 - the tool tip text is getting displayed
606:41 - at the right of the text we can also
606:43 - display this tool tip at the bottom of
606:45 - this over me text over here so how we
606:47 - can do that so first of all we need to
606:50 - provide the position property for this
606:52 - class that is text over here which is
606:54 - corresponding to the diff tag so guys
606:56 - over here we will say position it is
606:58 - equal to relative and then after this
607:00 - for this tool tip class we need to
607:03 - provide the position equal to Absolute
607:05 - over here so that we can provide the
607:07 - different CSS property such as top left
607:10 - bottom and right so guys basically we
607:12 - will say absolute in this case and then
607:15 - after this we need to provide the left
607:17 - property as zero and then also the top
607:20 - property is 100% over here so guys
607:23 - basically what we are doing is currently
607:25 - the diff tag that is having the class
607:27 - name text is having the position equal
607:29 - to relative and the tool tip text which
607:31 - is having the class tool tip will be
607:33 - having the position equal to Absolute
607:35 - and due to this we can use the left and
607:38 - top properties and other CSS properties
607:40 - as well as far as the positioning CSS
607:42 - properties are concerned so from left we
607:45 - are having the zero pixels and from Top
607:47 - it should be 100% so we are trying to
607:50 - get the tool tip text at the bottom of
607:52 - this text over here so let me just save
607:54 - this file now and try reloading this
607:56 - page once again on the browser so now
607:58 - when we get the mouse cursor on this
608:00 - hover me as you can see the tool tip
608:02 - text is coming at the bottom of this
608:04 - hover me but at the extreme left right
608:07 - now so guys in order to correct this
608:09 - what we can do is simply we can use the
608:11 - display property and this time let's see
608:13 - we provide the display as in line over
608:16 - here let me just reload this page once
608:18 - again on the browser so as you can see
608:20 - the tool tip text is now coming at the
608:22 - bottom of this particular text let us
608:24 - also provide the width property to this
608:26 - tool tip text over here so simply we are
608:28 - going to provide the width as 130% so
608:31 - that the text can fit the box over here
608:34 - so let me just reload this page as you
608:36 - can see this is the tool tip text over
608:38 - here that can be displayed at the bottom
608:40 - of the overover me text in this case so
608:42 - guys in this way you can also provide
608:44 - the other positioning properties over
608:46 - here in order to get the tool tip text
608:48 - at the left or at the top of the hme
608:51 - text over here now guys let us move to
608:53 - the default position that is at the
608:56 - right in this case so simply I'm going
608:57 - to remove these lines of code that is
609:00 - top and left over here so let me just
609:02 - save this file now and try reloading
609:04 - this page so now we are able to see the
609:06 - tool tip text at the right of the hme
609:08 - text over here now guys how do we create
609:11 - an arrow for this tool tip text so guys
609:13 - let us check that as well so we need to
609:15 - use the class name that is tool tip and
609:18 - this time we are going to use the codo
609:20 - element that is after so guys we need to
609:22 - use the colon two times over here and
609:24 - then we need to use the after keyword
609:27 - and then guys simply we are going to use
609:29 - the content which is going to have a
609:31 - space character over here and also we
609:33 - need to define the position as relative
609:35 - so in this case we will say position is
609:37 - equal to relative and we need to provide
609:40 - the Border CSS properties over here so
609:42 - let's say we have the border with s five
609:45 - pixels in this case apart from this the
609:48 - Border style is solid in this case so
609:51 - over here we will have the solid value
609:53 - and then we also have the Border color
609:55 - over here so guys simply we are going to
609:57 - define the Border color as yellow for
609:59 - now we will change it to black color as
610:01 - well after positioning the Border
610:03 - properly so that we can create a arrow
610:06 - for this tool tip text so guys what we
610:08 - are going to do is let's say by default
610:10 - we are going to remove this visibility
610:12 - equal to Hidden so that we can create
610:14 - the arrow for this tool tip text first
610:16 - of all so let me just save this file now
610:18 - and try reloading this page so as you
610:20 - can see we have this border that is
610:22 - getting displayed over here right now
610:24 - now guys the border is taking the entire
610:26 - height of this particular tool tip text
610:28 - so we need to change the position value
610:31 - over here to Absolute instead of
610:33 - relative so let me just save this file
610:35 - now after providing the absolute value
610:37 - to the position and reload this page
610:39 - once again so as you can see this is a
610:41 - small square box that we have created
610:44 - now guys we need to get this border at
610:46 - the left of this tool tip text over here
610:48 - so what we can do is simply we will
610:50 - provide the left CSS property and we
610:53 - will say 0 pixels over here apart from
610:56 - this we have also provided the top CSS
610:58 - property as 50% so that from Top we have
611:01 - certain spacing over here let me just
611:04 - save this file now and try reloading
611:05 - this page once again on the browser as
611:07 - you can see the small square box has
611:10 - moved to the left right now and guys
611:12 - instead of having this yellow square box
611:14 - inside the tool tip text we want to have
611:17 - it outside of the tool tip text so so
611:19 - simply we will change this left CSS
611:22 - property to right CSS property and over
611:25 - here we need to provide the value as
611:27 - 100% which means from right it should be
611:30 - having the space of 100% that is the
611:32 - entire width of the tool tip text so let
611:35 - me just save this file now and try
611:36 - reloading this page once again on the
611:38 - browser as you can see the small square
611:40 - box has come to the left of the tool tip
611:43 - text now guys let us also provide
611:45 - certain margin at the top so we need to
611:47 - have the margin top as a negative number
611:50 - so let's say we have -5 pixels over here
611:53 - let me just save this file now and try
611:54 - reloading this page so that horizontally
611:57 - it is aligning with this particular
611:59 - hover me text over here now guys apart
612:01 - from this let us also provide the margin
612:03 - left property to the tool tip in this
612:06 - case so simply we are going to say
612:09 - margin left it is equal to 5 pixels over
612:12 - here let me just save this file now and
612:14 - try reloading this page so as you can
612:16 - see we have moved the tool tip text
612:17 - slightly to the right now guys in order
612:20 - to have the arrow shape what we want to
612:22 - do is we need to have only one side of
612:25 - the Border have the color so let us
612:28 - change the Border color to black color
612:30 - right now so instead of yellow color we
612:32 - will be able to see the black color for
612:34 - the small square box and then we need to
612:36 - only have the right color as the black
612:39 - color so guys what we have to do is the
612:41 - top color should be transparent over
612:43 - here followed by the black color which
612:45 - is at the right side of the border and
612:48 - Then followed by the transfer that is at
612:50 - the bottom and then again the transfer
612:53 - that is at the left hand side so let me
612:55 - just save this file now this particular
612:57 - line of code will help us in order to
612:59 - provide the arrow to the tool tip text
613:01 - so let us check that as well when we
613:03 - reload this page as you can see there is
613:05 - a arrow that is getting displayed over
613:07 - here for this tool tip text right now
613:09 - and then apart from this we can simply
613:12 - provide the visibility equal to Hidden
613:14 - so that when the user gets the mouse
613:16 - cursor on the diff tag the visibility
613:19 - will be changed to visible over here let
613:21 - me just reload this page and when we get
613:23 - the mouse cursor over here as you can
613:25 - see this is the tool tip text that is
613:27 - getting displayed right now so guys this
613:29 - is a very simple way in order to
613:31 - customize the tool tip text apart from
613:33 - this you can also provide the fade in
613:35 - animation for the tool tip text so how
613:37 - we can do that simply we can use the
613:40 - transition CSS property so guys over
613:42 - here inside the tool tip class name we
613:44 - are going to use the transition and let
613:47 - us see whether we will be able to use it
613:49 - for the visibility CSS property or not
613:52 - we will provide the duration as 1 second
613:54 - over here let me just save this file now
613:56 - and try reloading this page so when we
613:58 - get the mouse cursor over here there is
614:00 - no fade in animation right now but guys
614:03 - when we get the mouse cursor out there
614:05 - is a 1 second delay right now so guys
614:07 - with visibility equal to Hidden and
614:10 - visibility equal to visible the
614:11 - transition will not work since the
614:14 - transition CSS property is expecting
614:16 - certain values that is 0 and 1 and the
614:19 - values in between as well so instead of
614:22 - having visibility we can use the opacity
614:25 - so first of all we will provide the
614:27 - opacity equal to zero which will be same
614:29 - as visibility equal to Hidden which
614:31 - means the element will not be displayed
614:34 - on the HTML page when the opacity is set
614:37 - to zero over here and instead of having
614:39 - visibility equal to visible we will have
614:41 - the opacity equal to one this time so
614:44 - guys by using the opacity CSS property
614:47 - we will provide the transition CSS
614:49 - property have some values in between 0
614:52 - and 1 such as 0.5 or 0.7 when there is a
614:56 - transition within the time span of 1
614:58 - second over here so guys simply we are
615:00 - going to change the visibility keyword
615:03 - to opacity right now let me just save
615:05 - this file now and let us see how the
615:07 - fadein animation will be displayed for
615:08 - the tool tip text when we reload this
615:11 - page now when we get the mouse cursor
615:13 - over here as you can see there is a fade
615:15 - in animation and the Fade Out animation
615:17 - as well within the time span of 1 second
615:20 - over here so guys in this way you can
615:22 - provide the fade in animation as well
615:24 - for the tool tip text and apart from
615:26 - this you can also draw the arrow with
615:28 - the help of the border that we have just
615:29 - seen using different CSS properties so
615:33 - guys comment in the comment section
615:34 - below whether you have learned something
615:35 - out of this video please make sure that
615:37 - you like this video so that it reaches
615:39 - to more people and subscribe to this
615:41 - channel so that you get the
615:42 - notifications on upcoming videos as well
615:44 - the next video that we are going to talk
615:46 - about is styling images in CS CSS so
615:49 - stay tuned so now we will see styling
615:52 - images in CSS so guys we can use the
615:55 - various CSS properties in order to style
615:58 - the images and this we are going to
616:00 - check with the help of examples as well
616:02 - so first of all we will see how we can
616:04 - create the rounded images so guys let us
616:07 - move to the VSS code over here and
616:09 - simply we are going to remove the
616:10 - previous lines of code that we had
616:12 - written in the HTML and the CSS files
616:15 - over here now guys what we are going to
616:17 - do is simply we are going to have the
616:19 - diff tag over here with the class name
616:22 - that is container in this case so we
616:25 - have this class name that is container
616:27 - for this D tag now guys apart from this
616:29 - we will also have the image over here
616:31 - inside this container and this image
616:34 - should have the SRC attribute and the
616:37 - value that we are going to provide is
616:39 - the directory path of the image which we
616:42 - have already saved over here inside the
616:44 - directory where we have the HTML file so
616:47 - guys we have the sample Forest test
616:49 - image. JPG file in this case and let's
616:52 - say we have the alternate text as test
616:55 - image over here so this IMG tag will
616:57 - help us in order to display the image on
617:00 - the web browser let me just save this
617:02 - file now and let us move to the style.
617:04 - CSS file over here and we will provide
617:07 - the width and height for this particular
617:09 - image so guys let's say we provide the
617:11 - width as 300 pixels and the height is
617:13 - 300 pixels as well so that the image is
617:17 - displayed as a square box over here let
617:19 - me just save this file now and try
617:21 - reloading this page on the browser so as
617:23 - you can see this is the image that is
617:25 - getting displayed right now so guys
617:27 - first of all we will see how we can make
617:29 - this image appear as a rounded image so
617:33 - it should be displayed inside the circle
617:35 - so guys what we are going to do is we
617:37 - need to convert the square shape image
617:39 - into a circular shape image so simply we
617:41 - can use the Border radius CSS property
617:44 - so over here we say border radius in
617:46 - this case and the value must be 50%
617:49 - always remember that if you want some
617:51 - HTML element to have a circular shape we
617:54 - can simply provide the Border radius CSS
617:57 - property and the value must be 50% over
617:59 - here let me just save this file now and
618:02 - try reloading this page once again on
618:03 - the browser so as you can see we have
618:05 - the rounded image that is getting
618:07 - displayed right now apart from this we
618:09 - can also display the thumbnail images
618:12 - with the border so what we will do is
618:14 - simply I'm going to comment out this
618:15 - line of code over here and we will have
618:18 - the border of two pixels with the Border
618:21 - type that is solid and the Border color
618:23 - that is black color in this case apart
618:25 - from this we will also have certain
618:27 - padding so that we can see the Border
618:29 - clearly and there is certain spacing in
618:32 - between the image and the border of the
618:34 - image let me just save this file now and
618:36 - try reloading this page once again on
618:38 - the browser so as you can see after this
618:40 - image we have the border which is having
618:42 - the width as two pixels and the color is
618:44 - black right now apart from this we can
618:46 - also have the box Shadow for the this
618:48 - border so what we are going to do is
618:51 - simply we are going to provide the Box
618:53 - Shadow CSS property and we can see 0er
618:56 - pixels as horizontal Shadow and then 0
618:58 - pixels as vertical Shadow and simply we
619:00 - can provide the 5 pixels blur effect and
619:03 - the color must be dark blue over here so
619:06 - guys basically the first parameter is
619:07 - the horizontal Shadow followed by the
619:09 - vertical shadow that you can provide and
619:12 - then we have something called as blur
619:13 - effect that will help us in order to
619:16 - spread the color that we provide as the
619:18 - fourth parameter which is dark blue in
619:20 - this case let me just save this file now
619:22 - and try reloading this page once again
619:24 - on the browser as you can see we have
619:26 - the dark blue box Shadow over here apart
619:29 - from this we can also have the multiple
619:31 - shadows as well so after comma we can
619:34 - provide another Shadow so let's say in
619:36 - this case we have 20 pixels of blur
619:38 - effect and the color is blue so we are
619:41 - providing the blue color for the Box
619:43 - Shadow and let me just reload this page
619:45 - as you can see this is the blue color
619:47 - that is spreading out across 20 pixels
619:50 - over here after the border of the image
619:52 - so guys in this way we can provide the
619:54 - cool CSS properties in order to make our
619:57 - images look more attractive over here
620:00 - apart from this we can also have the
620:01 - responsive images as well so guys let me
620:04 - just increase the width of this
620:05 - particular image to let's say 450 pixels
620:08 - over here so when we provide 450 pixels
620:11 - let me just save this file now the width
620:13 - of this particular image must increase
620:14 - when we reload this page so as you can
620:16 - see this is the 450 pixels width and 300
620:20 - pixels height right now but guys when we
620:22 - decrease the size of this browser so let
620:25 - us see what will happen so when we are
620:27 - decreasing the width of the browser
620:29 - slowly as you can see the image is
620:31 - getting cropped and certain information
620:33 - from the image cannot be seen without
620:35 - scrolling the horizontal bar right now
620:38 - so guys on smaller devices it is very
620:40 - important that the images scale
620:43 - themselves up or down so when the screen
620:45 - size is decreasing the image size must
620:48 - also de inre at the same time so that
620:50 - the entire image is displayed on the
620:53 - 100% width of the screen so guys in
620:55 - order to solve this issue we can use the
620:58 - max with CSS property over here so let
621:00 - me just expand this browser and simply
621:03 - we are going to use the max with CSS
621:06 - property in this case for the image tag
621:08 - and it must be set to 100% over here so
621:11 - let me just save this file now so guys
621:13 - what is the meaning of this Max width
621:15 - basically we are telling the browser to
621:17 - have the maximum width of this image
621:19 - equal to 100% of the width of the screen
621:23 - so even if your page is displayed on the
621:25 - smaller screen the 100% width of the
621:27 - screen will be taken as the maximum
621:30 - width for the image and there will be no
621:32 - horizontal scroll bar that must be
621:33 - displayed so guys let me just save this
621:35 - file now and try reloading this page so
621:38 - now if we decrease the size of the
621:39 - browser so as you can see we are
621:41 - decreasing the size you can see that the
621:43 - image width is also decreasing over here
621:46 - so this is the way that we can create
621:48 - create the responsive images with the
621:50 - help of the max with CSS property in
621:53 - this case now guys apart from this we
621:55 - can also Center an image so how do we do
621:58 - that by default the display CSS property
622:01 - for this image is in line so simply we
622:03 - need to set the display property as
622:05 - block over here so that we can simply
622:08 - use the margin CSS property and the
622:10 - value must be Auto in this case so guys
622:13 - basically for any HTML element that is
622:16 - having the display equal to block we we
622:18 - can use the margin CSS property as Auto
622:21 - in order to get that HTML element at the
622:24 - center of the screen horizontally so let
622:26 - me just save this file now and try
622:28 - reloading this page once again on the
622:30 - browser so as you can see now the image
622:32 - is getting displayed at the center of
622:34 - the screen as far as horizontal
622:36 - alignment is concerned guys apart from
622:39 - this we can also make the imagees
622:41 - transparent by using the opacity CSS
622:44 - property so by default we have the
622:46 - opacity as one over here simply we can
622:49 - set the opacity as 0.5 which means we
622:52 - are providing 50% transparency for this
622:54 - image let me just reload this page as
622:57 - you can see we have provided the
622:58 - transparency effect over here we can
623:00 - also increase the transparency by
623:02 - providing the opacity equal to 0.3 over
623:05 - here let me just save this file now and
623:07 - try reloading this page as you can see
623:10 - we have increased more transparency
623:12 - effect for this particular image that is
623:14 - getting displayed on the browser now
623:16 - guys apart from this we also can provide
623:19 - the text on the image so what we can do
623:22 - is let's say we want to provide the text
623:24 - that is another diff tag over here
623:26 - inside the container so we will say diff
623:29 - followed by the class name that is text
623:31 - over here and simply we are going to say
623:34 - Simple Text in this case now guys let me
623:36 - just save this file now and try
623:38 - reloading this page once again on the
623:39 - browser as you can see the simple text
623:42 - is getting displayed over here after the
623:44 - image but we want to display it on the
623:47 - image over here somewhere at the top
623:49 - left corner so guys what we can do is
623:51 - first of all let us remove this margin
623:53 - equal to Auto and display equal to block
623:56 - property so that the image is getting
623:58 - displayed at the left of the screen over
624:00 - here so as you can see the image is
624:02 - getting displayed right now at the left
624:04 - of the screen and we only want this text
624:06 - to be displayed at the top left
624:09 - Direction over here on the image so
624:11 - simply for the container class that is
624:14 - the diff tag which is the parent tag
624:16 - over here for both the image and the
624:18 - diff tag over here we need to provide
624:20 - the position property as relative so
624:23 - simply we will say container and then
624:25 - for this container we will provide the
624:27 - position property over here as relative
624:30 - in this case so guys basically we have
624:32 - the position property as relative and
624:35 - for the image we will provide the
624:36 - position property as absolute and for
624:39 - the other diff tag that is having the
624:41 - simple text we will also provide the
624:43 - position property as relative so over
624:45 - here we have the class name that is text
624:48 - in this case and then we say position it
624:50 - is equal to Absolute over here and not
624:53 - relative so guys let me just save this
624:55 - file now and try reloading this page
624:57 - once again on the browser as you can see
624:59 - both the image and the simple text is
625:02 - now getting displayed and the top and
625:04 - the left CSS property for both these
625:07 - tags right now is zero over here now
625:09 - simply we can provide the top and left
625:11 - CSS property in order to provide certain
625:14 - spacing for this text so what we can do
625:17 - is in inside the dot text over here we
625:20 - will provide the top as 5 pixels and
625:23 - also the left as 5 pixels over here you
625:26 - can also provide percentages as well let
625:29 - me just save this file now and try
625:30 - reloading this page as you can see there
625:32 - is certain spacing at the top and at the
625:34 - left as well let us provide the
625:36 - percentages instead of pixels so that we
625:39 - get more spacing over here so when we
625:41 - reload this page as you can see we are
625:43 - getting the simple text at the top left
625:45 - corner of this particular image so guys
625:47 - in this way you can provide the
625:49 - different CSS properties for the image
625:52 - in order to style them based on your
625:54 - requirements because apart from this we
625:56 - also have something called as image
625:57 - filters over here so simply inside the
626:00 - IMG tag we can simply provide the filter
626:03 - CSS property and then as you can see
626:06 - there are different methods that you can
626:07 - use and provide the different values as
626:10 - well so let's say we have the brightness
626:12 - function that we are going to use so let
626:14 - us increase the brightness to 150 let me
626:17 - just save this file now and try
626:19 - reloading this page once again on the
626:20 - browser so as you can see the brightness
626:23 - is increasing now so guys we have
626:24 - provided the opacity as 0.3 let us
626:27 - provide the opacity as 1 so as you can
626:29 - see this has increased the brightness
626:32 - right now so guys when we provide the
626:33 - brightness equal to two over here inside
626:36 - the parenthesis and when we reload this
626:38 - page as you can see the brightness of
626:40 - the image is increasing apart from this
626:42 - there are many other methods that you
626:44 - can use we can also use the blur effect
626:46 - over here so let us check that as well
626:48 - so if we provide two pixels of blur
626:50 - effect as you can see there is blur
626:53 - effect to some extent for this
626:54 - particular image so guys you can use any
626:56 - of the methods that is provided by the
626:58 - filter over here in order to style your
627:01 - images based on your project
627:02 - requirements so guys comment in the
627:04 - comment section below whether you have
627:05 - learned something out of this video
627:07 - please make sure that you like this
627:08 - video so that it reaches to more people
627:11 - and subscribe to this channel so that
627:12 - you get the notifications on upcoming
627:14 - videos as well the next video that we
627:16 - are going to talk about is image hover
627:19 - overlay in CSS so stay tuned so now we
627:23 - will see image hover overlay in CSS so
627:27 - guys basically we will create an overlay
627:29 - effect on image hover using CSS with the
627:32 - help of examples so let us move to the
627:35 - vs code over here and simply we are
627:37 - going to remove the previous lines of
627:38 - code that we have written in the HTML
627:41 - and the CSS files now guys over here we
627:44 - will Define the diff tag with the class
627:46 - container and inside this container we
627:49 - are going to have the image so let us
627:51 - provide certain sample image over here
627:53 - that I have already downloaded that is
627:55 - the sample Forest image. JPG file which
627:58 - is present in the same directory where
628:01 - this HTML file is present and then guys
628:03 - for the alt attribute simply we are
628:05 - going to say test image this text will
628:07 - be displayed when the image is not
628:09 - getting displayed properly on the
628:11 - browser now guys apart from this we will
628:13 - also Define certain CSS properties for
628:16 - this IMG tag over here inside the CSS
628:18 - file so let's say we have the IMG tag in
628:21 - this case and simply we are going to set
628:24 - the width as 300 pixels and also the
628:26 - height is 300 pixels over here let me
628:29 - just save this file now and try
628:31 - reloading this page on the browser so as
628:33 - you can see this is the image that is
628:35 - getting displayed right now now guys
628:37 - what we are going to do is when we get
628:39 - the mouse cursor on this image we need
628:41 - to get another diff tag that will be
628:44 - displayed on top of this image with a
628:46 - certain background color and a sample
628:48 - text so guys let us move to the vs code
628:50 - over here and simply inside the HTML
628:53 - file we are also going to define the
628:56 - diff tag with the class that is text
628:58 - over here and simply we will have the
629:00 - sample text that is Hello World in this
629:02 - case so guys basically this text will be
629:04 - displayed with the help of the
629:05 - background color on top of the image
629:08 - that we have already displayed on the
629:10 - web browser let me just save this file
629:12 - now and try reloading this page as you
629:14 - can see currently we are simply getting
629:16 - the text at the bottom of this image
629:18 - right now so guys we are going to set
629:20 - certain CSS properties so first of all
629:22 - we will use the container class over
629:24 - here for the diff tag and simply we are
629:26 - going to use it inside the CSS file so
629:29 - for this container diff tag we will set
629:32 - the position equal to relative over here
629:34 - and then after this we need to have the
629:36 - position equal to Absolute for the IMG
629:39 - tag as well so over here we will say
629:41 - absolute and also we will set the CSS
629:45 - property for this diff tag as well so we
629:47 - will use the text class in this case and
629:50 - inside the CSS file we use this class
629:52 - name that is text for which the position
629:55 - must be equal to Absolute so guys we
629:57 - have set the position equal to Absolute
629:59 - for IMG tag and the diff tag that is
630:01 - having the class name that is text over
630:03 - here now apart from this we will also
630:06 - set the top and the left CSS property as
630:09 - zero over here for the diff tag that is
630:12 - having the class text let me just save
630:14 - this file now and try reloading this
630:16 - page so as you can see the text is now
630:18 - getting displayed on top of the image
630:20 - right now now guys apart from this we
630:22 - also want to set the width and height
630:25 - for this particular diff tag that is
630:27 - text over here so simply we will set the
630:30 - width as 300 pixels which is same as the
630:32 - width of image and also the height must
630:35 - be same as that of the image so again we
630:37 - will set the height as 300 pixels over
630:40 - here apart from this we will also set
630:42 - the background color as well so let's
630:44 - say we have the background color as AA
630:46 - in this case so let let me just save
630:48 - this file now and try reloading this
630:50 - page once again on the browser as you
630:52 - can see the diff tag is now completely
630:54 - covering the image that we have
630:56 - displayed now because we also want the
630:59 - hello world text to be displayed at the
631:01 - center of the diff tag so what we can do
631:03 - is simply we will use the text align CSS
631:06 - property and set the value as Center
631:09 - which will help us in order to get the
631:11 - text at the center of the diff tag as
631:14 - far as horizontal alignment is concerned
631:16 - so we have got the text over here and
631:18 - then in order to get the text at the
631:20 - center of the St tag we can simply use
631:23 - the line height CSS property so over
631:25 - here we can set the line height to 300
631:28 - pixels which is the actual height of the
631:30 - diff tag so over here we have set the
631:33 - value of line height as 300 pixels let
631:36 - me just save this file now and try
631:37 - reloading this page once again on the
631:39 - browser so as you can see we have got
631:42 - the text that is hello world at the
631:44 - center of the diff tag now guys what we
631:46 - want to do is when we get the mouse
631:48 - cursor on the image that is behind this
631:50 - diff tag we need to make this diff tag
631:53 - visible so we can see the overlay effect
631:56 - so in this case simply we are going to
631:58 - set the opacity equal to zero right now
632:01 - so that by default the diff tag that is
632:04 - having the text class is not getting
632:06 - displayed so let me just save this file
632:08 - now and try reloading this page so as
632:10 - you can see we get the image that is
632:12 - getting displayed on the web browser now
632:14 - guys what we have to do is simply we
632:16 - have to use the container class over
632:18 - here so we will use this class in this
632:21 - case and we need to use the sudo class
632:24 - that is over right now so when we get
632:26 - the mouse cursor on this diff tag we
632:28 - need to get the other diff tag that is
632:30 - having the text over here so we need to
632:32 - use another class name that is text in
632:34 - this case so we use dot followed by text
632:37 - so on Mouse over on this particular main
632:40 - container the dot text class that is a
632:43 - diff tag must be displayed so in this
632:45 - case we need to set the opacity equal to
632:47 - 1 so basically it is going to change
632:49 - from opacity equal to 0 to 1 over here
632:52 - and we need to make this transition
632:54 - within 1 second so guys basically we
632:56 - will use the transition as well with the
632:59 - CSS property that is opacity and the
633:01 - time period of 1 second over here let me
633:04 - just save this file now and try
633:05 - reloading this page now if we get the
633:07 - mouse cursor on the image as you can see
633:10 - we are getting the overlay effect over
633:12 - here which is displaying the hello world
633:15 - text so guys in this way we can simply
633:17 - provide the overlay effect in this case
633:20 - when we get the mouse cursor on this
633:22 - particular diff tag over here which is
633:24 - displaying the image right now so guys
633:26 - based on your project requirements you
633:27 - can also create your own overlay effect
633:30 - on top of the image or any other HTML
633:33 - element as we have seen in this
633:34 - particular video comment in the comment
633:36 - section below whether you have learned
633:38 - something out of this video please make
633:39 - sure that you like this video so that it
633:41 - reaches to more people and subscribe to
633:43 - this channel so that you get the
633:45 - notifications on upcoming videos as well
633:47 - the next video that we are going to talk
633:49 - about is image reflection in CSS so stay
633:53 - tuned so now we will see image
633:55 - reflection in CSS so guys basically the
633:58 - Box reflect property is used to create
634:00 - an image reflection and this we are
634:03 - going to check with the help of examples
634:05 - as well the value of the Box reflect
634:07 - property can be below above left or
634:10 - right so guys let us move to the vs code
634:12 - over here and simply we are going to
634:14 - include an image inside the container so
634:17 - guys we have the div tag over here and
634:20 - the class that we are going to set is
634:21 - the container in this case and then
634:23 - inside this we are going to have the IMG
634:26 - tag over here so guys basically we are
634:28 - going to create an original image and we
634:30 - are going to create a reflection of that
634:33 - original image so for example we are
634:35 - going to have the sample forest image
634:38 - that is present in the same directory
634:40 - where we have saved this index.html file
634:43 - so we are going to select this
634:44 - particular JPG file over here that is
634:46 - the image file and we are going to set
634:48 - the alt attribute as test image over
634:51 - here let me just save this file now and
634:53 - let us see how it looks like on the
634:54 - browser so when we reload this page on
634:57 - the browser as you can see this is the
634:59 - image that is getting displayed over
635:01 - here now guys we can set the width and
635:03 - height of this particular image in the
635:04 - CSS file so over here in the VSS code we
635:07 - are going to move to the style. CSS file
635:10 - in this case and simply we are going to
635:12 - set the IMG tag and set the width and
635:14 - height CSS property for this particular
635:17 - image so so guys let us say we have 400
635:19 - pixels as width and 300 pixels as height
635:22 - over here so basically we are going to
635:24 - set these width and height parameters
635:26 - let me just save this file now and try
635:28 - reloading this page once again on the
635:30 - browser so as you can see this is the
635:32 - image let us reduce the size little bit
635:34 - so that we can see the reflection
635:36 - properly so we are going to set the
635:37 - width as 300 pixels and height as 200
635:40 - pixels over here so as you can see this
635:42 - is the image that is getting displayed
635:44 - which is the original image in this case
635:46 - now guys we want want the image
635:48 - reflection to be displayed on the right
635:51 - of this image so what we can do is
635:53 - simply we can use the Box reflect CSS
635:56 - property so let us move to the style.
635:58 - CSS file over here and we are going to
636:01 - set the Box reflect CSS property in this
636:03 - case so guys basically this is the CSS
636:06 - property that we are going to use and we
636:08 - can set any of the four values as you
636:10 - can see we have above below left and
636:12 - right guys it is very important to note
636:15 - that some of the browser versions does
636:17 - not support this box reflect CSS
636:19 - property so you need to test on
636:21 - different versions of the browser if you
636:23 - are implementing this box reflect CSS
636:26 - property on production environment so
636:28 - let us say we want the reflection to be
636:30 - present on the right hand side so we
636:31 - select this right value over here let me
636:34 - just save this file now and try
636:35 - reloading this page once again on the
636:37 - browser you can see that this is the
636:39 - original image and the right hand side
636:41 - of the imag is somewhere over here but
636:43 - when we reload this page as you can see
636:45 - this is the reflection that is occurring
636:47 - of the original image now so guys this
636:49 - is the image reflection that we can see
636:51 - for the sample image that we have
636:53 - displayed on the browser over here on
636:55 - the left hand side you can see that
636:57 - there is a tree in the image and the
636:59 - same thing can be seen over here on the
637:00 - right hand side in the reflection of the
637:03 - image now guys we can also set the
637:05 - Border radius for this particular image
637:07 - so let us say we set the Border radius
637:09 - to 50% so that the image is displayed in
637:12 - a circular shape so let us provide the
637:14 - Border radius of 50% in this case for
637:17 - this particular IMG tag let me just save
637:20 - this file now and try reloading this
637:22 - page once again on the browser so as you
637:24 - can see we have a circular shape image
637:26 - it is not exactly the circle since the
637:28 - width and height of this particular
637:30 - image is not having the same value and
637:32 - it is looking like an ellipse shape over
637:34 - here but guys the main thing is this is
637:36 - the way that you can display the
637:38 - reflection of any of the images that you
637:40 - want to display on your web browser now
637:42 - guys apart from this we can also display
637:44 - the image on the bottom of this
637:46 - particular original image so let us
637:48 - check that as well what we are going to
637:50 - do is we will decrease the width and
637:51 - height so let's say we have 200 pixels
637:54 - of width and 15 pixels of height in this
637:57 - case and then what we are going to do is
637:59 - instead of having the Box reflect as
638:01 - right we are going to say below as the
638:04 - value over here let me just save this
638:06 - file now and try reloading this page
638:08 - once again on the browser so as you can
638:10 - see we have this original image on the
638:12 - top and then at the bottom we have the
638:14 - reflection of this image now guys
638:16 - similarly you can also set the
638:17 - reflection to be displayed on the left
638:20 - and above the original image so I'll
638:22 - leave this up to you as a homework for
638:24 - you so that you can practice on your own
638:26 - in order to check the image reflection
638:28 - on the left you need to get the image at
638:30 - the center or at the right of the screen
638:32 - so how you can do that basically the
638:35 - display property of the image is set as
638:37 - in line by default so you can set it as
638:39 - block element and then simply you can
638:42 - provide the margin equal to Auto
638:44 - property over here and then simply you
638:46 - can set the value of margin CSS property
638:48 - as Auto so guys this will help us in
638:51 - order to display the image at the center
638:53 - of the screen let me just save this file
638:55 - now and try reloading this page once
638:57 - again on the browser so as you can see
638:59 - the image is now getting displayed at
639:01 - the center of the screen and in order to
639:03 - get this image reflection on the left of
639:06 - the original image what we can do is
639:08 - simply instead of below we can set the
639:10 - value as left let me just save this file
639:12 - now and try reloading this page as you
639:15 - can see this is the image reflection
639:17 - that is appearing on the left so guys
639:18 - similarly you can set the value of above
639:21 - as the image reflect CSS property as the
639:24 - Box reflect CSS property so guys comment
639:26 - in the comment section below whether you
639:28 - have learned something out of this video
639:30 - please make sure that you like this
639:31 - video so that it reaches to more people
639:33 - and subscribe to this channel so that
639:35 - you get the notifications on upcoming
639:37 - videos as well the next video that we
639:39 - are going to talk about is object fit
639:41 - property in CSS so stay tuned so now we
639:45 - will see object fit propert property in
639:48 - CSS so guys basically the CSS object fit
639:51 - property is used to specify how an image
639:54 - or the video should be resized to fit
639:57 - its container and this we are going to
639:59 - check with the help of examples as well
640:01 - we are going to see how we can set the
640:03 - image fit property for the IMG tag over
640:06 - here so guys there are various values
640:08 - for the object fit property in CSS the
640:10 - default value for the object fit is f
640:13 - the image is resized to feel the given
640:15 - Dimension over here and if if necessary
640:18 - the image will be stretched or squeezed
640:20 - to fit so guys let us check this with
640:22 - the help of example in vs code over here
640:24 - we will remove the previous lines of
640:26 - code that we had written in the HTML and
640:28 - the CSS files in this case and then
640:30 - simply we are going to have the dev with
640:33 - the class container over here now guys
640:35 - inside this container we are going to
640:37 - set the IMG tag in this case and we are
640:39 - going to take the sample image that is
640:41 - already present in our directory where
640:43 - we have saved the HTML and the CSS files
640:46 - over here apart from this we will also
640:48 - set the alt attribute as test image in
640:51 - this case let me just save this file now
640:53 - and apart from this we will also set the
640:55 - style for the IMG tag so that we can set
640:58 - the width and height properties for the
641:00 - image so guys let us say we have 300
641:02 - pixels as width in this case and 200
641:05 - pixels as height for the EMG so guys let
641:07 - me just set the width and height over
641:09 - here let me just save this file now and
641:11 - try reloading this page on the browser
641:14 - so as you can see this is the image that
641:15 - is getting displayed over here now guys
641:17 - since the image is present inside the
641:19 - container let us provide certain
641:21 - background color for the container as
641:23 - well apart from the padding property so
641:26 - what we will do is for the div tag that
641:28 - is having the class container over here
641:30 - we will set certain CSS properties so
641:32 - guys let me just copy this class name
641:34 - over here so we use the dot character
641:37 - followed by the class name and then what
641:39 - we will do is we will have the
641:40 - background color as yellow color over
641:42 - here and then apart from this since the
641:45 - display value is block by by default for
641:47 - the diff container we are going to set
641:50 - the display as inline over here and then
641:52 - apart from this we will also set the
641:54 - padding as 20 pixels so Guys these CSS
641:57 - properties will help us in order to see
642:00 - the background color of the container as
642:02 - yellow apart from the image that is
642:04 - already present inside this container so
642:06 - let me just save this file now and try
642:08 - reloading this page once again on the
642:10 - browser so as you can see we are getting
642:12 - some background color for this
642:14 - particular diff tag as well now guys
642:15 - instead of setting the display as inline
642:18 - we will set it as inline block over here
642:20 - let me just save this file now and try
642:22 - reloading this page once again on the
642:24 - browser so as you can see we have some
642:26 - kind of spacing over here after the
642:28 - image because of the padding property
642:30 - that we have already set to 20 pixels in
642:32 - this case now guys we will see the
642:34 - different values of the object fit
642:36 - property while we are setting it to the
642:38 - IMG tag over here so let us move to the
642:40 - style. CSS file in this case and then we
642:43 - are going to set the object fit CSS
642:46 - property as f over here which is the
642:48 - default value in this case let me just
642:50 - save this file now and try reloading
642:52 - this page once again on the browser you
642:54 - will notice that there is no change
642:56 - right now that's because this is the
642:57 - default value of the object fit CSS
643:00 - property now guys apart from this we
643:02 - have the second value that is cover in
643:05 - which case the image keeps its aspect
643:07 - ratio and fills the given Dimension the
643:10 - image will be clipped to fit over here
643:13 - so guys let us check this as well so
643:15 - inside the style. CSS file we will set
643:17 - the value as cover over here and let us
643:19 - see what will be the changes on the
643:21 - image so let me just save this file now
643:24 - and try reloading this page once again
643:25 - on the browser so as you can see there
643:27 - is no change right now that's because
643:29 - the width and height of this image has
643:31 - been set in such a way that the cover
643:33 - value will not make any changes over
643:35 - here so guys what we will do is let us
643:37 - decrease the width of this particular
643:39 - image to 200 pixels over here let me
643:42 - just save this file now and try
643:44 - reloading this page once again on the
643:45 - browser so as you can see see the cover
643:47 - value of the object to fit CSS property
643:50 - is helping us in order to scale the
643:52 - image in such a way that the entire
643:54 - image can be seen within the width and
643:56 - height that we have already set now guys
643:58 - apart from this we also have something
644:01 - called as contain in which case the
644:03 - image keeps its aspect ratio but is
644:05 - resized to fit within the given
644:07 - Dimension so guys let us check this as
644:09 - well so what will happen when we set the
644:11 - value as contain over here let me just
644:13 - save this file now and try reloading
644:15 - this page once again on the browser
644:17 - browser if you notice the entire image
644:19 - is getting displayed over here the
644:21 - entire width has been taken up by the
644:24 - image but the height of the image is
644:25 - reduced so guys what will happen is the
644:28 - original image is getting displayed over
644:30 - here to the max width or the max height
644:32 - in such a way that no information should
644:35 - be lost while displaying the image so
644:37 - guys you can use this particular value
644:39 - that is contained for the object fit
644:41 - apart from this we have the next value
644:43 - that is none in which case the image is
644:45 - not resized over here so guys let us
644:47 - check that as well what will happen over
644:49 - here when we set it as none so when we
644:51 - set the value as none let me just save
644:53 - this file now and try reloading this
644:56 - page once again on the browser as you
644:58 - can see the image is of original size
645:00 - and then within this particular width
645:02 - and height the specific region of the
645:04 - image is getting displayed so guys in
645:06 - this way the nonone value works for the
645:08 - object fit over here and then apart from
645:11 - this we have the last value that is scal
645:13 - down the image is scaled down to the
645:15 - smallest version of none or contained so
645:18 - guys either the none value or the
645:19 - contain value will be used when we use
645:22 - the scal down values so let us check
645:24 - this as well so over here we can set it
645:26 - to scale down in this case let me just
645:28 - save this file now and try reloading
645:30 - this page once again on the browser so
645:32 - as you can see the contain value is
645:34 - getting used over here and the entire
645:36 - image is getting displayed for the width
645:38 - and height that we have already set now
645:41 - guys in this case the width has been 200
645:43 - pixels but the height that is being used
645:45 - over here is less compared to 200 pixels
645:48 - that we have used since the entire image
645:50 - is getting displayed over here without
645:52 - any loss of information so guys in this
645:54 - way you can use the different values of
645:56 - the object fit CSS properties based on
645:59 - your requirements so comment in the
646:01 - comment section below whether you have
646:03 - learned something out of this video
646:05 - please make sure that you like this
646:06 - video so that it reaches to more people
646:08 - and subscribe to this channel so that
646:10 - you get the notifications on upcoming
646:12 - videos as well the next video that we
646:14 - are going to talk about is object
646:16 - position property in CSS so stay tuned
646:20 - so now we will see object position
646:22 - property in CSS so guys basically the
646:25 - CSS object position property is used to
646:28 - specify how an image or the video should
646:31 - be positioned within its container and
646:34 - this we are going to check with the help
646:35 - of examples as well now guys previously
646:38 - we have seen that the object to fit CSS
646:40 - property has one of the values that is
646:42 - covered over here in which case the
646:44 - image will be displayed in such a way
646:47 - that only partial image will be
646:48 - displayed as far as the width and height
646:51 - is concerned for that particular image
646:53 - container now guys along with this
646:55 - object fit equal to cover we can use the
646:57 - object position property in CSS in order
647:01 - to display the specific region of the
647:03 - image that we want to display and this
647:05 - we are going to check with the help of
647:07 - examples so let us move to the vs code
647:09 - over here so simply I'm going to remove
647:11 - the previous lines of code inside the
647:13 - style. CSS file and inside the HTML file
647:16 - we have we have the diff tag with the
647:18 - class container over here and inside
647:20 - this we have the sample image with the
647:23 - help of the IMG tag over here now guys
647:25 - what we will do is we will have certain
647:27 - styling for this particular container
647:29 - and the IMG tag as well so before that
647:32 - let us see how the page looks like over
647:34 - here so as you can see this is the
647:35 - original image that is getting displayed
647:37 - over here on the web page now guys let
647:39 - us provide the width and height for this
647:42 - image and for the container as well we
647:44 - are going to set certain CSS properties
647:46 - so first of all we will set the CSS
647:48 - properties for the container in which
647:50 - case we will set the background color as
647:52 - yellow color over here and then apart
647:54 - from this we will have the display
647:56 - property as inline Block in this case
647:59 - and then we will also have the padding
648:01 - property and the value will be 20 pixels
648:03 - and then guys apart from this we will
648:05 - have the IMG tag for which we are going
648:07 - to set the CSS properties over here so
648:10 - let us say we have the width of 300
648:12 - pixels in this case and the height of
648:15 - 200 pixels so guys we have set the width
648:17 - and height of the image as well over
648:19 - here let me just save this file now and
648:21 - try reloading this page once again on
648:23 - the browser so as you can see this is
648:25 - the image that is getting displayed over
648:27 - here now guys let us reduce the width of
648:30 - this particular image to 100 pixels
648:32 - instead of 300 pixels over here so
648:34 - basically inside the style. CSS file we
648:37 - will reduce the width to 100 pixels in
648:40 - such a way that it is less than the
648:42 - height of the image let us see how the
648:44 - image looks like so let me just save
648:46 - this file now and try reloading this
648:48 - page once again on the browser so as you
648:50 - can see by default the object fit CSS
648:52 - property is f over here which is trying
648:55 - to fit the entire image within this
648:58 - particular width that is 100 pixels in
649:00 - this case so guys what we will do is
649:02 - instead of having the image fit in this
649:05 - particular width only the portion that
649:07 - is this particular part over here you
649:09 - can see that there's a bridge inside
649:11 - this image we will only display that
649:13 - bridge over here within the 100 pixels
649:15 - of the width so what we have to do is
649:18 - simply we will set the object fit CSS
649:21 - property to cover in this case so guys
649:23 - basically we will use this object fit
649:25 - and the value that we are going to set
649:27 - is cover over here let us see how the
649:29 - image will look like now so let me just
649:31 - save this file now and try reloading
649:33 - this page once again on the browser
649:35 - notice that the entire image is getting
649:37 - displayed right now over here since the
649:39 - default value is fill but we have set
649:41 - the value as cover now so when we reload
649:44 - this page as you can see only the bridge
649:46 - is getting displayed over here so guys
649:48 - in this way you can set the object fit
649:50 - CSS property as cover in order to
649:53 - display only the portion of that
649:55 - particular image now guys this is the
649:57 - middle portion of the image what if you
649:59 - want to see the right portion or the
650:01 - left portion of the image so in this
650:03 - case we are going to use the object
650:05 - position property in which case the
650:07 - specific portion of the image can be
650:10 - displayed so guys let us check that as
650:12 - well so inside the style. CSS file after
650:15 - the object fit we will have the object
650:17 - position CSS property and simply we are
650:20 - going to set the percentages over here
650:22 - so we are going to set 80% and after
650:25 - this space character we are going to set
650:27 - the 100% in this case so basically this
650:29 - will help us in order to see the right
650:32 - portion that is the right part of the
650:34 - image so let me just save this file now
650:36 - and try reloading this page once again
650:38 - on the browser so as you can see this is
650:40 - the right hand side of the image this is
650:42 - the right part of the bridge that we
650:44 - were able to see just now and then when
650:46 - we reduce the number from 80% to let's
650:48 - say 70% we will be able to see the left
650:51 - hand side of this image to some extent
650:53 - so when we change it to 70% over here
650:56 - let me just save this file now and try
650:58 - reloading this page once again on the
651:00 - browser it has come slightly to the left
651:02 - over here guys similarly we can see the
651:04 - extreme left of the image as well so let
651:07 - us say we set the 70% to 15% in this
651:10 - case so this will help us in order to
651:12 - see the left side of the image so when
651:15 - we save this file now and try reloading
651:17 - this page once again on the browser so
651:19 - as you can see this is the left hand
651:21 - side of the image that is getting
651:22 - displayed right now so guys in this way
651:24 - you can easily set the object position
651:27 - CSS property in order to set the exact
651:30 - portion or the exact part of the image
651:33 - that you want to display on the screen
651:35 - based on your project requirements so
651:37 - guys comment in the comment section
651:38 - below whether you have learned something
651:40 - out of this video please make sure that
651:41 - you like this video so that it reaches
651:43 - to more people and subscribe to this
651:45 - channel so that you get the not
651:46 - notifications on upcoming videos as well
651:48 - the next video that we are going to talk
651:50 - about is mask image property in CSS so
651:53 - stay tuned so now we will see mask image
651:56 - property in CSS so guys basically the
651:59 - CSS mask image property specifies a mask
652:02 - layer image and this we are going to
652:04 - check with the help of examples as well
652:06 - the mask layer image can be a PNG image
652:09 - or an SVG image a CSS gradient or an SVG
652:13 - mask element so guys out of all these we
652:16 - are going to check the CSS gradient
652:18 - example over here in which case on top
652:20 - of the original image we are going to
652:23 - create a mask image over here now guys
652:25 - it is very important to note that most
652:27 - browsers only have partial support for
652:29 - CSS masking you will need to use the
652:32 - webkit prefix in addition to the
652:34 - standard property in most of the
652:36 - browsers so this testing part you have
652:38 - to handle while you are implementing the
652:40 - mask image property based on your
652:42 - project requirements so guys let us move
652:44 - to the examples over here so the vs code
652:47 - what we are going to do is we will
652:48 - remove the previous lines of code that
652:50 - we had written in the HTML and the CSS
652:53 - files over here now guys what we are
652:55 - going to do is we will simply create a
652:57 - div tag with the class container over
652:59 - here and then after this we are going to
653:02 - create the IMG tag inside this diff tag
653:04 - over here and then we will set the
653:06 - sample image that we already have inside
653:09 - the directory where the HTML and the CSS
653:12 - files are present and then for the alt
653:14 - attribute we will set the text S text
653:16 - test image now guys let me just save
653:18 - this file now and try reloading this
653:20 - page on the browser so as you can see
653:22 - this is the original image over here let
653:24 - us set the width and height for this
653:25 - particular image so we will use the IMG
653:28 - tag over here and let's say we have the
653:30 - square image in this case so we will set
653:33 - the width as 300 pixels and also the
653:36 - height as 300 pixels over here so guys
653:38 - basically we have set the width and
653:40 - height of this image in this case let me
653:42 - just save this file now and try
653:44 - reloading this page once again on the
653:46 - browser as you can see this is the
653:47 - square image that is getting displayed
653:49 - now guys in order to display the mask
653:52 - image on top of this particular original
653:54 - image simply we can use the linear
653:56 - gradient or the radial gradient as well
653:59 - apart from the other images that you can
654:01 - set as the mask image so guys let us
654:03 - check the example of linear gradient
654:05 - first of all so inside the style. CSS
654:08 - file over here for the diff tag which is
654:10 - having the class container we are going
654:12 - to set the CSS property so guys over
654:14 - here we have the dot character follow by
654:16 - the class name and then the property
654:18 - that we are going to use is mask image
654:20 - over here and then we will set the value
654:23 - as linear gradient and then we need to
654:25 - provide the color so guys basically one
654:28 - side of the image need to be transparent
654:30 - in this case so what we will do is let
654:32 - us say we want the top side of the image
654:34 - to be transparent and the bottom side to
654:36 - be having the original colors so guys
654:39 - what we will do is first of all we will
654:41 - set the value as transparent in this
654:43 - case followed by comma and then we have
654:45 - the black color over here let me just
654:47 - save this file now and try reloading
654:49 - this page once again on the browser so
654:51 - as you can see some kind of transparency
654:53 - is added as a mask over here on top of
654:56 - the original image so guys this is the
654:58 - functionality of the mask image CSS
655:00 - property it helps us in order to create
655:03 - a mask on top of the original image let
655:06 - us say we want this transparency at the
655:08 - bottom of the image so simply we need to
655:10 - revert the changes that first of all we
655:12 - need to set the color that is black over
655:14 - here and then after this the second
655:16 - parameter can be transparent in this
655:18 - case let me just save this file now and
655:20 - notice that the transparency is at the
655:22 - top right now but it will come at the
655:24 - bottom when we reload this page so when
655:26 - we reload this page as you can see at
655:28 - the bottom there is a transparency that
655:30 - is added to this particular original
655:32 - image with the help of the Mask layer
655:34 - now guys apart from this we can also set
655:36 - the radial gradient value for the mask
655:39 - image so let us check that as well so
655:41 - what we have to do is instead of having
655:43 - the linear gradient over here simply we
655:45 - will use use the radial gradient and in
655:48 - this case let us provide the shape as
655:50 - Circle over here and then let us say we
655:53 - have the black portion of 50% and Then
655:56 - followed by the rgba component in which
655:59 - case we will set the alpha component
656:01 - over here so guys we have 0 0 and then 0
656:05 - once again for the RGB value and then we
656:07 - will have 0.5 over here and let's say we
656:10 - have the percentage as 50% in this case
656:13 - let me just save this file now and try
656:15 - reload in this page once again on the
656:17 - browser so as you can see this is the
656:19 - mask layer that can be displayed with
656:21 - the help of the radial gradient so guys
656:23 - over here we can decrease the percentage
656:26 - of the black component over here so
656:27 - let's say we set it as 30% and also we
656:30 - will increase the width of the image so
656:33 - let us say we set it to 500 pixels over
656:35 - here let me just save this file now and
656:37 - try reloading this page once again on
656:39 - the browser so to some extent we can see
656:41 - the radial gradient over here and then
656:44 - after setting the black component as 20
656:46 - % and rgba component to 10% over here we
656:49 - can see that there's a radial gradient
656:52 - as a mask layer on top of the original
656:54 - page and we can see the circle at the
656:56 - right side of the image so guys in this
656:58 - way you can provide the mask layer for
657:00 - any of the original images based on your
657:03 - project requirements so guys comment in
657:05 - the comment section below whether you
657:06 - have learned something out of this video
657:08 - please make sure that you like this
657:09 - video so that it reaches to more people
657:12 - and subscribe to this channel so that
657:13 - you get the notifications on upcoming
657:15 - videos as well as well the next video
657:17 - that we are going to talk about is
657:18 - button styling in CSS so stay tuned so
657:22 - now we will see button styling in CSS so
657:25 - guys basically we will use the different
657:27 - CSS properties in order to style the
657:30 - buttons so first of all we are going to
657:32 - see how the default button looks like on
657:34 - the web browser so guys let us move to
657:37 - the VSS code over here and simply in the
657:39 - HTML file we are going to have a simple
657:42 - button tag over here and then for this
657:45 - particular button tag we are going to
657:47 - have the text that is default in this
657:49 - case after which we are going to have a
657:51 - line break over here so guys we have the
657:53 - default text for this button let us see
657:56 - how it looks like on the web browser so
657:58 - let me just save this file now and try
658:00 - reloading this page on the browser so as
658:02 - you can see this is the default button
658:04 - that appears on most of the browsers
658:07 - over here now guys in most of the
658:08 - projects you will have to provide
658:10 - certain CSS properties in order to
658:12 - modify the look and feel of the button
658:15 - that you want to display so guys over
658:17 - here we are going to cover the various
658:19 - types of buttons as you can see we have
658:21 - the button color over here first of all
658:23 - so let us check that as well so after
658:25 - this particular default button let us
658:27 - have the div tag inside which we will
658:29 - have our customized buttons for which we
658:32 - will apply the CSS properties so guys
658:34 - over here we will set the button with
658:36 - the class that is background color that
658:39 - is blue over here so guys basically we
658:41 - are setting the class name that is BG
658:43 - blue in this case and then we will set
658:45 - the text is blue for this particular
658:47 - button and then apart from this we will
658:49 - also have the buttons with other colors
658:51 - as well so we will have the blue green
658:54 - and red color buttons over here so
658:56 - simply we are going to set the class
658:58 - names as BG blue BG green and then BG
659:02 - red over here and the text that we are
659:04 - going to set is green and red in this
659:07 - case so guys basically these are the
659:09 - three buttons that will be displayed on
659:11 - the web browser and they are present
659:13 - inside the diff tag over here let me
659:15 - just save this file now and try
659:17 - reloading this page once again on the
659:18 - browser notice that all these buttons
659:20 - are displayed in the default way that's
659:22 - because we have not provided any of the
659:24 - CSS properties to these buttons so guys
659:27 - what we are going to do is inside the
659:29 - style. CSS file that is linked to this
659:31 - particular HTML file over here we are
659:33 - going to provide certain common CSS
659:36 - properties for the buttons that are
659:38 - present inside the diff tag so after the
659:40 - diff tag we are going to provide the
659:42 - button over here after which we are
659:44 - going to set certain properties so let's
659:47 - say we provide the margin property as 10
659:49 - pixels over here and then apart from
659:51 - this we are also going to set the
659:53 - padding property as 10 pixels over here
659:56 - and then we are also going to have the
659:58 - color as white color in this case so
660:01 - that the text for all these buttons are
660:03 - displayed in the white color let me just
660:05 - save this file now and try reloading
660:07 - this page once again on the browser
660:09 - notice that all these properties are
660:11 - applied to these buttons which are
660:13 - present inside the diff tag over here
660:15 - now one by one we are going to set the
660:17 - background colors for all these buttons
660:19 - in this case so guys simply we are going
660:21 - to set the CSS properties for all these
660:24 - buttons before which we are going to set
660:26 - the Border equal to none for all these
660:28 - buttons so that we don't see these black
660:30 - color borders that you can see right now
660:32 - so guys let us set the background color
660:35 - for all these buttons with the help of
660:36 - the class name over here so first of all
660:38 - we have the BG blue class in which case
660:41 - we are going to set the background color
660:44 - as blue color over here similar Illy we
660:46 - are going to set the green and red color
660:48 - background for the classes that is BG
660:51 - green and BG red in this case so guys
660:53 - over here we are going to set the
660:55 - background color as green and for the
660:57 - other class that is BG red we are going
660:59 - to set the background color as red in
661:01 - this case let me just save this file now
661:03 - and try reloading this page once again
661:05 - on the browser so as you can see these
661:07 - are the buttons with the different
661:09 - background color that we have provided
661:11 - with the help of the CSS properties and
661:13 - you can see that there is a default
661:14 - Button as well over here which is
661:16 - looking less attractive compared to the
661:18 - other buttons for which we have provided
661:20 - the CSS properties so guys this is the
661:22 - way that you can provide the background
661:24 - color for the different buttons over
661:26 - here now apart from this when we get the
661:28 - cursor on these buttons we need to
661:30 - change the cursor to hand tool so what
661:32 - we can do is for all the buttons in this
661:34 - case that are present inside the diff
661:36 - tag we are going to set the cursor CSS
661:39 - property to the value that is pointer
661:41 - over here let me just save this file now
661:43 - and try reloading this page so when we
661:45 - get the cursor on the button as you can
661:47 - see it has been converted to the hand
661:49 - tool over here so in this way you can
661:51 - set the cursor property as well now guys
661:53 - apart from this let us also see how we
661:55 - can set the button font size so let us
661:57 - move to the HTML file first of all and
662:00 - what we will do is we will copy these
662:02 - lines of code once again and this time
662:04 - we are going to change the class name in
662:06 - order to set the font size over here so
662:09 - let's say we have the font size of 12
662:11 - pixels first of all and then we have the
662:13 - font size of 16 pixels which is the
662:16 - default font size for the button and
662:18 - then we have the font size of 20 pixels
662:21 - over here and then guys for the text
662:23 - part ins set of blue we are going to
662:25 - have 12 pixels in this case and then
662:27 - apart from this for this green we are
662:29 - going to say 16 pixels which is the font
662:31 - size and then for the red we are going
662:33 - to have 20 pixels over here so we are
662:36 - going to have all these buttons with
662:38 - different font sizes and then apart from
662:40 - this we will also have the background
662:42 - colors for all these buttons so guys
662:44 - simply we are going to set the BG blue
662:46 - for the first button and then followed
662:48 - by BG Green in this case for the second
662:51 - button and then over here we will set BG
662:53 - red for the third button over here so
662:55 - guys in order to apply the CSS
662:58 - properties from multiple classes you can
663:00 - provide the different classes inside the
663:03 - class attribute over here which should
663:05 - be separated with the space character in
663:07 - this way so let me just save this file
663:08 - now and try reloading this page once
663:10 - again on the browser notice that we have
663:13 - got all the background colors for these
663:15 - buttons but the font size is not set so
663:17 - far so what we are going to do is we
663:19 - will set the font size using this font
663:22 - 12 font 16 and font 20 classes inside
663:25 - the CSS file so guys over here after
663:28 - this we are going to set the font size
663:30 - equal to 12 for this particular class so
663:33 - simply we are going to set the font size
663:35 - CSS property to 12 pixels over here and
663:38 - then similarly we are going to set the
663:40 - 16 pixels and 20 pixels font size so
663:43 - over here we have font 16 it is equal
663:45 - equ Al to 16 pixels and then we have
663:47 - font 20 it is equal to 20 pixels over
663:50 - here let me just save this file now and
663:52 - try reloading this page once again on
663:54 - the browser so as you can see we have 12
663:57 - pixels 16 pixels and then 20 pixels font
664:00 - size for all these respective buttons
664:02 - over here now guys apart from this we
664:04 - can also have the rounded buttons as
664:06 - well so what we will do is simply we are
664:08 - going to copy these lines of code once
664:10 - again over here and then what we are
664:13 - going to do is instead of having the
664:14 - font class over here we will have the
664:17 - class that starts with round over here
664:19 - so guys basically we have round five
664:22 - which will set the Border radius as 5
664:24 - pixels over here and then we have the
664:26 - round 10 and then we will have the round
664:29 - 50 in which case we are going to set it
664:31 - as 50% in this case so guys over here we
664:34 - will set it as 5 pixels so that we can
664:37 - identify that this is the button with
664:39 - the Border radius as 5 pixels and then
664:41 - we have 10 pixels over here and then in
664:44 - this case we will have 50% over here let
664:46 - me just save this file now and try
664:48 - reloading this page once again on the
664:50 - browser as you can see we have all the
664:52 - buttons in this case but we need to
664:54 - provide the Border radius to all these
664:56 - classes so what we are going to do is we
664:58 - will copy this round five over here and
665:00 - then inside the style. CSS file we will
665:03 - have this class name that is around five
665:05 - and then for this class we are going to
665:07 - set the Border radius which will be
665:09 - equal to 5 pixels over here similarly we
665:12 - will copy this line of code for the
665:14 - round 10 and and the round 50 classes as
665:17 - well for which case we are going to set
665:19 - the Border radius as 10 pixels and then
665:22 - 50% respectively so guys over here we
665:24 - have set the Border radius properties as
665:27 - well let me just save this file now and
665:29 - try reloading this page once again on
665:31 - the browser as you can see this is the 5
665:33 - pixel border radius and Then followed by
665:35 - the 10 pixel border radius for this
665:37 - button and then this is the 50% border
665:40 - radius which means approximately it will
665:42 - be a circular button over here when the
665:44 - width and the height of the button is
665:46 - same so guys in this way you can set the
665:48 - Border radius for a specific button
665:50 - based on your requirements and then
665:52 - apart from this we will also have the
665:54 - colored button borders so guys so far we
665:56 - have provided the colors inside the
665:59 - button but what we are going to do is we
666:01 - will have the button color that is the
666:03 - background color is white but these
666:05 - colors will be the Border colors for
666:07 - these buttons so guys let us check that
666:09 - as well so what we will do is simply I'm
666:11 - going to copy these lines of code over
666:13 - here once again and then we we will
666:15 - remove the class names over here from
666:17 - all these buttons so we will set the
666:20 - Border as blue over here and then apart
666:23 - from this we will set the Border as
666:25 - green for the second button so let me
666:27 - just quickly set the Border green class
666:30 - name and then the last button will have
666:32 - the border red class name and then we
666:34 - will set the text as blue green and red
666:37 - respectively so guys over here we have
666:39 - set the buttons with the Border blue
666:42 - border green and the border red class
666:44 - name so what we have to to do is we need
666:46 - to set the background color as white for
666:48 - all these buttons and then we are going
666:50 - to set the Border color for these
666:52 - buttons so let me just copy this class
666:54 - name and then inside the style. CSS file
666:57 - over here simply we are going to provide
666:59 - the CSS properties for these class names
667:01 - so first of all border blue it will have
667:04 - the background color as white color over
667:06 - here and then we need to set the border
667:08 - so let's say we set the Border as one
667:10 - pixel which will be of the solid type in
667:13 - this case and then the color should be
667:15 - blue color over here so guys let me just
667:17 - save this file now and let us see how it
667:19 - looks like on the web browser so on the
667:21 - browser let me just reload this page as
667:23 - you can see we have the Border color as
667:26 - the blue color over here but guys we are
667:27 - not able to see the text because it is
667:30 - of the color white by default so we need
667:32 - to change the color to black as well so
667:35 - guys over here we are going to set the
667:37 - color as black once again and since this
667:39 - particular color property is having the
667:41 - black color over here for this border
667:43 - blue so this black color will be
667:45 - implement mented and it will override
667:47 - the previous value that is color equal
667:49 - to White that we had set for the button
667:51 - tag over here that's because the recent
667:54 - color that we are setting is black in
667:55 - this case so guys always remember
667:57 - whatever the recent CSS property is
668:00 - applied to any of the classes or the
668:02 - text that particular CSS property will
668:05 - be implemented or used when that HTML
668:08 - element is displayed on the web browser
668:10 - so let me just save this file now and
668:12 - try reloading this page once again on
668:14 - the browser so as you can you can see we
668:16 - have this blue color button that is
668:18 - getting displayed similarly we need to
668:20 - display the green and the red color
668:21 - buttons as well so we are going to copy
668:24 - these lines of code and change the
668:26 - colors to green and red over here so we
668:29 - have the classes border green and over
668:31 - here instead of having the blue color
668:33 - border we will have the green color
668:35 - border over here and then for the border
668:37 - red class we are going to have the red
668:40 - color border over here let me just save
668:42 - this file now and try reloading this
668:44 - page once again on the browser so as you
668:46 - can see we have the blue green and red
668:48 - buttons in this case for which the
668:50 - background color is white and the Border
668:52 - colors are blue green and red
668:54 - respectively so guys in this way instead
668:57 - of having the background colors you can
668:59 - also have the Border colors and your
669:00 - buttons will look attractive on the
669:02 - website now guys apart from this we can
669:05 - also have the hoverable buttons so over
669:07 - here what we are going to do is when the
669:09 - user gets the mouse cursor on these
669:11 - buttons over here we want to change its
669:14 - background color to the the same color
669:16 - so let's say when the user gets the
669:17 - mouse cursor on this blue button over
669:20 - here so the background color should be
669:22 - set as blue and the font color should be
669:24 - set as white so what we can do is simply
669:27 - for this border blue class we need to
669:30 - define the Pudo class that is hover so
669:32 - guys simply we are going to copy this
669:34 - border blue class name followed by colon
669:37 - and then on Hover event which is the
669:39 - sudo class we need to set the background
669:42 - color as blue color in this case so
669:44 - basically we we are setting the
669:45 - background color as blue and we want to
669:48 - set the color as white so that the text
669:50 - color can be displayed properly on this
669:52 - particular background color that is set
669:54 - as blue so let me just save this file
669:56 - now and try reloading this page once
669:58 - again on the browser so by default as
670:00 - you can see this is the button that is
670:01 - getting displayed but when the user gets
670:03 - the mouse cursor on this blue button
670:05 - over here the background color is
670:07 - getting updated so guys in this way you
670:09 - can set the hover effect on the green
670:11 - and the red buttons as well so let us do
670:14 - that as well quickly so simply we are
670:16 - going to copy these lines of code and
670:18 - over here instead of having the blue we
670:20 - are going to have the Border Green Glass
670:22 - name for which the background color
670:24 - should be green color over here and for
670:26 - the border red hover event we are going
670:28 - to have the background color as red in
670:31 - this case so guys let me just save this
670:32 - file now and try reloading this page
670:34 - once again on the browser when we get
670:36 - the mouse cursor on green button you can
670:38 - see that the background color is updated
670:40 - to green and the red button the
670:42 - background color is updated to Red in
670:44 - this way we can have have the hover
670:45 - effect on the buttons as well based on
670:48 - the CSS properties that we have seen by
670:50 - using the hover event over here now guys
670:52 - apart from this we can also have the
670:54 - shadow for the buttons so let us create
670:57 - another button over here with the class
670:59 - button Shadow so guys let me just change
671:01 - the class name to BTN and then we have
671:04 - Shadow over here and basically we are
671:07 - going to change the text to Shadow
671:09 - button in this case so guys we have
671:11 - another button that is Shadow button
671:13 - over here let me just save this file now
671:15 - and and try reloading this page once
671:16 - again on the browser so this is the
671:18 - button that is getting displayed over
671:19 - here let us change the CSS properties
671:22 - for this button Shadow so let me just
671:24 - copy this class name and then paste this
671:26 - over here after the dot character and
671:28 - what we are going to do is we will set
671:30 - the background color as aqua color over
671:32 - here we will set the text color as black
671:35 - color in this case let me just save this
671:37 - file now and try reloading this page
671:39 - once again on the browser so as you can
671:41 - see we have the shadow button over here
671:43 - now guys in order to create the Shadow
671:45 - for this button we can simply use the
671:47 - Box Shadow CSS property so over here
671:50 - inside the button Shadow class we will
671:52 - have the box Shadow CSS property and
671:55 - first of all we will have to set the
671:57 - horizontal Shadow so let's say we have
671:59 - two pixels of horizontal Shadow and then
672:01 - 2 pixels of vertical Shadow and then we
672:04 - need to provide the blur effect so let's
672:06 - say five pixels of blur effect and the
672:08 - color of the shadow that we want to
672:10 - display so let's say we have the black
672:11 - color over here let me just save this
672:13 - file now and try reloading this page
672:15 - once again on the browser so as you can
672:17 - see we have the black color shadow that
672:19 - is getting displayed over here apart
672:21 - from this we can also have the multiple
672:23 - Shadows so after the black color we can
672:26 - provide comma and then let's say we
672:28 - provide 0 0 pixels for horizontal and
672:30 - vertical Shadow and then for the blur
672:32 - effect let's say we provide 20 pixels of
672:34 - blur effect over here and then apart
672:36 - from this let us say we have the color
672:39 - of the Shadow as blue after this black
672:41 - color shadow so let me just save this
672:43 - file now and try reloading this page you
672:45 - will notice that after this black color
672:47 - shadow there will be the blue color
672:48 - shadow that will be displayed for this
672:50 - particular Shadow button so when we
672:52 - reload this page you can see that there
672:54 - is a blue color shadow that is getting
672:56 - displayed over here which is making this
672:58 - button look more attractive on the web
673:00 - page so guys this is the way that you
673:02 - can provide the shadow effect for the
673:04 - button and the other effects as well
673:06 - based on the CSS properties that we have
673:08 - seen so far for the button HTML element
673:11 - so guys comment in the comment section
673:13 - below whether you have learned something
673:15 - out of this video please make sure that
673:16 - you like this video so that it reaches
673:18 - to more people and subscribe to this
673:20 - channel so that you get the
673:21 - notifications on upcoming videos as well
673:23 - the next video that we are going to talk
673:25 - about is pagination in CSS so stay tuned
673:29 - so now we will see pagination in CSS so
673:32 - guys basically pagination helps to
673:34 - display The Limited results on the web
673:36 - page across the various pages in the
673:38 - same view and this we are going to check
673:40 - with the help of examples as well we
673:42 - will see how we can create the page in
673:45 - section so that the user can navigate
673:47 - through the different pages on the same
673:50 - view on the web page so guys first of
673:52 - all let us see how we can create the
673:54 - simple page Nation so let us move to the
673:56 - vs code over here and simply we are
673:58 - going to create a diff tag with the
674:00 - class pagination in this case so guys we
674:03 - have the diff tag with the class
674:05 - pagination over here and let us add
674:07 - certain links in this case so that the
674:09 - user can click on that link in order to
674:12 - navigate through the different pages so
674:14 - guys over here we have have the a tag
674:15 - with the hdf attribute we can provide
674:18 - the hash character over here and simply
674:20 - we are going to number the pages so guys
674:21 - this is the first page and so on we are
674:24 - going to create more pages over here so
674:26 - as you can see we have created the
674:28 - pagination diff tag over here and it is
674:30 - having seven links in this case now guys
674:32 - let me just save this file now and try
674:34 - reloading this page on the browser and
674:36 - let us see how it looks like so as you
674:38 - can see these are the links that the
674:39 - user can navigate to now guys we can
674:41 - also add the previous and the next
674:44 - arrows over here so simply I'm going to
674:46 - copy this line of code in this case and
674:48 - then what we will do is we will use the
674:50 - special character in this case so guys
674:52 - we have the special character that is
674:54 - less than symbol which will be displayed
674:56 - twice and then at the end as well we are
674:58 - going to create another special
675:00 - character over here so guys this special
675:02 - character will be the greater than
675:04 - symbol which will be displayed twice so
675:06 - let me just save this file now and try
675:08 - reloading this page once again on the
675:10 - browser so as you can see these are the
675:11 - arrows over here that is the less than
675:13 - symbol and the greater than symbol which
675:15 - will represent the previous and the next
675:17 - pages that the user want to navigate to
675:19 - now guys apart from this let us get this
675:21 - pagination at the center of the page so
675:23 - what we will do is we will have another
675:25 - diff tag over here and then we will have
675:27 - the class as a center in this case and
675:30 - then we will end this diff tag after the
675:32 - pagination tag over here so guys simply
675:34 - we are enclosing this pagination tag
675:36 - inside another diff tag and then in this
675:39 - case we will align the text at the
675:41 - center so guys let us move to the style.
675:43 - CSS file over here and simply we are
675:45 - going to have the class name that is
675:47 - Center in this case and then we are
675:49 - going to save text line that is equal to
675:51 - Center let me just save this file now
675:53 - and try reloading this page so as you
675:55 - can see these are the pages inside the
675:56 - page Nation diff tag now guys we can
675:58 - also remove this text decoration which
676:01 - is coming by default over here so simply
676:03 - we are going to move to the style. CSS
676:05 - file in this case and then inside the
676:07 - pagination we need to go to the a tag
676:10 - over here so simply we will say
676:11 - pagination class in this case and then
676:13 - inside this we have have the a tag and
676:15 - then what we will do is we will have the
676:17 - text decoration as none also we will
676:20 - provide certain padding over here so
676:21 - let's say we have a padding of five
676:23 - pixels so that there is enough space in
676:25 - between the page numbers so let me just
676:27 - save this file now and try reloading
676:29 - this page once again on the browser so
676:31 - as you can see now the pagination is
676:33 - looking more decent over here apart from
676:35 - that we can also have the color for all
676:38 - these text so let's say we have the
676:40 - black color instead of the default blue
676:42 - color for the link so as you can see we
676:43 - have provided the color text for all the
676:46 - pages inside this page Nation now guys
676:48 - apart from this we can also have the
676:50 - hoverable page ination in which case
676:52 - when the user hovers over one of the
676:55 - pages over here the background color can
676:57 - be updated so that the user gets the
676:59 - feedback that that is the page number
677:01 - that he or she wants to click so guys
677:03 - what we have to do is simply inside the
677:05 - page Nation we need to have the Pudo
677:08 - element that is hover so guys inside the
677:11 - page Nation class we have the AAG and
677:13 - for this we are going to create the
677:15 - hover Pudo class over here so guys what
677:17 - we want to do is we need to change the
677:19 - background color so let's say we want to
677:22 - change the background color to Aqua over
677:24 - here so basically when the user gets the
677:26 - mouse cursor on this a tag so the hover
677:29 - sudo class will help us in order to
677:32 - update the background color to Aqua let
677:34 - me just save this file now and try
677:36 - reloading this page once again on the
677:37 - browser and when the user gets the mouse
677:40 - cursor on these Pages as you can see we
677:42 - are getting the background color up to
677:45 - EA over here so guys this is the
677:47 - hoverable pagination that we can create
677:49 - based on our project requirement and
677:51 - then when the user clicks on any of the
677:53 - specific links simply you can provide
677:55 - the required HF attribute over here the
677:58 - URL that you want to call based on the
678:01 - page number that the user has clicked on
678:03 - so guys this is the way that the
678:04 - pagination will work apart from this we
678:06 - can also have the active page color over
678:08 - here so let's say the second page is
678:10 - active right now so what we can do is
678:12 - simply we will have the class over here
678:15 - and we will say active as the value for
678:17 - this class and simply when the user
678:18 - clicks on any of the pages you can set
678:21 - the class for that particular page as
678:23 - active and remove the class from this
678:25 - particular active page over here so guys
678:27 - what we have to do is inside the style.
678:29 - CSS file simply we need to update the
678:32 - background color for this specific page
678:34 - that is second which is having the class
678:36 - equal to active so guys what we are
678:38 - going to do is simply I'm going to copy
678:40 - these lines of code over here and then
678:42 - inside the pagination we will have a a
678:45 - tag which is going to have the active
678:47 - class over here so I'm going to remove
678:49 - this H Pudo element and simply we will
678:51 - say a do active in this case so guys
678:54 - basically whatever CSS properties that
678:56 - we provide inside this particular
678:58 - selector it will be only applied to the
679:00 - a tag that is having the class active so
679:03 - guys what we want to do is let's say we
679:05 - want to update the background color as
679:07 - green yellow over here for the page that
679:09 - is active So currently we have made the
679:11 - second page as active over here so let
679:13 - us see how it looks looks like let me
679:15 - just save this file now and try
679:17 - reloading this page once again on the
679:18 - browser so as you can see this is the
679:20 - active page right now and when the user
679:23 - goes to the other pages over here on H
679:25 - the background color is getting updated
679:27 - in this case so guys in this way you can
679:30 - also have the active page color apart
679:32 - from this you can also have the
679:33 - hoverable transition effect so guys in
679:36 - this case on Hover there is no
679:37 - transition currently but we can provide
679:39 - the transition so that there is certain
679:42 - kind of Animation that the user
679:43 - experiences so guys over here we can use
679:46 - the transition CSS property and then
679:48 - simply we can use the background color
679:50 - because that is the CSS property that we
679:52 - are changing on Hover event and then we
679:54 - need to provide the timing so let's say
679:56 - we provide 0.5 seconds in this case so
679:59 - guys basically what will happen is there
680:01 - is no background color by default for
680:03 - the a tag but we are changing the
680:05 - background color on over event so that
680:08 - background color will be updated to the
680:10 - aqua color within the time span of 0.5
680:13 - second instead of 0 seconds which was
680:15 - present by default so guys let me just
680:17 - save this file now you will experience
680:19 - that the background color of the a tag
680:21 - will be updated to Aqua with some
680:23 - transition so let us reload this page
680:25 - once again on the browser and when we
680:27 - get the mouse cursor over here as you
680:29 - can see there is certain transition that
680:31 - is fade in and Fade Out of the
680:32 - background color for all these a tags
680:35 - over here which is nothing but it is
680:37 - representing the pages inside this
680:39 - pagination so guys you can have the
680:40 - transition effect over here and then
680:42 - apart from this you can also have the
680:44 - bordered pagination in this case so guys
680:46 - basically we have not provided any
680:48 - borders to all these pages so what we
680:50 - will do is simply inside the AAG we can
680:53 - have the Border CSS property as well so
680:56 - when we provide border of let's say one
680:58 - pixel of the type solid we can provide
681:01 - the color as gray color over here let me
681:03 - just save this file now and try
681:04 - reloading this page once again on the
681:06 - browser so as you can see all the pages
681:08 - are now getting the borders over here
681:10 - but guys there is a space in between all
681:12 - the borders for all these pages so what
681:14 - we can do is simply we can use the float
681:17 - property in this case and the value
681:19 - should be left over here let me just
681:21 - save this file now so this is used in
681:23 - order to remove the Border spacing in
681:25 - between the two borders of these pages
681:28 - and when we reload this page so as you
681:30 - can see there is no more spacing between
681:32 - the borders of all these pages over here
681:34 - so guys in this way you can apply the
681:36 - borders as well and this type of
681:37 - pagination is looking more decent over
681:39 - here along with the borders and the
681:41 - hoverable effect in this case now guys
681:43 - apart from this you can you can also
681:45 - apply multiple other CSS properties to
681:47 - all the pages inside your pagination
681:49 - diff tag you can have the rounded
681:51 - pagination as well in which case you
681:53 - will be using the Border radius and you
681:55 - can also provide the space in between
681:58 - the link by using the margin property so
682:00 - guys I'll leave this up to you as a
682:02 - homework for you so that you can
682:04 - practice on your own and based on your
682:05 - project requirements you can apply any
682:07 - of the CSS properties for all the pages
682:10 - inside your pagein nation so comment in
682:12 - the comment section below whether you
682:14 - have learned something out of this video
682:16 - please make sure that you like this
682:17 - video so that it reaches to more people
682:19 - and subscribe to this channel so that
682:21 - you get the notifications on upcoming
682:23 - videos as well the next video that we
682:24 - are going to talk about is multiple
682:26 - columns in CSS so stay tuned so now we
682:30 - will see multiple columns in CSS so guys
682:33 - basically the CSS multicolumn layout
682:36 - allows an easy definition of the
682:38 - multiple Columns of text just like the
682:40 - text inside the newspapers so guys this
682:43 - we are going to check with the help of
682:44 - examples as well it is very important to
682:46 - note that some of the older browser
682:48 - versions might not support the column
682:50 - properties so it is very important that
682:52 - you test the implementation of these
682:55 - column CSS properties on the various
682:57 - browsers when you are going to deploy
682:59 - your code on production so guys first of
683:01 - all we are going to see what is column
683:03 - count over here which is one of the CSS
683:05 - properties in order to apply the column
683:08 - layout in CSS so let us move to the VSS
683:10 - code over here and simply I'm going to
683:12 - remove the previous lines of code that
683:14 - we had written in the HTML and the CSS
683:17 - files over here now simply we are going
683:19 - to create a diff tag with the class
683:21 - newspaper over here and above that we
683:23 - are going to have the H1 heading tag and
683:26 - we can say that below is the newspaper
683:29 - so guys over here we are creating the
683:31 - layout similar to a newspaper over here
683:34 - which will have multiple columns and
683:36 - then inside this let us say we have some
683:38 - random text that is getting generated so
683:40 - over here we are going to create the
683:42 - random text in this case let me just
683:44 - save this file now and try reloading
683:46 - this page on the browser to see how it
683:49 - looks like so as you can see this is the
683:51 - random text that is getting generated
683:53 - over here we are first of all having the
683:55 - H1 tag that is displaying below is the
683:57 - newspaper statement and then we have the
683:59 - simple random text that is generated now
684:02 - guys if we want this random text that is
684:04 - generated to be divided into multiple
684:07 - columns in the same web browser so what
684:09 - we can do is simply we can provide the
684:11 - column CSS property to this diff tag so
684:14 - what we have to do is we will use the
684:16 - class name over here and inside the
684:18 - style. CSS file we will provide dot
684:21 - followed by the newspaper that is the
684:23 - class name and simply we can use the
684:25 - column count CSS property so guys this
684:28 - particular column count CSS property
684:30 - helps us to specify how many columns we
684:33 - want to divide this particular diff tag
684:35 - to so let's say we want three columns
684:38 - out of this entire text over here so
684:40 - simply we provide the value of three to
684:42 - this column count let me just save this
684:44 - file now and try reloading this page
684:46 - once again on the browser so as you can
684:48 - see these are the column numbers that is
684:51 - three columns can be displayed over here
684:53 - out of the diff tag that we have created
684:55 - now guys apart from this you can also
684:57 - increase the column count so let's say
684:59 - if you want four columns to be displayed
685:01 - let me just save this file now and try
685:03 - reloading this page as you can see this
685:04 - is First Column second column third
685:07 - column and fourth column so the more the
685:09 - number of columns that you are going to
685:11 - increase the Lesser will be the width of
685:13 - each column and that is how the column
685:15 - CSS property will work now guys apart
685:17 - from this there is another column
685:19 - property that is column Gap over here
685:21 - which means the Gap in between both
685:23 - these columns in this case so guys by
685:25 - default we have certain Gap that is
685:27 - provided in between all the columns but
685:30 - you can modify it with the help of the
685:32 - column Gap so in this case what we will
685:34 - do is simply we are going to provide the
685:36 - column gap of let's say 10 pixels over
685:38 - here let me just save this file now you
685:40 - will notice that this particular Gap in
685:42 - between all the columns will get updated
685:45 - over here when we reload this page as
685:47 - you can see the column Gap got updated
685:49 - in this case let us increase the column
685:51 - Gap to let's say 30 pixels over here let
685:54 - me just save this file now the column
685:56 - Gap will increase now in between all the
685:58 - columns so when we reload this page as
686:00 - you can see the gap between all the
686:02 - columns is increased and in this way you
686:04 - can simply use the column Gap CSS
686:06 - property as well apart from this we have
686:08 - something called as column rule style so
686:11 - guys let us check that as well so just
686:13 - like border styles CSS property we have
686:15 - something called as column rule style
686:18 - CSS property which will help us in order
686:20 - to provide multiple values over here so
686:22 - as you can see similar to border style
686:25 - values we have the values such as dashed
686:27 - dotted double Grove and so on so simply
686:30 - we are going to provide the solid column
686:32 - rule style over here so guys basically
686:34 - what will happen is a simple line will
686:36 - be displayed in between all these
686:38 - columns over here when we say column
686:40 - rule style that is equal to solid so let
686:43 - me just save this file now and try
686:44 - reloading this page once again on the
686:46 - browser so as you can see this is a
686:48 - simple line that is getting displayed
686:50 - over here and in this case we have
686:51 - provided the solid value apart from this
686:54 - we can also provide the dashed value as
686:56 - well let me just save this file now and
686:58 - try reloading this page so as you can
686:59 - see these are the dash lines that are
687:02 - getting appeared in between the columns
687:04 - so guys this is the way you can set the
687:06 - column rule style over here apart from
687:08 - this you can also set the column rule
687:10 - width and the column rule color so let
687:12 - us check that as well so simply we can
687:14 - say column rule width in this case and
687:17 - let's say we want only the width of one
687:19 - pixel to be displayed as the line in
687:22 - between the columns so let me just save
687:24 - this file now and try reloading this
687:26 - page once again on the browser so there
687:27 - is a very thin line that is getting
687:29 - displayed over here let us increase the
687:32 - width to 10 pixels and when we reload
687:34 - this page as you can see these are the
687:36 - dashed lines that are getting displayed
687:38 - over here in between the columns and let
687:40 - us change the color as well so for color
687:42 - we will have column rule color in this
687:44 - case and simply we will set the color as
687:47 - dark blue over here let me just save
687:49 - this file now and try reloading this
687:50 - page so as you can see this is the dark
687:52 - blue color that is getting displayed
687:54 - over here we can also display some other
687:56 - color so let's say we want yellow color
687:58 - to be displayed so as you can see this
688:00 - is the yellow color column rule that is
688:02 - getting displayed over here now guys
688:03 - apart from all these we can also have
688:05 - the shorthand property that is column
688:07 - over here so instead of providing the
688:09 - style width and color separately we can
688:12 - have the simple column rule CSS property
688:15 - in which case we can provide the width
688:18 - first of all followed by the style that
688:20 - is solid in this case and let's say we
688:22 - want the color to be displayed as gray
688:24 - color over here so simply we can provide
688:26 - the gray color for the column rule let
688:28 - me just save this file now and try
688:30 - reloading this page once again on the
688:31 - browser so as you can see these are the
688:33 - column rule that is the lines that are
688:36 - getting displayed in between the columns
688:38 - based on the CSS property values that we
688:41 - have provided over here and this is the
688:43 - Shand property for all the column rule
688:45 - CSS property now guys apart from this we
688:47 - also have something called as column
688:49 - width so guys basically what we have
688:51 - done so far is we have provided the
688:53 - column count over here in which case it
688:56 - was four right now so you can also
688:58 - provide the column width in such a way
689:00 - that the number of columns will be
689:02 - calculated automatically so in this case
689:04 - we need to comment out the column count
689:07 - over here and simply what we will do is
689:09 - let's say we want each column width to
689:11 - be only of 100 pixels in this case case
689:14 - so when we say column width equal to 100
689:16 - pixels all the column width that are
689:19 - getting generated over here will have
689:21 - the width of 100 pixels in this case and
689:23 - it depends on the content that how many
689:26 - columns will be generated so let me just
689:29 - save this file now and try reloading
689:31 - this page once again on the browser so
689:33 - as you can see we have set the column
689:34 - with as 100 pixels over here and due to
689:37 - which there are six columns that are
689:38 - getting generated and if we increase the
689:41 - column width over here so let's say we
689:43 - change the column width to 150 pixels so
689:46 - each column will have the additional
689:48 - width and that is why the number of
689:50 - columns will decrease now so when we
689:52 - reload this page as you can see now we
689:54 - are getting four number of columns and
689:55 - when we increase the width more so let's
689:57 - say we provide 200 pixels of column
690:00 - width and when we reload this page as
690:02 - you can see now we are getting three
690:04 - columns since the entire content can be
690:06 - displayed within three columns when we
690:08 - have the column width of 200 pixels over
690:11 - here so guys this is the way that you
690:12 - can use the column width as well and the
690:15 - other CSS properties related to column
690:17 - based on your project requirements so
690:19 - guys comment in the comment section
690:20 - below whether you have learned something
690:22 - out of this video please make sure that
690:24 - you like this video so that it reaches
690:25 - to more people and subscribe to this
690:27 - channel so that you get the
690:28 - notifications on upcoming videos as well
690:31 - the next video that we are going to talk
690:32 - about is a resized property in CSS so
690:35 - stay tuned so now we will see resize
690:38 - property in CSS so guys basically the
690:41 - resize property specifies if and how how
690:44 - an HTML element should be resizable by
690:47 - the user so guys sometimes based on your
690:49 - project requirements you want the user
690:51 - to resize the text field or any other
690:54 - HTML element that is displayed on the
690:56 - user so in that case you can use the
690:58 - resize property in order to allow the
691:01 - user to resize the HTML element it is
691:04 - very important to note that the Overflow
691:06 - property is required to make use of
691:08 - resized property so guys let us check
691:10 - this with the help of examples in vs
691:12 - code over here so simply I'm going to
691:14 - remove the previous lines of code that
691:16 - we have written in the HTML and the CSS
691:18 - files now guys let us say we have the
691:20 - diff tag over here which is having
691:22 - certain random text that is getting
691:24 - generated in this case so we have the
691:26 - lauram Mt abbreviation and let's say we
691:29 - have 30 words over here that are getting
691:31 - displayed right now now guys let me just
691:33 - save this file now and try reloading
691:35 - this page on the browser to see how it
691:37 - looks like so as you can see this is the
691:39 - text that is getting generated right now
691:41 - so guys what we will do is we will
691:42 - display this text in inside the box
691:44 - which is having a specific width so
691:47 - inside the style. CSS file over here
691:49 - simply we are going to provide the diff
691:51 - tag and let's say it is having the width
691:53 - of 500 pixels in this case and then
691:55 - apart from this we will also have the
691:57 - border of let's say 1 pixel solid of the
692:00 - color gray in this case so let us have
692:02 - the border of one pixel with the gray
692:04 - color and then apart from this we will
692:06 - also provide the padding of 10 pixels so
692:09 - that there is certain spacing in between
692:11 - the border and the content of this D tag
692:14 - let me just save this file now and try
692:16 - reloading this page once again on the
692:17 - browser so as you can see we have this D
692:20 - tag with the border and the content
692:22 - inside this diff tag now guys let's say
692:24 - we want the user to increase or decrease
692:26 - the width of this diff tag so what we
692:29 - can do is simply we can provide the
692:31 - resize property over here so we have the
692:33 - resize CSS property in this case that
692:36 - can be used in order to increase the
692:38 - decrease the width and when we say
692:40 - horizontal as the value it will allow
692:42 - the user to change the width and when we
692:44 - say vertical it will allow the user to
692:46 - change the height of the HTML element so
692:49 - let us say we provide the value as
692:51 - horizontal let me just save this file
692:53 - now and try reloading this page once
692:55 - again on the browser so notice that on
692:56 - the bottom right we don't have anything
692:59 - which will allow the user to increase or
693:01 - decrease the width so guys why this is
693:03 - happening because we have not provided
693:05 - the Overflow property which is required
693:08 - in order to make the use of resized
693:10 - property so simply we are going to make
693:12 - use of the over flow property and simply
693:15 - we can set the value as Auto over here
693:17 - let me just save this file now and try
693:19 - reloading this page once again on the
693:21 - browser so as you can see on the bottom
693:23 - right we can simply click and drag the
693:25 - border of this div tag in order to
693:28 - increase or decrease the width of this
693:30 - particular HTML element so guys in this
693:33 - way you can use the resize property over
693:35 - here now guys apart from this we can
693:37 - also have the value as vertical in which
693:40 - case the user will be allowed to update
693:42 - the height of the diff tag let me just
693:44 - save this file now and try reloading
693:46 - this page once again on the browser now
693:48 - if you see user will be able to increase
693:50 - or decrease the height of this
693:52 - particular diff tag and automatically
693:54 - there will be a scroll bar if the text
693:56 - is not getting displayed within the
693:58 - height of the diff tag over here so in
694:00 - this way you can provide the vertical
694:02 - value to the resize CSS property as well
694:04 - and then apart from this in order to
694:06 - have both that is horizontal and
694:08 - vertical value which means the user
694:10 - should be allowed to update the width
694:13 - and height as as well of this HTML
694:15 - element then simply you can provide the
694:17 - both value to the resize CSS property
694:19 - let me just save this file now and try
694:21 - the loading this page now if you see the
694:23 - user will be able to increase the width
694:25 - as well as the height of this diff tag
694:27 - and automatically there will be a scroll
694:29 - bar that will appear when the content of
694:32 - the diff tag is not within the borders
694:34 - of this particular diff tag in this case
694:36 - so guys in this way simply you can use
694:38 - the resize property in order to allow
694:40 - the user to update the width and height
694:43 - of any HTML element based on your
694:45 - project requirement so guys comment in
694:46 - the comment section below whether you
694:48 - have learned something out of this video
694:50 - please make sure that you like this
694:51 - video so that it reaches to more people
694:53 - and subscribe to this channel so that
694:55 - you get the notifications on upcoming
694:56 - videos as well the next video that we
694:58 - are going to talk about is variables in
695:00 - CSS using bear function so stay tuned so
695:05 - now we will see variables in CSS using
695:07 - wear function so guys basically the wear
695:09 - function is used to insert the value of
695:12 - a CSS variable variable and this we are
695:14 - going to check with the help of examples
695:16 - as well a very good way to use the CSS
695:19 - variables is when it comes to the colors
695:21 - of your design so instead of copying and
695:24 - pasting the same colors over and over
695:26 - again for the different CSS selectors
695:28 - you can place them in the variables and
695:31 - you can use the variable names of those
695:33 - colors and apply those colors to the
695:35 - different selectors based on your
695:37 - project requirements so guys this is the
695:38 - syntax as you can see we first of all
695:40 - use the wear keyword followed by two *
695:43 - hyon and then we have the name of the
695:45 - variable now guys apart from this we
695:47 - also have the second argument that is
695:49 - value which is optional so basically
695:51 - name is required in which case the
695:53 - variable name must start with the two
695:55 - dashes and basically this is the name of
695:57 - the variable for which you have already
695:59 - set the specific value apart from this
696:02 - this value is optional over here which
696:03 - is the second argument it is the
696:05 - fallback value which will be used if the
696:08 - variable is not found so guys you will
696:10 - be having the list of variables that you
696:12 - have already set but let's say if this
696:14 - particular specific variable is not
696:16 - present in your list of variables then
696:18 - you will be using this particular value
696:20 - that will be provided as the second
696:22 - argument now guys let us check this with
696:24 - the help of examples in VSS code over
696:26 - here so simply I'm going to remove the
696:28 - previous lines of code that we have
696:29 - written in the HTML and the CSS files in
696:32 - this case now simply we are going to
696:34 - have the div tag over here and then we
696:36 - will have the lurm M abbreviation with
696:38 - 30 words over here and then apart from
696:40 - this let us say we have a test button in
696:43 - this case okay so guys simply we are
696:44 - going to use the button tag and we will
696:47 - say test button over here let me just
696:49 - save this file now and try reloading
696:51 - this page on the browser to see how it
696:53 - looks like so as you can see this is the
696:54 - diff tag that is having the random text
696:57 - that is getting generated and then we
696:58 - have the test button over here now guys
697:00 - let us provide certain CSS properties to
697:03 - the background that is the body tag over
697:05 - here and to the diff tag and to the test
697:07 - button as well so let us move to the
697:09 - style. CSS file in this case and then
697:12 - simply for the body tag we will provide
697:14 - certain background color and this time
697:16 - we will be using some dark background
697:18 - color over here so it is a shade of gray
697:20 - color in this case and then apart from
697:22 - this for the diff tag also we will have
697:25 - certain background color in this case so
697:27 - guys let us say we have the same color
697:29 - but we are going to have a darker
697:32 - version of this particular color so let
697:34 - me just adjust the color over here so as
697:36 - you can see we can set this particular
697:37 - background color apart from this let us
697:39 - also set the padding of 10 pixels over
697:42 - here and also we want to set the text
697:44 - color with the help of the color CSS
697:46 - property to the same value that is
697:48 - present as the background color for the
697:49 - body tag simply I'm going to copy this
697:52 - particular color over here now guys
697:54 - apart from this what we will do is also
697:56 - for the test button as well we will have
697:58 - the background color and the text color
698:00 - as well same as the background color in
698:02 - the text color that we have set for the
698:04 - diff tag so simply I'm going to copy
698:06 - these lines of code over here now guys
698:09 - if you notice the same colors are being
698:11 - used as the background color over here
698:13 - and and for the text colors as well and
698:15 - in case your project size grows and if
698:17 - you use the same color across multiple
698:19 - selectors it will be very complex in
698:22 - order to maintain them and in case if
698:24 - you want to update any of the colors you
698:26 - will have to update them in all the
698:28 - locations so let us see how it looks
698:30 - like on the browser first of all so let
698:32 - me just save this file now and try
698:34 - reloading this page once again on the
698:36 - browser so as you can see we have the
698:37 - background color for the body tag and
698:39 - then for the diff tag as well we have
698:41 - the darker version of the background
698:43 - color for the diff tag and the button as
698:45 - well and then the lighter version of the
698:47 - color being used for the text color over
698:49 - here now guys what we can do is instead
698:52 - of providing the fixed colors inside all
698:55 - these CSS properties simply we can
698:57 - provide the variables and set these
698:59 - values to those variables and use those
699:02 - variable names as the values for these
699:04 - CSS properties inside these CSS
699:07 - selectors so guys how we can Implement
699:09 - that so first of all we will see how we
699:11 - can use the global scope variable so
699:13 - guys there are two types of variables
699:15 - one is global scope and the other one is
699:17 - local scope so we use the colon over
699:20 - here followed by the root keyword and
699:22 - inside this we can Define our various
699:24 - variables that will be having the color
699:26 - values and we will be using those
699:28 - variables inside individual selectors
699:30 - and this is the way that we can use the
699:32 - global variables over here now guys as
699:34 - far as local variables are concerned we
699:36 - can Define the variables inside a
699:39 - specific selector so let's say we want a
699:41 - local variable to be defined inside
699:43 - inside this diff tag so simply we can
699:45 - Define the variable inside this diff tag
699:47 - and use it within this particular diff
699:49 - tag over here we cannot use the local
699:52 - variable outside of this div tag to any
699:54 - other CSS selector so that is the
699:56 - limitation of the local variable so guys
699:59 - first of all let us see how the global
700:01 - variable works so in order to define the
700:03 - variable we have to provide two times
700:05 - Hyun and Then followed by the name of
700:08 - the variable so let's say we provide a
700:10 - light color as the name of the variable
700:12 - followed by colon and out of both these
700:15 - colors this is the lighter version that
700:17 - is 6 * a over here so simply we are
700:19 - going to provide this particular hex
700:21 - color that is light gray color over here
700:23 - and then apart from this we want the
700:25 - darker version as well so again we are
700:27 - going to provide two times High fun and
700:29 - then we will say dark color in this case
700:32 - so guys basically this is the name of
700:33 - the variable that we have set and Then
700:35 - followed by colon and then we need to
700:37 - provide the value of the dark color that
700:39 - is 76 76 76 so simply we can provide the
700:43 - character followed by the color value
700:45 - over here so guys this is the way that
700:47 - we can set the multiple variables which
700:50 - is at the global scope right now so
700:52 - since we have already provided the
700:53 - variable names over here and we have
700:56 - also provided the values simply we can
700:58 - use these names that is the color names
701:00 - instead of having the values across the
701:02 - different individual CSS selectors so
701:05 - guys let me just update all these colors
701:07 - over here so the background color for
701:09 - the body tag is the light color over
701:11 - here so instead of having this value we
701:13 - will use the V keyword in this case and
701:16 - then simply as you can see it is being
701:18 - suggested by the vs code we want to use
701:20 - this particular variable that is light
701:22 - color over here always remember that you
701:24 - have to use two times hyphen character
701:26 - when you're defining the variable and
701:28 - when you're using the variable apart
701:30 - from this we will have the dark color
701:32 - over here so simply we are going to say
701:34 - where and then we will use the dark
701:36 - color in this case and the color CSS
701:38 - property will have the light color over
701:40 - here once again so simply we will have
701:42 - light color as a variable and then again
701:44 - we have the dark color and the light
701:46 - color as the background color and the
701:48 - text color for the button so simply we
701:50 - will set the dark color as the variable
701:52 - name over here and light color for the
701:54 - text color in this case so guys as you
701:56 - can see now we are using the variable
701:58 - names instead of using the fixed color
702:01 - values that we had set previously and in
702:03 - this way whenever you want to change the
702:06 - color values over here simply you have
702:08 - to change the color values only at this
702:10 - particular one location where you have
702:12 - set variables so let me just save this
702:15 - file now and try reloading this page
702:16 - once again on the browser notice that
702:18 - there is no change right now that's
702:20 - because we have set the same color
702:22 - values over here now guys let us check
702:24 - another combination of colors so let's
702:26 - say you want the light color to be the
702:28 - yellow color so simply we can set the
702:30 - yellow color over here and also we want
702:32 - some other version of the yellow color
702:34 - so simply we are going to update this
702:36 - yellow color to this particular RGB
702:38 - value and then apart from this we want
702:41 - the dark color to be some other version
702:43 - of the black color so let's say we have
702:45 - this particular color as the dark color
702:47 - in this case so let me just save this
702:49 - file now and notice that we have only
702:51 - changed the light color over here where
702:53 - we have defined this particular variable
702:55 - but it will be implemented everywhere
702:57 - wherever we have used the light color
702:59 - and the dark color variables so when we
703:02 - reload this page once again on the
703:03 - browser as you can see all the colors
703:05 - are updated now the background color of
703:07 - the body tag is updated to the light
703:09 - color then we have the background color
703:11 - of the diff tag and the button is also
703:13 - updated with the dark color that we have
703:15 - specified over here and the text color
703:18 - is also the light color that we have
703:19 - used now guys let us see we want some
703:21 - other color for the test button and over
703:24 - here we have not defined that particular
703:26 - color so let's say we have another
703:28 - variable that is another color over here
703:30 - so guys basically this another color is
703:33 - not yet defined inside the global
703:35 - variable and in such cases if you are
703:37 - not sure that you have not mentioned
703:40 - this particular variable inside the
703:42 - global scope then simply you can provide
703:44 - the second argument over here so let's
703:46 - say you want aqua color to be used in
703:49 - case this particular another color
703:51 - variable is not present so in this case
703:53 - what will happen is currently it is
703:55 - getting displayed as the yellow color as
703:57 - far as the text color of this button is
703:59 - concerned but now since we are using
704:00 - another color as the variable name which
704:02 - is not present inside this root selector
704:05 - over here so aqua color will be
704:07 - implemented as the text color for this
704:09 - button so let me just save this file now
704:11 - and try the loading this page page once
704:13 - again on the browser so as you can see
704:15 - the text color of this button is now
704:17 - updated with aqua color over here and in
704:20 - this way you can use the second argument
704:22 - that is value inside the wear function
704:24 - over here in order to provide the
704:26 - required colors now guys apart from this
704:28 - you can also make use of the local
704:30 - variables over here so what we can do is
704:33 - let's say you have already defined the
704:35 - light color over here but you want to
704:37 - Define some other light color for the
704:39 - diff tag so simply I'm going to copy
704:41 - this line of code over here and paste it
704:44 - inside the diff selector and in case of
704:46 - using the yellow color I want to use
704:48 - some version of the green color so we
704:50 - are going to use some shade of green
704:52 - color over here as the light color in
704:54 - this case so as you can see we have
704:56 - updated the RGB color over here for the
704:58 - light color now guys we have two
705:00 - variables with the same name first of
705:02 - all we have the light color over here
705:03 - which is having the global scope and
705:05 - inside the diff tag we have the light
705:07 - color which is having the local scope so
705:09 - in this case when we use the text color
705:12 - and provide add the light color variable
705:14 - over here so which color will be used so
705:16 - guys let us check that as well so when
705:18 - we save this file now and try reloading
705:20 - this page once again on the browser so
705:22 - as you can see green color is getting
705:24 - implemented over here as the text color
705:26 - inside the diff tag so guys this tells
705:28 - us that whatever variable we Define
705:31 - inside the specific CSS selector which
705:34 - we call it as the local variable so that
705:36 - value will be used wherever we use the
705:39 - light color in this case and let's say
705:41 - when we use the light color somewhere
705:42 - else let's say we use the light color
705:44 - over here to the button text so guys the
705:47 - light color is already defined as the
705:49 - yellow color over here so instead of
705:51 - providing the aqua color the yellow
705:53 - color should be displayed so let me just
705:54 - save this file now and try reloading
705:56 - this page once again on the browser so
705:58 - as you can see the global value that is
706:00 - the yellow color for the light color is
706:02 - getting displayed over here and the
706:04 - local value is getting displayed for the
706:06 - diff tag because we have provided the
706:08 - local variable over here so guys in this
706:11 - way whenever you use the local variables
706:13 - that particular value will overwrite the
706:15 - value of the global variable that you
706:17 - have already defined inside the root
706:19 - selector so guys in this way you can
706:21 - easily use the variable names in order
706:23 - to avoid the confusion when you have
706:25 - several CSS selectors and you want to
706:27 - use the same set of colors based on the
706:30 - theme of your project so guys comment in
706:32 - the comment section below whether you
706:33 - have learned something out of this video
706:35 - please make sure that you like this
706:36 - video so that it reaches to more people
706:39 - and subscribe to the channel so that you
706:40 - get the notifications on upcoming videos
706:42 - as as well the next video that we are
706:44 - going to talk about is box sizing
706:46 - property in CSS so stay tuned so now we
706:49 - will see box sizing property in CSS so
706:52 - guys basically the CSS box sizing
706:54 - property allows us to include the
706:57 - padding and the Border in an HTML
706:59 - elements total width and height so guys
707:01 - this we are going to check with the help
707:03 - of examples as well so by default we
707:05 - have seen so far the width and height of
707:07 - an element is calculated like below so
707:10 - basically whatever width we provide to
707:12 - the HTML element that is considered and
707:15 - then the padding and the border is also
707:17 - considered in order to calculate the
707:20 - actual width of the HTML element similar
707:23 - cases with the height attribute as well
707:25 - so when we have the height of the HTML
707:27 - element the padding and the border is
707:29 - also added in order to calculate the
707:32 - actual height of the element so guys we
707:34 - can simply use the Box sizing property
707:37 - in order to avoid the confusion and also
707:40 - include the padding and the Border
707:42 - within the width and height that is
707:44 - already specified for the HTML element
707:46 - so guys let us move to the vs code over
707:48 - here and simply inside the HTML file we
707:51 - are going to create two div tags over
707:53 - here the first div tag is having the
707:55 - class name that is div one in this case
707:57 - and then we will say this is a sample
708:00 - div one over here and then similarly we
708:02 - will have another diff tag with the
708:04 - class that is div 2 in this case so
708:07 - basically we will have div 2 and then
708:09 - over here as well we will update it as
708:11 - div 2 over here apart from from this
708:13 - between both the diff Texs we will have
708:14 - the line break so let me just save this
708:16 - file now and try reloading this page
708:18 - once again on the browser as you can see
708:20 - we have SIMPLE statements that is this
708:22 - is a sample div 1 and Sample div 2 over
708:25 - here now guys let us provide certain
708:26 - styling inside the style. CSS file so
708:29 - for the very first class that is d one
708:31 - over here we will specify the width of
708:34 - 300 pixels in this case and a height of
708:37 - 100 pixels over here and then apart from
708:39 - this we will also set the border so
708:41 - let's say we have two pixel pixels solid
708:43 - border with the color that is black
708:45 - color over here now guys similarly we
708:47 - will provide the CSS properties for the
708:49 - second diff tag over here that is having
708:51 - the class name div 2 in this case and
708:54 - again we are going to have the width and
708:56 - height that is 300 pixels and 100 pixels
708:58 - respectively we will have the different
709:00 - color border and for the Border part we
709:02 - will have a different color so let's say
709:04 - we have the Border color is blue color
709:06 - over here let me just save this file now
709:08 - and try reloading this page once again
709:10 - on the browser so as you can see we have
709:12 - the first diff tag which is having the
709:14 - width as 300 pixels and the height as
709:16 - 100 pixels over here and for the div two
709:18 - tag as well we have the same width and
709:20 - height values over here we have a
709:22 - different border color in this case that
709:24 - is blue color now guys what we will do
709:26 - is let us provide a certain padding to
709:28 - this particular diff tag that is the
709:30 - second diff tag over here so simply
709:32 - inside the diff 2 selector we will have
709:34 - the padding CSS selector and let's say
709:36 - we have 20 pixels as padding so guys
709:38 - what will happen is apart from the width
709:41 - and height of this particular d tag the
709:43 - padding number will also be added and it
709:45 - will increase the width and height of
709:47 - the diff tag so let us check that as
709:49 - well when we save this file now and try
709:51 - reloading this page once again on the
709:53 - browser if you notice now the size of
709:55 - this particular diff tag that is the
709:57 - second diff tag over here is more
709:59 - compared to the first diff tag and if
710:01 - you notice in the code we have the same
710:04 - width and height value over here that is
710:06 - 300 pixels and 100 pixels for the div 1
710:09 - and div 2 as well so as you can see the
710:11 - width and height of div 2 is also 300
710:13 - and 100 pixels respectively so guys this
710:15 - is the issue as far as the width and
710:17 - height of the HTML elements are
710:19 - concerned on the same page so in order
710:21 - to avoid this issue simply we can use
710:23 - the Box sizing CSS property over here so
710:26 - guys when we say box sizing we have the
710:28 - value as border box in which case the
710:31 - padding attribute will also be included
710:33 - within the width and height that you
710:35 - have already specified over here within
710:37 - this selector so when we save this file
710:39 - now and try reloading this page once
710:41 - again on the browser if if you see now
710:43 - the exact width and height of this
710:45 - particular diff tag that is diff 2 is
710:48 - 300 and 100 pixels respectively since we
710:51 - have provided the Box sizing as border
710:53 - box so guys basically the content and
710:55 - the padding will be adjusted accordingly
710:58 - apart from that the Border will be also
711:00 - adjusted in such a way that the actual
711:02 - width and height of this particular diff
711:04 - tag should be 300 pixels and 100 pixels
711:07 - now guys if you notice the first diff
711:09 - tag is little bit larger as far as the
711:11 - width is concern concerned compared to
711:13 - the second diff tag why so because the
711:15 - border of two pixels is taking the extra
711:18 - space over here for the first diff tag
711:20 - so again if we provide the Box sizing
711:23 - CSS property for the first diff tag over
711:25 - here and we provide the value as border
711:27 - box this particular issue should get
711:29 - resolved so let me just save this file
711:31 - now and when we reload this page so now
711:33 - if you notice the width of this
711:35 - particular Dev one is exactly the same
711:37 - as that of the div 2 HTML element over
711:40 - here that's because we are using the box
711:42 - sizing equal to border box for both
711:45 - these diff tags in this case so guys in
711:47 - this way in order to avoid the confusion
711:49 - and to be consistent as far as the width
711:52 - and height of the HTML elements are
711:54 - concerned it is very important that you
711:56 - use the Box sizing CSS property for all
711:59 - the HTML elements so instead of
712:01 - providing it to individual CSS selectors
712:04 - across the multiple CSS selectors over
712:06 - here let me just save this file now and
712:08 - try reloading this page once again
712:09 - without the Box sizing CSS property you
712:12 - will notice that the dimensions are
712:13 - different but simply you can have the
712:15 - universal selector over here with the
712:17 - help of the star and then in this case
712:19 - you can simply provide the Box sizing to
712:22 - all the CSS selectors over here so
712:24 - simply with this particular single line
712:25 - of code within the universal selector
712:28 - the dimensions of all the HTML elements
712:30 - will be consistent so guys let me just
712:32 - save this file now and try reloading
712:34 - this page once again on the browser as
712:36 - you can see the width and height of both
712:38 - these diff tags are same that is 300
712:40 - pixels and 100 pixels respectively and
712:43 - apart from this the second div is also
712:45 - having the required padding of 20 pixels
712:48 - that we have provided over here so guys
712:50 - in this way you can easily use the Box
712:52 - sizing CSS property in order to be
712:54 - consistent as far as the dimensions of
712:56 - the HTML elements are concerned in your
712:58 - project this will help you in order to
713:00 - include the padding and the Border withd
713:03 - as well within the width and the height
713:05 - of the HTML element so guys comment in
713:07 - the comment section below whether you
713:08 - have learned something out of this video
713:10 - please make sure that you like this
713:11 - video so so that it reaches to more
713:13 - people and subscribe to this channel so
713:15 - that you get the notifications on
713:16 - upcoming videos as well the next video
713:18 - that we are going to talk about is flex
713:20 - box in CSS so stay tuned so now we will
713:24 - see Flex box in CSS so guys basically
713:27 - before the flexbox layout module there
713:29 - were four layout modes in the CSS so
713:32 - first of all we have the block model
713:34 - which is used for displaying the
713:36 - sections in a web page apart from this
713:38 - we also have the inline model which is
713:41 - used for the display of the text and
713:43 - then we also have the table model which
713:45 - is used for the twood dimensional table
713:48 - data and then we also have the position
713:50 - property in CSS which is used for
713:52 - explicit position of an element now guys
713:55 - we can use any of these models in order
713:57 - to display the content based on our
714:00 - website design now guys apart from this
714:02 - we can also use the flexbox layout
714:04 - module which we are going to check with
714:06 - the help of examples as well so the
714:08 - flexible box layout module makes it
714:11 - easier to design Flex ible responsive
714:13 - layout structure without using the float
714:15 - or the position property in the CSS so
714:18 - guys let us see a very simple example of
714:20 - the flexible box layout module so let us
714:23 - move to the vs code over here now before
714:26 - writing any code in this case what we
714:28 - are going to do is first of all we will
714:30 - understand how this flexbox module will
714:32 - work so guys basically we can arrange
714:34 - the HTML elements in the row direction
714:36 - or the column Direction so when we move
714:39 - from left to right over here it is the
714:41 - row Direction and and then when the HTML
714:43 - elements move from the top to bottom
714:46 - then it is called the column Direction
714:48 - in this case so guys simply we can
714:49 - provide the text over here that this is
714:52 - row Direction in this case and then
714:54 - apart from this we also have the column
714:56 - Direction over here so simply we are
714:58 - going to say column direction that is
715:00 - going from top to bottom so Guys these
715:02 - are the two directions in which the
715:04 - flexbox module will work now guys apart
715:07 - from this when we talk about the row
715:09 - direction we have two AIS that is the
715:11 - main AIS and the cross AIS so the axis
715:14 - that is moving from left to right is the
715:16 - main axis over here and the axis that is
715:19 - moving in the vertical direction that is
715:21 - top to bottom will be the cross axis
715:23 - over here so simply we are going to
715:25 - provide the vertical axis in this case
715:27 - which is the cross axis over here so
715:30 - guys basically this is the main axis
715:32 - that is going from left to right in this
715:34 - case and then apart from this the axis
715:36 - that is going in the vertical direction
715:38 - is the cross axis for the row Direction
715:40 - so guys this is a very simple understand
715:42 - understanding of the flexbox model so by
715:44 - default there is a row direction in
715:46 - which case the HTML elements will be
715:48 - placed in such a way that they will be
715:51 - placed from left to right direction and
715:53 - then we can also provide certain CSS
715:56 - properties in order to move the other
715:58 - HTML elements that is going beyond the
716:00 - screen on the right hand side to move at
716:02 - the bottom position as well which we are
716:04 - going to check with the help of examples
716:06 - and then guys in the row Direction
716:08 - itself we have the cross axis which
716:10 - moves in the vertical Direction Over
716:12 - over here now guys similarly when we say
716:14 - column Direction in the flex boox model
716:16 - so basically the main axis and the cross
716:18 - AIS will be opposite to each other so in
716:21 - this case when the flex boox model is in
716:23 - the column Direction the vertical axis
716:25 - will be the main axis over here so let
716:27 - me just draw that as well so simply we
716:29 - are going to draw the vertical axis in
716:32 - this case and then we also have the
716:34 - horizontal axis so this is the
716:36 - horizontal axis over here and in column
716:38 - Direction the vertical axxis is the main
716:41 - axis so let me just copy this main AIS
716:43 - text over here and paste it at the
716:46 - vertical Direction and The Cross axis
716:48 - will move from left to right over here
716:50 - which is this particular axis in this
716:52 - case so guys basically it is the reverse
716:54 - as far as the column direction is
716:56 - concerned so Guys these are the two
716:57 - things that you should know in the row
716:59 - Direction the main axis belongs to the
717:02 - left to right direction and the cross
717:04 - axis belongs to the vertical Direction
717:06 - over here whereas in column Direction
717:08 - the vertical axis is the main axis and
717:11 - the horizontal axis is the cross access
717:13 - so guys let us move to the vs code over
717:15 - here in order to check the examples so
717:17 - simply we are going to provide the
717:19 - container class over here so we are
717:21 - going to have the diff tag with the
717:23 - class container and then let us say we
717:25 - have four diff tags over here so we have
717:28 - the first diff tag as one in this case
717:30 - and then we have two three and then four
717:33 - now guys apart from this what we will do
717:35 - is we will make this container as the
717:37 - flexbox container so it is very
717:39 - important that when you are going to use
717:40 - the flexbox model you need to have the
717:43 - flex container as well so we are going
717:45 - to treat this particular parent diff tag
717:47 - over here as the flex container so
717:50 - simply inside the style. CSS file we
717:52 - need to provide the container class in
717:54 - this case and then simply we can say
717:57 - display it is equal to flex so guys this
717:59 - is the way that we can use the flex Box
718:02 - model and then apart from this let us
718:04 - also have certain background color so
718:06 - let's say we have the background color
718:07 - as the black color over here and then
718:09 - for the diff tag as well we are going to
718:12 - have certain CSS properties so guys over
718:14 - here we are going to have container and
718:16 - then inside the container we need to
718:18 - provide the CSS properties to all the
718:21 - diff tags over here so guys simply we
718:23 - are going to say background color of
718:25 - yellow color in this case and then we
718:27 - are also going to provide the padding
718:29 - property of 20 pixels over here let me
718:31 - just save this file now and try
718:33 - reloading this page on the browser so
718:35 - let us see how it looks like so as you
718:37 - can see the black color background is
718:39 - for the diff container which is a flex
718:41 - boox container over here and then apart
718:44 - from this we also have the flex items in
718:46 - this case that is 1 2 3 and 4 we have
718:49 - provided the required padding in this
718:52 - case but we can also provide the margin
718:54 - as well so that there is certain space
718:56 - in between the border of the container
718:58 - and the border of the individual Flex
719:00 - items over here so guys basically we can
719:03 - have the margin of 10 pixels for all the
719:05 - flex items so guys basically the
719:07 - container is called the flex container
719:09 - in this case and whatever items are
719:11 - present inside the flex container are
719:14 - called the flex items let me just save
719:16 - this file now and try reloading this
719:18 - page once again on the browser so as you
719:20 - can see we have provided the margin of
719:22 - 10 pixels over here and this is a very
719:24 - simple example of a flex container in
719:27 - this case we can also have more items
719:29 - over here so inside the HTML file simply
719:32 - let me just provide two more div tags
719:34 - over here and the content we will
719:36 - provide it as five and six numbers let
719:38 - me just save this file now and try
719:40 - reloading this page once again on the
719:41 - browser browser so as you can see more
719:43 - items are getting added over here based
719:45 - on the HTML content that we have
719:47 - provided so guys this is the way that we
719:50 - can provide the flex container with the
719:52 - help of the display equal to flex value
719:54 - and then apart from this we can provide
719:56 - the different CSS properties for the
719:58 - flex items inside the flex container as
720:01 - well now guys apart from this we also
720:03 - have multiple other CSS properties over
720:05 - here so as you can see the flex
720:07 - container properties are first of all we
720:10 - have something called as Flex Direction
720:12 - so guys this is nothing but the
720:13 - direction that we have just understood
720:15 - with the help of these graphs over here
720:17 - so by default the flex direction is the
720:19 - row Direction over here we can change it
720:21 - to column direction as well so let us
720:23 - check that how it looks like so guys
720:25 - basically what we have to do is this
720:28 - Flex direction is the CSS property for
720:30 - the flex container so guys simply inside
720:33 - the container class we need to provide
720:35 - the flex Direction CSS property and by
720:38 - default the value is Row in this case so
720:41 - let me just save save this file now and
720:42 - try reloading this page once again on
720:44 - the browser so there is no change
720:46 - because this is the default value now
720:48 - guys instead of row we can also have row
720:50 - reverse over here in which case the
720:52 - items will be displayed from right to
720:55 - left in this case so basically by
720:57 - default the items are getting displayed
720:59 - from left to right in this particular
721:01 - direction but if we want the direction
721:03 - to be reversed that is from right to
721:05 - left we can change the flex direction to
721:07 - row reverse so let me just save this
721:09 - file now and try reloading this page
721:11 - once again on the browser so as you can
721:13 - see the items are now getting displayed
721:15 - from right to left first we have the div
721:17 - tag with the content that is one and
721:19 - then we have 2 3 4 and so on the content
721:23 - is displayed from right to left now guys
721:25 - apart from this we also have something
721:27 - called as column Direction over here so
721:29 - instead of having row reverse simply we
721:31 - can have the column value for this Flex
721:33 - Direction so guys what will happen is
721:35 - over here just we have understood with
721:37 - the help of the craft in the column
721:39 - Direction This is the main axis in which
721:41 - case the HTML elements will be displayed
721:44 - from top to left over here so guys let
721:46 - us check that as well when we change the
721:48 - flex direction to column the first
721:50 - element should be displayed at the top
721:52 - and then the second element should be
721:53 - displayed below the first element and so
721:56 - on all the elements will be placed in
721:58 - the vertical Direction over here so guys
722:00 - let me just reload this page once again
722:02 - so as you can see we have one and then
722:04 - followed by two and so on all the
722:06 - elements are getting displayed over here
722:08 - apart from this you can also set the
722:10 - width of individual element in this case
722:13 - in order to avoid the div element taking
722:16 - the entire width of the screen so guys
722:18 - in this way you can also use the column
722:20 - Direction over here and then you can
722:22 - also use the column reverse as well in
722:24 - which case the first element will be
722:26 - displayed at the bottom and Then
722:28 - followed by two and so on the last
722:30 - element will be displayed at the top so
722:32 - when we reload this page as you can see
722:34 - first we have the Sixth Element and then
722:36 - we have Fifth and so on the elements are
722:39 - displayed in the column reverse
722:40 - Direction so guys this this is the way
722:42 - that you can set the flex Direction over
722:44 - here apart from this we also have
722:46 - something called as Flex wrap so guys
722:48 - basically in order to understand this
722:50 - Flex wrap property what we have to do is
722:52 - we need to add more elements over here
722:55 - inside the container and also we need to
722:57 - make the flex direction as Row in this
723:00 - case which is the default value so guys
723:02 - let me just save this file now and try
723:04 - reloading this page so as you can see
723:05 - these are the elements that are getting
723:07 - displayed now what we will do is we will
723:09 - add more diff tags over here so let me
723:11 - just copy paste these lines of code and
723:14 - then let me just change the content over
723:16 - here so guys basically we are updating
723:18 - the content and let us set 14 number of
723:21 - div tags over here so guys we have 1 to
723:24 - 14 div tags in this case let me just
723:26 - save this file now and try reloading
723:28 - this page once again on the browser so
723:30 - if you notice we are going from left to
723:33 - right in this case 1 2 3 4 and so on you
723:36 - can see at the bottom we are getting the
723:38 - horizontal scroll bar over here and the
723:40 - content is going beyond the width of the
723:43 - screen in this case the last element is
723:45 - 14 over here now guys let us say
723:47 - whatever elements are going outside of
723:49 - the width of the screen in this case we
723:51 - want those items to be displayed below
723:54 - these items that is 1 2 3 and so on so
723:56 - basically we don't want this horizontal
723:58 - scroll bar to be displayed so guys what
724:01 - we can do is simply we can use this flag
724:03 - W CSS property so guys by default the
724:06 - value of this flx WRA CSS property is no
724:09 - WRA over here in which case all the
724:11 - elements will go beyond the width of the
724:13 - screen as you can see but when we set
724:15 - the value as WRA in this case so
724:18 - basically whatever elements that do not
724:20 - have any space left beyond the width of
724:22 - the screen will be displayed at the
724:24 - bottom over here within the same
724:26 - container so guys let me just save this
724:28 - file now after providing the W value to
724:30 - the flag W and reload this page once
724:32 - again on the browser so as you can see
724:34 - 11 12 13 and 14 are now getting
724:37 - displayed at the bottom over here in the
724:39 - same container so guys in this way you
724:41 - can also use the flag W CSS property
724:44 - when you have more number of HTML
724:46 - elements within the same container which
724:48 - is going beyond the width of the screen
724:50 - now guys apart from this we also have
724:52 - something called as Flex flow over here
724:54 - which is nothing but the shorthand CSS
724:56 - property for the flex Direction and flex
724:59 - rep CSS property so guys let me just
725:01 - remove both these properties over here
725:03 - and let us see how it looks like on the
725:05 - browser so as you can see it is in the
725:07 - row Direction and there is no wrap over
725:09 - here so simply we can provide the flex
725:11 - exp flow CSS property and let's say we
725:13 - want the row Direction over here so
725:15 - simply we provide row followed by the
725:17 - space character and then we provide the
725:19 - WRA value over here so guys basically we
725:22 - are providing the values for Flex
725:24 - Direction and flex wrap in this
725:26 - shorthand CSS property that is flex flow
725:28 - let me just save this file now and try
725:30 - reloading this page once again on the
725:32 - browser as you can see now the items are
725:34 - getting wrapped over here apart from
725:36 - this instead of having row value we can
725:38 - also have row reverse as well so that
725:41 - the items are displayed from right to
725:42 - left Direction so when we reload this
725:44 - page as you can see the first element is
725:46 - at the right and then we have 2 3 4 last
725:49 - element is 10 and then the other
725:51 - elements are displayed on the next line
725:53 - that is 11 12 13 and 14 so guys in this
725:56 - way you can use the flex flow CSS
725:58 - property which is the shorthand method
726:01 - for Flex Direction and flex rep CSS
726:03 - property now guys apart from this we
726:05 - also have something called as justify
726:07 - content which is used to align the HTML
726:10 - elements inside the Flex container over
726:12 - here so guys let us check that as well
726:14 - how we can use it so simply let us move
726:17 - to the row WP so simply let us change
726:19 - this value to row so that the flex items
726:22 - are getting displayed in the default
726:23 - Direction let me just reload this page
726:25 - so as you can see these are the HTML
726:27 - elements that are getting displayed
726:29 - inside the flex container now guys when
726:31 - we say justify content it is having
726:33 - multiple values so as you can see if we
726:35 - want to provide the HTML elements at the
726:38 - center of the container so simply we can
726:40 - provide the Center value let me just
726:42 - save this file now and try reloading
726:44 - this page once again on the browser so
726:46 - as you can see all the HTML elements now
726:49 - are being displayed at the center of
726:51 - this particular Flex container over here
726:53 - so let us check this with the less
726:55 - number of HTML elements over here so
726:57 - what we will do is simply we are going
726:59 - to keep the diff Tex from 1 to 5 over
727:01 - here and let me comment out the other
727:03 - lines of code let me just save this file
727:05 - now and try reloading this page so as
727:07 - you can see this is the center value of
727:09 - the justify content and if you want to
727:11 - align them at the left side of the
727:13 - container simply we can say the start
727:16 - value for this justify content over here
727:19 - let me just save this file now and try
727:21 - reloading this page so as you can see
727:23 - the elements are now getting displayed
727:24 - at the start of the container that is on
727:26 - the left hand side and then when we say
727:29 - end that means we can align the HTML
727:32 - elements at the right hand side of the
727:34 - container so guys as you can see the
727:36 - elements are getting aligned at the
727:38 - right hand side of this main axis based
727:40 - on the row Direction over here now
727:42 - similarly for the column direction as
727:44 - well we will have the justify content
727:47 - based on the main access so guys in the
727:49 - column Direction our top to bottom AIS
727:52 - becomes the main AIS over here and
727:54 - justify content will be used in order to
727:56 - align it based on the main AIS so I
727:59 - leave this up to you as a homework for
728:00 - you so that you can practice on your own
728:02 - apart from this we also have something
728:04 - called as align items over here so guys
728:07 - let us check that as well so what we
728:09 - will do is let us say we want to in
728:11 - increase the height of the container
728:13 - that is the flex container over here so
728:15 - simply we are going to set the height of
728:18 - flex container to 200 pixels and let us
728:20 - say we have the justify content as the
728:23 - center value so that all the HTML
728:25 - elements are displayed at the center so
728:27 - guys let me just save this file now and
728:29 - try reloading this page so as you can
728:31 - see the height of the flex container is
728:33 - now 200 pixels over here and all the
728:36 - HTML elements are now taking the entire
728:39 - height of this particular Flex container
728:41 - over here now guys what is the meaning
728:43 - of the Align items so basically just
728:45 - like how we have used the justify
728:47 - content in order to align the items
728:50 - horizontally that is at the main axis of
728:53 - this row Direction over here the Align
728:55 - items will be used in order to align
728:58 - these HTML elements against the cross
729:00 - AIS in this case the cross AIS is the
729:03 - top to bottom or the horizontal AIS over
729:06 - here so guys let us check that as well
729:08 - so simply we need to provide the Align
729:10 - items CSS property for this container
729:13 - class and then let us say we want to
729:15 - provide the value as Center over here
729:17 - let me just save this file now and try
729:19 - reloading this page once again on the
729:21 - browser as you can see vertically now
729:24 - all the HTML elements are at the center
729:26 - of this container similarly if we want
729:29 - all these elements to be present at the
729:31 - top of the container so we can say start
729:33 - value for this align items so guys if
729:36 - you notice when we say start the Align
729:38 - items work with the cross XIs over here
729:41 - which is is the vertical AIS in this
729:43 - case when we talk about the row
729:44 - direction of the flexbox model so let me
729:47 - just save this file now and try
729:49 - reloading this page once again on the
729:50 - browser so as you can see the HTML
729:52 - elements are now getting displayed at
729:54 - the top of this particular container and
729:57 - similarly if we want these elements to
729:59 - be present at the bottom of the
730:00 - container as far as the cross AIS is
730:03 - concerned we can simply provide the end
730:05 - value so when we reload this page as you
730:07 - can see at the bottom of the flex
730:09 - container we are getting all the HTM
730:11 - elements so guys this is the difference
730:13 - between the justify content and the
730:15 - Align items so basically the justify
730:17 - content work towards the main AIS of the
730:21 - flexbox model and the Align items work
730:24 - towards the cross AIS of the flexbox
730:27 - model now Guys these directions will
730:29 - change when we change the flex direction
730:31 - to column Direction over here so in this
730:34 - case the justify content will allow us
730:36 - to provide the HTML elements alignment
730:39 - towards the main AIS that is the the
730:41 - vertical axis over here and the Align
730:43 - items will help the alignment across the
730:46 - cross AIS over here which is the
730:47 - horizontal axis as far as the column
730:50 - direction is concerned now guys apart
730:52 - from this we also have something called
730:54 - as align content over here so guys in
730:56 - order to understand this we need to
730:58 - uncomment these lines of code over here
731:00 - so that we have more number of HTML
731:03 - elements let me just save this file now
731:05 - and also for the Align items over here
731:07 - we will keep the alignment as the center
731:09 - value in this case that means me just
731:11 - reload this page once again over here as
731:13 - you can see we have all the HTML
731:15 - elements we have the Align items as the
731:17 - center and also the justify content as
731:20 - the center now guys the Align content
731:23 - CSS property will help us in order to
731:25 - provide the spacing between these HTML
731:28 - elements as far as the cross AIS is
731:31 - concerned so guys let us check that as
731:33 - well so what we will do is simply we can
731:35 - say align content over here and there
731:38 - are multiple values in this case so
731:40 - let's say we provide space around value
731:42 - so guys let us check how it looks like
731:44 - so when we save this file now and try
731:46 - reloading this page once again on the
731:48 - browser notice that we have the same
731:51 - space on the top and at the bottom of
731:53 - all the HTML elements over here and that
731:56 - is how the space around value will work
731:58 - and then apart from this we also have
732:00 - something called a space between over
732:02 - here let me check that as well so when
732:04 - we reload this page once again on the
732:06 - browser as you can see at the top of the
732:09 - first line and at the bottom of the
732:10 - second line over here we have the equal
732:12 - space and the equal amount of space is
732:15 - present in between all these HTML
732:17 - elements as far as the cross AIS is
732:20 - concerned apart from this we also have
732:22 - another value that is space evenly over
732:24 - here so let us check that as well so
732:26 - when we reload this page as you can see
732:28 - on the top at the middle and at the
732:31 - bottom as well all the spaces are equal
732:33 - in this case so guys based on your
732:35 - project requirements you can simply
732:37 - provide different values for the Align
732:39 - content CSS property which is part of
732:42 - the flex container over here so Guys
732:44 - these are some of the CSS properties
732:46 - that you can use based on your
732:48 - requirements as far as the flex
732:49 - container CSS properties are concerned
732:52 - now guys apart from this the flex boox
732:54 - model also allows you to center a div
732:57 - element very easily using display equal
732:59 - to flex value so guys I leave this
733:01 - exercise as a homework for you simply
733:04 - you can provide a justify content equal
733:06 - to Center and also the Align items as
733:09 - the center value over here so guys just
733:11 - by setting these two CSS properties you
733:13 - can provide the diff tag at the center
733:15 - of the container just like how we have
733:18 - done with all these multiple HTML
733:20 - elements now guys apart from this we
733:22 - also have some of the flex item
733:25 - properties over here so previously
733:26 - whatever properties we have seen belongs
733:29 - to the flex container over here which we
733:31 - have mentioned inside the dot container
733:33 - class but we can also provide the CSS
733:36 - properties to the flex items which are
733:38 - represented by these diff tags over here
733:41 - so guys let us check that as well so
733:42 - what we will do is first of all we have
733:44 - something called as order over here so
733:46 - guys let us check that as well so
733:48 - basically we are going to reduce the
733:50 - number of flags items that are getting
733:52 - displayed to four diff tags over here so
733:55 - we have one to four diff tags let me
733:57 - just save this file now and try
733:59 - reloading this page once again on the
734:00 - browser notice that we have the justify
734:02 - content as Center and also the Align
734:05 - items as Center over here so as you can
734:07 - see these are the CSS properties that
734:09 - are making us display the diff tags at
734:11 - the center of the container now guys let
734:13 - us say we want to change the order of
734:15 - these diff tags over here so it is not
734:17 - necessary that all the diff tags that
734:20 - you have provided inside the HTML file
734:22 - needs to be displayed in the same order
734:24 - so let's say we have the ID for this
734:27 - fourth diff tag S4 over here so what we
734:30 - have to do is we need to provide the
734:32 - order CSS property inside this
734:34 - particular HTML element so guys let me
734:37 - just save this file now and we will copy
734:39 - this ID over here of the diff tag that
734:42 - is four in this case and then we will
734:44 - provide the hash character followed by
734:46 - the four that is the ID of the fourth di
734:49 - tag and simply we can say order equal to
734:52 - minus1 so guys basically by default the
734:55 - order of the HTML elements is zero over
734:57 - here so simply we can provide minus one
734:59 - in this case so that this is given the
735:01 - highest priority so let me just save
735:04 - this file now and try reloading this
735:06 - page once again on the browser notice
735:07 - that the fourth element is now getting
735:09 - displayed first for followed by 1 2 3
735:12 - which are having the other order values
735:14 - now guys apart from this let us also
735:16 - provide the ID for the second div
735:18 - element that is two over here so simply
735:20 - we will provide the ID as two let me
735:22 - just save this file now and over here we
735:24 - will provide this ID in this case and
735:27 - what we will say is the order it is
735:29 - equal to one so let me just save this
735:31 - file now and try reloading this page
735:33 - once again on the browser notice that
735:35 - the second element is now getting
735:37 - displayed at the end in this case so
735:39 - guys by default we have the order as
735:41 - zero for first and the third element for
735:44 - which we have not provided the order
735:45 - property and for the fourth element we
735:47 - have order equal to minus1 which is then
735:50 - given the highest priority and then the
735:52 - least priority is given to the two which
735:54 - is having order equal to 1 so guys
735:56 - lesser the number will be having more
735:59 - priority as far as displaying that HTML
736:01 - element inside the container is
736:04 - concerned so guys this is one of the CSS
736:06 - property for the flex item over here
736:08 - apart from this we have something called
736:10 - as Flex grow in this case so guys if you
736:12 - notice there is a lot of space that is
736:14 - available at the left hand side and the
736:16 - right hand side of all these Flex items
736:19 - over here so what we can do is we can
736:21 - occupy that space by using the flex grow
736:24 - CSS property so let's say by default the
736:27 - width of all these three items that is 1
736:29 - 3 and two is same over here and the
736:32 - remaining space that is present on the
736:34 - left and on the right we want it to be
736:36 - occupied by this first element that is
736:38 - the diff tag having the content 4 so
736:41 - guys what we can do is simply we can
736:43 - provide Flex grow CSS property to this
736:46 - diff tag that is having the ID equal to
736:48 - 4 over here and then simply we can
736:50 - provide the value as one by default the
736:52 - flex grow the SS property is having the
736:55 - value as zero but simply we can provide
736:57 - the value as one in which case only this
736:59 - particular diff tag that is having the
737:01 - id4 which means only this first box over
737:04 - here will expand itself horizontally in
737:07 - such a way that the entire available
737:09 - space will be occupied IED by this
737:11 - fourth element over here so guys let me
737:13 - just save this file now and try
737:15 - reloading this page once again on the
737:17 - browser so as you can see the entire
737:19 - available space is now being taken by
737:21 - the fourth element over here and the
737:23 - remaining space is being taken by the
737:25 - other elements over here so guys in this
737:27 - way you can also provide the flex grow
737:29 - CSS property now guys apart from this
737:31 - let us say we want the second element
737:33 - that is having the id2 over here which
737:35 - is at the last place in this case we
737:37 - want that element as well to expand but
737:40 - it should double compared to the fourth
737:42 - element which is displayed at the first
737:44 - position so guys what we can do is
737:46 - simply we can provide Flex grow it is
737:48 - equal to two over here so guys what will
737:50 - happen is the flex grow CS property for
737:53 - 1 and three will be zero which means
737:55 - they will take only this particular
737:57 - space or withd inside the container and
738:00 - then for the fourth element we have the
738:02 - flex grow equal to 1 but we have the
738:04 - double of this one which is equal to two
738:06 - Flex grow for this particular second
738:08 - element so guys basically the width of
738:10 - this this particular second element will
738:12 - be double compared to the width of this
738:14 - particular fourth element over here and
738:16 - accordingly the space will be provided
738:18 - to both these elements so guys let me
738:20 - just save this file now and try
738:21 - reloading this page once again on the
738:23 - browser so if you notice the width of
738:25 - the second element is double compared to
738:27 - the fourth element over here and one and
738:29 - three are taking the required spaces
738:32 - that which they were taking at the
738:33 - original state so guys in this way you
738:35 - can provide the flex grow CSS property
738:38 - as well now guys apart from this we also
738:40 - have something something called as Flex
738:41 - shrink which works opposite to the flex
738:44 - grow so it will reduce the size of the
738:46 - HTML element as far as its functionality
738:49 - is concerned so guys I'll leave this up
738:50 - to you as a homework for you so that you
738:52 - can practice on your own apart from this
738:54 - we also have something called as Flex
738:56 - bases so guys basically this will help
738:58 - us in order to set the initial width of
739:01 - a HTML element so guys let us check that
739:04 - as well so what we will do is let us say
739:06 - for this first element we provide the ID
739:09 - as one over here and simply we will
739:11 - provide the CSS property for this ID 1
739:14 - so guys let me just provide the CSS
739:16 - property of flex bases over here so what
739:18 - we can do is simply we can provide the
739:20 - width of 100 pixels as the original
739:22 - width for this particular first element
739:24 - so guys simply you can provide the
739:26 - initial width with the help of the flex
739:28 - basis CSS property let me just save this
739:31 - file now and try reloading this page
739:33 - once again on the browser notice that
739:35 - the first element is now having the 100
739:37 - pixels over here followed by the third
739:39 - element which is having the required
739:40 - with as necessary and then apart from
739:43 - this we have Flex grow equal to 1 for
739:45 - this fourth element and flex grow equal
739:47 - to two for the second element over here
739:49 - so in this way you can use the flex
739:51 - basis CSS property and then we also have
739:54 - something called as Flex CSS property
739:56 - which is nothing but a shorthand method
739:58 - in order to provide all these CSS
740:00 - properties that is flex grow Flex shrink
740:03 - and flex bases over here so guys this as
740:05 - well you can practice on your own as a
740:07 - homework for you and then apart from
740:09 - this we also have something called
740:10 - called as align self so guys basically
740:12 - it is similar to the Align content that
740:15 - we have seen for the flex container CSS
740:17 - property but when we say align self
740:20 - basically the value that we provide for
740:21 - the Align self will override the value
740:24 - that we had provided in the Align
740:26 - content over here so guys let us check
740:28 - that as well in the flex container that
740:30 - is the container class we had provided
740:32 - the Align content as space evenly over
740:35 - here and they are at the center of the
740:37 - container so guys apart from this we
740:39 - have something called as line self over
740:41 - here which is similar to the Align items
740:44 - that we had provided in this case inside
740:46 - the flx container CSS property so guys
740:49 - whatever value we provide to the Align
740:51 - cell will override the value of the
740:53 - Align items that we had provided so guys
740:55 - let us check that as well so what we
740:57 - will do is first of all in the container
741:00 - that is the flx container over here we
741:02 - will comment out this line of code that
741:04 - is align content and then guys for this
741:06 - align items we have Center value so let
741:09 - me just check that as well so when we
741:11 - reload this page as you can see all the
741:13 - items are at the center as far as the
741:15 - vertical axis that is the cross AIS is
741:17 - concerned now guys let us say we only
741:19 - want this fourth element to be at the
741:22 - start of this container that is at the
741:24 - top of the container over here so simply
741:26 - we can use the Align self CSS property
741:29 - specifically for this particular
741:31 - selector that is having the ID equal to
741:33 - 4 so guys simply we can provide aligned
741:36 - self CSS property over here and we can
741:38 - provide the value as start and in this
741:40 - case so guys when we say Flex start over
741:43 - here let me just save this file now and
741:45 - try reloading this page once again on
741:46 - the browser so as you can see now the
741:48 - fourth element is getting displayed at
741:50 - the top of the container because of this
741:52 - Flex start value that we have provided
741:55 - to align self so guys simply the Align
741:57 - self CSS property is used in order to
742:00 - align the specific HTML element that is
742:03 - the flex item inside the flex container
742:06 - we can also have the Align self CSS
742:08 - property for the second element as well
742:10 - so over here we can provide the Align
742:12 - cells and let's say we provide the flag
742:14 - and value so basically the second
742:16 - element should be displayed at the
742:18 - bottom of the container so let me just
742:20 - save this file now and try reloading
742:22 - this page once again on the browser so
742:24 - as you can see the second element is now
742:26 - getting displayed at the bottom of this
742:28 - container so guys in this way you can
742:29 - use all these Flex items CSS property
742:33 - based on your project requirements so
742:35 - guys comment in the comment section
742:36 - below whether you have learned something
742:37 - out of this video please make sure that
742:39 - you like this video so that it reaches
742:41 - to more people and subscribe to this
742:43 - channel so that you get the
742:44 - notifications on upcoming videos as well
742:46 - the next video that we are going to talk
742:48 - about is Media queries in CSS so stay
742:51 - tuned so now we will see media queries
742:54 - in CSS so guys basically the at media
742:57 - rule introduced in CSS 2 made it
743:00 - possible to define the different style
743:02 - rules for different media types and this
743:05 - we are going to check with the help of
743:06 - examples as well there are different
743:08 - types of media over here as you you can
743:10 - see the first type is all which is used
743:12 - for all media type devices apart from
743:15 - this we also have the print value which
743:17 - is used for the print preview mode and
743:19 - then the most commonly used that is the
743:21 - screen value which is used for the
743:23 - computer screens tablets smartphones Etc
743:26 - so guys basically we are going to check
743:28 - the examples with the screen media type
743:31 - over here and basically the important
743:33 - implementation of this media queries is
743:35 - used in such a way that when you want to
743:37 - provide different CSS properties for
743:40 - small screen devices such as smartphones
743:42 - or the tablets you can use the media
743:44 - queries over here which we are going to
743:46 - check with the help of examples now guys
743:48 - the commonly used media features are
743:51 - orientation then we have Max height and
743:53 - Min height apart from this we also have
743:55 - the max width and mean width over here
743:57 - so guys let us check the examples of the
743:59 - media queries so let us move to the vs
744:01 - code over here and simply I'm going to
744:03 - remove the previous lines of code that
744:05 - we had written in the HTML and the CSS
744:08 - files in this case now guys what we are
744:09 - going to do is when we are going to
744:11 - reduce the screen width that is towards
744:13 - the tablets or towards the smartphon
744:15 - screen width we are going to change the
744:17 - background color with the help of the
744:19 - media rule over here so guys let us
744:21 - check this feature over here so inside
744:23 - the body tag we are simply going to have
744:25 - the diff tag over here and simply we are
744:28 - going to have some random text in this
744:30 - case with 10 words over here so guys
744:32 - basically this is the Mt abbreviation
744:34 - that helps us in order to Generate
744:36 - random text let me just save this file
744:38 - now and try reloading this page on the
744:40 - the browser so as you can see we have
744:42 - the diff tag with the simple text over
744:44 - here now guys we are going to provide a
744:46 - different background color for the body
744:48 - tag in this case originally so let us
744:50 - have the background color CSS property
744:53 - and let's say we have the value as Aqua
744:55 - for the body tag over here let me just
744:57 - save this file now and try reloading
744:59 - this page as you can see we have the
745:01 - background color for the body tag in
745:03 - this case now guys let me quickly open
745:04 - the console over here so when we are
745:07 - going to increase or decrease the width
745:09 - over here in this case as you can see
745:11 - these are the numbers that is the width
745:13 - and height that are getting displayed
745:15 - over here for this particular screen so
745:17 - guys by default we have this particular
745:19 - background color that is aqua over here
745:22 - but we are going to decrease the screen
745:24 - width and let's say below 500 pixels of
745:26 - the width we want to change the
745:28 - background color of the body to yellow
745:30 - color over here so we can simply use the
745:32 - media query in this case so let us check
745:35 - that as well so inside the style. CSS
745:37 - file we are going to use at theate
745:39 - character over here and simply we are
745:41 - going to use the media so guys this is
745:43 - the keyword that we are going to use and
745:45 - Then followed by the space character we
745:47 - can simply omit this particular option
745:50 - that is screen option over here or we
745:51 - can provide this value so that the media
745:54 - query is applied only to the computer
745:57 - screens tablets and smartphones and
745:59 - other types of screen so guys basically
746:01 - we are going to provide the value that
746:03 - is screen over here and then followed by
746:05 - the end keyword and then inside the open
746:08 - and close parenthesis we want the Max
746:10 - WID to be 500 pixels over here so guys
746:13 - below 500 pixels we want the background
746:16 - color to be updated which is not
746:17 - updating right now so currently it is
746:20 - 601 pixels that we can see so simply we
746:23 - are going to set the max withd it is
746:25 - equal to 500 pixels so guys inside this
746:28 - we are going to provide the body tag
746:30 - over here for which we are going to set
746:33 - the background color as yellow color
746:35 - over here so guys what is the meaning of
746:37 - this media query so simply we are using
746:39 - the media key word after the etherate
746:42 - character and Then followed by the media
746:44 - type that is screen over here and then
746:45 - followed by the end character and the
746:47 - meaning of this Max width is basically
746:50 - 500 pixels is the maximum value for the
746:53 - screen width over here so any screens
746:55 - that are below 500 pixels should have
746:58 - the background color as yellow for the
747:00 - body tag over here so let's say we have
747:02 - any of the smartphone in this case or
747:04 - the tablet which is having the width
747:06 - below 500 pixels for that particular
747:08 - screen the background color with will be
747:10 - displayed as yellow and the screen width
747:12 - which is more than 500 pixels such as
747:14 - for the desktop computers for that
747:16 - particular device we are going to have
747:18 - the background color as Aqua so guys let
747:20 - us check this let me just save this file
747:22 - now and try reloading this page once
747:24 - again on the browser notice that
747:26 - currently we have the default value that
747:28 - is equa but when we reduce the screen
747:30 - width as you can see we have moved to
747:32 - 572 pixels over here and then we are
747:35 - reducing it towards the 500 pixels
747:37 - slowly so we are reducing it so
747:39 - currently it is
747:41 - 5.67 and when we reduce it next as you
747:43 - can see the background color is now
747:45 - updated to yellow color so guys simply
747:47 - in this way we can reduce the screen
747:49 - width and test this particular media
747:52 - query over here and whatever device is
747:54 - having the width below 500 pixels will
747:57 - have the background color as yellow for
747:59 - this particular page that is getting
748:01 - displayed and when we increase the width
748:03 - over here above 500 pixels again the
748:05 - background color is updated to aqua
748:07 - color over here so guys this is the main
748:09 - function ity of having the media queries
748:12 - it helps us in order to provide the
748:14 - certain CSS properties to different
748:17 - devices that are having different screen
748:19 - width or the screen height as well so
748:21 - guys the other parameters that we can
748:23 - use is orientation then we have the
748:26 - height as well which involves Max and
748:27 - Min height and then we also have width
748:29 - which is Max width and Min width in
748:31 - which case we are currently using the
748:33 - max width over here apart from this we
748:35 - can also have another condition over
748:37 - here so let's say we want the max with
748:40 - to be 300 pixels and Below 300 pixels we
748:43 - want some other background color so let
748:45 - me just copy these lines of code over
748:47 - here and we are going to have similar
748:49 - media query but this time we are going
748:51 - to have the max width equal to 300
748:53 - pixels in this case so whatever devices
748:56 - that are having the screen with lesser
748:58 - than 300 pixels should have some other
749:01 - background color so let's say we have
749:03 - this chart reuse background color over
749:05 - here let me just save this file now and
749:07 - try reloading this page once again on
749:09 - the browser so current currently we have
749:10 - the aqua color that is the default color
749:13 - which will be displayed on the desktop
749:15 - computers and then let's say when we
749:16 - reduce the screen width to below 500
749:19 - pixels it is having the yellow
749:20 - background color which will probably
749:22 - correspond to the tablet screen size and
749:25 - then let's say we have Max with equal to
749:27 - 300 pixels which might correspond to
749:29 - some of the smartphone devices so let us
749:31 - say we go beyond the 300 pixels which
749:34 - means we are reducing the screen width
749:36 - to lesser than 300 pixels over here so
749:39 - as you can see we have a different
749:40 - background color over here now guys let
749:42 - us say when we move towards this
749:44 - particular width that is below 300
749:46 - pixels we want to hide this particular
749:49 - diff tag so what we can do is simply
749:51 - inside the same media query we can have
749:54 - the diff tag that will help us in order
749:56 - to identify this particular diff tag
749:59 - inside the body tag over here and simply
750:01 - we can provide the display property
750:03 - equal to none so guys basically what
750:06 - this will do is when the screen width is
750:08 - below 300 pixels the tag will be hidden
750:11 - over here let me just save this file now
750:13 - and try reloading this page as you can
750:15 - see we are below 300 pixels that's why
750:17 - we cannot see the diff tag over here so
750:19 - currently we have the screen width of
750:21 - more than 500 pixels over here let us
750:23 - reduce it to below 500 pixels as you can
750:26 - see we have the yellow color and the
750:28 - diff tag is getting displayed now let us
750:30 - reduce to less than 300 pixels over here
750:32 - as far as the screen WID is concerned so
750:34 - as you can see when we move from 305
750:37 - over here to 298 this the the background
750:40 - color is updated to the Chart reuse
750:42 - color and the diff tag is getting hidden
750:44 - over here so guys in this way we can
750:46 - simply use the media queries in order to
750:49 - provide the different CSS properties as
750:51 - far as the screen width orientation or
750:53 - the height is concerned so guys comment
750:55 - in the comment section below whether you
750:57 - have learned something out of this video
750:59 - please make sure that you like this
751:00 - video so that it reaches to more people
751:02 - and subscribe to this channel so that
751:04 - you get the notifications on upcoming
751:05 - videos as well the next video that we
751:07 - are going to talk about is flex response
751:10 - in CSS so stay tuned so now we will see
751:13 - Flex responsive in CSS so guys basically
751:16 - we are going to check the example of a
751:18 - responsive design over here with the
751:21 - help of the CSS Flex Box model and we
751:23 - are going to use the flex Direction in
751:25 - this case so guys inside the flex boox
751:27 - model we are going to update the flex
751:30 - direction to column when the screen size
751:32 - reduces to 400 pixels or below so guys
751:35 - by default we are going to keep the flex
751:38 - direction of the flex box as over here
751:40 - for the desktop computers and then when
751:42 - the screen size reduces to let's say the
751:45 - size of the tablet or the smartphone
751:47 - over here which can be below 400 pixels
751:50 - we are going to change the flex
751:51 - direction to column so guys let us move
751:53 - to the vs code over here and let me just
751:56 - remove the previous lines of code that
751:57 - we had written in the HTML and the CSS
752:00 - files over here now guys simply we are
752:02 - going to have the diff tag with the
752:04 - class container over here and then apart
752:06 - from this we are going to have two diff
752:08 - tags inside this class class container
752:10 - the first diff tag is having the content
752:13 - that is one over here and the second
752:15 - diff tag is having the content that is
752:16 - two we are also going to have the ID
752:19 - that is 1 and two for both these div
752:22 - tags over here so guys this is the
752:24 - content that is div 1 and diff two which
752:26 - are having the IDS one and two over here
752:29 - inside the class container now guys we
752:31 - are going to make this diff tag that is
752:33 - having the class container as the flex
752:35 - container over here which is one of the
752:37 - first important step as far as the Xbox
752:40 - model is concerned so simply we are
752:42 - going to copy this class name over here
752:44 - and inside the style. CSS file for this
752:46 - container class we are going to make the
752:49 - display it is equal to Flags in this
752:51 - case and let us have the background
752:53 - color as yellow color over here so guys
752:55 - simply we have the yellow color is the
752:57 - background color in this case let me
752:59 - just save this file now and try
753:00 - reloading this page on the browser so as
753:03 - you can see we have the content that is
753:05 - one and two over here now guys let us
753:07 - provide certain CSS properties for this
753:09 - Flex items as well so simply we will be
753:12 - using the dot container class over here
753:14 - and then inside this we are going to
753:16 - provide the diff tags in this case now
753:18 - guys let us provide the padding as 20
753:20 - pixels for both these diff tags over
753:23 - here and then apart from this we are
753:24 - also going to provide the background
753:26 - color as black color let me just save
753:28 - this file now and try reloading this
753:30 - page as you can see we have the diff
753:32 - tags that are getting displayed over
753:33 - here but we cannot see the content
753:35 - that's because the color of the text is
753:37 - black color and the background color is
753:39 - also black so let me just set the color
753:41 - to white in this case which is the text
753:43 - color so as you can see we are getting
753:45 - one and two over here now guys let us
753:48 - provide the CSS property that is flex in
753:50 - such a way that both these Flex items
753:53 - takes the entire width of this Flex
753:56 - container over here so what we can do is
753:58 - simply we can provide the flex value it
754:00 - is equal to one in this case so both the
754:02 - diff tags are having flag equal to 1 so
754:05 - the entire remaining space will be taken
754:07 - by both the diff tags so let me just
754:09 - reload this page as you can see we have
754:11 - one and two over here let us change the
754:13 - background color of this first element
754:15 - that is the first diff tag to some other
754:18 - color over here so that we can identify
754:20 - both the diff tags separately so what we
754:22 - can do is simply we will use the ID of
754:25 - this diff tag that is one over here and
754:27 - we will use the hash character in this
754:29 - case and then we will be using the
754:31 - background color and we will provide the
754:33 - value as blue over here for the
754:35 - background color CSS property let me
754:37 - just save this file now and try
754:38 - reloading this page as you can see we
754:40 - have the blue color is the background
754:42 - color for the first diff tag and the
754:44 - black color as the second diff tag over
754:47 - here now guys if you notice both the
754:49 - diff tags are getting displayed in the
754:51 - horizontal direction that is by default
754:53 - the flex direction is Row in this case
754:56 - so let us open the console over here so
754:58 - that we can increase or decrease the
755:00 - width of the screen so as you can see
755:02 - the width is getting displayed over here
755:04 - on the top right hand side when we
755:06 - decrease and increase the width over
755:08 - here so guys basically this is withd
755:09 - width multiplied by height in pixels
755:11 - that is getting displayed in this case
755:13 - now guys what we will do is we want the
755:15 - 400 pixels to be the thresold value and
755:18 - below this 400 pixels we want this
755:21 - second element to be displayed below
755:23 - this first element so that on smartphone
755:25 - or the tablet devices the HTML elements
755:28 - are displayed in the vertical Direction
755:30 - over here so guys what we have to do is
755:32 - we can use the media query over here by
755:35 - default the flex container is having the
755:37 - flex direction as row Direction but when
755:39 - the width of the screen is reduced to
755:41 - 400 pixels or below we want the flex
755:44 - direction to be the column Direction
755:46 - over here so simply we are going to use
755:48 - the media query in this case so we use
755:50 - at theate character followed by media
755:53 - screen over here and then apart from
755:55 - this we have the end keyword and then we
755:57 - provide the max with CSS property inside
756:00 - the parenthesis now guys the max with
756:02 - CSS property should have the value of
756:04 - 400 pixels because that is the threshold
756:06 - value that we are looking for and then
756:09 - when the width is below 400 pixels we
756:11 - want this Flex container to have the
756:13 - flex direction as column Direction over
756:15 - here so simply we are going to use this
756:17 - class name that is container in this
756:19 - case and then we will simply change the
756:21 - flex direction to column over here so
756:24 - guys this is the way that we can change
756:26 - the flex direction from row to column
756:28 - based on the max width of the screen
756:31 - device so let me just save this file now
756:33 - and try reloading this page once again
756:35 - on the browser notice that previously we
756:37 - were not getting this second item below
756:39 - below the first item over here when we
756:41 - increased or decreased the width of the
756:43 - screen now guys when we decrease the
756:45 - width of the screen now after reloading
756:47 - the page currently it is 404 pixels when
756:49 - we reduce it to below 400 pixels as you
756:52 - can see the second element is now
756:54 - getting displayed below the first
756:56 - element over here and in this way you
756:58 - can easily create the responsive design
757:00 - for your web page based on your project
757:02 - requirements now guys when we increase
757:04 - the width of the screen to more than 400
757:07 - pixels again the flex direction is now
757:09 - set to row Direction and the HTML
757:11 - elements are now getting displayed from
757:13 - left to right and then when we reduce
757:15 - the screen width now the second element
757:17 - is going below the first element over
757:19 - here so guys in this way you can easily
757:21 - create the responsive web design based
757:23 - on the flexbox model and also the media
757:26 - queries that you can use based on the
757:28 - different screen devices so guys comment
757:30 - in the comment section below whether you
757:32 - have learned something out of this video
757:33 - please make sure that you like this
757:35 - video so that it reaches to more people
757:37 - and subscribe to this channel so that
757:38 - you get the notifications on upcoming
757:40 - videos as well the next video that we
757:42 - are going to talk about is creating
757:44 - navigation bar using flexbox in CSS so
757:47 - stay tuned so now we will see how we can
757:51 - create a navigation bar using flexbox in
757:54 - CSS so guys basically we can easily
757:57 - create a navigation bar that is
757:59 - horizontal or vertical direction using
758:01 - the flexbox model in CSS so let us move
758:04 - to the vs code over here and simply we
758:06 - are going to remove the previous lines
758:08 - of code that we had return in the HTML
758:10 - and the CSS files now guys what we will
758:13 - do is simply we will have the D tag with
758:15 - the class that is naar over here and
758:17 - then inside this we will have more div
758:20 - tags inside which we are going to have
758:22 - the links which will help us in order to
758:25 - navigate through different pages of the
758:27 - website so guys first of all we have the
758:29 - homepage over here and then apart from
758:31 - this similarly we will have more links
758:33 - such as blog in this case and then we
758:35 - will have videos as well and then apart
758:38 - from this we will have the about page as
758:40 - well so guys we have the four items
758:42 - inside the navigation bar over here let
758:45 - me just save this file now and try
758:46 - reloading this page on the browser so as
758:49 - you can see this is the default way in
758:51 - which the links that is the a tags are
758:53 - getting displayed over here now guys
758:55 - what we can do is simply we will make
758:57 - this class that is naar which is the div
758:59 - tag as the flex container over here so
759:02 - let me just copy this class name in
759:04 - order to make this as a flex container
759:06 - we can provide it inside the CSS file
759:09 - and then simply we can provide the
759:11 - display property equal to Flags over
759:13 - here and then apart from this we will
759:15 - have the background color as black color
759:17 - for this navigation bar over here let me
759:19 - just save this file now and try
759:21 - reloading this page once again on the
759:23 - browser so as you can see the items are
759:25 - getting displayed with the dark blue
759:27 - color over here in the horizontal
759:29 - Direction because the flex direction is
759:31 - row by default for this particular Flex
759:34 - container now guys apart from this we
759:36 - have the margin over here by default at
759:38 - the top left and the right direction
759:40 - over here so simply we are going to
759:42 - provide the star character inside which
759:44 - we will make the margin as zero and also
759:46 - the padding as zero in this case so guys
759:49 - let me just save this file now this is
759:51 - used in order to remove the spaces at
759:53 - the top left and right direction of the
759:56 - navigation bar now guys apart from this
759:58 - we will also provide certain CSS
760:00 - properties for these Flex items that you
760:02 - can see so first of all we will use this
760:04 - Nave bar class over here after the dot
760:07 - character and then for the diff tag we
760:09 - are going to provide certain CSS
760:11 - properties over here and then after that
760:14 - we are going to provide certain CSS
760:16 - properties for the a tag as well inside
760:18 - the diff tag which is present inside the
760:20 - flex container so first of all let us
760:22 - provide the CSS properties for the a tag
760:25 - and then we will provide the color as
760:27 - the white color over here because
760:28 - currently it is the default color that
760:30 - is dark blue color you can see in this
760:32 - case and also we are going to provide
760:35 - the text decoration CSS property as none
760:38 - so that there is no underline for the
760:40 - different links that are getting
760:42 - provided so let me just reload this page
760:44 - once again on the browser as you can see
760:46 - these are the links that are getting
760:47 - displayed over here now guys for the
760:49 - diff tag we need to provide certain
760:51 - padding in this case so let's say we
760:52 - provide five pixels of padding over here
760:55 - from all the four sides let me just
760:57 - reload this page as you can see we have
760:59 - provided certain padding over here for
761:01 - the diff tag and then guys what we will
761:02 - do is when we get the mouse cursor on
761:05 - these links over here which is the flex
761:07 - items that are the navigation items in
761:09 - this case inside the navigation bar we
761:12 - want to change the background color of
761:14 - the diff tag so what we can do is simply
761:16 - I'm going to copy this line of code over
761:18 - here that is name bar and then inside
761:20 - this we have the T and then onover event
761:23 - so in this case we are going to use the
761:25 - Pudo class that is hover in this case we
761:28 - can provide the background color over
761:30 - here so simply we can say the value as
761:32 - red color in this case so guys basically
761:34 - this will help us in order to change the
761:36 - background color to red when we get the
761:38 - mouse Cur on the different diff tags
761:41 - that are present as the flex items
761:43 - inside the flex container so guys let me
761:45 - just save this file now and try
761:46 - reloading this page once again on the
761:48 - browser when we get the mouse cursor now
761:50 - on this diff tag as you can see the
761:52 - background color is now getting updated
761:54 - to red color over here so guys in this
761:56 - way we have easily created the
761:58 - navigation bar just by using the display
762:00 - equal to flex and then we have provided
762:03 - certain CSS properties for the flex
762:05 - items which are nothing but the links
762:07 - inside the navigation bar now apart from
762:09 - this we can also display these items at
762:12 - the center of the navigation bar as well
762:14 - so what we can do is for the flex
762:16 - container that is having the class Name
762:18 - Bar simply we can provide the justify
762:21 - content CSS property and simply we can
762:23 - say Center as the value by default the
762:26 - value is start over here which helps us
762:28 - in order to display this Flex item at
762:30 - the left hand side of the screen but
762:32 - when we say Center value it will display
762:34 - all the flex items at the center of the
762:36 - flex container so when we reload this
762:38 - page once again as you can see all the
762:41 - items are now getting displayed at the
762:42 - center of the flex container over here
762:45 - apart from this if we want all these
762:47 - items to be displayed on the right hand
762:49 - side of this particular Flex container
762:51 - simply we can say end value over here
762:53 - for the justify content let me just
762:55 - reload this page once again so these are
762:57 - the navigation items that are getting
762:59 - displayed at the right of the flex
763:01 - container over here we can also increase
763:03 - the padding as far as the left and the
763:05 - right padding is concerned so basically
763:07 - we have provided five pixels from all
763:09 - the four sides so we can provide the 10
763:12 - pixels to the left and right direction
763:14 - so guys basically the first unit is
763:16 - corresponding to the top and bottom
763:18 - padding over here and the second
763:20 - parameter is representing the left and
763:22 - right padding over here let me just
763:24 - reload this page once again on the
763:26 - browser so as you can see we have the
763:27 - padding that is increased over here now
763:30 - guys apart from this if you want to add
763:32 - more navigation items over here simply
763:34 - you have to come to the HTML file and
763:36 - you can copy paste these lines of code
763:39 - over here and then let us say we want
763:41 - another item to be S map over here and
763:43 - then the next item that is the sixth
763:45 - item to be contact us over here so guys
763:47 - simply we can provide the different menu
763:50 - items inside the navigation bar let me
763:52 - just save this file now and try
763:53 - reloading this page once again on the
763:55 - browser so as you can see automatically
763:57 - the number of navigation items have
763:59 - increased and you don't have to change
764:01 - anything inside the CSS file once you
764:04 - have set all these CSS properties with
764:06 - the help of the flex container over here
764:08 - now guys apart from this when you
764:10 - decrease the width of the screen over
764:12 - here so let me just open the console in
764:14 - this case so as you can see when we
764:16 - increase or decrease the width of the
764:18 - screen basically the navigation bar is
764:21 - still being displayed as the horizontal
764:23 - navigation bar how do we display it as a
764:25 - vertical navigation bar when the width
764:27 - of the screen is less than 500 pixels
764:30 - over here so in this case we can simply
764:32 - use the media query over here so what we
764:35 - will do is inside the CSS file we will
764:37 - use at theate and and then we will use
764:39 - the media screen query over here and
764:42 - then after this we will have the end
764:44 - keyword and inside the parenthesis we
764:46 - will provide Max width in this case as
764:49 - the CSS property and it should be 500
764:51 - pixels over here now guys when the width
764:53 - of the screen is 500 pixels or below we
764:56 - will be using the CSS properties inside
764:59 - this media query to be implemented on
765:01 - the web page so guys we will be having
765:03 - the Nave bar class over here inside the
765:06 - media query and for this Nave bar that
765:09 - is the flex container we need to provide
765:12 - the flex direction as horizontal so guys
765:14 - what this will do is basically the flex
765:16 - direction is Row in this case which is
765:18 - the default Flex Direction value and
765:21 - that is how we are able to display this
765:23 - navigation bar from left to right over
765:26 - here in the horizontal Direction but
765:27 - when we decrease the width of the screen
765:30 - we want this navigation bar to be
765:32 - displayed in the vertical Direction over
765:34 - here so simply we will set the flex
765:36 - Direction equal to column in this case
765:38 - which will help help us in order to
765:39 - display all the items in the vertical
765:42 - Direction when the screen width
765:44 - decreases to below 500 pixels so let me
765:47 - just save this file now and try
765:48 - reloading this page once again on the
765:50 - browser currently the screen width is
765:52 - more than 500 pixels but when we reduce
765:55 - the width of the screen so as you can
765:56 - see currently it is 5502 pixels and then
765:59 - when we move it below 500 pixels over
766:02 - here you can see that the items are now
766:04 - getting displayed in the vertical
766:06 - Direction over here and in this way you
766:08 - can easily change the navigation bar
766:11 - from horizontal to the vertical
766:12 - Direction based on the width of the
766:14 - screen in this case so guys this is one
766:16 - of the important implementation as far
766:19 - as responsive web design is concerned so
766:21 - basically your web page or websites will
766:24 - be used on different screen devices
766:26 - which will have different width so guys
766:28 - basically the desktop computers and the
766:30 - smartphones and the tablets all have the
766:32 - different screen sizes over here and
766:35 - accordingly you need to handle all these
766:37 - HTML elements so Xbox model helps you in
766:40 - order to create the responsive web
766:42 - design so that the user experiences
766:45 - better on all the screen devices so guys
766:47 - in this way you can create the
766:49 - horizontal and the vertical navigation
766:51 - bar based on your project requirements
766:53 - with the help of the flex container over
766:55 - here and the media query as well that we
766:58 - have seen with the help of the examples
767:00 - so guys comment in the comment section
767:01 - below whether you have learned something
767:03 - out of this video please make sure that
767:05 - you like this video so that it reaches
767:06 - to more people and subscribe to this
767:08 - channel channel so that you get the
767:09 - notifications on upcoming videos as well
767:12 - the next video that we are going to talk
767:13 - about is simple responsive design using
767:16 - flexbox in CSS in which we are going to
767:19 - create a simple UI using the flexbox
767:22 - model in CSS so stay tuned so now we
767:25 - will see a simple responsive web design
767:28 - using the flex box in CSS so guys in
767:31 - this example we will create a simple
767:33 - responsive design using flexbox model so
767:36 - let us move to the vs code over here and
767:38 - simply I'm going to remove the previous
767:40 - lines of code inside the HTML and the
767:43 - CSS files now guys what we are going to
767:45 - do is simply we are going to create a
767:47 - div tag with the class container over
767:49 - here inside this div tag first of all we
767:52 - will have the header class over here
767:54 - which means we are going to have the
767:55 - diff tag with the class header and
767:57 - inside this we will say this is heading
768:00 - so guys we can have the heading for the
768:02 - web page in this case and then apart
768:04 - from this we will also have another
768:06 - class that is row over here that will
768:08 - will have certain content now guys
768:10 - inside this row class that is the diff
768:13 - tag with the class row we are going to
768:15 - have three elements over here first of
768:17 - all we will have the navigation bar that
768:19 - that will be a vertical navigation bar
768:21 - over here so we have the na bar inside
768:23 - which we will have four items over here
768:25 - so we will have the diff tag inside the
768:27 - diff tag we will have the links with the
768:29 - help of the a tag over here so we have
768:31 - the hash character for the HF attribute
768:34 - and then we are going to have the home
768:36 - as first item inside the navigation bar
768:39 - and then similarly we will have other
768:41 - items over here so guys let us say we
768:43 - have blog in this case as the second
768:45 - item then we have the videos as well and
768:47 - then we will have the about section over
768:49 - here because apart from this inside the
768:52 - same row we are going to have the main
768:54 - content diff tag as well so simply we
768:56 - are going to say content over here and
768:59 - then we are going to say a simple
769:01 - statement that is this is a div tag with
769:04 - content so guys basically in order to
769:06 - identify that this is the content tag
769:09 - over here we have provided a simple
769:11 - statement in this case and then apart
769:13 - from this we can also generate certain
769:15 - random text in this case so guys let us
769:17 - say we have 40 words as the random text
769:19 - that is getting generated over here and
769:21 - then guys apart from this in the same
769:23 - row on the right hand side we will have
769:25 - another diff tag which will be the
769:27 - content at the right hand side so simply
769:29 - we will have the class name that is
769:31 - content and Then followed by Hyun and
769:33 - then we have the right keyword over here
769:35 - and in this case we will say this is a d
769:38 - tag with right content so guys basically
769:41 - we have a simple statement over here and
769:43 - then apart from this we will have
769:45 - certain random text that is getting
769:47 - generated this time we will have only 10
769:49 - words over here so guys this is the HTML
769:51 - content that we have written inside our
769:54 - web page which we are going to make
769:55 - responsive so guys let me just save this
769:57 - file now and try reloading this page on
769:59 - the browser so as you can see this is
770:01 - the content that we have provided which
770:04 - is getting displayed from top to bottom
770:06 - over here now guys inside the style. C
770:08 - CSS file we need to provide certain CSS
770:11 - properties in such a way that we need to
770:13 - make this web page as a responsive web
770:15 - page so first of all we will make use of
770:18 - this container class over here and we
770:20 - will make it as a flex container in this
770:22 - case so guys basically we will make use
770:24 - of this display CSS property and the
770:27 - value we are going to use is flex over
770:29 - here and then apart from this what we
770:30 - will do is we will set the flex
770:32 - direction as column in this case so that
770:35 - all the elements are getting displayed
770:37 - from top to bottom that just save this
770:39 - file now and try reloading this page
770:41 - once again on the browser as you can see
770:43 - all the elements by default were
770:44 - displayed from top to bottom and there
770:46 - is no change over here now guys for the
770:48 - heading part what we will do is we will
770:50 - make use of this class name that is
770:52 - header and we will provide certain CSS
770:54 - property for this header class over here
770:57 - so guys first of all we will change the
770:58 - background color to yellow in this case
771:01 - apart from this we will also have the
771:03 - margin bottom property and we will set
771:05 - it to 10 pixels over here we will also
771:07 - set the padding as 20 pixels in this
771:09 - case also we want to set the font size
771:12 - over here to let's say 2 em in this case
771:15 - so basically it will be two times the
771:17 - default font size over here let me just
771:19 - save this file now and try reloading
771:21 - this page so as you can see we have this
771:23 - is heading text over here and it is also
771:25 - having the background color as a yellow
771:27 - color over here and it is also having
771:29 - certain margin bottom property as well
771:31 - now guys what we will do is this row
771:33 - container that we have that is the diff
771:35 - tag with the class row we want to make
771:37 - it as a flag F container which should be
771:40 - having the flex direction as the row
771:42 - Direction so that all these elements are
771:44 - getting displayed from left to right
771:46 - instead of top to bottom so guys inside
771:48 - the style. CSS file over here simply we
771:51 - will use the class name that is Row in
771:53 - this case and we will use the display
771:55 - property we will set the value as Flex
771:57 - in this case and the flex direction
771:59 - should be equal to row over here which
772:01 - is the default value let me just save
772:03 - this file now and try reloading this
772:05 - page once again on the browser so as you
772:07 - can see the Nave bar is displayed on the
772:09 - left and then we have the main content
772:11 - that is at the middle and then the side
772:13 - content that is present on the right
772:15 - hand side over here now guys we will
772:17 - also provide certain spacing in between
772:19 - them so let us provide those CSS
772:21 - properties as well so what we will do is
772:23 - inside the row whatever diff tags are
772:25 - present we want certain padding and the
772:28 - margin to be provided over here so we
772:30 - have the diff tags inside the row class
772:32 - over here and simply we are going to
772:34 - provide certain padding in this case so
772:37 - let's say we have 10 pixels of padding
772:38 - let me just save this file now and try
772:40 - reloading this page so as you can see we
772:42 - have the padding that is getting applied
772:44 - over here now guys the padding is also
772:46 - getting applied to the diff tags inside
772:48 - the Nave bar as well so in order to
772:50 - avoid that we want the padding to be
772:52 - applied to the direct diff child of the
772:55 - row class over here so that only these
772:57 - diff tags that is the Nave bar then the
773:00 - content and the content right classes
773:02 - should have the padding and not these
773:04 - div Texs which are the part of the
773:05 - navigation items so guys let me just
773:07 - save this file file now after providing
773:09 - this greater than symbol which means the
773:11 - direct child should be affected with
773:14 - these CSS properties over here and when
773:16 - we reload this page as you can see now
773:18 - there is no padding that is applied to
773:20 - these navigation items over here and we
773:22 - have also provided the spacing in this
773:24 - case now guys let us provide certain CSS
773:26 - properties to this navigation bar and
773:28 - make it a proper vertical navigation bar
773:31 - over here so what we can do is simply
773:33 - for this Nave bar we will make it as a
773:35 - flex container which will have the flex
773:37 - Direction as column over here so guys we
773:40 - have the Nave bar class name in this
773:42 - case we will have the display equal to
773:44 - flex over here and the flex direction
773:46 - should be column in this case so guys
773:48 - basically we have the column value let
773:50 - me just save this file now and try
773:52 - reloading this page so as you can see
773:54 - there is no change right now so guys
773:55 - inside this name bar we want the a tags
773:58 - to be having certain CSS properties and
774:01 - also the diff tags as well so guys what
774:03 - we will do is simply I'm going to copy
774:05 - these lines of code over here and then
774:07 - inside the na bar we have the diff tags
774:09 - in this case which should have certain
774:11 - padding over here so guys basically we
774:13 - will have the padding of five pixels
774:15 - this time and then for the na bar as
774:16 - well we are going to have certain
774:18 - background color so let's say we have
774:20 - the value as Aqua which is the
774:22 - background color for the na bar let me
774:24 - just save this file now and try
774:25 - reloading this page so as you can see we
774:27 - have the padding and the background
774:29 - color that is getting displayed over
774:30 - here now guys apart from this for the ax
774:33 - as well we want to provide certain CSS
774:35 - properties so inside the naar class name
774:38 - we we have the diff tag followed by the
774:39 - a tag over here first of all we will set
774:42 - the color equal to Black so basically
774:44 - this is the text color that we are
774:46 - setting and then apart from this we also
774:48 - want the text decoration to be none so
774:51 - that the underlines that are getting
774:53 - displayed over here should not be
774:54 - displayed so let me just save this file
774:56 - now and try reloading this page once
774:58 - again on the browser so as you can see
775:00 - there are no underlines over here now
775:02 - guys when we get the mouse cursor on
775:04 - these diff tags what we want to do is we
775:06 - want to change the background color so
775:08 - guys what we can do is simply we will
775:10 - copy these lines of code over here and
775:12 - we need to provide the hover event for
775:15 - the diff tags in this case for which we
775:17 - want to change the background color so
775:19 - guys basically we want to change the
775:21 - background color to this chart reuse
775:23 - color which is a light color over here
775:24 - let me just reload this page so as you
775:26 - can see the background color is now
775:28 - getting updated when we get the mouse
775:30 - cursor on one of the items for this
775:32 - navigation bar over here so guys in this
775:34 - way we have completed the CSS properties
775:37 - for the navigation bar you can provide
775:39 - your own CSS properties for the
775:41 - navigation bar while you're practicing
775:43 - on your own now guys apart from this let
775:45 - us say we want the width of this
775:47 - particular content to be four times
775:49 - larger compared to this particular
775:51 - navigation bar and two times larger
775:53 - compared to the right content over here
775:56 - so guys we can use the class names in
775:58 - this case so what we will do is the na
776:00 - bar should have the flex equal to one
776:02 - over here so simply we will come to this
776:04 - Nave bar in this case which is a
776:06 - container and we will say Flex it is
776:08 - equal to one in this case basically it
776:10 - is a container as well as it is the flex
776:13 - item inside this row container over here
776:16 - and then apart from this we will also
776:18 - have the class names that is content and
776:20 - the content right in this case so guys
776:22 - basically we will have the dot content
776:24 - over here for this Flex item we will set
776:26 - the flex S4 in this case basically this
776:29 - Flex CSS property is nothing but it is
776:31 - flex grow over here but we are using the
776:34 - shorthand method that is the flex CSS
776:36 - property and then apart from this we
776:38 - will also have the content right class
776:40 - name and then for this class name we
776:42 - will set the flex value equal to two so
776:44 - guys let us check that as well when we
776:46 - set the flex equal to two and also we
776:49 - will change the background color to Aqua
776:51 - background color once again so that the
776:53 - colors are same for the navigation bar
776:55 - and the right hand side content as well
776:58 - so let me just save this file now and
777:00 - try reloading this page once again on
777:01 - the browser so as you can see we have
777:03 - the flex equal to one for this
777:05 - navigation bar and four * Flex for this
777:08 - particular content in the middle and two
777:10 - times Flex for this right hand side over
777:13 - here if we want to change the width of
777:15 - this content in this case we can simply
777:17 - increase the flex number for the content
777:20 - class name so let us check that as well
777:22 - so instead of having the four number we
777:24 - can have six in this case let me just
777:26 - save this file now and try reloading
777:28 - this page once again on the browser so
777:30 - as you can see the width of this content
777:32 - has increased to six times compared to
777:34 - the navigation bar over here and three
777:36 - times compared to the right hand side
777:39 - content over here because we have
777:40 - provided Flex equal to 2 for this right
777:43 - hand side content so guys this is a very
777:45 - simple basic design of the website or
777:48 - the web page that we have created over
777:50 - here now guys what we want to do is let
777:52 - us open the console in this case and
777:54 - when we decrease the width of this
777:56 - particular screen we want the flex
777:58 - direction of this row container over
778:00 - here to change to the column Direction
778:03 - so when we change the width of the
778:04 - screen now as you can see it is not
778:06 - completely responsive and now we are
778:08 - getting the horizontal scroll bar over
778:11 - here but we need to use the media query
778:13 - in such a way that when the width of
778:15 - this particular screen is less than 500
778:18 - pixels then all the items inside this
778:20 - particular row should have the flex
778:23 - direction as column and also the
778:25 - navigation should have the flex
778:27 - direction as row over here because
778:29 - currently it is the column Direction in
778:31 - this case so guys what we will do is we
778:33 - have to set the media query in such a
778:35 - way that the max width should be 500
778:37 - pixels over here so let us check that as
778:39 - well how we can implement it so
778:41 - basically we use aate character followed
778:43 - by media screen over here and then after
778:46 - this we provide the end keyword and then
778:49 - we have inside the parenthesis the max
778:51 - with CSS property over here after which
778:53 - we provide colon and then we see 500
778:56 - pixels over here now guys for this
778:58 - particular situation in which case when
779:00 - the screen device width is less than 500
779:03 - pixels we want to set the flex direction
779:06 - of this particular row to column over
779:08 - here so basically this Flex direction is
779:10 - equal to row but we want to change it to
779:13 - column when it is less than 500 pixels
779:15 - so simply we provide row class name over
779:18 - here and then we say Flex Direction it
779:21 - is equal to column in this case and then
779:23 - guys apart from this the flex direction
779:25 - of the Nave bar it is currently column
779:27 - over here we need to change it to row in
779:30 - this case so basically the items that
779:32 - are getting displayed from top to bottom
779:34 - we want to display it from left to right
779:37 - when the width of of the screen is less
779:39 - than 500 pixels so guys let us change
779:41 - that as well so over here within the
779:43 - same media query we will provide the
779:45 - class name that is naar over here and
779:48 - then we will change the flex Direction
779:50 - it is equal to row this time so let me
779:53 - just save this file now and try
779:54 - reloading this page once again on the
779:56 - browser notice that we don't have any
779:58 - change right now because the width is
780:00 - greater than 500 pixels and when we
780:02 - reduce it to less than 500 pixels over
780:05 - here so as you can see currently it is
780:07 - 500 7 pixels when we reduce it to less
780:10 - than 500 pixels the Nave bar is also
780:12 - changed from column to row Direction
780:14 - over here and the entire row content is
780:17 - now getting displayed from top to bottom
780:19 - in this case so guys in this way we have
780:21 - handled the situation in which case when
780:23 - we want to see this particular web page
780:26 - on a screen width that is below 500
780:29 - pixels we can use this media query over
780:31 - here you can provide any of the
780:33 - measurement over here for the max width
780:34 - based on your project requirements and
780:36 - then your responsive web design will be
780:39 - updated accordingly when the user
780:41 - accesses your web page on different
780:43 - screen devices so guys in this way you
780:45 - can make a simple responsive web design
780:47 - and practice on your own based on the
780:49 - different measurements of the screen
780:51 - devices either you can display the flex
780:53 - Direction in the row direction or the
780:55 - column Direction So currently it is in
780:57 - the row Direction over here as you can
780:59 - see but when we reduce the screen withd
781:02 - to below 500 pixels now it is in the
781:04 - column Direction and the na bar is in
781:06 - the row Direction over here so guys
781:09 - comment in the comment section below
781:10 - whether you have learned something out
781:12 - of this video please make sure that you
781:13 - like this video so that it reaches to
781:15 - more people and subscribe to this
781:17 - channel so that you get the
781:18 - notifications on upcoming videos as well
781:20 - I'll see you in the next video till then
781:22 - stay tuned so now we will see grid
781:25 - layout in CSS so guys basically the CSS
781:28 - grid layout module offers a grid based
781:31 - layout system with the help of rows and
781:34 - columns which makes it very easy to
781:36 - design the web page is without having to
781:39 - use the float and the position CSS
781:41 - properties that we had seen previously
781:44 - so guys we will check with the help of
781:45 - examples how you can easily design the
781:48 - web pages with the help of the grid
781:50 - layout using CSS so guys first of all we
781:53 - will understand the concepts of rows and
781:56 - columns in the grid layout in CSS so
781:58 - over here on the browser let us move to
782:00 - the sketch pad first of all so guys what
782:02 - is the meaning of grid layout in CSS so
782:05 - basically we have the concept of rows
782:07 - and columns as far as the grid layout is
782:09 - concerned so basically the horizontal
782:12 - lines as you can see this is one row
782:14 - over here and then we have the second
782:16 - row in this case so this is the second
782:19 - row that we have included and so on
782:21 - there can be multiple rows in the grid
782:23 - layout over here so guys let us label
782:25 - these rows in this case so let me add
782:27 - the text over here so basically we have
782:30 - Row one over here so basically this is
782:33 - Row one and then guys similarly we have
782:35 - row two and Row three as well so these
782:37 - these are the three rows that we have
782:39 - included in our grid layout now guys
782:41 - similarly we have the columns as well
782:43 - that can be defined as far as the grid
782:45 - layout is concerned so basically the
782:47 - vertical lines that are going from top
782:50 - to bottom these are the columns that can
782:52 - be defined inside the grid layout so let
782:55 - us have three columns over here so as
782:57 - you can see these are the column 1 2 and
782:59 - then three respectively so guys
783:01 - basically the grid items are aligned in
783:03 - such a way that they will be present in
783:05 - the row and the column format over here
783:08 - and then guys we also have some more
783:09 - properties such as column Gap so over
783:12 - here you can see that there is a gap
783:14 - over here in this case so this is
783:15 - nothing but it is a column Gap that we
783:18 - can Define with the help of CSS
783:19 - properties that we are going to see and
783:22 - also there's a gap between the row over
783:24 - here between Row one and row two and
783:26 - then between row two and Row three so
783:28 - Guys these are nothing but the row gaps
783:30 - and the column gaps that we are going to
783:32 - Define by default there will be no gaps
783:35 - between the rows and columns but we can
783:37 - include them with the help of CSS
783:39 - properties so guys this is the basic
783:41 - understanding as far as the grid layout
783:44 - in the CSS is concerned so guys let us
783:46 - check some of the examples now basically
783:49 - we can Define the container as a grid
783:51 - layout with the help of the display CSS
783:54 - property so guys let us move to the vs
783:56 - code over here and simply we are going
783:58 - to define the diff tag with the class
784:00 - container and inside this container we
784:02 - are going to have multiple grid items so
784:05 - guys let us say we have the tag with the
784:08 - class item over here and the first item
784:11 - is having the number one so guys
784:13 - similarly we are going to have multiple
784:15 - items in this case so guys as you can
784:17 - see we have the div Tex with the numbers
784:19 - from 1 to 9 let me just save this file
784:21 - now and try reloading this page on the
784:23 - browser to see how it looks like so as
784:26 - you can see these are nothing but the
784:27 - diff tags that are getting displayed
784:29 - from 1 to 9 and since by default the
784:32 - diff tags are having the display equal
784:34 - to block that is why all the numbers are
784:36 - getting displayed on the new new line
784:38 - over here guys let us provide certain
784:40 - CSS properties now in order to make a
784:42 - grid layout out of this container over
784:45 - here so guys basically we have this
784:46 - class container in this case and then
784:49 - what we will say is display it is equal
784:51 - to grid this time so that we can make a
784:53 - grid layout out of it now guys apart
784:56 - from this we will also have certain
784:58 - background color so that we can identify
785:00 - the background of the container as well
785:02 - as the items over here and then we will
785:05 - also have certain padding that we can
785:07 - provide so padding is equal to 20 pixels
785:09 - in this case let me just save this file
785:11 - now and try reloading this page once
785:13 - again on the browser so as you can see
785:16 - we have the background color for the
785:17 - grid container over here now guys by
785:20 - default the grid layout is having just
785:22 - one column over here let us provide
785:24 - certain CSS properties to this diff tags
785:27 - as well which is present inside the
785:28 - container so over here we will provide
785:31 - container class and then followed by the
785:33 - space character and Then followed by the
785:35 - diff tag which means whatever diff tags
785:38 - are present inside the container will
785:40 - have these CSS properties that we are
785:42 - going to Define so guys first of all let
785:44 - us have certain background color over
785:46 - here so let's say we provide the
785:47 - background color of yellow in this case
785:50 - and also we will provide the padding of
785:52 - 10 pixels over here let me just save
785:54 - this file now and try reloading this
785:56 - page one again on the browser so as you
785:58 - can see we have the yellow background
786:01 - color for all the diff tags inside this
786:03 - container grid layout and all the diff
786:05 - tags currently are display played on the
786:08 - new lines over here now guys let us say
786:10 - we want to arrange all these items into
786:12 - three rows and three columns just like
786:15 - how we have designed the layout over
786:17 - here so what we can do is inside the
786:19 - container class in this case we have the
786:21 - CSS property that is grid template
786:24 - columns and then guys inside this grid
786:26 - template columns CSS property we can
786:29 - Define how many number of columns we
786:31 - want inside our grid layout so guys by
786:33 - default it is just having one column
786:35 - over here and we are supposed to provide
786:37 - the width of all the columns which are
786:39 - separated by the space character so guys
786:41 - let's say we want the width to be set
786:44 - automatically by the browser so simply
786:46 - we can provide the auto keyword now this
786:49 - means only one column will be present so
786:51 - let me just save this file now to show
786:53 - how it looks like and reload this page
786:55 - on the browser as you can see there is
786:57 - no change right now that's because we
786:59 - are telling the grid layout to have only
787:01 - one column over here in order to have
787:04 - multiple columns we need to provide the
787:06 - space character and provide the second
787:08 - parameter as well you can provide any
787:10 - width in terms of pixels or any other
787:12 - length measurement over here we are
787:14 - setting it as Auto in this case so
787:17 - basically this is the two column grid
787:19 - layout since we have provided Auto
787:21 - keyword twice over here let me just save
787:23 - this file now and try reloading this
787:25 - page once again on the browser so now if
787:27 - you can see the first div element that
787:30 - is having one is displayed over here and
787:32 - then we have the second column in this
787:34 - case now guys in order to identify these
787:36 - two columns colums over here let us
787:38 - provide certain column Gap like we have
787:41 - seen in our design these are nothing but
787:43 - the column gaps in between the columns
787:45 - so how we can do that so again over here
787:48 - we can provide the column Gap CSS
787:50 - property so as you can see this is the
787:52 - column Gap CSS property and let's say we
787:55 - want to provide the gap of 20 pixels
787:57 - over here let me just save this file now
787:59 - and try reloading this page once again
788:01 - on the browser so as you can see we have
788:03 - provided the column gap of 20 pixels in
788:06 - this case and that is help helping us in
788:08 - order to segregate The Columns over here
788:10 - similarly we can divide the rows as well
788:13 - so in this case we can also provide the
788:15 - row Gap CSS property so this is the
788:18 - property that we can use and we can
788:19 - provide 20 pixels over here so let me
788:22 - just save this file now and try
788:23 - reloading this page so as you can see in
788:26 - between the rows we are getting the gaps
788:28 - over here and this is how we can create
788:30 - the grid layout and also provide the
788:33 - column Gap and the row Gap over here now
788:35 - guys apart from this if you want to
788:37 - increase the number of columns then what
788:39 - you have to do is simply inside the grid
788:41 - template columns you can provide the
788:43 - third parameter which means another
788:46 - column will be added over here and the
788:48 - existing data will be adjusted
788:50 - accordingly so let me just save this
788:52 - file now and try reloading this page
788:54 - once again on the browser so as you can
788:56 - see now we are having the three columns
788:59 - and the three rows grid layout over here
789:01 - as per our requirement and this is the
789:03 - same design that we had drawn over here
789:05 - on the sketch pad so guys in this way
789:08 - you can have the grid layout with the
789:10 - help of the display equal to grid and
789:12 - then using the grid template columns CSS
789:15 - property and also providing the column
789:17 - Gap and the row Gap over here now guys
789:19 - we can also provide certain other
789:21 - properties let's say if we want to
789:23 - Center this text inside the div element
789:26 - that is the child element inside the
789:27 - container so what we can do is simply we
789:30 - can provide the text align it is equal
789:32 - to Center over here let me just reload
789:34 - this page so as you can see all the text
789:36 - are now aligned as at the center of the
789:38 - diff tag we can also have the fourth
789:40 - column over here so what we will do is
789:43 - let's say we want the fourth column to
789:44 - be small let's say we want the width of
789:46 - the fourth column to be 20 pixels over
789:48 - here so simply after the space character
789:51 - instead of providing the auto key word
789:53 - we will provide the 20 pixels as the
789:56 - width of the fourth column over here let
789:58 - me just save this file now and try
790:00 - reloading this page once again on the
790:02 - browser so as you can see the fourth
790:04 - column is now added and it is only
790:06 - having 20 pixel as the width of that
790:08 - particular column and the other columns
790:11 - are taking the remaining space
790:13 - automatically that's because we have
790:14 - provided the auto keyword over here
790:17 - let's say we want the second column to
790:19 - have the width of 100 pixels so simply
790:21 - instead of having the auto keyword we
790:23 - will provide the length as 100 pixels
790:25 - over here let me increase the width of
790:27 - fourth column to 40 pixels as well since
790:30 - it is very small right now and now when
790:32 - we reload the page as you can see now
790:34 - this is 100 pixels wide and then This is
790:36 - 40 pixels wide over here and the first
790:39 - and the third column are automatically
790:41 - taking the width as per the keyword that
790:43 - we have provided inside the grid
790:44 - template columns over here so guys in
790:47 - this way you can Define the different
790:48 - CSS properties as far as grid layout is
790:51 - concerned so far we have seen how we can
790:53 - use the grid value for the display CSS
790:56 - property we have also seen how we can
790:58 - Define the grid layout with the help of
791:00 - grid template columns which will Define
791:02 - the number of columns over here and then
791:04 - apart from this we have also seen the
791:06 - column Gap Gap and the row Gap in this
791:08 - case now guys there is a shorthand
791:10 - method that you can use for the column
791:12 - Gap and the row Gap over here so instead
791:15 - of having 20 pixels for both the CSS
791:17 - properties simply you can provide the
791:20 - Gap CSS property over here so guys first
791:22 - of all you need to provide the row Gap
791:24 - in this case so let's say we provide 20
791:26 - pixels as the row Gap and this time let
791:28 - us say we want to increase the column
791:30 - Gap so we provide 30 pixels as column
791:33 - Gap so guys first of all the first
791:35 - parameter that is taken by the Gap CSS
791:37 - property is the row Gap over here and
791:40 - the second parameter is the column Gap
791:42 - let me just save this file now and try
791:44 - reloading this page you will notice that
791:46 - the row Gap will be same but the column
791:48 - Gap will be increased now so when we
791:50 - reload this page as you can see this
791:52 - column Gap is 30 pixels wide and the row
791:54 - Gap is 20 pixels wide over here so guys
791:57 - you can provide the required gap between
791:59 - the items of the grid layout as per your
792:02 - requirements apart from this let us now
792:05 - understand what is the meaning of the
792:06 - grid line now guys since we have
792:08 - provided all these elements inside the
792:11 - grid layout all these diff tags are
792:13 - called as the grid items over here and
792:16 - then guys on the extreme left there's a
792:18 - grid line in this case so if I show you
792:20 - back again in the sketch pad so before
792:23 - this column 1 there is a virtual
792:25 - vertical line over here which is line
792:27 - one in this case and then between column
792:29 - 1 and column 2 there is a second line
792:32 - over here and then we have the third
792:34 - line in this case and then there is a
792:35 - fourth line over here similarly we have
792:38 - the lines for the rows as well so over
792:40 - here we have the virtual line before Row
792:43 - one and then between Row one and row two
792:45 - we have the second line and so on there
792:47 - are lines in this case that we can use
792:50 - over here now guys how we can use these
792:52 - lines I will show you with the help of
792:54 - the other CSS properties over here so
792:57 - basically we have something called as
792:59 - grid column start and then grid column
793:01 - end so guys let's say as per your
793:03 - requirement over here on the user
793:06 - interface you want the first number to
793:08 - occupy two columns over here so guys
793:10 - currently it is occupying just one
793:12 - column that is the first column in this
793:14 - case but let's say if you want to
793:16 - increase the width in such a way that it
793:18 - should occupy two columns over here that
793:20 - is First Column and second column so we
793:22 - can simply use the grid column start and
793:25 - grid column and CSS properties so guys
793:28 - let us check that as well so over here
793:30 - what we will do is for the first element
793:32 - over here we will provide the ID that is
793:35 - one in this case and we are going to use
793:37 - this ID in the style. CSS file so over
793:40 - here we will Define the ID that is one
793:43 - with the help of the hash character and
793:45 - then we are going to use the grid column
793:47 - start over here so guys basically we
793:49 - have the grid column start and it should
793:51 - start from the first line over here so
793:54 - guys this is the significance of
793:56 - understanding the grid lines basically
793:58 - this item should start from the grid
794:00 - line one over here and it should end in
794:02 - this case after the second column which
794:04 - means the grid line two is present over
794:07 - over here between the column 1 and
794:08 - column 2 and the grid line three is
794:11 - present over here between column 2 and
794:13 - column 3 so we are supposed to provide
794:15 - the numbers from one up to three over
794:18 - here so basically the grid column start
794:21 - will start from the number one and the
794:23 - grid column end should have the value of
794:26 - three over here so that the first item
794:29 - should occupy the space between the
794:31 - column 1 and column two in this case so
794:34 - guys when we provide the end as three
794:36 - let me just save this file now and try
794:38 - reloading this page once again on the
794:39 - browser you will notice that now the
794:41 - first element is taking the span of two
794:44 - columns that is the First Column and the
794:46 - second column and the other div elements
794:48 - are adjusted accordingly and all of them
794:50 - are taking just one column so guys this
794:52 - is the way you can use the grid column
794:55 - start and grid column and CSS property
794:57 - in order to make the HTML element occupy
795:01 - multiple number of columns over here we
795:03 - also have the shorthand method for this
795:06 - so simply we can have the grid column in
795:08 - this case so guys let's say we provide
795:10 - grid column CSS property and over here
795:13 - we provide the column start as one and
795:16 - then followed by the forward slash and
795:17 - then simply we can provide the grid
795:19 - column and parameter value that is three
795:21 - over here let me just save this file now
795:23 - and try reloading this page once again
795:25 - on the browser as you can see it is now
795:27 - taking the space of two columns that is
795:29 - first and second now guys let us say we
795:31 - want to increase the width up to three
795:34 - columns over here so simply we need to
795:36 - provide the grid line number four over
795:39 - here let me just save this file now and
795:41 - try reloading this page once again on
795:42 - the browser so as you can see the first
795:45 - element is now taking the space of three
795:47 - columns that is first second and third
795:49 - by using the grid line numbers from 1 up
795:52 - to four over here so guys this is the
795:53 - second line and then we have the third
795:55 - vertical line followed by the fourth
795:57 - vertical line apart from this instead of
795:59 - providing the line numbers for the grid
796:02 - column CSS property you can also provide
796:04 - the span keyword and then we can number
796:07 - the number of columns to be used in
796:09 - order to make the dev element occupy
796:11 - those many number of columns so guys
796:13 - when we provide these pen so let's say
796:15 - we want this particular item to occupy
796:18 - only two columns over here so simply we
796:20 - provide span keyword followed by two
796:22 - columns in this case let me just save
796:24 - this file now and try reloading this
796:25 - page once again on the browser so as you
796:27 - can see the first element is now
796:29 - occupying the space of two columns over
796:32 - here so guys similarly you can use the
796:34 - grid row start and grid row end as well
796:37 - and apart from that you can also use the
796:39 - grid row CSS property as the Shand
796:41 - method so guys let us check that as well
796:44 - let's see if you want the First Column
796:46 - to have the two number of rows over here
796:49 - which means it will occupy two rows in
796:51 - this case so what we can do is simply we
796:53 - can provide the grid row over here so
796:56 - this is the CSS property that we are
796:58 - providing and then it is going from the
797:01 - first grid line up to Second and then
797:04 - the third grid line in this case so guys
797:06 - simply we can provide one followed by
797:08 - forward slash and then three over here
797:10 - so that it takes two number of rows as
797:13 - far as the first element is concerned
797:15 - let me just save this file now and try
797:17 - reloading this page once again on the
797:18 - browser as you can see now it is taking
797:21 - two number of rows as far as the
797:23 - vertical spacing is concerned we can
797:26 - also provide the span keyword over here
797:28 - but this time we have to provide the
797:30 - number two instead of three since we are
797:32 - providing the span keyword let me just
797:34 - save this file now and try reloading
797:36 - this page as you can see it is taking
797:38 - two rows over here if you want it to
797:40 - occupy three rows so simply we can
797:42 - provide span three in this case let me
797:44 - just reload this page as you can see now
797:46 - it is taking the three rows as far as
797:49 - the vertical spacing is concerned so
797:51 - guys in this way you can easily use the
797:53 - grid column or the grid row CSS
797:55 - properties based on your project
797:56 - requirement guys apart from this we also
797:59 - have some other properties that is
798:01 - justify content over here so similar to
798:03 - how we have seen in the flex layout
798:05 - model the just justify content will help
798:08 - us in order to align the items as far as
798:10 - horizontal alignment is concerned so
798:12 - guys let us check justify content with
798:14 - the help of example over here so inside
798:17 - the container class what we will do is
798:19 - let's say we have the justify content
798:21 - CSS property over here and we want all
798:23 - the elements to be present at the center
798:26 - of the container so simply we can
798:28 - provide the center value over here let
798:30 - me just save this file now and try
798:32 - reloading this page once again on the
798:34 - browser as you can see all the elements
798:36 - are now at the center of the container
798:39 - which is having the background color
798:40 - that is aqua so guys in this way you can
798:43 - simply use the justify content as well
798:45 - if you want a certain space to be in
798:47 - between all the elements as far as
798:49 - horizontal alignment is concerned you
798:51 - can provide the space between value as
798:54 - well so let me just save this file now
798:56 - and try reloading this page so as you
798:58 - can see in between all the elements
799:00 - there are equal spaces and then we have
799:02 - other values as well we can also provide
799:04 - space evenly over here so as you can see
799:07 - there's even spaces on the left and the
799:09 - right of all the div elements as far as
799:12 - horizontal spacing is concerned apart
799:14 - from this we also have the vertical
799:16 - spacing that you can use based on the
799:18 - Align content CSS property so let us
799:21 - check that as well so when we provide
799:23 - align content CSS property let's say we
799:25 - want all the elements to be at the
799:27 - center as far as vertical alignment is
799:29 - concerned so we provide the center value
799:32 - let me just reload this page once again
799:33 - on the browser so all the elements are
799:35 - currently at the Center as far as
799:37 - vertical alignment is concerned we can
799:40 - provide some other values as well so
799:41 - let's say we provide the start value and
799:43 - reload this page so as you can see there
799:45 - is no change right now so what we will
799:47 - do is let us increase the height of this
799:49 - diff container over here so simply we
799:52 - will provide the height value and then
799:54 - let's say we provide 300 pixels as the
799:56 - value of the container height so as you
799:59 - can see the height has been increased
800:01 - now and since we have provided align
800:03 - content at the start all the diff tags
800:06 - are at the start as far as the vertical
800:08 - alignment is concerned which means they
800:10 - are at the top of the container let's
800:12 - say we want them to be at the center of
800:14 - the container so simply we can provide
800:16 - the center value let me just reload this
800:18 - page as you can see now the div elements
800:21 - are present at the center of this div
800:23 - container as far as the vertical
800:26 - alignment is concerned and let us get
800:28 - them all at the end of the container
800:30 - which means at the bottom of the
800:31 - container so when we reload this page as
800:34 - you can see all of them are at the
800:36 - bottom which means they are aligned at
800:38 - the bottom of this particular container
800:41 - tag so guys in this way you can simply
800:43 - use the justify content and the Align
800:45 - content over here in order to align the
800:48 - items inside the grid layout now guys
800:50 - apart from this we have something called
800:52 - as grid area as well which is a
800:54 - shorthand method in order to use the
800:57 - grid row and the grid column over here
800:59 - so guys let us check the example of this
801:01 - as well so what we will do is simply I'm
801:03 - going to remove the grid row and the
801:05 - grid column that we had used previously
801:08 - for the first div tag over here let me
801:10 - just reload this page once again on the
801:12 - browser also we will remove the height
801:15 - of the container over here so as you can
801:17 - see this is the container which is
801:19 - having the diff Tex inside the grid
801:21 - layout and then guys apart from this we
801:23 - will also make the width of all the
801:25 - columns as Auto in this case so let me
801:27 - just remove this 100 pixels and make it
801:30 - as Auto over here and also the 40 pixels
801:33 - as Auto in this case so that all the
801:35 - columns are now having the equal width
801:37 - over here now because apart from this we
801:39 - will also remove the justify and the
801:40 - Align content in this case so that all
801:43 - the diff tags take up the available
801:45 - space on the left and the right as well
801:47 - so as you can see this is a simple grid
801:49 - layout inside the container now guys by
801:51 - using the grid area we can Define the
801:54 - grid row and the grid column start and
801:56 - the end CSS property so guys let us
801:58 - check that as well so what we will do is
802:00 - for the first element let us say we want
802:03 - this element to have two number of rows
802:05 - and two number number of columns so
802:07 - basically this much area must be
802:09 - occupied by the first row so simply we
802:12 - can provide the grid area shorthand CSS
802:15 - property over here and the first value
802:18 - that is expected inside the grid area is
802:20 - the grid start row so in this case we
802:23 - have the start row as one and then
802:25 - followed by the forward slash and then
802:27 - it is expecting the grid column start
802:29 - which is again the First Column over
802:31 - here so again we provide one over here
802:34 - apart from this we have the slash
802:36 - character
802:37 - and then it is expecting the grid row
802:38 - end which means it should end at the
802:41 - third line over here as far as the row
802:43 - line is concern so this is the first
802:45 - line second line and then this is the
802:47 - third line over here so simply we can
802:49 - provide three in this case followed by
802:52 - the Slash and then we can provide the
802:54 - column line as well which is in this
802:57 - case we want the first element to be
802:59 - over here so basically this is first
803:01 - second and the third line as far as the
803:04 - column line is concerned so we have the
803:06 - G grid column end as well let me just
803:08 - save this file now and try reloading
803:10 - this page once again on the browser so
803:12 - as you can see the first element is now
803:14 - taking the space of two rows and two
803:17 - columns respectively so guys in this way
803:19 - you can easily use the grid area as well
803:22 - now guys apart from this this grid area
803:25 - will be useful in order to order the
803:28 - elements also so basically let's say we
803:30 - want this fifth column to be present at
803:33 - this particular position where the
803:35 - element two is present end so what we
803:37 - can do is first of all for the element
803:39 - five we are going to define the ID that
803:41 - is five over here so simply we have
803:43 - defined the ID of five and then what we
803:46 - will do is simply we will provide hash
803:48 - character and then the ID that is five
803:50 - over here and we are supposed to define
803:53 - the grid area in this case so that we
803:55 - can order the elements inside the grid
803:58 - layout so guys it is not necessary that
804:00 - whatever sequence that you have provided
804:02 - inside the HTML elements with that same
804:05 - sequence all the items will must be
804:06 - displayed but you can order them based
804:08 - on your project requirements over here
804:10 - so we want this particular Fifth Element
804:12 - to be present at this second position
804:15 - with the help of the CSS property that
804:17 - is grid area in this case so guys what
804:19 - we have to do is we need to identify the
804:22 - row line and the column line for this
804:24 - particular position so the row line is
804:27 - starting from the one and it is ending
804:29 - at two over here so let us Define that
804:31 - first of all so we start from the row
804:33 - line that is one over here and then we
804:36 - we have to end it at second row line in
804:38 - this case and then guys we also have to
804:40 - provide the column start and the column
804:42 - end so this is column line one and then
804:44 - followed by column line two over here
804:47 - and then we have three in this case so
804:49 - we should start from the column line
804:51 - three and then end to the column line
804:53 - four over here so when we say three that
804:55 - is the column start and Then followed by
804:58 - four as the fourth parameter over here
805:00 - so guys this is the grid area that we
805:02 - have defined so using this we can get
805:04 - the Fifth Element at this particular
805:07 - position since we have provided the grid
805:09 - area CSS property so let me just save
805:12 - this file now and try reloading this
805:13 - page once again on the browser as you
805:15 - can see this Fifth Element is now
805:17 - getting displayed at this position and
805:19 - then all the elements have adjusted
805:21 - accordingly based on the grid layout so
805:24 - guys in this way you can easily use the
805:25 - grid area CSS property as well so that
805:28 - you can order the HTML elements based on
805:31 - your project requirements inside the
805:33 - grid layout so Guys these are some of
805:34 - the CSS properties that you can use as
805:36 - far as the grid layout in CSS is
805:38 - concerned comment in the comment section
805:40 - below whether you have learned something
805:42 - out of this video please make sure that
805:44 - you like this video so that it reaches
805:46 - to more people and subscribe to this
805:47 - channel so that you get the
805:49 - notifications on upcoming videos as well
805:51 - the next video that we are going to talk
805:53 - about is an exercise on grid layout in
805:55 - CSS in order to make the sidebar and the
805:58 - content so stay tuned so now we will
806:02 - work on an exercise on GD layout in CSS
806:05 - and we will be making a a sidebar and
806:07 - the content with the help of the grid
806:09 - layout so guys we will design a sidebar
806:12 - and content area on left and right
806:14 - sections by using the grid layout in CSS
806:17 - and apart from this we will also add the
806:19 - header and the footer sections so guys
806:21 - let us move to the VSS code over here
806:23 - and simply I'm going to remove the
806:24 - previous lines of code inside the HTML
806:27 - and the CSS files that we had written
806:29 - previously now guys what we will do is
806:31 - simply we will have the container diff
806:33 - tag over here so we have the diff tag
806:35 - with the class container and then inside
806:37 - this we will have the sidebar and the
806:40 - content areas so basically we are going
806:43 - to have the class name that is sidebar
806:45 - over here simply I'm going to have the
806:47 - content that is sidebar for this diff
806:49 - tag and then we are going to also have
806:51 - the content class which is another diff
806:54 - tag over here so guys basically we have
806:56 - the content keyword in this case let me
806:58 - just save this file now and try
807:00 - reloading this page on the browser so as
807:02 - you can see these are the two diff tags
807:04 - that we are starting from scratch and we
807:06 - are going to have the sidebar on the
807:08 - left hand side of the screen and the
807:10 - content on the right hand side so guys
807:12 - what we have to do is we need to make
807:13 - this container class as a grid layout
807:16 - container so simply I'm going to copy
807:18 - this container class over here and then
807:21 - inside the style.css file we are going
807:23 - to Define certain CSS properties so
807:26 - first of all we have the display is
807:27 - equal to grid and then apart from this
807:29 - we will also have certain background
807:31 - color so let's say we have the
807:33 - background color of yellow and also we
807:35 - will provide some certain padding so
807:37 - let's say we have 20 pixels of padding
807:39 - over here let me just save this file now
807:41 - and try reloading this page once again
807:43 - on the browser so as you can see this is
807:45 - the container that is having the two div
807:47 - Texs that is the sidebar and the content
807:49 - now guys we need to make two columns out
807:51 - of this container on First Column we
807:53 - will have the sidebar and then inside
807:55 - the second column we will have the
807:56 - content so guys what we will do is
807:58 - simply we will use the another CSS
808:01 - property that is grid template columns
808:03 - which helps us in order to provide the
808:05 - number of columns over here so since we
808:07 - have provided the two values in this
808:09 - case with the help of the auto keywords
808:11 - there will be two columns that will be
808:13 - created and then guys apart from this we
808:15 - also want certain column Gap in between
808:18 - both the columns so we will see a column
808:20 - gap of 20 pixels over here so let me
808:22 - just save this file now and try
808:24 - reloading this page once again on the
808:26 - browser so as you can see the sidebar
808:28 - and the content are now getting
808:29 - displayed horizontally in this case now
808:31 - guys we will also have certain CSS
808:33 - properties to both these diff tags so
808:35 - that we can identify and separate them
808:38 - as far as the grid container is
808:40 - concerned so what we will do is inside
808:42 - the container class we will provide the
808:44 - CSS property to div tags that are having
808:46 - the sidebar and the content classes
808:49 - respectively so simply we are going to
808:51 - use the class names over here that is
808:53 - the sidebar and the content and we are
808:55 - going to have certain common CSS
808:57 - properties over here so first of all we
808:59 - will have the background color so let's
809:01 - see we have the background color as aqua
809:03 - color over here and also we will provide
809:05 - the pad of 10 pixels in this case let me
809:07 - just save this file now and try
809:09 - reloading this page so as you can see we
809:11 - can now see the two columns over here
809:13 - that is sidebar and content in this case
809:16 - and also we are having the column gap of
809:18 - 20 pixels over here now guys what we
809:20 - will do is we will decrease the width of
809:22 - the sidebar and increase the width of
809:24 - the content since a sidebar takes only
809:26 - around 20 to 25% of the screen width
809:30 - over here so what we have to do is
809:31 - simply we will provide the 200 pixels as
809:34 - the size of the first column over here
809:36 - instead of the auto keyword so let me
809:38 - just save this file now and try
809:40 - reloading this page once again on the
809:41 - browser as you can see the width of the
809:43 - sidebar is now reduced in this case now
809:46 - guys apart from this we also want to add
809:48 - the header and footer sections over here
809:50 - so simply we are going to add two more
809:53 - diff tags in this case and then we are
809:55 - going to have the class names as header
809:57 - and footer respectively so guys over
809:59 - here we have the header and footer in
810:01 - this case and then inside this diff tag
810:03 - that is the header diff tag we will have
810:05 - the H1 tag over here and we will say
810:08 - this is a heading and also for the foter
810:10 - tag we are going to have the statement
810:12 - that this is a pho section over here so
810:16 - guys we have this is a heading section
810:18 - and we have this is a pho section inside
810:20 - the header and the photo classes
810:22 - respectively now guys let me just save
810:24 - this file now and let us see how it
810:26 - looks like on the UI so when we reload
810:28 - this page as you can see this is a
810:30 - heading is now getting displayed over
810:31 - here on the first row and the sidebar is
810:34 - also getting displayed on the first row
810:35 - and and the second column so what we
810:37 - have to do is we need to define the grid
810:39 - column start and grid column end over
810:42 - here so that this particular heading
810:44 - takes the entire space that is from left
810:46 - to right over here so inside the style.
810:49 - CSS file for the header and the footer
810:51 - classes we are going to have certain
810:53 - common CSS properties so over here we
810:56 - have defined the header and the footer
810:58 - classes in this case so what we have to
811:00 - do is we need to make the grid column
811:02 - start that is this particular CSS
811:05 - property start from the first line over
811:07 - here and then it should end at the third
811:10 - line why so because we have two columns
811:12 - over here or we can also say that the
811:14 - header and the footer diff Tex must
811:17 - occupy the space of the two columns so
811:20 - we have to define the grid column end as
811:22 - well so over here we provide the grid
811:24 - column end in this case and then we
811:26 - provide the line number three over here
811:28 - let me just save this file now and try
811:30 - reloading this page so as you can see we
811:32 - have this is heading section and then we
811:34 - have this is phot section over here
811:36 - apart from this let us also provide
811:38 - certain padding at the background color
811:41 - over here so let's say we have the
811:42 - padding of 10 pixels again and the
811:44 - background color as well so let's say we
811:46 - use this chart reuse background color
811:48 - over here let me just save this file now
811:50 - and try reloading this page once again
811:52 - on the browser as you can see we have
811:54 - this is heading section and then we have
811:56 - this is footer section over here now
811:58 - guys there is one problem in this case
812:00 - we have three number of rows that is
812:01 - first row is over here then the second
812:03 - row is sidebar and the content and the
812:05 - third row is the photo section we need
812:07 - to have certain Gap in between all the
812:09 - rows so what we can do is similar to
812:11 - column Gap we can have the row Gap as
812:13 - well and this time let's say we have 10
812:16 - pixels of row Gap let me just save this
812:18 - file now and try reloading this page so
812:20 - as you can see these are the gaps that
812:21 - we have provided over here because apart
812:23 - from this we also want to align this
812:25 - text at the center of the div tag so
812:28 - simply we are going to use the text
812:30 - align CSS property and the value as
812:32 - Center so when we reload this page as
812:34 - you can see the header and the photo
812:36 - section are now having the text at the
812:38 - center of the diff tags over here so
812:40 - guys this is the way that we have
812:42 - designed our sidebar and the content
812:44 - over here let us have certain content in
812:46 - the form of links inside the sidebar so
812:49 - what we can do is simply over here in
812:51 - the HTML file instead of having the
812:53 - sidebar over here we will have the
812:55 - unordered list in this case and inside
812:57 - this we will have the list items over
812:59 - here and inside the list item we will
813:01 - have the a tags in this case so guys let
813:04 - us Define certain links in inside the
813:06 - sidebar so we have these many links over
813:08 - here we will rename the content inside
813:11 - the links so first of all we have the
813:13 - home link in this case and let's say we
813:15 - have the blog and Then followed by
813:17 - videos and then let's say we have
813:19 - certain programming languages so first
813:21 - of all we have Java and then let's say
813:23 - we have HTML and of course we are going
813:26 - through the CSS tutorial so over here we
813:28 - have the CSS link as well so guys if you
813:31 - new to this channel we are making a lot
813:33 - of CSS tutorial videos which you can
813:35 - find in the playlist that I have given
813:37 - in the description section so you can go
813:39 - through all the videos as well if you
813:40 - want to practice with the help of
813:42 - examples and please make sure that you
813:44 - subscribe to this YouTube channel that
813:45 - is programming for beginners so that you
813:47 - get the notifications on the upcoming
813:49 - videos as well so guys over here we have
813:51 - defin certain links inside the unordered
813:54 - list let me just save this file now and
813:56 - try reloading this page once again on
813:57 - the browser so as you can see we have
813:59 - all these list items inside the sidebar
814:02 - over here that you can navigate to and
814:04 - then guys inside the content we can have
814:06 - certain random textt over here so
814:08 - instead of content what we will do is we
814:10 - will use the lurm M abbreviation over
814:13 - here so basically we are going to Define
814:15 - certain random text in this case let me
814:18 - just save this file now and try
814:19 - reloading this page once again on the
814:21 - browser so as you can see we have the
814:23 - random text that is getting generated
814:24 - over here so guys in this way we have
814:26 - easily designed our header section and
814:28 - the footer section as well you can have
814:30 - your own CSS properties for these header
814:33 - and the photo sections respectively and
814:35 - apart from this on the left hand side we
814:37 - have the sidebar content which is having
814:39 - the list of links in this case and we
814:41 - also have the content section over here
814:44 - we can also have the right hand side
814:46 - sidebar over here of let's say some of
814:48 - the popular videos or the popular blog
814:50 - post in this case so you can simply
814:52 - provide the third column in this case
814:54 - which should be present only in this
814:56 - second row over here as per your
814:57 - requirements so guys I'll leave this up
814:59 - to you as a homework for you so that you
815:01 - can practice on your own and add a right
815:03 - hand side sidebar that might have
815:05 - certain popular videos or the blog post
815:08 - which users can navigate to so guys
815:10 - comment in the comment section below
815:11 - whether you have learned something out
815:13 - of this video please make sure that you
815:14 - like this video so that it reaches to
815:16 - more people and subscribe to this
815:18 - channel so that you get the
815:19 - notifications on upcoming videos as well
815:21 - the next video that we are going to talk
815:23 - about is how to center the HTML element
815:26 - inside the dev element using CSS so stay
815:29 - tuned so now we will see how to center
815:32 - the HTML element inside the diff tag in
815:35 - C CSS so guys basically one of the
815:37 - problems of centering the HTML elements
815:40 - inside the div elements can be solved by
815:42 - using the flexbox layout and we are
815:44 - going to check with the help of example
815:46 - as well so let us move to the vs code
815:48 - over here and simply I'm going to remove
815:50 - the previous lines of code that we had
815:52 - return in the HTML and the CSS files so
815:55 - guys over here first of all we are going
815:57 - to define the diff tag with the class
815:59 - container in this case and then inside
816:01 - this we are going to have a simple diff
816:03 - tag that will say this is a simple diff
816:07 - tag so guys we have a very simple
816:09 - statement over here inside the container
816:11 - class let me just save this file now and
816:13 - try reloading this page on the browser
816:15 - so as you can see this is a simple diff
816:17 - tag is getting displayed over here now
816:19 - guys let us have certain background
816:21 - color for the container class and also
816:23 - the diff tag that is the child tag over
816:25 - here so we are going to copy this class
816:28 - name and then inside the style. CSS file
816:31 - we are going to provide the background
816:33 - color over here so let's say we have the
816:35 - yellow yellow color is the background
816:36 - color apart from this we will also
816:38 - provide the padding of let's say 20
816:40 - pixels in this case and then guys for
816:42 - the child tag over here inside the
816:44 - container class we are going to define
816:46 - the diff tag in this case and then we
816:49 - will say the background color of let's
816:51 - say aqua color over here and again we
816:53 - are going to provide the padding of
816:55 - let's say 10 pixels over here let me
816:57 - just save this file now and try
816:59 - reloading this page once again on the
817:00 - browser so as you can see the container
817:03 - tag that is having the yellow background
817:05 - color is going from left to right and it
817:07 - is taking the entire width of the screen
817:09 - over here apart from this the child tag
817:12 - that is having the aqua background color
817:14 - is also going from left to right and it
817:16 - is taking the entire width of the screen
817:18 - now guys what we will do is we will
817:20 - reduce the width of this child tag over
817:22 - here and we will set it only up to this
817:25 - required width that is required by the
817:27 - content of this diff tag so inside this
817:30 - diff tag that is the child tag over here
817:33 - simply we are going to provide the
817:34 - display property and we will say inline
817:37 - block as the value so let me just save
817:39 - this file now and try reloading this
817:40 - page once again on the browser as you
817:42 - can see only the required withd is now
817:44 - being taken by this particular diff tag
817:47 - that's because the default value of the
817:48 - diff tag as far as display CSS property
817:51 - is the block value so when we say block
817:54 - which means it is going to take the
817:55 - entire width that is from left to right
817:58 - over here but we are limiting that width
818:00 - by using the inline block value for the
818:02 - display property now guys what is the
818:04 - scenario over here is we we want to
818:06 - Center align this particular diff tag as
818:08 - far as the container is concerned so we
818:11 - need to get this child diff tag at the
818:13 - center of the container let us have
818:15 - another situation over here we will also
818:17 - have the height of this container so
818:19 - let's say we provide the height as 300
818:21 - pixels let me just save this file now
818:23 - and try reloading this page so as you
818:25 - can see we have the height of the
818:26 - container is 300 pixels over here so how
818:29 - do we get this particular diff tag at
818:31 - the center of the container somewhere
818:33 - over here so let us try that so what we
818:36 - will do is first of all let us provide
818:38 - the text align CSS property we will
818:40 - check out different scenarios how we can
818:43 - achieve our task of getting the child
818:45 - diff tag at the center of the container
818:47 - so when we say text align equal to
818:49 - Center let me just save this file now
818:51 - and try reloading this page once again
818:52 - on the browser so as you can see now
818:54 - this diff tag is present at the center
818:57 - as far as the horizontal alignment is
818:59 - concerned but how do we get it at the
819:01 - center as far as the vertical alignment
819:03 - is concerned another CS property that we
819:06 - can use is using the line height over
819:08 - here and we can set the value equal to
819:11 - the height of the container that we have
819:12 - set over here so simply we will set the
819:14 - value as 300 pixels so that the line
819:17 - height of the container is exactly the
819:20 - same as the height of the container over
819:22 - here so let me just save this file now
819:24 - and try reloading this page once again
819:25 - on the browser so as you can see we have
819:27 - provided the line height of 300 pixels
819:30 - the text is also coming at the center of
819:32 - the container now but we can see that
819:34 - there is a background ground color that
819:36 - is running from the top to the bottom of
819:38 - the container which is not required in
819:40 - this case so guys this is a limitation
819:42 - of using the line height over here along
819:44 - with it we have also used the text align
819:46 - CSS property so we don't want it in this
819:49 - way so let me just comment out these two
819:51 - lines of code over here so now we are
819:53 - back to our original position that is
819:55 - top left over here so guys we can simply
819:57 - use the flex boox layout in order to
820:00 - Center align the diff tag over here so
820:02 - let us try that so for the container
820:04 - class what we are going to do is simply
820:06 - we will set the display property as Flex
820:09 - over here now guys since we have set the
820:11 - display property as Flex all the child
820:13 - items inside the container will be the
820:16 - flex items now and they will be running
820:18 - from left to right by default because
820:21 - the flex direction is row by default for
820:24 - any of the flex container so let me just
820:26 - save this file now and try reloading
820:28 - this page once again on the browser so
820:30 - as you can see the background color is
820:32 - now going from top to bottom over here
820:34 - in this case let provide another CSS
820:36 - property that is justify content for
820:38 - this Flex container which will Define
820:40 - the horizontal alignment as far as Flex
820:43 - items is concerned so guys we will set
820:45 - the value as Center because we want the
820:47 - flex item that is this particular diff
820:50 - tag at the center as far as horizontal
820:52 - alignment is concerned so when we reload
820:55 - this page now as you can see the flex
820:57 - item is now at the center as far as the
820:59 - horizontal alignment is concerned now as
821:01 - far as vertical alignment is concerned
821:04 - we can use the alignment content CSS
821:06 - property which will help us in order to
821:08 - align the flex items across the cross
821:11 - AIS over here so guys since the flex
821:13 - direction is row by default the justify
821:15 - content will help us in order to align
821:18 - the items on the main axis which is
821:20 - going from left to right over here and
821:22 - the Align content will help us in order
821:25 - to align the items across the cross AIS
821:28 - which is going from top to bottom or the
821:30 - vertical AIS over here so we have just
821:32 - set the value as center for the Align
821:35 - content over here let me just save this
821:37 - file now and try reloading this page
821:38 - once again on the browser so as you can
821:40 - see there is no change right now that's
821:42 - because we have done a mistake instead
821:44 - of using the Align content it is align
821:46 - items that we must use so because
821:48 - basically align items will help us in
821:50 - order to align the flex items as far as
821:53 - the cross AIS is concerned in which case
821:56 - it is the vertical AIS over here so when
821:58 - we save this file now and try reloading
822:00 - this page once again on the browser so
822:02 - as you can see now we have perfectly
822:04 - aligned the diff tag at the center of
822:06 - the container and this is the way that
822:08 - you can Center align the HTML element
822:10 - inside the container by using the
822:12 - flexbox layout over here so Guys these
822:15 - are the three important CSS properties
822:17 - that you must use that is display is
822:18 - equal to flex and then justify content
822:21 - is equal to Center and the Align items
822:23 - is equal to Center over here inside the
822:26 - flex container in this case so comment
822:28 - in the comment section below whether you
822:30 - have learned something out of this video
822:31 - please make sure that you like this
822:33 - video so that it reaches to more people
822:35 - And subscribe to this channel so that
822:37 - you get the notifications on upcoming
822:38 - videos as well the next video that we
822:40 - are going to talk about is optional and
822:42 - required Pudo class in CSS so stay tuned
822:47 - so now we will see optional and required
822:49 - Pudo class in CSS so guys basically we
822:52 - will see how to style the HTML form
822:55 - elements using the optional and the
822:57 - required pseudo class so let us move to
822:59 - the vs code over here and simply I'm
823:01 - going to remove the previous lines that
823:03 - we had written in the HTML and the CSS
823:06 - files over here now guys what we will do
823:08 - is first of all we will Define the diff
823:10 - tag with the class container inside
823:12 - which we are going to have the form over
823:14 - here so before having the form we will
823:16 - have the header tag that is the h2 tag
823:19 - and we will say F below form in this
823:21 - case as a heading now guys after this we
823:24 - are going to have the form tag over here
823:26 - and we will have the ID as form in this
823:28 - case and simply we are going to have
823:30 - three Fields over here first of all we
823:32 - will have the username field so we will
823:35 - have input colon text over here so
823:37 - basically it is the input tag with the
823:39 - type text in this case and we will have
823:42 - the name as username and ID as the
823:45 - username value apart from this we will
823:47 - also have the placeholder attribute and
823:50 - we will say enter username so guys
823:52 - basically this is the text that will be
823:54 - displayed by default as a placeholder
823:57 - and then we will make this field as
823:59 - required so that user has to feel this
824:02 - particular field in this case and after
824:04 - this we we are going to have certain
824:06 - line braks over here so that the next
824:08 - input is displayed on the next line so
824:11 - I'm going to copy paste this line of
824:13 - code and this time we are going to have
824:15 - password as the text field and again we
824:17 - are going to have the ID as password and
824:19 - we will say enter password over here and
824:22 - it is again a required field in this
824:24 - case and instead of having the type
824:26 - equal to text we will say the type is
824:28 - equal to password over here and then
824:30 - guys apart from this we will have the
824:32 - email field as well so again we will
824:34 - have the type as email over here and we
824:36 - will set the name and the ID as the
824:39 - email values and we will say enter email
824:42 - in this case which is not required over
824:44 - here so we will remove the required
824:47 - attribute from this particular input tag
824:49 - so guys basically we are going to
824:51 - provide the CSS properties with the help
824:53 - of this required or the optional
824:56 - attribute over here so whatever fields
824:58 - we have marked as required will be
825:00 - provided a set of CSS properties and the
825:02 - other fields which are by default
825:05 - optional which means user is not
825:07 - required to provide the data inside
825:09 - those optional field such as the email
825:11 - field over here those will be having the
825:13 - set of other CSS properties and then
825:16 - apart from this we will also have two
825:18 - buttons over here the first button will
825:20 - be the submit button in this case so we
825:22 - will have the input type is equal to
825:24 - submit and the value will be submit over
825:26 - here and also we will set the ID as
825:29 - submit in this case and then apart from
825:31 - this we will also have another button
825:33 - which will have the value as clear over
825:35 - here so guys this is simply for the
825:37 - displaying purpose we are going to have
825:39 - two buttons that is submit and clear
825:41 - inside the form so let me just save this
825:43 - file now and try reloading this page on
825:46 - the browser so as you can see this is
825:48 - the way the form is displayed over here
825:50 - we have the heading first of all Feld
825:52 - below form over here so we need to
825:54 - change this keyword to below form in
825:57 - this case so we have Feld below form as
825:59 - the header over here and then we have
826:01 - the three fields that is username
826:03 - password and the email Fields over here
826:05 - let us have certain background color for
826:07 - the container class as well in this case
826:10 - so what we will do is we will copy this
826:12 - class name over here and inside the
826:14 - style. CSS file we will have the
826:16 - container class name and what we will do
826:18 - is let's say we have the background
826:19 - color as aqua color over here also we
826:22 - will provide the padding of let's say 20
826:24 - pixels in this case let me just save
826:26 - this file now and try reloading this
826:28 - page so as you can see this is the
826:29 - container that is having the background
826:31 - color over here now guys we will reduce
826:33 - the width of the container to the width
826:35 - of these particular text boxes so what
826:38 - we can do is simply we can set the width
826:40 - it is equal to Min content over here let
826:43 - me just save this file now and try
826:44 - reloading this page so as you can see
826:46 - now the width is set in such a way that
826:48 - it is only taking up the required space
826:50 - over here apart from this we also want
826:52 - to Center align this particular
826:55 - container so what we will do is simply
826:57 - we can provide margin it is equal to
826:59 - Auto over here so as far as horizontal
827:01 - alignment is concerned we are getting
827:03 - the diff tag at the center of the screen
827:06 - over here now guys how we can provide
827:07 - the CSS properties to these required and
827:10 - the optional attributes that are present
827:13 - inside the form so simply what we have
827:15 - to do is we have to provide the input
827:17 - tag and then we can use the Cudo class
827:19 - over here so let's say first of all we
827:21 - want to provide certain CSS properties
827:23 - to these required fields at a username
827:26 - and password so over here inside the
827:28 - style. CSS file we will say input tag
827:31 - followed by colon and then simply we can
827:34 - say the re ired keyword so guys this is
827:36 - the way that we can use the Cudo classes
827:38 - over here so basically we need to
827:40 - provide the single colon and then the
827:42 - name of the sudo class so in this case
827:44 - it is the required sudo class that we
827:47 - are using and whatever CSS properties
827:49 - that we will be including inside this
827:51 - required seudo class will be applied to
827:54 - all those fields that are marked as
827:56 - required over here inside the form so
827:58 - guys let us check that as well so what
828:00 - we will do is first of all we will
828:02 - provide the padding of five pixels over
828:05 - here let me just save this file now you
828:06 - will notice some kind of spacing inside
828:09 - these username and the password text
828:11 - boxes so when we reload this page as you
828:13 - can see there is extra space that is
828:15 - added over here apart from this we will
828:18 - also provide certain background color so
828:20 - that we can identify the changes that
828:22 - are happening inside those two text
828:24 - boxes that is username and password so
828:26 - what we will do is we will set the
828:28 - background color as green over here and
828:30 - let us change the green color to some
828:33 - lighter version of green color over over
828:34 - here so we have this very light green
828:37 - color in this case with the help of the
828:38 - rgp values let me just save this file
828:41 - now and try reloading this page once
828:42 - again on the browser so as you can see
828:44 - we have the light green background color
828:46 - for these required text boxes over here
828:49 - that is username and password apart from
828:51 - this we can also have some more CSS
828:53 - properties that is let's say we have the
828:55 - Border radius of 5 pixels over here so
828:57 - basically the corners of these text
829:00 - boxes will be having the rounded corner
829:02 - so this is the 5 pixels border radius
829:04 - that we have applied over here so in
829:06 - this way based on your project
829:07 - requirements you can provide any CSS
829:09 - Properties by using the required Pudo
829:12 - class in this case now guys apart from
829:14 - this the other field that is enter email
829:16 - which is the email field over here is
829:18 - not having the required attribute so
829:20 - basically by default it is the optional
829:22 - field inside the form so guys what we
829:25 - can do is simply we can Define the input
829:27 - tag followed by colon and then we can
829:29 - have the codo class that is optional
829:31 - over here so whatever CSS properties
829:34 - that we Define inside the optional hudo
829:36 - class in this case will be applied to
829:39 - all the fields that are marked as
829:40 - optional or not having the required
829:43 - attribute so let us provide the same CSS
829:45 - properties in this case that is padding
829:47 - is equal to 5 pixels and Border radius
829:50 - is equal to 5 pixels but this time we
829:52 - are going to change the background color
829:54 - so we will have the version of the red
829:57 - color over here as the background color
829:59 - so let me just change the red color to
830:01 - some lighter version of this red color
830:03 - in this case so as you can see this this
830:04 - is the RGB value that we have set over
830:06 - here let me just save this file now and
830:08 - try reloading this page once again on
830:10 - the browser so as you can see we have
830:12 - the lighter version of the red color to
830:14 - this field which is not marked as
830:16 - required but it is the optional field in
830:19 - this case guys if you notice we also
830:21 - have this red color to the submit and
830:22 - the clear button so what we can do is we
830:25 - can provide the CSS properties of
830:27 - username and password to the submit
830:28 - button by using the ID of the submit
830:31 - button so what is the ID of this button
830:33 - it is submit in this case so what we
830:35 - will do is the CSS properties for the
830:37 - required fields are present over here so
830:39 - simply we are going to provide comma and
830:42 - then we will provide the hash character
830:43 - followed by the ID of the input button
830:46 - that is submit in this case so guys
830:48 - basically these CSS properties will be
830:50 - applied to the submit Button as well as
830:52 - the fields that are marked as required
830:54 - over here and in this way we can also
830:56 - provide the multiple CSS selectors so
830:58 - let me just save this file now and try
831:00 - reloading this page once again on the
831:02 - browser as you can see the same CSS
831:04 - select that are provided to the required
831:06 - fields are now provided to the submit
831:08 - Button as well and the clear button can
831:10 - have the CSS property that is provided
831:13 - to the optional field over here so guys
831:15 - in this way you can use the required and
831:17 - the optional codo classes over here and
831:19 - based on your project requirements you
831:21 - can provide any of the CSS properties
831:23 - inside these Udo classes so guys comment
831:25 - in the comment section below whether you
831:27 - have learned something out of this video
831:29 - please make sure that you like this
831:30 - video so that it reaches to more people
831:32 - and subscribe to this channel so that
831:34 - you get notifications on upcoming videos
831:36 - as well I'll see you in the next video
831:38 - till then stay tuned so now we will
831:40 - create a very simple calculator with the
831:42 - help of the HTML and the CSS as you can
831:45 - see this is the simple calculator that
831:47 - we are going to create so first of all
831:49 - we are going to create a folder over
831:51 - here inside the HTML CSS projects folder
831:54 - so we are going to create the folder
831:57 - that is named as calculator since we are
831:59 - going to create a simple calculator over
832:01 - here now guys inside this calculator
832:03 - folder we are going to create the HTML
832:05 - and the CSS files so first of all we
832:08 - will create index.html file in this case
832:10 - and then we are going to create another
832:12 - file in order to provide the styling
832:14 - with the help of the CSS file so guys
832:16 - over here we have the style. CSS file as
832:19 - well so guys inside the index.html file
832:21 - we will have our HTML elements so we are
832:24 - going to use the Mt abbreviation that is
832:26 - exclamation mark in order to create the
832:29 - HTML template over here and for the
832:31 - title part we are simply going to
832:33 - provide the string that is simple
832:35 - calculator now guys apart from this
832:37 - inside the body tag we are going to
832:39 - provide our code so what we are going to
832:41 - do is first of all we are going to
832:43 - create a diff tag with the class that is
832:45 - main class over here and inside this we
832:47 - are supposed to have the text area so
832:49 - for reference over here I have opened
832:51 - the calculator in this case that is a
832:53 - standard calculator so this box over
832:55 - here where all the numbers will appear
832:57 - will be represented by this particular
832:59 - text area so guys over here we will
833:01 - provide the text area is the name and
833:03 - the ID as well so I have provided the
833:06 - text area value for the name and ID part
833:08 - and then initially we will provide the
833:10 - data as zero in this case now guys after
833:12 - this we are going to have another diff
833:14 - tag with the class container where we
833:16 - are going to Define all these buttons
833:18 - that you can see so guys we can create
833:20 - all these buttons with the help of the
833:22 - diff tags over here so we are going to
833:24 - have the div tag with the class Row in
833:26 - this case and every button will be
833:28 - represented with the help of this
833:30 - particular class that is row over here
833:32 - so guys first of all we have this button
833:33 - that is C e so in this case let us
833:35 - provide the data as well and I'm simply
833:37 - going to copy this line of code over
833:40 - here and we are going to provide other
833:41 - buttons at is C and then backspace and
833:43 - then we have divide so guys over here
833:45 - for the clear part we will provide the
833:47 - capital x letter and then over here we
833:49 - will provide the Divide symbol so guys
833:52 - basically we have created the four D
833:54 - tags with the help of the class that is
833:56 - row over here which we are going to use
833:58 - inside the style. CSS file let me just
834:00 - save this file now and try opening this
834:03 - file on the browser so simp I'm going to
834:05 - copy this path over here or simply you
834:06 - can also use the live server feature so
834:09 - basically you can install the live
834:11 - server extension on the vs code that
834:13 - will help you in order to go live over
834:15 - here so guys simply we can use this
834:17 - feature as well so let me click over
834:19 - here on the go live Button as you can
834:21 - see so it is starting right now and
834:23 - basically by default this will be the
834:25 - URL where your server will be live and
834:27 - you will be able to view the HTML web
834:30 - page now guys whatever changes you make
834:32 - in the HTML and the standy CSS file over
834:35 - here will be reflected on this HTML page
834:38 - so over here we have not defined the CSS
834:40 - file to be linked to this particular
834:42 - HTML page so simply we are going to use
834:45 - this link tag over here along with the
834:47 - RL attribute that is stylesheet and the
834:49 - hrf attribute will have the style. CSS
834:52 - file the file that we have created over
834:54 - here in order to define the CSS
834:56 - properties so guys let me just save this
834:58 - file now and the changes will be
835:00 - automatically reflected over here now
835:02 - guys what we want to do is we want all
835:04 - all these buttons that is having these
835:06 - particular text to be present on one
835:08 - particular row over here and also we
835:10 - want them to have certain background
835:12 - color along with the fixed width and
835:14 - height so guys what we will do is first
835:16 - of all for the main class that is for
835:18 - the main calculator over here we will
835:20 - Define certain CSS properties so let's
835:22 - say if we Define the background color as
835:24 - a yellow color for the entire calculator
835:27 - and we want it to be present at the
835:29 - middle of the screen over here so guys
835:31 - what we have to do is let us also
835:33 - provide certain padding of 20 pixels so
835:35 - let me just save this file now and
835:37 - without actually reloading the page you
835:39 - will see that the changes are now
835:41 - getting reflected on this particular URL
835:44 - that's because of the live server that
835:45 - we are using now guys what we want to do
835:47 - is we want to have the fixed width of
835:49 - this particular calculator so let's say
835:51 - we have the width of 40% over here as
835:54 - far as the entire width of the screen is
835:56 - concerned so as you can see this is the
835:58 - 40% let us reduce the width to 30% over
836:01 - here so as you can see this is the 30%
836:04 - width and also in order to get this
836:06 - particular calculator at the middle of
836:08 - the screen simply we can provide margin
836:10 - equal to Auto over here so guys when we
836:12 - provide margin equal to Auto let me just
836:14 - save this file now and as you can see
836:16 - now the calculator is getting displayed
836:18 - at the middle of the screen over here
836:20 - now guys let us provide certain CSS
836:22 - properties for this diff TX in such a
836:24 - way that all these elements are
836:26 - displayed in one particular row over
836:28 - here so what we have to do is we need to
836:30 - use this particular container class in
836:32 - this case so guys let me just cect the
836:34 - spelling of this container class over
836:36 - here and then inside the style. CSS file
836:39 - we need to make use of this particular
836:41 - class that is container and then guys we
836:43 - need to provide the display property it
836:45 - is equal to grid that's because the
836:47 - layout that is getting displayed on this
836:49 - calculator app it is in the form of the
836:51 - grid layout over here so guys similarly
836:53 - we are going to make use of this grid
836:55 - layout in this case let me just save
836:57 - this file now and if we see the changes
836:59 - there are no changes right now that's
837:01 - because only one column is configured by
837:03 - default and that is why all the diff
837:05 - tags are coming inside just one column
837:07 - over here in order to increase the
837:09 - number of columns we need to make use of
837:11 - the grid template column CSS property
837:14 - and then for this particular CSS
837:15 - property we need to provide the width of
837:17 - the columns so guys either you can
837:19 - provide some length measurement or else
837:21 - you can also provide the auto keyword so
837:24 - that the width of the columns is taken
837:26 - automatically and since we need four
837:28 - columns over here in order to provide
837:30 - the buttons inside the calculator in the
837:32 - form of the grid layout we will will be
837:34 - providing the auto keyword four times
837:36 - over here so when we save this file once
837:38 - again and if you notice the changes over
837:40 - here as you can see all the diff tags
837:42 - are now getting displayed on just one
837:44 - line and they are separated with the
837:46 - help of the columns inside the grid now
837:48 - guys apart from this also we want to
837:50 - provide certain CSS properties to all
837:52 - these buttons which are represented with
837:54 - the help of the diff tag over here so
837:56 - let me just copy the class name that is
837:58 - Row in this case and then guys what we
838:00 - will do is we will provide the fixed
838:02 - width and height over here so let's say
838:03 - we have have 40 pixels of width and then
838:05 - also the 40 pixels of height in this
838:08 - case so we provide the height attribute
838:09 - as well and also we want to provide
838:11 - certain background color so let's say we
838:13 - have the background color as gray color
838:15 - over here so when we save this file you
838:17 - will see that these are the changes that
838:18 - are getting reflected in this case we
838:20 - have all the columns that are getting
838:22 - displayed over here and we have the
838:24 - fixed width and height for this
838:25 - particular diff tag apart from this we
838:27 - will also get these characters at the
838:29 - center of the box over here so what we
838:31 - will do is simply we will provide the
838:33 - text align it is equal to Center and in
838:35 - order to get the letters vertically
838:37 - aligned we can provide the line height
838:39 - attribute as well so simply we will
838:42 - provide the line height attribute in
838:44 - this case which must be equal to the
838:46 - height of this particular row class so
838:48 - it is 40 pixels over here when we save
838:50 - this file now so as you can see all the
838:52 - letters are now getting displayed at the
838:54 - middle of the button guys we can provide
838:56 - a lighter version of this gray color
838:58 - over here so let me just change the gray
839:00 - color to this particular lighter version
839:02 - so when we save this file now as you can
839:03 - see the these are the buttons that are
839:05 - getting displayed now guys let me just
839:06 - zoom in little bit so that we can see
839:08 - the calculator properly over here as you
839:10 - can see these are the top four buttons
839:12 - that are getting displayed over here now
839:14 - guys apart from this also we want to
839:16 - align this content inside the text area
839:18 - at the right hand side so simply what we
839:20 - can do is we can have the text area tag
839:23 - over here and simply we can provide the
839:25 - text align attribute so in this case we
839:27 - will provide text align it is equal to
839:29 - right over here so when we save this
839:31 - file as you can see now the number is
839:32 - getting displayed on the right right
839:34 - hand side okay similarly what we will do
839:36 - is we will have these numbers and also
839:38 - the multiplication icon over here inside
839:40 - the second row as far as this Ana is
839:43 - concerned so simply we have to come
839:45 - inside the index.html file and I'll copy
839:48 - these lines of code over here and simply
839:50 - we need to provide the content that is 7
839:53 - 8 9 and then multiplication so over here
839:56 - we will provide 7 essay number then 8
839:58 - and then N9 and then this multiplication
840:00 - as the small X letter so let me just
840:02 - save this file now and if you notice a
840:04 - change over here as you can see these
840:06 - are the buttons that are getting
840:08 - displayed on the second row now guys
840:10 - apart from this we can also provide
840:11 - certain row Gap over here so that there
840:13 - is certain Gap in between the rows in
840:16 - this case so simply inside the CSS file
840:19 - for the container class we can provide
840:21 - the row Gap over here and a row gap of
840:23 - five pixels can provide a good amount of
840:25 - Gap in between the rows so when we save
840:27 - this file now as you can see we have
840:29 - caught the gaps in between the rows now
840:31 - now guys apart from this we will also
840:33 - provide the other numbers as well so let
840:35 - me just copy paste these lines of code
840:37 - once again over here inside the HTML
840:39 - file so guys we have the third row over
840:41 - here inside the container and this is
840:43 - how the buttons look like in this case
840:45 - apart from this let me just quickly
840:47 - provide the last two rows over here as
840:49 - well inside this calculator so guys as
840:51 - you can see we have also provided the
840:53 - last two rows over here and apart from
840:55 - this we have also adjusted certain width
840:57 - of the main class and the text area as
841:00 - well in which case we have provided the
841:02 - number of columns and the number of rows
841:04 - in such a way that it aligns better
841:06 - along with the other buttons over here
841:08 - inside the container now guys what we
841:10 - can do is in order to make these buttons
841:12 - look more decent we will provide the
841:14 - background color of white for all these
841:16 - numbers over here so simply for the
841:18 - numbers inside this calculator we are
841:20 - going to provide another class name that
841:23 - is number in this case and then guys let
841:25 - me just copy this class name to the
841:26 - other numbers as well so that only for
841:29 - these numbers we are going to have the
841:30 - white color as the background color and
841:33 - then after Prov providing the background
841:34 - color as well we are going to also have
841:37 - the hover pseudo class that will change
841:39 - the background color when we get the
841:41 - mouse cursor on the buttons over here so
841:43 - simply inside the style. CSS file we
841:45 - will provide the number class in this
841:47 - case and then guys we are simply going
841:48 - to provide the background color of white
841:50 - color over here let me just save this
841:52 - file now so as you can see we have all
841:54 - these numbers with the white color in
841:56 - this case apart from this we can also
841:58 - have certain borders as well so guys as
842:00 - you can see we have the white colors for
842:01 - all these numbers right now apart from
842:03 - from this let us have some different
842:05 - shade of white color over here so
842:07 - basically we are going to have this
842:08 - shade of white color over here so as you
842:10 - can see this is the background color now
842:12 - guys when we get the mouse cursor on
842:14 - this particular row that is the button
842:17 - we want to change the background color
842:18 - to some different color in this case so
842:20 - what we can do is for this row class
842:22 - over here simply we are going to have
842:24 - the H Udo class and inside this we are
842:27 - going to have the background color so
842:29 - let's say we want to have the background
842:30 - color as gray color in this case let me
842:32 - just save this file now so now if we get
842:34 - the mouse cursor over here as you can
842:36 - see it is changing the background color
842:38 - to the gray color which means it is
842:40 - giving some feedback to the user that
842:42 - this is the button that is going to be
842:43 - clicked in this case apart from this
842:45 - also we will provide the cursor it is
842:47 - equal to pointer over here let me just
842:49 - save this file now so as you can see the
842:51 - cursor is getting updated to the pointer
842:54 - icon over here we can have some other
842:56 - version of the gray color as well based
842:58 - on your requirement so let me just
842:59 - change it to some lighter version of the
843:01 - gray color over here let me just save
843:03 - this file now so as you can see the
843:05 - buttons are now getting a different
843:07 - background color in this case so guys
843:08 - based on your requirements you can have
843:10 - the different background colors or any
843:12 - other CSS properties with the help of
843:14 - these class names just like how we have
843:16 - defined inside the CSS file over here
843:19 - guys we can also have multiple class
843:21 - names for a particular HTML element as
843:23 - you can see these numbers are having two
843:26 - class names over here and from two
843:27 - different class names we are having the
843:29 - multiple CSS properties and the CSS
843:32 - property that is defined at the later
843:34 - stage inside the external CSS file will
843:37 - be implemented on the user interface
843:39 - that is on the web page over here so
843:41 - guys in this way we have successfully
843:43 - created a very simple calculator with
843:45 - the help of the HTML and the CSS
843:47 - properties comment in the comment
843:49 - section below whether you have learned
843:50 - something out of this video please make
843:52 - sure that you like this video so that it
843:54 - reaches to more people and subscribe to
843:56 - this channel so that you get the
843:57 - notifications on upcoming videos as well
843:59 - I'll be creating more HTML and the CSS
844:01 - projects in the upcoming videos so stay
844:04 - tuned so guys we are going to create a
844:06 - responsive navigation bar that will look
844:08 - like this that is a horizontal
844:10 - navigation bar over here along with some
844:12 - background color when we get the mouse
844:14 - cursor on this Nave bar items and then
844:17 - when we decrease the width of the screen
844:19 - over here which means when we view this
844:21 - on smaller devices the navigation bar
844:24 - will be converted to the vertical
844:26 - navigation bar over here so guys we will
844:28 - check this with the help of the HTML and
844:30 - the CSS code so guys over here inside
844:33 - the HT H tml CSS projects folder we are
844:36 - going to create another folder that is
844:38 - navigation bar in this case and then
844:41 - inside the navigation bar folder we are
844:43 - going to have the index.html file and
844:46 - the style. CSS files over here so guys
844:48 - let me just create the style. CSS file
844:51 - as well so guys we have created both the
844:53 - files over here so inside the index.html
844:57 - we are going to have the HTML code so
844:59 - let me just use this Mt abbreviation
845:01 - that is exclamation mark in order order
845:03 - to have the default HTML template and
845:06 - then guys for the title part we are
845:08 - going to have the navigation bar as the
845:10 - title of this page and also we are going
845:13 - to link this style CSS file with the
845:16 - help of this link tag over here now
845:18 - apart from this inside the body tag we
845:20 - are going to define the HTML elements so
845:23 - what we are going to do is let's say we
845:24 - have the diff tag with the class Nave
845:27 - bar over here so simply we are going to
845:29 - create the diff tag with the class that
845:31 - is naar in this case and then guys
845:33 - inside this we are going to have more
845:35 - diff tags that are going to have the
845:38 - navigation bar item so guys simply we
845:40 - are going to create the diff tag with
845:42 - the class item over here inside which we
845:45 - are going to have the a tag with the hge
845:47 - character s the hre and the first
845:50 - element that we have for our navigation
845:52 - bar is the home so basically this is the
845:54 - first item inside the navigation bar and
845:57 - similarly we are going to have multiple
845:59 - items over here so let's say we have the
846:01 - second item as block then the Third item
846:03 - as videos and then the fourth items as
846:06 - languages that are programming languages
846:08 - over here let me just save this file now
846:11 - and click on this go live icon that can
846:13 - help us in order to display the web page
846:16 - on the browser so guys this can be done
846:18 - with the help of the live server
846:20 - extension on the vs code so if you see
846:22 - on the web browser over here these are
846:24 - the four items that we want to include
846:27 - inside a navigation bar now Guys these
846:29 - are looking just like simple links on
846:32 - the web page but we want want to convert
846:34 - it into a horizontal navigation bar and
846:36 - when we reduce the width of the screen
846:39 - over here the navigation bar should be
846:41 - updated to a vertical navigation bar so
846:43 - we will check that as well with the help
846:45 - of the media queries over here so guys
846:48 - simply we have to go inside the style.
846:50 - CSS file in order to actually make this
846:53 - Nave bar class look like a navigation
846:55 - bar so over here what we will do is
846:57 - simply we are going to provide certain
846:59 - CSS properties for the class name that
847:02 - is na bar so we need to provide a DOT
847:04 - character followed by the class name
847:06 - that is Nave bar over here and then guys
847:08 - inside this let us have certain
847:10 - background color first of all so we will
847:12 - have a dark background color that is
847:14 - black color over here and then apart
847:16 - from this we also want to make the
847:18 - display equal to Flags so that all the
847:21 - items inside the Nave bar class that are
847:25 - these tags over here must be displayed
847:27 - in a row by default guys when we provide
847:30 - the display equal to Flags over here by
847:32 - default the X direction is a row and all
847:35 - the elements will be displayed in one
847:37 - row over here so when we save this file
847:39 - now and check the changes on the browser
847:41 - as you can see we have the black color
847:43 - as the background color in this case and
847:45 - also we have all the links over here
847:47 - that are getting displayed with the blue
847:49 - color over here guys we are going to
847:51 - make certain changes for these diff tags
847:53 - so what we have to do is simply we will
847:55 - use the class name that is item since
847:58 - the item class name is representing all
848:01 - the diff tags over here that is
848:03 - individual items inside the flex
848:05 - container so guys simply we have to
848:08 - provide this item class over here and
848:10 - first of all we will provide the padding
848:12 - of 10 pixels in this case and then apart
848:15 - from this what we want to do is all the
848:17 - a tags inside this item class must have
848:20 - some CSS properties so we are going to
848:23 - define the item class and then all the
848:26 - AXS inside the item so we are going to
848:28 - use the a selector over here first of
848:30 - all we will have the text decoration as
848:33 - none so that we don't have any underline
848:36 - for any of the text that are getting
848:37 - displayed apart from this we will also
848:40 - change the font color to white color so
848:42 - instead of the blue color that is
848:44 - getting displayed over here the white
848:46 - color must be displayed for all these
848:48 - characters so guys let me just save this
848:50 - file now and check the changes so as you
848:53 - can see these are the changes that are
848:54 - getting displayed over here so guys
848:56 - basically this is a very simple
848:57 - navigation bar that we have just created
849:00 - now what we will do is when we get the
849:02 - mouse cursor on any of these diff tags
849:04 - over here we want to change the
849:06 - background color for that particular
849:08 - diff tag that is the navigation bar item
849:11 - so since the diff tag is represented
849:14 - with the help of this item class over
849:15 - here I'm going to copy this item class
849:18 - and then we need to provide the hover
849:21 - sudo class over here for which we want
849:23 - to change the background color so guys
849:25 - we will change the background color to
849:27 - red color in this case when the user
849:29 - gets the mouse cursor on the diff Tex
849:32 - with the class item so let me just save
849:34 - this file now and let us see the changes
849:36 - so as you can see when we get the mouse
849:38 - cursor over here the background color
849:41 - for the diff tags are now getting
849:43 - updated to the red color and this is how
849:45 - the user will be able to get the
849:46 - feedback that he or she will be able to
849:49 - click on that particular navigation bar
849:51 - item now guys you will notice there is
849:53 - certain space on the left hand side and
849:55 - on top of this navigation bar that's
849:58 - because by default certain margin is
850:00 - provided to the body tag over here so
850:02 - simply we will provide the body tag in
850:04 - this case and then let me just provide
850:07 - the margin is equal to Auto and also
850:09 - padding is equal to Auto and then apart
850:11 - from this we will also provide the Box
850:14 - sizing CSS property as border box over
850:17 - here so guys it is a best practice in
850:19 - order to provide these three lines of
850:20 - code at the start of the CSS file so
850:23 - that there is no margin and padding that
850:26 - is provided by default to any of the
850:28 - HTML elements that we are going to
850:30 - Define on our web page and then apart
850:32 - from this when we say box sizing equal
850:34 - to border box so any of the padding or
850:37 - the Border spaces that are included for
850:40 - the HTML elements the width and height
850:42 - that is taken by those parameters that
850:44 - is borders and padding will be also
850:47 - included as part of the width and height
850:49 - of the HTML elements so guys that is one
850:51 - of the important aspect when you are
850:54 - designing your web page so when we save
850:56 - this file now you will notice that there
850:58 - is no space on the left hand side and on
851:00 - top of this particular navigation bar
851:02 - right now guys if you want to add more
851:04 - navigation bar items over here simply
851:07 - you have to come inside the HTML file
851:10 - and you can simply copy paste these
851:11 - lines of code in this case and then guys
851:14 - simply we can provide some more items as
851:16 - far as navigation bar items are
851:18 - concerned so let's say we provide the
851:20 - contact tab over here and then apart
851:22 - from this we will also provide about us
851:24 - option in this case and let us also
851:26 - provide certain programming languages so
851:28 - over here we can provide Java for which
851:30 - I have created a separate playlist if
851:32 - you want to learn more about Java
851:34 - tutorial and the Java programs as well I
851:36 - have provided the links to the playlist
851:38 - in the description section below apart
851:40 - from this I have also created the
851:42 - playlist for the Python programming
851:43 - language so you can watch out those
851:45 - videos as well the links I have given in
851:47 - the description section below so guys
851:49 - when we save this file now if you notice
851:52 - there are more items that are getting
851:53 - displayed over here on the navigation
851:55 - bar so guys in this way we can simply
851:58 - create a navigation bar using the
852:00 - display equal to flex and the other CSS
852:03 - properties that we have just seen now
852:05 - guys the problem in this particular
852:06 - navigation bar right now is it is a
852:09 - horizontal navigation bar and when we
852:11 - decrease the width of the screen so
852:13 - let's say I have opened the console
852:15 - section over here and when we decrease
852:17 - the width as you can see some of the
852:19 - items are now going on the right hand
852:21 - side and now at the bottom of the screen
852:23 - we are getting the horizontal scroll bar
852:25 - over here guys this is not one of the
852:27 - best practices as far as designing web
852:29 - page is concerned so what we can do is
852:32 - simply we can see what is the maximum
852:34 - width so as you can see over here we are
852:36 - decreasing the width and somewhere over
852:38 - here around 550 pixels the horizontal
852:40 - navigation bar is looking fine in this
852:42 - case and then guys after this when we
852:44 - reduce the size more you can see that it
852:47 - is trying to reduce its size let's say
852:49 - at around 500 pixels or less we want the
852:52 - navigation bar to be displayed as a
852:54 - vertical navigation bar so guys what we
852:56 - can do is simply we can use the media
852:59 - query over here so how do we do that so
853:01 - inside the style. C s file we will use
853:04 - media query in this case so we use media
853:07 - screen over here and after this we use
853:09 - the end keyword and then inside the
853:13 - parenthesis we use the max width in this
853:15 - case so guys we need to provide the max
853:17 - width of 500 pixels and then inside the
853:20 - curly braces what we have to do is since
853:23 - we have provided the display equal to
853:25 - flex for the Nave bar over here simply
853:27 - I'm going to copy these lines of code in
853:29 - this case and paste it inside the media
853:32 - screen and and then guys we want this
853:34 - Nave bar to have the flex direction as
853:37 - column so by default the flex direction
853:39 - is Row in this case so simply I'm going
853:42 - to provide the flex Direction instead of
853:45 - the other CSS properties and we are
853:47 - going to change it to column over here
853:49 - so guys whenever the width of the screen
853:51 - is 500 pixels or below the flex
853:54 - Direction equal to column will be
853:56 - implemented for that particular Nave bar
853:59 - class over here which is the navigation
854:01 - bar so let me just save this file now
854:03 - and when we decrease the width of the
854:06 - screen now so as you can see below 500
854:09 - pixels the navigation bar is looking
854:11 - like a vertical navigation bar right now
854:14 - so guys in this way we can easily use
854:16 - the media query in order to convert the
854:19 - navigation bar from horizontal to
854:21 - vertical or vice versa and then apart
854:24 - from this we have already implemented
854:26 - the other hover properties and the
854:28 - background color changes as well guys
854:30 - based on your requirements you can
854:31 - provide your own C SS properties in the
854:34 - same code in this case so comment in the
854:36 - comment section below whether you have
854:37 - learned something out of this video
854:39 - please make sure that you like this
854:40 - video so that it reaches to more people
854:42 - and subscribe to this channel so that
854:44 - you get the notifications on upcoming
854:46 - videos as well I'll see you in the next
854:48 - video in which we are going to create
854:50 - more HTML and CSS projects so stay tuned
854:54 - so guys we are going to create this kind
854:56 - of login form over here that is going to
854:58 - have certain border radius and apart
855:00 - from this it is also going to have some
855:02 - box Shadow as well and when we get the
855:04 - mouse cursor on the submit button it is
855:06 - going to increase its size with the help
855:08 - of the scale function that will be used
855:11 - with the help of the transform CSS
855:13 - property so guys over here let us create
855:15 - the login form folder in this case so
855:17 - simply we are going to create another
855:20 - folder over here inside the HTML CSS
855:23 - projects and then guys apart from this
855:25 - inside this login form folder we are
855:27 - going to create two files that is the
855:30 - index.html file and the other file in
855:32 - order to handle the CSS properties so we
855:35 - will have style. CSS file as the
855:38 - external CSS file over here now guys
855:40 - what we will do is simply inside the
855:42 - index.html file we are going to write
855:45 - our HTML elements so over here inside
855:48 - the title tag we are going to say login
855:51 - form in this case so we are going to
855:53 - create a very simple login form over
855:55 - here and also we are going to link the
855:58 - external stylesheet with the help of the
856:00 - link tag over here and the HF attrib it
856:03 - is equal to style. CSS file in this case
856:06 - so guys simply we are going to create a
856:07 - form tag over here inside the container
856:10 - class which will be represented by the
856:12 - diff tag in this case so guys over here
856:14 - we have the container class with the
856:16 - help of the diff tag and then inside
856:18 - this we are going to create a form tag
856:20 - over here also we are going to assign
856:23 - the ID for this form tag so over here
856:25 - let us provide the value as form over
856:27 - here simply we are going to have two
856:29 - fields in this case that is username and
856:31 - password so let let me just provide the
856:34 - first input with the help of the type
856:36 - that is text over here and simply we are
856:39 - going to have the name as usern name and
856:41 - ID also equal to username over here let
856:44 - us also have couple of line breaks in
856:46 - this case so that the next input that is
856:49 - password can be displayed on the new
856:51 - line so guys over here we have the type
856:53 - is equal to password and simply we are
856:56 - going to have the name and ID values as
856:59 - password over here and then again we are
857:01 - going to have the line breaks in this
857:03 - case and then guys after this we are
857:05 - going to have the submit button over
857:07 - here so simply we are going to have the
857:10 - input tag with the type button in this
857:12 - case and the value must be submit just
857:14 - like how we have in the other forms so
857:17 - guys let me just save this file now and
857:19 - let us click on this go live button so
857:21 - that with the help of the live server
857:23 - extension we are able to see our web
857:26 - page on the web browser and whatever
857:28 - changes we make inside this particular
857:30 - HTML and the CSS files will be directly
857:33 - reflected on this particular web page
857:35 - over here so as you can see these are
857:37 - the two input boxes that we have
857:39 - provided and this is the submit button
857:41 - now guys let us provide certain CSS
857:43 - properties to all these HTML elements so
857:46 - first of all inside the form what we are
857:48 - going to do is we will have the h2 tag
857:50 - over here and we will say F below form
857:53 - so guys basically this is the
857:55 - instruction to the user in order to feel
857:57 - the below form in this case also we are
858:00 - going to have certain background color
858:02 - for this tag which is represented by
858:04 - this container class so let me just copy
858:07 - this class name and inside the style.
858:09 - CSS file we are going to have the
858:11 - background color over here and let's say
858:13 - we provide the background color as aqua
858:15 - color let me just save this file now so
858:17 - if you notice that this particular color
858:20 - is getting displayed for the diff tag
858:22 - which is taking the entire width of the
858:24 - screen so guys we can reduce the width
858:26 - of this particular diff tag by providing
858:28 - the width CSS property and let's say we
858:30 - provide 30% as the width in this case so
858:33 - basically we have reduced the width over
858:35 - here also we will provide the padding so
858:37 - let's say we have the padding CSS
858:39 - property and we provide the value as 20
858:42 - pixels over here so as you can see we
858:44 - have provided the padding as well and
858:46 - then apart from this let us also get the
858:49 - diff tag at the center of the screen by
858:51 - providing the margin is equal to Auto
858:54 - and also we will have some margin from
858:56 - the top side as well so let's say we
858:59 - have 20 pixels of margin from the top so
859:01 - as you can see we are getting this diff
859:03 - tag that is the container class at the
859:05 - center of the screen now now guys let us
859:07 - say we want all these HTML elements that
859:09 - is the input fields and the submit
859:11 - button to be present at the center of
859:14 - this particular container so what we can
859:16 - do is simply we can use the text align
859:18 - CSS property and provide the value as
859:21 - Center over here so as you can see all
859:23 - the HTML elements are now present at the
859:25 - center of this particular container
859:27 - because apart from this we will also
859:29 - provide some placeholder over here so
859:31 - that the user comes to know what kind of
859:33 - data is expected over here so inside the
859:36 - input Tex we are going to provide the
859:38 - placeholder and then we will say enter
859:41 - username over here for the username
859:43 - input field and also for the password
859:46 - field we are going to provide enter
859:49 - password in this case so let me just
859:51 - save this file now so as you can see we
859:53 - are getting the placeholders over here
859:55 - now guys what we will do is for both
859:57 - these input fields we are also going to
859:59 - provide certain padding in this case so
860:02 - simply we are going to provide the IDS
860:03 - that is username and password in this
860:06 - case so since we are going to have the
860:08 - common CSS properties for both these
860:10 - fields we are going to provide the ID
860:13 - and separate them by using the comma in
860:15 - this case so guys over here what we want
860:17 - to do is we want to provide the padding
860:20 - of let's say five pixels in this case
860:22 - let me just save this file now so as you
860:24 - can see there is certain spacing when
860:25 - the user provides certain data over here
860:28 - now guys apart from this we will also
860:30 - provide certain CSS properties to this
860:32 - particular submit button so simply we
860:34 - are going to use the ID that is submit
860:37 - over here with the help of the hash
860:38 - character and then let us provide
860:41 - certain background color first of all
860:43 - and it will be the version of the green
860:45 - color so guys let us pick one of the
860:47 - colors in this case so as you can see
860:49 - this is the color that we want over here
860:51 - let me just save this file now and as
860:53 - you can see there is no color that is
860:54 - getting implemented over here that's
860:56 - because we have not provided the ID to
860:58 - the submit button in this case so let us
861:01 - do that as well so simply we are going
861:03 - to provide the ID is equal to submit so
861:05 - now if you see there is the color that
861:07 - is getting displayed apart from this we
861:10 - will also provide the padding of let's
861:12 - say five pixels over here and then guys
861:14 - after this also we want some box Shadow
861:17 - to be implemented so let's say we
861:19 - provide the Border as one pixels solid
861:22 - black color over here so let us provide
861:25 - the black color Border in this case so
861:27 - as you can see this is the black color
861:29 - border and also let us provide the
861:31 - Border radi IUS as well before the Box
861:33 - Shadow so we will provide the Border
861:36 - radius of 5 pixels so as you can see
861:38 - this is the Border radius if I zoom in
861:40 - little bit you can see there is a border
861:42 - radius that can be seen so guys after
861:45 - this what we want to do is also we will
861:47 - provide the Box Shadow over here so
861:49 - simply we will provide the Box Shadow
861:52 - and the horizontal and the vertical
861:54 - Shadow we want to keep it as zero pixels
861:57 - but we want to provide the blur effect
861:59 - so let's say we provide the five pixels
862:00 - as blur effect and the color col must be
862:03 - black in this case let me just save this
862:04 - file now so if you notice there is a box
862:07 - shadow that is getting implemented over
862:10 - here for this particular submit button
862:12 - now guys when we get the mouse cursor
862:13 - over here the cursor icon must be
862:16 - updated to hand in this case so simply
862:19 - we will provide the cursor it is equal
862:21 - to pointer over here so when we save
862:23 - this file now as you can see the cursor
862:26 - is now getting updated to the hand icon
862:28 - over here and also we want it to scale
862:30 - little bit so that the size of this
862:32 - button increases when the user gets the
862:34 - mouse cursor on this particular button
862:37 - so guys what we want to do is simply we
862:39 - need to make use of the hover pseudo
862:41 - class over here so when we say submit
862:44 - followed by colon we have something
862:46 - called as hover Pudo class so in this
862:49 - case simply we can make use of the
862:51 - transform CSS property which is having
862:53 - scale as one of the function so guys we
862:56 - need to provide the value of scaling
862:58 - over here so when we provide 1.2 it is
863:00 - going to increase its size against the
863:03 - horizontal and the vertical Dimensions
863:05 - so when we save this file now and let us
863:07 - see the changes so as you can see the
863:09 - button size is increasing now and it is
863:12 - due to the scale function that we have
863:14 - used with the help of the transform CSS
863:16 - property also guys we want a smooth
863:18 - transition when the scaling is happening
863:21 - so simply we can use the transition CSS
863:23 - property over here so we will use the
863:26 - transition CSS property and in this case
863:28 - we want to transform it smoothly so over
863:31 - here we will make use of of this
863:33 - transform CSS property and the time must
863:35 - be let's say 0.3 seconds over here so
863:38 - simply we provide the time as 0.3
863:40 - seconds when we save this file now and
863:43 - when we get the mouse cursor over here
863:45 - there's a smooth transition that you can
863:47 - see right now as far as the scaling of
863:49 - this button is concerned so guys in this
863:51 - way we have created a simple login form
863:54 - over here instead of providing the
863:56 - string that is field below form we can
863:58 - say login form in this case so as you
864:00 - can see this is the login form now
864:02 - similar to The Box Shadow and the Border
864:04 - radius that we have provided to this
864:06 - button over here we can provide the
864:08 - Border radius and the Box Shadow to this
864:11 - container as well so what we will do is
864:13 - inside the style. CSS file for this
864:15 - container simply we are going to define
864:18 - the Border radius of let's say 10 pixels
864:21 - over here so when we save this file now
864:23 - as you can see there's a border radius
864:25 - of 10 pixels right now and also we want
864:27 - a certain box Shadow over here so let's
864:29 - say we provide a box Shadow with the
864:32 - help of the blur effect over here and we
864:34 - provide the black color as the Box
864:36 - Shadow so as you can see this is the
864:38 - black color box shadow that is getting
864:40 - provided to this container that is the
864:42 - login form and also we can provide
864:44 - multiple box Shadows over here so after
864:47 - providing comma after the first box
864:49 - Shadow we can provide the second box
864:51 - shadow that is having 20 pixels of blur
864:54 - effect and let's say we want the dark
864:57 - blue color this time that will be spread
864:59 - across 20 pixels after the border of the
865:02 - container so when we save this file now
865:04 - you will notice that there is a dark
865:05 - blue color that is getting displayed
865:07 - after the border of the container which
865:09 - is giving this particular login form a
865:11 - decent look over here so guys in this
865:13 - way based on your project requirements
865:15 - you can create attractive login forms so
865:18 - that the user can provide the username
865:20 - and password and any other details as
865:22 - per the project requirements so guys
865:24 - comment in the comment section below
865:25 - whether you have learned something out
865:27 - of this video please make sure that you
865:29 - like this video so that it reaches to
865:31 - more people and subs subscribe to this
865:32 - channel so that you get the
865:34 - notifications on upcoming videos as well
865:36 - I'll see you in the next video where we
865:37 - are going to create more HTML and the
865:40 - CSS projects so stay tuned so now we are
865:43 - going to create a search bar that will
865:45 - have a glowing effect when the user
865:47 - clicks on this particular search bar
865:49 - over here so as you can see we have the
865:51 - Border color and also the Box Shadow CSS
865:54 - property has been implemented over here
865:57 - in order to provide the glowing effect
865:59 - for this particular search box so let us
866:01 - move to the vs code Cod so first of all
866:03 - we will create another folder inside
866:05 - this HTML CSS projects so basically we
866:08 - will say glowing search bar over here so
866:11 - guys we have this folder name inside
866:13 - which we are going to create two more
866:15 - files that is index.html and the style.
866:18 - CSS files so guys we have the index.html
866:21 - file over here and the other file that
866:23 - is style. CSS that will help us to
866:25 - provide the CSS properties now guys
866:28 - inside this index.html file we are going
866:30 - to create the HTML elements so let us
866:33 - provide the title of this particular web
866:36 - page so basically we are going to say
866:39 - glowing search bar in this case and then
866:41 - after this we are going to link the
866:44 - style. CSS file with the help of this
866:46 - link tag over here and the r attribute
866:50 - will be stylesheet and the hdf attribute
866:52 - will be style. CSS file now guys inside
866:55 - the body tag what we are going to do is
866:57 - let us first of all have the div tag
866:59 - with the class container over here
867:01 - inside which we are going to define the
867:04 - input with the type search in this case
867:06 - so guys basically this is the input with
867:08 - the type search that will help us in
867:10 - order to create a search bar so we are
867:13 - going to have the value as search for
867:15 - the name and the ID attribute over here
867:17 - and apart from this we are also going to
867:20 - provide the placeholder for this input
867:22 - field and we will provide the value as
867:24 - for your search so guys basically this
867:26 - is the placeholder text that will be
867:28 - displayed inside the search bar let me
867:31 - just save this file now and let us open
867:33 - the live server in this case with the
867:35 - help of the cive button that you can see
867:37 - so guys basically this is the search bar
867:39 - that we have created now guys let us
867:41 - provide certain CSS properties for this
867:44 - search bar and the container class as
867:46 - well which is represented by the diff
867:49 - tag over here so first of all we will
867:51 - have the container class in this case
867:53 - and also we will have certain background
867:55 - color so let's say we have the white
867:57 - version of the background color over
867:59 - here so simply we are going to provide
868:01 - the white color in this case and let us
868:03 - have this particular shade of white
868:05 - color over here let me just save this
868:07 - file now as you can see this is the
868:09 - shade of the white color it is a kind of
868:11 - grayish color that is set as the
868:13 - background color for the container we
868:15 - will also have certain padding over here
868:17 - so let's say we have a padding of 20
868:19 - pixels and also we will set the text
868:22 - align as Center so that we can see the
868:25 - search bar at the center of this
868:26 - particular container so as you can see
868:28 - this is the search bar that is getting
868:30 - displayed over here now guys what we we
868:32 - want to do is when the user gets the
868:34 - mouse cursor over here inside the search
868:36 - bar and clicks on it we want to have a
868:39 - glowing effect outside of this
868:41 - particular border of the search bar so
868:44 - simply we are going to provide certain
868:46 - CSS properties to this search bar first
868:48 - of all so we will use the ID that is
868:51 - search in this case so we have to use
868:53 - the hash character followed by search
868:55 - over here so basically we are going to
868:57 - increase the padding so let's say we
868:59 - provide the padding of five pixels over
869:01 - here so as you can see there is certain
869:03 - spacing that is provided inside the
869:05 - search bar over here now guys when we
869:07 - get the mouse cursor over here we need
869:09 - to make use of the focus Pudo class in
869:12 - this case so simply I'm going to copy
869:14 - paste this line of code over here we are
869:16 - going to remove this padding CSS
869:18 - property and we will say Focus that is
869:20 - the Pudo class with the help of this
869:23 - colon over here and then after this we
869:25 - need to make the Border color so let's
869:28 - say we have the border of two pixels and
869:30 - it is of the type solid and we will
869:32 - provide some Blue version of the Border
869:34 - color over here so simply we are going
869:36 - to provide a blue color in this case and
869:39 - let us change the color to light blue
869:41 - over here and let's say this is the
869:43 - color that we want to have as the border
869:46 - so let me just save this file now and
869:47 - now when we get the mouse cursor over
869:49 - here you will not be able to see any
869:51 - changes over here that's because there
869:52 - is a default outline that is getting
869:54 - displayed right now so guys what we can
869:56 - do is simply we can provide outline it
869:59 - is equal to none in this case when we
870:01 - save this file now as you can see
870:03 - there's a blue color border that is
870:05 - getting displayed over here right now
870:07 - let us change the background color of
870:08 - this container to some darker version so
870:10 - let's say we have the black color for
870:12 - this background color over here so that
870:14 - we can properly see the Border color of
870:17 - this particular search bar so when we
870:19 - save this file now there is no change
870:21 - right now so as you can see we have not
870:23 - provided the semicolon over here so guys
870:25 - it is very important that we provide the
870:27 - semicolon after the values of the CSS
870:29 - properties so as you can see now now we
870:32 - have the Border color that is light blue
870:34 - color for this particular search bar now
870:37 - guys what we can do is simply we can
870:39 - also provide the Box Shadow over here
870:41 - with the same color so we are going to
870:43 - provide the Box shadow of let's say 0er
870:45 - pixels horizontal and the vertical
870:48 - shadow in this case and let's say we
870:49 - provide 20 pixels of the same color as
870:52 - the blur effect for the Box Shadow so
870:55 - I'll just copy paste this particular RGB
870:58 - color over here let me just save this
871:00 - file now and now when we get the mouse
871:02 - cursor inside this particular search bar
871:04 - and click on it you can see that there
871:06 - is a glowing effect that can be seen
871:08 - over here due to this box Shadow and the
871:11 - border that we have provided in this
871:13 - case for this particular search bar so
871:15 - guys in this way you can provide the
871:17 - glowing effect for the search bar with
871:19 - the help of these CSS properties apart
871:22 - from this we can also have the Border
871:24 - radius as well so let's say we have the
871:26 - radius of 10 pixels so you can see that
871:29 - there's a radius that is getting
871:30 - provided over here and when we click on
871:32 - the search bar you can see that there is
871:34 - a glowing effect that can be seen over
871:36 - here so guys comment in the comment
871:38 - section below whether you have learned
871:39 - something out of this video please make
871:41 - sure that you like this video so that it
871:43 - reaches to more people and subscribe to
871:45 - this channel so that you get the
871:46 - notifications on upcoming videos as well
871:49 - I'll see you in the next video where we
871:50 - are going to create more HTML and the
871:52 - CSS projects so stay tuned so now we are
871:56 - going to create a simple loading
871:58 - animation that will look like this as
872:00 - you can see this is a circular load
872:01 - loading animation and we can display
872:03 - this loading animation with the help of
872:05 - just HTML and CSS whenever you are
872:08 - retriving data to be displayed to the
872:10 - user so guys let us move to the vs code
872:13 - so guys over here inside the HTML CSS
872:16 - projects folder we are going to create
872:18 - new folder over here and we will say
872:20 - loading animation in this case and
872:22 - inside this folder we are going to
872:24 - create couple of files over here so the
872:26 - first file will be index.html file and
872:30 - the other file will be representing the
872:32 - CSS file that is style. CSS file so guys
872:35 - basically we are going to make use of
872:37 - this external CSS file over here so
872:40 - inside our HTML file in this case we are
872:42 - going to make use of this particular Mt
872:45 - abbreviation that is exclamation mark in
872:47 - this case that will help us in order to
872:49 - create this particular HTML template in
872:52 - order to create the web page so guys
872:54 - over here for the title tag we are going
872:57 - to provide the string that is loading
872:59 - animation over here and also we are
873:01 - going to to link this external style.
873:04 - CSS file over here with the help of the
873:06 - link tag inside the HTML file so guys
873:09 - after this inside the body tag what we
873:12 - are going to do is simply we are going
873:13 - to create a diff tag with the class that
873:16 - is loading over here so guys basically
873:18 - this DFT tag will help us in order to
873:21 - create the loading animation on the web
873:23 - page so let us provide certain CSS
873:25 - properties to this diff tag over here we
873:27 - are going to make use of this class name
873:29 - that is loading and inside the style CSS
873:32 - file we will provide the dot character
873:34 - followed by the name of this class now
873:37 - guys what we will do is simply we are
873:39 - going to provide a fixed width and
873:41 - height for this particular diff tag so
873:43 - let's say we have 200 pixels of width
873:46 - and 200 pixels of height over here so
873:48 - basically it is a square box initially
873:51 - and apart from this we are also going to
873:53 - provide the background color so let's
873:55 - say we provide the gray color as the
873:57 - background color and then guys for the
873:59 - body part as well we are going to
874:00 - provide certain
874:02 - dark color as the background color so
874:04 - you make use of this body tag and inside
874:07 - the curly braces we will provide the
874:09 - background color and let's say we
874:10 - provide the black color as the
874:12 - background color over here let me just
874:14 - save this file now and let us make use
874:16 - of this live server so simply we have to
874:18 - click on this SC live in this case so
874:20 - guys as you can see we have the black
874:22 - color is the background color over here
874:24 - and we have created the diff tag
874:26 - successfully that is in the form of a
874:28 - square box in this case let us get the
874:31 - square box at the center of the page
874:33 - over here so what we will do is inside
874:35 - the style. CSS file for the loading
874:38 - class simply we are going to provide the
874:40 - margin it is equal to Auto and then
874:42 - apart from this from Top as well we are
874:45 - going to create certain margin so let us
874:47 - provide the 20 pixels of margin from Top
874:50 - let me just save this file now and if we
874:52 - see on the web page right now the diff
874:55 - tag is at the center of the screen over
874:57 - here now since we want a loading
874:59 - animation out of this diff tag first of
875:02 - all we will have to convert the square
875:04 - box to a circle so what we will do is
875:06 - simply we can make use of the Border
875:09 - radius CS property and when we provide
875:12 - the Border radius as 50% the square
875:15 - shape will be converted to Circular
875:17 - shape over here so let me just save this
875:19 - file now and as you can see on the web
875:21 - page there is a circle that is getting
875:23 - created over here now guys instead of
875:25 - using the background color that is
875:27 - coloring the circle as a gray color we
875:30 - will make use of the Border color over
875:32 - here so let me just comment out this
875:34 - background color in this case and simply
875:36 - we will provide the border of let's say
875:38 - 20 pixels and the Border type will be
875:41 - solid in this case and the same color
875:43 - that is gray color we are going to
875:45 - provide for this particular border when
875:47 - we save this file now so as you can see
875:49 - we have created a circular shape diff
875:51 - tag over here now guys on one side we
875:54 - want the Border color to be white color
875:57 - so let's say on the top side we want the
875:58 - Border color to be white color so that
876:01 - we can see see the loading icon out of
876:03 - this diff tag so what we have to do is
876:05 - we need to separate out these values
876:08 - that we have provided inside the Border
876:10 - CSS property so I'm going to comment out
876:12 - this line of code and we are going to
876:14 - separate it in such a way that we have
876:17 - to provide all these values separately
876:19 - so first of all we will provide the
876:22 - Border width over here of same value
876:24 - that is 20 pixels and then the Border
876:26 - style must be solid in this case so we
876:28 - provide border style CSS property and
876:31 - and it is of the type solid and the
876:33 - Border color must be gray so simply we
876:35 - make use of this border color CSS
876:38 - property now guys when we provide the
876:40 - value for this border color the first
876:42 - color will represent the top color over
876:44 - here followed by the right color and
876:46 - then we have the bottom color and then
876:48 - we have the left color in this case so
876:50 - the first color that we want to provide
876:52 - is white color that will be provided at
876:54 - the top side of the border for this
876:57 - particular circular shape diff tag and
876:59 - then after this on the right hand side
877:01 - we want the gray color and then on the
877:04 - bottom side we again want the gray color
877:06 - and on the left side as well we want the
877:08 - gray color over here so guys basically
877:10 - only the top side must be white in this
877:12 - case so that we can see the loading icon
877:15 - so when we save this file now as you can
877:17 - see there's a border color of white
877:19 - color at the top of this particular
877:21 - circle now simply in order to make this
877:24 - circle look like a loading animation we
877:27 - need to rotate it by 360° and we have to
877:30 - continue the ration so what we can do is
877:33 - we can make use of the key frames over
877:35 - here which is very important when you
877:37 - make any of the animations inside the
877:40 - CSS so guys we make use of atate
877:42 - character followed by key frames keyword
877:45 - over here and then followed by the space
877:47 - character and then simply let us give
877:49 - the name to this animation that is
877:51 - loading over here and then after this we
877:53 - need to provide the curly presses now
877:55 - guys we need to define the different
877:56 - stages of the loading so let's say at
877:59 - the 0% which is at the start of the load
878:01 - loading we don't want any rotation so
878:04 - simply we can provide the transform CSS
878:06 - property and inside this we are going to
878:08 - make use of this rotate function which
878:11 - is going to have the value as 0° over
878:14 - here so at 0% we don't want any rotation
878:17 - now similarly at 100% that is at the end
878:21 - of the animation we want the rotation to
878:23 - be 360° which means this particular
878:26 - Circle should start from the 0° and then
878:29 - at the end of the animation it should be
878:31 - completely rotated by 360° over here so
878:34 - for 100% in this case we need to provide
878:37 - transform CSS property once again and
878:39 - then we need to make use of the rotate
878:42 - function and simply we provide the value
878:44 - that is 360° over here so guys in this
878:46 - way from 0% to 100% we have provided the
878:50 - different animations you can also
878:52 - provide the animations to the
878:53 - intermediate percentages that is 10% 25%
878:57 - or 50% and so on based on your animation
879:01 - r requirements so guys in this case
879:03 - currently we only want to rotate this
879:05 - particular icon and that is why we have
879:07 - provided the transform CSS property with
879:10 - the help of the rotate function over
879:12 - here let me just save this file now and
879:14 - you will not see any changes right now
879:16 - on this web page that's because we have
879:19 - to link this particular key frames that
879:21 - is loading with this particular diff tag
879:23 - that is having the class name that is
879:25 - loading over here so what we can do is
879:27 - inside this loading class we can make
879:29 - use of the animation name CSS property
879:32 - and in this case we need to make use of
879:34 - this name that is loading over here and
879:36 - then after this we also have to provide
879:38 - the animation duration so let's say we
879:41 - want the duration to be 2 seconds so
879:44 - within 2 seconds the icon will rotate
879:46 - itself from 0° to 360° over here and
879:50 - then after this we want to rotate it
879:53 - infinite number of times so basically we
879:55 - make use of this animation iteration
879:58 - count over here and we provide the value
880:00 - that is infinite in this case let me
880:02 - just save this file now and if you see
880:04 - the web page as you can see in 2 seconds
880:07 - the icon is getting rotated over here
880:09 - and in this way we can easily create the
880:12 - loading animation now guys you can see
880:13 - that the speed is decreasing at the end
880:15 - of the animation so simply we can make
880:18 - use of another CSS property that is
880:20 - animation timing function in order to
880:23 - keep the speed linear over here so
880:25 - simply we provide the value that is
880:26 - linear in this case that will keep the
880:29 - speed of the loading animation same to
880:31 - throughout the animation so when we save
880:33 - this file now you will see that the
880:35 - speed is linear right now and there is
880:37 - no decrease or increase in the speed as
880:40 - far as the loading animation is
880:41 - concerned so guys based on your
880:43 - requirements you can have the different
880:45 - color for this particular loading
880:46 - animation that will match along with the
880:48 - background color of this particular web
880:50 - page and then based on the JavaScript
880:52 - code once your data is successfully
880:55 - retrived from the database or from the
880:57 - internet you can hide this particular
881:00 - loading animation it becomes very
881:02 - important in order to keep your users
881:04 - engaged with the help of such animations
881:06 - on the web page whenever you are
881:08 - retriving data with the help of
881:10 - JavaScript so guys this is one of the
881:12 - ways in order to create the loading
881:14 - animation on your web page with the help
881:16 - of the HTML and the CSS comment in the
881:19 - comment section below whether you have
881:20 - learned something out of this video
881:22 - please make sure that you like this
881:24 - video so that it reaches to more people
881:26 - and subscribe to this channel so that
881:27 - you get the notifications on upcoming
881:29 - videos as well I'll see you in the next
881:31 - video with a different HTML and the CSS
881:34 - project so stay tuned so guys we are
881:37 - going to create these social media icons
881:40 - that will help your users on the website
881:42 - to share the URL to the different social
881:44 - media platforms and when the user gets
881:46 - the mouse cursor on these social media
881:49 - icons they are going to scale up little
881:50 - bit and that is how you can provide a
881:52 - good user experience for your users so
881:55 - guys let us move to the vs
881:57 - code so let us create another folder
881:59 - over here since it is the 6 project we
882:01 - are naming it as 06 uncore and then we
882:05 - will say social media icons in this case
882:08 - and then guys inside this folder let us
882:10 - create two files that is index.html file
882:13 - which will help us in order to create
882:15 - the web page and then apart from this we
882:17 - will also create the style. CSS file
882:19 - that will help us in order to provide
882:21 - the different CSS properties now guys
882:23 - over here inside the index.html file let
882:26 - us create the HTML template over here
882:29 - and for the title part we will say
882:31 - social media icons so guys basically
882:34 - this is the title and then we are going
882:35 - to link the style. CSS file by using
882:38 - this link colar CSS M abbreviation and
882:42 - then we are going to provide hrf it is
882:44 - equal to style. CSS now guys apart from
882:46 - this in order to create the social media
882:49 - icons we can include the external
882:52 - stylesheet over here so as you can see
882:54 - we are going to make use of this box
882:56 - icons.com website which helps us in
882:59 - order to provide the different icons and
883:01 - basically we are going to make use of
883:03 - this stylesheet so let me just copy this
883:05 - link I will provide both these links in
883:07 - the description section below so guys
883:09 - over here after copying the external CSS
883:12 - file we are going to paste it inside the
883:14 - head section of the body tag over here
883:16 - so basically this is the link that is
883:18 - going to be used in order to make use of
883:21 - the different icons that are present on
883:23 - the website so guys over here what we
883:25 - will do is first of all we will create a
883:27 - diff tag with the class container over
883:29 - here inside which we will have different
883:31 - social media icons and then in this case
883:33 - we are going to have the a tag so over
883:36 - here we have the a tag in this case and
883:38 - let me just provide the class as Link in
883:40 - this case and then after this inside the
883:43 - a tag we can have the I tag now guys how
883:45 - you can display the links over here so
883:48 - let us open this website that is box
883:50 - icons.com so basically this is the
883:52 - website that we are going to use and
883:54 - then you can see that there are
883:55 - different icons you can provide on your
883:57 - web page so guys over here let's say
883:59 - first of all we want the Faceook
884:01 - Facebook icon so the moment you search
884:03 - for Facebook you can see different
884:05 - social media icons that can be used on
884:07 - your web page so let's say we want to
884:09 - make use of this particular icon so when
884:11 - we click on this additional information
884:13 - will be provided on the right hand side
884:15 - we need to switch to the font section
884:17 - over here and as you can see this is the
884:19 - link that is provided so let me just
884:21 - zoom in little bit so that you can see
884:23 - properly so basically this is the font
884:25 - and this is the tag that we are supposed
884:27 - to include so let me just click on this
884:29 - and basically it will get cop coped on
884:31 - the clipboard so over here inside the a
884:33 - tag we are supposed to provide this I
884:36 - tag over here that we have copied and
884:38 - basically it is having the class with
884:39 - this particular value so guys what this
884:42 - will do is it will display the icon on
884:44 - the web page so let us check this on the
884:46 - web browser let me just save this file
884:48 - now and let us open the live server over
884:51 - here by clicking on this go live button
884:53 - so as you can see this is the icon that
884:55 - is getting displayed over here on the
884:57 - top left now guys similarly what we will
884:59 - do is we will make use of the other
885:01 - icons as well from that same website so
885:03 - let me just copy paste these lines of
885:05 - code over here and simply instead of
885:08 - Facebook we are going to make use of the
885:10 - other social media icons so we have
885:12 - Twitter over here and then we also have
885:15 - YouTube in this case and then let's say
885:16 - we have Instagram as well so over here
885:19 - we provide the Instagram so basically
885:21 - you just need to change the class name
885:23 - in this case you can also come over here
885:25 - on the box icons website and then you
885:27 - can provide the icon that you want to
885:30 - display so let's say say you want to
885:31 - search for YouTube over here so YouTube
885:34 - icon will be displayed and then simply
885:36 - you can copy paste this it tag from this
885:38 - particular website so guys basically we
885:40 - have included four icons over here let
885:42 - us add another one that is Snapchat as
885:44 - well so instead of Instagram we will say
885:47 - Snapchat in this case it is best
885:49 - practice to copy this it tag from this
885:51 - website so that you don't get any issues
885:53 - while you are renaming the class names
885:56 - over here so guys let me just save this
885:57 - file now and when we see the same web
885:59 - page over here as you can see these are
886:01 - all the icons that are getting displayed
886:03 - in this case now guys since we have
886:05 - included all the social media icons
886:08 - inside the a tag that is why we are
886:09 - getting the underline and all of them
886:11 - are having the color that is blue color
886:13 - in this case so what we will have to do
886:15 - is we will provide the CSS properties
886:18 - for all these classes that we have
886:19 - provided over here so first of all let
886:22 - us copy this container class in this
886:24 - case and then let's provide some CSS
886:26 - properties over here to The Container
886:28 - class so first of all we will say
886:29 - display it is equal to leg and then we
886:31 - want to get it at the middle of the
886:33 - screen so let's say we provide justify
886:35 - content as Center over here let me just
886:37 - save this file now as you can see all
886:39 - the icons are now getting displayed at
886:41 - the center of this page as far as
886:43 - horizontal alignment is concerned now
886:45 - guys let us also provide certain margin
886:47 - from top so that we have some spacing
886:49 - from top of the page as well so we
886:51 - provide 50 pixels of margin from Top
886:53 - over here now guys let us provide
886:55 - certain CSS properties to this link
886:57 - class as well so that the properties
886:59 - will be applied to the icons so over
887:01 - here we provide dot followed by the
887:03 - class name that is linked in this case
887:05 - and then what we will do is first of all
887:07 - we will provide the width and height for
887:09 - this particular link class so let's say
887:11 - we have the width of 30 pixels over here
887:13 - and also we will provide the height of
887:15 - 30 pixels in this case so that we get a
887:18 - square box out of this link class over
887:20 - here and also we want to make this link
887:22 - as a circular shape link so what we will
887:24 - do is simply we will say border radius
887:27 - it is equal to 50% in this case and let
887:29 - us temporarily give some background
887:31 - color over here so that we can identify
887:34 - the area of this class that is linked so
887:36 - let me just save this file now so if you
887:38 - notice we have all these circular shaped
887:40 - link over here now guys inside the
887:42 - circles we want all these icons to be
887:44 - present at the center of the circle so
887:46 - what we will do is again we will say
887:48 - display it is equal to Flags this time
887:50 - and then we will say justify content it
887:52 - is equal to Center so that they are at
887:54 - the center as far as the horizontal
887:56 - alignment is concerned and then we will
887:58 - get them at the center as far as
888:00 - vertical alignment is concerned so we
888:03 - have to make use of the Align items over
888:05 - here and again we will make use of the
888:07 - center value so as you can see all the
888:10 - icons are now at the center of the
888:12 - circle in this case now guys we will
888:13 - have to remove the underlines that are
888:15 - coming over here so simply we will say
888:17 - text decoration it is equal to none and
888:20 - also we will change the font color over
888:22 - here so let's say we provide the color
888:24 - as white color in this case so simply we
888:26 - provide the color as white we need to
888:28 - have certain dark background color in
888:30 - this case so what we will do is let's
888:32 - say we provide the dark background color
888:34 - that is black this time so when we save
888:36 - this file so as you can see the
888:37 - background color of the circle is black
888:39 - in color and the icons are displayed as
888:41 - white in color now guys apart from this
888:43 - we will also have to provide certain
888:45 - spacing in between all the links so let
888:48 - us provide the margin for all the links
888:50 - over here so we simply have to provide
888:52 - the margin CSS property and let's say we
888:54 - provide 10 pixels of space from all the
888:56 - sides so when we save this file now as
888:58 - you can see all the icons are now
889:00 - separated with certain space in between
889:02 - them now guys instead of giving the
889:04 - black color as the background color over
889:06 - here we need to provide the colors that
889:08 - are actually present on these websites
889:10 - of the social media icons so what we
889:13 - will do is simply we will comment out
889:14 - this line of code that is background
889:16 - color over here and we will provide the
889:18 - inline style property in this case so
889:20 - basically inside the a tag which is
889:22 - having the class link over here since
889:24 - all the links will be having different
889:26 - background colors so we are going to
889:28 - provide the style attribute in this case
889:30 - and let us provide the background color
889:32 - CSS property and the Facebook social
889:34 - media icon is having some version of
889:37 - blue color over here so let us set that
889:39 - as well so this version of Blue we have
889:41 - set already so let me just save this
889:42 - file now and you can see that Facebook
889:44 - is now having the blue color as the
889:46 - background color over here the other
889:48 - icons are not visible right now because
889:50 - their color is white in color and the
889:52 - background color is also white in color
889:54 - for now so guys let us set the
889:56 - background color for the other social
889:57 - media icons as well so I'll quickly make
889:59 - the changes over over here so as you can
890:01 - see we have provided the background
890:03 - colors for all the links over here apart
890:05 - from this for the social media icons
890:07 - that is Instagram and Snapchat we have
890:09 - provided the icon color as black so that
890:12 - it matches well with the light color
890:14 - background over here so let me just save
890:16 - this file now and when we see this page
890:17 - on the web browser as you can see this
890:19 - is the way that the icons are getting
890:21 - displayed over here which is giving it a
890:23 - decent look after we have provided the
890:25 - background colors for the icons and
890:27 - having the background as a circular
890:29 - shape now guys when we over over this
890:31 - particular social icons we want to scale
890:34 - the icons to some extent so what we will
890:36 - do is simply inside the style. CSS file
890:38 - over here let me just provide the link
890:41 - class in this case and then we will
890:43 - provide the hover codo class over here
890:45 - and simply we will say transform in this
890:48 - case and then we will say scale by 1.2
890:51 - that is the measure by which we want to
890:53 - scale the icon let me just save this
890:55 - file now and now when we get the mouse
890:57 - cursor over here as you can see the
890:59 - social media icons are increasing its
891:01 - size along with the background over here
891:04 - now if we want the smooth transition
891:06 - what we will do is simply inside the
891:08 - link class over here we will provide
891:10 - transition it is equal to all so that
891:12 - whatever changes happen to the link
891:14 - class all of them will have the
891:16 - transition and then apart from this we
891:18 - will have to provide certain timing so
891:20 - let's say we want 0.5 seconds during
891:22 - which the transition will complete so
891:24 - let me just save this file now and now
891:26 - if you see the transition as you can see
891:28 - it is a smooth transition which is
891:30 - helping the icon to increase its size
891:32 - along with the background that we have
891:34 - provided so guys in this way we can
891:36 - create the horizontal social media icons
891:39 - that can help the users in order to
891:41 - share your link on the different social
891:43 - platforms that they are using now guys
891:45 - apart from this since we have provided
891:47 - the display it is equal to flex value
891:49 - and by default the flex direction is
891:51 - horizontal in this case that is the row
891:53 - Direction over here if you want the
891:55 - social media icons to be displayed in
891:57 - the vertical Direction simply what you
891:59 - have to do is inside the container after
892:02 - display is equal to flex you can provide
892:04 - Flex Direction over here by default it
892:06 - is row but this time we can make it as
892:08 - column so that all the items are getting
892:11 - displayed in the vertical Direction so
892:13 - when we save this file now and view this
892:15 - page on the web browser as you can see
892:17 - these are the social media icons that
892:19 - are getting displayed in the vertical
892:21 - Direction over here so guys in this way
892:23 - you can change the direction of the
892:24 - icons that are getting displayed based
892:26 - on your project requirements so guys
892:28 - comment in the comment section below
892:30 - whether you you have learned something
892:31 - out of this video please make sure that
892:32 - you like this video so that it reaches
892:34 - to more people and subscribe to this
892:36 - channel so that you get the
892:37 - notifications on upcoming videos as well
892:39 - I'll see you in the next video in which
892:41 - we are going to create more HTML and CSS
892:44 - projects so stay tuned so now we will
892:46 - create a button animation and this is
892:48 - the button that is getting displayed
892:50 - over here and when we get the mouse
892:52 - cursor on this button as you can see
892:54 - this is the animation that we are going
892:55 - to create just with the help of plain
892:58 - HTML and the CSS properties so so guys
893:00 - let us move to the vs code so let us
893:03 - create a new folder inside the HTML CSS
893:05 - projects so over here we will create the
893:08 - folder and we will name it as 07 and
893:10 - then we will say button animation in
893:13 - this case so guys basically this is the
893:15 - new folder that we have created inside
893:17 - this we will create our HTML and the CSS
893:20 - files so we have index.html file and the
893:23 - style. CSS file as well guys basically
893:25 - we have both these files over here now
893:27 - inside the index.html file we will make
893:30 - use of this Mt abbreviation that is
893:32 - exclamation mark and when we press enter
893:34 - as you can see we have this HTML
893:36 - template that is getting generated so
893:38 - over here for the title part simply we
893:40 - will say button animation this time and
893:43 - then after the title we will link the
893:45 - style. CSS file that we have created
893:47 - using this link colon CSS Mt
893:50 - abbreviation so guys basically we have
893:51 - to set the hrf it is equal to the name
893:54 - of the file that is style. CSS file over
893:57 - here now guys inside the body tag what
893:59 - we have to do is we will make use of the
894:01 - a tag that is the anchor tag over here
894:03 - and we will have the class name that is
894:06 - button in this case so guys basically we
894:08 - are going to convert this a tag into a
894:10 - button and we will have the animation
894:12 - inside the button over here so guys we
894:14 - have set the text as over me in this
894:16 - case so guys let me just save this file
894:18 - now and let us start the live server
894:20 - over here from the bottom right so as
894:22 - you can see this is the link that is
894:23 - getting displayed that is having the
894:25 - text over me in this case now guys let
894:27 - us provide certain CSS properties to
894:29 - this aex tag so that we can convert this
894:32 - link into a button so guys over here
894:34 - inside the style. CSS file first of all
894:36 - we will have the body tag over here so
894:38 - that we can have the button tag at the
894:41 - center of the screen so that we can get
894:43 - this a tag at the center of the screen
894:45 - in this case so let me just provide the
894:47 - display it is equal to flex and then
894:49 - simply we will say justify content it is
894:52 - equal to Center let me just save this
894:53 - file now so as you can see we are
894:55 - getting the link at the center of the
894:57 - screen over here apart from this we will
894:59 - also provide line items it is equal to
895:01 - Center in this case so as you can see we
895:03 - are getting the link at the center of
895:05 - the page as far as the horizontal
895:07 - alignment is concerned now guys what we
895:09 - will do is simply we will provide
895:10 - certain CSS properties to this button
895:13 - class over here let me just rename this
895:15 - class name to BTN because the button
895:17 - keyword is also reserved for the button
895:20 - tag in this case let me just rename this
895:22 - class name to BTN so that we don't get
895:25 - confused with the button tag inside HTML
895:27 - so guys over here we are going to make
895:29 - use of this class that is BTN so inside
895:32 - the style. CSS file we have the dot
895:34 - character followed by the BTN now guys
895:37 - over here first of all let us provide
895:38 - the padding of 10 pixels from top and
895:41 - bottom and 20 pixels from left and right
895:44 - in this case also we will have certain
895:46 - border over here so let's say we have
895:48 - two pixels of border which is of the
895:50 - type solid this time and then we will
895:52 - have the color that is 764 ABC as far as
895:55 - the X color is concerned so guys this is
895:57 - the color that we are going to use in
895:59 - order to have the Border color and also
896:02 - the text color must be the same color so
896:04 - guys it is a best practice in order to
896:06 - copy this value of the hex color and
896:08 - save it inside a variable so guys over
896:10 - here inside the body tag we will create
896:13 - a variable that is button color over
896:15 - here so guys basically we have this
896:17 - button color variable and let us provide
896:19 - this hex color this time so basically
896:21 - this is the variable that we can use
896:23 - anywhere we want to make use of this
896:25 - color inside the body tag so guys over
896:27 - here simply we have to make use of the
896:30 - we function and inside the wear function
896:32 - we will make use of this variable that
896:34 - we have defined that is button color
896:36 - over here remember that we have to
896:38 - provide two times High fun while using
896:40 - the variable and also while declaring
896:42 - the variable over here either inside the
896:45 - root selector or the body selector so
896:47 - let me just save this file now and let
896:49 - us see the Border over here so as you
896:50 - can see we are getting the border that
896:52 - is of the two pixels solid type this
896:55 - time now guys this text color should
896:56 - also have the same border color over
896:58 - here so what we will do is simply we
897:00 - will say color it is equal to we
897:03 - function and then we will make use of
897:05 - this variable so let me just save this
897:07 - file now so as you can see both the
897:08 - colors are same now and then apart from
897:11 - this what we will do is simply we will
897:13 - remove the underline by using the text
897:15 - decoration it is equal to none and also
897:18 - we will provide certain border radius so
897:20 - that we get a good corners for this
897:22 - particular button so simply we will have
897:24 - the Border radius of 20 pixels let me
897:27 - just save this file now so as you can
897:28 - see the link is now conver converted to
897:30 - a button that is getting displayed over
897:32 - here apart from this let us also provide
897:35 - certain margin from top so that we have
897:37 - certain spacing from top so we have
897:39 - provided the 50 pixels margin from top
897:42 - of this button now guys let us create
897:43 - the animation inside this button over
897:46 - here and before that simply if you want
897:48 - to change the color of the button you
897:50 - can simply come over here and make
897:52 - changes to this color so let's say we
897:53 - want to change it to some green color
897:55 - over here so when we change this color
897:57 - to Green let's say we are using this
897:59 - particular color let me just save this
898:01 - file now so as you can see the button
898:03 - border is now converted to green color
898:05 - along with it the text is also changed
898:07 - to green color over here so guys this is
898:09 - the way that you can make use of the
898:11 - variables and simply you can make the
898:13 - changes at one location so that the
898:15 - changes are applied at all the locations
898:17 - wherever you have used that particular
898:19 - variable so as you can see this is the
898:21 - color that we are using now guys apart
898:23 - from this what we have to do is we have
898:25 - to create a rectangular shape element on
898:27 - this web page so that we can create the
898:30 - animation for this button when we get
898:32 - the mouse cursor on this particular
898:34 - button so simply we will make use of
898:36 - this button class over here and we can
898:38 - make use of the Pudo element that is
898:40 - before so guys basically this before and
898:43 - after pseudo elements will help us in
898:45 - order to create new HTML elements
898:48 - without having to provide those HTML
898:50 - elements inside the HTML page so guys
898:53 - let us check that how we can do it with
898:54 - the help of the before Pudo element so
898:57 - over here we have made use of this
898:58 - button class which is is representing
899:01 - this a tag over here always remember
899:03 - that if you want to create the new HTML
899:05 - Elements by using the before or the
899:07 - after SEO element you can do so only for
899:10 - the container tags you cannot do it for
899:13 - the tags which are not containers so
899:15 - let's say if you have the input tag
899:17 - which is not a container tag you cannot
899:19 - make use of the before and after sudo
899:21 - elements in order to add new HTML
899:24 - elements so guys inside the cly braces
899:26 - first of all we have to make use of the
899:28 - content CSS property and simply we will
899:31 - keep it as blank over here that is
899:32 - double quotes in this case now guys
899:34 - apart from this we also have to make use
899:36 - of the position CSS property it must be
899:39 - absolute so guys whenever we are making
899:41 - use of this position equal to Absolute
899:43 - CSS property we need to have the
899:45 - container So currently the container is
899:47 - button class over here and we have to
899:49 - make the position as relative for this
899:51 - parent container this time so over here
899:53 - we set the position as relative and then
899:56 - for the position equal to Absolute we
899:58 - can provide the top left bottom or right
900:00 - CSS properties so where do we want this
900:03 - box to occur exactly over here at the
900:05 - top left corner of the button so simply
900:07 - we will say top it is equal to Zer and
900:09 - also left it is equal to0 so that the
900:12 - top left corner of this particular new
900:14 - element is aligned over here at the top
900:17 - left of the button now guys apart from
900:19 - this we also want this element to have
900:22 - the width equal to 100% which should
900:24 - cover the entire button and also the
900:26 - height of 100% over here so simply we
900:29 - will say width it is equal to 100% And
900:32 - also the height CSS property is 100%
900:35 - this time and then apart from this let
900:37 - us also have certain background color so
900:39 - simply we will make use of the same
900:40 - color by using the wear function and
900:42 - then we will use this button color over
900:44 - here let me just save this file now and
900:46 - now if you see on the web page there is
900:48 - a square box that is covering the entire
900:51 - button over here now guys this
900:52 - particular square box is present on top
900:55 - of the button that we had already
900:57 - created so basically if we don't provide
900:59 - the top and left CSS property over here
901:01 - let us see what happens so we have
901:03 - commented out these lines of code let me
901:05 - just save this file now as you can see
901:07 - it is getting placed somewhere over here
901:09 - and not exactly at top of the button
901:12 - which is behind this particular
901:13 - rectangular box and then guys we also
901:15 - want this rectangular box to be present
901:18 - behind the button so what we can do is
901:20 - simply we will set the Zed index CSS
901:23 - property to minus one over here so that
901:25 - it goes behind the current button that
901:27 - is already present on the web page so
901:30 - when we save this file now it has gone
901:32 - behind the button over here and since
901:34 - the text color is also having that
901:36 - variable we are not able to make it out
901:38 - because the text color of the hover me
901:40 - text is also having the same color over
901:42 - here what we will do is instead of
901:44 - having this color simply we will set the
901:46 - color as white this time so when we say
901:48 - color it is equal to White you will be
901:50 - able to see the hover me text which
901:52 - means the button is now at the top of
901:54 - the rectangular box and when we remove
901:56 - the Z index over here which is minus one
901:58 - now the rectangle shape is on the top of
902:01 - the button so guys this is the way that
902:03 - you can make the rectangular box that
902:05 - you have created by using this before
902:07 - sudo element go behind the button this
902:10 - time so guys when we save this file now
902:12 - so basically this particular rectangular
902:14 - box is present behind the button right
902:16 - now and then guys what we will do is
902:18 - simply I'll remove this color over here
902:20 - and UNC commmand this line of code and
902:22 - also we want the top and left to be zero
902:24 - so that the Box comes exactly on top of
902:27 - the button so let us remove these
902:29 - command over here and then let me just
902:31 - save this file now so as you can see the
902:33 - box is exactly at the top of the button
902:35 - now guys we want to move this box on the
902:37 - left hand side and when we get the mouse
902:39 - cursor on this button over here the Box
902:41 - should come behind the button so that we
902:44 - can see the cool animation so what we
902:46 - will do is we will make use of the
902:48 - transform CSS property and then we will
902:50 - say translate X this time so guys
902:53 - basically this will help us in order to
902:55 - move the box and we will say 100% this
902:58 - time so let me just SA this file now so
903:00 - as you can see the box has moved to the
903:02 - left right now and when we get the mouse
903:04 - cursor over here the Box should come
903:06 - behind this particular button so simply
903:09 - what we can do is we can make use of the
903:11 - hover sudo class over here so guys
903:13 - basically we will make use of this
903:15 - button class over here and on Hover
903:17 - event which means we make use of this
903:19 - hover class we want this portion that is
903:21 - before portion over here to come on the
903:24 - right hand side so simply after the
903:25 - hover Pudo class we will make use of the
903:28 - before Pudo element over here in this
903:30 - way and then after this what we have to
903:32 - do is the before element should move on
903:35 - the right so simply we will say
903:37 - transform and then we will say translate
903:39 - X it should go to the original position
903:41 - which is zero position over here for the
903:44 - x coordinate so when we say zero let me
903:46 - just save this file now and when we get
903:48 - the mouse cursor now on the button as
903:50 - you can see the rectangular shape
903:52 - element is now coming behind the button
903:54 - over here now guys we want the smooth
903:56 - transition this time so simply what we
903:58 - will do is we will say transition CSS
904:01 - property over here for the button class
904:03 - we will say all and then we will say 1
904:05 - second as the timing and the same line
904:07 - of code should be present for the before
904:09 - element as well for the button class so
904:11 - over here we have provided the
904:13 - transition all it is equal to 1 second
904:15 - now guys whatever changes happen to the
904:17 - button or the rectangular element over
904:19 - here it will happen with a transition of
904:21 - 1 second so when we save this file now
904:23 - and now when we get the mouse cursor
904:25 - over here as you can see there's a
904:27 - transition of 1 second that we can see
904:29 - now guys we also want to hide this
904:30 - rectangular element before we get the
904:32 - mouse cursor over here on the button so
904:35 - what we can do is simply inside the
904:36 - button class we will say overflow CSS
904:39 - property it must be hidden so guys
904:41 - whatever elements are present outside of
904:44 - the border of this particular button
904:46 - class will be hidden by default so let
904:48 - me just save this file now so as you can
904:49 - see there is no element that can be seen
904:52 - and when we get the mouse cursor over
904:53 - here as you can see this is the way that
904:55 - the animation is happening now guys when
904:57 - the element covers the button we want
904:59 - want to change the text of the hover me
905:01 - that is present over here to white color
905:03 - so what we can do is simply we will say
905:05 - button class and then we will have the
905:07 - hover Pudo class over here and then we
905:10 - will have the color it is equal to white
905:12 - color let me just save this file now and
905:14 - now when we get the mouse cursor over
905:15 - here as you can see there is a smooth
905:17 - transition that is happening and the
905:19 - color of the hover me text is also
905:21 - getting converted to white color in this
905:23 - case so guys in this way you can create
905:25 - a cool animation over here with the help
905:27 - of the HTML and the CSS properties now
905:29 - guys if you want to change the color of
905:31 - the button simply as I have told you you
905:33 - can come to this variable and then
905:35 - change the color so let's say we want
905:37 - some version of the green color over
905:39 - here so let's set the color to green
905:41 - color this time and when we save this
905:42 - file now as you can see this is the
905:44 - button that is getting displayed on the
905:46 - web page and when we get the mouse
905:48 - cursor over here you can see the cool
905:50 - button animation that is happening so
905:52 - guys in this way you can set the
905:53 - required color based on your
905:55 - requirements as per the project so guys
905:57 - comment in the comment section below
905:58 - whether you have learned something out
906:00 - of this video please make sure that you
906:01 - like this video so that it reaches to
906:03 - more people and subscribe to this
906:05 - channel so that you get the
906:06 - notifications on upcoming videos as well
906:08 - I'll see you in the next video in which
906:10 - we are going to create more HTML and CSS
906:12 - projects so stay tuned so now we are
906:15 - going to create a card hover animation
906:17 - over here so basically we are going to
906:19 - create this simple card along with some
906:21 - box Shadow over here and when the user
906:24 - gets the mouse cursor on this card as
906:26 - you can see on the right hand side we
906:28 - are going to en at certain HTML elements
906:31 - with the help of the Pudo elements that
906:33 - we will Define inside the external
906:35 - stylesheet using the CSS properties so
906:38 - guys basically this is the card hover
906:40 - animation that we are going to create so
906:42 - guys let us move to the vs code so now
906:44 - we will create a new folder inside HTML
906:47 - CSS projects so in this case we are
906:49 - going to create 08 uncore and then card
906:53 - H animation as the name of the folder
906:56 - and then guys inside this we are going
906:58 - to create two files at is the index.html
907:01 - file and the style. CSS file as well so
907:04 - guys basically we have both these files
907:06 - inside the cardover animation folder and
907:09 - then inside the HTML file we are going
907:11 - to make use of this Mt abbreviation in
907:14 - order to generate this HTML template so
907:16 - guys inside the title tag we are going
907:19 - to say card over animation as the title
907:22 - of the page and we are going to link
907:25 - this style. CSS file as the external
907:27 - style sheet over here by using the link
907:30 - colon CSS Mt abbreviation so guys
907:33 - basically for the HF attribute we have
907:35 - to provide the external stylesheet as
907:37 - you can see now guys inside the body tag
907:40 - we are going to create the diff tag with
907:42 - the class container so basically we have
907:45 - the class over here for the diff tag and
907:47 - inside this diff we are going to create
907:49 - another diff tag over here and then
907:51 - simply we are going to have the class
907:53 - name that is card and then inside this
907:55 - div tag we are going to have two more
907:57 - div tags first of all we will have the
907:59 - diff tag with the class name over here
908:02 - so for this we are going to set the name
908:04 - as programming for beginners that is the
908:06 - name of this YouTube channel that you
908:08 - should definitely subscribe if you have
908:10 - not done so and then apart from this we
908:12 - are going to have another diff tag with
908:14 - the class roll over here and then for
908:16 - this D tag we are going to say YouTuber
908:19 - and coder over here so guys basically we
908:22 - have these two statements inside the
908:23 - diff tags let me just save this file now
908:26 - and let us see how the changes look like
908:28 - on the browser so we are going to run
908:30 - this live server over here so these are
908:32 - the two statements that are getting
908:33 - displayed over here now guys we are
908:35 - going to provide certain CSS properties
908:37 - in this case so first of all for the
908:39 - container class let us Define certain
908:41 - CSS properties over here so guys let us
908:43 - provide the width in this case so let's
908:45 - say we have 250 pixels of width and also
908:49 - a height over here so basically we will
908:51 - provide the height of 600 pixels this
908:53 - time apart from this we will also
908:55 - provide the white color as the
908:57 - background color over here let us change
908:59 - the version of the white color this time
909:01 - and let us provide this grayish color as
909:04 - the background color for this particular
909:06 - container class let me just save this
909:08 - file now so as you can see this is the
909:10 - container that is getting displayed let
909:12 - us adjust the height in this case so
909:14 - that we can see the card properly on the
909:16 - screen so we have provided the width of
909:18 - 200 pixels and the height of 300 pixels
909:21 - over here and this is how the card will
909:22 - look like now guys what we will do is we
909:25 - want to get this card at the center of
909:27 - the screen over here so simply we will
909:29 - provide margin as Auto Value this time
909:32 - so when we save this file as you can see
909:34 - the card is now present at the center of
909:36 - the screen apart from this we will also
909:38 - provide certain CSS properties to the
909:40 - card class that is present inside the
909:42 - container so guys what we can do is we
909:45 - can simply provide the card class name
909:47 - over here and also we will set the width
909:49 - and height as 100% so that the card
909:52 - class takes the entire withd and height
909:54 - of the container class over here and
909:56 - then apart from this we will also
909:58 - provide display it is equal to flex and
910:01 - we will say justify content as Center so
910:04 - that we are able to get this text at the
910:06 - center of this particular container so
910:09 - when we save this file now as you can
910:10 - see we are getting programming for
910:12 - beginners and then YouTuber and coder
910:14 - over here guys by default the flex
910:16 - direction is row over here so what we
910:18 - have to do is we need to make the flex
910:20 - direction as column so that both these
910:23 - strings are displayed vertically so guys
910:25 - over here we will say Flex Direction it
910:28 - is equal to column let me just save this
910:30 - file now so as you can see now both the
910:32 - text are now present at the center of
910:34 - the container as far as vertical
910:36 - alignment is concerned apart from this
910:38 - we will also provide text align it is
910:40 - equal to Center so that we get them at
910:43 - the center of the container as far as
910:45 - horizontal alignment is concerned apart
910:47 - from this let us also provide certain
910:49 - border radius over here for the
910:51 - container class so let's say we have the
910:53 - Border radius this time of 20 pixels and
910:56 - also we will provide the Box Shadow over
910:58 - here so we will provide the blur effect
911:01 - with the color that is black in this
911:02 - case so guys basically we have zero
911:05 - pixels of horizontal and vertical box
911:07 - Shadow and we are providing the blur
911:09 - effect of 20 pixels with the black color
911:11 - when we save this file now as you can
911:13 - see it is giving the shadow over here
911:16 - for this particular card let us also
911:18 - adjust the background color over here to
911:20 - some extent so that it looks more decent
911:23 - so as you can see it is now looking more
911:25 - decent over here after adjusting the
911:27 - background color guys as per your
911:29 - requirements you can provide your own
911:31 - background color based on the project
911:33 - requirements now guys apart from this we
911:35 - will make use of the before and after
911:37 - sudo elements in order to create more
911:39 - HTML elements over here that will help
911:42 - us in order to provide the hover
911:44 - animation so what we will do is for the
911:47 - card class we are going to create the
911:50 - before Pudo element so in this case we
911:52 - make use of the card class followed by 2
911:55 - * colon and then we will say before
911:57 - seudo element and then guys over here
911:59 - what we have to do is first of all we
912:01 - will have to provide the content it is
912:04 - equal to blank so we provide two times
912:06 - double string over here and then apart
912:08 - from this we also have to set the
912:11 - position it is equal to Absolute now
912:13 - guys since we are making the position
912:14 - equal to Absolute over here we need to
912:17 - make the position equal to relative for
912:19 - this particular card class so over here
912:21 - we will provide the position it is equal
912:23 - to relative this time and now since we
912:25 - have provided the position equal to
912:27 - Absolute for this before sudo element we
912:30 - can simply provide the top CSS property
912:32 - as zero and also the left CSS property
912:35 - as zero so that this new element starts
912:38 - from the top left corner of this
912:40 - particular card and then apart from this
912:42 - we will also set the width as 100% over
912:45 - here and also the height is 100% so that
912:49 - it takes the entire width and height of
912:52 - the card in this case now guys apart
912:54 - from this let us also provide the
912:56 - background color over here so we will
912:58 - provide a Blue version of the background
913:00 - color this time and let us set this
913:03 - lighter Blue version as the background
913:05 - color for this before element when we
913:07 - save this file now as you can see the
913:09 - entire card is now getting covered with
913:11 - the help of this before pseudo element
913:13 - now guys apart from this what we have to
913:15 - do is we will provide the transform CSS
913:18 - property as well in which case we are
913:20 - going to provide the skew over here so
913:23 - we are going to provide the skew by 30°
913:26 - so when we save this file now as you can
913:28 - see this is the skew CSS property that
913:31 - is applied on this particular pseudo
913:33 - element and let us also translate it to
913:35 - the right hand side so basically for
913:37 - this transform CSS property after the
913:39 - skew function that we have provided we
913:41 - can simply provide the translate
913:43 - function as well so we will provide
913:45 - translate X and we will move it by 50%
913:48 - over here and we save this file now as
913:51 - you can see we have moved it by 50% let
913:53 - us move it by 100% over here and see how
913:56 - it looks like so in this case we have
913:58 - moved it to 100% this time so guys in
914:01 - this way we have provided one of the
914:03 - HTML Elements by using the before Pudo
914:05 - element which is part of this particular
914:07 - card class over here now guys let me
914:09 - just adjust the background color for the
914:11 - Pudo element to this particular Blue
914:13 - version of the color so as you can see
914:15 - this is the pseudo element that is
914:17 - getting generated over here now guys
914:19 - similarly we will have another HTML
914:21 - element with the help of the after sudo
914:24 - element over here so simply I'm going to
914:25 - copy paste these lines of code over here
914:28 - and instead of having before we will say
914:30 - after this time and all the CSS
914:32 - properties will be same except the skew
914:35 - for which we have to provide -3° so that
914:38 - it is opposite to the one that we have
914:41 - already created so when we save this
914:43 - file now as you can see this is the way
914:45 - that the after element is also getting
914:47 - created over here now guys the portion
914:49 - that is going outside of this particular
914:51 - card we want to hide it so simply what
914:53 - we can do is for this container we can
914:55 - again provide the position it is equal
914:57 - to relative again since it is a
914:59 - container and simply we will say
915:01 - overflow it is equal to Hidden so that
915:04 - whatever HTML is outside of the boundary
915:06 - of the container it will be hidden so
915:08 - when we save this file now the portion
915:10 - of the seudo elements that we had
915:12 - created which was going outside of the
915:14 - card is Now hidden this time guys apart
915:16 - from this we will also provide certain
915:18 - opacity as well to both these Pudo
915:20 - elements so over here we will provide
915:23 - the opacity CSS property and let's say
915:25 - we provide the opacity it is equal to
915:27 - 0.7 so that we have certain kind of
915:30 - transparency which can be used in order
915:32 - to display this text when we get these
915:35 - Udo elements at the center of this card
915:37 - during the card over animation so guys
915:40 - we have provided the opacity as well of
915:43 - 0.7 for both these cards now guys
915:45 - similarly we will create the before and
915:47 - after seudo elements for this container
915:50 - class as well but this time we will make
915:52 - changes as far as translate X is
915:54 - concerned so over here simply I'm going
915:56 - to copy paste these lines of code once
915:59 - again and instead of the Dot card over
916:01 - here we will have dot container this
916:03 - time for both before and the after
916:06 - pseudo elements and then we are going to
916:08 - keep all the CSS properties same over
916:10 - here except the translate X this time in
916:13 - which case we are going to make it as
916:15 - 85% over here so guys basically the
916:18 - translate X for both that is before and
916:20 - after sudo elements will be 85 person
916:23 - this time when we save this file now as
916:25 - you can see we have another layer of the
916:28 - same sudo elements that is getting
916:30 - displayed over here now guys apart from
916:32 - this we can also provide certain box
916:34 - Shadow for the Pudo elements that we had
916:37 - created previously so that we can see
916:39 - them properly over here so inside this
916:41 - card class with the before element
916:43 - simply we are going to provide the Box
916:46 - Shadow this time and then we will have
916:49 - the 10 pixels of box Shadow and we will
916:51 - have the color as blue so let us see how
916:53 - it looks like when we save this file now
916:56 - as you can see this is the Box shadow
916:58 - that is getting appeared over here
917:00 - similarly we are going to have the box
917:02 - Shadow for the after pseudo element as
917:05 - well so when we save this file now as
917:06 - you can see over here we are getting the
917:08 - Box Shadow this time now guys when we
917:11 - get the mouse cursor on this card we
917:13 - want the Pudo elements to come towards
917:15 - the left hand side over here so what we
917:17 - can do is simply on Hover event we can
917:20 - change the translate X CSS property so
917:23 - guys over here first of all for the card
917:26 - class we are going to define the over
917:29 - sudo class over here and then after this
917:31 - we want to change the translate X
917:34 - property for the sudo element over here
917:36 - so guys simply for the card class in
917:38 - this case we are going to make use of
917:40 - the hover class over here and then we
917:42 - are going to make use of the pseudo
917:44 - element that is before and then what we
917:46 - have to do is we will simply say
917:48 - transform and then we can say translate
917:52 - this time and we will have translate X
917:54 - and it should come to 50% over here so
917:57 - guys basically we are moving the before
917:59 - Pudo element by 50% on left hand side
918:03 - and then guys similarly for the after
918:04 - Pudo element as well we want the same
918:06 - transformation so we provide comma and
918:09 - then we provide the after Pudo element
918:11 - over here so basically as you can see
918:13 - the skew is getting removed over here so
918:16 - simply what we can do is we can also
918:18 - provide the skew as well so we need to
918:20 - provide it separately so over here we
918:23 - have provided the translate X it is
918:25 - equal to 50% and also we will keep the
918:28 - skew X 30° over here and then apart from
918:31 - this for the after sudo element as well
918:34 - we will again translate it by 50% and
918:36 - the skew this time must be -30° so over
918:39 - here we can provide the -30° as the skew
918:42 - parameter so guys when we get the mouse
918:44 - cursor over here as you can see it is
918:46 - moving now towards the left but guys
918:48 - basically we want the smooth transition
918:50 - as well so what we will do is we have to
918:52 - provide the transition CSS property to
918:55 - all these codo elements so basically we
918:57 - will say transition all and then we will
919:00 - provide 0.5 seconds over here and simply
919:03 - I'm going to copy paste these lines of
919:05 - code for all the pseudo elements so that
919:08 - we have the transition that is smooth
919:10 - this time and then apart from this let
919:12 - us also increase the translate X so that
919:15 - it doesn't go towards the extreme left
919:17 - of the card so basically we are going to
919:19 - keep it as 80% over here for both these
919:22 - pseudo elements this time so when we
919:24 - save this file now as you can see this
919:26 - is the way that the transition is happen
919:28 - happening over here similarly we will
919:30 - provide the transition for the container
919:33 - Pudo elements that is before and after
919:35 - so instead of having the class we will
919:37 - simply say container over here and then
919:39 - we will provide the translate X this
919:41 - time it should be 65% over here so when
919:44 - we say 65 so that there is a gap of 15%
919:47 - between the Udo elements of both that is
919:49 - the card class and the container class
919:51 - as well so when we get the mouse cursor
919:53 - over here as you can see we are getting
919:55 - the animation for this particular card
919:57 - over here so guys basically basically we
919:59 - have the issue over here when we get the
920:01 - mouse cursor on this particular sudo
920:03 - element the other sudo element is going
920:05 - back to its original position so in
920:07 - order to solve that we can simply
920:09 - provide the container hover class for
920:11 - all these Transformations that we have
920:14 - provided so let me change that quickly
920:16 - over here so guys as you can see we have
920:18 - the hover sudo class for the container
920:20 - class over here and then after that we
920:22 - have provided the before and after sudo
920:25 - element for the card class and also the
920:27 - before and after Pudo element for the
920:29 - container class as well so when we save
920:31 - this file now now you can see that all
920:33 - the elements are now coming together as
920:35 - far as the animation is concerned so
920:37 - guys in this way you can create the
920:39 - simple card hover animation over here
920:41 - based on your requirements you can
920:43 - change the colors as well and then apart
920:45 - from this we can also make some changes
920:47 - to the text that is getting displayed
920:49 - over here so we can also provide certain
920:51 - scaling as far as the transformation of
920:53 - this text is concerned when the user
920:55 - gets the mouse cursor on these cards
920:58 - over here so guys comment in the comment
920:59 - section below whether you have learned
921:01 - something out of this video please make
921:03 - sure that you like this video so that it
921:05 - reaches to more people and subscribe to
921:07 - the channel so that you get the
921:08 - notifications on upcoming videos as well
921:10 - I'll see you in the next video in which
921:12 - we are going to create more HTML and CSS
921:15 - projects so stay tuned so now we are
921:18 - going to display these analytics icons
921:20 - as you can see this is the like or the
921:22 - heart icon and then we have the comment
921:25 - icon as well and then we have the share
921:27 - icon as well and when the user gets the
921:29 - mouse cursor over here on these icons
921:31 - they are going to scale themselves by
921:33 - 1.5 times so guys let us move to vs code
921:36 - so guys let us create another folder
921:38 - over here inside the HTML CSS projects
921:41 - folder so in this case we are going to
921:43 - have the folder name as analytics data
921:46 - so guys basically we have this new
921:48 - folder over here inside which we are
921:50 - going to create the index.html file and
921:53 - the style. CSS file as well so now we
921:55 - have created both the files over here
921:57 - now inside the index.html file we are
922:00 - going to quickly create the HTML
922:03 - document and we have the title that is
922:05 - analytics data for Instagram so guys
922:08 - simply we are going to have three icons
922:10 - over here in order to have the like
922:12 - button comment button and the share
922:14 - button in this case now apart from this
922:16 - we will also link the external
922:18 - stylesheet that is style. CSS file with
922:20 - the help of the link tag over here and
922:23 - the HF it is equal to style. CSS now
922:26 - guys inside the body tag over here
922:28 - simply we are going to have the diff tag
922:30 - with the class container this time and
922:32 - then inside this we are going to have
922:34 - the a tag first of all so basically we
922:37 - make use of this a tag inside which we
922:39 - are going to make use of the Box icon so
922:42 - guys basically in order to make use of
922:44 - the icons you can simply use the Box
922:46 - icons.com website where you will find
922:49 - the CSS link over here so simply I'm
922:51 - going to copy this particular link I
922:53 - will provide both these links in the
922:55 - description section below so let me just
922:57 - copy this link link and paste it under
923:00 - the head section of the HTML file so
923:03 - guys basically this is the URL from
923:05 - where the icons will be referenced and
923:07 - will be displayed on the web page
923:09 - wherever we are going to make use of the
923:11 - Box icons now guys after this we have to
923:14 - go to the website that is box icons.com
923:17 - so simply let me just open this website
923:19 - on the browser so guys over here this is
923:21 - the Box icons website now over here
923:23 - simply you can search for the different
923:25 - icons so the first icon that we want to
923:28 - use is the heart icon this time so
923:30 - simply we have searched for heart and
923:32 - when we press enter as you can see this
923:34 - is the icon that we want to use you can
923:36 - use any of the icons based on your
923:38 - project requirements now guys we will
923:41 - click on this particular icon and as you
923:43 - can see on the right hand side we have
923:44 - to go to this font option and then we
923:47 - have this I tag over here with the class
923:50 - name so guys basically this class is
923:52 - used in order to refer to this
923:55 - particular icon from the box icons
923:57 - website so let let me just copy this I
923:59 - tag over here inside the a tag and then
924:02 - after this we will also have the span
924:04 - tag over here and simply we will have
924:06 - the class as data for this pan tag and
924:09 - then we will have the content as 60 over
924:12 - here so we can have any dummy data over
924:14 - here in order to show the count of the
924:16 - hearts and then apart from this let me
924:19 - just copy paste these lines of code that
924:21 - is the links multiple times over here
924:23 - instead of heart in this case we are
924:25 - going to have the other icons that is
924:28 - comment and the share button so over
924:31 - here we search for comment and basically
924:33 - this is the comment that we want to show
924:35 - on the web page so when we click on this
924:38 - we are going to copy this particular
924:39 - itag and similarly let me copy the itag
924:42 - for the share icon as well so guys over
924:45 - here as you can see we have the it Texs
924:47 - with the different class names that will
924:49 - help us in order to display the icons on
924:51 - the web page now guys let me just save
924:53 - this file now and let us start the live
924:55 - server over here so guys as you can see
924:57 - these are the three icons that we have
924:59 - displayed on the web page so guys now we
925:01 - will provide certain CSS properties to
925:03 - these classes that we have defined
925:05 - inside the HTML file so inside the
925:07 - style. CSS file for the container class
925:10 - let us provide certain background color
925:12 - over here and this time we will provide
925:14 - the white version of the background
925:16 - color over here so guys basically we
925:18 - will set this particular background
925:19 - color this time and also we will provide
925:22 - the padding so let's say from top and
925:24 - bottom we want 10 pixels of padding and
925:26 - from left and right we want 20 20 pixels
925:28 - of padding let me just save this file
925:30 - now as you can see this is the diff tag
925:33 - that is getting displayed over here guys
925:35 - apart from this we will also set the
925:37 - width as well so let's say we provide
925:39 - the width of 30% over here when we save
925:41 - this file as you can see this is the div
925:44 - that is getting displayed and then after
925:46 - this also we will make the display it is
925:49 - equal to flex and also we will set the
925:51 - justify content it is equal to Center so
925:54 - that all the icons are displayed at the
925:57 - center as far as as far as the
925:58 - horizontal alignment is concerned now
926:00 - guys you can see that there is no
926:02 - spacing in between these icons so what
926:04 - we will do is instead of providing the
926:06 - center as the justify content we will
926:09 - say space evenly over here so when we
926:11 - save this file now as you can see there
926:13 - is enough space over here in between all
926:16 - the icons now guys what we can do is
926:18 - simply we can also provide the Border
926:20 - radius as well so we will provide the 20
926:23 - pixels value for the Border radius and
926:25 - also we will provide the Box Shadow so
926:27 - let we just provide the horizontal and
926:29 - vertical box Shadow and over here we
926:32 - will provide the shadow as dark blue
926:34 - color this time so when we save this
926:35 - file now as you can see we are getting
926:38 - the dark blue color as the shadow for
926:40 - this particular diff tag now guys let us
926:43 - get this diff tag at the center of the
926:45 - screen so simply we will provide margin
926:47 - it is equal to Auto so as far as the
926:49 - horizontal alignment is concerned we
926:52 - have got the diff tag at the center of
926:54 - the screen guys this is just a part of
926:56 - the web page in which case you can
926:58 - provide all these icons which is the
927:00 - part of the analytics and user can
927:02 - interact with these icons in order to
927:05 - like comment or share and if you are new
927:07 - to this YouTube Channel please make sure
927:09 - that you subscribe to this YouTube
927:10 - channel so that you get the
927:12 - notifications for the upcoming videos in
927:14 - which we are going to create more HTML
927:16 - and CSS projects now guys so far we have
927:18 - provided the required CSS properties for
927:21 - this particular diff tag now inside the
927:23 - diff tag we need to provide the CSS
927:25 - properties for all these links which are
927:27 - being represented by this a tag over
927:29 - here so guys what we will do is simply
927:31 - we will provide the class name over here
927:34 - as link this time for the a tags and
927:37 - then let me just copy the class names
927:39 - for all the a tags over here so that we
927:42 - can provide the CSS property to this
927:44 - link class so guys let me just copy this
927:46 - link class name over here and then
927:49 - inside this first of all we will provide
927:51 - text decoration as none so that we don't
927:54 - get this underline as you can see so
927:56 - when we save this file now there is no
927:57 - more underline apart from this we want
928:00 - to change the font color to Black by
928:02 - default so we provide the black color as
928:04 - the font color so when we save this file
928:06 - now you can see the changes this time
928:09 - now guys what we want to do is we want
928:10 - to change the font colors of these icons
928:13 - as well we will keep this heart icon as
928:16 - red color so instead of providing the
928:18 - CSS properties inside the external
928:21 - stylesheet we will simply provide the
928:23 - inline style over here so for this
928:25 - particular IE class that is having the
928:27 - heart icon simply we will provide the
928:29 - style and we will say color it is equal
928:32 - to Red this time so when we save this
928:34 - file now as you can see we are getting
928:36 - the red color over here apart from this
928:38 - we will also provide the color CSS
928:41 - property for the other two icons as well
928:43 - so for the comment part let us provide
928:45 - the color as blue over here and for the
928:48 - share part let us provide the other
928:50 - color that is green color this time guys
928:52 - basically we have the red blue and green
928:54 - color for all these icons when we save
928:57 - this file now as you as you can see
928:58 - these are the colors that are getting
928:59 - displayed over here now guys when the
929:01 - user gets the mouse cursor on these
929:03 - icons we want to increase its size so
929:06 - what we can do is simply inside the link
929:09 - class we need to refer to this it tag
929:11 - over here so we come to this style. CSS
929:14 - file we provide this link class and then
929:17 - the I tag over here and then after this
929:20 - we want to make use of the transform CSS
929:22 - property in which case we will make use
929:24 - of the scale function over here we will
929:27 - say that it should scale by 1.3 times
929:30 - this time so when we save this file now
929:32 - so if you see the changes already there
929:34 - is a scaling that is happening over here
929:36 - now guys we want the scaling on the
929:38 - mouse hover so we have left out the
929:40 - hover sudo class this time so simply we
929:43 - provide the colon after the it tag and
929:45 - then we say hover sudo class when we
929:48 - save this file now as you can see these
929:49 - are the default sizes for all these
929:51 - icons and when we get the mouse cursor
929:53 - over here you can see that the scaling
929:56 - is happening by 1.3 times over here let
929:59 - us increase the scaling by 1.5 this time
930:01 - so that it gives a decent look so when
930:03 - we save this file now as you can see
930:06 - this is a scaling that is happening and
930:08 - we want the scaling to happen smoothly
930:10 - so simply for the link class we can
930:13 - provide the transition CSS property and
930:16 - we can say all over here and let's say
930:18 - we provide 0.5 second as the timing so
930:20 - when we save this file now we still
930:22 - cannot see the transition that is
930:24 - happening smoothly so guys we have done
930:26 - the mistake over here this CSS property
930:28 - should belong to the it tag this time so
930:31 - basically we will provide the link class
930:33 - followed by the it tag and then over
930:35 - here we will provide the transition CSS
930:38 - property we will say all and then 0.5
930:41 - seconds so since we are making the
930:43 - changes for this I tag the transition
930:46 - property should be associated with the I
930:48 - tag over here so when we save this file
930:50 - now and get the mouse Cur over here as
930:52 - you can see the transition is happening
930:55 - now the scaling of the icon is happening
930:57 - to 1.5 five times with the 0.5 seconds
931:00 - timing so guys in this way you can
931:01 - provide your own buttons based on your
931:03 - requirements with the help of these
931:05 - icons the links I have already given in
931:07 - the description section below so comment
931:09 - in the comment section below whether you
931:10 - have learned something out of this video
931:12 - please make sure that you like this
931:14 - video so that it reaches to more people
931:16 - and subscribe to this channel so that
931:18 - you get the notifications on upcoming
931:20 - videos as well I'll see you in the next
931:21 - video in which we are going to create
931:23 - more HTML and the CSS projects so stay
931:26 - tuned so guys now we are going to create
931:29 - the simple registration form in which
931:31 - case we are going to have multiple input
931:34 - Fields over here along with the password
931:36 - input field as well and when the user
931:38 - gets the mouse cursor on any of the
931:40 - input Fields as you can see when we
931:42 - click on this input field over here we
931:44 - are going to get this feedback with the
931:46 - help of this box Shadow on that input
931:48 - field so guys basically when you click
931:50 - on any of the input Fields over here we
931:53 - will have the box Shadow for that
931:55 - particular input field and apart from
931:57 - this when we get the the mouse cursor on
931:58 - this register button it is going to
932:00 - scale itself with the help of the scale
932:03 - function so guys we are going to create
932:05 - this registration form so let us move to
932:07 - the vs code so now we will create
932:09 - another folder over here inside the HTML
932:12 - CSS projects we will name it as
932:14 - registration form so guys basically we
932:17 - have this new folder that is created
932:19 - inside this we are going to create the
932:21 - HTML and the CSS files so basically we
932:24 - have the index.html file and the style.
932:27 - CSS file which will be the external
932:29 - style sheet over here now guys inside
932:31 - the HTML file we are going to create
932:34 - this HTML document and then we will have
932:37 - the title that is registration form over
932:40 - here for the title tag and then we will
932:43 - also link the external stylesheet with
932:45 - the help of this link tag over here so
932:47 - we have the HF it is equal to style. CSS
932:50 - file now guys over here inside the body
932:53 - tag we will have the div tag with the
932:55 - class container inside which we are
932:57 - going to have the different input fields
932:59 - that will help the user in order to
933:01 - complete the registration so guys
933:03 - basically we have the sff tag with the
933:05 - class container over here now let us
933:07 - provide certain input Fields over here
933:09 - so we use the input tag along with the
933:12 - type it is equal to text and then the
933:14 - first input field will be the full name
933:16 - over here we will also keep the ID value
933:19 - as same that is full name this time and
933:21 - then we will also have the placeholder
933:24 - and we will say enter full name over
933:26 - here so guys basically we we have the
933:28 - full name as the first input field apart
933:30 - from this let us also have the class
933:32 - attribute this time and then we will say
933:34 - input hyphen field over here so guys
933:37 - basically we are going to provide
933:38 - certain CSS properties to this class
933:41 - name and then after this let us provide
933:43 - certain line brakes over here so we have
933:46 - couple of line brakes this time now
933:48 - similarly we will provide more input
933:50 - Fields over here so let me just copy
933:52 - paste this line of code and then after
933:54 - the full name we will ask the user to
933:56 - provide the username over here and then
933:59 - the same value we will provide for the
934:01 - ID part as well and for the placeholder
934:04 - as well and then for the third input
934:06 - field we will ask the user to provide a
934:08 - password so that the user can set the
934:10 - username and password over here so
934:12 - basically we have the password as the
934:15 - third field and then we will ask to
934:18 - confirm the password so basically user
934:20 - is supposed to provide the password once
934:22 - again so that there is no mistake that
934:24 - is made by the user so basically we have
934:27 - confirmed password as the placeholder
934:29 - this time guys for these two input
934:31 - fields that is password and confirm
934:32 - password we will keep the type as
934:34 - password over here so that it is not
934:36 - visible to anyone else on the screen so
934:39 - basically we have set the type as
934:41 - password over here and then guys in the
934:43 - end we want the email of the user to be
934:45 - set so basically so we have provided the
934:47 - name value as email over here and also
934:50 - the ID as well and for the placeholder
934:52 - as well we have updated the enter email
934:54 - this time so guys basically we have all
934:56 - these input felds inside the container
934:59 - and then guys after this also we will
935:01 - provide the button as well for
935:02 - registration so simply we provide the
935:04 - button tag over here and also we will
935:06 - provide the class as register over here
935:09 - so this is the button tag with the class
935:11 - register and also we will have the text
935:14 - that is register for this particular
935:15 - button let me just save this file now
935:18 - and start the server so that we can see
935:20 - the changes on the web page so guys as
935:22 - you can see these are all the input
935:23 - Fields by default that are getting
935:25 - displayed over here we have not provided
935:28 - any CSS properties so far so guys
935:30 - basically we are going to provide the
935:32 - CSS properties one by one in order to
935:35 - make this registration form look more
935:37 - attractive so guys what we will do is
935:39 - inside the style. CSS file first of all
935:42 - we will make use of this class name that
935:44 - is container over here so we simply
935:46 - provide dot followed by the container
935:48 - class and then we will have the width of
935:51 - 30% so let's say we have the width of
935:53 - 30% over here also we will provide
935:56 - certain background color so let's say we
935:58 - have this light version of green color
936:00 - as the background color this time so let
936:02 - me just save this file now as you can
936:04 - see we have this light version of the
936:07 - green color as the background color over
936:09 - here apart from this we will also set
936:11 - the display it is equal to flex and
936:13 - since all the flex items must be present
936:16 - in a column so basically we will set the
936:18 - flex direction as column over here so
936:21 - when we save this file now as you can
936:23 - see these are all the flex items that
936:25 - are displayed right now now guys apart
936:27 - from from this we also want to set the
936:29 - padding as well so simply we will keep
936:31 - the padding as 20 pixels and also we
936:33 - will provide certain border radius over
936:36 - here so we provide the Border radius of
936:38 - 20 pixels once again we will provide the
936:41 - Box Shadow so over here we will provide
936:44 - 10 pixels of blur effect with the color
936:46 - that is black color over here when we
936:48 - save this file now as you can see this
936:50 - is the registration form that is getting
936:52 - displayed this time now guys apart from
936:54 - this we also want the margin it is equal
936:56 - to auto so that we can get the
936:59 - registration form at the center of the
937:01 - screen over here as far as the
937:02 - horizontal alignment is concerned so as
937:04 - you can see this is a very simple
937:06 - registration form that the user can use
937:09 - in order to register himself or herself
937:11 - now guys after this let us provide
937:13 - certain CSS properties for these input
937:15 - Fields over here so simply we are going
937:18 - to make use of this class name that is
937:20 - input hyphen field so let me just copy
937:22 - this class name and then inside the
937:25 - style. CSS file we will make use of this
937:27 - class name over here first of all let us
937:30 - provide certain padding so let's say we
937:32 - have the padding of 10 pixels over here
937:34 - also we have the Border radius of 10
937:37 - pixels let me just save this file now as
937:40 - you can see this is the way that the
937:41 - registration form is getting displayed
937:43 - this time apart from this let us also
937:45 - remove the line brakes that we have
937:48 - provided since it is creating the Extra
937:50 - Spaces in between the input Fields so
937:53 - guys over here we have only kept one
937:55 - line break let me just save this file
937:56 - now and as you can see these are all the
937:59 - input fields that are getting displayed
938:00 - over here now guys what we want to do is
938:02 - when the user gets the mouse cursor over
938:04 - here and clicks on any of the input
938:06 - fields we want certain box Shadow to be
938:09 - provided to these input Fields so simply
938:13 - inside the style. CSS file we have to
938:15 - make use of this class name that is
938:17 - input field over here and we will make
938:20 - use of the Pudo class that is focus this
938:23 - time so guys basically this Udo class is
938:25 - responsible in order to provide any CSS
938:28 - properties when the user gets the mouse
938:30 - cursor on the input field and clicks
938:33 - inside the input field over here so that
938:35 - is the time when those CSS properties
938:37 - will be applied so guys over here what
938:40 - we will do is simply we will provide the
938:42 - Box Shadow over here and this time we
938:44 - will say 10 pixels of box Shadow and we
938:47 - will provide the blue color as the Box
938:49 - Shadow this time when we save this file
938:51 - now when we get the mouse cursor over
938:53 - here and click on it as you can see we
938:55 - are getting the blue color over here and
938:57 - when we click on the other input Fields
938:59 - as well we are getting the blue color as
939:01 - the Box Shadow let us increase the blur
939:04 - effect to 15 pixels over here when we
939:06 - save this file now as you can see the
939:08 - blue color is now getting more visible
939:10 - over here with the light green
939:12 - background color that we have provided
939:14 - to The Container now guys apart from
939:15 - this let us also provide certain CSS
939:18 - properties to this register button over
939:20 - here so simply we will make use of this
939:22 - register class and then we will provide
939:25 - certain CSS properties to this Reg
939:27 - register class by using the dot
939:29 - character so over here first of all we
939:31 - will provide the width as minimum
939:33 - content over here let me just save this
939:35 - file now as you can see only the
939:37 - required space is being taken by this
939:39 - particular button also for this
939:41 - container we will set the Align items so
939:44 - that we get all the items at the center
939:46 - of the container so when we say align
939:48 - items it is equal to Center as you can
939:50 - see all the input fields and the
939:52 - register button is now at the center of
939:54 - the container and for the input field we
939:57 - we will set the width as 80% over here
940:00 - so that there is no Extra Spaces that is
940:02 - left as you can see on the left hand
940:04 - side and the right hand side of the
940:05 - input Fields so basically we will keep
940:08 - the width as 80% over here so as you can
940:10 - see 80% of the space is being taken by
940:13 - all the input Fields this time now guys
940:15 - for the register button let us provide
940:17 - more CSS properties over here so we will
940:20 - provide the background color over here
940:22 - as green color also we will set the
940:25 - color as white color that is the font
940:27 - color over here and then apart from this
940:29 - we will also set the padding of let's
940:31 - say 5 pixels this time and the Border
940:34 - radius as well so simply we will say
940:36 - border radius of 10 pixels when we save
940:39 - this file now as you can see this is the
940:40 - button that is getting displayed over
940:42 - here we will also remove the border so
940:45 - simply we will say border it is equal to
940:47 - none and let us increase the padding to
940:49 - 10 pixels this time so this is a decent
940:52 - register button that is getting
940:54 - displayed over here also we want to
940:56 - change the cursor icon so we will set
940:59 - the cursor it is equal to pointer so
941:01 - when we get the mouse cursor over here
941:03 - on the register button it is getting
941:05 - converted to the hand tool over here now
941:07 - guys apart from this when the user gets
941:09 - the mouse cursor on this register button
941:11 - we want to scale the button so how we
941:13 - can do that so simply we will make use
941:15 - of the overover sudo class over here so
941:18 - we will say register colon hover and
941:21 - then simply we will say transform and
941:23 - this time we will make use of the scale
941:25 - and it should scale by 1 two times over
941:28 - here so when we save this file now and
941:30 - when we get the mouse cursor over here
941:32 - as you can see the button is scaling
941:34 - Itself by 1.2 times that we have
941:37 - provided and if we want the smooth
941:38 - transition simply we will provide the
941:40 - transition CSS property to this register
941:43 - button over here so we provide
941:46 - transition and we will say all and this
941:48 - time we will say 0.5 seconds as the
941:50 - timing when we save this file now and
941:53 - now when we get the mouse cursor as you
941:55 - can see there's a smooth transition that
941:57 - is happening over here the register
941:59 - button is increasing its size so guys
942:01 - basically this is the way that you can
942:03 - provide the transition effect to any of
942:05 - the HTML elements based on your
942:07 - requirements and then guys when we get
942:09 - the mouse cursor over here and click on
942:11 - any of the input Fields basically we are
942:13 - getting the Box shadow of the blue color
942:16 - this time so that the user gets the
942:18 - feedback that this is the input field
942:20 - that is getting clicked and you are
942:22 - supposed to provide the data inside this
942:24 - field so guys simply let us provide
942:26 - certain data over here so we have
942:28 - programming for beginners that is the
942:30 - name of this YouTube channel which you
942:32 - should definitely subscribe if you have
942:33 - not done so and let us provide the
942:36 - programming as the username also we will
942:39 - provide the password so let's say we
942:41 - provide some password over here and also
942:43 - we want to confirm password so simply we
942:46 - provide the password and then we will
942:48 - provide certain email ID over here so
942:51 - program gmail.com and then simply the
942:54 - user have to go to register over here in
942:56 - order to register himself or herself so
942:59 - guys this is a very simple registration
943:01 - form that we have created just by using
943:03 - the plain HTML and the CSS properties so
943:06 - guys comment in the comment section
943:07 - below whether you have learned something
943:09 - out of this video please make sure that
943:11 - you like this video so that it reaches
943:13 - to more people and subscribe to this
943:15 - channel so that you get the
943:16 - notifications on upcoming videos as well
943:18 - I'll see you in the next video in which
943:20 - we are going to create more HTML and the
943:22 - CSS projects so stay tuned