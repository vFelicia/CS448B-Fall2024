00:00 - so now we will see a simple responsive
00:02 - web design using the flex box in CSS so
00:06 - guys in this example we will create a
00:08 - simple responsive design using flexbox
00:10 - model so let us move to the vs code over
00:13 - here and simply I'm going to remove the
00:15 - previous lines of code inside the HTML
00:17 - and the CSS files now guys what we are
00:19 - going to do is simply we are going to
00:21 - create a diff tag with the class
00:24 - container over here inside this D tag
00:26 - first of all we will have the header
00:28 - class over here which means we are going
00:30 - to have the diff tag with the class
00:31 - header and inside this we will say this
00:34 - is heading so guys we can have the
00:36 - heading for the web page in this case
00:38 - and then apart from this we will also
00:40 - have another class that is row over here
00:43 - that will have certain content now guys
00:45 - inside this row class that is the diff
00:47 - tag with the class row we are going to
00:50 - have three elements over here first of
00:52 - all we will have the navigation bar that
00:54 - that will be a vertical navigation bar
00:56 - over here so we have the name bar inside
00:58 - which we will have four it items over
01:00 - here so we will have the diff tag inside
01:02 - the diff tag we will have the links with
01:04 - the help of the a tag over here so we
01:06 - have the hash character for the HF
01:08 - attribute and then we are going to have
01:10 - the home as first item inside the
01:13 - navigation bar and then similarly we
01:15 - will have other items over here so guys
01:17 - let us say we have blog in this case as
01:19 - the second item then we have the videos
01:21 - as well and then we will have the about
01:24 - section over here because apart from
01:26 - this inside the same row we are going to
01:28 - have the main content div tag as well so
01:31 - simply we are going to say content over
01:33 - here and then we are going to say a
01:35 - simple statement that is this is a diff
01:38 - tag with content so guys basically in
01:40 - order to identify that this is the
01:42 - content diff tag over here we have
01:45 - provided a simple statement in this case
01:47 - and then apart from this we can also
01:49 - generate certain random text in this
01:51 - case so guys let us say we have 40 words
01:53 - as the random text that is getting
01:55 - generated over here and then guys apart
01:57 - from this in the same row on the right
01:59 - hand side we will have another diff tag
02:01 - which will be the content at the right
02:03 - hand side so simply we will have the
02:05 - class name that is content and Then
02:07 - followed by hyphen and then we have the
02:09 - right keyword over here and in this case
02:11 - we will say this is a diff tag with
02:14 - right content so guys basically we have
02:16 - a simple statement over here and then
02:19 - apart from this we will have certain
02:20 - random text that is getting generated
02:22 - this time we will have only 10 words
02:24 - over here so guys this is the HTML
02:26 - content that we have written inside our
02:29 - web page which we are going to make
02:30 - responsive so guys let me just save this
02:32 - file now and try reloading this page on
02:34 - the browser so as you can see this is
02:36 - the content that we have provided which
02:38 - is getting displayed from top to bottom
02:41 - over here now guys inside the style. CSS
02:43 - file we need to provide certain CSS
02:46 - properties in such a way that we need to
02:48 - make this web page as a responsive web
02:50 - page so first of all we will make use of
02:53 - this container class over here and we
02:55 - will make it as a flex container in this
02:57 - case so guys basically we will make use
02:59 - of of this display CSS property and the
03:01 - value we are going to use is flex over
03:03 - here and then apart from this what we
03:05 - will do is we will set the flex
03:07 - direction as column in this case so that
03:10 - all the elements are getting displayed
03:12 - from top to bottom let me just save this
03:14 - file now and try reloading this page
03:16 - once again on the browser so as you can
03:17 - see all the elements by default were
03:19 - displayed from top to bottom and there
03:21 - is no change over here now guys for the
03:23 - heading part what we will do is we will
03:25 - make use of this class name that is haer
03:27 - and we will provide certain CSS property
03:30 - for this header class over here so guys
03:32 - first of all we will change the
03:33 - background color to yellow in this case
03:36 - apart from this we will also have the
03:37 - margin bottom property and we will set
03:40 - it to 10 pixels over here we will also
03:42 - set the padding as 20 pixels in this
03:44 - case also we want to set the font size
03:47 - over here to let's say 2 em in this case
03:49 - so basically it will be two times the
03:51 - default font size over here let me just
03:54 - save this file now and try reloading
03:56 - this page so as you can see we have this
03:57 - is heading text over here and and it is
04:00 - also having the background color as a
04:01 - yellow color over here and it is also
04:03 - having certain margin bottom property as
04:06 - well now guys what we will do is this
04:08 - row container that we have that is the
04:10 - diff tag with the class row we want to
04:12 - make it as a flex container which should
04:14 - be having the flex direction as the row
04:16 - Direction so that all these elements are
04:19 - getting displayed from left to right
04:21 - instead of top to bottom so guys inside
04:23 - the style. CSS file over here simply we
04:26 - will use the class name that is Row in
04:28 - this case and we will use the display
04:30 - property we will set the value as Flex
04:32 - in this case and the flex direction
04:34 - should be equal to row over here which
04:36 - is the default value let me just save
04:38 - this file now and try reloading this
04:39 - page once again on the browser so as you
04:41 - can see the Nave bar is displayed on the
04:44 - left and then we have the main content
04:46 - that is at the middle and then the side
04:48 - content that is present on the right
04:50 - hand side over here now guys we will
04:51 - also provide certain spacing in between
04:54 - them so let us provide those CSS
04:56 - properties as well so what we will do is
04:58 - inside the row what whatever diff tags
05:00 - are present we want certain padding and
05:02 - the margin to be provided over here so
05:05 - we have the diff tags inside the row
05:07 - class over here and simply we are going
05:09 - to provide certain padding in this case
05:11 - so let's say we have 10 pixels of
05:13 - padding let me just save this file now
05:15 - and try reloading this page so as you
05:16 - can see we have the padding that is
05:18 - getting applied over here now guys the
05:20 - padding is also getting applied to the
05:22 - diff TX inside the Nave bar as well so
05:24 - in order to avoid that we want the
05:26 - padding to be applied to the direct diff
05:29 - child of the row class over here so that
05:32 - only these diff tags that is the Nave
05:34 - bar and the content and the content
05:36 - right classes should have the padding
05:38 - and not these D Texs which are the part
05:40 - of the navigation items so guys let me
05:42 - just save this file now after providing
05:44 - this greater than symbol which means the
05:46 - direct child should be affected with
05:48 - these CSS properties over here and when
05:51 - we reload this page as you can see now
05:53 - there is no padding that is applied to
05:55 - these navigation items over here and we
05:57 - have also provided the spacing in this
05:59 - case now guys let us provide certain CSS
06:01 - properties to this navigation bar and
06:03 - make it a proper vertical navigation bar
06:06 - over here so what we can do is simply
06:08 - for this na bar we will make it as a
06:10 - flex container which will have the flex
06:12 - direction as column over here so guys we
06:15 - have the Nave bar class name in this
06:16 - case we will have the display equal to
06:19 - flex over here and the flex direction
06:21 - should be column in this case so guys
06:23 - basically we have the column value let
06:25 - me just save this file now and try
06:27 - reloading this page so as you can see
06:28 - there is no change right now so guys
06:30 - inside this na bar we want the a tags to
06:33 - be having certain CSS properties and
06:35 - also the diff tags as well so guys what
06:38 - we will do is simply I'm going to copy
06:40 - these lines of code over here and then
06:42 - inside the na bar we have the diff tags
06:44 - in this case which should have certain
06:46 - padding over here so guys basically we
06:47 - will have the padding of five pixels
06:49 - this time and then for the na bar as
06:51 - well we are going to have certain
06:53 - background color so let's say we have
06:55 - the value as Aqua which is the
06:57 - background color for the Nave bar let me
06:58 - just save this I now and TR reloading
07:00 - this page so as you can see we have the
07:02 - padding and the background color that is
07:04 - getting displayed over here now guys
07:06 - apart from this for the a tags as well
07:08 - we want to provide certain CSS
07:10 - properties so inside the Nave bar class
07:12 - name we have the diff tag followed by
07:14 - the a tag over here first of all we will
07:17 - set the color equal to Black so
07:19 - basically this is the text color that we
07:21 - are setting and then apart from this we
07:23 - also want the text decoration to be none
07:26 - so that the underlines that are getting
07:28 - displayed over here should not not be
07:29 - displayed so let me just save this file
07:31 - now and try reloading this page once
07:33 - again on the browser as you can see
07:35 - there are no underlines over here now
07:37 - guys when we get the mouse cursor on
07:39 - these diff tags what we want to do is we
07:41 - want to change the background color so
07:43 - guys what we can do is simply we will
07:45 - copy these lines of code over here and
07:47 - we need to provide the hover event for
07:49 - the diff tags in this case for which we
07:51 - want to change the background color so
07:53 - guys basically we want to change the
07:55 - background color to this chart reuse
07:57 - color which is a light color over here
07:59 - here let me just reload this page so as
08:01 - you can see the background color is now
08:03 - getting updated when we get the mouse
08:05 - cursor on one of the items for this
08:07 - navigation bar over here so guys in this
08:09 - way we have completed the CSS properties
08:12 - for the navigation bar you can provide
08:14 - your own CSS properties for the
08:16 - navigation bar while you're practicing
08:18 - on your own now guys apart from this let
08:20 - us say we want the width of this
08:22 - particular content to be four times
08:24 - larger compared to this particular
08:26 - navigation bar and two times larger
08:28 - compared to the right content over here
08:31 - so guys we can use the class names in
08:33 - this case so what we will do is the Nave
08:35 - bar should have the flex equal to one
08:37 - over here so simply we will come to this
08:39 - Nave bar in this case which is a
08:41 - container and we will say Flex it is
08:43 - equal to 1 in this case basically it is
08:45 - a container as well as it is the flex
08:48 - item inside this row container over here
08:51 - and then apart from this we will also
08:52 - have the class names that is content and
08:54 - the content right in this case so guys
08:57 - basically we will have the dot content
08:59 - over here for this Flex item we will set
09:01 - the flex S4 in this case basically this
09:04 - Flex CSS property is nothing but it is
09:06 - flex grow over here but we are using the
09:08 - shorthand method that is the flex CSS
09:11 - property and then apart from this we
09:13 - will also have the content right class
09:15 - name and then for this class name we
09:17 - will set the flex value equal to two so
09:19 - guys let us check that as well when we
09:21 - set the flex equal to two and also we
09:24 - will change the background color to Aqua
09:26 - background color once again so that the
09:28 - colors are SA same for the navigation
09:30 - bar and the right hand side content as
09:32 - well so let me just save this file now
09:34 - and try reloading this page once again
09:36 - on the browser so as you can see we have
09:38 - the flex equal to one for this
09:40 - navigation bar and four times Flex for
09:42 - this particular content in the middle
09:45 - and two times Flex for this right hand
09:47 - side over here if we want to change the
09:49 - width of this content in this case we
09:51 - can simply increase the flex number for
09:54 - the content class name so let us check
09:56 - that as well so instead of having the
09:58 - four number we can have six in this case
10:00 - let me just save this file now and try
10:02 - reloading this page once again on the
10:04 - browser so as you can see the width of
10:06 - this content has increased to six times
10:08 - compared to the navigation bar over here
10:11 - and three times compared to the right
10:13 - hand side content over here because we
10:15 - have provided Flex equal to 2 for this
10:17 - right hand side content so guys this is
10:19 - a very simple basic design of the
10:22 - website or the web page that we have
10:24 - created over here now guys what we want
10:26 - to do is let us open the console in this
10:28 - case and when we we decrease the width
10:30 - of this particular screen we want the
10:32 - flex direction of this row container
10:35 - over here to change to the colum
10:37 - Direction so when we change the width of
10:39 - the screen now as you can see it is not
10:41 - completely responsive and now we are
10:43 - getting the horizontal scroll bar over
10:45 - here but we need to use the media query
10:48 - in such a way that when the width of
10:50 - this particular screen is less than 500
10:53 - pixels then all the items inside this
10:55 - particular row should have the flex
10:58 - direction as column and also the
11:00 - navigation should have the flex
11:02 - direction as row over here because
11:04 - currently it is the column Direction in
11:06 - this case so guys what we will do is we
11:08 - have to set the media query in such a
11:10 - way that the max width should be 500
11:12 - pixels over here so let us check that as
11:14 - well how we can implement it so
11:16 - basically we use atate character
11:18 - followed by media screen over here and
11:20 - then after this we provide the end
11:22 - keyword and then we have inside the
11:24 - parenthesis the max with CSS property
11:27 - over here after which we provide colon
11:30 - and then we say 500 pixels over here now
11:32 - guys for this particular situation in
11:34 - which case when the screen device width
11:36 - is less than 500 pixels we want to set
11:39 - the flex direction of this particular
11:42 - row to column over here so basically
11:44 - this Flex direction is equal to row but
11:46 - we want to change it to column when it
11:48 - is less than 500 pixels so simply we
11:51 - provide row class name over here and
11:53 - then we say Flex Direction it is equal
11:56 - to column in this case and then guys
11:58 - apart from this the flex direction of
12:00 - the Nave bar it is currently column over
12:02 - here we need to change it to row in this
12:05 - case so basically the items that are
12:07 - getting displayed from top to bottom we
12:09 - want to display it from left to right
12:12 - when the width of the screen is less
12:13 - than 500 pixels so guys let us change
12:16 - that as well so over here within the
12:18 - same media query we will provide the
12:20 - class name that is naar over here and
12:23 - then we will change the flex Direction
12:25 - it is equal to row this time so let me
12:28 - just save this file now and try
12:29 - reloading this page once again on the
12:31 - browser notice that we don't have any
12:33 - change right now because the width is
12:35 - greater than 500 pixels and when we
12:37 - reduce it to less than 500 pixels over
12:40 - here so as you can see currently it is
12:42 - 57 pixels when we reduce it to less than
12:45 - 500 pixels the Nave bar is also changed
12:47 - from column to row Direction over here
12:50 - and the entire row content is now
12:52 - getting displayed from top to bottom in
12:54 - this case so guys in this way we have
12:56 - handled the situation in which case when
12:58 - we want to see this particular web page
13:01 - on a screen width that is below 500
13:03 - pixels we can use this media query over
13:06 - here you can provide any of the
13:07 - measurement over here for the max with
13:09 - based on your project requirements and
13:11 - then your responsive web design will be
13:13 - updated accordingly when the user
13:16 - accesses your web page on different
13:18 - screen devices so guys in this way you
13:20 - can make a simple responsive web design
13:22 - and practice on your own based on the
13:24 - different measurements of the screen
13:26 - devices either you can display the flex
13:28 - Direction in in the row direction or the
13:30 - column Direction So currently it is in
13:32 - the row Direction over here as you can
13:34 - see but when we reduce the screen withd
13:37 - to below 500 pixels now it is in the
13:39 - column Direction and The Nave bar is in
13:41 - the row Direction over here so guys
13:43 - comment in the comment section below
13:45 - whether you have learned something out
13:47 - of this video please make sure that you
13:48 - like this video so that it reaches to
13:50 - more people and subscribe to this
13:52 - channel so that you get the
13:53 - notifications on upcoming videos as well
13:55 - I'll see you in the next video till then
13:57 - stay tuned