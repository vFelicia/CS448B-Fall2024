00:00 - so now we will see arithmetic operators
00:02 - in JavaScript so guys basically the
00:04 - arithmetic operators are used to perform
00:07 - the arithmetic on numbers in JavaScript
00:10 - and this we are going to check with the
00:11 - help of examples as well so guys
00:13 - basically all these are arithmetic
00:15 - operators in JavaScript so first of all
00:17 - we have this plus operator which means
00:19 - it is going to add two numbers over here
00:22 - apart from this we also have the minus
00:24 - operator for subtraction and then we
00:26 - have this multiplication exponentiation
00:29 - which means one number raised to the
00:31 - power of another number and then apart
00:33 - from this we can also divide two numbers
00:35 - by using this division operator we can
00:37 - also find the remainder by using this
00:39 - percent operator over here and then we
00:41 - have the Plus+ which is the increment
00:43 - operator which means it is going to
00:45 - increase the number by one and we also
00:48 - have the minus minus which is the
00:50 - decrement operator which means it is
00:51 - going to decrease the number by one over
00:54 - here so guys let us check all these
00:56 - arithmetic operators with the help of
00:58 - examples in vs code in this case so guys
01:00 - what we will do is let us Define certain
01:03 - variables over here so simply we are
01:05 - going to use the const keyword this time
01:07 - and we will say number one it is equal
01:09 - to two over here so guys basically we
01:11 - have this num one variable that is
01:13 - having the value two and it is not going
01:15 - to change since we have declared the
01:17 - variable with the const keyword over
01:19 - here apart from this we will also have
01:21 - another constant so let us have num two
01:24 - this time and we will have the value
01:26 - three over here guys simply we are going
01:28 - to use all these other arithmetic
01:30 - operators in order to find the results
01:32 - so guys over here let me just provide
01:34 - the console.log statement and then this
01:37 - time we will say addition it is equal to
01:39 - and then over here simply we can provide
01:41 - dollar after which we can provide open
01:43 - and close curly braces over here and
01:45 - then simply we can say num one followed
01:47 - by plus operator and then num two over
01:50 - here so guys basically this is the
01:51 - expression that is num one that is the
01:53 - first number followed by the plus
01:55 - operator and then we have the num two
01:57 - that is the second number so this will
02:00 - help you in order to add two numbers
02:02 - this time so let me just save this file
02:04 - now and let me just run this code on the
02:06 - terminal so simply we will say node
02:08 - followed by space character and then we
02:10 - have the test.js that is the name of the
02:13 - file over here when we press enter as
02:15 - you can see addition it is equal to 5
02:17 - this time so the addition of these two
02:19 - numbers that is 2 + 3 it is equal to 5
02:22 - and that is what we are getting over
02:23 - here as the output so guys this is the
02:25 - way that we can add two numbers over
02:27 - here apart from this we can also store
02:30 - this result in another variable over
02:32 - here so guys simply let me just copy
02:34 - this particular expression this time and
02:35 - then what we will do is again we are
02:37 - going to have third constant over here
02:39 - and this time we are going to name it as
02:41 - result and Then followed by the equal to
02:43 - operator so guys what we are doing is we
02:45 - are having the third variable by using
02:48 - the const keyword you can also use the
02:50 - let keyword over here and you can
02:52 - provide your own variable name followed
02:54 - by the equal to operator and then in
02:56 - order to add two numbers that is num one
02:58 - and num two you can have this expression
03:01 - and then while printing in this case we
03:03 - can simply replace this with the third
03:05 - variable that we have used that is
03:07 - result over here so guys when we save
03:08 - this file now and try running this code
03:10 - once again over here so as you can see
03:12 - there is no change the addition of two
03:14 - numbers it is 2 + 3 it is equal to 5
03:16 - this time so in this way you can add the
03:18 - two numbers by using the plus operator
03:20 - over here apart from this you can also
03:22 - provide the minus operator in order to
03:25 - subtract the two numbers so what we will
03:27 - do is result it is equal to num one
03:29 - minus num two this time so we have used
03:31 - the minus operator over here and simply
03:34 - while printing the result we can say
03:36 - subtraction this time so basically we
03:38 - are going to say subtraction it is equal
03:40 - to result which means 2 - 3 it is equal
03:42 - to min-1 and that is the result that we
03:45 - must get on the terminal so when we run
03:47 - this code once again over here it says
03:49 - subtraction it is equal to minus1 this
03:51 - time so guys in this way you can
03:53 - subtract the two numbers as well let us
03:55 - also multiply the two numbers so what we
03:57 - will do is simply instead of having the
03:59 - minus of operator over here we can say
04:01 - multiplication this time and then over
04:03 - here on the console. log statement we
04:05 - can say multiplication equal to result
04:08 - so let me just save this file now and
04:10 - try running this code once again as you
04:12 - can see multiplication it is equal to 6
04:14 - which means 2 * by 3 it is equal to 6
04:17 - this time let us move to the next
04:18 - operator over here we have something
04:20 - called as exponentiation which means one
04:22 - number raised to the power of another
04:24 - number over here so guys this time we
04:26 - have to use two times star operator over
04:29 - here and that that is how we are going
04:30 - to get number one which is equal to 2 ra
04:33 - to the power of number two which is
04:34 - equal to 3 this time and 2 to 3 is equal
04:37 - to 8 and that is what we should get over
04:39 - here so simply we will say
04:41 - exponentiation this time and let me just
04:43 - save this file now and try running this
04:45 - code once again over here so as you can
04:46 - see exponentiation it is equal to 8
04:49 - which means 2 to the^ of 3 it is equal
04:51 - to 8 this time so guys in this way you
04:53 - can find the one number ra to the power
04:55 - of another number by using this
04:57 - particular operator apart from this let
04:59 - let us also use this operator which is
05:01 - the Divide operator so when we say num 1
05:04 - divided by num 2 over here let us see
05:06 - what will be the result since we are
05:08 - using two divided by 3 this time so can
05:10 - we save this file now and try running
05:12 - this code once again over here as you
05:14 - can see division it is equal to 0.66 and
05:17 - so on so guys basically 2 / 3 it is
05:20 - giving us the number in terms of
05:21 - fraction over here and that is why we
05:23 - are getting this particular result we
05:25 - can also verify the same result on the
05:27 - calculator as well so when we say two
05:29 - divide by three over here as you can see
05:31 - we are getting this particular number
05:33 - and the same number is getting printed
05:35 - over here as far as the division
05:37 - operator is concerned similarly we can
05:39 - use the modulus operator in order to
05:41 - find the remainder of the division so
05:44 - let us check that as well so instead of
05:46 - having the Divide operator simply we can
05:48 - say num 1 person num two which means 2
05:51 - ided 3 will be done and whatever
05:53 - remainder is there that remainder will
05:55 - be displayed over here so we say
05:57 - remainder this time so 2 / three the
06:00 - quotient should be zero and the
06:01 - remainder must be two so when we run
06:03 - this code once again over here as you
06:05 - can see remainder it is equal to two
06:07 - that's because the quotient it is equal
06:08 - to zero this time apart from this we
06:10 - also have something called as increment
06:12 - and the decrement over here so guys let
06:14 - us check that as well when we say
06:16 - increment simply we can provide the
06:18 - increment statement and then over here
06:20 - let us use one of the numbers instead of
06:22 - the result so let us say we provide num
06:24 - one and then guys how do we use the
06:26 - increment operator so simply we can
06:29 - provide this plus operator two times
06:31 - after num one or before num one over
06:33 - here now guys there is a difference when
06:35 - you provide the increment operator after
06:38 - the number so when we say num 1 ++ over
06:40 - here the same number that is two will be
06:42 - displayed so let us check that so when
06:44 - we save this file now and try running
06:46 - this code once again so we are getting
06:48 - the error over here it says assignment
06:50 - to constant variable so guys over here
06:52 - we have done the mistake and mistakes
06:54 - are very important because it helps you
06:56 - to learn while you are making those
06:58 - mistakes so guys basically we we have to
07:00 - provide the let keyword over here since
07:02 - we are changing the number by providing
07:04 - the increment operator so let me just
07:06 - save this file now andent try running
07:08 - this code once again over here so as you
07:09 - can see increment it is equal to two so
07:12 - basically we have not got the number
07:14 - three this time that's because when you
07:15 - provide the num 1 ++ over here this
07:18 - particular number will be incremented
07:20 - after the log statement is executed so
07:23 - if you print this num one number once
07:25 - again over here after this particular
07:27 - statement so what we will do is we will
07:29 - provide second time as the string over
07:31 - here in order to identify that this is
07:33 - the second time that we are going to
07:35 - print this number and we say num one
07:37 - this time so guys since we have
07:38 - incremented the number over here the
07:40 - second time that you are going to print
07:42 - the number one it is going to add one to
07:45 - this particular number that is two and
07:46 - it will display the value as three for
07:48 - this number one so when we save this
07:50 - file now and try running this code once
07:52 - again as you can see increment it is
07:54 - equal to two and second time when we
07:55 - print that number that is num one it is
07:58 - equal to three this time guys that is
08:00 - the difference when you provide the
08:01 - Plus+ operator after this particular
08:03 - variable name that is num one so during
08:06 - that particular execution you won't be
08:08 - able to see that change but after this
08:10 - particular line of code the number one
08:12 - will be having the value that is three
08:14 - over here which was incremented now guys
08:16 - instead of having the Plus+ operator
08:19 - after the variable what if we provide
08:21 - the Plus+ operator before the variable
08:23 - over here so this is the second way in
08:25 - order to provide the increment operator
08:28 - that is before the variable name so this
08:30 - time what will happen is first the
08:32 - increment will happen that is one will
08:34 - be added to this particular number that
08:36 - is two and we will get the value as
08:38 - three over here for the first statement
08:40 - and again we will get the value as three
08:42 - for the second statement over here so
08:44 - when we save this file now and try
08:45 - running this code once again as you can
08:47 - see increment it is equal to three this
08:49 - time and previously when we had provided
08:51 - the Plus+ operator after the variable
08:54 - name the increment was providing us the
08:56 - value as two and second time it was
08:58 - three but this time time over here the
09:00 - increment is three and again the second
09:02 - time it is three over here that's
09:03 - because only once we are incrementing
09:06 - the variable so guys basically that's a
09:08 - difference when we provide the Plus+
09:10 - operator before the variable name that
09:12 - particular statement will have the
09:13 - updated value but when we provide the
09:15 - same operator after the variable name
09:18 - then the updated value will be provided
09:20 - in the upcoming statements when you are
09:22 - using the console. log statement
09:24 - similarly you can use the decrement
09:26 - operator as well so over here we have
09:28 - the minus minus operator in order to
09:30 - reduce the number by one over here so
09:32 - when we use the minus minus after the
09:35 - variable name so that particular
09:36 - statement will not show any change and
09:38 - we will get the value as two but the
09:40 - second time the value will be one over
09:42 - here that's because we are reducing the
09:44 - value by one when we save this file now
09:46 - and try running this code once again
09:48 - over here as you can see increment it is
09:50 - equal to two and second time the number
09:52 - has become one over here but similarly
09:54 - when we provide the minus minus operator
09:56 - before the variable name so this time we
09:58 - must get in increment equal to one over
10:00 - here and second time also should be one
10:02 - this time so when we save this file now
10:04 - and try running this code once again so
10:06 - as you can see increment is equal to 1
10:08 - and second time it is equal to 1 so guys
10:10 - we have done the mistake over here
10:12 - instead of increment we must have the
10:14 - decrement over here because we are
10:16 - decreasing the number so when we save
10:17 - this file now as you can see decrement
10:19 - is one and second time it is equal to 1
10:22 - so guys in this way you can use the
10:23 - arithmetic operators based on your
10:25 - project requirements and you can either
10:27 - store the result in another variable
10:29 - over here and use that variable or
10:31 - simply you can use the backs in this
10:33 - case and provide the dollar symbol
10:35 - followed by the open and close curly
10:37 - braces inside which you can have your
10:39 - arithmetic expression so guys comment in
10:41 - the comment section below whether you
10:42 - have learned something out of this video
10:44 - please make sure that you like this
10:45 - video so that it reaches to more people
10:47 - and subscribe to this channel so that
10:49 - you get the notifications on upcoming
10:50 - videos as well I'll see you in the next
10:52 - video in which we are going to see the
10:54 - assignment operators in JavaScript so
10:57 - stay tuned