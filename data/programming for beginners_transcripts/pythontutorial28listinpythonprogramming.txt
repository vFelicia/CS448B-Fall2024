00:00 - hey what's up guys welcome to another
00:02 - video in which we are going to learn
00:03 - about list in Python Programming so guys
00:06 - our list is a collection of similar or
00:08 - different types of data so for example
00:11 - suppose we need to record the age of
00:13 - five students so instead of creating
00:15 - five separate variables we can simply
00:18 - create a list so as you can see this is
00:20 - the way that we create the list first of
00:22 - all on the left hand side we have the
00:24 - variable name and then on the right hand
00:26 - side inside the open and close square
00:28 - brackets we have the list of elements
00:31 - which are separated using the commas so
00:33 - I'll just copy this line of code over
00:35 - here and then let us move to the vs code
00:37 - and paste this so as you can see on the
00:39 - left hand side it is the variable name
00:41 - of the list and on the right hand side
00:43 - we have the age of all the students over
00:46 - here and simply we can print the list by
00:48 - using the print function after this we
00:51 - can provide the variable name that is
00:52 - list so let me just save this file and
00:54 - try running this code now as you can see
00:56 - we are getting the list of all the
00:58 - elements in the sequence that that we
01:00 - had provided over here it is very
01:02 - important that all these elements are
01:04 - separated using the commas over here now
01:06 - guys the list can have the same kind of
01:09 - elements that is this one is having the
01:11 - list of integers data type only but we
01:14 - can also have the string as well in
01:16 - between so let's say we have a string
01:18 - called John over here in between this
01:21 - list of elements so this is also
01:23 - possible it will not throw any error
01:26 - while we are running this code so let me
01:28 - just save this file and try running this
01:29 - code now as you can see we are getting
01:31 - the list of all the values 17 18 and
01:34 - then we are getting John and then 19 and
01:36 - then 14. so this is a kind of a
01:38 - heterogeneous list whereas when we have
01:40 - the same kind of data type in the list
01:42 - then it is called the homogeneous list
01:44 - now how do we access the python list
01:46 - element so basically this is one way in
01:49 - order to access the list but what if we
01:51 - want to access only a single element by
01:54 - using this print statement we have
01:55 - accessed all the elements over here but
01:58 - in case we want to access our a
02:00 - particular element from this list then
02:02 - what we can do is in Python each item in
02:05 - a list is associated with a number so
02:07 - the number is known as a list index so
02:10 - basically all these numbers that is the
02:12 - elements of the list that are present
02:13 - inside the list so these are associated
02:16 - with the indices which starts from zero
02:19 - so this 17 number is at the zeroth index
02:21 - 18 number is at the first index and so
02:24 - on this is at the second index third
02:26 - index and then so on so basically these
02:29 - elements can be accessed using these
02:31 - indices so as you can see we can access
02:33 - elements of an array using the index
02:35 - number now how do we access them so what
02:38 - we can do is we simply come over here
02:40 - I'll simply change this to the number 15
02:42 - that was there previously and what we
02:44 - have to do is let's say I want to access
02:47 - this element that is the fourth element
02:48 - so what will be the index so this is
02:50 - zeroth index then we have one and then 2
02:53 - and then three so this is the third
02:54 - index so we can access by using the
02:57 - variable name followed by open and close
02:59 - square brackets and inside those
03:01 - brackets we have to provide the index
03:03 - number that is 3 in this case which
03:05 - represents this number that is 19. so
03:08 - let me just save this file and try
03:09 - running this code now as you can see we
03:11 - are just getting 19 over here previously
03:13 - we were getting the entire list when we
03:15 - don't provide this index number I save
03:17 - this file so as you can see all the
03:19 - values are getting printed but when we
03:21 - provide the index number let's say I
03:23 - want to print 18 this time which is at
03:25 - the index 1 after this index which is 0
03:27 - so I provide list of 1 over here save
03:31 - this file and run this code so as you
03:33 - can see 18 is getting displayed and this
03:35 - is how it is one way in order to access
03:37 - a particular single element inside this
03:40 - list by using the index number now it is
03:43 - also possible that we provide the
03:44 - negative index in Python so python
03:47 - allows negative indexing for its
03:48 - sequences the index of minus 1 refers to
03:52 - the last item minus 2 to the second last
03:55 - item and so on so for now we know that
03:57 - the zeroth index is the first element
03:59 - over here and then the first index is
04:01 - the second element but what about the
04:03 - last element let's say we don't know the
04:05 - length of the list like how many
04:07 - elements are present inside the list and
04:09 - we want to get the last element over
04:11 - here so since the first element is at
04:13 - the zeroth index the previous index that
04:16 - is before 0 which is minus 1 it will
04:19 - point to the last index of this list
04:21 - that is 14 over here so what if we
04:24 - simply do list of minus 1 in this case
04:26 - so I'll just provide minus 1 in this
04:29 - case let me just save this file and try
04:31 - running this code as you can see we are
04:33 - getting 14 so basically the minus 1
04:36 - index will point to the last element of
04:38 - the list in this case let's say we want
04:40 - to get the second last element so in
04:42 - this case we will simply provide minus 2
04:45 - so after minus 1 we are having minus 2
04:47 - which will be the previous element of
04:49 - the last element so let me just save
04:51 - this file and try running this code now
04:52 - so as you can see 19 is getting
04:54 - displayed now and this is the way that
04:56 - we can also use the negative indexing as
04:59 - far as access using the last elements of
05:01 - the list are concerned now there is
05:03 - another concept of slicing in Python
05:05 - list so in Python it is possible to
05:07 - access a section of items from the list
05:10 - using the slicing operator which is
05:12 - nothing but a colon not just a single
05:15 - item so let's say we want to access the
05:17 - second and third elements inside the
05:19 - list so we have to use the slicing
05:21 - operator in this case now what is the
05:23 - slicing operator while providing the
05:25 - indices inside the open and close
05:27 - brackets we have to provide the indices
05:30 - and separate them using the colon so
05:32 - what is the index of the second element
05:34 - it is one over here since the first
05:36 - element is having the zeroth index we
05:38 - don't want that we want to start from
05:40 - the first index and then we also want
05:42 - the second index so this time we have to
05:44 - provide the next number that is at the
05:46 - third index now so after this one that
05:49 - is the first index we have to provide
05:51 - colon and then we provide 3 over here so
05:54 - 3 is not included in this case please
05:56 - remember that whenever you are providing
05:59 - the ending in index that element will
06:01 - not be included whenever you are using
06:03 - the slicing operator over here so the
06:05 - elements that will be considered in this
06:06 - case will be at the index 1 and at the
06:08 - index 2 which means 18 and 15. so let me
06:11 - save this file and try running this code
06:13 - now as you can see we are getting 18 and
06:15 - 15 only let's say you want to get all
06:18 - the elements starting from this 18 so
06:20 - this index is 18 right now and there is
06:23 - no end index that you want to specify
06:25 - over here so we simply have to remove
06:27 - this 3 and then we can simply specify
06:30 - one followed by the colon so this will
06:32 - make python interpreter to consider all
06:35 - the elements after the first element
06:36 - including the first element itself so
06:39 - let me just save this file now and try
06:40 - running this code so as you can see we
06:42 - are getting all the elements that is 18
06:44 - 15 19 and 14 starting from the first
06:47 - index over here so guys this is the way
06:49 - that we can use slicing in the python
06:51 - list also in order to consider all the
06:53 - list elements over here we need not have
06:55 - to specify any of the indices if we
06:58 - simply provide the colon over here all
07:00 - the elements will be considered let me
07:02 - just save this file and try running this
07:03 - code now so as you can see all the
07:05 - elements are getting considered but this
07:07 - thing is kind of a redundant over here
07:09 - that's because if we simply provide the
07:11 - variable name that is less still all the
07:13 - elements will be considered so if we run
07:15 - this code once again so all the elements
07:17 - are being considered over here only when
07:19 - you want to consider the subset of this
07:21 - list you have to use the slicing inside
07:23 - the python list now let us move to the
07:26 - next concept how do we add the elements
07:28 - to a python list so there are two ways
07:30 - to add the elements in the python list
07:32 - the first way is to use the append
07:34 - function which will help us in order to
07:36 - add a single item in the list and the
07:38 - second way is to use the extend function
07:41 - in order to add another list to the
07:43 - already existing list so let us check
07:45 - this with the help of examples now over
07:46 - here let's say we already have this list
07:49 - of values inside the list variable and
07:51 - now we want to add more elements so what
07:53 - we will do is we will say list followed
07:55 - by Dot and then we have something called
07:57 - as append so this is a function we which
07:59 - will take a single element and it will
08:01 - add to the end of this list so let's say
08:04 - I want to provide 25 as the age of
08:06 - another student so let me just save this
08:08 - file now and try running this code
08:11 - so as you can see this element that is
08:12 - 25 it is already added at the end of the
08:15 - lesson now and in this way we can use
08:17 - the append function to add more elements
08:20 - inside the list now let's say we have
08:22 - another list over here let's say I
08:24 - provide a list one and the numbers I
08:26 - provide is 1 comma 2 comma 3 over here
08:28 - so three elements are there and we want
08:30 - to add all these elements to the
08:32 - original list that is list variable so
08:34 - what we can do is we can use the extend
08:37 - function in this case so we have to use
08:38 - this list variable which is the original
08:40 - list variable followed by Dot and then
08:43 - we have the extend function and inside
08:45 - the parenthesis we have to provide this
08:47 - argument that is list one which is
08:49 - another variable having the list of
08:51 - elements and now if we print this list
08:54 - it will have the updated list of values
08:56 - so let me just save this file and try
08:58 - running this code now so as you can see
09:00 - after this 14 1 2 3 elements are also
09:03 - getting added over here since we have
09:05 - used the extend function in this case
09:07 - let us move to another section can we
09:09 - change the list items so basic quickly
09:11 - the python lists are mutable meaning
09:13 - lists are changeable and we can change
09:16 - items of a list by assigning new values
09:18 - using equal to operator so what I will
09:21 - do over here is I'll just remove these
09:22 - lines of code so I'll simply provide the
09:25 - original list over here so we will say
09:27 - for each null list followed by colon and
09:31 - then we will print the list so let me
09:33 - just save this file and try running this
09:34 - code now we have the original list over
09:37 - here I'll just spell this correctly so
09:39 - we have the original list 17 18 15 19
09:42 - and then 14. now let's say the third
09:44 - position that is 15 we want to change
09:46 - this element to 10. now this is being
09:49 - referred to the second index over here
09:51 - so this is 0th index then 1 and then
09:53 - second index so what we have to do is
09:55 - simply we have to provide list followed
09:57 - by inside the square brackets we will
10:00 - provide the index number that is 2 and
10:02 - then equal to the new value that is 10
10:04 - that we want to replace it with and then
10:06 - again what we will do is I'll simply
10:08 - copy this line of code and paste this
10:10 - over here and and then we will say
10:12 - update a list and let me just save this
10:15 - file now and try running this code so
10:17 - basically as you can see original list
10:18 - it is having 15 at the third position
10:21 - over here that is at the second index
10:23 - and the updated list is having the
10:25 - number 10 at the same second index over
10:27 - here and this is the way that we can
10:29 - update the list elements so since python
10:31 - lists are mutable we can change the
10:32 - elements of the list as well now
10:34 - removing an element from the list so
10:36 - there are two ways either we can use the
10:38 - Del function or else we can use the
10:41 - remove function as well so let's say
10:42 - over here we have the original list now
10:44 - so I'll just remove these lines of code
10:46 - and then we can use the Del function and
10:49 - Then followed by list and let's say I
10:52 - want to remove this fourth element that
10:54 - is at the index 3 which is 19 so I'll
10:56 - just provide list of three in this case
10:58 - and then what I will do is I will print
11:00 - the updated list once again so I'll just
11:03 - change this to updated list so basically
11:05 - we are using the Del method over here
11:08 - and deleting the third index in inside
11:11 - this list so let me just save this file
11:13 - and try running this code now so as you
11:15 - can see we are getting the updated list
11:16 - as 17 18 15 and 14. this element that is
11:20 - 19 it was removed already now instead of
11:22 - this we can also use the remove method
11:24 - so in that case we have to use the
11:26 - variable name first in the Del method
11:29 - that is the delete method we simply use
11:31 - the function name and provided the
11:33 - element from the list in order to remove
11:35 - from that list but over here we have to
11:38 - provide the variable name followed by
11:40 - Dot and then we can simply use the
11:42 - remove function and Then followed by the
11:44 - position so which position we want to
11:46 - remove so let's say I want to remove
11:47 - this element that is 18 over here so in
11:50 - this case we have to provide the value
11:52 - of the element that is present inside
11:54 - the list so in this case we provide 18.
11:57 - in the previous example that we have
11:59 - taken using the Del method we used the
12:02 - index number of the element that is
12:04 - present inside the list but in this case
12:06 - we have to use the value in order to
12:08 - remove it so I'll just save this file
12:10 - and try running this code now as you can
12:12 - see 18 was present in the original list
12:14 - but in the updated list we don't have 18
12:16 - it is 17 15 19 and 14 and in this way we
12:20 - can remove the elements from the list as
12:21 - well now very important operation how do
12:24 - we iterate through a list so basically
12:26 - we can use the for Loop to iterate over
12:28 - the elements of our list so till now
12:30 - what we have seen is we have just used
12:32 - the list that is the variable name in
12:34 - order to print the elements of those
12:36 - lists now if you notice we are getting
12:38 - the square brackets over here open and
12:40 - close square brackets within which all
12:42 - the elements are getting printed but
12:44 - let's say we don't want those square
12:45 - brackets and one by one we want to print
12:47 - all the elements at a time so what we
12:50 - can simply do is use the for Loop and we
12:53 - have seen in the previous videos as well
12:54 - the syntax of the for Loop we have to
12:57 - use the for keyword followed by let's
12:59 - say a temporary variable name that is
13:01 - item followed by the in keyword and then
13:04 - we have to provide the sequence that is
13:06 - list and then after that we have the
13:08 - colon and then we can have the print
13:10 - statement over here now in the print
13:12 - statement if we only provide one item
13:14 - term that is item in this case so every
13:17 - time all the elements will be printed on
13:19 - the separate lines over here so let us
13:21 - just try this code so we'll just save
13:23 - this file and try running this code now
13:25 - as you can see 17 18 15 19 14 all the
13:29 - elements are getting printed on the
13:30 - separate lines what if we want all the
13:33 - elements to be present on the same line
13:35 - so what we can do is after providing
13:37 - comma over here we have the end
13:39 - parameter inside the print function and
13:42 - this end parameter we can have the comma
13:44 - as the character by which we can
13:46 - separate all the elements so by default
13:49 - this is slash n character which means
13:51 - the next element will be printed on the
13:52 - next line but if we specify this in this
13:55 - way all the elements will be printed on
13:57 - the same line so let me just save this
13:59 - file now and try running this code so as
14:01 - you can see all the elements are getting
14:02 - printed on the same line in the same
14:04 - sequence that is present inside this
14:06 - list so in this way we can iterate
14:08 - through all the elements inside the list
14:09 - that are present by using the for Loop
14:12 - over here now another important thing
14:13 - how do we find the list so we have
14:16 - something called as python list length
14:18 - so in Python we use the Len function to
14:21 - find the number of elements present in a
14:23 - list so we can have any number of
14:25 - elements inside the list over here so
14:27 - there is no limit on the number of
14:28 - elements that we are supposed to have
14:30 - inside the python list so in case if we
14:32 - want to find the number of elements
14:35 - inside the list we can simply use the
14:37 - length function so we can simply print
14:39 - this and then we can have Len which is a
14:43 - function and then we can provide the
14:45 - variable name of the list inside this
14:47 - Len function over here so it will return
14:49 - us the count of the elements inside the
14:51 - list so let me just save this file and
14:53 - try running this code now as you can see
14:55 - 5 that is the count of the number of
14:57 - elements inside the list is present over
14:59 - here if you provide some more elements
15:01 - over here let's say I have provided five
15:03 - more elements inside the list let me
15:05 - just save this file now and try running
15:06 - this code so we are getting the updated
15:08 - count that is 10 so 10 is the number of
15:11 - elements that are present inside the
15:13 - list and that is how we can easily find
15:15 - the length of the list in this case by
15:17 - using the Len function over here so Guys
15:19 - these were certain operations as far as
15:21 - list variable is concerned please make
15:23 - sure that you practice on your own and
15:25 - as a homework for you there is something
15:27 - called as a sort function which can help
15:29 - you in order to sort all the elements
15:31 - inside the list so you can practice on
15:34 - your own as a homework for you in order
15:36 - to sort the elements inside the python
15:38 - list and print on your own make sure
15:40 - that you comment in the comment section
15:41 - below what your code looks like as far
15:43 - as sorting the list of elements is
15:45 - concerned please make sure that you like
15:47 - this video so that it reaches to more
15:48 - people and subscribe to the channel so
15:50 - that you get the notifications on
15:52 - upcoming videos as well the next video
15:53 - that we are going to talk about is a
15:55 - tuple in Python Programming so stay
15:58 - tuned