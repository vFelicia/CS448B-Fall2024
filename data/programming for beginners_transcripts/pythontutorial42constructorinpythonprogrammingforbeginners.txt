00:00 - hey what's up guys welcome to another
00:02 - video in which we are going to learn
00:03 - about Constructor in Python Programming
00:06 - now guys a python Constructor is a
00:08 - function inside a class that helps us to
00:11 - initialize certain attributes of a class
00:13 - so far we have seen creating the class
00:15 - attributes and the functions and while
00:17 - initializing the attributes of the
00:19 - classes object we use the object name
00:21 - followed by the dot and then the
00:24 - attribute name but is there a better way
00:26 - in order to initialize those attributes
00:28 - inside the class yes it is so we have
00:30 - something called as double times
00:32 - underscore followed by init and then
00:34 - again double times underscore followed
00:37 - by open and close parenthesis which is a
00:39 - Constructor function that is called
00:41 - whenever a new object of that class is
00:44 - instantiated so guys let us check this
00:46 - with the help of example now so let us
00:48 - move to the vs code what we will do is
00:50 - we will create a class that is called as
00:52 - the parrot class over here and we will
00:54 - Define two attributes so over here we
00:57 - have the name which is of the string
00:58 - data type so let's say we have the empty
01:00 - string initially and then let's say we
01:03 - have the age attribute which is defined
01:05 - as 0 over here which is the integer so
01:07 - guys what we will do is let us say we
01:09 - want to create the object of this class
01:12 - so what we have to do is let's say we
01:14 - provide the object name as parent 1
01:16 - followed by equal to operator and then
01:19 - we have the name of the class that is
01:20 - parrot followed by open enclosed Parent
01:22 - Access now guys so far what we had done
01:25 - is in order to initialize both these
01:27 - attributes we were calling this object
01:29 - name followed by Dot and then the name
01:32 - of the attribute so let us do that first
01:34 - so we are going to use the parrot one
01:36 - object over here followed by Dot and
01:39 - then let's say the name of the parent it
01:41 - is blue over here so we provide the name
01:44 - of the parrot and then we also provide
01:46 - the age of the parrot so let's say
01:48 - parrot 1 dot h it is equal to two years
01:51 - old and then we can simply print the
01:53 - name and age of this parrot so let us
01:55 - say we provide the print method over
01:57 - here and we provide the parrot one
01:59 - object check so parrot 1 followed by Dot
02:02 - and then we have name s and then again
02:05 - we want to get the eight so parent one
02:07 - dot h and then we have years old so over
02:11 - here blue is two years old will be
02:14 - displayed so let us save this file now
02:16 - and try running this code so as you can
02:18 - see blue is two years old so guys this
02:21 - is the conventional way that we had seen
02:23 - so far in order to instantiate an object
02:25 - of the class and also assign the values
02:28 - to the attributes of that class so is
02:30 - there a better way in order to assign
02:32 - these values to these attributes yes we
02:34 - can do so by using the Constructor so
02:37 - what we can do is we can simply remove
02:38 - these two lines of code over here so
02:40 - I'll just remove them and then guys
02:42 - inside this class we are going to have
02:44 - the init method which is the Constructor
02:46 - so over here we are going to have the
02:49 - def keyword followed by double times
02:52 - underscore and then we have the init so
02:54 - as you can see vs code is suggesting as
02:56 - this method which we are going to use so
02:58 - in it and it is going to take one
03:00 - parameter by default as I have already
03:02 - told you previously whenever we are
03:04 - going to call any method inside the
03:06 - class the object that is used in order
03:09 - to call that method is also passed by
03:11 - default behind the scenes so the self
03:13 - parameter represents the object of this
03:16 - parrot class over here I'll just remove
03:18 - this part and what we are going to do is
03:20 - we are going to take both these
03:22 - attributes that is name and age as the
03:24 - parameters so over here after this self
03:26 - we are going to have comma and then we
03:29 - are going to have name one so guys I am
03:31 - naming this as name one so that you
03:33 - don't get confused between this name and
03:35 - this name one so this name one will be
03:37 - passed as the parameter when this
03:39 - Constructor is being called over here
03:41 - and then followed by comma we also have
03:43 - age one and then what we can do is for
03:46 - this self that is the object followed by
03:48 - a DOT we can have name it is equal to
03:51 - name one over here and then again we can
03:54 - have the cell followed by a DOT and then
03:57 - age it is equal to H1 so what we are
04:00 - simply doing over here is the name and
04:02 - age attributes of this object the object
04:05 - is being represented by self and then
04:07 - self dot name it will be assigned with
04:09 - the value of this name one that is being
04:12 - passed same thing for the age as well
04:14 - the self.h the value will be passed by
04:17 - using this H1 parameter over here and
04:20 - both these values will be assigned to
04:21 - name and age attributes now guys when
04:24 - exactly this Constructor is being called
04:26 - so basically whenever you are going to
04:28 - create an object and call this class
04:30 - over here that is the parrot class the
04:33 - Constructor will be called so while
04:34 - instantiating this object we also need
04:37 - to pass the name and age for this
04:39 - particular instance of the class so what
04:41 - we're going to do is let's say we take
04:43 - the same name that is blue over here so
04:45 - we provide the first parameter as the
04:47 - name of the parrot followed by a comma
04:49 - and then we provide the age that is 2
04:52 - years old which is the second parameter
04:54 - so guys when the control flow comes over
04:56 - here it sees that the class is being
04:58 - called with these two parameters and we
05:01 - also have the Constructor so basically
05:02 - this parrot one will be assigned to this
05:05 - parameter that itself and then this name
05:07 - and age will be assigned to this name 1
05:09 - and H1 and this name and age will be
05:12 - assigned those values respectively and
05:14 - then we can simply have this print
05:16 - statement in order to print the same
05:18 - statement that we had seen previously as
05:20 - well so let me just save this file now
05:22 - and try running this code so as you can
05:24 - see we are getting the same statement
05:25 - that is blue is two years old that's
05:27 - because we have provided the same name
05:29 - and the same age let's say we provide a
05:32 - different name over here so let's say we
05:34 - provide who and it is 5 years old so let
05:36 - me just save this file now and try
05:37 - running this code as you can see who is
05:40 - 5 years old is getting displayed over
05:42 - here so guys in this way what we have
05:44 - done is while instantiating the object
05:46 - we are passing the values or the
05:49 - attributes that are present inside that
05:51 - class for which the values are getting
05:53 - assigned now guys another important
05:55 - functionality of this Constructor is we
05:57 - can also remove these attributes that
05:59 - are being glad so there is no need of
06:01 - declaring these attributes over here so
06:04 - I'll just remove these lines of code
06:05 - over here and what exactly is happening
06:07 - is while this Constructor is being
06:09 - called The Interpreter comes to know
06:11 - that this name and age are the
06:13 - attributes of this class that is the
06:15 - parrot class over here and it assigns
06:17 - the values that are being passed to name
06:19 - 1 and age 1. so to make it more simple
06:21 - let us say we name this parrot as first
06:24 - parrot over here for which the age is 2
06:27 - years old and let's say I provide
06:29 - another parrot so I'll just copy this
06:31 - line of code and paste this over here
06:33 - and then I provide this as parrot 2 and
06:35 - then we can say second parrot over here
06:37 - which is five years also we'll say five
06:40 - years old and then we will print both
06:42 - the parrots over here inside the frame
06:44 - statement I'll just copy these lines of
06:46 - code and paste this over here and then
06:47 - we can say parrot2 dot name and then
06:50 - again over here parrot2.h so let me just
06:52 - save this file now and try running this
06:54 - code so as you can see first parrot is 2
06:57 - years old and second parrot is 5 years
06:59 - old both the statements are getting
07:01 - displayed over here so guys this is the
07:03 - way that you can Define The Constructor
07:04 - inside the class by using the underscore
07:07 - underscore init method and Then followed
07:10 - by the self that is being passed
07:12 - automatically as one of the parameters
07:14 - and then you can have any number of
07:16 - parameters being passed over here inside
07:18 - the Constructor which can be used as the
07:20 - values for the attributes of the class
07:22 - that you have defined and those values
07:24 - need to be passed whenever you are
07:26 - creating a new object for that class so
07:28 - guys practice on your own so that on
07:30 - different inputs you get different
07:31 - outputs please make sure that you like
07:33 - this video so that it reaches to more
07:35 - people and subscribe to this channel so
07:37 - that you get the notifications on
07:38 - upcoming videos as well the next video
07:40 - that we are going to talk about is
07:42 - encapsulation in Python Programming so
07:44 - stay tuned