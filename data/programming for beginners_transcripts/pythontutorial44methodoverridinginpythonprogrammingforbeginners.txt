00:00 - hey what's up guys welcome to another
00:02 - video in which we are going to learn
00:03 - about method overriding in Python
00:06 - Programming so guys method overriding in
00:08 - Python is a way of letting method of a
00:11 - subclass override the method of a super
00:14 - class so let's say for instance inside
00:16 - the superclass we have a method that is
00:18 - eat and then inside the subclass we also
00:21 - have the same method with the same name
00:24 - that is eight so basically the method
00:26 - inside the subclass will be executed
00:29 - instead of the method that is present
00:31 - inside the super class so let us check
00:33 - this with the help of example now over
00:35 - here so as you can see this is the class
00:37 - that is animal which is being treated as
00:39 - the parent class or the super class and
00:41 - over here we have the attribute that is
00:43 - the name of the animal and it has a
00:45 - function that is the eat and it takes
00:47 - one parameter that is self over here it
00:49 - simply prints a statement that is I can
00:51 - eat now guys again we have another class
00:54 - over here that is the dog which inherits
00:56 - this parent class that is animal and
00:59 - again what is happening over here is
01:01 - this eight is being inherited by this
01:03 - dog class but the dog class is also
01:05 - having its own eat method over here so
01:08 - as you can see this eight method is once
01:10 - again present inside the dog class and
01:12 - it is printing its own statement that is
01:14 - I like to eat bones so guys what we will
01:17 - do over here is I'll just simply copy
01:19 - these lines of code and paste it in the
01:21 - vs code and let us check the
01:23 - functionality of the method overriding
01:25 - and how it can be used in your project
01:27 - based on your requirements so I'll just
01:29 - remove certain comments over here so as
01:31 - you can see we have this parent class
01:33 - that is animal and then we have the
01:35 - child class that is dog over here both
01:37 - are having the eight method so what we
01:39 - will do is first of all I'll just
01:41 - comment out these lines that is this
01:43 - particular function is not present let's
01:45 - say inside the doc class I'll simply
01:47 - provide the pass statement over here so
01:50 - what exactly is happening first of all
01:51 - we have the animal class which is having
01:53 - the eat function and this dog class it
01:56 - is inheriting the animal class so the
01:58 - top class will have access to to this
02:00 - function that is 8 over here so I can it
02:03 - will be displayed so what we will do is
02:05 - first of all we will create the object
02:07 - of this doc class so let's say we have
02:09 - dog one it is equal to and then the name
02:12 - of the class that is dog over here and
02:14 - simply what we can do is since the dog
02:16 - class is inheriting the animal class we
02:19 - can use the eat method of the animal so
02:22 - we can simply use the dog one object
02:25 - followed by Dot and then we have the
02:27 - eight method being called followed by
02:29 - open and close parenthesis so guys over
02:31 - here simply if we save this file and try
02:33 - running this code now as you can see I
02:35 - can 8 is being displayed over here which
02:37 - is the print statement inside the eight
02:40 - function of the animal class now guys
02:42 - let us say we have the same method that
02:44 - is 8 with a different print function
02:46 - inside the doc class so I'll just remove
02:48 - this pass statement and will also remove
02:51 - these commands over here so basically
02:53 - now what will happen whether the eight
02:55 - function of the animal class will be
02:56 - called or the eight function of the dog
02:58 - class will be called so let let us check
03:00 - this so I'll just save this file now and
03:02 - try running this code once again as you
03:04 - can see I like to eat bones this
03:06 - particular statement is getting printed
03:07 - which is the statement from the eat
03:10 - function of the dog class so basically
03:12 - whenever we have the method with the
03:14 - same name inside the parent and the
03:16 - child class the method of the child
03:19 - class will be called over here and that
03:21 - is what we call it as method overriding
03:23 - now guys why method overriding is
03:25 - important so let's say you have the
03:27 - animal class over here this is a very
03:29 - generic statement that I can eat
03:31 - basically it doesn't specify what the
03:33 - animal can eat but let's say you want to
03:35 - have the child classes over here which
03:37 - inherits the parent class and you want
03:40 - to be more specific so what the dog
03:42 - likes to eat basically the dog likes to
03:45 - eat bones over here so you can have the
03:47 - same method name inside the child class
03:49 - and print a different message in this
03:51 - case and that is what we have done in
03:53 - this example so method overriding is
03:55 - very important as far as object oriented
03:57 - programming in Python is concerned and
03:59 - you can use them in your own Project
04:01 - based on your requirements so guys
04:03 - practice on your own so that on
04:04 - different inputs you get different
04:06 - outputs please make sure that you like
04:07 - this video so that it reaches to more
04:09 - people and subscribe to this channel so
04:11 - that you get the notifications on
04:12 - upcoming videos as well the next video
04:14 - that we are going to talk about is super
04:16 - method in Python inheritance so stay
04:19 - tuned