00:00 - so now we will see how we can create a
00:02 - navigation bar using flexbox in CSS so
00:06 - guys basically we can easily create a
00:08 - navigation bar that is horizontal or
00:10 - vertical direction using the flexbox
00:13 - model in CSS so let us move to the vs
00:16 - code over here and simply we are going
00:17 - to remove the previous lines of code
00:19 - that we had written in the HTML and the
00:22 - CSS files now guys what we will do is
00:24 - simply we will have the diff tag with
00:26 - the class that is na bar over here and
00:28 - then inside this we will have more div
00:31 - tags inside which we are going to have
00:33 - the links which will help us in order to
00:36 - navigate through different pages of the
00:38 - website so guys first of all we have the
00:40 - homepage over here and then apart from
00:42 - this similarly we will have more links
00:44 - such as blog in this case and then we
00:46 - will have videos as well and then apart
00:49 - from this we will have the about page as
00:51 - well so guys we have the four items
00:53 - inside the navigation bar over here let
00:56 - me just save this file now and try
00:57 - reloading this page on the browser so as
01:00 - you can see this is a default way in
01:02 - which the links that is the a tags are
01:04 - getting displayed over here now guys
01:06 - what we can do is simply we will make
01:08 - this class that is Nave bar which is the
01:10 - div tag as the flex container over here
01:13 - so let me just copy this class name in
01:15 - order to make this as a flex container
01:17 - we can provide it inside the CSS file
01:20 - and then simply we can provide the
01:22 - display property equal to Flags over
01:24 - here and then apart from this we will
01:26 - have the background color as black color
01:28 - for this navigation bar over here let me
01:30 - just save this file now and try
01:32 - reloading this page once again on the
01:34 - browser so as you can see the items are
01:36 - getting displayed with the dark blue
01:38 - color over here in the horizontal
01:40 - Direction because the flex direction is
01:42 - row by default for this particular Flex
01:45 - container now guys apart from this we
01:47 - have the margin over here by default at
01:49 - the top left and the right direction
01:51 - over here so simply we are going to
01:53 - provide the star character inside which
01:55 - we will make the margin as zero and also
01:57 - the padding as zero in this case so guys
02:00 - let me just save this file now this is
02:02 - used in order to remove the spaces at
02:04 - the top left and right direction of the
02:07 - navigation bar now guys apart from this
02:09 - we will also provide certain CSS
02:11 - properties for these Flex items that you
02:13 - can see so first of all we will use this
02:15 - naar class over here after the dot
02:18 - character and then for the diff tag we
02:20 - are going to provide certain CSS
02:22 - properties over here and then after that
02:25 - we are going to provide certain CSS
02:27 - properties for the a tag as well inside
02:29 - the tag which is present inside the flex
02:32 - container so first of all let us provide
02:34 - the CSS properties for the a tag and
02:36 - then we will provide the color as the
02:38 - white color over here because currently
02:40 - it is the default color that is dark
02:42 - blue color you can see in this case and
02:44 - also we are going to provide the text
02:46 - decoration CSS property as none so that
02:49 - there is no underline for the different
02:51 - links that are getting provided so let
02:53 - me just reload this page once again on
02:55 - the browser as you can see these are the
02:57 - links that are getting displayed over
02:59 - here now as for the diff tag we need to
03:01 - provide certain padding in this case so
03:03 - let's say we provide five pixels of
03:05 - padding over here from all the four
03:07 - sides let me just reload this page as
03:09 - you can see we have provided certain
03:11 - padding over here for the diff tag and
03:13 - then guys what we will do is when we get
03:14 - the mouse cursor on these links over
03:17 - here which is the flex items that are
03:19 - the navigation items in this case inside
03:21 - the navigation bar we want to change the
03:24 - background color of the diff tag so what
03:26 - we can do is simply I'm going to copy
03:28 - this line of code over here that is name
03:30 - bar and then inside this we have the tip
03:33 - and then on over event so in this case
03:35 - we are going to use the Pudo class that
03:37 - is hover in this case we can provide the
03:40 - background color over here so simply we
03:42 - can say the value as red color in this
03:44 - case so guys basically this will help us
03:46 - in order to change the background color
03:48 - to red when we get the mouse cursor on
03:50 - the different diff tags that are present
03:52 - as the flex items inside the flex
03:55 - container so guys let me just save this
03:56 - file now and try reloading this page
03:58 - once again on the browser when we get
04:00 - the mouse cursor now on this diff tag as
04:02 - you can see the background color is now
04:04 - getting updated to red color over here
04:07 - so guys in this way we have easily
04:08 - created the navigation bar just by using
04:11 - the display equal to flex and then we
04:13 - have provided certain CSS properties for
04:15 - the flex items which are nothing but the
04:17 - links inside the navigation bar now guys
04:20 - apart from this we can also display
04:22 - these items at the center of the
04:24 - navigation bar as well so what we can do
04:26 - is for the flex container that is having
04:28 - the class name bar simply we can provide
04:31 - the justify content CSS property and
04:34 - simply we can say Center as the value by
04:36 - default the value is start over here
04:38 - which helps us in order to display this
04:40 - Flex item at the left hand side of the
04:42 - screen but when we say Center value it
04:44 - will display all the flex items at the
04:47 - center of the flex container so when we
04:49 - reload this page once again as you can
04:51 - see all the items are now getting
04:53 - displayed at the center of the flex
04:55 - container over here apart from this if
04:57 - we want all these items to be displayed
04:59 - on the right hand side of this
05:01 - particular Flex container simply we can
05:03 - say end value over here for the justify
05:05 - content let me just reload this page
05:07 - once again so these are the navigation
05:09 - items that are getting displayed at the
05:11 - right of the flex container over here we
05:13 - can also increase the padding as far as
05:16 - the left and the right padding is
05:17 - concerned so basically we have provided
05:19 - five pixels from all the four sides so
05:21 - we can provide the 10 pixels to the left
05:24 - and right direction so guys basically
05:26 - the first unit is corresponding to the
05:28 - top and bottom padding over here and the
05:31 - second parameter is representing the
05:33 - left and right padding over here let me
05:35 - just reload this page once again on the
05:37 - browser so as you can see we have the
05:38 - padding that is increased over here
05:41 - apart from this if you want to add more
05:43 - navigation items over here simply you
05:45 - have to come to the HTML file and you
05:48 - can copy paste these lines of code over
05:50 - here and then let us say we want another
05:52 - item to be sitemap over here and then
05:54 - the next item that is the sixth item to
05:56 - be contact us over here so guys simply
05:59 - we can provide the different menu items
06:01 - inside the navigation bar let me just
06:03 - save this file now and try reloading
06:05 - this page once again on the browser so
06:07 - as you can see automatically the number
06:08 - of navigation items have increased and
06:11 - you don't have to change anything inside
06:13 - the CSS file once you have set all these
06:16 - CSS properties with the help of the flex
06:18 - container over here now guys apart from
06:20 - this when you decrease the width of the
06:22 - screen over here so let me just open the
06:25 - console in this case so as you can see
06:27 - when we increase or decrease the width
06:29 - of the screen basically the navigation
06:31 - bar is still being displayed as the
06:33 - horizontal navigation bar how do we
06:35 - display it as a vertical navigation bar
06:37 - when the width of the screen is less
06:40 - than 500 pixels over here so in this
06:42 - case we can simply use the media query
06:45 - over here so what we will do is inside
06:47 - the CSS file we will use aate and then
06:50 - we will use the media screen query over
06:52 - here and then after this we will have
06:54 - the end keyword and inside the
06:56 - parenthesis we will provide Max with in
06:59 - this case as the CSS property and it
07:01 - should be 500 pixels over here now guys
07:04 - when the width of the screen is 500
07:06 - pixels or below we will be using the CSS
07:09 - properties inside this media query to be
07:11 - implemented on the web page so guys we
07:14 - will be having the Nave bar class over
07:16 - here inside the media query and for this
07:19 - Nave par that is the flex container we
07:22 - need to provide the flex direction is
07:24 - horizontal so guys what this will do is
07:26 - basically the flex direction is Row in
07:29 - this case which is the default Flex
07:31 - Direction value and that is how we are
07:33 - able to display this navigation bar from
07:36 - left to right over here in the
07:37 - horizontal Direction but when we
07:39 - decrease the width of the screen we want
07:41 - this navigation bar to be displayed in
07:44 - the vertical Direction over here so
07:46 - simply we will set the flex Direction
07:47 - equal to column in this case which will
07:49 - help us in order to display all the
07:51 - items in the vertical Direction when the
07:54 - screen width decreases to below 500
07:57 - pixels so let me just save this file now
07:59 - and try reloading this page once again
08:01 - on the browser currently the screen
08:03 - width is more than 500 pixels but when
08:05 - we reduce the width of the screen so as
08:07 - you can see currently it is 502 pixels
08:10 - and then when we move it below 500
08:12 - pixels over here you can see that the
08:14 - items are now getting displayed in the
08:16 - vertical Direction over here and in this
08:18 - way you can easily change the navigation
08:21 - bar from horizontal to the vertical
08:23 - Direction based on the width of the
08:25 - screen in this case so guys this is one
08:27 - of the important implementation as far
08:30 - as responsive web design is concerned so
08:32 - basically your web page or websites will
08:35 - be used on different screen devices
08:37 - which will have different width so guys
08:39 - basically the desktop computers and the
08:41 - smartphones and the tablets all have the
08:43 - different screen sizes over here and
08:46 - accordingly you need to handle all these
08:48 - HTML elements so flexbox model helps you
08:51 - in order to create the responsive web
08:53 - design so that the user experiences
08:56 - better on all the screen devices so guys
08:58 - in this way you can create the
09:00 - horizontal and the vertical navigation
09:02 - bar based on your project requirements
09:04 - with the help of the flex container over
09:06 - here and the media query as well that we
09:09 - have seen with the help of the examples
09:11 - so guys comment in the comment section
09:12 - below whether you have learned something
09:14 - out of this video please make sure that
09:16 - you like this video so that it reaches
09:17 - to more people and subscribe to this
09:19 - channel so that you get the
09:20 - notifications on upcoming videos as well
09:23 - the next video that we are going to talk
09:24 - about is simple responsive design using
09:27 - flexbox in CSS in which we are going to
09:30 - create a simple UI using the flexbox
09:33 - model in CSS so stay tuned