00:00 - hey what's up guys welcome to another
00:02 - video in which we are going to learn
00:03 - about string in Python Programming so
00:06 - guys in computer programming a string is
00:08 - a sequence of characters so for example
00:11 - as you can see this hello word it is the
00:13 - string which is the sequence of
00:15 - characters that is h e double l o so
00:18 - this is a string containing the sequence
00:20 - of these characters and we call it as a
00:23 - string now we use the single quotes or
00:25 - double quotes to represent a string in
00:27 - Python so basically whenever we are
00:29 - defining a string we use the sequence of
00:32 - characters which are supposed to be
00:33 - enclosed Within These double quotes or
00:36 - else we can use the single quotes as
00:37 - well so as you can see for example Str
00:40 - that is the variable name that we have
00:42 - taken over here followed by the equal to
00:44 - operator we have the string that is
00:46 - programming for beginners which is the
00:48 - name of the YouTube channel which you
00:50 - should definitely subscribe and this is
00:52 - enclosed within the two double quotes
00:53 - over here so let us check this with the
00:55 - help of example now we have Str it is
00:58 - equal to inside the double we can
01:00 - provide our strength that is programming
01:03 - for beginners over here and then simply
01:06 - we can print the string by using the
01:07 - print function so we have print followed
01:10 - by open and close parenthesis and then
01:12 - we provide this Str variable name let me
01:14 - just save this file now and try running
01:16 - this code as you can see programming for
01:18 - beginners is getting printed now now
01:20 - what are the different operations how do
01:22 - we access string characters in Python so
01:25 - let's say if I only want to print this
01:28 - character that is p over here how can we
01:30 - do that so one way in order to do that
01:32 - is by using the indexing which means we
01:35 - can use the index number basically the
01:38 - indexes that we have seen in the list
01:39 - and Tuple in the previous videos are
01:42 - also applicable over here for Strings as
01:44 - well so this letter that is p can be
01:47 - accessed by using the index number which
01:49 - starts from 0 so this is the zeroth
01:51 - index number which defines this P
01:53 - character the next character that is R
01:55 - it is at the first index number and then
01:57 - the next character is at the second
01:59 - index number and so on so we can simply
02:02 - use the variable name and then in inside
02:04 - the open and close square brackets we
02:06 - can provide the index number so over
02:08 - here after the variable name inside the
02:11 - open and close square brackets as you
02:13 - can see we provide the index number that
02:15 - is 0 which will point to this character
02:18 - that is p over here so let me just save
02:20 - this file and try running this code now
02:22 - as you can see p is getting printed over
02:24 - here now let's say we want this o to be
02:26 - printed so what is the index number for
02:29 - this so the first one is zeroth index
02:31 - and then we have first index over here
02:33 - and then this o is at the second index
02:35 - number so we provide number 2 that is
02:38 - inside the open and close square
02:40 - brackets let me just save this file now
02:42 - and try running this code so as you can
02:44 - see o is getting printed and in this way
02:46 - if you want to access a single character
02:48 - from the string you can use the index
02:51 - number in order to access them now there
02:53 - is another variation we can also use the
02:56 - negative indexing which means the
02:58 - negative index numbers can also be used
03:00 - in order to access the last elements of
03:03 - the string so let let's say if you want
03:05 - to access the last element first element
03:07 - is having the index number 0 and the
03:09 - previous index number that is before the
03:11 - number 0 we have minus 1 in the number
03:13 - system so minus 1 will refer to the last
03:16 - element inside this sequence of
03:19 - characters which is s over here so when
03:21 - we provide minus 1 in this case inside
03:24 - the open and close brackets so let me
03:26 - just save this file and try running this
03:27 - code as you can see s is getting granted
03:30 - so minus 1 is pointing to this character
03:33 - that is s what will be the second last
03:35 - character it will be minus 2 in this
03:37 - case so when we provide minus 2 save
03:39 - this file and try running this code so
03:41 - as you can see this R is getting printed
03:44 - over here and in this way we have the
03:46 - negative indexing Concept in Python
03:48 - Programming now there is another way we
03:50 - can use the slicing operator in order to
03:53 - print the subset of this sequence of
03:55 - characters so let's say if we only want
03:58 - this programming word to be printed
04:00 - instead of programming for beginners
04:02 - that is the entire ring so what we can
04:05 - do is so we have to mention the indices
04:07 - in order to print these characters only
04:09 - so it starts from 0 and then we have one
04:13 - two three four five six seven eight nine
04:18 - ten and then we have to take extra index
04:20 - number that is 11th as well because at
04:23 - last index number is not included
04:25 - whenever we are using the slicing
04:27 - operator so the indices will be between
04:29 - 0 to 11 in this case so how do we
04:31 - provide that range we provide 0 first
04:34 - that is the left hand side index
04:35 - followed by the colon and then we
04:37 - provide 11 that is the second index up
04:40 - to which all the characters must be
04:42 - taken and printed over here so as you
04:44 - can see this is the slicing of the
04:46 - sequence of characters let me just save
04:48 - this file and try running this code now
04:49 - as you can see programming is getting
04:51 - printed over here let's say we want to
04:53 - include the characters up to F so we
04:56 - have to provide the index up to O over
04:58 - here so basically this was the 11th
05:00 - index and then we have 12 and then 13 so
05:03 - over here what we can do is we can
05:05 - simply provide 13 in this case so let me
05:07 - just save this file now and try running
05:09 - this code so as you can see programming
05:11 - word is getting considered and then
05:13 - after that we have the space and then f
05:15 - is also considered which is at the 12th
05:17 - index there is another way we can do
05:19 - this instead of providing this zero
05:21 - index we can just remove this so by
05:23 - default it will take from the start of
05:26 - the string that is all the characters
05:27 - starting from the zeroth index over here
05:29 - so let me just save this file and try
05:31 - running this code now so as you can see
05:33 - again we are getting the same output
05:34 - that is programming up to the F
05:36 - character over here what if we want from
05:38 - this o character which is at the 13th
05:41 - position up to the last position so what
05:43 - we can do is we can simply provide the
05:45 - 13th index number which will start the
05:47 - string from this particular character
05:49 - and Then followed by colon and there is
05:52 - no need to provide the last index
05:53 - because we want all the characters to be
05:55 - included so this is the slicing operator
05:57 - first we have the 13 index number and
06:00 - then colon over here let me just save
06:01 - this file now and try running this code
06:03 - so you can see after F we are getting o
06:06 - r over here and then we have the space
06:07 - character and then we have the beginners
06:09 - as well so this is the way that we can
06:11 - use the slicing in Python in order to
06:13 - get the substring from the entire string
06:16 - that we have already defined now guys
06:18 - very important python strings are
06:20 - immutable so in Python strings are
06:22 - immutable that means the characters of a
06:24 - string cannot be changed so let's say
06:26 - this first character that is p if we
06:28 - want to change that character so what we
06:30 - will do is we will provide Str and Then
06:32 - followed by 0 and then instead of this P
06:35 - character let's say I want to provide
06:37 - the character Q over here and then let
06:40 - me just print the string once again so
06:42 - we will simply print the string let me
06:44 - just save this file and try running this
06:46 - code now as you can see we are getting
06:48 - the type error string object does not
06:50 - support item assignment so we cannot
06:52 - change any of the characters over here
06:55 - but there is another way to do this what
06:57 - we can do is simply we can copy this
06:59 - entire string value and paste this over
07:01 - here and then again instead of P we we
07:04 - can provide Q over here but this time we
07:06 - have to remove this index number so this
07:08 - is possible because we are providing the
07:11 - reassignment of the string variable so
07:13 - let us check this we'll save this file
07:15 - and try running this code now as you can
07:17 - see we are getting Q over here and all
07:19 - the other characters are same so
07:21 - basically by immutable we mean that we
07:23 - cannot change a particular Single
07:25 - Character inside the string by using the
07:28 - index number for that particular
07:29 - character but in case if you want to
07:32 - reassign the entire string that can be
07:34 - done by using such reassignments
07:36 - operator now guys there is another
07:38 - important functionality in Python
07:40 - multi-line strings are allowed so
07:42 - basically we can also create a
07:44 - multi-line string in Python so for this
07:46 - we use the triple double quotes or
07:48 - triple single quotes over here so what
07:50 - we will do is let's say I'll just remove
07:51 - these lines of code and then I'll say
07:54 - Str it is equal to 3 times double quotes
07:57 - over here we will use and then I will
08:00 - say this is first line
08:03 - and then on the next line we will say
08:05 - this is another line so this is
08:08 - basically the multi-line string that we
08:10 - have defined so how do we print this
08:12 - simply by using the normal wave that is
08:14 - print function followed by the name of
08:17 - the string that is Str variable let me
08:19 - just save this file and try running this
08:21 - code as you can see the format in which
08:23 - we have returned the string that is the
08:25 - three double quotes were there over here
08:27 - followed by on the next line we were
08:29 - having this is first line and then this
08:31 - is another line and then we were having
08:33 - another double quotes over here so these
08:35 - double quotes followed by space
08:36 - characters and then between those space
08:38 - characters this is another line if we
08:40 - don't want these base characters soon
08:42 - after the double quotes are being
08:44 - mentioned we have to provide the strings
08:47 - over here so the start of the double
08:49 - quotes at the same line we are having
08:51 - this is first line and this is another
08:53 - line and then we have the three double
08:55 - quotes on that same line so let me just
08:57 - save this file now and try running this
08:58 - code so basically this is the format so
09:01 - whatever format we follow in the this
09:03 - three double quotes or three single
09:05 - quotes the same format will be followed
09:07 - while printing those lines on the
09:08 - terminal now what are the python string
09:10 - operations basically you can compare two
09:12 - strings with the equal to operator over
09:14 - here as you can see so let's say we have
09:16 - two streams over here string one it is
09:19 - equal to let's say we have John and then
09:22 - string two it is equal to let's say we
09:24 - have the name Theta over here so we have
09:27 - free talk so what we will do is simply
09:29 - we will print str1 it is equal to str2
09:33 - so this is nothing but we are comparing
09:35 - two strings by using the equal to equal
09:37 - to operator which we have done
09:39 - previously as well while we were using
09:41 - the relational operators in order to
09:43 - compare two numbers we can compare two
09:45 - strings in the same way as well it will
09:47 - either return true or false based on
09:49 - whether they are equal or not so let me
09:51 - just save this file and try running this
09:52 - code now as you can see we are getting
09:54 - false that's because the names are
09:56 - different so what if we make the names
09:58 - same so I'll just copy this value and
10:00 - paste this over here now both the
10:01 - strings are same SDR 1 and str2 both are
10:05 - having the value that is John so let me
10:06 - just run this code now as we can see we
10:09 - are getting true over here that's
10:10 - because both the strings are same in
10:11 - this case now there is another operation
10:13 - how do we join the two or more strings
10:16 - so we can do so by using the plus
10:18 - operator so let's say we go back over
10:20 - here once again we provide the string to
10:22 - S Peter and we want to join both the
10:25 - strings so in this case instead of equal
10:27 - to equal to what we will do is we will
10:29 - specify the string 1 that is str1 and
10:32 - then plus operator and Then followed by
10:34 - str2 in this case so let me just save
10:37 - this file now and try running this code
10:39 - as you can see we are getting John Peter
10:41 - over here continuously there is no space
10:43 - character so either we can provide a
10:45 - space character over here or else we can
10:47 - have the space character inside the
10:49 - print function as well so we can have
10:51 - the double quotes inside which we can
10:53 - have the space character and then again
10:55 - we have to use the plus operator in
10:58 - order to join these strings so let me
10:59 - just save this file now and try running
11:01 - this code so as you can see we have
11:03 - getting John Peter and then there is a
11:05 - space character in between so we can
11:07 - join multiple strings as well by using
11:09 - the plus operator over here the same
11:11 - plus operator will be used in order to
11:13 - add two numbers if these variables are
11:15 - numbers but in our case these variables
11:17 - are strings and that is why it is being
11:19 - used in order to join the two strings in
11:22 - this case now how do we iterate through
11:24 - a python string so basically we can
11:26 - iterate through a string by using the
11:27 - for Loop so let us check this with the
11:29 - help of example now let's say we have
11:31 - string 1 over here we provide for
11:33 - followed by S which is a temporary
11:35 - variable and then we have the in keyword
11:38 - followed by str1 I'll just make this as
11:41 - item so that it is more user friendly in
11:43 - order to understand so basically str1
11:46 - which is having the sequence of
11:48 - characters one character at a time will
11:50 - be assigned to this item variable and
11:52 - the control flow will go inside this for
11:55 - Loop now inside this we can simply have
11:57 - the item being printed so when we
11:59 - provide item over here inside the print
12:01 - function and when we say save this file
12:03 - and try running this code as you can see
12:05 - all the characters that is j o h n these
12:08 - are getting printed on separate lines
12:10 - how do we get them on the same line so
12:12 - what we can do is we can provide the end
12:14 - operator equal to we can simply provide
12:17 - the double quotes and we don't have to
12:19 - provide anything over here if we want to
12:21 - separate all the characters with a comma
12:23 - we can provide comma over here as well
12:25 - so let me save this file and try running
12:26 - this code as you can see John is getting
12:28 - printed but all the characters are
12:31 - getting separated using the comma we can
12:33 - simply remove this comma over here I'll
12:35 - save this file and try running this code
12:37 - now as you can see we are getting John
12:39 - over here so since we have provided this
12:41 - end parameter with nothing but simply
12:43 - double quotes we are getting all the
12:45 - characters or else when we don't provide
12:47 - this parameter by default the end
12:49 - parameter is having the slash n
12:51 - character due to which all the items
12:53 - will be printed on the new lines there
12:55 - is another important thing how do we
12:57 - find the python string length so
12:59 - basically we can use the Len method to
13:01 - find the length of the string so let's
13:03 - say we have programming for beginner
13:05 - string over here so I'll just type
13:07 - programming for
13:09 - beginners and we want to find the length
13:12 - of the string that means how many
13:13 - characters are present inside the string
13:16 - so we can simply use the Len function
13:18 - that is the length function in order to
13:20 - print the count of the characters inside
13:22 - the string so we can have the Len
13:25 - function followed by inside the open and
13:28 - close parenthesis we have the variable
13:29 - name that is Str over here so let me
13:32 - just save this file and try running this
13:33 - code so it is saying object of type type
13:36 - has no length so basically we have
13:38 - provided Str over here instead we have
13:40 - to provide str1 which is the variable
13:43 - name so that was the mistake so let me
13:45 - just save this file now and try running
13:46 - this code as you can see 25 we are
13:49 - getting that is the number of characters
13:51 - that are present inside this string
13:53 - let's say I add some more characters
13:54 - over here I provide one two which means
13:57 - I have added two more characters inside
13:59 - the string so that should be 27 in this
14:02 - case so when we just save this file now
14:03 - and try running this code we get 27 as
14:06 - the count which is the updated count of
14:08 - number of characters in inside the
14:10 - string and that is how this length
14:12 - function will work in order to return
14:14 - you one particular integer which is the
14:16 - count of the number of characters inside
14:18 - the string now guys there is another
14:20 - important thing string membership test
14:22 - so basically this we have already seen
14:24 - we can test if a substring exists within
14:26 - a string or not using the keyword in so
14:29 - we have already used the for loop as
14:31 - well and in the membership operator we
14:33 - have used the in keyword in order to
14:35 - find a particular letter is present or
14:38 - not inside the string so that you can
14:39 - take as a homework for you so that you
14:41 - can practice on your own you can find
14:43 - out whether the character X is present
14:45 - inside the string or not and if it is
14:47 - present then you should display true and
14:49 - if it is not present then you should
14:51 - display false comment in the comment
14:52 - section below what is the output of your
14:54 - program while using this membership
14:56 - operator that is n now guys very
14:58 - important thing there is something
14:59 - called as Escape sequences in Python now
15:02 - the escape sequence is used to escape
15:04 - some of the characters present inside a
15:06 - string so what we have done over here is
15:09 - while profile adding the string we are
15:11 - enclosing it using the double quotes but
15:13 - what if the double quotes is a part of
15:16 - the string let's say I want to provide a
15:18 - double quotes over here before beginners
15:20 - so as you can see after providing the
15:22 - double quotes we are getting a red
15:23 - underline over here which means there is
15:25 - some issue so what we can do is in order
15:28 - to avoid this issue and to make this as
15:30 - a part of the string we have to use the
15:32 - Escape character which means we have to
15:34 - use a backslash character over here just
15:37 - before this special character so this is
15:39 - the way that we use the Escape character
15:41 - we use the backslash character over here
15:43 - once and then followed by our special
15:45 - character which is causing the issue and
15:47 - in this case this double quote will be
15:50 - the part of the string now so let me
15:51 - save this file and try running this code
15:53 - currently we are getting the length of
15:55 - the string what we will do is I'll just
15:56 - remove this length function so that we
15:58 - can print the value of the string so
16:01 - I'll just save this file and try running
16:02 - this code as you can see programming for
16:04 - and then we are getting the double
16:06 - quotes over here which is the part of
16:08 - the string and then we have the beginner
16:09 - as over here so this is the way in case
16:12 - you want to escape certain characters or
16:14 - special characters we can use the
16:16 - backslash which is known as the Escape
16:18 - character in Python Programming now guys
16:20 - there is another way in order to print
16:21 - the string by using the python string
16:23 - formatting so as you can see for example
16:25 - let's say we have the name that is John
16:27 - and we have age it is equal to 25 so one
16:30 - way that we can print both that is name
16:32 - and age is by using the multiple objects
16:35 - inside the print statement so let us
16:37 - check this so we have name over here
16:39 - which is John right now and then let's
16:42 - say we have age it is equal to 25 and we
16:46 - want to print both that is name and age
16:48 - within one print function so what we
16:50 - will do is we will say name is followed
16:54 - by comma and then we provide a name and
16:57 - then again comma and then we have double
16:58 - quotes and then we provide and age
17:03 - is followed by comma and then we have
17:06 - age over here so what we have done is
17:08 - this string will be printed that is name
17:10 - is followed by this name value will be
17:13 - taken from this variable that's because
17:15 - we have provided it outside the double
17:17 - quotes over here and after providing
17:19 - this comma and then again there is a
17:21 - comma and then we have a normal string
17:23 - label that is and ages and then we are
17:26 - specifying the H so this is one way in
17:28 - order to print both that is name and age
17:30 - in the same print statement so let me
17:32 - just save this file now and try running
17:34 - this code so as you can see name is John
17:37 - and ages 25 over here but guys this can
17:40 - be confusing since we have to use
17:42 - multiple commas over here as well as
17:44 - multiple double quotes as well so there
17:46 - is another way in order to print the
17:48 - same string so what we can do is again
17:50 - we can have the print function but this
17:53 - time what we will do is in the open and
17:55 - close Parent Access we provide the F
17:57 - character followed by single quotes over
18:00 - here so inside the single course we can
18:02 - provide the the variable name that is
18:04 - name and age as well so in this case if
18:07 - we want to get the value of this name
18:09 - variable we have to enclose it within
18:12 - the curly braces so these are the curly
18:15 - braces as you can see we have the open
18:16 - and close curly braces and inside this
18:19 - we provide a name over here so if we do
18:21 - it in this way we provide the F
18:23 - character and then inside the single
18:25 - course inside the curly braces we have
18:28 - the name over here it will print the
18:30 - value that is John so let me just save
18:32 - this file and try running this code as
18:34 - you can see John is getting printed
18:35 - which is the value of this name variable
18:37 - now we want to print the entire string
18:40 - that is we also want the labels so
18:42 - before this name that we have provided
18:44 - we can simply provide the string that is
18:46 - name is and Then followed by open and
18:49 - close braces and inside the braces it
18:51 - will be name variable name and then we
18:54 - can simply provide end page is followed
18:58 - by open and close braces and then we can
19:01 - provide the age variable name so guys
19:03 - this is the format we have the F
19:05 - character and inside the single quotes
19:07 - as you can see we have provided the
19:09 - string label that is name is and Then
19:11 - followed by open and close curly braces
19:14 - inside which we provide our variable
19:16 - name and Then followed by and ages or
19:19 - any other string label that you want to
19:20 - Define and then we can have the variable
19:22 - name that is age over here inside the
19:25 - open and close curly braces so let me
19:27 - just save this file now and try running
19:28 - this code as you can see we have the
19:30 - perfect string that we wanted that is
19:32 - name is John and ages 25 so this is
19:35 - another way we can use the python string
19:38 - formatting by using this F character
19:39 - inside the print function in order to
19:42 - print the string in the way that we want
19:44 - to print so Guys these are certain
19:45 - things as far as strings are concerned
19:47 - in Python programming language please
19:49 - make sure that you practice on your own
19:50 - so that on different inputs you get
19:52 - different outputs please make sure that
19:54 - you like this video so that it reaches
19:56 - to more people and subscribe to this
19:57 - channel so that you get the
19:58 - notifications on upcoming videos as well
20:00 - the next video that we are going to talk
20:02 - about is is set in Python Programming so
20:05 - stay tuned