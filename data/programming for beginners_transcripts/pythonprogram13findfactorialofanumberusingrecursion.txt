00:00 - hey what's up guys welcome to another
00:02 - video in which we are going to write
00:03 - Python program to find the factorial of
00:06 - a number using recursion so guys the
00:08 - factorial of a number is the product of
00:10 - all the integers from the number one up
00:13 - to the number that is entered by the
00:14 - user for which we need to find the
00:16 - factorial now for example the factorial
00:18 - of the number that is 6 it will be 1
00:21 - multiplied by 2 multiplied by 3
00:23 - multiplied by 4 multiplied by 5 and then
00:26 - multiplied by 6 which is equal to 720
00:28 - which is the factorial of 6 similarly
00:31 - factorial is not defined for the
00:33 - negative numbers and the factorial of
00:35 - the number that is 0 it is equal to 1
00:37 - and this is the denotion that we use in
00:40 - order to depict that this is 0 factorial
00:42 - and it is equal to 1. so guys how do we
00:44 - find the factorial of a number using
00:46 - recursion we are going to check in this
00:48 - program now previously we have seen the
00:50 - Python program in order to find the
00:52 - factorial by using the for Loops over
00:54 - here we were using the for Loop and then
00:57 - with the help of the range function as
00:59 - well we were multiple applying all the
01:01 - numbers starting from the number one up
01:03 - to the number that is entered by the
01:05 - user now guys how we can do this using
01:07 - the recursive call we will have to
01:09 - remove these lines of code and then what
01:11 - we have to do is the number that will be
01:12 - entered by the user it will be saved in
01:15 - this number variable and we have to
01:17 - Define another function that is
01:18 - factorial and we will get the result
01:21 - inside this variable over here so result
01:23 - it is equal to factorial and then we
01:26 - will pass this variable that is number
01:28 - to this factorial function so over here
01:31 - we are providing the parameter that is
01:33 - number to this factorial function now
01:35 - guys what we have to do is we have to
01:36 - Define this function so over here before
01:39 - this code we will use the def keyword in
01:42 - order to define the factorial function
01:44 - so over here we have the AF keyword
01:46 - followed by the name of the function
01:47 - that is factorial it will take one
01:49 - parameter so over here let's say we
01:51 - provide the parameter name as X so what
01:54 - we have to do is if the number that is X
01:56 - it is equal to 1 then we have to return
01:58 - 1 so over here will simply check whether
02:01 - X it is equal to 1 and if this is the
02:04 - case then we will just return 1 over
02:07 - here and then guys if it is not equal to
02:09 - 1 what we have to do is we have to use
02:11 - the return keyword and then we will say
02:13 - x multiplied by factorial of x minus 1
02:16 - this time so let's say if the number it
02:19 - is 2 that is entered over here by the
02:21 - user so it will be equal to 2 multiplied
02:24 - by what we have to find the next number
02:26 - so basically we will be multiplying all
02:28 - the numbers starting from 2 and we will
02:30 - decrement the number one at a time up to
02:33 - we reach once over here if the number
02:35 - that is passed by the user is 2 over
02:37 - here x will get the number as 2 and is x
02:39 - equal to 2 no this time so what we have
02:41 - to do is we have to do 2 multiplied by
02:44 - we need to get the number one over here
02:46 - so what we will do is again we will call
02:48 - the factorial function this time but
02:50 - this time we will decrement the number
02:52 - that is X by 1 so over here x minus 1
02:55 - will be passed so 2 minus 1 is 1 so
02:58 - again the control flow will go over here
03:00 - and it will check whether X is equal to
03:02 - 1 yes this time so it will return 1 so
03:05 - over here factorial of x minus 1 will be
03:07 - replaced by 1 and x value was 2 so 2
03:10 - multiplied by 1 will be 2 and that is
03:12 - what will be returned into this result
03:14 - variable and then guys what we can do is
03:17 - simply we can print this result so we
03:19 - can say factorial
03:22 - off and third
03:25 - number we will provide the value of that
03:28 - entered number is and then again we will
03:31 - say call depression so over here after
03:32 - this we have to provide the dot format
03:34 - function and then first of all we will
03:37 - provide the number that was entered by
03:38 - the user and then the result variable so
03:41 - guys this is the way that we can use the
03:43 - recursive calls over here basically the
03:45 - recursion is nothing but the function
03:46 - calling itself so over here inside this
03:49 - function body that is factorial function
03:51 - we are calling that function again
03:53 - factorial and that is why since we are
03:55 - calling this factorial function from
03:57 - inside of its body this is a recursive
03:59 - call or else we also say that this is
04:01 - recursion so guys let me just save this
04:03 - file now and try running this code so
04:05 - basically we are going to check the same
04:07 - example over here that is factorial of 6
04:09 - it is equal to 720 so what we can do is
04:12 - enter the number we provide 6 as the
04:14 - number when we press enter factorial of
04:16 - enter number 6 is 720 and then let's say
04:20 - when we provide the number 7 so let me
04:22 - just run this code once again and then
04:24 - over here I'll provide the number seven
04:26 - and when we press enter it is saying
04:28 - 5040 we can verify this using the
04:31 - calculator as well so for the factorial
04:33 - of the number 6 we have already got the
04:35 - result 720 so we will provide 720 AC
04:38 - number the next number is 7 so we just
04:40 - multiply this number by 7 and then when
04:43 - we press equal to it says 5040 and then
04:46 - let's say when we multiply this number
04:48 - by 8 we should get the factorial of 8
04:50 - that is forty thousand three twenty so
04:53 - let's say we run this code once again
04:54 - over here this time we provide the
04:56 - number 8 and then when we press enter it
04:59 - says forty thousand and three twenty and
05:01 - that is what we have got in the
05:03 - calculator as well now guys when we
05:04 - provide the number 10 so let's say I run
05:06 - this code once again we provide the
05:08 - number 10 what will be the factorial of
05:10 - the number 10 comment in the comment
05:12 - section below let us see whether your
05:14 - answer is correct or not so guys this is
05:16 - the very easy way in order to implement
05:18 - factorial of a number Python program
05:20 - using the recursive call or recursion
05:23 - please make sure that you like this
05:25 - video that it reaches to more people and
05:27 - subscribe to this channel so that you
05:28 - get the notifications on upcoming videos
05:30 - as well the next video that we are going
05:32 - to talk about is Python program to
05:34 - display the multiplication table so stay
05:37 - tuned