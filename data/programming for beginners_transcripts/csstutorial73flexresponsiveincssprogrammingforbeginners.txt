00:00 - so now we will see Flex responsive in
00:02 - CSS so guys basically we are going to
00:04 - check the example of a responsive design
00:07 - over here with the help of the CSS
00:09 - flexbox model and we are going to use
00:11 - the flex Direction in this case so guys
00:14 - inside the flexbox model we are going to
00:16 - update the flex direction to column when
00:19 - the screen size reduces to 400 pixels or
00:22 - below so guys by default we are going to
00:24 - keep the flex direction of the flex box
00:26 - as row over here for the desktop
00:28 - computers and then when the screen size
00:30 - reduces to let's say the size of the
00:33 - tablet or the smartphone over here which
00:35 - can be below 400 pixels we are going to
00:38 - change the flex direction to column so
00:40 - guys let us move to the vs code over
00:42 - here and let me just remove the previous
00:44 - lines of code that we had written in the
00:46 - HTML and the CSS files over here now
00:48 - guys simply we are going to have the
00:50 - diff tag with the class container over
00:52 - here and then apart from this we are
00:54 - going to have two diff tags inside this
00:57 - class container the first diff tag is
00:59 - having the content that is one over here
01:01 - and the second diff tag is having the
01:03 - content that is two we are also going to
01:05 - have the ID that is one and two for both
01:08 - these div tags over here so guys this is
01:11 - the content that is div 1 and div two
01:13 - which are having the IDS one and two
01:15 - over here inside the class container now
01:18 - guys we are going to make this diff tag
01:20 - that is having the class container s the
01:22 - flx container over here which is one of
01:24 - the first important step as far as the
01:26 - flexbox model is concerned so simply we
01:29 - are going to copy this class name over
01:31 - here and inside the style. CSS file for
01:33 - this container class we are going to
01:36 - make the display it is equal to flag in
01:38 - this case and let us have the background
01:40 - color as yellow color over here so guys
01:42 - simply we have the yellow color as the
01:44 - background color in this case let me
01:46 - just save this file now and try
01:48 - reloading this page on the browser so as
01:50 - you can see we have the content that is
01:52 - one and two over here now guys let us
01:54 - provide certain CSS properties for this
01:56 - Flex items as well so simply we will be
01:59 - using the do container class over here
02:02 - and then inside this we are going to
02:03 - provide the diff tags in this case now
02:05 - guys let us provide the padding as 20
02:08 - pixels for both these diff tags over
02:10 - here and then apart from this we are
02:12 - also going to provide the background
02:13 - color as black color let me just save
02:15 - this file now and try reloading this
02:17 - page as you can see we have the diff
02:19 - tags that are getting displayed over
02:21 - here but we cannot see the content
02:23 - that's because the color of the text is
02:25 - black color and the background color is
02:26 - also black so let me just set the color
02:29 - to white in this case which is the text
02:31 - color so as you can see we are getting
02:33 - one and two over here now guys let us
02:35 - provide the CSS property that is flex in
02:38 - such a way that both these Flex items
02:40 - takes the entire width of this Flex
02:43 - container over here so what we can do is
02:45 - simply we can provide the flex value it
02:47 - is equal to one in this case so both the
02:50 - diff tags are having Flex equal to 1 so
02:52 - the entire remaining space will be taken
02:55 - by both the diff tags so let me just
02:57 - reload this page as you can see we have
02:59 - one and two over over here let us change
03:00 - the background color of this first
03:02 - element that is the first diff tag to
03:04 - some other color over here so that we
03:06 - can identify both the diff tags
03:09 - separately so what we can do is simply
03:11 - we will use the ID of this diff tag that
03:13 - is one over here and we will use the
03:15 - hash character in this case and then we
03:17 - will be using the background color and
03:19 - we will provide the value as blue over
03:21 - here for the background color CSS
03:23 - property let me just save this file now
03:25 - and try reloading this page as you can
03:27 - see we have the blue color is the
03:29 - background color for the first diff tag
03:31 - and the black color as the second diff
03:33 - tag over here now guys if you notice
03:35 - both the diff tags are getting displayed
03:38 - in the horizontal direction that is by
03:40 - default the flex direction is Row in
03:43 - this case so let us open the console
03:45 - over here so that we can increase or
03:47 - decrease the width of the screen so as
03:49 - you can see the width is getting
03:50 - displayed over here on the top right
03:52 - hand side when we decrease and increase
03:54 - the width over here so guys basically
03:56 - this is width multiplied by height in
03:58 - pixels that is getting display play in
04:00 - this case now guys what we will do is we
04:02 - want the 400 pixels to be the threshold
04:05 - value and below this 400 pixels we want
04:08 - the second element to be displayed below
04:10 - this first element so that on smartphone
04:13 - or the tablet devices the HTML elements
04:15 - are displayed in the vertical Direction
04:17 - over here so guys what we have to do is
04:19 - we can use the media query over here by
04:22 - default the flex container is having the
04:24 - flex direction as row Direction but when
04:26 - the width of the screen is reduced to
04:28 - 400 pix pixels or below we want the flex
04:32 - direction to be the column Direction
04:33 - over here so simply we are going to use
04:35 - the media query in this case so we use
04:38 - at theate character followed by media
04:40 - screen over here and then apart from
04:42 - this we have the end keyword and then we
04:44 - provide the max with CSS property inside
04:47 - the parenthesis now guys the max with
04:49 - CSS property should have the value of
04:51 - 400 pixels because that is the threshold
04:54 - value that we are looking for and then
04:56 - when the width is below 400 pixels we
04:58 - want this Flex container to have the
05:00 - flex direction as column Direction over
05:03 - here so simply we are going to use this
05:05 - class name that is container in this
05:06 - case and then we will simply change the
05:09 - flex direction to column over here so
05:11 - guys this is the way that we can change
05:13 - the flex direction from row to column
05:16 - based on the max width of the screen
05:18 - device so let me just save this file now
05:20 - and try reloading this page once again
05:22 - on the browser notice that previously we
05:24 - were not getting this second item below
05:26 - the first item over here when we
05:28 - increased or decreased the width of the
05:30 - screen now guys when we decrease the
05:32 - width of the screen now after reloading
05:34 - the page currently it is 404 pixels when
05:37 - we reduce it to below 400 pixels as you
05:39 - can see the second element is now
05:41 - getting displayed below the first
05:43 - element over here and in this way you
05:45 - can easily create the responsive design
05:47 - for your web page based on your project
05:50 - requirements now guys when we increase
05:51 - the width of the screen to more than 400
05:54 - pixels again the flex direction is now
05:56 - set to row Direction and the HTML
05:59 - elements are now getting displayed from
06:00 - left to right and then when we reduce
06:02 - the screen width now the second element
06:04 - is going below the first element over
06:06 - here so guys in this way you can easily
06:08 - create the responsive web design based
06:10 - on the flexbox model and also the media
06:13 - queries that you can use based on the
06:15 - different screen devices so guys comment
06:17 - in the comment section below whether you
06:19 - have learned something out of this video
06:21 - please make sure that you like this
06:22 - video so that it reaches to more people
06:24 - and subscribe to this channel so that
06:26 - you get the notifications on upcoming
06:28 - videos as well the next video that we
06:29 - are going to talk about is creating
06:31 - navigation bar using flexbox in CSS so
06:35 - stay tuned