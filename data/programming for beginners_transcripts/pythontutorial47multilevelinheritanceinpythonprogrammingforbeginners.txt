00:00 - hey what's up guys welcome to another
00:02 - video in which we are going to learn
00:03 - about multi-level inheritance in Python
00:06 - Programming so guys in Python not only
00:08 - can we derive a class from the super
00:10 - class but you can also derive a class
00:13 - from the already derived class over here
00:16 - which means we can create a child class
00:18 - from the already existing another child
00:20 - class so this form of inheritance is
00:23 - known as multi-level inheritance so as
00:25 - you can see in this syntax it will get
00:27 - more clear over here so first of all we
00:29 - have the class that is the super class
00:31 - and we have the superclass methods and
00:33 - variables over here next what we have is
00:36 - class derived class 1 and this is
00:38 - deriving the superclass which is the
00:40 - parent class over here it will have its
00:42 - own derived class 1 functions and
00:45 - variables now there is a third class
00:47 - called as derived Class 2 which is
00:49 - deriving this child class that is
00:51 - derived class 1 over here and that is
00:54 - what we have mentioned over here inside
00:55 - the parenthesis and this is called as
00:58 - multi-level inheritance so let us check
01:01 - this with the help of examples now how
01:03 - we can Implement multi-level inheritance
01:05 - in Python so basically first of all we
01:07 - will have the class that is the super
01:09 - class over here so inside the super
01:11 - class what we will do is we will Define
01:13 - the method that is simply super class
01:16 - over here and then after this we have
01:18 - the parenthesis and we say self over
01:20 - here and we can simply provide a print
01:22 - statement and we can say we are inside
01:26 - super class so over here we are simply
01:29 - providing the statement that is we are
01:31 - inside the superclass and then we will
01:33 - have another class which will be the
01:35 - child class of this super class so we
01:37 - will say derived one over here as the
01:39 - child class of which class it is of the
01:42 - super class so basically we have this
01:44 - super class inside this parenthesis
01:46 - which means we are inheriting all the
01:48 - properties of the superclass into this
01:51 - derived one class and then again it is
01:53 - having its own function that is derived
01:55 - to 1 over here so we say derived to 1 it
01:58 - takes one parameter that is self which
01:59 - is is the object itself and then we can
02:02 - simply provide this print statement I'll
02:05 - just copy this and paste this over here
02:06 - and change the content of the statement
02:08 - that is we are inside derived one class
02:12 - so we say derived one class and then
02:15 - guys similarly we have the derived two
02:17 - class as well so I'll just copy these
02:19 - lines of code and paste this over here
02:21 - this time the parent class will be the
02:24 - derived one class so over here we will
02:26 - say derived to 1 so basically this child
02:29 - class it is getting inherited in the
02:32 - derived two class over here so we have
02:34 - named it as derived 2 and the parent
02:36 - classes derived to 1 over here and it is
02:39 - having its own method so we will say
02:40 - derived 2 in this case which is taking
02:43 - self as the parameter and then print we
02:46 - are inside derived to class right now so
02:48 - basically what is happening is inside
02:50 - the derived two class we will also have
02:52 - derived two function we will also have
02:55 - derived one function and we will also
02:57 - have the superclass function which was
02:59 - in narrated by the derived one class
03:01 - over here so we will have all the three
03:04 - functions in the derived two class
03:06 - whereas in the derived to one class we
03:08 - will only have this derived to one
03:10 - function and the super glass function
03:12 - over here so let us check the
03:14 - implementation of all these classes by
03:16 - using the objects so let us say we
03:18 - create the object that is D2 for the
03:20 - derived two class so over here we will
03:22 - provide the derived two class and then
03:25 - what we will do is simply we will call
03:28 - the functions by using the object name
03:30 - that is D2 followed by dot as you can
03:32 - see we are getting all these methods
03:34 - that is derived one derived 2 and the
03:36 - super class so first of all we will call
03:38 - the super class over here and then we
03:40 - have D2 followed by Dot and then we can
03:42 - call the derived one function over here
03:44 - followed by derived two functions so D2
03:47 - followed by Dot and then we have the
03:49 - derived two function as well so
03:51 - basically all the three functions can be
03:54 - accessed by using the object of the
03:56 - derived two class because that is the
03:58 - child class of this derive one class
04:00 - which is again the child class of the
04:02 - super class over here so let us save
04:04 - this file now and try running this code
04:06 - so as you can see we are getting we are
04:09 - inside super class then we are inside
04:11 - the drive to one class and we are inside
04:13 - derived two class so all the print
04:15 - statements are getting executed when the
04:17 - object is often derived at two class but
04:19 - guys what happens if we create the
04:21 - object of the derived one class and use
04:25 - all these functions so let us change
04:26 - this from derived 2 to derive to 1 over
04:29 - here so as you can see we can access the
04:31 - superclass function we can also access
04:33 - the derive to one function but over here
04:36 - this derived two function is coming with
04:38 - a different color which means we cannot
04:40 - access it so let us check this once
04:42 - again so D2 followed by Dot and then we
04:45 - do not have the derived two function why
04:48 - so because we have created the object of
04:50 - the derived one class which will only
04:52 - have access to derived one that is its
04:54 - own function apart from that it will
04:56 - also have the access of the super class
04:59 - function since it was inherited from the
05:01 - superclass so guys we cannot call the
05:03 - derived two function over here so what
05:06 - if we try to access it derived to two
05:07 - functions let us check that so I'll just
05:09 - save this file now and try running this
05:11 - code so as you can see the first two
05:13 - statements are getting printed that is
05:15 - we are inside super class and then we
05:17 - are inside derived one class but then
05:20 - next time the derived two class when the
05:22 - control flow comes over here it is
05:24 - throwing the error that is derived one
05:26 - object has no attribute that is derived
05:29 - to so basically it is saying that inside
05:31 - this derived one class over here we do
05:34 - not have any function which matches with
05:36 - this derived two function over here that
05:38 - we are trying to call so guys you have
05:40 - to be very careful when you are
05:41 - implementing this multi-level
05:43 - inheritance only those functions will be
05:45 - accessible to those objects of the
05:47 - classes which are at the lowest level at
05:50 - the middle level some of the functions
05:52 - will not be accessible and if we create
05:54 - the object of the parent class then that
05:56 - object will not be able to access the
05:58 - functions of the child classes over here
06:00 - so guys practice on your own so that on
06:02 - different inputs you get different
06:03 - outputs please make sure that you like
06:05 - this video so that it reaches to more
06:07 - people and subscribe to the channel so
06:09 - that you get the notifications on
06:10 - upcoming videos as well the next video
06:12 - that we are going to talk about is
06:14 - operator overloading in Python
06:16 - Programming so stay tuned