00:00 - so now we are going to check the break
00:02 - and continue statements in JavaScript so
00:05 - guys basically the break statement jumps
00:07 - out of a particular Loop so previously
00:09 - we had seen how we can use the while
00:11 - loop in order to iterate through a
00:13 - certain block of code continuously until
00:16 - the condition is false so guys similarly
00:19 - we can use the Y Loop once again and
00:21 - then check for a particular condition
00:23 - and if that condition is true then
00:25 - simply we can come out of the while loop
00:27 - and that is how we are going to use the
00:29 - brake state statement and then guys on
00:31 - the opposite side we also have the
00:33 - continue statement in which case the
00:35 - control flow will jump over one
00:37 - iteration in the loop which means the
00:39 - current iteration will be skipped so
00:41 - guys we will check both that is break
00:42 - and continue statement with the help of
00:44 - examples in vs code over here these
00:46 - statements can be used in while and for
00:49 - Loops to either go out of the loop or
00:51 - skip an iteration so guys we will check
00:53 - the examples with the while loop over
00:55 - here in the upcoming videos we are also
00:57 - going to understand how for loops work
01:00 - so guys let us move to the VSS code over
01:01 - here so simply we will create a new file
01:04 - over here we will name it as 22 followed
01:06 - by underscore and then we will say break
01:08 - and continue followed by the extension
01:11 - that is JS file over here so guys
01:13 - basically we have created this
01:14 - particular file that is break and
01:16 - continue. JS so what we will do is let
01:19 - us say we want to print the first 10
01:21 - numbers that is going from 1 up to 10
01:23 - over here so simply we will create a
01:25 - variable that is I in this case that is
01:27 - going to have the initial value as 1
01:29 - over here and then what we will do is
01:31 - let us say we want to use the while loop
01:33 - in this case we will check whether I is
01:36 - it less than or equal to 10 this time so
01:38 - that we can print all the numbers that
01:40 - is 1 up to 10 so guys simply we will
01:42 - provide the console. log statement over
01:44 - here and then we will say the value of I
01:48 - is and Then followed by dollar and then
01:51 - we have open and close curly braces over
01:53 - here and then inside that we have the
01:54 - variable that is I in this case now guys
01:57 - in order to increase the value of the I
01:59 - variable simply we are going to use the
02:01 - increment operator that is i++ let me
02:03 - just save this file now and try running
02:05 - this code on the terminal we will use
02:07 - the node keyword followed by the name of
02:09 - the file that is break and continue. JS
02:12 - so when we run this code as you can see
02:14 - we have the statements that are getting
02:16 - printed over here the value of I is 1
02:18 - and Then followed by two and then so on
02:20 - we have 3 4 up to 10 in this case so
02:22 - guys in this way we can simply use the
02:24 - while loop in order to print the numbers
02:27 - from 1 to 10 instead of manually
02:29 - providing the those numbers from 1 to 10
02:31 - in this case now guys what is the
02:33 - importance of break and continue
02:35 - statements over here so let us say we
02:37 - want to end this particular printing
02:39 - when we encounter the value of I is
02:41 - equal to 5 in this case so guys
02:43 - basically we want to tell The
02:44 - Interpreter that once the value of I is
02:47 - five it should come out of the loop
02:49 - after printing that particular value so
02:51 - let's say the value of I is five is
02:54 - printed over here so after this
02:55 - particular statement we need to check
02:57 - whether the value of I is five so simply
03:00 - we will say if and then inside the
03:02 - parenthesis we have I is it equal to 5
03:05 - over here so guys basically we are
03:07 - checking for the condition whether this
03:08 - I value is equal to 5 if it is true then
03:11 - we want to come out of this particular y
03:14 - Loop instead of printing the other
03:16 - numbers that is 6 up to 10 that were
03:18 - printed previously so what we will do is
03:20 - if this condition is satisfied we simply
03:23 - have to provide the break statement over
03:25 - here so break is another keyword that is
03:27 - reserved by JavaScript language in in
03:29 - order to come out of the existing Loop
03:32 - so guys this particular break statement
03:34 - will check that it is inside this
03:36 - particular while loop over here and the
03:38 - control flow needs to come out of this
03:40 - particular while loop once this break
03:42 - statement is encountered so if we check
03:44 - now only the I value is equal to 5 will
03:47 - be printed from 1 up to five over here
03:49 - and the other numbers that is 6 to 10
03:51 - will not be printed in this case since
03:53 - the interpretor comes out of the while
03:55 - loop and after coming out of the while
03:57 - loop simply we are going to provide
03:59 - another statement that is end of while
04:01 - loop over here so that we get the
04:03 - confirmation that we are actually
04:05 - outside the while loop in this case so
04:07 - let me just save this file now and try
04:09 - running this code once again over here
04:11 - on the terminal and when we press enter
04:13 - as you can see the value of I is 1 and
04:15 - Then followed by the value of I is 2 3 4
04:18 - and then 5 and then after the number
04:20 - that is five over here we have the end
04:22 - of Y Loop in this case because once the
04:24 - value of I was five the break statement
04:27 - helped us in order to come out of the
04:29 - while loop Loop in this case so guys in
04:31 - this way you can simply use the break
04:33 - statement in order to break the
04:34 - particular Loop that is getting executed
04:37 - right now now guys apart from this we
04:38 - also have something called as continue
04:40 - statement in which case what will happen
04:42 - is the control flow will go back to the
04:45 - while loop once again and not execute
04:47 - the remaining lines of code after the
04:49 - continue statement so let us check that
04:51 - as well simply I'm going to comment out
04:54 - these lines of code over here and what
04:55 - we will do is let us say at the value of
04:58 - five we don't want to print that
04:59 - particular statement that is the value
05:01 - of I is five but after the value of I is
05:04 - four we want to directly print the value
05:06 - of I is six over here so what we have to
05:09 - do is again we need to check for the
05:11 - same condition this time but over here
05:13 - we are going to use the continue
05:15 - statement so simply inside the Y Loop we
05:17 - will check whether the value of I is it
05:20 - equal to 5 this time if yes then simply
05:23 - we will provide the continue statement
05:25 - so guys what this continue statement
05:27 - will do is when the control flow comes
05:29 - over here and it realizes that the I's
05:31 - value is five in this case so that this
05:34 - particular expression is true it will
05:36 - encounter this continue statement and
05:38 - whenever this continue statement is
05:39 - present it will make the interpretor go
05:42 - back at the start of the loop over here
05:44 - so what will happen is the interpretor
05:46 - will go back once again over here I is
05:49 - less than or equal to 10 yes this time
05:51 - and then it will again check for the
05:53 - condition so every time the interpretor
05:55 - enters the Y Loop it is going to check
05:57 - whether the condition of I is equal to 5
06:00 - is true or not if it is true then it
06:01 - will go back over here and if it is not
06:04 - true then only it will execute the
06:06 - remaining lines of code after the
06:07 - continue statement guys it is very
06:09 - important to note that while we are
06:11 - providing the continue statement over
06:13 - here it is not increasing the value of I
06:16 - in this case so simply before providing
06:18 - the continue keyword within this
06:20 - particular if statement we need to
06:22 - increment the value of I by using the
06:24 - increment operator in this case so that
06:26 - the value of I can be increased next
06:28 - time and next time when the interpretor
06:30 - comes over here the I's value will be
06:32 - six and this time the expression should
06:34 - be false so that the remaining lines of
06:36 - code should be executed so basically
06:38 - when the I value is five over here it is
06:41 - going to increment the I value so the
06:43 - value will be six now and then this
06:45 - particular continue statement will make
06:47 - The Interpreter go back to this while
06:49 - loop once again and this time the I
06:51 - value is six and this particular
06:53 - condition will be false inside the if
06:54 - statement and then we will have the
06:56 - value of i as 6 after the value of I is
06:59 - 4 four so guys let me just save this
07:01 - file now and try running this code once
07:03 - again over here on the terminal so now
07:04 - if you see first of all we will get the
07:06 - value of I from 1 and then up to four
07:09 - over here so you can see I is 1 followed
07:11 - by 2 3 4 and then we don't have five
07:14 - that's because we have used the continue
07:16 - statement after encountering the value
07:18 - of I is equal to 5 so the value of I is
07:21 - equal to 5 will be skipped this time and
07:23 - then followed by I is 6 Then followed by
07:25 - 7 8 9 and then 10 guys you can skip the
07:29 - other numbers as well so let's say you
07:30 - want to skip the number eight as well
07:32 - right now so currently you are printing
07:34 - the value of eight but you can put the
07:36 - other statement that is I is equal to 5
07:39 - or I is equal to 8 so in both the cases
07:42 - the continue statement will be executed
07:44 - and those numbers will not be printed so
07:46 - let me just save this file now and try
07:48 - running this code once again over here
07:50 - on the terminal so as you can see the
07:52 - value of I is 1 2 3 4 and then we don't
07:55 - have five we directly have six and Then
07:57 - followed by seven and then we don't
07:59 - have8 we have N9 and Then followed by 10
08:01 - and then at the end we have the end of
08:03 - while loop that is outside of the while
08:05 - loop that we had provided previously so
08:08 - guys in this way you can easily use the
08:10 - break and the continue statements in
08:12 - order to either come out of the existing
08:14 - while or the for Loop or else you can
08:17 - continue to the start of the while or
08:19 - for Loop if you are using the continue
08:21 - statement so guys comment in the comment
08:23 - section below whether you have learned
08:24 - something out of this video please make
08:26 - sure that you like this video so that it
08:28 - reaches to more people And subscribe to
08:30 - this channel so that you get the
08:31 - notifications on upcoming videos as well
08:33 - I'll see you in the next video in which
08:35 - we are going to talk about arrays in
08:37 - JavaScript so stay tuned