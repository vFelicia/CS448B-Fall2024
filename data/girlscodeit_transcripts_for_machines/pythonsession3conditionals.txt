hello everyone my name is mj and today i will be your instructor for today we're gonna be learning about conditions and so conditionals is a universal concept across all programming languages so you not only learn this in python but you're learning in java and other etc and so conditionals are decision structures that check the variables state so we can check if the variable is true or if it holds this value and we use that by using if statements and also else statements which accompany those things so firstly we need to talk about boolean so boolean is a data type and a boolean variable holds a true or false value so to create a goldman we just create a variable name so we can do is a cat and we can set it equal to true and similarly we can do is a dot and we can set it equal to x also has two values true or false and so basically what uh conditionals are is there are decision structures so they make choices so in this example we asked the question are you hungry and if we aren't hungry then we're going to eat pizza and if we're not hungry then we're not going to eat pizza we can do the same for this example let's say we are checking that this is a cap so to that we use this statement and we do parentheses and inside the parenthesis we put what we are checking so we are checking if this variable is the cat and if it is a cat then we are going to print this is and so we read it it says this and um pay attention to the syntax so in our if statement we have if and then parentheses and what is in the parentheses right here is called a condition and a condition um and in our estimates in order for the estimates to run this condition needs to be true and so if this condition is true then we are going to run this and i like to think of these indent spaces as like an arrow so like if this is true then do this it's going to print this okay and so for us saying it that we want to put when the condition is true we have to use in depth spaces so um in this case there is another way to do this so we can do if parentheses and in these parentheses we can actually type the variable name and the reason why is because what's inside the parentheses is what we're checking and this must be true in this case is a cat is a boolean variable which is set equal to true so this is saying if true then do this is where you run it it prints it this unit out so this and this is the same thing in this case and we can only um like put a variable name inside of these parentheses if the variable is and just to mention the difference between uh one equal sign one equal sign is like for assigning date so this is assigning true to the variable please be count similar manually we can do x is equal to two it's not saying x is two but double equal signs is like checking uh or comparing um if checking if this variable is true so it's like in that where we have like for comparison we have like x is greater than or equal to zero and we have less than or equal to equals equals so that was an example of seeing if the variable is true or false and we can also check or compare two values so we can check if um two variables are the same so in this example we want to find out if two values are equal to each other and these two values are two dots so we have delta one is equal to teddy and we have the second variable which is dog name2 is equal to 10. so what do you think what type of data type is this is tet so in this case it is a string now remember strings are anything in quotation marks and a string is basically characters strung together so you can have words or sentences and etc and so what this code is doing is essentially it's checking head is the same as 10 here is the slide exclamation if you notice in this example we added an extra conditional this is an else conditional so what does that mean to hint about what an el statement does let's take a look at like what instances will this print out and what instances will this print out and so when we have the dog name 1 is equal to 10 and dog mean 2 is equal to 10 then it will print out it's a match but when we have the dog name 1 is equal to 10 and dog being 2 is equal to 10 it will print out different name and so what all statements are is it's a way of saying if it's not this um then else do this so this is saying but for in an example is saying if like 10 is equal to 10 then it's a match and austin is saying okay if this condition is not true then we're going to do this let's statements and you also have else if statements just say like if it's not a but it is b then do this so as exciting you have a statement a statement b and statement c and if it's not a then go to statement b and if it's statement b then run it this is i'll say but then if it's not standing b either then it's else which is statement c and so but if and else they go together it's like a chunk and so basically only one statement that is true will be rough but um you can also have multiple if statements that you can have as many as statements as you want and so for its statements all the statements that are true will get wrong so let's go over an example okay so let's say we have some money and we want to buy um candy so we can create like a money variable we decided equal to 4.35 and let's say our candy is two dollars so we want to check if we have enough money so we can do that by saying money is greater than or equal to two dollars so this is saying um we need at least two dollars in our wallet to buy kid so if this is true if we do have enough money then we can print um you just want and here we're going to put our favorite uh type of candy so why don't you go to the candies my favorite candy is skills so i'm going to say you bought a pack of skittles and so are you ready it does say you just bought a pack of skittles and let's see i eat my skittles and i want more candy so we can also have an is an elective statement you can say if money is equal to 1.0 that's how much the kitkat costs i want to buy kitkats so you can say you just bought okay and so if you run it um both of these statements get run so if statements you can have as many if statements as you want and in any statements all statements that are true don't get right so keep that in mind so in if statements those statements execute the number of times the condition which is the stuff inside the parentheses is true so let's advance this further so let's try to combine both of these conditions so let's say you can only buy one type of candy you can either buy skittles or you can buy a kit kat we only have one dog in 35 so we want to keep the option of you can either buy skittles or kitkat so we can do valid money is greater than 2 1.00 and you can only buy one right so either skittles or a kit kat um and if you don't have enough money then i'm sorry but you don't have enough ready to buy candy so in this case we have three decisions we can buy skittles we can buy kitkat uh we steadily can't buy anything so sex money is equal to 1.35 what do you think this code will run let's see it says i bought the kitchen and this statement is from before so i'm just gonna delete it so yeah this is we bought the kitkat because we only have a dollar and 35 cents and that's not enough to buy skittles but it's enough to put kitkat and it's more than enough to just buy nothing so just to reiterate you can have as many as statements as you want in all these statements that are true get right before if elsa and else statements they travel in like a chunk or group together and only one statement that is true will get fun so basically what this computer is doing is is checking the first condition if money is going to go to two dollars and if this is true then everything else will get ignored because reading better condition this is true so everything else is ignored and if it's not true then we'll go on to this statement and we check this is true and if it is true then this entire thing is ignored but if this is not true then neither is this true then we will default to an all state so you may ask when will we use these statements and when should we use like if losses than housing or anything else let's take a look at an example and so in this example we are going to write a number which is x from one to five and so x can either be one two three one four and our program is checking if the number we picked is number one so we can do this with a bunch of if statements so we can say that we can do that check if x is equal to one and that says number one we could check if x is equal to number two then we'll say it's not number one maybe it should give x is equal to three and they'll say it's not number one and if x is equal to four there's no one one on one that's using a bunch of if statements and whichever one is true will get run and multiple of these can run um or we can use uh if and bounce and the code is much shorter because in this example we're only checking if x is one so we really only need two statements we can say if x is equal to one then say it's uh the number is one but if it's two three four five we can just say oh like whatever number yeah we can just say oh it's not one so therefore it's not one so like in this case uh less is more in this example um even with what you learned about what do you think this will print so we have doc name 1 is equal to 10 and dot name 2 is equal to teddy and we have this code right here and just for a heads up so this thing right here this stands for not equals so an exclamation mark means not so this is not equals and for this statement right here as you learned in our last lesson strings have index values and so this stream ted it has three characters for three letters but python counts it starting from zero so t is zero and e is one and d is two so when we have a variable name and then these uh square brackets and we have a number inside that is getting the index got the string so this is getting the t from the top pink one and this is getting the t from doubling to the result of this will print out not a match because dog name one is 10 and dog mean 2 is teddy and so what the compare is doing is checking okay is 10 equal to teddy no it's not so we'll move on it's checking if ted is not equal to teddy and this is true and so you may think okay well if you like it does else in the statement this is also true so why doesn't this get right well and if else different valencies they go together right and only one of the statement needs to be true so since this thing is already true then this won't get lot so even though it's not true it just it's just ignored that is it we can actually compare two or more one or more uh conditions we have a variable a's four b is equal to three and let's check if we want to say if a is equal to four and a is greater than zero oh my bad i'm sorry we want to check if a is greater than b so we do that if a is greater than b and we also want to check if a is a positive number so we can use this and symbol or just the word and and what n does is both of these need to be true so we can say a is let's do this another way we can do a plus is greater than a plus and it is a positive number now before we run this can you uh predict any potential errors if not you go ahead and rent and it should look like this now we get to it don't touch it you want to go up at the top here and you see this arrow and you click on it and you see fork this button here you want to click on it because right now this is a public rapple and we want to make it our own so we can make edits to it so you want to click the arrow and click fork and we do that it should direct you to your own personal wrap like you see here this is my username so if you just take a look at this and you can even run it if you want and see what it says basically you have these print statements and you have the input function which just asks you a question and it stores whatever the user puts into the variable let's just run it let's ask this question i typed in and draft it just take this permission see it stores why typed in the variable so we can use it later so yeah and this is our first situation professors need to call you to answer a question you don't know the answer to what to do one two or three pick three it says um her first thing is outraged i need to find him he deducts 20 points from reading and then here are your final results so this is the first situation and now i want you guys to code like a second situation and even a third situation and if you want you can add more situations if you want and take a look at this code because this statement and also and false statements and this uh what this thing this line of code does it saying points minus equals 10. and so like how um well variables temporarily store data so right now point is equal to zero but we can say we can assign a value to the variable 0.6 points is equal to points minus 10. that does is it does 0 minus 10 and it stores that value inside the variable points that is the same for here and this should actually be plus equals five because it says right here and then here we have a challenge and so the challenge is to print out the final results of these houses and so because it's only you in the computer um the other houses will just be randomly generated so we have this random dot rant and function and what that does is it picks a random number from 10 to 30. okay so sorry guys i just had to fix something um so the reason why this is showing up as an air i fixed it now so when you fork it it should look um this part should look different oh yeah a tiny bit and the reason why is because um well first of all we're doing is we are trying to get the final results of all the uh points for each house and over here it uh programmed if your house is gryffindor and it set your points equal to gryffindor and then after that it readily generated other houses and so you want to do this for your house and uh you can do this for all the other houses too so you basically do it for ravenclaw slytherin and hufflepuff so the reason why it's not doing this or it's giving you an error is because so you can think of it as you have this uh toolbox and inside this toolbox you have some tools but not all tools you need and so to get something to some some certain tools you need to import it or put it in your toolbox so to do that we can uh from type from or uh i just type this you don't have to type it basically what we're doing is from random import grant and that just allows us now to utilize this tool and this tool just generates a random integer from 10 to 3. so see it shows uh our results so that is all for this lesson um yep thank you for coming and our next lesson is uh next saturday so thank you for i hope you learned something yeah