and again today will be the last lesson for um this class so if you have like any questions not just about the final project but about like java in general um feel free to just ask me um during this time the lesson itself will also be pretty short we'll just be going over what um ideas for the final project and then um just some tips and tricks for when you're coding um so if you so after like i go over the powerpoint today um i'll be just hanging around um answering your guys's questions um otherwise like if you're comfortable with doing the project yourself and you don't you don't want to like hang out after class um feel free to like feel free to drop off um otherwise like if you have any other questions or um you want to just hang around just in case like you want to like just in case you want some help debugging or like working with your code um feel free to just hang around um i'll be here until until 6 pm est or um or 3 p.m pfc so yeah i'll be available to help all right yeah so again from this for this lesson we'll basically be just going over like um be going over the final project technically the final project is you're creating your own java program yourself um using what we've learned um in the past lessons but um today i'll just be going over just some ideas of like what what are some good ideas for um beginner java programs and what are um some some tips that might help you out when you're working with them code on your own so basically um during this course we went over four major things so the first one is um basic variables and operations so these are just like the basic building blocks of code so the different data types are available in java and what you can do to manipulate those data types um the second one is the if statements and loops so if else statements can do multiple cases and this is just like different ways you can iterate over code or even like or um do like branching code so using um if statements and like four or while loops um the third thing we went over is object classes so objects are sort of a special kind of data type and classes are used to create objects so this is just a more um complex way of being able to um to manipulate data in your code and then finally um the last um kind of thing we went over is arrays and arraylists so these are just um being able to put a data type in a or a bunch of data types in a collection and being able to um to group them together and um and manipulate them as a whole so if you like i would recommend you sort of go over the um the lessons that are mainly focused on these four different types of of um concepts because these are the most helpful for um for creating your own programs so next for this final project um we basically want you to to create your own java program but the thing with like creating a java program is like you can technically create anything but um but we want to sort of like we want to give you the freedom to basically create anything you want um i think like something that might be difficult um with this with this like kind of project itself is just like because you can create anything you want it's sort of hard to start to be like where do i start so we've decided to give you um a list of ideas that you can you can um of like programs you can make on the right side and we've also ordered it from the least difficult to the um most difficult so um something that would be very good for a beginner programmer um you can create like a currency converter or like a number guessing game um these are pretty like these will use some more basic um java concepts and then you can do anything up you like to sorry sudoku so sudoku is a little bit more complicated but um technically you'll be able to do it some some recommendations i would say for a beginner java program is just um avoid thinking about sort of um what user like the user interface so we haven't talked much about like creating a java program that is very user friendly a lot of our demos just use like the the console or like the command line um i would recommend you stick with that mostly because um sort of converting a program into an actual like piece of software that uses like a really nice like gui or like graphic user interface requires like using like or learning a different java library and then learning a few a few like more complex concepts when it comes to programming so um this list on the right is basically what we we think is pretty beginner friendly for like um for your final project and last thing we can go over is just some um coding tips and tricks so the first one is i would really recommend youtube design before you code so um when we went over classes we talked a lot about or we talked a bit about um class diagrams um i would really recommend you sort of draw out like think about what classes will you need when you make your code and what methods will you need to implement um or to like make your code work so don't like don't just jump straight and do coding because sometimes what happens is you'll actually code yourself into a corner where you've designed you haven't really thought about the design of something but now like you've written so much code that's too late to really like change the design of something and but like at the same time the way you've designed a class or like the way you've designed a solution has like makes it a lot more difficult for you to actually um make your project work a lot of like coding um when you get to like more complex code it's not actually about like um the syntax for like making um some super clever hack to make something work it's actually about how do i design my code to be to be extensible and to be scalable so make sure instead of like just jumping into like this is like this is why i have to implement this is like what i have to do and like just coding um or just like jumping in and coding think about like first think about like well how do i like how do i do this in on a conceptual level and then in order to implement the solution what classes you need and what methods will you need also second off just don't be afraid to use online resources and don't be afraid to ask for help of course with online resources always be always make sure to use um multiple sources not everybody is right on the internet so make sure that like the solutions you find are first correct and second actually solve your issue but um that being said like don't be afraid to just google something or even to like ask teachers for help um the second part of this is just some tips with debugging so a lot of times what happens um when you when you like first write your code is nothing goes right nothing ever goes right like the first time you write a piece of code so what what you'll have to do a lot is just debugging and that's basically just finding what's wrong with your code and and making it work so the first part of debugging is identify the error so what exactly is causing the issue this is this can be like the hardest part of debugging um the first thing i recommend is just read the error messages java isn't trying to shift you and like java isn't trying to trick you with compiler error messages and they aren't being um and they aren't being um i would say they aren't being tricky on purpose um a lot of java error messages once you understand how to be an error message you'll it will be very easy to identify where your code went wrong um so start practicing reading those compile error messages because a lot of times um once like you get used to that you'll sort of understand like how java works um also this second off is print statements very help a lot so um the first part of the like debugging we're finding the error is like what does the error message say and once you know what the error message says you want to try to identify like is that actually the line that went wrong or is there something before that line that like caused everything after it to go wrong so you can sort of find that out by um using print statements and sort of printing out the data to see like what's actually happening and second up is user resources so think about what outside resources might be helpful again like google is your friend and don't be afraid to ask me or even um anna about like for help with debugging and we'll try to walk you through that and finally this is just some additional resources for like if you wanna um look a little deeper into java so this first one is just gonna be ap um ap free response questions so this is just um some extra practice that you can do on your own time um this next one is coding that java questions coding that um is actually a really good resource for um for any language honestly um and i think they're also pretty useful for um for when you want to practice like interview questions that use java and they also have some questions that are more geared towards ap practice this is just also some more practice questions and then finally this these are just some project ideas using java all right so after that um yeah so this is basically the end of the presentation for this lesson again i'll be staying back until um until like the the rest of for the rest of class time just in case you guys have some more questions about java or stuff like want some help with your project but um besides that like you can just go out and and like start working on your projects um projects aren't also just a heads up like projects aren't due at the end of class there technically isn't i don't i don't believe that there is like like a hard deadline for them but this we're just trying to give you some time where you can code but also have like ha like we're have some time where like teachers are also available to give you oneonone help and then finally um you can also feel free to share your projects you can post your projects on github if you know how to use get or um you can post it on roughly and we'd also like it if you um if you send like if you're comfortable you can also send us your projects using this submission form and then finally um this is the feedback form for it i think for for classes overall um again we really we really really appreciate it if you just fill out the feedback form because if this will help us for future classes not like not just for java lessons all right so this is basically the end of the presentation you