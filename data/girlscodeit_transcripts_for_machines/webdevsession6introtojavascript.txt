now okay hi everyone my name is willa that's a new and we will be answering your questions and teaching you guys javascript today so let's get into it um we are going to have a really great lesson i'm actually really excited about this one javascript is really interesting in that it gives us all of our functionality for a program so like if anything that's like interactable that's going to be javascript i know we've taught with some oneliners before but today we're going to get into like the nittygritty of javascript um i think we have five javascript lessons so it's something like the largest part of the course um but yeah get excited for it i'm gonna start sharing my screen and we're gonna go through the slides remember when i ask you for a thumbs up thumbs down we're gonna use our reaction buttons and if you have any questions just drop them in the chat all right so let's start sharing our screen i'm gonna minimize that for now so javascript part one let's get excited so getting started in javascript um pseudo code this is kind of interesting this isn't coding necessarily but it's a nice little planning step that we do um so say you want to make a website you want to make a game writing something like pseudo code will help you kind of plan out what kind of features you want so what kind of cascading code you want so this is an example like if this scenario is true say that so this is like a nice example of you planning out your code in words of english that aren't code before you execute it um and it's helpful just like get your mind square before you go into programming so a statement statements are instructions we give to the computer to tell it what to do so a statement is any complete line of code that's the basic way of thinking about it this is applicable but this is the way i like to think about it that a statement is let me get my pointer that a statement is any complete line of code so we see this little text box here or like this little image example this function ask name line of code that's just declaring this is a function it's called ask name prompt complete line of code the prompt is what is your name that's a that's a statement let x equal 10. that's a statement so all these are examples and statements of javascript syntax syntax is a set of rules that javascript follows to build a program so if you run into a javascript syntax incorrectly you'll run into a quote syntax error um this is a little bit interesting remember when we had html and we had things like um or css and we had things like color blue semicolon or we had things like p tags paragraph tags those are all examples of syntax javascript being its own coding language just like python just like java just like ruby has its own syntax and we need to follow that syntax so that the computer knows what we're saying with javascript if you don't follow that syntax when you're trying to run your code you'll notice that it i think in reply it's like a red um please correct me if i'm wrong i knew but it's like a red little blurb and it's like like error code like syntax error unable to run something like it says something like that it's pretty much like that yeah yeah so um that's basically what you're going to get if you don't follow javascript or javascript syntax excuse me um but a lot of i mean these are some very basic syntax errors but you'll notice that every single um line that we see here ends with a semicolon that's generally what's going to happen in javascript unless you're dealing with a function but we will get into that later so console.log console.log is a printing function that if you have taken java which i don't think this is this group um it's the same as system.out.print um so basically what this does is that when you run that program it will print that out onto the console so oh also the console is that little um squarespace where it previews your website and ripple it that's what we call the console um in languages like python and java it's like not that it's just like a black screen and it will print it out in like very simple white text but it still prints it out onto the screen which is really cool um so the message is sent and then displayed in the debugging console not on screen i don't think that's exactly correct because console.log should print it out to the console anew what do you think hold up the message is sent displayed to the debugging blog not to the screen i think that's incorrect actually yeah yeah because when like when you see this line console i won't move my mouse so that little bar will go away um console.log z it will print out the value of z so it will print out x plus y so it will be uh nine so it will print out nine and we see that in this case nine will be displayed so it will actually print out the number um alert and prompt we're gonna get really familiar with these today because this is actually what our example's about so both of these functions make a popup appear on screen with a message of your choice so like console.log you put the message in in the parentheses and a prompt message will display both a message and an input box the user can type something in it okay so this this is an example of an alert and this is an example of a prompt we're gonna go through these each so let's talk about syntax really quickly because i know we talked about that earlier alert tells the computer that we want an alert we're going to do brackets and whatever is in the brackets is going to be what's displayed it's text so we're going to put our quotation marks just like we do with anything else and we're going to write what we want to say and at the end we're going to add our classic semicolon that finishes it all off and tells the computer we're done with our line of code here and that shows in this alert so has anyone ever gotten um an alert on their computer and it you like try and click on something and it says like this like you can't go back or it says like this computer says something if you if you're unsure what i'm talking about you probably know what i'm talking about i'm just doing a bad job of explaining it um a new do you want to try explaining it what like an alert is i tried i'm probably not good at it i mean it's kind of like it is kind of hard to explain it's just i think i think sorry if i pronounced this wrong but julie julie do i like in the comment section like he knows or he or she knows what it is i think people get it okay yeah yeah so that's good if you're unsure you'll see it in our example a prompt is basically an alert but we have an input text bar so prompt different than alert but same syntax right so instead of saying alert we just say prompt and then we get an input text box if you're a little bit shaky on that once you see the example i think you'll get it um data types so data types are the formats in which data can be stored in javascript this is also the same for java so the simplest data types are numbers i don't like to call these numbers i like to call them integers um oh no we're going to stick with numbers we're going to stick with numbers for now i think we get into the difference between numbers later where everything that is a number is a number so everything that is a numerical value whether it's a whole number or a decimal is a number um this i'm gonna disagree with the slide here see this one two three e5 i don't think that's an oh is a mathematical number sorry i thought we were talking about say this was um say this was the letter p like a random letter not a mathematical letter this would be a string because you can't have a numerical value with there's like a random letter in it but since e is a mathematical letter this is a number strings anything that is text so letter series of letters so words um smiley face commas blank spaces so anything that's not a number is a string yes um the difference between these things when you're talking about it is that numbers if a computer recognizes a value as a number it can add it to other things so that allows us to use arithmetic so if we recognize 3 as a number we can add it to another number like 5. but if we fail to do that and it thinks that if this is a string instead of giving me the answer 3 plus 5 is 8 it will give me 3 plus 5 is 35 or something because it will try and just add a string onto a different thing so a good example of this take our 3 plus 5 example 3 plus 5 are both numbers i put them in javascript i want to add them together the answer is going to be 8. i don't define them as numbers i define them as strings 3 plus 5 are both strings if i say 3 plus 5 as a string it's going to give me the answer 35 because it's just going to put the two strings and put them together or it's not even going to work because the addition operator doesn't work with strings unless you're doing concatenated statements which we'll get into later a boolean is a value that is either true or false this goes back to the idea that code is like binary and computers are binary so booleans are often thought of as true or false they can be um that's not exactly true most of the time you're going to see them as true or false they can also be yes or no they can also be zero or one but those are the only values that can be a boolean you can't make three or four a boolean you can't make um you can't make absolutely and no way a boolean it's yes or no true or false zero one it's binary it's black and white so um an undefined is an empty value now i know we're looking at this here and we're like this is an empty value it's not it's a space an undefined means that there's nothing there but putting this space in a string gives it space okay so declaring variables so variables are containers which can hold pieces of data they can be for number strings or booleans they can be for any of the data types so to create a variable you must make both the container and fill it with the value so you have to say like very simple example let x equal 10 so that's declaring a variable called x and then making it equal to 10. in this we're calling it number so let number that's declaring a variable i personally wouldn't name it number because that's a category of data so i mean that's why it says name with a letter or underscore so personally number since the category of data i wouldn't use that i usually use letters like x y z p whatever letter you want um but if you're using it also with a a code you could use it like something that helps you define it with the code so um so let number so that's what our variable is called this statement right here let number um the let you'll notice it's in blue let means um create this thing this variable called number that's what this statement does this just creates that quote container that can hold a variable then we get into number equals 10 so initialization assigning a value use an equal sign and value must be valid so a string should be in a string excuse me a string should be in a string and a number should be in a number so these two would actually come one after another you would see let number and then right below that you would see number equals to 10. and those two lines of code would initiate the variable for you now this isn't really commonly seen because you can condense it down to one line which we see here let number equal 10 and this just condenses these two lines of code into one line let number let this variable number equal to 10. um operators if you have trouble remembering stuff like i do i would suggest maybe taking like a handy dandy little screenshot of this table that's just me because i know when i started coding i would forget those all the time might just be me but i would forget them all the time so operators for arithmetic these are just normal arithmetic operators and remember how i said if we define something as a number we can use it as a number these all have to do with numbers you can't use these for strings like you can't say this plus that like that's not how that works unless you're doing it in concatenated statements so these are all for arithmetic specifically so some are special so like the modulus one here one parenth parentheses not parentheses oh my gosh percent symbol one percent symbol two equals one two percent symbol two equals zero this one's a little weird um do we see it on the next slide or do i explain it now i'll explain it now this is like the remainder theory so like basically what it does is it says how many times can this fit into this and then what's the remainder of that so like how many times can two fit into two well it fits in one time but how what is the remainder of that the remainder is 0 because if you put 2 into 2 one time there is 0 remainder how many times does 1 fit into 2 well it fits in one time so then the remainder of that is 1 because one into two is one and then you have one left over so it gives you the remainder of your division problem basically that's what the that's what the percent symbol means it gives you the remainder of your given division problem so yeah division modules returns the remainder of the two operand um decrement so let i equal zero i equals minus minus this is gonna be like a really common pattern you're gonna see here um let the variable i equals zero and then i minus minus so we see over here decreases that by one so that basically says i is zero but every single time that this code runs i decreases by one so then i now equals negative one yeah these three are the trickiest these the division modulus the decrement and the increment um increment sorry words are hard everyone so let's go through the list addition we just use we just use one one plus sign subtraction you know another division fraction symbol multiplication the asterisk you're going to find that over your 8 on your keyboard um these are pretty standard this is basically how you define math if you were to put in like a microsoft word document these ones are kind of specific double asterisks experimentation so if anyone doesn't know what that means it's one number to the power of another number division modulus we talked about that returns the remainder of a division problem decrement um reduces the value of a variable by one and double pluses is we increase the value of a variable by one so it adds one um you cannot change these to like make them add two you know what i'm saying like double plus will never add two it will only add one double minus will never subtract two it will only subtract one because these are just the given easy functions that they made to like help you along with things if you want to subtract 2 from like i you would say i equals i minus 2. javascript is really one of my favorite things so i'm glad i'm glad we're getting it so um concatenation i talked about this a little bit um so arithmetic operators are binary operations that you apply to operands you can add strings and numbers together adding strings together is like very iffy like i know it you said i i know i said you couldn't do it and that basically meant that like you can't really do it but there's like a way that you can so console.log here there were in brackets this is like given text so everything that's in quotation marks um it's gonna define it as a string that's what java does if it's not in quotation marks and if it's a number it's gonna define it as an integer but if it's in these quotation marks it's going to define it as a string so what we use these um plus signs for is to concatenate statements so that we can insert things into each other so there were stringing quotation marks we end the string no more string we add the value 15 to the string so we like add it into the sentence it's like a block it's like a block and we just put it in you know it's like puzzle pieces that kind of fit together i think that's a good way to describe this so by doing this it's basically like we're just saying there were puzzle piece 15 puzzle piece the trees are 15 trees but now there are different puzzle piece 10 puzzle piece and by adding these plus signs we just make the puzzle pieces able to fit together going to talk about this and then i know that the chat's blowing up so we're going to answer questions because i know this is like a tricky concept you can also add variables and strings together and this is where this is most useful this is where concatenation is most useful so variable let y equal 9 variable letting y equal 9. so we're letting a variable exist the variable is called y y has a value of 9. it has an integer number value of nine console log i have space y apples by allowing concatenated statements we can insert variables that have an unknown or not predetermined value into sentences with text that we need to show on screen so say you're making a game and the game in the game you accumulate points you might want those points to be a variable because different people playing the game can get different amounts of points therefore you would use a concatenated statement like this one so you would say like you have y points and why could be your variable for how many points you have i see that there's like a lot of chat going on a new what are some common questions that we have so um so there's a question to like explain the previous slide but let's first do this question so okay let me say it in the first statement why is there a plus sign after 15 but not after the 10 good question so after the 15 that you have to add on another puzzle piece so like remember how i set each of these as puzzle pieces by adding this extra plus sign we could have the ability to add another puzzle piece since the sentence ends after there are 10 we don't need to add any more puzzle pieces therefore we don't need to add another plus sign after the 10. does that make sense hopefully whoever asked that question hopefully that is a good explanation yeah they said yeah perfect is there any other questions that we have one more for this slide so it's um they say are you saying concatenate is simply for inserting a number into a string yes basically but you're never really going to see it for inserting numbers like this is a very simple where we insert numbers the most you're going to see it use is for variables that have unknown value so where you're really going to see concatenated statements is this example right here where we have a variable of usually unknown value in this case the value is 9 and we stick it in because we need it to say something at the end but you don't know the value of the variable so we stick in a concatenated statement like this so that the variable is presented and it can have a value but we don't have to like recode every single time there's a different value so they're really helpful for variable insertion okay they said thank you no problem okay so we needed to go back to the previous slide yeah because caitlyn she didn't exactly grasp the concept i think like the like the special three yeah probably yeah okay let's go over these again um real quick division modulus does anyone remember doing division in like maybe third grade and you would do like long division and you had um like your division number and then you had your remainder does anyone know the term remainder for math when you're talking about division so like let's say i wanted to divide 3 into ten if i'm using this division modulus my answer would be i can fit three into ten three times but i have one as a remainder the division modules if i were to use 3 and 10 for the division modulus the answer would be 1. so it just shows the remainder decrement and increment are the exact opposite of each other so decrement you subtract one from a value and increa increment you add one to a value i know it's a little tricky you really use these with variables only like variables only like say i'll give you an example say i wanted a game a game perfect if i answer it's a quiz show i'm making a game and it's a quiz show if i answer a question right i get one point if i don't answer a question right i lose a point right i either get a point or i lose a point plus one minus one so i might have a statement that says if question answered correctly points plus plus because i'm adding one to the points i might have another statement that says if points answer incorrectly points minus minus we'd take one away from the value of points does that does that help explanation yes no maybe if it doesn't help i think i'm going to get a new to explain it because i think she can do a really good job with that i think caitlyn in the chat she says i think i get it now so i think she got it awesome awesome awesome awesome all right um string concatenation operators comparison so this is very much like logic um this isn't for this isn't for numbers i mean it kind all of these operators i'm about to talk about or are for logical statements something true is something not true that is the question that is being asked by these operators that's what they do their purpose depending on the kind of data type is to answer the question is the condition true or false they work on a boolean system so equal to is my one value over here equal to my other value over here is one equal to two this is our example here if one is equal to two we all know one is not equal to two therefore the answer in the computer's brain is false and therefore the code underneath this will not run because 1 is not equal to 2. this one equal to the triples equal sign is equal to as like strict so it really it like it takes like a more intense look at the code um in terms of like what it looks at um i'm not super familiar with that operator i've personally never used it um a nude can you speak to that a little bit i think for like the triple equal that's like more for comparing if it's like the same data type i'm pretty sure yeah yeah but i think you know what i won't like like yeah yeah let's just say no in our collective coding experience me and anu if we have never really seen this or used it you don't really see it or use it that much we'll just leave it at that this is very much sufficient for a lot of the coding you will do will c will interact with and most coding operators will use the just the double equals i want everyone to remember this exclamation point means not so when we're thinking about things like in what they are we're going to think of exclamation points mean not so having exclamation point equal sign means the first value over here is not equal to the other value over here same thing here this value over here is not equal to this value over here but on a more strict sense so see this if one is not equal to do ah if one is not equal to two does that like one is not equal to two therefore true therefore the code will run because it is true right if we had 2 here instead if 2 is not equal to 2 the code would not run because 2 is equal to 2 2 is not in equal to 2. yeah let's no go back so exclamation points mean not so equal to not equal to these ones standard math operators greater than or less than these are used for numerical values only well these four really are you can use these for strings if you're really careful about it um i've seen this like string length which is something we'll get into like how long a string of characters is um but really you're going to use these for like numerical operators and these you can use for both but mostly numerical operators these greater than less than standard math greater than or equal to less than or equal to also pretty standard math these are the ones that are like a little bit confusing okay is the green part of the code acetyl code or a function the green part of the code is a comment remember how we learned comments this i have a feeling this was done by um another instructor and i have a feeling that they were using dark mode in reply or something like that because you know how replies usually white well you can change it to dark mode and therefore it turns like the background is black um so comments usually gray when you're in normal replit but they turn green when you're in dark mode i think so yes they're comments um this is also how you do comments um it's just like in java double slashes are comments yes i think besides that they're good awesome okay operators logical these are um you can see these like for booleans too but like we're not going to get into that because that's more complicated uh for now we're just going to see those numbers i want to talk about this this code for a second this has wrong syntax i have been informed in this i'm going to annotate it with the correct syntax okay so the red is the correct syntax it's actually brackets like this the brackets in the middle these two brack everything is within one set of brackets so the red brackets are the correct brackets and the um white brackets don't exist yes so it should be one equals equals two double line two equals equals two closed bracket open bracket one equals equals two and and two equals equals to close bracket so these are actually a little bit of a mistake um in the syntax so i want everyone to take note of that because this is not a hundred percent correct yes okay operators and and it means and so if that basically just tacks on another layer of the conditional statement so like if this thing is true and this thing is true then we move on but what both of these things have to be true not just one of them not just the other double lines mean or so um you know how we had and where both things had to be true well or just says one or the other have to be true now both can be true if we use the or operator both can be true but one of them like at least one has to be true both can be true but at least one of them yes no maybe so how do we feel about that that's i think all of our operators for today i know there's a lot of them that's why i said write them down if you're anything like me write them down oh i'm so glad we're getting this i love this i'm really proud guys because i generally when i learned this i was so confused so you guys are a lot better at it than me um dom content loaded dom content loaded um wait until dom finishes loading so you can add script tag in the heading section um this is weird so basically if anyone has ever noticed i think in mary like maybe our first or second example i used a dom content loaded because i wanted the script tag in the very beginning because i wanted them to be in the same place this is really just a preference thing if you never learn this you're not going to be a bad programmer and if you use this all the time you're not going to be a better programmer than someone who doesn't use this all the time this allows you to put your script tag in the heading section where the css tag is so it's not just at the bottom because if anyone has noticed the script tag is actually usually at the bottom of your html file um so if you want at the top you can use dom content loaded and do all that stuff uh it's also an event listener but we're gonna talk about that later because we do not like it's not applicable right now it's gonna come more when we're like doing more complex things on the website so yeah if there's any questions about that you can ask me later but for now we're gonna go into our reply for the day so i'm gonna drop the link in the chat i'm gonna also get rid of my pointer i'm gonna drop the link in the chat yes remember we're gonna click this little arrow as soon as we get there we're gonna click the arrow and we're gonna press fork we're gonna press fork we're gonna click the arrow and we're gonna press fork so this is our fun little replied example today you're going to learn how to do an alert website so if anyone was confused about the alerts world's most annoying website um dare to try this is a button this is an alert this is an alert and it says i'm an alert box um this is the second alert this is the third fourth fifth alerts will never end well maybe they did and then they end i only put a couple because i wanted you guys to explore with it and also not have to run through it 500 times for them to end but basically that's what we're going to do today so world's most annoying website um button on click my function there to try this is probably the most confusing piece of code in at least the html document uh let's go through that so button um is this it's a button on click remember our um class remember our um pseudo classes for css when we said when our mouse is hovering over something it's kind of like that but this one basically means that when the button is clicked something happens yeah so on click so when the button is clicked my function this means it's going to execute my function called it's gonna execute the function in the javascript called my function and then dare to try is what the button just says that's the words on the button so let's talk about what a function is first i like to think of functions as um like a little instruction booklet and each function is its own instruction booklet and when you say do when you say execute a function what that means in java or javascript or in python um that it just goes through that book of instructions and just executes every single one of them so having different functions it's just like having different instruction manuals and when you say execute this function it just goes through and executes the instruction manual basically so like you could have a function called house and you could put all of the things in it that tell you how to build a house and you could say execute function house and it would build a house right so it's a little it's a little interesting but this is called function my function we'll get into the syntax of this in a minute and then these are all my various alerts that you just saw um so function my function this is the syntax of a function so we declare it as a func this is javascript by the way this is in our javascript file this is javascript function this is a function it declares it as a function it gives it a name my function is the name you can change this name but if you change this name here you need to change this name here because this will call on a function called my function and if you don't change the name here then it will not work parentheses whenever we declare a function we always have function name parentheses nothing goes in these parentheses um which if anyone can see it's a void function because of that you're only going to deal with void functions for now um void functions are interesting we're not going to go into the meeting now you don't need to know what they mean right now but void functions basically just like don't really have anything about like they're not bringing in values from anywhere else so that's what we're going to call them void for now um so function my function void then we have our opening tag and our closing tag and that says anything that's in these tags is the function so anything that is in these tags is the instruction manual and then we just have a various bunch of alerts and the alerts we know our syntax alert declares it as an alert and then what the alert says and then we always finish it off with our handydandy semicolon um before the challenges for this week is add an alert with options so if you're stuck on how to do that um remember our it's not alert it's something else and if you need more hints than that ask me challenge to add an alert with text input um that's another fun one um remember it was in the slides and an alert with choice that has a visual output i t text detailing and the decision made this is more for the advanced class um because you need to add another function in but yeah i'm going to stop sharing my screen and that's the workshop so i'm going to stop recording