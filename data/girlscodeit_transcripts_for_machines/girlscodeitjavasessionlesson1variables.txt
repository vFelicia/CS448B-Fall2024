okay so we're gonna go ahead and get started um so first of all thank you all so much for joining this drama session we're super super excited to have all of you here um my name is candace uh i'm an incoming junior um and i will be one of your java instructors for this session hey guys my name is alex i'm also an incoming junior and i'll also be one of your java teachers for the session hello my name is andrea and i'm also an incoming junior and um also we're also going to be your java instructors cool um so i don't know if you saw what was written in the chat um but if any of you do not have a coding software like bluej or um repo online compiler uh please type it in the chat so we can make sure that everyone has that um and another thing which i think all of you do but if you aren't um talking please keep your mics off just because we do have a lot of people um so it would be great if whoever's talking has their mics on but if you're not if you could have your mics off that would be great okay cool so i'm gonna go ahead and go ahead and share my screen okay can y'all see my screen okay so um right now um we're just going to be focusing on the powerpoint over here and we'll get to the blue jay coding stuff in a little bit all right um alexandria i think it's alex or like whatever okay so the first lesson in this java session is going to be about variables uh variables are something you use in pretty much every single coding language and it's a really important concept for you guys too um so actually before we can start talking about variables um it's really important for you guys to know how to just print something in java that means that you um code it so that the computer type something out to the user such as like hi hello world um or anything like that so um in order to print something out to the computer you're going to want to use one of these two phrases you see in the slideshow um the first one is system.out.println and then in parentheses and then inside the parentheses you type whatever you want to be printed out so in this case it's hello and also if you're just typing like a word or a sentence you're going to want to put quotations around that um the bottom phrase for printing something out is basically the same thing but the difference is that the first phrase um puts in an enter after whatever you typed out and then the second one is just gonna keep going on so the first one moves on to a new line after you after it prints out the thing that's in the parentheses and the second one doesn't and it depends on what you want to do and you can choose whichever one all right so we're going to go ahead and just do a quick example of that again like alex said before we get into variables um so first of all if you guys could get bluej open um that would be great and again if you don't have bluej or don't have a way of coding on your computer please type it in the chat so we can help you but if you guys can get bluej open and then once you have blue jay open the first thing we're going to do is we're going to create a project so to create a project um i already have one open but to create one you're going to go to the top left corner where it says project click new project so project new project and um name it whatever you want to name it um you can call it like girls coded coding anything like that and then just choose the place where you want it to be saved and then click ok so again project in the top left corner new project name it something choose where you want to save it and press ok and then you should see something like i have here except you probably won't have these brown boxes so i'll give you guys a minute to do that and if you guys have any questions um throughout um if you feel comfortable turning on your mic and saying something uh feel free to do that if not then you can go ahead and just type it in the chat can you repeat that yeah so if you have bluej open um what you're going to do is go to the top left corner where it says project click that and then click new project yes and then do you see where it says right here like new project name location yes okay so then type in uh whatever you want to name it you can name it like i named mine girls coded you can name it whatever you want um and then location is just where on your computer is going to be saved and then click ok and then you should get something basically it'll look like the same thing um yes okay does anyone need more time on them all right cool so now what we're going to do now that we all have a project is we're going to create a class um so to create a class you're going to go over to the left right under where it says project there should be a button that says new class so click that um in your class name again you can name it anything you can't have spaces but other than that you could pretty much name it anything i'm going to call mine variable because that's what we're talking about today but again you could call it anything you want you call it lesson one meeting one anything you like um after you call it that then just go ahead and click ok and you should see a brown box show up uh like this where it has the name that you just put in right at the top so again at the left um you're gonna click new class type in the name uh whatever you want to name it and then click okay got it okay anyone need more time on that okay so um then we're going to just open that so just double click on that brown box that showed up and you're gonna see something that looks also reminded you guys if you aren't talking it would be really great if you could meet so that uh any noise you have doesn't like interview yeah okay so now you should see something that looks like this a bunch of writing just like this so you can just go ahead and delete everything so just go ahead and delete everything okay so just go ahead and delete everything um and then at the top we're going to write public class and then whatever you named it so in my case i named it uh variable but let's say you named it hello then you would write public class hello um so everyone's going to write public class and then um after that write whatever you named your class and java is a case sensitive language meaning that you see how i have a capital v if i were to do a lowercase v um it wouldn't work so you have to do have the same case as you did in um as your name and then we're going to do two curly brackets just like that and then um everyone is going to write public static void i will put all of this in the chat if i can find the chat this might take a second to open but um why isn't the church right now i think the chat is lagging um but if you guys just want to go ahead and copy this down so we have public static void main parentheses uh string and then the brackets um rx parenthesis and then um brackets just like that okay so this is what um you're going to write at the top of every class whenever you want to code so does anyone need time to copy that down okay cool so once we have that down then we can go back to printing something so like how alex has said before um we're going to use something called system.out.print so let's just go ahead and type that so system dot out dot print and again you could do print ln or just print at this point don't really worry about which one should i use it doesn't really matter at this point i'm just going to do ln parentheses and your whatever you want to write you're going to put in quotations and in your quotations um you could write anything you like i just wrote hello um just whatever again whatever you write it needs to be in those quotations um and then that needs to be within parentheses and at the end you are almost on almost every line of code you're going to have a semicolon anyone have any questions about this so far or anything like that um i have a question so my first question is is java like sensitive to indents as well um no so you mean like how to indent it here no so you could um have it like this the only thing is um it indents at least in blue jay automatically because it it just helps you to stay more stay organized because like you see um this every open bracket has to have a close bracket um select this open closes here this open closes here so the indents they're not necessary um but they're very helpful for helping you stay organized because if you just have like a big block it can get really confusing as to like where the brackets go and when we get into some other stuff later um the indents really come in handy so no they're not necessary but they are very very helpful in helping you stay organized and keep track of everything okay um and then my other question is like why are we typing like the public static void main like what does that do or what does it mean um so the public static void main i'm not going to get into like every little thing of it but basically we just write that at the top of our code and that's how it um knows where to start our code um so this is what we write because if we didn't have it we wouldn't be it wouldn't know like i guess where to start running slash printing our code alexandria if you guys want to add anything to that yeah it can be really confusing to understand exactly why we do it um when we first start coding but if you keep learning java it you'll learn it eventually and it'll make sense sorry about that yeah all right anyone have any other questions okay so now that we have system.out.prinelin and then whatever we want to have printed out we are going to compile it so if you look in the top left corner where it says compile it's right here versus compile just go ahead and click compile um so what compile does it basically goes and checks through your code for any um any errors in your code so for example let's say i had forgotten my semicolon at the end of my line of code and i press compile then it would give me an error right there um so if you get that then you can just look back see where it is and try to find your mistake and my mistake was i didn't put the semicolon and then if i were to compile again um then there's no mistakes so now i know that i'm good to go um good to go to run it all right so again compile right up there does anyone have any errors that you need us to help you work out or fix anything like that all right so now that it's compiled and ready to run we're going to go back over to sorry it's kind of confusing go back over to this page and um the block the brown box where you are writing in your code you're going to go ahead and right click and do the second option the void main string bracket marks so right click second option go ahead and click that and then just click okay okay so i could repeat that yes please oh do you want me okay so you go to the whichever um go to the box that you had created before go ahead and write oops sorry um right click and the second option so the void main string args click that and then just click okay and you should see um something that looks like this something that looks like this and whatever you put inside of your quotations like i wrote hello explanation um that should show up right there all right anyone have any trouble with that or any questions about that yeah once i hit compile i'm not uh able to get to the variable box um once you hit oh so did you name your class variable i named it variable one okay so then on your variable one box um does it have any lines over it other than these two in the corner yes it has the checkered lines okay red that means that there's an error somewhere in the code so if you open back up to this page where you have your code um do you see any spots like on right here like on the left side where it has um a red box yes it does um okay so some errors that um common errors that we could make one is um did you have a semicolon at the end of the line of code uh yes i do okay and then did you have um two parentheses and inside the parentheses be quotations yes the error it's saying is um but it's print one n is that print uh this is an l l sorry so the letter l okay yes yes now it's gone yes perfect cool um anyone else have any trouble so the lines on my variable one have now gone black uh perfect yes so now you can press compile um so in the top left if you press compile and then did the lines go away one second compile yes the lines went away yes okay and then now on your variable one box you can right click and then the second option so the void main string args click that and then you don't have to type in anything here just click ok having trouble um clicking the the right the right click on the wearable one box um on my mac computer do you know right clicking yes um i don't um i think you um put both fingers on it and click at the same time with both fingers and then um it's the same as the right click with them and then i click on compile uh if you compile first so if in your code if you click on compile yes and then um on your variable one box did the lines go away yes okay then you can go ahead and right click so try the two finger are you using like your touch the touch box on your computer okay so then try um two finger right click okay and then did the show up yes so then the second option right here void mainstream args got it go ahead and just regular click on that and then click ok and you should get a box that looks like this with whatever you put inside your quotations it should be printed out right here all right does it look good or do you have any other questions about that that's good yes perfect um does anyone else have any trouble with that or are we all looking good cool okay so now um that we know how to print things now we can move on to the main topic of today which is variables all right yeah so variables what is a variable right a variable is used to store information so what that means is like in this example we have h is equal to 6 and h is the name of the variable and six is the value that's stored in h so like in math when we have like x is equal to one one refers to uh to x so yeah variables are used to store information alex so there are different types of variables in java and other languages so the first type of variable is an it variable um that is basically that basically contains a whole number so any number without decimals so like negative 10 4 256. um any simple number like that um the second type of variable is a double variable so that's going to contain a decimal number so that's like a fraction well not a fraction but um it has a point and then numbers after that so it's not a whole number um you probably should have learned that in math class so a double is going to store any decimal number like negative 7.56 1.2 3.1415 something like that um but not pi because it goes on forever um and then the third type of variable which is um a really common type is string so string is going to be text like um for example anything in quotations is going to be a string anything you want to be a string has to go in quotations so that would be like a sentence of or a word like i have three apples or hello or i'm a programmer um anything that that uses words like that and a boolean value um is an interesting type of variable because it can have only two types of values either true or false um it's kind of a strange type of variable so we won't go into a ton of depth with it today but that's just the other type of variable yeah so real quick booleans we're going to be talking about um in a couple lessons when we talk about a actually is that tomorrow um but yeah i think it's tomorrow when we talk about another topic in java it relates to that a lot more so we'll go to a little bit more detail then um i have a question about the varial 12 types so if you were to take a fraction like three sevenths for example would that be represented as an integer or um a double cause like any decimal is going to be an approximate yeah so if for example you do like a division problem like three um three divided by seven in java is going to convert it into a double i believe since it's not a whole number okay yeah so let's say you like created a double variable that was three over seven and then yeah like alex said it would be a decimal if we created an int variable that was three over seven and then it would get rounded i believe me if i'm wrong please yeah i think so yeah um cool okay yeah so like i said variables are useful because they allow you to store information but they also allow you to change it so yeah and this is useful because if we have like a story such as like once upon a time there was a person named sam and sam is 18 years old sam likes ice cream and we keep using sam sam sam if the user wants to change like the name which in this case is spam um instead of like going back and one by one like changing sam to like another name if we just have a variable like in like a name variable we can just change it to another name instead of like one by one changing that name okay okay so uh you got should remember the int variable the first type of variable we talked about so that's going to be the whole number one um so we're going to talk about how to make variables now so um the formula for making a variable is basically the same for every type but um specifically for int to make an int variable you're going to type out int and then the name of your int variables so in this case we're going to call it number but you can call it anything like elephant age name whatever you want and then an equal sign and then what value you want that variable to store and then as always your semicolon and you can do a lot of different like math operations within like adding subtracting multiplying and dividing okay so if you guys want to hop back over to bluej you can open up that same one that we were working with before um so in my case it was variable um i'm just going to go ahead and delete this feel free to keep it if you want i'm just going to delete it so we don't get confused with other things all right so like alex said we are going to create an int variable so we do that by saying int and again it has to be a lowercase i because java is case sensitive um whatever you want to call it i'll call it num short for number and whatever number you want to store in it so i'll just do six and then as always your semicolon okay um and i'm just going to create one more um int num2 equals 2. again you guys can put in any number you like there as long as it doesn't have any decimals okay so do we need to put a space after like your name and a space after the equal sign or is it like just to like read well yeah so you don't have to um you could do it like that um you could do it like that it doesn't really matter i just always put a space there because i think it's a little bit easier to read but if you don't want to you do not have to but you do need a space between int and the name of your variable all right all right so now we're going to use what we learned about 15 minutes ago with the system.out.print so let's just go ahead and type that again system dot out dot print owen and then um in this case we are not going to use quotations um i know last time we used quotations to print out like hello um in this case we are not going oh my gosh sorry we are not going to use quotations so the reason why we're not using quotations is because i want to print out the number 6 meaning that i want to print out the num variable if i were to put quotations right there rather than printing out six um it would print out num because that's what's in the quotation so if you ever want to print out just a variable by the name then you're not going to put it in quotations um because again if we put the quotations it would print out num rather than printing out the number that is stored in that variable okay so let's go ahead and do that so put in the name of your variable you can do either one i'm just doing num and again we're going to go up to the top press compile yeah how do you write comments in java i just want to like write the note that you don't put put it in quotation marks so okay um good question so comments in java for those of you who don't know what comments are um it's basically something that you can write in java that it's not going to be part of your code so you could use it to um maybe explain what this part of the code does or something like that but it's not going to be run so it does not have to be in like proper java language i guess um so we're going to do two slashes like that and then you can write whatever you want so let's say you wanted to write um for a variable do not use quotations something like that so as you can see it's like a lighter gray kind of um so this means that it's not going to be run as part of our code so two smashes and then whatever you want to say good question these are really useful if you want to leave like a note to your future self if you're running through your code and you want to be reminded about something yeah so it's super helpful when you get to longer codes and you might be a little bit confused about what this part of your code does or something like that all right so we are going to go again to the top left compile and then over here again so after compiling um the line should go away we're going to right click second one void mainstream args click that and click ok and as we can see here um we have the number six that got printed out as we expected because the number that is held in the variable num is six for some reason i did not get the six okay um did you what shows up on your screen um still whatever that we had typed i did enter the comment first and then it's int space num um equals six column end num2 equals two uh colon and then system dot out dot in brackets num colon okay did you use parentheses or did you use brackets i use brackets so try with parentheses and let me know if it still doesn't work sure mine isn't working um because when i press compile it has that red block showing me that i have something wrong but i made sure i got everything you have on your page so i'm not sure what i'm doing wrong okay um where do you see where it has like a uh a red box or maybe like a little red squiggle or you have an error yes okay so where is that squiggle located so it's um between the parentheses like it's on the left of the parentheses uh the beginning and to the right at the end okay um so like around right here yes okay um so do you have system capital s system dot out dot print ln um and then parenthesis and inside the parenthesis the name of your variable yes okay if you hold your dress on okay if you hold um actually what i have it says identifier expected identifier expected okay at the top um where you made your variable did you write int yes so you said int space and then whatever the name equals um the number yes um alexandria any of you know did you put a semicolon at the end yes do you have a like bracket like um you know like expected that's what it says sorry could you repeat that i didn't catch that um it's the apostrophe the uh the apostrophes around colon and says expected oh yeah so if you have that then it just means that you need to put your semicolon at the end of the line of the code so like right here um if i didn't have that and i try to compile do you see something um do you see something like this yes it was like yeah then all you're gonna need to do is right there at the end you're just gonna need to put your semicolon and that should solve the problem okay okay um back to amaya is that your name amaya okay um i'm not sure what could be what could be the issue um could it have to do something with the hello like the system system.out.println hello since i didn't take that out um as long as it's the correct did the hello work uh when we ran it with just the hello yeah okay then that should be fine i don't think that should be the issue um you have this on a completely different line from your hello statement right yes i do okay um i'm not 100 sure um after the class maybe um if you want to stay maybe a little bit after we can have you share your screen and we could try to figure it out for now um um yeah so if you want to stay afterwards sorry i just don't want to run out of time um but we'll definitely try to help you out um after the class if you could stay a couple of minutes that'll be great okay thank you cool okay so um did anyone else have any other questions about this anything like that yeah so once they put in the brackets back around num my variable is again showing lines so you shouldn't have brackets around them you should always use parentheses okay when you say brackets um do you mean something like this no just as what you have okay so parentheses um like just like that yeah a parenthesis yes okay do you have quotation actually no that shouldn't make a difference um okay yeah again um i'm really sorry but if you want to maybe stay a couple minutes after no we could try to help you out then yeah okay absolutely absolutely thank you okay great then um one more thing that we're going to do with it um we're just gonna i'm just gonna do a quick example of one of the operations you could do so like adding subtracting multiplying dividing um i'm just doing it here so we're going to do let's try multiplying them so to multiply them um we're going to use an asterisk so none num times num two um if you wanted to divide it would be a slash so that would be dividing six by two if we wanted to subtract just the minus and add just the plus let's try multiplying so the multiplying is going to be the asterisk so shift um shift and then eight must be after this again what it's going to print out all right that's fine okay so now that we have that again like always we're going to go up to the top left let's compile and if there are no errors we can go ahead and right click second option okay and where's my screen um here we go and it shows all 12 shows 12 like we expected because we're doing essentially 6 times 2 which is 12. so that's just a way that you can use your variables rather than saying 6 times 2 we could use num times num2 because 6 is stored in num and 2 is stored in num2 all right anyone have any questions about that okay cool so let's move on to our next variable another type of variable is something called a double and double basically means like decimals so like 1.5 3.33 like that and so in java to create a double variable it's like the same thing you do double which is the type and the variable name which is in this case x and then equals whatever value so in this case it's 7.5 and then a semicolon and for doubles you can add subtract multiply and divide as well okay so again let's just hop on over to here um if you want to keep this you can uh again i'm just going to delete it just so we don't get confused um so doubles and ins pretty much work the same way because they're both numbers the only difference again is that doubles are going to have a decimal so let's go ahead and make it so double and again it has to be a lowercase d uh whatever you want to call it i'll just call it um number very creative double number and maybe like 8.714 semicolon and then um just because i don't want to run out of time i'm not going to do like show the printing or operations because like i said they're going to be the same as int um so if you do system.out.print and then put a number there it should print out 8.714 um if you made another one like double number two we did like two point one five and if you like multiplied it again um you should get like i don't know what that is like sixteen point something seventeen point something something like that you can't do math but um again it works the same way as an instance okay so now the last one that we're going to get into some detail too okay so another really important type of variable as we said before is string so this is going to be anything with actual words in it and what's very important about string is um you if you want to define something as a string you're going to need to put quotations around everything in it so um i'm just going to talk about how you make a string which is basically the same as the others inch and double so capital s string and then space and then the name of your variable which we're going to say sentence for now and then equals and then in quotations um what you want this string variable to call so anything inside the quotations is going to be what this string variable is equal to and then as always you end your line with a semicolon okay so again hopping back over to bluej again i'm just going to delete this um so string capital s string whatever you want to call it what's called sentence equals and um again like alex said you need quotes and also i just want to say like let's say you had quotes and like the number three um even though this is a three is obviously a number and we might be like wait why isn't this an int um so the reason is because it's in those quotations so if you printed out sentence it would print out a three and you might think it's an int um but because it's in those quotes and it's considered a string you wouldn't be able to like multiply it with other numbers so let's say you try to multiply the variable sentence with a variable that holds the number 2 as an int then it will give you an error because you can't multiply a string by that number so again because it has those quotes is considered a string even though it looks like a number um so let's just do like coding is cool and again i'm just going to make another one um just to show you one thing after this um so again anything you want um they just have to be in quotes and again make sure you have your semicolons at the end of each one all right so just like how we did for the ins example we're going to do our system dot out dot print ln and again no um quotations let's just print out sentence just like that okay so once we have that um again top left corner we're going to compile um and if you have errors um first of all errors are super common thing in java so don't worry about it the most common mistakes probably are forgetting your semicolon so first thing if you have an error make sure to check for that um capitalizing string um see what else could you have a lot of times at least for me like i might forget my ending parentheses or my ending quotation so that's another thing to check for us anything like that so again compile go back over to our box um right click second option okay and here we have coding is cool all right um anyone have any trouble with that no actually everything worked everything you taught perfect cool glad to hear that okay so then if everything looks good um one more thing i want to show with string is um even though obviously we can't like add these two strings together like how we can add numbers um we can use this plus sign um just like this so then like you'd be like adding your first string to the second string and so what this does it basically just prints out um both of your strings right next to each other so it would print out coding is cool exclamation hooray exclamation um no space in the middle because i don't have any spaces there so just coding is cool hooray so that's what this um addition sign i guess does uh when you're working with strings so it basically combines the strings together it's another way to think about it so if you want to just go ahead and add that plus sign and then the name of your second string and again we're going to compile hopefully everything looks good um back over here right click second button and okay and right here so as you can see it printed out our first string right here up until the exclamation and then immediately after it printed out hooray so um knowing how to combine strings like that is really really important in java um but let's say you're like okay well i want a space right there um there are a couple things you could do one is you could add a space at the end of this at the end of your first one or you could add a space at the beginning of this one but let's say you didn't want to do that um what you can also do when you're doing using system.println um is you can add something in parentheses in the middle so if i want to add a space i could do something like this so basically um if you remember how in our very first system.out.print example we had system.out.println parentheses in quotations hello so just how like how that was in parentheses and i printed out hello if you have these quotes here whatever is in there is also going to get printed out so this is going to print out whatever is held in sentence which is right up here whatever is held within these quotes which is just a simple space and then whatever is held in sentence one which which again is going to be hooray so that's a way that you can kind of like combine um both your variables and just anything else you want to add in so you don't only have to be using your variables if that kind of makes sense so if i were to compile and then print this then it's the same thing it just added that space which again came from here because inside those quotations was my space so printed that as well in the same order that it shows up there all right anyone have any questions or any trouble with this okay perfect um so again boolean we're gonna be talking about a little bit more um tomorrow i believe okay so i think that is pretty much it um i'm gonna go ahead and stop sharing um thank you so much yeah no problem does anyone have any final questions okay um yeah so there are eight classes uh the next one will be tomorrow at 3 p.m um i think the same link will work but i'll send out another email tomorrow to all of you um and again it was amaya and um i'm sorry the if you had any questions that you wanted to stay after and help uh have us help you figure it out um please do that and we'll try to help you out thank you thank you so much for coming you guys i hope you learned a little bit about java um tomorrow have you guys had some fun and you can practice if you want uh tonight or you don't have to whatever you like play around with it thank you so much of course the teachers okay um chantelle um did you chantelle did you get the email um last night about with the um what's it called the link to today's zoom yes okay my understanding was that i was signing up like one class and i wasn't sure like just you know how things worked all together um i think i i think you are on the list of people who want to um do the whole session at least you were on the list that was given to me um so you'll definitely be included in the email tomorrow um yeah after uh yes i think you should be fine okay all right thank you all right no problem okay so i was working on the variable a little bit and i ended up deleting that string like of coding and like trying to start over on something else um like doing what you guys were doing right now and it actually ended up being okay so there's no mistakes anymore oh perfect cool