today we're going to get into some css part 2. now my group last week we had css part 1 so we made an ugly website but today we are going to make a website that has some animation factors in it so get excited for that i'm going to share my screen with everyone so we can all see the slides and we're going to go through them together as always feel free to interrupt me if you have any questions or just drop them in the chat as they come to you so css part two let's get into it so importing uh copy paste a style sheet link into your head before all other style seats load us to css i know that we have does everyone see this the link rel style sheet href http stockpack bootstrap this is a little bit of an interesting thing we're going to get into bootstrap later that's going to come next week um it's an interesting little addon that we can have and um remember when we have um i know my group talked about it a little bit extensively i don't know exactly what christians group covered but hopefully you guys will be familiar you know the metadata stuff that we talked about at the beginning that's where you're going to find the importing of the css sheet it's kind of done automatically for you this bootstrap stuff we're going to talk about next week so um get excited for that because it comes more into play when we're doing more complex websites which we're going to be doing with java so comments um my group has seen these a little bit in my examples comments are used to explain about what you want to achieve with the code they don't actually interfere with the codes processes comments are placed inside the style element um and starts with a slash asterisk and ends with an asterisk slash this is our opening and closing tag let me get my pointer because i feel like that helps opening closing tag um everything is an opening closing tag if we remember and for here this is a comment talking about what this part of the code does um and this is a comment talking about what this part of the code does this should be a review because we talked about coleman's comments excuse me a little bit of a british accent there um we talked about comments previously so now we're going to talk about the layout of a website and this is kind of important um because it kind of lets us know how the computer is thinking about things visually so there are many layouts you can choose from this is the most common one so if you go into reply you open a web page and you don't do anything to select the layout this is what you're going to get you know this is like the standard you know except for the navigation menu i think that's a little bit more advanced because you're not putting in a navigation menu um explicitly but here's how it goes we have our header anything at the top of the page like a title like a big category makes sense main content is what i like to think about of is like the paragraph um so like this is where my image is going to be this is where my paragraph is going to be this is where the content that people are going to interact with is going to be whether they read it they write it they type it they look at it that's where it's going to be oh i'm so sorry let's go back your navigation menu is going to be like the thing um if we look at it in like websites say you want to um you go on any website and it has that like little nav bar at the top menu and it might say like oh great example you go to the girls code website right and it says about and it says our courses and it says join that's a navigation bar it has a bunch of different options all lined up in this one bar at the top that's a navigation menu we're going to learn how to make those today but that's not what the example is focused on because i thought animation was a little bit more important especially if we're gonna get into bootstrap which kind of makes navigation menus for you so footer anything at the bottom of the web page any you know miscellaneous text and these are content windows on either side of my main content um i would recommend putting things here because they kind of get clustered off to the side but you can put like an image here you can put more text here it's up to you headers um headed to the top of each website we saw that little block at the very top headers should be clear and precise like a title this one in our example header padding 70 pixels text align in the center background lavender color color of the font white color anyone who was in my class last week i remember i told you think about your color combinations this is an example of a bad color combination it's white on light purple it's really hard to see not the bex ux not the best ui so we're going to try and avoid color combinations like this when we're making websites but for now this is your example navigation menu consists of a list of things that can help people navigate through the website so remember how i talked over the girls code it website you know the about us the join the our lessons those are the examples so the navigation bar is that um and then it has text with different links remember in my group how we kind of did text with different hyperlinks in it like a little bit maybe there was some in the examples um so if you look back you'll see them but that's basically what this is the hover when you point on your mouse cursor um that's the hover function that's an example of a fun little pseudo class remember my group we talked about pseudo classes a lot there was one in the example um remember when we had our example when i hover my mouse on this it changes so that's basically this when i hover my mouse on this it changes color that's a pseudo class we know what that is right awesome so let's go to the top and just run through the code a little bit go through piece by piece so we can figure it out style the top of the navigation bar overflow hidden which means anything that's out of the screen limits is just hidden background color light pink that's why we have this little nice light pink color yes awesome style the links so that's the text that we see here that's the link link link that's what this is talking about so float left display block float my group we did not get into this advanced group i don't know if we talked about this or not float is a little bit of an interesting one i don't know if i want to get into it now but it's it's something that you can use to like orientate the text um i perfect i prefer to just use like text align stuff but like you know float i guess is also an interesting one to throw in there i mean you oh you see you have both in this example um display block we have block of text color of the text this f2 f2 f2 text align center in the center padding 14 pixels 16 pixels and text decoration none that's another class that we didn't get into my group text decoration um honestly why this is here and it says none is kind of just like a useless piece of coding to me um but i to each their own i guess i guess that's a fun example of that um category um but yeah change color on hover what is this this is a pseudo class remember we talked about this last week so when my mouse hovers over the bar the background color changes to this color this color code color yes pseudo class to the next thing content columns so the contents will be divided into columns that make it easier to view i.e see this example this yes this is our float class we'll get into that in two seconds but see this example was like oh like it goes this way it goes the other way columns perfect selector would be a column so you know this we'll talk about this in two seconds the selector for the left columns would be column dot side why is it dot column i don't care i don't code like this the dot before things some people do i don't know if christian does i don't add the period before things isn't that just like the css the dot com that side i don't i don't code with dots if you notice my examples like none of them have dots okay so dots are like specifically meant for like so like if you are going to be referencing a class it's good practice to put a dot i think if you don't put a dot you're actually doing the tag itself really i'm not i'm not yeah yeah i'm not 100 on that either because i mean i've never used dots um general rule of thumb is if you're going to use classes just put a dot in the css file um yeah well we hear we heard it here first folks use dots and i should start doing that bad coding on my part um selector for the middle column would be column.middle this is talking about how it's putting it in the center this is talking about how it's putting it on one side and the other remember um that's just kind of how we orientate things um the middle column will hold up most important information always remember that it's good ux ui to always have your most important information right in front of the person because that just makes it easier for everything and people like using your websites more the float property places the element on the left or right side of its container that's a lot of coding jumbo so basically whenever you have something it's put in a container because that's just easier for the computer to think about it and um basically by saying float left we want it to be on that side of its container so like a container is basically like the area of space that the computer will allow the thing to be and by saying float left you're saying i want to decrease that area even more by just saying i want it to be on that side of my container right so if i have like a box and i put a marble in the box the marble's probably going to go in the middle if i was able to code that marble and i said marble float left the marble would go to the left side of the container and if i said marble float right the marble would roll to the right side of the container but left and right column column dot side basically just referring to both of the side columns um in their class with 25 so like ends about there ends about there and the middle column is with 50 so it takes up the rest of the width of the page here yes so the containers so like say for this one for example this side my container is probably going to be right about here that last 25 and it's gonna go that way or no yes no it's going to float left because it wants to be on the left side yes okay footer footer often at the bottom of the page not important information you don't want to put like a big body paragraph down in your footer um copyrights contact information have you ever scrolled to like the really really bottom of a web page and it's like like this is an example everyone should know so if you have ever gotten an iphone an ipad an apple watch whatever you'll notice that the packaging in really really small gray font says made by apple in california that's an example of like the kind of text that you would find in a footer um nothing important um so let's ask the group and christian's gonna monitor the chat and tell me if we have the correct answer or not according to what you previously learned what will be the selector of a footer and christian you could just let me know if we have the correct answer in the chat sorry i'm just answering another question oh yeah no totally take your time so see i'm gonna draw my little lines here hopefully people can see those i'm sorry those are not pretty i'm not an artist um okay see this main content block this is fifty percent of my width this is 50 and these are 25 these each side are 25. sorry this is atrocious so these are 25 and apply that to both sides so ditto over here we get that from this block of code and this block of code where it tells us that our left and right columns are 25 percent width and our middle column is 50 width that's the container so that makes the container so see this side this i'm going to outline it this is my 25 with container for my side column this is my 25 width container for my other side column and i'm going to change my color this is my 50 width container for my my main content column so i think i think it would be really beneficial if they like see how to implement it on the html file so like how do you do how do you add the class column because i don't yeah let me see hold up christian do you want to try and take a stab at explaining it while i see if i can find something to show them yeah i'll explain it as best as i can so basically in your css file um your selectors you're selecting the column class right and so you're applying whatever you put between those brackets and you're applying that style to any element with the class of column so that's how you're able to like split different elements onto like different sides of the page so if i were to put dot column and then apply a style in there anything any any element with the attribute of class equals column will have that style applied to it does that make sense um i hope that was good i have a code example i just searched up really quickly on the internet but i have one that we can like look at um really really quickly so i just found this really quick because unfortunately i don't have anything that isn't like for school that i unfortunately can't show um but this is just like a really simple example so this one this one here is without a container and this one here is with a container and if we notice see this see how it's like all like up next to the end and it's like not pretty but this one that's with the container it is like sent it's like more centered and it's prettier um so basically oh my gosh where's the style sheet me get this style sheet open yeah it's exactly like a margin on a google doc that's why you add like padding um margins you want you want to add that stuff so that things are like kind of exactly where you want them to be yeah that css sheet is kind of a mess to like look through as an example i thought it would be cleaner it's not um but basically like this is what the difference of a container makes by putting things in a container you're able to like move them around and make things more aesthetically pleasing you don't need a container to make a website but if you want to make a pretty website containers help so if we go back to our css slides sorry i was looking ahead to see if i could find an example um you have my containers that are here that encase this information how would you you write all this code in css and then how would you apply it to a paragraph in the html code okay so let's go back to like um okay see this see this like dot talk nav and see all this code that's talking about how to style this top navigation bar well that's basically what you would do except you would just like have like paragraph like p so that's how like whatever element you're styling you just put its class or you put its tag or you put its element there and then whatever is in that is how you style it because you just code through the styling and then the css sheet links the html sheet through that linking process which we went over at the very beginning and that's how you link stuff but good question okay so this one is not the example from this one so this one has a background color of lavender text align is in the center which is like this so it's like in the center and the padding is ten percent within the container yes okay yeah if you're actually sorry if you're gonna apply the um style to the tag then you would just like put whatever the tag name and then apply the style so in this case since the table thtd and yeah all three of those are tags in html you don't have to put the period or you know that sharp sign in front of it you would just put the name of the tag and then it would apply the style to anything with those um tags does that make sense yeah christian's absolutely right that was a really good explanation thank you christian um so the borders this is where it gets a little fun um we're making tables now so it's a nice way to categorize and organize data so borders add borders with the border property border collapse property makes them all collapse into one border so that's like say if i had like this and i wanted a border around the whole table so see i have like this and you have this like line on the outside but say i wanted a border that went around the whole table i could use border collapse to collapse the box container border with the border that goes around the whole table just to make it pretty um alignment align text left text right text center with the text align so do i want this is text align center all of these are text align centers but you know it's like how you play around with it in a google doc spacing padding as property to white space um color background color so like what color do i want this this is pink what color do i want this purple um it's like changing colors it's the exact same way that you would change a color for a paragraph you know background color you know text color textalign you know it's all the principles that you've already learned but now we're doing it in a table it seems a little bit daunting but i promise you it's not um size width and height and properties modifies the size of the rows this is a little bit new because we're dealing with a table um we don't have size as an example here unfortunately but a lot of the times it will like default size which looks like what kind of happened here where it will like give it like a decent amount of stuff um you know to deal with however i want to talk about how the padding works a little bit because you see an interesting example of this here so for the table the padding is 10 10 pixels what does that mean so that means like around the text in the container there's a padding of 10 pixels and that kind of like is an area where the wording isn't allowed to be anymore so it closed off more area but the padding is relative to the border does that make sense so like if i were to run a 10 pixel line right next to this one but it's 10 pixels away and i would have run that all the way around all the way around that's that's my padding so flexbox this one's interesting flexbox is a layout module which uses flex containers to make flexible responsive layouts for your different devices and screen sizes a fun way that i like to think about it and it makes no sense to anyone but me but i'm like oh if tables are glass containers flex boxes are jello because i'm like oh like they like ship like they shape shift but that's like that's a really bad one i just say that because i think it's funny so the width the height and the order of items in the container can change to best fit a given amount of space you don't need to use float or positioning when using a flex box so um to make a container flex container to set it set its display property to flex so class flex container and then we have item abc ie this now we're gonna go that's our html yes our css flex container display flex so like it's it's as a flex box i wish this would this bar would go away i want it to move um there's a piece of code oh my gosh can we i'm just gonna not move my mouse see that height 150 pixels that's basically just like saying the height of the flexible container yeah so it's it's it's essentially just like a more customizable table like it's a table but we can do more fun things with it to make it work for our specific needs so if you have a whole bunch of data and you want categories and you want it to be all laid out perfectly row by row by row that's you're probably going to use a table but if you have a limited amount of space and you need to categor or you need to show like two or three pieces of information i would probably use a flexbox so flexbox container properties um direction so flex direction sorry sets the items to display in a row or a column justify content align items horizontally this is just for this example but you know flex start um left this is default flex end right and center justify content is another way to like align things um so space around display the items with equal spacing before after and in between so like we see here equal space in between them and i know that if like this went on you would probably have like an equal amount of space if you were to use um space around um this is probably an example of space between where we have the same amount of space in between each category align items vertically so flex start top flex and bottom and center and stretch fills the container default option and baseline aligns the cord aligns the items according to the text baseline talking is not my strong suit today i'm so sorry about that um so here let's go through the code line by line figure it out flux container the flux container display flex we know it's a flex container flex flow row so it's a row it's not a column it's a row justify content space around so we're supposed to have the equal amount of space on all the sides but i think that's just an issue of like the way the image was cropped but yeah so it's equal equal amounts of space all around each container items align center so they're going to be in the center of their boxes and height of the containers is 150 pixels yes i know it seems a little crazy and i know it's a little daunting um but these are a lot of properties we've already talked about it's just a little bit of a different wording for them um if you have questions about the flex containers and this flexbots stuff ask please ask i know it's hard but i'm gonna look in we're gonna give reactions yes no maybe how we're feeling about this um it takes a little while to like get comfortable with flex boxes like even i'm not all that comfortable with them definitely not as much as willa but um yeah so don't be too hard on yourself if you don't understand it because a lot of it's memorization or you know completely understanding it which might take a little while yeah like for people like christian and i who have been coding for like a decent amount of time and i know christian can testify to this um especially with java christian's really good at java or sorry javascript excuse me thank you um but like when you code for that long it kind of just like comes naturally like you kind of just like remember it um and i don't want people to get too hard on themselves about this because we're going to be talking about bootstrap next week which can like kind of help you do all this for you um not really but like kind of so a lot a lot of stuff a good portion of stuff i mean yeah a lot of stuff you'll still have to know but like it'll make your life a lot easier yeah but we're getting into that next week because we thought it would be most helpful for that segment of the course um but yeah so don't be too hard on yourself i know it's difficult but let's move on um animation's part one this is what we're getting into this is what we're talking about today because it's the newest concept so an animation lets an element gradually change from one style to another so i want my box to change colors from red to blue i want my triangle to change into a circle these things keyframes when you specify the css style inside the keyframes rule the animation will change from current style to next style yeah so it's like um oh you know what it's like it's like this is such an old reference but you know um those movies like those old movies and they used to shoot them on film and each like segment of film was like one like very small piece of it but like if you played them really fast it was a whole movie it's like going from like one box to the next in the film of your animation of your website and then it plays it all through so it's like a movie but the animation that's what we're gonna talk about each frame each frame combined makes moving yeah right yeah yeah so the animation name specify a name for the keyframes element um animation duration specify the time that the animation can complete one cycle that's in seconds so five seconds animation delay delay the animation to start so that's like after i press run program how long will it wait before it starts my animation so in this example it's three seconds so after i press run it will count one two three and then it will start my animation that was five seconds long and animation iteration count the number of times your animation should run so in this case it's three yeah so um this one we're going to go through this changes your background color from red to yellow that's my animation my animation is changing my background color from red to yellow and we always do the background color to be set is the starting color not the ending color the starting color and then division with 100 pixels height 100 pixels this is just saying like what the divider will look like um that's changing color and then animation name it can be whatever you want it can be my favorite dog it can be flexbox it can be well not flexbox that was just what came it can be like troll doll like i don't know you can name it whatever you want and animation duration four seconds so it will take four seconds for this divider that's 100 pixels by 100 pixels to change from red to yellow and that's what this code means yes questions maybe how do we like does that kind of make sense to people uh yes no maybe i'm looking i'm looking for reactions i see a one thumbs up i want to look for some more though um christian do we have some questions that need to be answered um well how do you make an animation go on indefinitely it was one of the questions we'll see that during the workshop but if you want to cover that now um can i show you guys it's in the it's in the it's in the i think we should just get to the workshop because we have like 12 minutes so yeah that's generally yeah this is like the second last slide so don't worry guys i think yeah so this is the second last oh my gosh so this is the second last slide um animation's part two so direction left right front forward normal animation is default it will play forwards whatever your forward structure is reverse animation is played in reverse so backwards so if i said my animation is from left to right if i said reverse it would go from right to left alternate the animation is played first forwards then backwards so then it would go right left left right and alternate reverse the animation is played backwards thirst then forward so right left left right um oh my gosh google animation timing function the speed of an animation linear same speed start to end ease in slow start so that's like the fade in or a jump cut basically if you're talking about in movie terms so um does that kind of make sense i'm going to go to the example because their example today is relatively simple so this is my example today i made it um this is very simple who has a question about making it go indefinitely whoever had that question this is the line of code i want you to focus on animation iteration count this counts how many times our animation happens notice how it says infinite this in this animation will never stop it will keep going it will change colors it will go around in the circle forever and that's how you do it you just say infinite animation duration i wouldn't recommend sending this to infinite because you will never get your end result um so animation duration always have a time limit animation iteration count could be infinite so i'm going to drop this link in the chat um i'm going to drop this link in the chat and what are we gonna do we're gonna fork it yes we're gonna fork it that's the first thing we're gonna do we're gonna fork it and it's gonna be great and it's gonna be a great time so everyone i want you to go to the animation um and i want you to go and i want you to fork it for you advanced people we have a different example this is the example we have for the advanced class but um if you want this is this was done by lovely education director rachel um she did an amazing job this is like a fun little moving background interactable text interactable well animated image this is the example that's for the more advanced class um i don't have the code for that right now oh this is also our submission form for this week so i'm gonna drop that in the chat really quick um so that's our submission form that's a replica link um i'm going to go through the replica code line by line like we always do and then i'm going to give you guys some time because there are some challenges in there that we can go through together so i'm going to share my screen and we're going to go through it together awesome so um this is the replit so this is our very simple animation example which you all should have forked if you don't know how to fork it we're going to go click this little arrow and then we're going to fork it i want everyone to make sure that they do that because we should not be editing this replica we should be making our own copy okay so this is all of our code for today actually um as much as it's in the x.html file it's a lot of css so if you already look at this code and you're in the advanced group and you're like yeah i could do that i want you to look here and i want you to go to these challenges and i want you to do these then so those are our challenges for today but for beginners we're going to go through the code a little bit more and talk about it divider this is what's making our thing this is what's making the square the square is known as divider in html world so with 150 pixels height 150 pixels background color starts as red remember how i said our background color is always the starting color not the ending color not the color in between it's our starting color our starting color is red position relative what does that mean it's relative to the size of the screen animation name i called it square loop because it's a square going in a loop you can name it whatever you want animation duration five seconds what does that mean it's gonna take me five seconds to go from one two three four five seconds one two three four another five seconds animation iteration count infinite what does that mean it's gonna go on forever it's gonna keep doing this square loop circle until the end of time animation direction alternate just kind of everyone remember what that means yeah kind of maybe so this is the reverse right now that's happening up and left this is forward so this is the forward and by saying alternate we make it go backwards if we didn't say alternate it would just come back up to this and it would start the same direction it would go again it wouldn't reverse the circle it would only go in one direction this is our animation this just this i know it looks not that scary which is good so keyframe square loop keyframes our animation tag square loop the name of our animation zero percent when the animation is zero percent of the way through the background color is red and its position is left zero pixels and top zero pixels so it's at the very top left corner of our screen can we sir i'm sorry yeah no go for it can we do like circle loops or like oval loops or different kinds of loops because when i typed in different like i put circle loop and it doesn't move at all it just stays on red well here's the thing if you change square loop to circle loop that's not automatically going to make it a circle you need to change that here so let me go through this because i think that might help you so once you have to also make sure that if you change this like if you change this to circle loop you also need to change this to circle loop so that they're both talking about the same thing okay so let's go through here when it says left zero pixel top zero pixel this dictates its path of travel these like code lines this left top left top left top left top left top this dictates its path of travel so if you want to make it not go in this rectangle formation you have to play with these pixel arrangements to make it go in a circle to make it go in a triangle to make it go in a square right now it's traveling in a 200 pixel by 200 pixel square so left zero pixel zero pixel left 200 pixel 0 pixel left 200 pixel top 200 pixel which is there and then left 0 pixel top 200 pixel and left 0 and top 0 which is our starting point so i'm gonna say it through zero zero two hundred zero two hundred two hundred zero two hundred zero zero zero two hundred two hundred two hundred two hundred zero it's a coordinate system if anyone knows x and y coordinates i made this container 200 pixels by 200 pixels and i'm allowing it to move within the container that's 200 pixels by 200 pixels via the coordinate system that is the pixels this is its path of travel this tells me what color it is so notice how it changes color that's because when i say the animation is 50 done its background color is green and it's at this position so each one of these lines tells me how far along the animation is what color it is and where it is and that's the three components you need to make an animation how far along it is what color and where it is in the animation that's it that's all you need you need more stuff to do more complex animations so say if i wanted to make this move in a triangle i would probably need more understanding of like how it would go in a triangle but other than that it's a pretty you know like when you think about oh this is a box that changes colors that moves around my screen but this is five lines of code it's not you know it's one of the more interesting things that we've done our challenges for today is to change the square into an image add a moving background and add an interactable text with a pseudo class like we learned last week do i'm going to stop sharing my screen have a good one