or like whatever you wanna name it and then we're going to double click and then delete everything so as you remember to like type coding you need this statement like this and basically in in java to make an if statement you just do if and then these parentheses and inside the parentheses this is where this is our condition so this is basically like what the program checks to be true or false so um let's first make like a boolean so you can do like um boolean happy is equal to true so in these parentheses we want to put a boolean in here so we can put like if happy so happy is what the program checks so like in this case i set it equal to true and then in here like at like inside the if statement this is where our decision will be made so we can like do system dot out dot print ln parentheses like yay because you're happy so that's how you make an if statement and just to reiterate whatever you put inside the parentheses is what the code checks so in this case happy is true so because this condition is true then this decision will be made which will be like yay so if you compile click compile and you go here and you right click you click board main stream blah blah blah click ok and so it prints this statement out because we taught it to but if we make this false then happy will be false and this won't run basically like nothing will run so if we click compile nothing is could compile and click this nothing is going to pop up see like like oh yeah so oops okay yep so i'll remind you that boolean is the last type of variable we were talking about last week um so it stores either true or false so that's mostly what's going to be inside the parentheses of your statement yeah and i forgot to do example but based like an else statement is like if this statement isn't true then the else statement will run so like if we're not hungry then well instead we'll just play animal crossing okay so there are even more layers you can add to your if statement so uh if we look at this example it's a lot like before so like if hungary is true then you're going to eat pizza but then remember how we talked about else statements so if the first statement is not true then else you're going to do another action so we can there's a slight variation of that we can use so if you're hungry then you eat pizza but if you're not hungry else if you're tired then you take a nap so basically if the first statement and if your first if statement isn't true it's going to move on to the next statement which here is marked by else um then it's going to check if that's true and if that's true then it's going to do the action that's inside of the second statement so take a nap um and then if neither of those are true then it's just going to go to the catch all else statement and it's going to uh run play animal crossing so an else if statement is basically just like an if statement but only but the compiler only looks at it if the first statement that comes before is not true and then you can add like a ton of other else if statements all in a row for different conditions and there are lots of different ways you can play around with this yeah so yeah okay okay so before we give um an example for all of that there are also a lot of operator symbols or operations that you can use inside your if statement so instead of just having a boolean value that's either true or false then instead you can put like a statement inside of your if statement a statement inside of your parentheses so for example if if 7 is greater than 6 that's true so then the if statement is going to run um so there are lots of different like sentences or statements or claims that you can put inside the parentheses of your if statement and they're going to use um at least one of these operators so the first one is a greater than sign and the second one's a less than sign and you can use this just as you used them in math class they're pretty selfexplanatory um same thing for the third and fourth one it's a greater than or equal to sign and a less than or equal to sign so you're going to use these for numbers um basically exactly the same way that you learned in math and then uh i think it would be easier to go to the sixth one which is the double equals sign so that's going to be basically if two numbers are equal to each other so if six equals six then the statement is going to run um that might not make very much sense but um for example if there are two variables that are storing different values and those values are always changing then the if statement is going to happen what if those two variables hold the same value and you're going to check that with the double equal sign um and that's going to be yeah sorry just to give an example like if x is equal to zero or like if right five is equal to five like what alex said so yep so yeah you could also just do it with one variable so like if x equals five then the if statement is going to happen um so it's really important to remember to use a double equal sign here instead of an equal sign because in java just one equal sign always means that you're creating a variable you're assigning a value to um a variable so you don't want to do that to compare things you always use two equal signs and then the exclamation point basically just means not opposite it's not equal to each other so you can put an equal sign you can put an exclamation point before an equal sign and that basically just means if 5 is not equal to 6 then the if statement runs something like that um do you just want to do examples for that right now for the numbers okay we can do an example with if analysis found statements so i'm going to create two variables and x equals three and into y is equal to six 66 sure okay and i want to compare if x if x is greater than y let's say oops and then like parentheses and then these brackets and inside here we're going to indent indent and say our statement like system.out.printline x is greater than y um we can also have this else statement like else else um well first we can check if like else if okay sorry so first we can check if x is greater than y and then we can also use an else statement let's just like assume that x is less than y so we can do system dot out dot print line x is less than y so what the else statement does is if this is not true then it else it will do this so if we compile it and go back to our box and right click second option oh and then you go to our this theme it will say x is less than y because 3 is less than 66 but um what if like for example x is equal to y so let's say y is equal to three then in here we also need an else if statement else if x is equal to y because x is not greater than y so this is false but x is also not less than y they're equal to each other so we need like another option to account for when x is equal to y so we can do system x is equal to y and so now if we run it it will say x is equal to y um and for the not symbol not means like negate so like we can also add change this if x is not equal to y then we can say x is not equal to y so the knot is like a negates something so if something is true if you do not true it will give you false and if something is not false it will give you true um yeah and not equals just means not equals so if we compile it it'll like give us x is equal to y because you can't change it um yeah and there are also more operators alex oh sorry okay so um sometimes encoding you don't want to just compare two numbers instead you want to compare two sentences or two words and so you're going to use strings to store those values so um we can't just do two equal signs to compare two strings and tell if they're exactly equal to each other instead we're going to use the dot equals parentheses um operation so um i guess that'll be easier to show you later exactly syntax for that but just remember that when you're comparing two strings um you're going to use the dot eagle statement and basically it's going to when you use that it's going to check that your two strings are exactly equal to each other so the same capital letters um this exactly the same letter is in the same order um all the spaces are exactly where they are in the other one and like it basically has to be exactly the same um and then there what if you want to get even more specific with your if statement and you want to you want something to happen only if two conditions are happening at the same time so there you're going to use a double and symbol i don't know exactly what you call this but it's the ant symbol um you're going to use two of them and then basically uh as you can see on the right over here um you can basically have two statements inside if parentheses and um compile find them with two a symbol your if statement is only going to run if both of those are true not if only one is true not if they're false only if both of the statements are true and then um maybe you want to do something else maybe you want your if statement to be kind of broad if this happens or if this happens so one of two conditions happens so in that case you're going to use these two lines um on my keyboard above fifth and then above the enter keyword yeah on my keyboard it's the key the low backspace and above enter and you shift yeah i also don't know what these are called i just call them lines so basically if you put two of them in between two statements in your if parentheses it's go it basically acts as the word or so your if statement is going to uh take place if one or the other of the statements is true if that makes sense so like if x is equal to 15 then x this statement is true but the statement x is greater than 40 is false but it'll still run and likewise if x is like 60 this statement will be true but this will be false and it'll still run but if oh what like both of these are like not true which i don't think is it possible but like if both of these statements are not true then this won't run but for the and then both of these need to be true yeah so with the or um it'll be okay if only one of the statements is true but with and both of them have to be true like andre i said just reiterating yeah also alex said but um i think that's it for slides so um we can do like another example so like in here i have two integers right x and y and we can change our if statement to be like if let's do an n symbol so we can do if x is less than y and x is greater than zero so like both of these need to be true in order for this to run so we can say in here um x is less than y and is a positive number so yeah that's what this condition like it needs to be true and in or we can if we want to do like an r statement we can do else if x is less than zero um or x is less than y so we can say x is either a negative number or x is less than y so only one of these need to be true and this will run does someone want to tell us if the first if statement is true or false if it's going to run michelle do you have a guess it doesn't have to be right but like just look at it and tell us if you think it's going to run so here we have x is equal to 3 and y is equal to 3 so so for the first if statement x is not less than y since both of them are three and so since the first part of the if statement is false already then that if statement's just not going to yeah exactly like you said in the chat and will this statement be run if 3 is less than 0 which is not true so this part is false and if 3 is less than 3 that's also false so this part won't run and neither will this part so will resort to the else statement with like both of these if and else if are false so then it just defaults to the else statement which we can say x is equal to y and so we compile it and go back to our box here and then you right click the second option and then it will pop out the answer which says x is equal to y um do you guys have any questions are you confused do you want us to clarify anything just to reiterate you need to be extra careful with the second statement here the else if statement because it's using an or so just because the first part of the if statement is false doesn't mean the whole thing is false because if the second part was true um that's an or so that is true so the whole thing is just going to be true and it's going to run so just be careful about that so yeah if no one has any questions do you want to maybe do an example with a string oh yeah okay so we can create like a string variable so we can do string um object equals to pencil and then we can have string object 2 equals to pencil and we can compare these i'm just going actually i'll just leave this here if you guys like want to copy it down but to compare strains we would just do so first you want to compare two things right so we put like the first thing we need to compare and then dot equals and then in these parentheses the second thing you want to compare so in this case it's object two so in here we have equal sign and we also need an ending parentheses for our if statement and then you have these brackets and in here we can just say system the auto print they are equal to each other so if you want to compile it to test it out you go back to our box and you right click click ok and it'll say they are equal to each other but java is also case sensitive so what that means is if we change this to like capital p and we try to run it right click it well oh wait yeah okay then this part is from this but you guys can see that because pencil is not equal to pencil with a capital p then this statement was it didn't run so you have to be careful with uh strains because like it has to be exactly the same as alex said and yeah so you for strains you can compare variables but you can also do like if object dot equals like yes so what that does is it compares this which is pencil and it sees if pencil is equal to yes so you can also instead of a variable you can also put like an actual stream and if we compile it it will okay wait first let me clear it and then i'll compile it oh yeah and it didn't print this statement but this is from this if statement so yeah so that's comparing uh strings and remember if you want to see if numbers are equal to each other you have to use these double equal signs and you can do these for ins or doubles and double is for decimals and do you guys have any questions please feel free to ask questions like at all even if you think they're dumb like that's over here for to answer your questions yeah um i don't know if i lost you guys like if like this entire thing is confusing or like if you don't understand one thing so can you guys please speak up like even if you understand everything please tell us or if you don't understand something then you can also tell us left oh uh andrea do you want to go over how to compile the code again yes okay thank you for having me this compile thing up here oh um if you get red dots that's probably because you have an error in your code somewhere so that would be something with a syntax maybe um when you go in your code do you want to see if there are any red lines anywhere and if there are you like you can tell us where they are and maybe we can try to help you um like troubleshoot yes like getting yours what am i pronouncing that right uh i really hope i am so if you have an error like andrea is showing you um like it'll tell you this or if it's like this logic arrow would be like a bunch of confusing words that you don't know what it means um do you think okay i really hope i'm not butching you guys names if i am like please tell me but um so um once you compile your code so like you right click on the brown box and then you click the second option um there should be a window that shows up that yeah i got your name right so there should be a window that pops up that gives you the output but if it doesn't pop up automatically um kind of like hover over you blue jay icon on the bottom and like see if it popped up but it's just hidden and you need to try um looking for it it should pop up even if it doesn't if even if it is right in front of your face yeah it's like you have to go here and like something will pop up okay is everyone good now oh oh i'm not so stupid i closed my blue jay program okay okay so after you click compile in order to run your code you're going to go back to your bluej window um that has all of your classes from before if you didn't delete them so like they should all be brown boxes yeah like the one on android screen right click and then you click this thing it says and void made yeah and if it says compile you also click that just keep always click always right click your box and click the second option um rika did you uh type in like all of the like the base code at the very beginning of your program so andre do you want to like highlight the code at the top this thing e wait so you could compile does it give you any errors you want to make sure that you have the public class line and also the yellow line that andrea is that's just gonna like set up your code yep yeah you need this to like actually run your code like if you don't have this it'll like we'll just mess everything up and we'll probably have these red lines so you need this all this jumbo it can be hard to remember in the beginning especially since you don't really know what it means yet but um as you get a little more advanced then you'll like learn exactly why it's there and why you type everything yeah i get it's really annoying not knowing exactly but yeah that is something important so if you guys are all good no questions no errors um then we're going to move on to usher activity for today yeah wait first do you guys like do you guys not understand something or is it just like new to you and you kind of got you get used to it or is there like something that you don't understand or if you ever just need time to catch up just let us know okay okay i think we're going to do like a short mini activity but we might not finish it but i'll like try to like at least describe it to you so we're going to we're going to make this 8 ball program and if you guys don't know an 8 ball is just like um eight ball is well we're gonna make a modified april so yeah andrea magic april um magic eight oh yeah no spaces magic ball i'm just convenient so we're basically going to make a program that simulates a magic eight ball and like that's a pretty popular toy so basically you shake it um and it just gives you a random fortune or piece of advice and so we're going to try to do that with this statement here yeah so click new class and then name it whatever you want click ok and now you should have this brown box does everyone have it cool seems like you guys have it okay and then you right click sorry you double click it you double click it and then you delete everything just like everything and then you have to type public static void name and then parentheses and then the string with a capital s in like this and well we also need something what we learned last time we did scanner right so remember we have to import scanner so import space java.util.scanner with the capital s remember that enter is the thing that lets us get a user's input so it's kind of like a game yeah so after we need to create our scanner tool so you do scare and then i'm going to name my input and then equals new scanner and then parentheses system thought andrea maybe we just want to like uh set up really quickly because christina wants us to get off the zoom account in a couple minutes oh okay so okay we can do so first we want to like ask our user to enter a number so like enter a number from 1 to 4 and then we want to store our user's response so it's going to be a number so i'm going to store it in an int variable like int response equals to input which is our scanner input top next it because we're getting an integer response and then really quickly we're just going to use an if statement and check if response is equal to one so you have to use double equal sign to check if response if the user entered one so if the user entered one then we would like say something like um you are awesome and then else if the response is equal to 2 then you can say um roll the ball again and you can put like whatever response you want in here and then we would also do another elsa statement which checks if response is equal to three and we would put like another statement here so that's like the basic format of it um if you guys want to go home and play around with it and add um different else if statements and lots of things in here um that would be great if you just want to play with it but unfortunately we're gonna have to end class a little early today um one more thing to mention um you also need an else statement or else it's going to give you an error so if you have an if statement and an elsa statement then you need an else statement which will basically catch all your errors but in this case because we need an else statement this is just when the user picks the number four so yeah you guys um we recorded this lesson so if you guys can like like file back on it because i know i typed really fast and i spoke really fast but you guys can watch this video in your own time and yeah or you can screenshot it now and um so you don't have to watch the whole thing but yeah so i'm gonna stop recording