00:00 - the first thing we're going to need to
00:01 - do you need to say run is equal to false
00:04 - or is equal to true I always do that
00:07 - we're gonna say clock equals PI game
00:10 - time dot clock
00:13 - capital C hereby bad okay next we're
00:17 - gonna say N equals Network right because
00:22 - we're importing Network up here we're
00:23 - gonna do a very similar thing to what we
00:25 - did before and all the previous
00:26 - tutorials where we just connect
00:28 - initially by doing that initialization
00:30 - and then we're gonna say P equals
00:32 - actually player equals and dot get P
00:37 - right and you should already have that
00:38 - method
00:39 - it's just returning that like connect
00:42 - what we connected to right so when we
00:44 - connect we get the player number which
00:45 - is either 0 or 1 so we need that now it
00:48 - reminds me it's gonna be a number so we
00:50 - got to put in to round this so that we
00:52 - can compare it with other integers okay
00:55 - and last we're gonna just print just so
00:58 - we have this you are player player now
01:03 - this just indicates to us like when we
01:04 - initially run if we know we're 0 or 1
01:06 - just to make sure everything's working
01:07 - fine now we're gonna make a while loop
01:09 - we're going to say it's our main game
01:11 - loop we're gonna say well run and then
01:14 - in here we're gonna do clock dot tick 60
01:16 - very similar to what we've done before
01:18 - guys I'm gonna start adding some new
01:20 - stuff in a second ok so now that we've
01:21 - done this it's time to start actually
01:25 - connecting and asking the server for
01:27 - information so what we should be doing
01:29 - here is every frame we should be asking
01:31 - the server to send us the game
01:33 - especially at the beginning of this loop
01:35 - because right now we haven't actually
01:36 - created a game class right we need to
01:39 - get that from the server so we're
01:40 - connected now we know what player we are
01:42 - so now what we can do is we can try to
01:44 - get that from the server so to do that
01:47 - we're going to say game equals n dot
01:49 - send get and that's literally as easy it
01:53 - as it is usually doing except and then
01:56 - we'll just what do you call it we'll say
01:58 - run equals false and we'll say print
02:02 - couldn't get game ok and the reason
02:07 - we're doing this and we're gonna break
02:08 - as well is because when we if we send
02:12 - this and we
02:13 - don't get a response from the server
02:14 - that means the game doesn't exist and
02:17 - what what if that happens well then what
02:20 - we should do is we should exit out of
02:21 - this game we should print saying we
02:24 - couldn't get the game and then we should
02:26 - try to reconnect or start a new game
02:28 - with someone else
02:29 - so this main function is going to be
02:30 - like the actual game running but once we
02:33 - exited this main function we're gonna go
02:34 - to a main menu and the main menu will
02:37 - allow us to choose like we want to play
02:40 - against and a bunch of other stuff as
02:42 - well okay you guys will see that later
02:43 - okay so that's how we do that next what
02:46 - we're gonna do is we're gonna say if
02:48 - game dot both went now what we're gonna
02:52 - do here is if both players went well
02:55 - we're not waiting for anything now we
02:58 - need to see which one won so what we're
03:00 - gonna do here is going to check which
03:01 - player one and we're gonna display that
03:03 - message accordingly on the screen so
03:05 - what we're gonna do initially is we're
03:07 - gonna redraw the window the reason we do
03:08 - this right away is because we want to
03:10 - make sure that if both players went
03:12 - we're updating the window and on the
03:15 - window it'll check like if both players
03:17 - have gone like in this redraw window and
03:19 - it'll draw the player moves for us so
03:21 - you guys will see how that works in a
03:22 - second we're gonna do a delay when a pie
03:24 - game time delay 200 and now what we're
03:28 - gonna do is we're going to try game
03:31 - sorry game equals Adam don't send reset
03:36 - now why we're doing this obviously is
03:38 - because well if both players went we
03:41 - need to tell the server to reset those
03:44 - player moves right so inside a game if
03:47 - we call reset went we're just going to
03:49 - reset it so that we were able to play
03:50 - the next round after okay we're gonna
03:53 - except except of course I can't spell
03:58 - that we're gonna say Ron equals false
04:00 - we're gonna do the same thing as before
04:02 - we're gonna print couldn't get game
04:05 - couldn't get game and now we're gonna
04:09 - break okay
04:11 - now under this so after we send that
04:14 - reset now what we want to do is we want
04:16 - to display a message on the screen
04:17 - indicating whether player 1 1 or player
04:20 - 2 1 or like if you want or if the other
04:21 - player 1 so the way we're gonna do this
04:23 - it's actually a decent amount of lines
04:25 - is because we have to like render font
04:27 - and then we got to determine where we're
04:29 - gonna draw the font and what's gonna be
04:30 - on the font so we're first we're just
04:32 - gonna start by defining a thought so
04:33 - we'll say font equals PI game dot font
04:37 - dot sys font okay in here we'll say
04:41 - comic sans font size let's go 90 for
04:45 - this one now we're gonna say if game dot
04:49 - winner and remember if we go to game
04:51 - winner is going to respond to us with
04:53 - either a 0 a 1 or a negative 1 so it
04:56 - would you have to check if winner is 1
04:58 - and player so whenever our current
05:01 - player is 1 then we're going to say you
05:02 - won
05:03 - if winner is 1 but the current player is
05:05 - 0 we're gonna say you lost right so
05:07 - that's how we can check this so to do
05:09 - that we're gonna say if game don't
05:10 - winner equals equals 1 and player equals
05:14 - equals 1 and remember we got that player
05:16 - from the server so we know if we're
05:17 - either player 0 or player 1 on the
05:19 - client side
05:19 - and is actually is do I need an aunt oh
05:24 - sorry
05:25 - or what's we need to do or game dot
05:30 - winner
05:31 - equals equals 0 and player equals equals
05:34 - 0 so essentially what we're gonna do
05:36 - here is win a check if this player won
05:38 - so we know what player we are and we
05:41 - know what player 1 so if that coincide
05:44 - like what player we are and the player
05:46 - that one then will print out and we'll
05:48 - say or will put on the screen you want
05:49 - right telling that client they want so
05:52 - we'll say text equals font render and
05:55 - then here we simply say u 1 exclamation
06:01 - point and then we can just do one and
06:03 - then a color and obviously color we just
06:05 - you like read that again from the screen
06:07 - okay so else actually L if and now we're
06:12 - gonna check it they lost washi I think
06:15 - we could do this easier we're gonna say
06:16 - L if game winner equals equals negative
06:20 - 1 so if it if we tied what we'll do
06:24 - here is will say text equals font render
06:28 - and we'll just say tie game exclamation
06:32 - point 1 again we'll put that in red ok
06:36 - and now else so if we didn't win and we
06:39 - didn't tie we must have lost so we can
06:41 - literally just copy this and we'll just
06:43 - say you lost as the text okay so you
06:47 - lost da sweet and now what we're gonna
06:51 - do is just render that font put it on
06:53 - the screen so our not render it just put
06:56 - on the screen so say wind blitt text and
07:00 - now we're gonna do the exact same thing
07:01 - that we did before to get it in the
07:03 - middle of the screen and just be a
07:04 - little bit easier so we're just gonna
07:05 - say I believe to a needler brackets no I
07:08 - don't think so we'll say width over to
07:09 - and that's the width of the actual
07:11 - screen - text get underscore width we
07:17 - need those brackets over to you comma
07:19 - and now we'll just do the same thing
07:21 - with height so we'll say height over to
07:23 - - text dot get underscore height over to
07:29 - okay so that's gonna put in the middle
07:30 - of screen we're gonna update the display
07:32 - I game display
07:34 - update and we're going to delay so
07:38 - pygame
07:38 - dot time delay and I'm gonna put two
07:43 - thousand for two seconds you guys can
07:45 - put whatever you want in here
07:46 - okay so let's break this down really
07:47 - quickly if both players went that means
07:50 - now we're gonna check who won so what
07:52 - we're gonna do is we're going to redraw
07:53 - the window we're going to what do you
07:56 - call it apply a small delay of 0.2
07:58 - seconds just so that you can see what
08:00 - both Claire's did before it immediately
08:02 - pops up who wanted who lost so actually
08:05 - let's make this a lay half a second
08:07 - we're gonna send to the server reset so
08:09 - we're gonna reset both players went so
08:11 - the next time that we start playing we
08:13 - can both players are allowed to move
08:14 - we're gonna say Ron equals false if this
08:16 - doesn't happen if this doesn't work
08:18 - we're gonna prank couldn't get a game
08:19 - we're gonna break now otherwise so like
08:23 - if this worked we sent the game we're
08:25 - gonna create a font we're going to check
08:27 - who won so either we won we tied it we
08:28 - lost when display that to the screen
08:30 - we're in delay for two seconds and then
08:32 - we're gonna play the game again after
08:34 - okay awesome so we're almost done
08:37 - I'm just gonna add this pretty actually
08:39 - complex for loop in here so we're gonna
08:41 - do now is gonna say for event in PI game
08:45 - event doc gets very standard for Poggi
08:49 - probably seen this before I'm gonna say
08:51 - if event dot type equals equals PI game
08:56 - dot quits then what we're gonna do is
08:59 - gonna say run was false and we're gonna
09:03 - say PI game dot quit so this just means
09:06 - that they hit the whole X button at the
09:07 - top of this corner now we're gonna check
09:09 - if they actually press their mouse
09:10 - button down so this is how we're gonna
09:12 - check if they pressed a button this what
09:13 - we're gonna do now it's a if event dot
09:17 - type equals equals PI game dot mouse
09:21 - button down then we will do is we'll get
09:26 - the mouse position to do that range say
09:27 - if we're gonna say paga you've got pause
09:30 - hi I'm dawn Mouse doc get underscored
09:34 - pause so what we're doing here is we're
09:36 - checking if they press right mineral or
09:38 - left mouse button if they do let's get
09:40 - the mouse position now for every single
09:44 - button we're gonna check if we click
09:45 - that button if we did we're gonna do
09:47 - something accordingly okay so we're
09:48 - gonna do now I'm gonna say for button in
09:50 - BT ends remember we defined buttons up
09:54 - here then what we're gonna say is if BTN
09:58 - dot click pause now if they did click
10:04 - the position there's a few things need
10:06 - to check oh and else when you check this
10:08 - sorry and game dog connected sorry so
10:12 - what this game duck connected is doing
10:13 - is just making sure that it's not gonna
10:15 - let us press like rock paper scissors
10:17 - unless we both players are on so that's
10:20 - just so that we don't run into an issue
10:21 - where we can make a move before the
10:23 - other player connects ok so just add
10:25 - this and game DUP connected what we'll
10:27 - do now is we're gonna check what our
10:29 - current player is because this is gonna
10:31 - determine how we send a move so we're
10:33 - gonna do now is gonna say if player
10:35 - equals equals zero if not game dot what
10:41 - do you call it p1 went then we'll do
10:44 - something otherwise so we'll just put
10:47 - else here and we'll check it not
10:51 - ptoo game PT 1 ok so what we're doing
10:57 - now and I haven't coded the rest of it
10:59 - yet is we're just gonna check if we
11:01 - press one of the buttons so remember we
11:03 - have that click method in our button
11:04 - that tells us if we clicked on it so if
11:07 - we do click on it and we're connected to
11:10 - the game what we're gonna do is we're
11:11 - gonna check of our current player is 0
11:13 - or 1 now what we're doing is if we're
11:15 - player zero well we're gonna check if
11:17 - player zero has gone yet if they've gone
11:19 - obviously we're not gonna let them make
11:20 - a move right because they've already
11:22 - made that move they can't change their
11:23 - move once they made it
11:25 - same thing with player two so if we're
11:26 - not player zero we're player 1 clearly
11:28 - so that means we're gonna check if
11:30 - player 2 is gone yet and if they haven't
11:32 - gone will allow them to move ok so what
11:34 - we'll do in here now is we're gonna make
11:36 - a move now to make a move remember we
11:37 - just need to send to the network our
11:39 - move so we're just gonna say n dot sent
11:40 - or to the server sorry and all we're
11:42 - gonna do is we're just gonna send the
11:44 - text of the button now the text of the
11:46 - button will be a rock paper or scissors
11:48 - right and that's it precisely the move
11:50 - that we're gonna make depending on what
11:52 - button we're clicking it's just a really
11:53 - nice dynamic way to do that now once
11:57 - we've done that right so if we go to
11:59 - server what happens here is if we send
12:02 - that we're gonna play that move and
12:04 - we're gonna update it on the game so
12:06 - that the other client when it gets that
12:08 - game board again we'll have that updated
12:10 - move you guys will see how this works in
12:11 - a second ok so that's working well now
12:15 - all we need to do is just add in line
12:18 - with this right here we say redraw
12:20 - window we're gonna give it win we're
12:22 - gonna give it what else do I need to
12:24 - give it game and P which sends for a
12:28 - current player and that's actually it
12:30 - for and make sure you just call are
12:33 - calling main down here at the end of
12:34 - climb that's actually it for this main
12:36 - function so now all we need to do is do
12:38 - redraw window and we're really close to
12:40 - done so we got another like 20 lines and
12:42 - then once we do that we're actually
12:44 - finish this game and then we can start
12:46 - testing it out and talking about some
12:48 - more things we can add to it
12:49 - ok so what we're gonna do now is yeah
12:53 - it's actually quite a bit of work is
12:54 - we're gonna draw all the stuff on the
12:56 - screen now so we've done all the logic
12:58 - aspect of it down here in this main
12:59 - function now we need to draw everything
13:01 - so it's more tedious than it is
13:03 - difficult or just
13:04 - first start by checking if not game dot
13:07 - connected now this just means if we have
13:10 - not yet had the other player connect
13:12 - then all we're gonna do is we're gonna
13:13 - print on the screen waiting for player
13:15 - and we're not going to show anything
13:16 - else so to do that we're inside font
13:18 - equals PI game dot font
13:22 - sys font name obviously is Comic Sans
13:25 - and then the how big should be let's
13:30 - make it eat okay and then we're gonna
13:32 - say text equals font dot render in here
13:36 - we're gonna say waiting for Claire
13:39 - dot dot one color let's do a nice red
13:43 - and let's actually add true here for
13:45 - bold okay okay so we're gonna blip this
13:48 - on the screen so to do this we'll say
13:50 - wind dot blintz and we're gonna do again
13:54 - that same I know a tedious thing to get
13:56 - in the middle the screen so we're just
13:57 - gonna say with over to minus text get
14:01 - underscore width and then we're gonna
14:04 - say height over to minus text get
14:09 - underscore height and actually we need
14:11 - to make sure we're dividing both the
14:13 - width and the height by two so let's do
14:14 - that okay that's it for that now else so
14:18 - this means if we actually are connected
14:20 - both players are in now it's time to
14:22 - start drawing the real stuff on the
14:24 - screen so we need to draw that what was
14:27 - it so actually let me pop up a client
14:28 - for you guys you can see what it looks
14:30 - like it's around server rotten client
14:33 - client great so if we want to see the
14:36 - client what we do is we need to draw
14:39 - this this this this and then the three
14:41 - buttons case we're gonna have to do
14:43 - these for text and the thing is these
14:46 - texts need to change on like they're
14:48 - gonna be different depending on what
14:50 - player is looking at it right so for
14:51 - example here it's showing us what our
14:53 - move is but notice that just as locked
14:55 - in for opponents it doesn't tell us what
14:57 - our move is and with the other players
14:59 - move is right so we need to do that as
15:00 - well okay so to do that let's start
15:05 - we're gonna make another font a font
15:08 - equals pie game dot font dot sys font
15:14 - Comic Sans size of this font
15:18 - let's make it 60 and then what we're
15:21 - going to do is I say text equals font
15:24 - dot render and we're gonna do your move
15:29 - so we're gonna start by just doing your
15:30 - move and like opponent move because
15:32 - those aren't gonna change they're gonna
15:33 - stay the same no matter what and for
15:35 - that we're gonna do one and the color I
15:36 - had there was like a nice cyan I think
15:38 - right so we'll do this feel free to
15:41 - change the color I know it probably
15:42 - doesn't look the best and let's just
15:44 - split this at a static position on the
15:45 - screen so we'll say text and let's go
15:49 - 8,200 okay alright next so actually
15:53 - still in this else statement we're gonna
15:55 - copy this I'm just sorry what am i doing
15:59 - just this text and this wind part and
16:02 - we're gonna put it down here and say
16:04 - your move we're gonna say a ponent move
16:08 - does that a you spell that let's change
16:11 - that to opponents and actually let's
16:12 - just get rid of moves me too big
16:14 - opponents and same color except we're
16:16 - just gonna change the x value so that we
16:18 - draw it at what you call it 380 like
16:21 - that okay so that's it for your movement
16:24 - opponents next what we need to do is bit
16:27 - more complicated because now we have to
16:29 - draw what the actual moves are
16:32 - [Music]