00:00 - hey guys and welcome back to a new
00:01 - tutorial series so I'm just filming a
00:03 - quick intro here to explain to you guys
00:05 - how this series is gonna work and what
00:07 - we're going to be doing so essentially
00:09 - this is online game development with
00:10 - Python which means we're gonna be using
00:12 - sockets and networking to connect what's
00:14 - known as a client and a server or
00:16 - multiple clients to a server where they
00:18 - can send and share information and
00:20 - therefore we can create an online game
00:22 - so we're gonna start off with just the
00:24 - absolute basics and just get shapes for
00:27 - example like if I move a shape on my
00:28 - computer it moves a shape on your
00:31 - computer like if you're the other client
00:32 - and then we'll start getting into some
00:34 - more advanced stuff where we create a
00:35 - legitimate game and start sending
00:37 - massive amounts of information to the
00:39 - server and back to the client and I'm
00:41 - expecting this series to be I want to
00:44 - say like 10 to 15 videos long I don't
00:46 - really have it completely planned out
00:48 - out of filming this intro but if there
00:50 - is any feedback that you guys have for
00:52 - me while we go through the same thing
00:53 - you want to see please make sure you let
00:55 - me know so essentially what we're gonna
00:56 - do today in this first video is I'm just
00:59 - gonna show you guys how we can create
01:01 - like a very basic client and then the
01:04 - next video will go to a server and then
01:06 - we'll connect those client as server
01:07 - together and then we'll start moving
01:08 - into more advanced things like how we
01:10 - can get the game running on multiple
01:12 - machines and all of that so we'll start
01:14 - really simply by just getting everything
01:16 - working on our local network and then
01:18 - once it's working on our local network
01:19 - we'll deploy that to an external server
01:21 - which will allow us to play from
01:23 - anywhere in the world not just against
01:25 - people on our local network so I'm just
01:27 - gonna quickly get into this video where
01:28 - I'm going to show you guys an example of
01:30 - what an online game looks like with
01:32 - Python it's something that I've
01:33 - personally created and then we'll get
01:35 - into writing a bit of code and in the
01:37 - next videos we'll do most of the serious
01:39 - coding okay so what I'm showing you
01:42 - right now is actually an online game
01:43 - that I created with Python Pi game and
01:46 - networking and this is similar to
01:48 - something we're gonna make obviously not
01:49 - as advanced but it works on the same
01:51 - principles so essentially I have what is
01:54 - known as two clients now if you don't
01:56 - know the way that any online game works
01:58 - is we have multiple clients connecting
02:01 - to one main location which is known as a
02:03 - server now right here on my screen we
02:06 - have two clients so this client on the
02:07 - Left that my mouse is kind of going over
02:09 - that has this
02:09 - red highlight like where the brook is or
02:12 - where I just I'm about to move this
02:13 - night is client 1 and then this black
02:15 - one over here so like you are block
02:17 - where I just moved this pawn is client 2
02:20 - now you can see in the background I have
02:22 - this command line thing going and it's
02:24 - sending and receiving information and
02:26 - this is essentially how a online game
02:29 - works and you might see whatever you
02:31 - guys playing online game it says waiting
02:32 - for server or connecting to server and
02:34 - that's because it's doing exactly that
02:36 - it's waiting to get a connection to the
02:37 - server and then grab information from
02:39 - that so that's the way that we're gonna
02:42 - be doing things is using a client and
02:44 - server now I'm not gonna be using any
02:45 - frameworks that are pre created like I
02:48 - know there's like twisted and some other
02:49 - frameworks for Python the only module
02:51 - we're gonna be using that's external is
02:53 - PI game and that's just to create some
02:55 - very basic graphics
02:56 - okay so let's close this I just want to
02:58 - give you as an example of what an online
02:59 - game looks like and you could see what I
03:01 - was moving something on one client it
03:02 - would move it on the other so let's
03:05 - close that up
03:06 - and let's actually get started with the
03:07 - tutorial it did not mean to open that so
03:10 - I'm gonna be working with PyCharm
03:13 - for this tutorial now if you don't know
03:15 - what PyCharm is it's an IDE to download
03:18 - it all you have to do is just go to the
03:19 - internet type pycharm and you can go
03:23 - here and click download whatever it
03:27 - loads up now if you guys don't want to
03:29 - use pycharm that's absolutely fine you
03:31 - can do everything using the standard
03:33 - editor like ideally you could use adam
03:34 - use whatever you want but if you want to
03:37 - follow exactly what the tutorial i'm
03:39 - gonna be using pycharm now the next
03:41 - thing we're gonna need other than I do I
03:44 - guess you don't need pycharm is we're
03:45 - gonna have to install Poggi
03:47 - now for ninety percent of you the way
03:49 - that you're gonna be able to install PI
03:50 - game you're just by going to command
03:52 - prompt loading it up like this and
03:54 - there's typing pip install PI game and
03:58 - then hitting Enter now if this doesn't
04:02 - work for you I'll put a card in the top
04:04 - right hand corner of the screen right
04:05 - now which tells you where you can go to
04:07 - install PI game and I have a video
04:09 - explaining you exactly how to do this
04:11 - and if this command doesn't work for you
04:12 - can follow that video and I'll explain
04:14 - to you how to do that so once we have PI
04:16 - game then we're ready to actually start
04:18 - writing a bit of code so while I launch
04:20 - up PI charm right here and create a new
04:22 - project
04:23 - let me just tell you about I don't know
04:25 - some of the things we'll be going
04:26 - through in this tutorial series so
04:28 - obviously we're gonna be working on
04:29 - coding both a client and a server and
04:31 - I'm gonna explain obviously exactly how
04:33 - those things work and how we can create
04:36 - them and then what we're gonna be doing
04:37 - is we're gonna be dealing with a bit of
04:39 - server like administration if you want
04:42 - to say that
04:42 - so actually deploying things to an
04:45 - external server does stalling impendent
04:48 - installing dependencies working with
04:50 - like a linux server to deploy our game
04:53 - to and that'll be at the end of the
04:54 - series that we do that right now we're
04:56 - just gonna be working with what's known
04:57 - as localhost which means that we're just
04:59 - gonna be doing it on our own network so
05:01 - right now the games that we create are
05:02 - only going to work on our would call it
05:05 - against people that are on our Wi-Fi or
05:07 - on the same network as us and then later
05:09 - it'll work against anyone in the world
05:11 - that has that client downloaded ok so
05:14 - let's just create a new project here my
05:16 - new project I'm just gonna say is
05:17 - tutorial oh it's a network tutorial
05:20 - Warners made and just as a what do you
05:26 - call it here just letting you guys know
05:28 - I did actually mess up my thumb a little
05:30 - bit it's kind of swollen so if my typing
05:32 - is not the best not is actually my
05:35 - excuse for that so now that I've got a
05:37 - new project open I'm just gonna create a
05:38 - new python file is just call this
05:39 - tutorial one actually let's call this
05:41 - client okay and just save that as ok cuz
05:45 - that's all we're gonna be coding in this
05:46 - video is just a very basic client okay
05:49 - so now we've got client so what I'm
05:51 - gonna start off by doing is creating a
05:53 - configuration for my client and keep in
05:54 - mind if you guys are using something
05:56 - else you don't have to worry about what
05:57 - I'm doing with this pycharm specifics
05:59 - this is just the way you have to set up
06:01 - a project in PI gem
06:02 - so I'm just gonna set a client I'm gonna
06:05 - go to script path now we're game client
06:08 - okay apply okay now quick sidenote
06:11 - all the code that I'm about to write is
06:13 - available on my website tech with Tim
06:14 - done net usually I have as well as that
06:17 - a text-based tutorial version I'm not
06:19 - sure if I'm gonna be able to write the
06:20 - text-based tutorial while this first
06:22 - tutorial is out but you will see it on
06:24 - there at some point import tutorial
06:26 - import plugin but yeah all the code will
06:29 - be available on there in case you guys
06:30 - missed something or something's not
06:31 - working so we're going to start by
06:32 - importing pygame and make sure that
06:34 - that's working once that's working we're
06:36 - going to create a window so
06:37 - to do that with the same when equals PI
06:39 - game doc just splay dot updates all
06:45 - right what am I saying PI game that's
06:46 - played doc set underscore cap set
06:49 - underscore mode Wow bit tired today guys
06:52 - and then in here which can type width
06:54 - and height and then we're going to
06:57 - create these variables so say width
06:59 - equals 500 height equals 500 okay so
07:04 - there we go with height win and now
07:07 - we're just gonna set up a few global
07:08 - variables we're gonna have to use after
07:09 - we care to caption so let's just say
07:11 - plug in but display dot set underscore
07:16 - caption and then here we'll just go to
07:18 - caption let's just say clients okay
07:22 - alright so now let's set up a global
07:25 - variable that we're gonna use and what
07:26 - we're gonna do for this global variable
07:27 - is it's gonna hold be current like
07:30 - clients we're gonna say like clients
07:32 - number and we'll just start by making
07:35 - that zero but we're gonna increment that
07:37 - based on like once we connect to the
07:39 - server which we'll do later okay so now
07:41 - that we've done that there's a few basic
07:43 - things this is we always do for like a
07:44 - PI game project or whatnot it's gonna
07:46 - define redraw window okay and in here
07:50 - all we're gonna do is just PI game dot
07:52 - display dot updates like that and we'll
07:56 - also fill the display before we do that
07:58 - oops didn't mean to do that with win dot
08:01 - fill and it will just pick a color in
08:04 - this case I want to do whites which is
08:05 - 255 255 255 okay now yeah I just
08:10 - realized this is actually gonna be a lot
08:12 - harder to type that I thought because my
08:13 - thumb so just excuse me guys if I'm
08:15 - making a few mistakes here okay so we
08:17 - got our redraw window now and what we
08:19 - can do next is we can code our main loop
08:23 - so I'm gonna say define main and then
08:26 - here I'm just gonna create a game loop
08:27 - and this is gonna run continuously while
08:29 - I program is going and it's just gonna
08:31 - be what's checking for collision
08:32 - checking for events can constantly
08:34 - asking the server for information and
08:36 - you guys will see how this works in
08:37 - later videos but more so we're gonna say
08:39 - run equals true and you here will say
08:41 - well run and it'll just set up some very
08:43 - basic things that we always do for PI
08:44 - games so for event in PI game dot event
08:49 - gets
08:51 - okay and then all we're gonna do say if
08:53 - event dot type equals equals pi game dot
08:57 - quit with all capitals then we'll simply
09:00 - do PI game dot quit like that don't get
09:04 - a semicolon I guess we can say run
09:05 - equals false as well okay for events
09:10 - that looks good and then what else we'll
09:12 - do in here is we'll just call that
09:13 - redraw window function so redraw window
09:16 - like that now what I'm thinking we
09:19 - should do next is probably set up a
09:21 - class for our character okay now our
09:23 - character is going to be just the only
09:25 - object we're working with right now and
09:27 - it's just going to represent like a
09:28 - rectangle that moves like left out up
09:30 - right around our screen and I guess
09:32 - we'll do that all in this video moving
09:34 - that character around and that will
09:35 - connect it to the server the next one so
09:38 - let's create a class and we'll do that
09:40 - up here and we'll say class player like
09:42 - that okay
09:43 - so we'll give it an it function if you
09:45 - guys don't know much of an
09:46 - object-oriented program and programming
09:48 - and you want to learn I do have a
09:49 - tutorial series on my channel that I
09:51 - would recommend you go through if you
09:52 - don't understand a lot of the stuff that
09:53 - I'm doing right now okay
09:55 - so X Y width Heights will be what we get
09:58 - in here and this is just gonna represent
10:00 - actually let's give it a color as well
10:01 - because that'll be good to have X Y
10:04 - width height color and yeah this will
10:06 - just represent kind of our player and
10:08 - what variables they're gonna have so
10:11 - we'll pass these values in when we
10:12 - create an eclair so self dot y equals y
10:15 - this is very straightforward self dealt
10:17 - with equals width and self taught height
10:20 - equals height and finally self that
10:23 - color equals color so these are just our
10:26 - initialization here this is what we're
10:28 - gonna use when we're drawing the
10:29 - character when we're checking for a
10:30 - collision or stuff like that and what
10:33 - I'm also gonna do to save us a bit of
10:34 - time in the future I'm gonna say self
10:35 - dot rect equals and then in here let's
10:38 - do this okay so X Y width height like
10:43 - that okay and this will just make it a
10:45 - bit faster when we're trying to draw our
10:46 - character so the next thing we're gonna
10:49 - need is to find draw now in the draw
10:51 - method here we're gonna take a window
10:53 - so we'll call that wind and all we're
10:55 - gonna do is just draw a rectangle that
10:58 - represents our character onto the screen
11:00 - and it obviously be the appropriate
11:02 - they're so to do that all we have to do
11:04 - is just say win dot oh no we don't do
11:08 - that we have to do PI game dot draw dot
11:12 - rect standing for rectangle we have to
11:14 - first give the window so we'll give when
11:15 - we need the color so we'll do self dot
11:17 - color and then we need a rect which will
11:19 - be self dog wrecked okay and that's
11:21 - actually all we need to do to draw the
11:23 - rectangle to the screen now we need one
11:26 - more method we're gonna use in this can
11:27 - be club move and move actually I believe
11:31 - yeah we don't need to do anything else
11:33 - in there right now as they are answer so
11:36 - for move what this is gonna do is it's
11:38 - essentially just gonna check what do you
11:41 - call it if they press like left key
11:43 - right key what not how can we move them
11:44 - around the screen so the way that we can
11:46 - do this really basically essentially is
11:48 - just goodbye game dot what do you call
11:52 - it duckies dog get underscore rest I
11:56 - believe that's it it might be key mmm
11:59 - might be keys we'll see let's see if
12:00 - which one works so this is essentially
12:02 - gonna give us a list of all of the keys
12:04 - actually a dictionary of all the keys
12:06 - and essentially each key is gonna have a
12:09 - value of either 0 or 1 now if one is
12:12 - true that means we're currently pressing
12:14 - the key if 0 is there that it means
12:16 - we're not pressing the key so the way
12:18 - that this is useful as opposed to doing
12:20 - what we could sometimes do which is just
12:21 - check for events in here is if you're
12:24 - pressing more than one key at once it'll
12:25 - allow you to move like diagonally or
12:27 - whatnot okay so what we can do in here
12:29 - now is we can just check if certain keys
12:31 - are pressed and then change the x and y
12:33 - values accordingly so we'll say if what
12:36 - do you call it oh I guess we should
12:37 - probably put this in a variable list
12:38 - just like keys equals PI game dot maybe
12:41 - I feel like it's key
12:42 - we're gonna go Kieffer right now
12:43 - probably I'm not key don't get under
12:44 - script well so say if keys and then PI
12:47 - game dot K underscore left standing for
12:50 - our left arrow key and that's all we
12:52 - need to do for that one and then we'll
12:53 - say if keys and then PI game dot K
12:59 - underscore a sure this be all capitals I
13:02 - think it should be
13:03 - I can't underscore right and then the
13:06 - next one if keys PI game dot K
13:12 - underscore up and then our last one
13:15 - obviously is
13:16 - and then we'll change our values
13:18 - accordingly inside of these if
13:19 - statements so pygame dot k underscore it
13:22 - down okay
13:24 - so left right up down so if we press the
13:26 - left arrow key obviously what we have to
13:28 - do is subtract from our x value so to do
13:30 - that we'll just say sup that x minus
13:31 - equals self dot val now val is something
13:35 - we need to define so let's that do that
13:37 - up here self dot Val equals and let's do
13:39 - a value of like three for right now okay
13:42 - so if we're going right we need to add
13:44 - to our X so we'll do this very similar
13:46 - so self dot X plus plus equals self dot
13:51 - Val okay if I could type that correctly
13:54 - and then to go up we're gonna subtract
13:56 - from our Y value so self dot Y minus
13:59 - equals self thought well and to go down
14:02 - with your self dot y plus equals self
14:04 - though now and that's the way the
14:06 - coordinate system works in pygame our
14:07 - coordinates actually at the top left
14:09 - hand of our player where our screen so
14:11 - if we want to go down we have to add to
14:13 - it and then left and right is the same
14:14 - in terms of subtracting and adding okay
14:17 - so that should successfully move our
14:18 - player we could add like a jump and
14:20 - stuff in here as another time but for
14:22 - right now that's all we need I'm trying
14:24 - to think of anything else that we could
14:25 - do right now we should probably create a
14:28 - player object and draw that to the
14:29 - screen just to make sure everything's
14:30 - working so to do that let's create a
14:32 - player should we do it up here let's do
14:35 - it right above our main loop here okay
14:37 - so we're gonna say brush it we'll do it
14:40 - inside the main loop this'll work better
14:41 - we'll say peace and for player just a
14:45 - post player and then we'll give it some
14:46 - values need XY with high colors so for X
14:49 - Y we'll just start them out like 5050
14:51 - and then for our width let's just do a
14:54 - hundred by hundred so he's nice and big
14:55 - and we can see them and then we'll do a
14:57 - color of green so that would be red
15:00 - green blue like that so 255 for green
15:04 - and then what we're gonna do do actually
15:07 - is we're gonna type in here insert in
15:11 - redraw window we're just gonna pass P to
15:13 - our redraw window so that we can draw
15:16 - him and before we do that what call P
15:18 - dot move and what this will do is move
15:20 - our character based on what keys were
15:22 - pressing so an inside redraw window
15:24 - let's add a player
15:27 - what'd he call it argument attribute
15:30 - whatever you want to call that
15:31 - sorry parameter that's the correct name
15:34 - and then we'll just say player dot draw
15:35 - like that and we'll pass win in here
15:38 - which probably should be passed in here
15:41 - as well because we do use wind quite a
15:43 - bit so let's do P let's do win and then
15:46 - P okay so let's run this now and see if
15:51 - I made any mistakes I likely did process
15:55 - finished oh we not never calling the
15:57 - main function so let's call this main
15:58 - function from down here so we're
16:00 - actually executing that code that we
16:01 - wrote and there we go so now we have a
16:04 - little green square and you can see hmm
16:07 - interesting
16:08 - it's not working for me to move this
16:09 - around so let's check this one more time
16:13 - pede move what is move doing get pressed
16:16 - let's just add I want to add something
16:18 - here and make sure this is working so
16:20 - let's we're gonna say clock equals PI
16:22 - game dot time dot clock okay and then in
16:28 - here which gonna do clock dot tick and
16:32 - we'll do 60 FPS I just want to see if
16:34 - this is working if not I dunno how to
16:35 - fix this okay so we're not able to
16:38 - actually move this oh I know why so very
16:42 - interesting
16:42 - we are not updating this rect but we are
16:45 - updating what do you call it like up
16:47 - down left right so at the bottom here
16:49 - all we're gonna do is just redefine our
16:51 - erect by doing self dot X self dot y
16:56 - self thought width and self dot height
16:59 - now I'll really quickly explain why this
17:01 - error was happening essentially we're
17:02 - defining rect up here based on the input
17:05 - parameters when we're creating our
17:06 - player so that means we're always just
17:08 - constantly drawing our rectangle in the
17:10 - same position because we're never
17:12 - updating this rect variable we're only
17:14 - updating like X Y width height right so
17:16 - we just have to redefine our X variable
17:18 - every single time that we're moving
17:19 - which is fun and we can do that so now
17:21 - let's see and we can move our green
17:24 - square around the screen I actually
17:25 - quite like the speed this movement so
17:27 - yeah so essentially in the next video
17:29 - what we're gonna be doing is I'm
17:30 - wrapping it up here is we'll add a
17:33 - little bit more to this client and then
17:35 - we'll start working with sockets so we
17:37 - can connect this up to a server and
17:39 - we'll start talking about all the net
17:40 - working aspect then so if you guys
17:43 - enjoyed the video and are you excited
17:44 - for the next one please make sure you
17:45 - leave a like and subscribe and I will
17:47 - see you again in the next video
17:48 - [Music]