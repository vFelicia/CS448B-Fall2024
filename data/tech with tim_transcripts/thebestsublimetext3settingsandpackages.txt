00:02 - [Music]
00:06 - hello everybody and welcome back so in
00:09 - this video what I'm gonna do is talk to
00:11 - you about my favorite sub line text
00:12 - packages in settings now these make a
00:15 - huge difference they make it much more
00:16 - productive and easier to work in sub
00:18 - line text and they also do keep the
00:20 - minimalistic feel and look of the editor
00:22 - so I've made sure that when I've
00:24 - installed these for myself that I
00:25 - haven't gotten rid of that and I haven't
00:26 - completely changed sub line and you
00:28 - notice here that my editor may look a
00:30 - little bit different than yours but it's
00:32 - nothing major and in fact the features
00:34 - are very subtle but they do make a big
00:35 - difference now the features I'm gonna
00:37 - show you how to add here our first
00:39 - sidebar enhancement so this is a big one
00:41 - by default sub line text does not
00:44 - actually let you have all of these
00:45 - options and move files around delete and
00:48 - rename them from the editor so that
00:50 - means you need to leave the editor and
00:51 - then come back with this you never have
00:53 - to leave the editor when you're actually
00:54 - dealing with the files now the next
00:56 - feature is the ability to actually run
00:58 - code right in the editor so to hit
01:00 - control B that's the shortcut you can
01:02 - change that if you want and actually see
01:04 - your code script and run it down here
01:06 - and then you can hit escape and you can
01:08 - get out of that window then we also have
01:10 - the look of the editors you can see this
01:11 - nice font in my opinion this is my
01:13 - favorite font that I've ever used in any
01:15 - code editor I'll show you how we can
01:17 - change the theme and setting so it looks
01:19 - like this and then finally there's a few
01:21 - other packages which we'll get to you
01:22 - one of them is this github package and
01:24 - you can see that in the top left hand
01:25 - corner of my screen it showing a little
01:27 - green icon here and if you hover over it
01:29 - tells us the status of this are related
01:31 - to the github repository so let's go
01:33 - ahead and get started and I'll show you
01:34 - how we can add all of these features so
01:36 - the first thing I'm going to show you is
01:38 - how to change the theme and color of the
01:40 - editor so to do that we're gonna go to
01:42 - preferences and then from here we can
01:44 - select color scheme or theme so color
01:47 - scheme will actually allow us to pick
01:49 - between a few different color presets
01:50 - here we can see the one that I'm using
01:52 - is Minh okay or something like that but
01:54 - you can click on 16 and you can change
01:56 - it to that or you can go ahead and
01:58 - change it to whatever else you want so
02:00 - I'll leave mine on that but that's how
02:01 - you change the color theme now what we
02:04 - can also do is change the theme now the
02:05 - theme doesn't change very much but
02:07 - you'll notice that if I go to adaptive
02:09 - that actually makes the entire thing
02:10 - dark which some of you may prefer but if
02:13 - I'm gonna go back to what I was using
02:14 - before which was this default now in
02:17 - terms of font if you want to modify the
02:19 - size of the font this is fairly easy to
02:22 - do you need to hold ctrl on your
02:24 - keyboard and then from there you can use
02:26 - the mouse wheel to scroll in or scroll
02:28 - out and zoom in and zoom out or you can
02:30 - use the plus or minus keys on your
02:32 - keyboard the next thing I'm going to
02:34 - show you how to do is actually build
02:35 - your code and execute it from the sub
02:37 - line text window so being able to do
02:39 - something like this now notice I have a
02:41 - while loop here and I've actually added
02:43 - a custom key extension or key bind here
02:46 - that allows me to break out of this so
02:48 - by default one of the issues with
02:50 - running code in sub line is that you
02:52 - actually can't stop manually executing
02:54 - the code you could hit escape to exit
02:56 - out of this window but it doesn't stop
02:58 - executing the Python process in this
03:00 - case because I'm using Python so we need
03:02 - a way to actually stop the build so we
03:04 - have to add in that key bind which we'll
03:06 - show you how to do in just a second so
03:07 - the first thing I'm gonna want to do to
03:09 - run your code is see if you can already
03:10 - do this so try hitting control B and if
03:13 - you hit controlled B on your keyboard
03:14 - and it brings up a window like this then
03:16 - you know that you're good to go and you
03:18 - can actually run your code all you have
03:19 - to do is add the extension now for some
03:21 - reason that's not working what you can
03:23 - do is go to tools build system and you
03:25 - can select either automatic or the
03:27 - specific language that you actually want
03:29 - to build with so in this case I've
03:31 - selected Python but I was leaving it on
03:33 - automatic and because this is a dot p
03:35 - extension it will actually run my
03:37 - default Python interpreter for me now
03:39 - the only issue with this is this is
03:41 - gonna use your default build system for
03:43 - any interpreter any compiler whatever
03:45 - the default one would be on your system
03:47 - that's what's up line text will run so
03:49 - in my case I have many Python
03:51 - interpreters and I want to run a
03:52 - specific one so to do that I won't show
03:55 - you precisely but you have to do
03:56 - something with a new build system so if
03:58 - you have a specific compiler interpreter
04:01 - you want to run click on new build
04:02 - system and from here there's some
04:04 - specific syntax you can put in here to
04:06 - dictate where you actually want to look
04:08 - for the compiler or the interpreter now
04:11 - I'm not gonna be showing you how to do
04:12 - this here just because this is a very
04:14 - specific based on what language you're
04:16 - using what compiler would interpreter
04:18 - and all about and where that is but
04:20 - there is a way by clicking on new build
04:22 - system that you can select exactly which
04:24 - interpreter can pie
04:25 - you want to run and I'll leave it to you
04:27 - guys to look that up I just figured I'd
04:28 - mention that okay so now that we have
04:30 - the build system up and working what we
04:32 - need to do is actually add that keyboard
04:34 - shortcut to stop running the code so to
04:36 - do that we're gonna go to preferences
04:39 - keybindings and then we simply need to
04:41 - add the code that I have on the
04:42 - right-hand side of my screen to what
04:44 - yours will likely be an empty list so
04:47 - this is actually where you can define
04:48 - your own key bindings and you can change
04:50 - any of the key bindings from the default
04:52 - bindings so in this case you can see
04:55 - these are all of the defaults and any
04:56 - key bind that you add here will override
04:59 - any default key binds so you want to
05:01 - make sure that the key binds you're
05:02 - adding here is does not already exist
05:04 - unless you don't care about overriding
05:07 - that an example for me was I originally
05:09 - made this ctrl C to cancel the build and
05:12 - when I did that my copy command stopped
05:14 - working in sublime text so what you
05:16 - really want to do is add something like
05:18 - ctrl alt C and that will be the command
05:20 - that we use to exit the build so I'll
05:22 - leave this in the description for you to
05:24 - copy in feel free to change the key bind
05:26 - to what you'd like but notice if we go
05:27 - keys we put a list of the keys that we
05:30 - need to press for the shortcut what the
05:32 - command is which in this case is cancel
05:34 - build so you can add your own and again
05:37 - yours will likely be an empty list just
05:38 - add this dictionary inside of here and
05:40 - we'll be good to go so now that we have
05:42 - that I can actually go ahead and hit
05:44 - save so ctrl s and then quit we may need
05:46 - to restart sublime text but then we'll
05:49 - be able to use that shortcut to cancel a
05:50 - build which in my case was control all
05:52 - to see what I'm going to show you now is
05:54 - how we can actually install some add-ins
05:56 - slash packages to sublime text now
05:59 - that's what it's going to allow us to do
06:00 - these sidebar enhancements to get this
06:02 - github kind of stuff going on and I'm
06:04 - going to show you the exact packages
06:06 - that I use and you can pick which ones
06:07 - you want to install so the first thing
06:09 - we need to do when we're going to be
06:10 - dealing with packages is we actually
06:12 - need to install something called package
06:14 - control now package control is just our
06:16 - way and sub-line text of dealing with
06:18 - packages and managing them now
06:20 - fortunately this is really easy to
06:21 - install we don't actually have to leave
06:23 - sub-line text to do this what we have to
06:25 - do is go to tools and there actually
06:28 - might be a tool inside of tools here for
06:30 - you that says install package control if
06:32 - you see that hit it but if for some
06:34 - reason you're not seeing that go-to
06:36 - command palette start typing in
06:38 - all packaged and you should see a tool
06:41 - that says install package control now
06:43 - this is gonna look different on my
06:44 - screen than yours because I already have
06:46 - this installed but it should pop up here
06:49 - so if you start typing install package
06:51 - you should see something that says
06:52 - install package control select that and
06:54 - then hit enter now if that doesn't work
06:56 - for you I've actually had this link up
06:59 - on the right hand side of my screen and
07:00 - this shows you how to do the manual
07:02 - installation of package control so I'll
07:04 - put that link in the description and you
07:05 - guys can follow along with that if for
07:07 - some reason you couldn't install it with
07:08 - this kind of shortcut way so once we
07:11 - have that and we have package control
07:13 - installed we can start using it now you
07:15 - might need to reboot your sub your sub
07:17 - line for this to work so just restart
07:18 - the window but once you've done that
07:20 - there's two ways that you can access
07:22 - package control the first way is by
07:24 - going to tools command palette and then
07:27 - starting to type package control like
07:29 - that and you'll see that a bunch of
07:31 - different options pop up the other way
07:34 - is to go to preferences and then hit
07:36 - package control which is kind of a
07:37 - default tool here now you notice all
07:39 - that does for you is just boot up a
07:41 - command palette with package control
07:43 - already typed in but here you'll be able
07:45 - to see a bunch of the different options
07:47 - for packages so I actually clicked on I
07:49 - think browse packages or search packages
07:52 - and you can see there's a whole
07:53 - different list of packages that you can
07:55 - use now I personally don't really use
07:57 - any of these I'll show you the ones that
07:59 - I'm using but just note that you can go
08:00 - to package control dot IO and you can
08:02 - look at the top packages and very easily
08:04 - install them with the method I'm about
08:06 - to show you so go to preferences go back
08:09 - to package control and then all we're
08:11 - gonna do is at least for me I'm gonna go
08:12 - to list packages and I'll show you the
08:14 - ones that I have so here you can see I
08:16 - only have a few I haven't gone crazy as
08:18 - I mentioned I've get get Gutter kite
08:21 - subline package control which you'll
08:23 - have sidebar enhancements and then
08:25 - unicode character highlighter and
08:26 - unicode character insert now I don't
08:28 - remember actually installing these two
08:31 - unicode ones so I feel like they might
08:32 - come by default but I know that a
08:34 - hundred percent I understood sidebar
08:36 - enhancements and all of these other
08:37 - plugins so kites up line get Gutter and
08:39 - get now get what this allows you to do
08:42 - is it just adds some features to do with
08:44 - github so in this case it shows us these
08:46 - icons here it'll tell us if something is
08:49 - staged if it's been committed if there's
08:51 - a new like pull request or something
08:52 - that
08:52 - can do and I believe it gives us some
08:54 - options in this sidebar here so open git
08:57 - repository and some settings like that
09:00 - now what get Gutter does will actually
09:02 - show you any commits and history in the
09:04 - gutter of this thing so if you look at
09:06 - where the line numbers are the thing to
09:08 - the left is called the gutter and you'll
09:10 - actually see some like little logos
09:12 - icons and stuff here now unfortunately
09:14 - since this isn't like a proper git
09:16 - repository I can't show you but it will
09:19 - you will notice this if you have a git
09:20 - repository it will show you some
09:22 - meaningful things in the gutter here
09:23 - kite subline you can't actually install
09:26 - kite directly from the package control I
09:29 - believe but what this is is a kind of
09:31 - enhanced autocomplete for Python if you
09:33 - want to check them out it's called kite
09:34 - comm you install it from their website
09:36 - and will automatically add it to sublime
09:38 - text and then finally there's sidebar
09:40 - enhancements so those are the ones that
09:42 - I use to install them is really easy
09:44 - you've probably already figured it out
09:45 - you go to package control you click on
09:47 - install package it will bring up this
09:49 - big list of packages just state to start
09:52 - typing the ones that you want and then
09:54 - you can pick that one so in this case
09:56 - since I already have these plugins
09:58 - installed you won't I won't be able to
09:59 - see them here but if you start typing
10:01 - sidebar enhancements that will pop up
10:03 - you can install that and I promise you
10:05 - you won't regret installing that package
10:07 - now the other ones that I had were to do
10:09 - with github there's a bunch of different
10:10 - github plugins you can try so get tools
10:12 - get ignore get moji and there's you know
10:15 - I think thousands of plugins for subline
10:17 - text so hopefully this kind of opens up
10:20 - the possibilities for you and now you
10:21 - know how to customize your sub line text
10:23 - editor so with that being said that's
10:26 - pretty much all the settings and
10:27 - features I wanted to show you I know
10:29 - this was an extremely detailed video and
10:31 - I didn't show you a ton of things but
10:32 - hopefully at least I introduced you to
10:34 - some new concepts and sub line text and
10:36 - now you know how to customize your
10:37 - editor and make it your own and the last
10:39 - trick I'll leave you off with is to go
10:41 - into full-screen mode like I'm in right
10:43 - now you press the f11 key that's if
10:45 - you're on Windows if I believe on if
10:47 - you're a Mac you'll have to hit function
10:48 - f 11 or something like that but that's
10:50 - useful I use that all the time and with
10:52 - that being said I hope you guys enjoyed
10:53 - if you did make sure you leave a like
10:55 - subscribe to the channel and I will see
10:56 - you in another YouTube video