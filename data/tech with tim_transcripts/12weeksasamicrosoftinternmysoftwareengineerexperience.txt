00:00 - hello everybody and welcome back to the
00:02 - youtube video
00:03 - so today actually marks the official end
00:05 - of my internship working at microsoft
00:07 - i figured it would be a great idea to
00:09 - make a video kind of talk about my
00:10 - experience
00:11 - everything that i've worked on i'm going
00:13 - to demo some of the projects i'm going
00:15 - to talk about kind of a day in my life
00:16 - and then finally share some key
00:18 - takeaways
00:18 - and then kind of some tips and advice
00:20 - for anyone looking to get into software
00:21 - engineering
00:22 - and just some things that i've learned
00:24 - that i think i can share with you guys
00:25 - so before i get into all of that let me
00:27 - just give you some quick context
00:29 - i was actually offered a position in
00:31 - redmond washington so for anyone that
00:33 - doesn't know i currently live in kind of
00:34 - the toronto area which is in canada
00:36 - which means the us obviously is
00:38 - cross-borders and due to coven 19 i was
00:40 - unable to go to redmond washington which
00:42 - is microsoft's home base
00:44 - so the internship was turned into remote
00:46 - and that means i actually worked here
00:48 - from toronto
00:49 - uh with a us team that was mostly
00:51 - located in seattle area which is right
00:53 - beside redmond washington
00:54 - i was actually working on the python
00:56 - extension for visual studio code
00:58 - so we had a team probably about 30
01:00 - people that are responsible for the
01:02 - python extension
01:03 - within that team those kind of three sub
01:04 - teams i was on the data science team so
01:07 - working specifically on data science
01:08 - related features
01:10 - mostly related to kind of jupiter
01:11 - notebooks and stuff like that but
01:13 - anyways that is enough context for this
01:15 - last thing i will say is that all of
01:17 - this stuff is open source
01:18 - i'll actually link the github repository
01:20 - down below if you care to kind of see
01:22 - exactly what i worked on in terms of the
01:24 - code
01:24 - uh and yeah with that let's go ahead and
01:26 - get started and talk about my 12 weeks
01:28 - at
01:28 - microsoft
01:32 - [Music]
01:37 - so as i mentioned i was working
01:39 - primarily on data science related
01:40 - features within the python extension
01:42 - that meant i had to learn about data
01:44 - science myself and i actually got to sit
01:46 - in on interviews
01:47 - with real data scientists that were
01:48 - showing us their workflow and kind of
01:50 - what features they liked in vs code
01:52 - now speaking of data science if you want
01:54 - to get started with that you should
01:55 - check out the sponsor of today's video
01:57 - i need to thank simplylearn for
01:58 - sponsoring this video and giving you all
02:00 - a discount on their data scientist
02:02 - master program that was co-developed
02:03 - with ibm
02:04 - this program is comprised of six unique
02:06 - courses that implement
02:08 - a unique blended learning experience in
02:10 - a high engagement
02:11 - online classroom environment during this
02:13 - program you will master 30 plus in
02:15 - demand skills and work with tools and
02:16 - languages like r
02:18 - sas python tableau hadoop and spark
02:21 - you'll master these skills through 15
02:23 - real life projects and one
02:24 - capstone project during this 12 month
02:27 - comprehensive course
02:28 - you'll also be given 1200 usd worth of
02:31 - ibm cloud credits
02:32 - to use during your 24 7 access to the
02:34 - ibm watson platform
02:36 - after completion of this course you'll
02:38 - be given certificates from ibm and
02:39 - simply learn to testify to your skills
02:41 - as an expert in data science
02:43 - use the code yt10 at the link in the
02:45 - description so now i'll get into kind of
02:47 - the demo part of the video and talk
02:48 - about what i actually worked on at
02:50 - microsoft
02:51 - so the first thing i worked on was
02:52 - resizing a variable explorer pane
02:55 - so within jupyter notebooks you can
02:57 - click on this little thing it looks like
02:58 - a little grid
02:59 - essentially that is a variable explorer
03:01 - what it does is it allows you to view
03:02 - the values of your
03:04 - current active variables within the
03:05 - notebook so previously before i worked
03:08 - there this was just a static pane so it
03:09 - just took up like 300 pixels on the
03:11 - screen
03:12 - that was the height you could either
03:13 - toggle it on or off you could not resize
03:16 - it
03:16 - so obviously it was really annoying and
03:18 - within vs code you can resize like
03:20 - literally everything
03:21 - so why can't you resize that so that was
03:23 - my first thing
03:24 - working on that that took me probably
03:26 - about three or four days to kind of get
03:27 - fully functioning
03:29 - and that was really just to get me
03:30 - comfortable with the code base
03:31 - understanding the processes the workflow
03:34 - how github operates kind of all of that
03:35 - stuff
03:36 - and then after i did that they asked for
03:38 - some other enhancements related to the
03:39 - variable explorer
03:40 - so for example hey can we get some
03:42 - telemetry like you know
03:43 - let us know if someone toggles the
03:45 - variable explorer or if they resize it
03:47 - let's store that information so that we
03:49 - know that oh and another great feature
03:51 - let's make it so that when they resize
03:53 - it when they reopen that notebook
03:54 - another time or they re-toggle that
03:56 - variable explorer
03:57 - it goes back to the same size that they
03:58 - had it at before so essentially just
04:00 - keeping track of what they resized it to
04:02 - and then when they open that again
04:04 - i will be at that same size and that's
04:06 - going to be specific to notebooks so if
04:07 - you have you know untitled notebook 1 or
04:09 - like
04:10 - test notebook 2 and you resize their
04:12 - explorers to different heights
04:14 - then they will both remember that so if
04:15 - you open one of those specific notebooks
04:18 - it will go to that notebook's
04:19 - preferred height so that was what i
04:21 - worked on that took me about two and a
04:22 - half weeks to do all of that stuff
04:24 - some other small cosmetic changes to the
04:26 - variable explorer and that was really
04:28 - kind of my introduction getting started
04:30 - you know let's get some success
04:31 - under your belt and then you can work on
04:33 - some more difficult things
04:34 - so the next feature i worked on was
04:36 - exporting notebooks um
04:37 - to uh different formats so jupyter
04:40 - notebooks
04:41 - dot ipimb files we want to be able to
04:43 - export those to python scripts
04:45 - uh html documents and pdf documents so
04:48 - this involved writing
04:49 - new code completely from scratch i was
04:52 - probably you know a few thousand lines
04:53 - of code
04:54 - but i had to be really careful when i
04:55 - was writing this because i needed to
04:57 - make sure
04:57 - that we could support other formats in
04:59 - the future so this writing this whole
05:01 - feature took me about eight weeks
05:03 - and it was really heavily focused on
05:05 - kind of the design of what i was doing
05:06 - okay how are all these classes
05:08 - interacting
05:09 - how can i make sure this is super
05:11 - flexible and that we can change stuff
05:12 - really easily
05:13 - okay how can i test this feature to make
05:15 - sure that if someone makes a new pull
05:16 - request
05:17 - they're not going to break my own
05:18 - feature so that's what i worked on for
05:20 - about eight weeks is doing that
05:21 - export you guys would be seeing that on
05:23 - the screen so you can get a better idea
05:24 - of what i'm talking about
05:26 - so after i finished the expo related
05:27 - features i had about two weeks left my
05:29 - internship
05:30 - so not enough time to do anything crazy
05:32 - so i started researching and looking at
05:34 - how we could actually improve the data
05:36 - viewing experience
05:37 - within the python extension so currently
05:39 - within the variable explorer
05:41 - if you have a data frame there you can
05:43 - actually view it in our data frame
05:44 - viewer
05:45 - it's fine but it's nothing crazy it's
05:47 - not like the best data frame viewer out
05:49 - there and it's kind of slow when you
05:50 - have like millions of
05:52 - rows in there so they asked me pretty
05:53 - much hey tim you know can you do some
05:55 - research related to this
05:56 - and see if there's any frameworks we
05:58 - could use or just better approaches to
05:59 - doing this than our current data viewer
06:02 - unfortunately after looking around there
06:04 - wasn't anything that was going to be
06:05 - easy to integrate that was actually
06:07 - better than what we currently had
06:08 - so i kind of scrapped the idea of you
06:10 - know making the current data frame
06:12 - better and said
06:13 - hey you know our viewer is okay for now
06:15 - obviously it could use
06:16 - improvements but we'd have to rewrite
06:17 - the whole thing i don't have enough time
06:19 - to do that
06:20 - so let me see what else i could work on
06:22 - so it turns out there's this 3d data
06:24 - visualization tool
06:25 - called sand dance it's like a
06:27 - state-of-the-art visualization tool
06:29 - made by another microsoft team so i
06:31 - reached out to that team
06:32 - and said hey you know i'd love to
06:34 - integrate this with the python extension
06:36 - maybe we can view our data frames in
06:38 - sand dance
06:39 - you guys already have an extension for
06:40 - vs code this should be super simple
06:42 - we'll just have to set a few things up
06:43 - so that's what i worked on during the
06:45 - last week so unfortunately i didn't have
06:47 - enough time to actually finish this
06:49 - feature completely
06:50 - but i wrote some prototype code that was
06:52 - kind of a proof of concept that showed
06:54 - our team that hey
06:55 - yes we can do this and this is kind of
06:57 - like a basic working implementation of
06:59 - it
06:59 - so essentially when you have a data
07:01 - frame rather than just being able to
07:02 - view it in kind of the 2d
07:04 - grid system we had uh now based on the
07:07 - code that i wrote you can view it in
07:08 - sandant which is this 3d
07:10 - visualization tool with all these graphs
07:12 - and charts and stuff and that was kind
07:13 - of my last week was just working on that
07:15 - prototype code and trying to kind of
07:16 - have a proof of concept
07:18 - and leave my team with something that
07:19 - they could implement once i was gone
07:21 - so that's kind of all i worked on during
07:23 - the summer it might not seem like a lot
07:25 - but there was a lot of code and there
07:26 - was also a lot of stuff
07:27 - i did that wasn't just coding for
07:29 - example like finding bugs you know team
07:31 - meetings
07:32 - um stand-ups whatever i got a ton of
07:34 - other stuff that takes up a lot of time
07:35 - in the day
07:36 - so i want to give you a quick run
07:37 - through of a day in my life when i was
07:39 - actually working at microsoft
07:41 - now unlike many other people that make
07:43 - these kind of videos or you know that
07:44 - day in the life of a software engineer
07:46 - i don't have those cinematic clips of me
07:48 - going to the cafeteria
07:49 - or me getting in my fancy car or going
07:51 - down the water slide or wearing my you
07:53 - know free t-shirt whatever it may be
07:55 - that they're showing you
07:56 - i'm going to talk to you about what my
07:57 - actual work day looked like and what i
07:58 - was actually doing when i was
08:00 - working not just filming myself working
08:02 - which is
08:03 - what some of these videos were doing
08:04 - which was funny to me when i watched
08:05 - some of them
08:06 - regardless my day usually started around
08:09 - 11
08:09 - a.m so microsoft is super flexible with
08:12 - schedule and time
08:13 - my manager pretty much told me hey you
08:14 - can work whenever you want just kind of
08:16 - be online for most of the meetings and
08:18 - the core
08:19 - hours of the day and if i need to get
08:21 - like in touch with you just
08:22 - answer me like that was literally all i
08:24 - was kind of given there was no one
08:25 - really looking over my shoulder like
08:27 - what are you doing today like what's
08:28 - going on like what are you working on
08:30 - like there was a lot of trust and i
08:32 - really appreciated that for sure
08:33 - because i don't like to be micromanaged
08:35 - i like to kind of manage my own time
08:37 - and they definitely gave me full kind of
08:38 - autonomy to do what i wanted just
08:40 - trusted i was going to get my work done
08:42 - so the reason i started working at 11 am
08:44 - was because my team is located in
08:46 - seattle that's pacific standard time i'm
08:48 - in eastern
08:49 - standard time so doing the conversion
08:51 - they're about three hours behind me
08:53 - so there my 11 am was there 8 am so i'd
08:56 - usually go from around 11 a.m
08:58 - to 6 or 7 p.m at night my time uh and
09:01 - then after that i would sign off and you
09:02 - know do whatever else but this actually
09:04 - worked out really well for me because
09:05 - this meant i had about three hours in
09:06 - the morning between the time i got
09:08 - up which around 8 am and when i started
09:10 - working to kind of film youtube videos
09:11 - and work on my own stuff because
09:13 - as many of you know i'm pretty busy i
09:14 - have a lot of other things that i'd be
09:16 - doing
09:17 - during the day now during the core of my
09:19 - day
09:20 - it really differed depending on what i
09:22 - had that day some days i had six hours
09:24 - of meetings just like back to back to
09:26 - back
09:26 - other days i had you know one hour of
09:28 - meetings or a 20-minute meeting in the
09:30 - middle of the day
09:31 - but i'd say on average i probably had
09:32 - about two hours of meetings every day
09:35 - and that was just between you know other
09:37 - engineers or that might have been a
09:38 - stand-up where we're kind of summarizing
09:40 - what we've done over the past few days
09:42 - and just relaying everything with the
09:43 - team
09:44 - uh there might have been a demo meeting
09:45 - i might have been sitting in on
09:47 - like an ama or something or whatever is
09:49 - going on but i just had probably about
09:51 - two hours of meetings every single day
09:53 - and even when i didn't have formal
09:54 - meetings scheduled i was always you know
09:56 - calling other engineers or screen
09:58 - sharing with someone or we were going
09:59 - through a problem and solving it
10:01 - together
10:01 - a ton of communication and i would say
10:03 - about 50 of my time at microsoft was
10:06 - spent communicating with other people
10:08 - whether that be in a team's channel or
10:10 - over email or over an actual phone call
10:12 - or in a meeting environment
10:13 - so just something to keep in mind that
10:15 - communication is super
10:17 - important and i would not have been able
10:19 - to get through this experience if i
10:20 - wasn't good at communicating and able to
10:22 - explain
10:23 - you know all the problems i was having
10:24 - all the stuff that i was doing the
10:26 - solutions i was going to do
10:27 - and not to mention before i actually was
10:29 - able to even write any code
10:31 - i always had to do a ton of research and
10:33 - look into you know is this solution that
10:35 - i'm going for it makes sense is this the
10:37 - best way to do it is this going to be
10:38 - fast enough
10:39 - is there a better alternative so there
10:41 - was a lot of stuff that wasn't
10:42 - actually coding now of course you guys
10:45 - are here for the coding aspect
10:46 - once all of that stuff was done then i
10:48 - actually had time to code
10:50 - and that was when i'm kind of sitting
10:51 - alone you know listening to my music and
10:52 - just
10:53 - dialed in and just programming writing
10:55 - code and there's not really much more to
10:57 - describe with that it was just me you
10:58 - know
10:59 - interacting with github so i'll look at
11:01 - you know my pull requests say oh okay
11:02 - they want a revision there i need to
11:04 - change that
11:05 - so the basic workflow for anyone that
11:07 - doesn't know kind of how open source
11:08 - development works is
11:10 - i would you know write code on my own
11:12 - local machine test it
11:13 - write automated tests for it then push
11:15 - it up to github where other members of
11:17 - my team would review my code
11:19 - they'd review the code they'd look
11:21 - through the pull request is what it's
11:22 - called
11:23 - and then they give comments on it so
11:25 - they'd say hey you know i think this is
11:26 - okay but maybe you can try doing that
11:28 - method or they'd ask a question like i
11:29 - don't quite understand what you did here
11:30 - could you explain that or like why did
11:32 - you decide to use this pattern rather
11:34 - than that pattern
11:35 - so it was really um you know every piece
11:37 - of code i was putting up
11:38 - other people were looking at and that
11:39 - was going to be checked into the master
11:41 - branch
11:42 - of the code base which hundreds of
11:43 - different people are working on right so
11:45 - you need to make sure that that code is
11:46 - clean
11:47 - that it passes all the tasks that
11:48 - nothing breaks and there's a ton of
11:50 - processes that happen
11:52 - automatically like ci which i think is
11:54 - continuous integration so all the
11:55 - testing
11:56 - will run against your code when you
11:58 - submit it to make sure you don't break
11:59 - anything when you push that code up
12:01 - but that was kind of what a day in my
12:03 - life looked like i mean i had a few
12:04 - presentations that i did just demoing
12:06 - kind of stuff that i had worked on
12:08 - and that was really about it i mean it's
12:11 - hard to kind of walk you through a real
12:12 - day in the life when i'm just explaining
12:14 - to you what i did
12:15 - but a lot of meetings a lot of
12:16 - communication and i just really want to
12:18 - emphasize that because i think a lot of
12:20 - people assume you're going to be coding
12:21 - most of the time
12:22 - at least in my experience that
12:24 - definitely wasn't true but teamwork was
12:26 - just
12:26 - so important and critical um with
12:28 - everything we were doing
12:29 - and it really made me you know want to
12:31 - even talk about it in this video that
12:33 - my team really wasn't just you know 10
12:35 - individual programmers or five
12:37 - individual programmers or whatever it
12:38 - was
12:38 - it was a team of programmers you know
12:41 - each individual person had their role
12:43 - and worked on their stuff
12:44 - but there wasn't one person who only did
12:46 - that or only did this there wasn't you
12:48 - know these separate things that each
12:49 - person did
12:50 - everyone was working on the same thing
12:52 - together and that's why teamwork was so
12:55 - important because
12:55 - you know the other guy on the team needs
12:57 - to know how to be able to read the code
12:58 - that i just wrote
13:00 - everyone needs to know what major
13:01 - changes are happening who's dealing with
13:03 - what area of the code base
13:05 - and everyone's expected to kind of be
13:07 - familiar with any area so if anything
13:09 - breaks or someone leaves or you know
13:10 - someone's sick for a week
13:12 - someone else can jump into what they
13:13 - were working on and immediately start
13:15 - working on it
13:16 - and that kind of leads me into like code
13:18 - quality and code health that was a big
13:20 - takeaway for me as well
13:21 - writing high quality code was was
13:23 - essential as i mentioned
13:25 - it had to be something that you know i
13:27 - was submitting it to my other engineers
13:29 - they were reading over it
13:30 - they had to approve of that before it
13:33 - could get checked into the code base
13:34 - it wasn't just my code it was all of our
13:37 - code they would give
13:38 - recommendations on things to change
13:40 - maybe i'd modify something they had
13:42 - before
13:42 - and it really just was kind of a cool
13:44 - experience to see how software
13:46 - development was actually done
13:48 - kind of in the real world with a group
13:50 - of people because if you've never worked
13:51 - in a job like that
13:52 - you've only ever really programmed by
13:53 - yourself or with a few other people not
13:55 - in a huge
13:56 - team or with code that is even like
13:58 - legacy code that's been around for four
13:59 - or five years that maybe needs to be
14:01 - rewritten
14:02 - so those were kind of my two key
14:03 - takeaways from this experience and
14:06 - i just want to share those with you
14:07 - because i think before having this
14:09 - experience that wasn't something that i
14:11 - really had a good perspective on
14:12 - was how people work together as a team
14:14 - in software development
14:16 - and how important it was that you were
14:18 - really thinking of the other person when
14:19 - you were writing your code you're almost
14:21 - writing it
14:21 - because you want them to be able to jump
14:23 - in there and just understand everything
14:24 - that's gone on
14:26 - so there's not really much more for me
14:27 - to talk about here that's kind of been a
14:29 - summary of my intern experience here at
14:31 - microsoft
14:32 - so if you guys have any questions please
14:33 - do leave them down below i'm thinking
14:35 - about doing kind of like a q a related
14:37 - to my internship experience so
14:39 - leave some down below let me know what
14:40 - you thought of this video if you've been
14:42 - an intern please kind of give me a
14:43 - little story
14:44 - or something i love to read through
14:45 - those and with that being said i guess i
14:47 - will see you guys in another youtube
14:49 - [Music]
14:56 - video
14:58 - you