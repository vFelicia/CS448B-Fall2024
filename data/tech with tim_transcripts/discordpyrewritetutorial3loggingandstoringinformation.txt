00:00 - hey guys and welcome back to another
00:02 - discord rewrite tutorial so in today's
00:04 - video I'm actually gonna be talking
00:06 - about kind of logging things so if
00:08 - you're a server administrator or what do
00:11 - you call it the owner on discord server
00:12 - you're probably interested in logging
00:13 - some kind of information so you have
00:15 - moderators um you want to log like if
00:17 - they're deleting messages or anything
00:20 - like that
00:20 - maybe you just care about like server
00:22 - health so you want to see how many
00:23 - messages are sent how many people join a
00:25 - day not something I'm interested in so
00:28 - what I'm actually gonna be doing in this
00:29 - video is just logging every minutes how
00:32 - many messages are sent and how many
00:33 - people join the server obviously this is
00:36 - a bit extreme I probably don't need to
00:37 - be updating a log every minute
00:39 - considering the size of my disk word
00:41 - servers like 150 people so I'm not gonna
00:44 - have crazy amounts of messages and
00:46 - amount of people joining but I figured
00:47 - I'd just show you how to do this and
00:49 - then you can kind of play around with
00:50 - the timing and it'll give you a sense of
00:52 - what exactly to do now all for my actual
00:55 - discord bot I have it so it logs to a
00:58 - database and the database is like in the
01:00 - cloud right I use MongoDB to do that if
01:03 - you guys want to learn how to do this
01:04 - with a database let me know and I'd be
01:06 - happy to do a MongoDB tutorial it's
01:09 - pretty easy I don't think I would need
01:10 - to show you how to implement it with
01:11 - discord because if I just show you how
01:14 - to use MongoDB like it's one of the
01:15 - easiest ones it's easier than what he
01:17 - called my SQL like all that stuff so let
01:20 - me know and I'm happy to do that but I
01:22 - need some kind of feedback otherwise I'm
01:24 - not just going to create that tutorial
01:25 - so anyways let's get started so I
01:28 - already imported time and async io
01:30 - essentially what I'm gonna do is I'm
01:32 - gonna create a background task that's
01:33 - gonna run every 60 seconds now that
01:36 - background task is gonna be I'm actually
01:38 - gonna create the function for it now so
01:40 - essentially async and then we're just
01:43 - gonna define and let's just say update
01:45 - underscore stats
01:47 - okay what this is gonna do is it's just
01:49 - gonna rewrite something into a text file
01:51 - for me so I have a text file stats here
01:53 - you can see I was already messing with
01:54 - it I didn't get it quite working yet but
01:56 - I figured I just do in the tutorial and
01:59 - it's just gonna write like how many
02:00 - messages are sent every so many seconds
02:02 - so I want to do this per minute when I
02:04 - if I actually use it but that's kind of
02:06 - a long time to wait to see here so I'll
02:08 - probably just do it every like five
02:09 - seconds for the purposes of example but
02:11 - essentially what I'm gonna do in here is
02:13 - I'm just gonna type a few things we'll
02:14 - talk what they do after so I'm gonna
02:16 - wait a client dot wait until ready and
02:20 - so she's gonna wait until we actually
02:22 - end up calling this function before it
02:24 - runs because these async functions they
02:25 - kind of work a bit differently than
02:26 - regular functions anything I'm also
02:28 - gonna global two things I haven't yet
02:30 - created and it's gonna be messages and
02:34 - what he call its use joined let's call
02:37 - it joined okay so that means what I'm
02:39 - gonna do is I'm gonna go up here and I'm
02:40 - gonna say messages joined will replace
02:43 - this comma with an equal sign and we'll
02:45 - just say equals zero and we'll just
02:46 - declare that was up here to start now
02:49 - what I'm gonna do in here on member join
02:51 - is I'm gonna add one to joint so every
02:53 - time that someone joins we'll just add
02:55 - one to that so that's easy enough
02:58 - well they join plus equals one because
02:59 - obviously this represents when someone
03:01 - new joins and for messages well you can
03:03 - probably assume what we're gonna do here
03:04 - we will just add one to messages and
03:07 - we're just making a global write so that
03:09 - we can actually change this variable we
03:10 - don't get any issues okay so that's
03:12 - actually only need to mess with for
03:14 - these other functions and this won't
03:15 - take us too long so for update stats
03:17 - just ever created the stats file if you
03:19 - guys don't know how to do that right
03:20 - click on your folder click new file name
03:23 - it stats txt or whatever you want to
03:25 - name it essentially and just make sure
03:27 - it's in the same directory as you are
03:29 - file when I say directory I just mean
03:30 - folder so whatever this is if you open
03:32 - up like your Explorer and you go I don't
03:35 - know let's go to discord right just make
03:38 - sure that it is in you can see both
03:40 - files okay just in case anybody's
03:42 - confused by that
03:43 - it's because otherwise it's not gonna
03:45 - work if you don't know how to properly
03:46 - like path to it okay okay so now what
03:49 - we're gonna do is I'm just gonna say wow
03:52 - client dot closed okay and we'll do that
03:58 - is closed but I think we have to do it
04:00 - not while not client dot is closed so
04:03 - essentially means while the bot is
04:04 - running we're gonna continue to do
04:06 - what's in here so when I what I'm gonna
04:09 - do now is we're kind of going back and
04:11 - forth here but I'm gonna create a new
04:12 - task and this is the way that you have
04:15 - to do it whenever you want to if you
04:16 - want to run multiple background tasks
04:18 - you just repeat what I'm gonna do with
04:19 - like different functions and different
04:20 - creating tasks so to do this we're gonna
04:22 - do client dot loop dot
04:26 - we ate underscore task and then he were
04:28 - just gonna put our name which was what
04:29 - update stats like that so this is now
04:32 - gonna say well we want to run this
04:33 - function in the background so we're
04:36 - gonna create it as a new task and then
04:38 - inside this function since this is its
04:40 - async we're gonna define how long until
04:42 - we how long we want to wait until we
04:44 - rerun it okay so have well not client
04:47 - DUT is closed then what we're gonna do
04:49 - is we're going to try something and
04:51 - we're going to accept exception as e
04:56 - will print this exception to the screen
04:58 - and now what we're gonna do is we'll
05:01 - actually get to the code so essentially
05:02 - what I'm gonna do is I just want to
05:03 - update this stats dot txt file so to do
05:06 - this all I'm gonna do is I'm gonna say
05:08 - with open and we'll just say stats dot
05:14 - txt we're gonna open this in append mode
05:16 - so we're pending to the end of each time
05:17 - open it as the file name F and I'm gonna
05:20 - do those two F dot right and in here we
05:24 - can write what well we want right so in
05:26 - this case I'll do an F string again
05:28 - and I'm just gonna write the time the
05:30 - amount of messages and then the members
05:32 - that joined in that time so to do the
05:34 - time right I'll just do time and then
05:37 - I'm gonna do time dot time but I'm gonna
05:40 - round this to in integer okay just
05:43 - because I don't want to get those those
05:45 - decimal values that come with time if
05:47 - you know how this works
05:48 - and you'll see that when we print it out
05:49 - anyways so time we'll do messages and
05:53 - then here we'll just print messages and
05:56 - then same thing here we will do what was
05:59 - it joined do members joined like this
06:05 - and same thing and we'll just do joined
06:08 - now we just have to remember to add this
06:10 - backslash n here can you see this I
06:13 - didn't even have the backslash backslash
06:14 - and if you're impiety arm it should be
06:16 - highlighting orange but essentially this
06:18 - just means that um we're gonna like go
06:20 - to the next line after we write this
06:22 - because when you actually have text
06:25 - files you can't read them like you don't
06:27 - see the symbol but what it actually
06:28 - happens is it looks like this like hello
06:30 - slash and Tim slash and like it's just
06:33 - one line and the way that it prints it
06:35 - out to us as like humans is that you it
06:38 - wouldn't ever sees one of these
06:40 - it goes down one line so you just need
06:42 - to add these backslash ends into your
06:44 - text file so we're gonna do that at the
06:47 - end of this line so that we make sure we
06:48 - go to the next one so when we're writing
06:50 - the next line and then what we're gonna
06:51 - do is we're gonna reset our variables so
06:53 - we're the same messages equals zero and
06:56 - joint equals zero because we've already
06:58 - updated this for that for whatever this
07:01 - minute this time frame so now we need to
07:04 - set kind of that delay so to set the
07:07 - delay remember I imported async IO up
07:09 - here what I'm gonna do is I'm going to
07:11 - wait a sync dot IO dot sleep and in here
07:16 - I'll put the time I'm gonna do 5 seconds
07:18 - right now but I would recommend you do
07:20 - like a minute two minutes something like
07:21 - that we're gonna copy this and we'll do
07:23 - it here now essentially we get what
07:25 - we're doing right as we created this
07:26 - task that's we're not gonna run in a
07:28 - loop and it knows it's running in a loop
07:29 - because we did that we have the loop
07:32 - here this just gonna keep going until
07:34 - eventually I bought disconnects we're
07:36 - just gonna keep trying to open the stats
07:38 - file and then if we do when we update
07:41 - that file we're gonna do it every 5
07:43 - seconds so then we're gonna wait this
07:44 - async dot sleep for 5 seconds and we'll
07:48 - run this run through this wall up again
07:50 - and we'll just keep going keep going
07:51 - keep going until eventually our client
07:53 - is closed I think that should make sense
07:56 - you guys how that works so assuming I
07:58 - didn't make any mistakes let's run this
08:00 - let's go to discord let's just go I
08:03 - guess you can see I was trying to do
08:04 - stuff in here earlier will do hello hi
08:06 - bye I'll just keep typing a bunch of
08:10 - letters to see if we can get kind of
08:11 - some decent numbers in our file and see
08:15 - if is actually working so stats awesome
08:17 - so this is working great so we've see we
08:19 - had at this time and I know these times
08:21 - don't mean anything to you but you can
08:22 - kind of actually figure out what they
08:24 - are based on all these numbers we had
08:27 - zero messages that we had - then we had
08:28 - five if I go back now you can see that's
08:31 - updating again zero zero and it'll just
08:34 - continue doing this until eventually we
08:35 - stopped the bots so if I stop like this
08:38 - then obviously this should stop going
08:40 - and I guess wait one two three four five
08:44 - and you can see that we've stopped
08:46 - writing any messages now just to show
08:48 - you if I run the bot again and I go here
08:52 - and you type some more and we
08:54 - you put me type and we type then we come
08:56 - back here and you can see that now it's
08:57 - updated with one and if we go back again
08:59 - in whatever many seconds you see it's
09:02 - one again so that is essentially how
09:04 - this works and it'll log that for you
09:06 - and you can do this um like you could
09:08 - write another log so say you wanted to
09:10 - do it for like you wanted to keep track
09:11 - of every message for each user so I want
09:14 - to keep track of in my server how many
09:16 - people send or what person sends like
09:19 - the most amount of messages and like how
09:22 - many messages on average per day or
09:23 - whatnot then you could just add like
09:26 - days recorded in here like you could add
09:28 - a bunch of stuff but I'll give you a
09:29 - quick idea of how you could keep track
09:32 - of every user's messages what I would do
09:34 - if I were you is I would use pandas
09:36 - first of all as a data frame if you know
09:38 - how to use that but I'd create a
09:39 - dictionary for like temporary storage
09:41 - and I would do the user names like Tim
09:44 - hashtag nine to nine eight and I do
09:47 - Poland and then the amount of what he
09:50 - called messages they've sent so in this
09:51 - case one now what I would do sorry I
09:54 - miss explain this a bit better is I
09:56 - would check this dictionary every time a
09:59 - user sent a message and I would see if
10:01 - that message sought author right I think
10:03 - we did this at some point
10:04 - member dot mention yeah message dot
10:07 - author I would see if the message dot
10:08 - author if that's in the dictionary if
10:11 - that key exists now if it does exist
10:13 - I'd grab this key value and I just
10:15 - update this to be +1 so for example if
10:17 - time exists any sent a message I would
10:18 - make it to three keep going up right now
10:22 - if the key didn't exist I would add a
10:24 - new key into the dictionary with that
10:26 - username so let's say Bob hashtag one
10:30 - two three four sent a message but he
10:32 - didn't exist in here I would just add
10:34 - one and I'd add this into the dictionary
10:36 - and then every time I updated my like
10:38 - user file what I would do is I'd look
10:40 - through the user file so like say stats
10:41 - here that's getting along now I would
10:43 - look for the username if the username
10:46 - existed I would just update that line to
10:49 - be the new amount of messages like I'd
10:50 - add to the amount of messages if the
10:52 - user didn't exist already in the frame
10:54 - then I would just add it in with
10:56 - whatever the amount of messages were in
10:58 - this dictionary then I clear this
10:59 - dictionary and just continue going like
11:02 - we're kind of doing a similar here with
11:03 - messages
11:04 - and joined anyways this has been it for
11:07 - kind of logging I want figured I'd show
11:08 - you this just because it's pretty useful
11:09 - on how to do that in the next video I
11:11 - think I'm gonna go into some voice chat
11:13 - stuff because that's pretty interesting
11:14 - playing some music playing some sounds
11:15 - and then let me know what you guys want
11:17 - to see you won't see database stuff um
11:18 - just just let me know and I'm happy to
11:20 - do anything like that as always if you
11:22 - guys enjoyed the video please make sure
11:23 - you leave a like and subscribe to the
11:25 - channel and I will see you again in the
11:26 - next one
11:27 - [Music]