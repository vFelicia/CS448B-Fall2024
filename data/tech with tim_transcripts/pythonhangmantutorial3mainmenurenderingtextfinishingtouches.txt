00:02 - [Music]
00:06 - hello everybody and welcome back to part
00:09 - three of the hangman PI game tutorial
00:11 - series in this video we're gonna be
00:13 - finishing up this game so we're gonna be
00:15 - adding of course the text to the screen
00:17 - that shows what letters we've guessed so
00:19 - far how long the word is we need to
00:21 - display that we're gonna handle if the
00:23 - user as one or if they've lost and then
00:26 - we'll do a few small cosmetic changes
00:27 - just to make this look a little bit
00:29 - nicer so with that being said the first
00:31 - thing I want to do is I want to actually
00:33 - implement now some kind of word that
00:35 - we're gonna be guessing because
00:37 - obviously right now all we have is a
00:39 - bunch of letters you can see I've been
00:40 - pressing them here and that's all they
00:42 - do we we don't have any real idea of
00:45 - actually making a guess the hangman guy
00:46 - doesn't even add any limbs or anything
00:48 - like that so we need to do that so let's
00:50 - actually get started and with our first
00:52 - step I'm gonna go here to game variables
00:54 - and I'm gonna defined the word that I
00:56 - want to use for this game now I will
00:59 - show you guys later on how we can
01:01 - randomly generate some words or how we
01:03 - can pick from a random or pick a random
01:05 - word from a list of words but for now
01:07 - let's just go with one word this will be
01:09 - easier and next what I'm gonna do under
01:12 - here is I'm gonna say guest so I'm gonna
01:14 - put guests like that equals a blank list
01:18 - now this is gonna represent what letters
01:20 - we've guessed so far and the reason we
01:22 - want to do this is because we want to
01:24 - keep track of what letters we've already
01:26 - guessed so that we can accurately
01:28 - display this word the idea behind this
01:31 - is that given a word like this right we
01:33 - can't just print developer on the screen
01:36 - what we actually need to do is we need
01:38 - to print something that tells us how
01:40 - many letters are in this word and shows
01:42 - us the letters we've guessed so far so
01:45 - really like let's say we had the letter
01:46 - D inside of this list then what we would
01:49 - want to show is we want to show D and
01:51 - then a bunch of underscores and that
01:53 - many underscores would be the rest of
01:54 - the letters in developer so that's what
01:56 - we're gonna try to show on the screen
01:58 - we're gonna try to space this word out
02:00 - first of all so it's easier to see
02:02 - because if you just put a bunch of
02:03 - underscores combined you don't know how
02:05 - many letters that is obviously right and
02:07 - then from there the user will be able to
02:10 - see what the word is and how many
02:12 - letters they've guessed so far
02:13 - so hopefully that makes sense but
02:15 - regardless we have these two variables
02:16 - let's define them you can make this word
02:18 - whatever you want by the way it doesn't
02:19 - matter just make sure it's all capitals
02:21 - and we'll go down here into our draw
02:23 - loop and I'll make a comment I'm gonna
02:25 - say draw word and we're gonna set up a
02:29 - for loop and start drawing some words so
02:31 - the first thing I'm going to say is
02:32 - display underscore word equals a blank
02:35 - string we're gonna be building a string
02:38 - here so essentially this is what's going
02:39 - to store our translation of this word
02:41 - developer into what it should really be
02:44 - displayed on the screen
02:46 - alright so display word equals blank
02:48 - string we're gonna say for letter in
02:50 - word so we can actually loop through all
02:53 - of the letters in this word so every
02:55 - loop they'll be a different character
02:56 - that will be stored in letter and what
02:58 - we're gonna do is we're gonna check if
03:00 - that letter is inside of guest
03:02 - so essentially have we guessed this
03:04 - letter yet if we have let's display it
03:06 - otherwise let's not so if letter in and
03:11 - let's see if it gives me gas here so if
03:13 - letter in guest then what we'll do is
03:15 - we'll say display word plus equals and
03:18 - we'll put the letters will say letter
03:21 - plus and then a space the reason we're
03:25 - doing a space and let me bring this out
03:27 - here sorry is because the next letter
03:30 - that we draw we want it to be spaced out
03:33 - by one so we're just gonna attack on
03:34 - that space at the end so that when we
03:36 - build this string let's say that first
03:38 - one it was D then it would go D and it
03:40 - would be a space afterwards okay anyway
03:42 - so if that's not true so if the letter
03:44 - is not in guest if we haven't guessed it
03:46 - yet then we're not going to display it
03:47 - so what we're gonna say is display word
03:49 - plus equals and we're actually gonna do
03:52 - underscore space so here same thing
03:55 - again we tack on that space at the end
03:56 - but instead of actually putting a letter
03:58 - we'll just put an underscore as kind of
04:00 - a blank like we don't know what this is
04:01 - yet because we haven't guessed it and
04:03 - then finally all we need to do is
04:05 - actually render this word and display it
04:08 - on the screen so I actually want to see
04:10 - what font I'm using for this I think
04:12 - we're just gonna use letter font
04:14 - actually let me see here one second guys
04:17 - I'm actually gonna go ahead and make a
04:19 - new font story so let's go to font here
04:21 - and let's call this word underscore font
04:23 - and it's actually gonna be the exact
04:26 - same as this
04:27 - except it's just gonna have a different
04:28 - size so I'm gonna make this a bit bigger
04:30 - I'm gonna make that 60 just so it shows
04:32 - up a little bit more all right so now
04:34 - we're gonna go down here and we're gonna
04:35 - say text ya Texas fine equals word fonts
04:42 - dot render and then inside of here we're
04:44 - gonna render the display word
04:46 - anti-aliasing 1 and then what color do
04:49 - we want to render this with well this is
04:51 - gonna be black like that all right so
04:54 - now we have this rendered and now all we
04:56 - need to do is actually draw this text on
04:57 - the screen so we're gonna say wind up
04:59 - blitz we're gonna say text and we need
05:01 - to pick where this is gonna go now we're
05:03 - just gonna hard code this position
05:05 - because it's not super important that
05:07 - it's like perfectly Center in fact it
05:08 - won't be perfectly Center so I'm gonna
05:10 - put this out 400 200 now keep in mind
05:13 - that if you have a word that's really
05:14 - long you might need to shrink your font
05:16 - size a little bit so this is where we
05:18 - have to be careful this could
05:20 - technically go off the screen if our
05:22 - word was really long but for our word
05:24 - here it shouldn't be a problem
05:25 - so in fact with that if we finished that
05:28 - what I think we can do is refresh now
05:29 - and we should be able to see this
05:31 - actually popping up on the screen once
05:33 - this loads up and perfect you see that
05:36 - we can actually see this showing up
05:37 - right here so we have all the
05:39 - underscores there's a little space
05:40 - between them so we can actually
05:41 - differentiate how many characters are in
05:43 - this word and now what we need to do is
05:46 - make it so when we actually press one of
05:48 - these letters it gets added into the
05:50 - guest letter so that this updates in
05:52 - fact let me just show you before we even
05:54 - do that let's go to guest and let's put
05:56 - just the character D inside of there and
05:58 - let's rerun this and let's see what this
06:00 - looks like and there you go D is showing
06:03 - up and let's go ahead and add the
06:05 - character e into guest letters and keep
06:08 - in mind it doesn't actually have to be
06:09 - an order doesn't matter where they are
06:11 - so we can actually just add D like that
06:14 - let's see what this looks like now and
06:16 - perfect it's showing us all of the ease
06:18 - so we're confident this is working and
06:20 - now all we need to do is add those guest
06:23 - letters into this guest list so we're
06:26 - gonna go down here and I'm gonna go to
06:29 - where were we checking collision right
06:30 - down here so this is you know we
06:32 - collided if this if statement is true so
06:35 - inside of here now what I'm gonna do is
06:37 - simply append this letter into the guess
06:40 - letters so we're gonna say guests like
06:43 - that dot append and here we will simply
06:47 - put ltr' which will actually be the
06:49 - character the letter that we're looking
06:52 - at in this collision loop so hopefully
06:53 - you remember that from before so now
06:55 - let's actually run this and so I didn't
06:57 - mean to exit out of full screen and
06:59 - you'll see that when I press on these
07:00 - buttons it actually activates for the
07:02 - word and it works pretty nicely so let's
07:04 - let's look here all right so let's go
07:06 - deep and look D shows up when I actually
07:08 - press that let me try V boom shows up
07:11 - when I press that P shows up l that's oh
07:15 - that is in the word M that's not in the
07:16 - word so it doesn't show up so there we
07:18 - go that is the basics to actually
07:19 - getting this to show up so let's just
07:21 - see what happens now if I actually put
07:23 - all of the correct letters in here
07:25 - where's the R boom we can see the entire
07:27 - word so awesome so that's working now we
07:29 - need to check what happens when we
07:31 - actually have made the entire word and
07:33 - we also need to check if we click on a
07:36 - wrong letter we need to add 1 to this
07:37 - hangman guy right so he gets another lip
07:39 - so first of all let's go to where we
07:41 - have hangman status and let's change
07:44 - this back to 0 or 1 or actually let's
07:46 - see is 0 an option here I think it was
07:49 - let's just run this one more time and
07:51 - see what zero looks like awesome yeah so
07:52 - no limbs and now what we want to do is
07:54 - make it so that if we guess an incorrect
07:56 - letter we increase this so to do that
07:59 - we're gonna go down here and what
08:02 - guessed letter dot append that's totally
08:03 - fine we'll leave that here and we'll say
08:05 - if LTR in word that's as easy as it is
08:10 - or actually sorry if LTR not in word so
08:13 - essentially if we guess the letter that
08:15 - is not in the word it's pretty
08:16 - straightforward to read then all we'll
08:18 - do is we'll say hangman status plus
08:20 - equals 1 there we go
08:22 - and this should do the job so now it's
08:24 - how to run one more time and let's see
08:26 - what happens when we guess a letter that
08:28 - is not in the word all right so let me
08:30 - guess F and boom we can see that now the
08:32 - hangman guy has limbs added to him when
08:35 - we guess one that is not in the word but
08:37 - if we guess a valid letter it doesn't
08:38 - get at it and that is all that's
08:40 - necessary to actually now have this game
08:43 - pretty much be functioning I mean if you
08:44 - think of it now this game is actually
08:46 - fully functioning except for the fact
08:48 - that we need to handle it when we win
08:50 - and
08:50 - and we lose so to handle this is
08:52 - actually pretty straightforward what
08:54 - we're gonna do is inside of this while
08:56 - loop here so outside of this massive
08:57 - four loop which by the way we usually
08:59 - don't want to have this many levels of
09:01 - indentation but for our game it's pretty
09:03 - simple it's pretty small so I'm okay
09:05 - with doing that what we're gonna do
09:06 - outside of this for loop now is check if
09:08 - the user won so to check if the user one
09:11 - is actually pretty straightforward all
09:14 - we have to do is see if all of the
09:16 - letters in guest letters are in the ER
09:19 - sorry if all of the letters in our word
09:21 - are in the guest letters if that's true
09:23 - then we won the game so what we're gonna
09:25 - do is we're simply gonna go here we're
09:27 - gonna say four letter in word if letter
09:34 - not in word then what we're gonna do is
09:37 - I'm gonna set a variable up here that
09:39 - says 1 equals true and if the letters
09:43 - not in word then we're gonna say 1
09:45 - equals false and we're going to break
09:48 - now
09:49 - oops I did this wrong sorry letter not
09:51 - in guest not word and what this is
09:54 - saying essentially is that we have this
09:55 - boolean variable called one we're gonna
09:57 - loop through all of the letters in our
09:59 - word and we're gonna see if this letter
10:01 - is not in the guest letters if it's not
10:04 - in the guest letters we're gonna set one
10:06 - equal to false and we're gonna break out
10:08 - of this for loop so the break keyword
10:09 - simply says wherever we are in this loop
10:11 - just immediately exit so just go down to
10:14 - the end of the 4th that's what it says
10:16 - and that's as straightforward as it is
10:18 - right because what will happen here is
10:21 - that if this never happened so if we
10:22 - loop through every letter in our word
10:24 - and all of these letters are actually in
10:27 - guest then one will never be set to fall
10:29 - so it will stay true so then all we have
10:31 - to do here is say if one like that and
10:34 - then we can do whatever we want to do in
10:36 - this case I'm just gonna print one now
10:39 - won't change this so we do something
10:41 - else but this is as easy as it is to
10:43 - check if we actually want it's not the
10:45 - most efficient way to do this there is
10:47 - better code that we can write but for
10:49 - our purposes this is totally fine I'm
10:51 - not worried about making the most
10:52 - efficient program in the world
10:53 - we just want something that functions
10:55 - and this does the job so there we go
10:57 - alright so now that we have that the
11:00 - next thing I want to do is check if we
11:02 - lost so this is actually really easy
11:04 - all we have to do is simply say if
11:08 - hangman status equals equals and I
11:11 - believe the maximum status is 6 so when
11:14 - you have full limbs I think that yeah I
11:16 - think 6 is correct if you have full
11:18 - limbs and that means you lost that
11:20 - that's pretty much it if you get to the
11:22 - point where you have all your hangman
11:23 - limbs filled up then you lost so that's
11:26 - all we need to do an inside of here will
11:29 - actually display some stuff and we'll
11:30 - draw things on the screen but for now
11:32 - let's just see if this actually works
11:34 - and if we get those print statements
11:35 - triggering so let's run this here and
11:38 - let's see if we can win and if we can
11:41 - lose
11:41 - all right so de let's go for the win
11:44 - first so de VL o P and where are we
11:50 - looking is there E oh I just need the
11:52 - are awesome and boom it just prints one
11:54 - a bunch of times right and that's as
11:56 - easy as it is now of course when we win
11:58 - we don't want to just keep constantly
12:00 - printing that we want to reset the game
12:02 - or do something like that so I'm gonna
12:03 - start by just putting a break here and
12:05 - what this is gonna do is just jump us
12:07 - out of this while loop which essentially
12:08 - will just quit the game now of course
12:10 - that's not what we want right now but
12:12 - putting a break inside of here is a
12:14 - decent start and you'll see why in a
12:16 - second so now let's just make sure that
12:18 - the loss is working before we go too far
12:20 - and I do have that break statement so
12:21 - now it should only actually print out
12:23 - one time so let's move that and let's
12:26 - just click a bunch of letters here and
12:29 - see if we can lose and there we go boom
12:31 - we just lost right it just quit the
12:33 - screen and you can see it printed lost
12:35 - okay so now let's actually pop up some
12:38 - text on the screen and let the user know
12:40 - what happened rather than just
12:42 - immediately quitting the game so what
12:44 - we're gonna do is we are going to go in
12:47 - here and we are simply going to render
12:49 - some font in the middle of the screen
12:51 - that says hey you lost or hey you want
12:53 - or whatever it was so to do this I'm
12:56 - simply gonna say text equals and then
12:59 - well I guess we'll do word font which is
13:01 - one we've already defined it's out
13:03 - render and we'll say u1 exclamation
13:06 - point and then that's gonna be one we'll
13:09 - put that in the color black and all
13:11 - we'll do now is just draw this on the
13:12 - screen so we'll simply say win blitz
13:16 - texts then we're gonna put this right in
13:18 - the middle of the screen do we remember
13:19 - how to do that well the equation we've
13:21 - used is width minus text dot get
13:24 - underscore width over two so I believe
13:28 - this is actually with over two yeah so
13:33 - this should be with / - sorry - text get
13:35 - underscore width / - I think that's
13:37 - right if I'm not messing this up and
13:39 - then that's gonna be height over two -
13:41 - text dot gets underscore height over 2
13:46 - again could have made a mistake here and
13:49 - this should be sorry a comma not a
13:51 - period but that should display it on the
13:53 - screen and then all I'm gonna do is save
13:55 - my game dot display is not popping up
14:00 - okay by game dot display dot update so
14:02 - that updates the screen and actually
14:04 - before we do all of this the first thing
14:06 - I'm gonna do is I'm gonna say when dot
14:09 - fill and we're gonna fill this simply
14:11 - with the color white so we just override
14:13 - everything that was on the screen and
14:15 - then we draw this font on the screen and
14:17 - we update the display and finally what
14:19 - we do is we delay so we're gonna say
14:21 - pygame dot time dot delay I think this
14:25 - is how you do it
14:26 - yeah pygame got time delay we'll see if
14:29 - that's correct
14:30 - and I'm gonna delay for three seconds so
14:32 - what pygame time delay does is
14:34 - essentially tell us hey just don't do
14:36 - anything for three seconds which means
14:38 - we'll see this text on the screen for
14:40 - three seconds so let's see if this works
14:42 - I could have messed something up here
14:43 - with the syntax but let's give it a shot
14:46 - okay so let me go and it looks like I
14:49 - didn't mess anything up at least I think
14:50 - we'll see and let's see if we can win
14:53 - here so dvl Oh are we need like that and
14:59 - we need a P where is the P awesome and
15:01 - then it displays you one for three
15:03 - seconds and wait and then it quits the
15:05 - game so you one works fine so all we
15:07 - need to do is to pretty much copy this
15:08 - code for you lose right now what I'm
15:11 - actually gonna do is since this is gonna
15:13 - be pretty much the exact same for you
15:14 - lost I'm gonna put this into a function
15:17 - now I've been trying to avoid using too
15:19 - many functions just because this is a
15:20 - beginner series and I don't want to go
15:22 - too far into complicated things but I
15:24 - think this will be easy enough that we
15:26 - can pick it up and we have enough time
15:27 - to explain it so I'm going to say define
15:30 - Display underscore message so
15:33 - essentially let's show whatever message
15:35 - is the parameter message so I'm just
15:39 - gonna paste all this into this function
15:40 - and don't worry I'll explain what this
15:42 - is doing in a second but you should
15:44 - hopefully see right away why this is
15:46 - pretty valuable to do so what I'm gonna
15:48 - do is replace u1 here with message which
15:51 - I've put inside of this function as
15:53 - what's known as a parameter so let me do
15:55 - that first and let me explain what this
15:58 - does so this is a function and
16:00 - essentially what this means is we can
16:01 - reuse this multiple times so just like
16:04 - we've been calling draw a bunch of times
16:06 - from within our while loop because every
16:08 - time the while loop runs we call it draw
16:10 - we're gonna do the same thing with
16:11 - display message whenever we win or
16:13 - whenever we lose now message what I'm
16:16 - doing here is essentially saying that
16:17 - every time when I call this function I
16:20 - need to pass some value for message now
16:24 - in this case we're gonna pass a string
16:26 - and what I'm gonna do if I call display
16:28 - message is I'm going to do display
16:30 - message and I'm gonna actually put
16:31 - whatever I want to display so if I put
16:33 - u1 then what will happen if we put this
16:37 - in all capitals here is that message
16:39 - will be equal to u1 so when we come into
16:42 - this function and we render font we're
16:44 - gonna render the message which is you
16:47 - want and then let's say we call this
16:48 - another time and we change this text to
16:50 - say you've lost then in that instance it
16:52 - will render you lost and it will just do
16:54 - the same thing that's what I'm trying to
16:56 - get out here with that function so this
16:58 - is known as a parameter and we pass a
17:00 - value to the function that this
17:03 - parameter will hold and you can think of
17:04 - it as a variable like message will be
17:06 - equal to whatever we pass in okay so now
17:09 - that we understand that what I'm gonna
17:11 - do is go inside of if one here and
17:13 - simply type display message and then
17:16 - inside of here I'm just gonna put you
17:18 - one exclamation point now let's copy
17:21 - this and let's go down to you lost and
17:23 - let's just change the message to say you
17:25 - lost so now it will do the exact same
17:29 - thing in one and lost except we'll just
17:32 - display a different message so that
17:33 - immediately cleans all this code up so
17:36 - nicely it means that we can reuse this
17:38 - without having to keep copying and
17:39 - pasting all of this code all over the
17:41 - program and that's one of the reasons I
17:43 - made this draw
17:44 - function2 is just to keep everything
17:45 - kind of contained in where it's actually
17:49 - happening right because if we took all
17:50 - this code out of the function and we
17:53 - just put it inside of this main while
17:55 - loop you can see it's gonna start
17:56 - getting really messy really quickly and
17:58 - there's gonna be a lot of clutter just
17:59 - everywhere so let's run this and let's
18:02 - see if this is working all right
18:04 - so de let's actually try to lose here
18:08 - see if that works and you lost there we
18:12 - go now what we can do if we'd like as
18:14 - well is before we go ahead and start
18:16 - drawing over the entire screen maybe
18:19 - we'll delay for about one second so that
18:21 - the user can actually see what happened
18:23 - so let's do that let's go up into
18:26 - display message where if I can find this
18:29 - function let's take our PI game time
18:31 - delay let's delay for one second so if I
18:35 - didn't mention this this is milliseconds
18:36 - inside of here so if you put 1000 that's
18:39 - one second so that's the easiest way to
18:41 - determine if you wanted to do like a
18:42 - bunch of seconds or a few minutes just
18:44 - multiplied a thousand by however many I
18:46 - guess minutes or sorry seconds that you
18:49 - want to do this for so now we have a
18:51 - one-second delay which means we'll wait
18:53 - one second before we draw all of this
18:55 - stuff and that should be working fine
18:57 - now the next thing that I want to do is
18:59 - actually display a kind of title font at
19:01 - the top that says something and then
19:04 - we'll talk about actually randomly
19:06 - changing this word which is pretty easy
19:07 - to do so the first thing I'm gonna do is
19:09 - make a title font I'm gonna say title
19:11 - underscore font equals and we're gonna
19:14 - copy this and I'm just gonna make it ten
19:15 - bigger so I'm gonna make it 70 now
19:18 - inside of my draw
19:20 - we'll just always draw some kind of
19:21 - title that says something in my case I'm
19:23 - gonna draw a developer hangman but
19:25 - you're welcome to draw whatever you want
19:27 - so I'm gonna say draw title I'm gonna
19:30 - say text equals and in this case we're
19:33 - gonna say title font dot render I'm
19:35 - gonna say developer hangman we're gonna
19:39 - go one and we're gonna go with the color
19:41 - black like that and then to draw this
19:44 - we're gonna say win da bullet text and
19:48 - we need to put this in some location I
19:50 - want this to be centered so I'm gonna do
19:52 - the same thing with the X that I usually
19:53 - do so I'm going to say width over two
19:56 - minus
19:57 - texts get underscore width over two and
20:01 - then for the height I want it to be
20:03 - really close to the top of the screen so
20:04 - I'm just gonna make it at 20 pixels and
20:06 - we can modify this height if we find
20:08 - it's too lower it's too hot so that's
20:10 - all we need to do to draw the title so
20:12 - let's have a look at what the title
20:13 - looks like now and apologize if I'm
20:15 - going quickly but we have covered a lot
20:17 - of this stuff now so I think it's okay
20:18 - to kind of skip through it a little bit
20:20 - so let's look at this and now we see
20:22 - developer hangman immediately in my
20:23 - opinion this looks a lot nicer already
20:25 - we have our word and then you can go
20:28 - ahead and we can see that all this is
20:30 - functioning and let's see what happens
20:31 - if we lose and it says boom you lost
20:34 - there you go so that is the basics of
20:37 - this game now of course there's a few
20:38 - other things we can add what I will do
20:40 - now is show you how we can randomly
20:42 - select words this is actually really
20:44 - easy to do all we have to do is make a
20:46 - list called words and just put in
20:48 - whatever words you want in all capitals
20:50 - so I'm just gonna say hello I'm gonna
20:52 - say Python I'm gonna say hi game notice
20:58 - that I called it developer hangman so
21:00 - actually let's do hello world or
21:02 - something like that actually we haven't
21:04 - really implemented it so we can do words
21:06 - with spaces I don't know if we'll have
21:08 - enough time to do that so I'm just gonna
21:09 - ignore the spaces for now
21:11 - so rather than hello world of gold
21:13 - Python Pi game let's do IDE
21:17 - let's do rapid IT because that's the
21:20 - platform that we're working on so let's
21:22 - just go rep lit like that and I think
21:25 - that should be good for now so all we
21:27 - have to do actually if we want to
21:28 - randomly select one of the words from
21:30 - this word list every time we boot the
21:32 - program is go up to the top in our
21:35 - imports we're going to import a module
21:36 - called random and you're gonna see how
21:38 - really easy this is to actually do so we
21:40 - have the random module now let's go to
21:42 - where a word is defined so I believe
21:44 - that's right here and rather than having
21:45 - developer what I'll do is I'll say words
21:49 - are sorry random dot choice words and
21:53 - all this does is it randomly selects one
21:57 - of the words from the words list and
21:59 - just puts it into the word variable so
22:00 - that's what random dot choice does is it
22:02 - looks at a list and it just randomly
22:04 - selects one element from it so now let's
22:06 - run this and see what word we get once
22:09 - have a look
22:10 - and well it's only
22:11 - three words or three letters sorry so I
22:13 - believe that's probably gonna be IDE and
22:16 - there we go we won now I'm realizing
22:19 - that there's a small bug and that when
22:21 - we actually press the you one thing we
22:23 - don't get to see the last letter show up
22:25 - so what I'm gonna do is I'm actually
22:28 - gonna take this you won and you lost and
22:33 - I'm gonna put it this is actually a
22:35 - decent question here that what we should
22:37 - do hmm because I don't want to display
22:40 - the idea that I'm getting at sorry guys
22:43 - if I'm just mumbling here is that I want
22:45 - to actually see what happens before we
22:47 - just show you know you want are you lost
22:49 - cuz right now it just kind of skips
22:51 - actually showing that last letter and I
22:53 - would like to be able to see that so the
22:56 - way that we're gonna have to do that is
22:57 - to make sure that we actually redraw the
23:00 - screen again before we display this
23:03 - message so that we can actually see
23:05 - what's changed so what I'm gonna do is
23:07 - before I display the messages here I'm
23:10 - actually just gonna take this draw loop
23:11 - and I'm going to put it below this for
23:15 - loop so I mean I leave the for loop up
23:17 - here but right here I'm gonna put drop
23:19 - the reason for this is now when we click
23:22 - on something we will update the screen
23:24 - immediately and then we will do this so
23:27 - we will actually be able to see the
23:28 - change rather than drawing first and
23:31 - then waiting till the next loop to
23:33 - update so hopefully that makes sense but
23:35 - let's run it now and see if this looks
23:37 - much better all right so now we got a
23:40 - different word again random I don't know
23:42 - what this one is let's guess some
23:44 - letters II actually don't remember what
23:47 - I put for all of the words here let's go
23:49 - eh okay um let's go T no you so let's
23:54 - just try to lose here then and notice oh
23:56 - gee worked there okay let's go okay and
23:59 - then we see the last limb and then we
24:01 - lost so now this is working properly all
24:05 - right so the last thing to really
24:06 - discuss is how we can make it so that
24:09 - when we lose it doesn't just quit the
24:10 - game we can restart the game now
24:13 - unfortunately this is a little bit more
24:14 - difficult than I would like and it kind
24:17 - of requires you asking like do you want
24:19 - to play the game setting up a main menu
24:21 - so what I'm gonna do is kind of leave
24:22 - this as a challenge for you guys if you
24:24 - want to
24:25 - this out yourself but I will give you a
24:26 - kind of some hints the first thing
24:29 - you're gonna want to likely do is put
24:31 - this while loop here into its own
24:33 - function so you're gonna want to do this
24:36 - something like define main like that you
24:41 - know take all of this code put it into a
24:43 - function you're gonna take this PI game
24:45 - quit and leave it actually at the end of
24:48 - the program and right before this you're
24:49 - gonna call me so now if I actually do
24:52 - this
24:53 - everything should will work fine except
24:55 - some of these variables here that you
24:57 - see I will need to put inside of this
24:59 - loops and I like FPS clock we're gonna
25:01 - have to take those that we define there
25:03 - and define them inside of this function
25:06 - so again this is optional you guys don't
25:08 - have to do this we pretty much finished
25:09 - the game I just want to show you how we
25:11 - can go ahead and do this now again
25:13 - something like this this hangman status
25:15 - notice how I'm getting a red squiggly
25:17 - and is saying oh you don't have access
25:19 - to that now this isn't the best way to
25:20 - do this but for games it's fine we can
25:22 - use what's known as the global keyword
25:24 - this isn't best practice but it's
25:26 - totally fine for this game and we just
25:28 - write global hangman status and now what
25:31 - this allows us to do is treat this
25:33 - variable like a global variable and be
25:36 - able to access it from within this loop
25:38 - that's what that lets us do and you'll
25:41 - actually notice that now that I've put
25:43 - this inside of a function I add a global
25:46 - and I added my three variables in here I
25:48 - can press run and let's see what happens
25:51 - and everything works as it normally
25:55 - would work and there's nothing wrong so
25:57 - we successfully just translated this
25:59 - into a function now the reason I'm
26:01 - saying this is because what you can do
26:03 - is you can make a while loop outside of
26:05 - here and you can say well true run at
26:08 - this main loop now what this essentially
26:10 - will do is just keep running this while
26:13 - loop infinitely and the only way you'll
26:15 - be able to quit is actually if you
26:17 - completely quit the Python program so
26:19 - what I usually like to do is inside of
26:21 - this while loop I like to put something
26:23 - that says would you like to play and
26:25 - wait for them to press any button on
26:27 - their mouse and you we've seen how to do
26:28 - that you can do a four event loop in
26:30 - here so you as a four event in PI game
26:32 - event get just like we've done inside of
26:34 - here you can copy that into here you can
26:36 - see if they press anything on their
26:38 - mouse
26:38 - and then you can go ahead and actually
26:40 - run this main function which will start
26:42 - the game now after you run that main
26:44 - function though what you'll need to do
26:46 - is reset a few variables so you're gonna
26:48 - have to repack for example the hangman
26:50 - status you're gonna have to choose
26:52 - another word and you're gonna have to
26:53 - reset this guest variable list so this
26:56 - isn't the easiest thing in the world to
26:57 - do but it's definitely very doable and
26:59 - that's why I'm kind of leaving as a
27:00 - challenge because I don't want to go
27:01 - through doing all of it right now but
27:03 - hopefully that gives you enough of an
27:04 - idea to the point where if you want to
27:06 - do this you can so last thing I'm gonna
27:08 - do is just zoom all the way out here and
27:11 - show you guys kind of all this code or
27:14 - show you most of it just by slowly
27:16 - scrolling through so if you need to see
27:18 - anything again you can see all of it
27:19 - here but that has pretty much been at
27:21 - for this hangman Pi game tutorial series
27:23 - we've got a fully functioning hangman
27:25 - game I think it works pretty well you
27:28 - can customize that however you like you
27:29 - can make longer words bigger words you
27:31 - can change the color of the buttons and
27:32 - hopefully I've taught you guys enough
27:34 - about Pi game that you feel confident to
27:37 - go out and make your own little games so
27:39 - with that being said that has been the
27:41 - end of this series
27:42 - if you did enjoy please do make sure you
27:43 - leave a like subscribe to the channel
27:46 - and of course let me know what else you
27:47 - want to see in future videos in the
27:49 - comments down below