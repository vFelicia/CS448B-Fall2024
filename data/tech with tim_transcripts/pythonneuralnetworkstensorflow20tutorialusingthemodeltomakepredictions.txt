00:00 - [Music]
00:06 - hey guys and welcome back to the fourth
00:09 - video in the neural network tutorial
00:10 - series now in today's video what we're
00:12 - gonna be doing is just simply using our
00:14 - model to actually predict information on
00:16 - specific images and see how you actually
00:19 - use the model I find a lot of tutorials
00:21 - series don't show you how to actually
00:22 - practically use the model but what's the
00:25 - point of creating a model if you can't
00:26 - use it now quickly before I get too far
00:28 - into the video I would just like to show
00:29 - you guys something that I'm super
00:31 - excited to announce because I've been
00:32 - waiting for them to come for a long time
00:34 - and it is the official tech with Tim
00:36 - mugs so you guys can see them here I
00:38 - just wanted to quickly show them to you
00:40 - guys if you'd like to support the
00:41 - channel and get an awesome looking mug I
00:43 - actually really like them then you guys
00:45 - can purchase them just by I believe
00:46 - underneath the video it shows like the
00:47 - teespring link um but yeah they're
00:49 - awesome they look really good and the
00:51 - reason I've been holding out on showing
00:52 - them to you guys is cuz I wanted to wait
00:53 - till I received mine to make sure that
00:55 - it was up to quality and that it looked
00:57 - good enough to sell to you guys
00:59 - essentially so if you'd like to support
01:00 - the channel um you can get one of those
01:02 - if not that's fine but if you do decide
01:04 - to buy one please send me like a DM on
01:06 - Twitter Instagram or something and let
01:08 - me know so I can say thank you to you
01:09 - guys so anyways let's get into the video
01:12 - um so what I'm gonna do actually is I'm
01:16 - gonna we need to continually train the
01:18 - model every time we run the program
01:20 - which I know seems like a pain but
01:23 - unless we want to save the model which I
01:24 - guess I could actually show in this
01:26 - video later as well we just have to
01:28 - train it and then we can use it directly
01:29 - after so after we've you know tested
01:32 - this we don't need to do this evaluate
01:34 - anymore we are trained the model we can
01:36 - use it to use it
01:37 - we actually just need to use a method
01:39 - called predict but I'm gonna talk about
01:40 - kind of how this works because it is a
01:42 - little finicky
01:43 - we're not even just finicky but just not
01:45 - intuitive so essentially when you want
01:47 - to make a prediction using the model I'm
01:50 - gonna set up just a variable prediction
01:52 - here you simply use model dot predict
01:55 - and then you pass it a list now what you
01:59 - would think you would do is just pass it
02:01 - like the input right so in this case we
02:03 - just pass it some input that's in the
02:05 - form 28 28 and it would predict but
02:07 - that's not actually how it works and
02:10 - when you want to make a prediction what
02:11 - you need to do is put whatever your
02:13 - in put shape is inside of a list or
02:16 - actually well you can do it inside of
02:18 - the list but you can also do it inside
02:20 - an NP array as well like an umpire right
02:22 - and the reason you to do that is because
02:24 - what predict does is it gives you a
02:27 - group of predictions so it's expecting
02:29 - you to pass in a bunch of different
02:31 - things and it predicts all of them using
02:33 - the model so for example if I want to do
02:35 - the predictions on all of my test images
02:38 - to see what they are I can do prediction
02:40 - equals Moldavian jiz and if I print out
02:43 - like prediction you guys will see what
02:45 - this looks like so let's run this here
02:47 - and see what we get so obviously we have
02:51 - to train them all each time which is a
02:52 - little bit annoying but we can save it
02:55 - later on and obviously this one runs
02:56 - pretty quickly so it's not a huge deal
03:00 - alright so there we go so now you can
03:02 - see this is actually what our
03:03 - predictions look like now this is a
03:05 - really weird kind of like looking
03:07 - prediction thing we're getting a bunch
03:10 - of different lists now that's because
03:12 - right our output layer is ten neurons so
03:15 - we're actually getting an output of ten
03:17 - different values and these different
03:19 - values are representing how much the
03:21 - model thinks that each picture is a
03:23 - certain class right so you can see we're
03:26 - getting like 2.6 to the e to the
03:28 - negative 0-6 which means that obviously
03:30 - a very small number so it doesn't think
03:33 - whatsoever that it's that and then I'm
03:35 - trying to find if we can see ones that
03:37 - aren't like to the e
03:38 - huh but apparently it's we didn't really
03:40 - get lucky enough with it showing because
03:41 - they just cut some of them off here but
03:43 - if I print out let's say like prediction
03:46 - zero and I guess we're gonna have to run
03:48 - this again I probably should have
03:49 - thought of that then you guys will see
03:51 - exactly what the prediction list looks
03:53 - like and I'm gonna show you how we can
03:54 - actually interpret this to determine
03:56 - what class it is because this means
03:58 - nothing does we want to know is it a
03:59 - sandal is it a shoe is it a shirt like
04:01 - what is it right so there you go so this
04:03 - is what the list looks like so if we
04:05 - look through the list here we can see
04:06 - these are all the different
04:07 - probabilities that are our network is
04:10 - predicting so what we're actually gonna
04:12 - do essentially is we're gonna take
04:13 - whatever the highest number is there
04:15 - we're gonna say that is the predicted
04:18 - value so to do that what we do is we say
04:21 - NP dot Arg max okay and we just put it
04:25 - around this list
04:27 - now what this does is it just gets the
04:30 - largest value and finds like the index
04:33 - of that so in this case since we have
04:34 - ten neurons the first one is
04:36 - representing obviously t-shirt the last
04:38 - one is representing ankle boot it'll
04:40 - find whatever neuron is the largest
04:41 - value and give us the index of that
04:43 - neuron so if it's like the third neuron
04:45 - then it's gonna give us pull over right
04:47 - and and that's how that works so if we
04:50 - want to see the actual like name though
04:53 - rather than just the index then what we
04:55 - need to do is just take this value and
04:57 - pass it into class names so let's say
04:59 - class underscore names and then we'll
05:01 - index whatever the value is that this
05:03 - NPR max prediction zero gives us right
05:07 - so let's run this and see what we get
05:09 - now all right so there we go so we can
05:12 - see that now we're actually getting
05:13 - ankle boot as our prediction which makes
05:15 - a lot more sense for us right rather
05:17 - than just giving us like that prediction
05:19 - array or whatever it was okay so that's
05:21 - great but the thing is how do we how can
05:23 - we validate this actually working well
05:25 - what we need to do now or not what we
05:27 - need to do but what we should do now is
05:29 - show the input and then show what the
05:31 - predicted value is that way we as the
05:33 - humans which know obviously which is
05:35 - which can validate that so what I'm
05:37 - gonna do actually just set up a very
05:39 - basic for loop and what this for loop is
05:40 - gonna do is loop through a few different
05:42 - images in our test images and show them
05:45 - on the screen and then also show the
05:47 - prediction so show what they actually
05:49 - are and then show the prediction as well
05:51 - so to do this I'm just gonna say for I
05:53 - guess in this case I in range five and
05:58 - what we'll do is I'm gonna say PLT dot
06:01 - grid I'm just gonna set up a very basic
06:03 - like plot to show the image I'm gonna
06:05 - image show our test underscore images I
06:09 - right I'm gonna do this see map thing so
06:12 - I say see map equals in this case PLT
06:14 - dot see m dot binary which is just gonna
06:17 - give us like the grayscale and then I'm
06:20 - gonna say P ot dot X label which just
06:23 - means underneath and I'm gonna say is
06:24 - equal to actual and in this case I'm
06:28 - going to say plus and what do we want to
06:31 - do we need to get the actual label of
06:33 - our test image which would be in test
06:34 - underscore labels I and then what I'm
06:38 - gonna do is add a header and say this is
06:40 - what the
06:41 - model predicted so to do this I'm gonna
06:43 - say PLT dot I believe it's sorry not
06:46 - header it's about title and the title
06:48 - will simply be prediction plus in this
06:53 - case we're gonna say prediction and then
06:56 - I now the reason we can do this for
06:58 - sorry we're gonna have to literally copy
07:00 - this this whole argonauts thing and
07:03 - we'll put that here except instead of
07:06 - zero we're gonna put eye and just that
07:07 - way it will show all of the different
07:10 - images right so now what I'm going to do
07:12 - is for each loop here I'm gonna peel T
07:14 - dot show which means I'm gonna show
07:15 - those images so we can see exactly what
07:17 - they look like so quick recap in case I
07:20 - kind of skimmed over some stuff all
07:22 - we're doing is setting up a way to see
07:23 - the image as well as what it actually is
07:26 - versus what the model predicted so we as
07:28 - the humans can kind of validate this is
07:29 - actually working and we see okay this is
07:32 - what the image and the input is and this
07:33 - is what the output was from the model so
07:36 - let's run this and wait for it to train
07:40 - I'll fast forward through this and then
07:41 - we will show the images okay so quick
07:43 - fix here I just ran this and I got an
07:45 - error we need to do class names and then
07:47 - test labels I and that's obviously
07:50 - because the test labels are gonna have
07:51 - like the index of all of these so I
07:54 - can't just put like the number value
07:56 - have to put the class names so that we
07:58 - get the correct thing anyways I hope
07:59 - that makes sense to you guys let's run
08:01 - this now you can see that was the error
08:02 - I ran into again fast forward and then I
08:04 - would back alright so I am back now this
08:08 - is a little bit butchered and how I'm
08:10 - actually showing it but you can see that
08:11 - it's saying the prediction for this was
08:13 - the ankle boot and it actually is an
08:15 - ankle boot now if I close this it'll
08:17 - just show four more because that's the
08:19 - way I've set it up so now you can see
08:20 - that prediction pullover it actually was
08:22 - a pullover all right we see we get
08:25 - prediction trouser it actually was a
08:27 - trouser and prediction trouser actual
08:30 - trouser prediction shirt actual shirt
08:33 - and obviously if you want to see more
08:35 - you could keep looping through all of
08:37 - these and doing that now say you just
08:40 - want to predict on one image well what
08:41 - you could do for example is alright and
08:44 - this is kind of a weird way what I'm
08:45 - about to do but you'll see let's say we
08:47 - wanted to just predict like what the
08:49 - seventh image was well then what I would
08:51 - do is just say test images seven which
08:53 - is going to give us
08:54 - at 28 by 28 array and then I would just
08:57 - put it inside of a list so that that way
08:59 - it gets it's given the way that it's
09:02 - supposed to look but that also means
09:04 - that our prediction list right we're
09:06 - gonna get is equal to this it's gonna
09:08 - look like prediction and then it's gonna
09:10 - have this and then inside it's gonna
09:12 - have all those different values so it's
09:14 - gonna have like 0.001 0.9 but it's gonna
09:18 - be a list inside of a list so that's
09:19 - just something to keep in mind when
09:21 - you're working with these predictions
09:22 - because that is really the only way to
09:24 - do it and that this is exactly what
09:26 - tensorflow recommends on their website
09:28 - as well if you're just predicting for
09:29 - one item just put it inside of a list so
09:31 - that it's gonna work fine so anyways
09:33 - that has kind of been it on using the
09:35 - model to predict stuff in future videos
09:38 - we'll get into a little bit more
09:39 - advanced stuff this was a very easy
09:41 - classification problem just really meant
09:43 - to give you an introduction and
09:45 - personally I think if you've never
09:46 - worked with any machine learning stuff
09:48 - this is pretty cool that in a few
09:50 - minutes of just kind of writing a little
09:51 - bit of code whether you understand it or
09:53 - not you can create a simple model that
09:55 - can classify fashion items like a shirt
09:58 - and a t-shirt and I don't know that's
09:59 - pretty cool to me and in future videos
10:01 - obviously we're gonna be doing a lot
10:02 - cooler stuff it's gonna be a little bit
10:04 - more advanced but hopefully you guys can
10:05 - stick with it I'd love to know what you
10:07 - guys think of this series so far so
10:09 - please leave a comment down below it
10:11 - helps me to kind of tweak my lessons and
10:13 - all that as we go forward if you guys
10:14 - enjoyed the video please leave a like
10:15 - and subscribe and I will see you again
10:18 - [Music]