00:00 - hello everybody and welcome back from
00:01 - this video what we're gonna be doing is
00:03 - talking about JavaScript arrays now
00:05 - arrays are one of the most used what we
00:07 - call data types or data structures
00:09 - within JavaScript and any other language
00:11 - so they're extremely important that you
00:12 - understand how they work
00:14 - so I'm just gonna start and explain what
00:16 - is an array well essentially an array is
00:18 - an ordered collection of elements so
00:21 - what that means is previously when we
00:22 - created a variable so let's say we had
00:24 - like bar Tim equals 5
00:26 - well this variable Tim stored simply one
00:29 - element now what we're gonna be doing is
00:31 - having a variable storing multiple
00:34 - elements and I'm gonna discuss how we
00:35 - can access those different elements add
00:37 - elements remove elements and do all
00:39 - kinds of things like that now the way
00:41 - that we create an array there's actually
00:43 - two ways in JavaScript but we're gonna
00:45 - stick with this way is simply just by
00:47 - putting square brackets like this so
00:49 - when you have a variable you name it
00:51 - something you put your equal sign and
00:52 - then you put square brackets and this
00:53 - denotes I have created an array
00:55 - currently our array has a size of 0 as
00:58 - there's nothing in it but then what we
01:00 - can do once we've defined these square
01:01 - brackets is go ahead and put some
01:03 - elements inside of our a if we would
01:05 - like to so for example I can put an
01:07 - element hello I could put the element 5
01:09 - I could put the element 4.6 I can put
01:12 - Tim and this is my list of elements
01:15 - inside my array so if you're familiar
01:17 - with other programming languages
01:19 - sometimes these are called lists as well
01:20 - it's pretty much the same thing in
01:22 - JavaScript this is just called an array
01:24 - and what we can do when we create an
01:26 - array is simply put elements inside of
01:28 - these square brackets separate them by
01:29 - commas and now we are saying here we
01:31 - have four elements inside of our in our
01:33 - array and now I'm gonna talk about how
01:36 - we can actually access these elements
01:37 - and remove them and do all kinds of
01:39 - things like that now I will note here
01:41 - that there is another way to create an
01:43 - array so typically what you do is you
01:45 - know it's seed save our array and then
01:46 - you just do this if you wanted to create
01:48 - an empty array but you also can do new
01:50 - alright so this is a way that you can
01:53 - create an array in JavaScript as well
01:54 - usually we stay away from this as it's
01:57 - not necessary and it just makes things a
01:58 - little bit more messy but I will show
02:00 - you how this works what you can do is
02:02 - actually say new array inside these
02:04 - brackets you can denote a single number
02:06 - that tells you how many elements you
02:08 - want to be in your ray so in this case
02:09 - we'll do 50 and what this will do is
02:11 - actually create for us in a
02:13 - of 50 blank elements that don't have any
02:16 - content so it's an array of size 50
02:18 - that's what this will do if you leave it
02:20 - like this then just automatically
02:22 - creates one with size of zero which
02:23 - means it's gonna look like that now
02:25 - hopefully I didn't confuse you there if
02:27 - I did just ignore that mine I just
02:28 - wanted to show you guys in case you were
02:29 - interested now let's talk about
02:31 - accessing elements so right now I have
02:34 - four elements in myarray we have an
02:36 - array of length four how do i access
02:38 - these different elements well this is
02:40 - where we talk about something called
02:41 - indexes so I'm just gonna type console
02:44 - that log here so I can start printing
02:45 - some stuff out so essentially whenever
02:47 - we have an array every element in the
02:49 - array has a specified index now that
02:52 - index is simply an integer that
02:54 - represents its position in the array now
02:56 - the index is for any array go from zero
02:59 - to the size of the array minus one now
03:02 - that simply means here that index zero
03:05 - represents hello as that is the first
03:07 - element index one represents five as
03:09 - that as the second element to four point
03:12 - six as that is the third element and
03:13 - three as Tim as that is the fourth
03:16 - element so the easy way to remember it
03:18 - is essentially the last element here is
03:19 - always going to be the size of the array
03:21 - minus one index and the first element
03:23 - will always be zero so let me show you
03:26 - how we actually index things so what I
03:28 - can do is simply put the name of array
03:30 - which is Tim square brackets to the
03:33 - right of it and the index inside of here
03:35 - and this will actually access this
03:37 - specific element in the array for me
03:39 - so watch I'm just gonna go to my
03:42 - terminal here whatever this is and print
03:44 - this out and you can see that we print
03:46 - hello as obviously zero was the first
03:48 - element there now if I do index - we
03:51 - should get four point six so let's bring
03:53 - this up again refresh we get four point
03:55 - six awesome now what happens if I do
03:57 - something like Tim four well we know
04:00 - that four is non index because we only
04:02 - have indexes from zero to three so if I
04:05 - try to do this let's observe what
04:07 - happens in the console here we get
04:09 - undefined so when you try to access an
04:12 - element that does not exist you get
04:13 - undefined so that's something worth
04:15 - noting and that actually doesn't throw
04:17 - an error for you where in other
04:18 - languages it usually would it just gives
04:20 - you undefined okay so now that we know
04:22 - how to index how can we actually change
04:24 - elements in our array and what I'm going
04:26 - to start by
04:27 - doing is just logging the array here and
04:29 - what I'm going to do now is change one
04:31 - of the elements or add an element to our
04:33 - array so what I'm actually gonna do is
04:34 - say Tim two equals and we'll just say a
04:38 - new element like that so what does this
04:42 - do well essentially what it's gonna do
04:43 - is it's gonna say okay so the element at
04:45 - index two I want to set that equal to
04:48 - new element so it's gonna change four
04:50 - point six to be new element and now if
04:52 - we refresh here and we have a look at
04:54 - our array before and after we can see
04:56 - I'll just expand this here we get hello
04:58 - five four ten and then we get hello five
05:01 - new element Tim so that did indeed
05:03 - changing okay so there's a few more
05:05 - things of arrays that I want to talk
05:06 - about we are almost finished now the
05:09 - next thing I want to talk about is the
05:11 - length property of an array so
05:13 - essentially if you would like to check
05:14 - how long an array is what you can do is
05:17 - simply call this dot length at the end
05:19 - of the array name and then we'll tell
05:21 - you how many elements are in the array
05:22 - so here we can see we get four now
05:25 - notice this isn't telling us three as
05:27 - the last index is telling us just the
05:29 - count of how many different elements we
05:31 - have and if we had a blank array and we
05:33 - did this we would have a size or a
05:35 - length of zero okay so let's go back now
05:38 - the next one that I want to show you is
05:40 - to remove an element from the end of the
05:43 - array so let's say that we want to
05:45 - remove Tim or we want to remove whatever
05:47 - element is at the end a very easy way to
05:49 - do this is to do Tim pop now what pop
05:53 - does is simply remove and return the
05:56 - last element now I'll show you what I
05:57 - mean by that essentially what I can do
05:59 - is I'll console dot log Tim dot pop and
06:01 - then I will simply console dot log Tim
06:04 - and I'll show you what the result is
06:05 - from this you can see we get Tim here
06:08 - and then we get the list except for sort
06:10 - of the array but we are missing Tim at
06:12 - the end so what this pop actually does
06:14 - is remove and returns the last element
06:17 - to inside of this long statement where
06:20 - we print it out then obviously now Tim
06:22 - does no longer have this last element so
06:24 - we will print out the three elements
06:26 - here now the other one that we can use
06:28 - is called push now what push does and
06:30 - this doesn't return anything so I'll
06:32 - actually will just type it out here is
06:33 - add an element to the end of the array
06:36 - so rather than removing one it adds it
06:38 - sort of pushed something to the end of
06:39 - the
06:39 - we could do let's push new element like
06:43 - that
06:43 - let's console.log and have a look at
06:45 - this and we can see now we have five
06:48 - elements in our array and we get a new
06:49 - element at the end so that is what push
06:52 - does now I think there's a few more
06:54 - methods we'll go through quickly there's
06:55 - another one called shift
06:56 - now what shift does is simply remove the
06:59 - first element from the array so let's
07:01 - look at this one so I do shift you can
07:04 - see we remove hello and we have five
07:06 - four point six and tip now I'm just
07:08 - going to look but I think that is pretty
07:11 - much it I'll show you one more this one
07:13 - is simply to sort the array and it is
07:16 - sort like that so Tim sort so what I can
07:19 - do is refresh this and now we can see
07:21 - that will actually sort the numbers
07:22 - first and then we will sort the strings
07:24 - now if you want to learn more about how
07:26 - this sort method works with different
07:27 - objects you can look that up on your own
07:29 - time but essentially it's gonna sort you
07:31 - know your strings alphabetically your
07:32 - numbers by size and that is pretty much
07:35 - all there is to it so I think with that
07:37 - that is pretty much a reins I'll show
07:39 - you one last thing just in case anyone's
07:41 - curious if you do decide to do something
07:43 - like Tim seven equals five
07:45 - actually let's do eight and notice that
07:48 - I don't have an index seven in this
07:50 - array what will happen is it will fill
07:52 - all the indexes up to seven with empty
07:55 - elements and then fill index seven with
07:57 - eight so I'll just show you what that
07:59 - looks like so you guys get an idea so
08:01 - you can see here we have hello five four
08:03 - point six Tim so Tim was index three
08:05 - here this is index seven so we have 3
08:09 - empty indexes before that just so that
08:11 - we can actually add this at the correct
08:12 - index just be aware if you do decide to
08:15 - do something like this if it's an index
08:17 - that's out of the range of this array so
08:19 - it's not in the length of the array then
08:21 - what you're gonna end up getting is a
08:22 - bunch of empty spaces before this
08:24 - element that you've added so it means
08:26 - that has been in floor raised as always
08:28 - if you guys have any questions leave
08:29 - them down below and if you enjoyed the
08:30 - video leave a like subscribe to the
08:32 - channel and I will see you guys in
08:33 - another one