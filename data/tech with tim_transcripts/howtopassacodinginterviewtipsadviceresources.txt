00:00 - hello everybody and welcome back so in
00:01 - this video I'm gonna be giving you my
00:03 - tips tricks and advice on how to pass
00:06 - the coding interview with any large tech
00:08 - company now there's a lot more that goes
00:10 - into this than people think they think
00:12 - you just need to be an algorithm master
00:13 - and do ten thousand lead code questions
00:15 - and you'll be good to go I'm here to
00:16 - tell you that is incorrect and before I
00:18 - get too far into all the content in this
00:20 - video I'm just gonna give you a little
00:21 - bit about my background and kind of
00:23 - qualifications to even be telling you
00:24 - this so for those of you that don't know
00:26 - me my name is Tim I am a computer
00:28 - science major in my second year I am 19
00:31 - years old and up until three months ago
00:33 - I had never done a coding interview
00:34 - before in my life and I had never even
00:36 - prepared to do when are done any of
00:38 - those kind of algorithm questions that
00:39 - you know you see so commonly in the
00:41 - coding interview so I went from pretty
00:43 - much three months ago I would say in
00:45 - November to having absolutely no
00:46 - experience not being prepared whatsoever
00:48 - to actually doing for technical
00:50 - interviews passing all of them and
00:52 - getting an offer from two different
00:53 - companies so I did three technical
00:54 - interviews at Microsoft received an
00:56 - offer and then did one technical
00:58 - interview at Shopify
00:59 - and received an offer from them and
01:00 - those are the only technical interviews
01:02 - I've done I pass both of them and that
01:04 - was on my first try so hopefully you
01:06 - guys are ready to listen to some of my
01:08 - advice again I'm pretty young most
01:10 - people that make these videos are
01:11 - typically two or three years older than
01:12 - me so hopefully this should help you
01:14 - guys if you were kind of my age and a
01:16 - little bit less experienced as well now
01:17 - a very quick disclaimer here just so
01:19 - that I'm being transparent with all of
01:21 - you guys I did accept the offer at
01:22 - Microsoft I'm going to be a software
01:24 - engineering intern this summer in
01:25 - Redmond Washington and I'm very excited
01:28 - about that I'm be working on the Python
01:29 - core extension team now the offer at
01:32 - Shopify was also great I would have
01:33 - definitely loved working there but
01:34 - between the two I decided to pick
01:36 - Microsoft now another quick disclaimer
01:38 - because I know some of you are screaming
01:39 - at me in the comments right now when I
01:41 - just told you I didn't have much
01:42 - experience I do have a lot of experience
01:44 - program and compared to probably your
01:45 - typical or average student but again
01:47 - that's not going to take away from the
01:49 - advice I'm going to be giving you guys
01:50 - it's just a disclaimer so you know that
01:52 - you know maybe three months of prep that
01:53 - I did you might need to extend that a
01:55 - little bit as I have done a lot of
01:57 - programming in the past as some of you
01:58 - may not have done before okay so what
02:00 - I'm gonna do now is walk you through my
02:01 - favorite two platforms to use to prepare
02:04 - and show you exactly the types of
02:06 - questions the amount of questions I did
02:08 - to prepare and the way in which you guys
02:11 - should approach these questions so
02:12 - one thing to just do a ton of different
02:14 - questions right I mean you hear this all
02:15 - the time people that do like 1200 leaked
02:17 - code questions and they go in and they
02:19 - still fail so that's why it's very
02:21 - important that you don't just do a ton
02:23 - of practice which is important but you
02:25 - do the practice correctly so please pay
02:27 - attention throughout this when I'm kind
02:28 - of talking about the way you should do
02:30 - these questions because I don't want you
02:31 - to just waste your time answering coding
02:33 - questions that aren't really doing
02:35 - anything for you so the first platform
02:36 - that I always recommend is I'll go
02:38 - expert and I'll be completely
02:39 - transparent here if you guys decide to
02:41 - purchase this platform which is a
02:43 - premium paid platform it is $85 and you
02:46 - can get a discount using the code tech
02:47 - with Tim for 15% off now I understand
02:50 - that immediately makes some of you guys
02:51 - question my judgment if I'm being
02:53 - sincere on this platform you don't fair
02:55 - enough but I'm gonna walk you through my
02:57 - pitch on why I think this is the best
02:59 - platform for a beginner to get started
03:02 - on I don't think this is necessarily the
03:03 - best platform to stick to for the entire
03:06 - coding interview prep but I think that
03:08 - if you're someone who's getting started
03:09 - or who doesn't have a strong foundation
03:11 - or is maybe a little bit more worried
03:13 - about their interviews then this is a
03:15 - better one to be on just because of the
03:16 - solutions that come with it so for those
03:18 - of you that don't know this platform has
03:20 - 85 coding questions as a data structures
03:23 - crash course on it for people that you
03:24 - know aren't familiar with data
03:25 - structures yet or haven't taken the
03:27 - course or need a refresher and also has
03:29 - coding interview tips now they recently
03:31 - released this system expert thing which
03:32 - I believe is a new product I'm pretty
03:34 - sure this is 50% off for the initial
03:36 - launch so if you guys want to get that
03:38 - I'd figured I'd let you know my discount
03:40 - code does work on that as well for an
03:41 - initial an additional 15% off off the
03:44 - 50% discount I think but anyways so
03:47 - let's go down to the questions now and
03:48 - talk about what I did on this platform
03:50 - so as this comes with 85 coding
03:52 - questions we can see that they're
03:54 - organized into easy medium hard very
03:56 - hard and extremely hard now if you're
03:58 - gonna use this platform or you know if
04:00 - you're not anyways what I would really
04:02 - recommend is dialing in on the medium
04:04 - and hard questions or like medium to
04:06 - hard medium hard like in that range is
04:08 - kind of your bread and butter because
04:10 - these are most likely the questions
04:11 - you're gonna get asked and these cover
04:14 - if you can answer these medium and hard
04:15 - questions a really wide variety of the
04:19 - way to prepare these easy questions are
04:21 - almost like ok if you're just getting
04:23 - started like you're a real beginner
04:24 - these are where you're going to start to
04:26 - kind of get the idea of okay this is how
04:28 - I approach a question this is a basic
04:30 - algorithm but once you get past that you
04:32 - need to go very quickly into the mediums
04:34 - ace all the mediums like I've pretty
04:36 - much done here and then start working
04:38 - your way on the hearts you'll notice
04:40 - that the hard questions even the very
04:41 - hard questions are not necessarily that
04:44 - much more difficult they're just
04:46 - different algorithms combined together
04:48 - they're almost a combination of
04:49 - different medium questions so you really
04:51 - it's important that you can nail the
04:53 - medium questions because if you can't
04:55 - get medium you're not really gonna be
04:57 - able to get hardened you're not gonna
04:58 - get anything more difficult than that
04:59 - and chances are if you nail all these
05:00 - medium questions even if you can ask the
05:03 - more difficult question in the interview
05:04 - it will likely use principles that
05:06 - you've already practiced from the medium
05:08 - questions so to give you an example of
05:09 - how you should actually practice these
05:11 - specific questions you can group these
05:13 - by not only category but by difficulty
05:15 - as well and what I typically recommend
05:17 - is making sure you're doing questions
05:19 - kind of in all of the different
05:21 - categories almost in a loop like I like
05:23 - to do array binary binary dynamic I go
05:26 - through all of them so that that way I'm
05:29 - not just doing like 10 array questions
05:31 - in a row and just memorizing the
05:32 - solutions to array questions I want to
05:34 - every time I see a question have to
05:36 - think and not have the solution
05:39 - memorized you you don't want to have
05:40 - that you want to have an idea of how to
05:41 - approach the question but you almost
05:43 - just want to have to think so that you
05:45 - can practice doing that because that's
05:47 - what you're gonna have to do in the
05:48 - interview so if I pick a question say
05:50 - here like a medium question from arrays
05:52 - all right you can see this is my answer
05:54 - for this medium question the reason I
05:56 - really like this platform is because
05:57 - they have hints that you can look at
05:58 - here they also have the fact that I can
06:01 - just run my code and see the output in
06:02 - the test cases here I can see their
06:04 - solution I can move the windows around I
06:06 - can change all these different things I
06:09 - can set a timer which I recommend you do
06:11 - every single time you practice
06:13 - programming questions set the timer
06:14 - before it it's so easy on this platform
06:16 - to do it as well you can see the test
06:18 - cases and then the best part is you can
06:20 - look at a video explanation of the
06:21 - question and how to get the solution now
06:24 - sometimes there's multiple solutions if
06:25 - there is this video will cover all of
06:27 - them you can go to a conceptual overview
06:29 - or a code walkthrough and for people
06:31 - that are beginners this is extremely
06:32 - helpful and it's what really built me in
06:34 - a strong foundation and allowed me to
06:36 - move over to leak code which I'm going
06:37 - to talk about
06:38 - now so obviously here 85 questions I
06:41 - would not really say is enough prepped
06:44 - for the interview I would say that this
06:46 - is really good in terms of building your
06:47 - foundation building up a wide kind of
06:49 - range of different questions and
06:51 - understanding how to approach the
06:52 - problems but you really need to dial in
06:54 - on some more practice and this is where
06:55 - I suggest LICO so once you have the
06:57 - Foundation's done from a platform say
07:00 - like algo expert or something else if
07:01 - you guys have any other ideas for them
07:02 - leave them down below
07:03 - I would buy leak code premium which I'm
07:06 - pretty sure is $35 a month or something
07:08 - like that pick the company that you were
07:10 - interviewing at on this premium top here
07:13 - and do every single question from the
07:14 - module that is suggested so here you can
07:17 - see that this tells me all of the
07:20 - questions that are frequently asked at
07:21 - Microsoft guess where I got a job right
07:23 - and look how many questions I did from
07:25 - this I did 59% of them since I was
07:27 - interviewing it for the intern level I
07:29 - knew that the questions like
07:30 - backtracking sorting and searching
07:32 - dynamic programming and design wouldn't
07:34 - be asked as frequently as say arrays
07:36 - linked lists and trees and graphs so
07:38 - what I did was I did almost all of the
07:40 - arrays and strings almost all the linked
07:42 - lists and almost all of the trees and
07:43 - graphs now there's some pretty stupid
07:44 - questions sometimes I don't bother doing
07:46 - but the idea is do as many as possible
07:48 - from the quote from the company that
07:50 - you're gonna work at and this is where
07:52 - you know you build the strong foundation
07:54 - on a platform like algo expert and then
07:56 - you dial in on the specific company
07:58 - you're gonna be interviewing at with a
08:00 - company like Lika or yeah I guess
08:02 - company likely code or website like Lika
08:04 - and this is really good the premium just
08:06 - makes it so much easier to do things
08:08 - I'll show you that although I did that
08:09 - module I also answered was this 56
08:12 - questions on leaked code so in
08:14 - combination with that little module I
08:16 - showed you the 56 questions here and all
08:18 - the questions from algo expert I ended
08:20 - up doing about a hundred and fifty
08:21 - coding questions before we're at where
08:24 - most of them were medium or hard
08:26 - questions so on leak code you can see
08:28 - that I had 40 medium although I will say
08:30 - the medium questions on leak code are
08:31 - definitely harder than the medium
08:33 - questions on algo expert in general and
08:35 - really medium on leak code is kind of
08:38 - where you should focus the easier like
08:40 - okay if you're warming up like you're
08:42 - not that great at it yet okay start with
08:44 - those but really quickly try to get into
08:46 - the mediums and if you want to challenge
08:48 - you the hearts but these are pretty
08:49 - time-consuming so I usually don't even
08:51 - bother doing them
08:52 - so that is my kind of guide for getting
08:55 - prepped and ready to go
08:56 - you really should be feeling extremely
08:58 - confident before you step into the
09:00 - interview because you've done enough
09:02 - prep right and that's the idea is that
09:03 - the way you're gonna perform well is if
09:05 - you're confident in your ability and you
09:07 - know that no matter what coding question
09:08 - you get you're gonna be able to nail it
09:10 - and the only way to be in that situation
09:12 - is to already be really good in data
09:14 - structures and algorithms and
09:15 - foundational you know algorithmic
09:17 - thinking and problem-solving or to do a
09:20 - ton of practice and that's where I
09:21 - recommend start here get the foundations
09:23 - and then move to lead code and this is
09:25 - where you'll move a lot faster and
09:26 - you'll just do a lot more questions if
09:28 - you have the the premium version then
09:31 - you can sort by company right like I can
09:32 - go down here and I can sort by Microsoft
09:34 - and I can really save myself a lot of
09:36 - time by answering questions specifically
09:38 - from the company I'm gonna be
09:39 - interviewing at okay so now that you
09:41 - have the knowledge necessary to answer
09:42 - these questions you've done your
09:44 - algorithm practice you're confident with
09:45 - your data structures and you know that
09:47 - given one of these problems you will be
09:49 - able to come up with a solution it's
09:51 - time to go through the procedure of how
09:53 - you're gonna solve this problem in
09:54 - person and on a whiteboard now this is
09:56 - gonna be completely different than
09:57 - likely how you've practiced and you
09:59 - really need to listen to me on kind of
10:01 - the stages of what you need to do
10:03 - because if you don't follow them it's
10:04 - gonna be very unlikely that you actually
10:06 - end up getting an offer or getting hired
10:08 - now the stages and I'm about to give you
10:10 - in kind of the process and almost
10:12 - algorithm for solving the algorithm or
10:14 - coming up with the algorithm is what
10:17 - I've employed and used while I was
10:18 - practicing and exactly how I got the
10:20 - offers by literally sticking you know
10:22 - point to point on what I'm about to tell
10:24 - you so the first thing you're gonna want
10:25 - to do when you're giving a programming
10:27 - problem is analyze the crap out of it
10:29 - now I really mean that you should almost
10:31 - be spending the same amount of time
10:33 - analyzing the problem as you should
10:35 - writing or at least that's what I did in
10:37 - all of my interviews what you want to do
10:39 - when you're given the problem is you
10:41 - want to make it as clear as possible
10:44 - what you're trying to solve and make
10:45 - sure that you understand the problem
10:46 - that you and the interview are on the
10:48 - same page a lot of the times you'll get
10:50 - asked questions that intentionally have
10:52 - ambiguous things have little tricks in
10:54 - them or things that should be simplified
10:56 - or clarified before moving forward well
10:58 - your interviewer wants to see you do is
11:00 - clarify those things and ask those
11:02 - questions for example you know
11:04 - a good question you should always really
11:06 - be asking is can I expect integer values
11:09 - can I expect valid input is the output
11:13 - need to be in this format are we
11:14 - assuming this are we assuming that you
11:17 - want to reduce any ambiguity that you
11:19 - can because that's a huge thing in
11:21 - programming in general and if you can
11:22 - show that skill to your interviewer not
11:24 - only is it gonna you know kind of convey
11:26 - a good message to them but it's gonna
11:27 - make it a lot easier for you to solve
11:29 - the problem right if you have some very
11:31 - complicated input and you need to
11:32 - validate that before it comes in if you
11:34 - can just ask the question can I assume
11:36 - that this is valid and they say yes
11:38 - there you go you've just saved yourself
11:39 - probably fired ten minutes of validating
11:41 - the input so that's something very
11:42 - important ask lots of questions make
11:44 - sure you know what you're solving and
11:45 - make sure you understand the problem to
11:47 - a tee and your interviewer knows that
11:48 - you understand it the way that I like to
11:50 - do this is just literally running back
11:52 - the problem kind of discussing each
11:54 - point in the problem to my interview are
11:56 - asking some questions making sure that
11:58 - they know that I'm taking a good look at
12:00 - the problem before I dive in after
12:02 - you've done this and you're clear that
12:04 - you understand what you're solving
12:04 - you've done the analysis and you know
12:06 - that they know that you know what you
12:08 - were doing then you can start talking
12:09 - about how you're gonna solve the problem
12:10 - so here is where you're gonna want to
12:13 - start probably diagramming and just
12:15 - drawing things out on the whiteboard to
12:16 - be honest it doesn't really matter how
12:18 - meaningful the sketches are that you're
12:20 - doing so long as you can kind of convey
12:22 - that you know you're doing a little bit
12:24 - of a plan before you just get into the
12:26 - code even if you know how to solve the
12:28 - problem exactly already and you can just
12:30 - hard code and run through the solution
12:31 - do it not do that you have to discuss
12:34 - exactly what you're gonna do the
12:35 - approach you're gonna take and you want
12:37 - to consider different approaches as well
12:39 - what I will typically do is I will start
12:41 - with kind of a naive approach even if I
12:43 - know a better approach walk through the
12:46 - naive approach or the one that is like
12:48 - you know the worst space-time complexity
12:50 - and then from there slowly build my way
12:52 - up until the better approach even if I
12:54 - know the problem and I haven't memorized
12:56 - that I can literally just write it on
12:57 - the board I will make sure that they
12:59 - know I know that both approaches and I'm
13:01 - considering the space-time complexity
13:03 - between them this is the biggest thing
13:05 - probably the massive thing that's gonna
13:06 - make a huge difference because you're
13:08 - showing that you can look at different
13:10 - alternatives pick which one is the best
13:12 - and then implement that and slowly build
13:14 - your way up to a better solution you
13:16 - don't want the interviewer to know that
13:18 - you've just
13:18 - memorize the problem you want them to
13:20 - think that you're figuring out figuring
13:22 - it out live in front of them if you can
13:24 - do that then that's gonna make you just
13:26 - a lot better in the process because not
13:27 - only are they gonna be like wow this
13:29 - person has like a really good thought
13:31 - process they're thinking things through
13:32 - they're gonna be like and they're pretty
13:33 - smart too they went from the naive
13:35 - solution to this better solution just by
13:37 - doing an analysis and drawing things out
13:39 - now at this point in time you might
13:41 - already be you know 10 50 minutes deep
13:43 - and you haven't written any code and
13:44 - that's totally fine and that's what I
13:46 - did for all my interviews as soon as you
13:48 - come up with the kind of strategy that
13:50 - you want to employ check it with your
13:52 - interviewer you don't need to be like
13:53 - unconfident be like this is OK can I do
13:55 - this just be like this is the approach
13:56 - I'm gonna go with do you think this
13:57 - sounds okay or would you prefer if I
13:59 - went with a different approach is there
14:01 - something you can think that's maybe
14:02 - missing here you just want to be
14:03 - confident you're working as a team and
14:05 - that's what you want to show is that you
14:06 - can work with other engineers as well
14:08 - you can take their feedback and you can
14:10 - bring that into the question and a lot
14:12 - of the times if you've gotten this far
14:13 - already and you've done a good job that
14:15 - you might even tell you hey this
14:16 - approach is good can you do it this way
14:18 - I think it'll be easier for you which is
14:19 - what happened to me at actually two of
14:21 - my technical interviews where I had a
14:23 - very kind of complicated way of solving
14:25 - the problem that was going to work they
14:27 - gave me a hint gave me an easier way
14:28 - boom I solved in the next 10 minutes and
14:30 - they're very happy with the solution
14:31 - because I use their feedback so once
14:33 - you've done that now it's time to
14:35 - actually code and this should be the
14:36 - easiest part the hardest part for me
14:38 - really is just analyzing the problem
14:39 - picking out the edge cases describing
14:42 - reducing ambiguity talking about the
14:44 - implementation and drawing the diagrams
14:45 - once you've done that it's just about
14:47 - translating this to code and this comes
14:48 - down to practice if you program a lot if
14:51 - you're a good programmer this should be
14:53 - easy this should be the easiest part try
14:55 - to make everything as readable as
14:56 - possible you know you just want to
14:58 - employ good standards and you want to
14:59 - show that you're thinking about
15:01 - reusability of this code especially
15:02 - working at large tech companies where
15:04 - you know we need to scale these
15:06 - algorithms to millions of people well
15:08 - you've got to write code that someone
15:10 - else can read and especially your
15:12 - interviewer and you want to make sure in
15:13 - this a very important part when you're
15:14 - coding that's although I know you could
15:17 - go fast and speed through it you take
15:19 - your time and really talk about every
15:20 - step you're doing and why you're
15:22 - deciding to do something there's a lot
15:24 - of times where it's difficult to read
15:25 - people's code if you don't know their
15:26 - thought process so give the interviewer
15:28 - your thought process you should not be
15:30 - silently sitting there writing
15:32 - you should really be discussing why
15:34 - you're doing something and you know
15:35 - maybe after you write three four lines
15:37 - take a step back draw the box be okay
15:39 - this does this this does this I've
15:42 - decided to use this because this is
15:43 - faster this method I know probably could
15:46 - be done in another way but from now
15:47 - we'll leave it like that and then
15:49 - continue to move forward I never will
15:51 - really go more than thirty seconds
15:52 - without saying something because you
15:54 - don't want to lose your interviewer and
15:55 - you want them to know exactly what's
15:57 - happening and always kind of be working
15:59 - with you and giving you the benefit of
16:00 - the doubt and this is why it's very
16:01 - important that you analyze the problem
16:03 - beforehand so your interviewer knows
16:04 - exactly what you're about to code and
16:06 - they're in the mindset like okay so this
16:08 - is the approach we're taking let's see
16:10 - how well he could do and if they make if
16:11 - you make a small mistake in your
16:13 - implementation what happened to me and
16:14 - my interviews was they would actually
16:16 - point it out and say hey I think you
16:18 - might have missed like a line there and
16:19 - I'm like oh my gosh thank you you know I
16:21 - just didn't see it and they totally got
16:22 - that they're human too they make
16:24 - mistakes they know that you've decide
16:26 - talked about the implementation you've
16:28 - been doing a good job coding you made
16:29 - one mistake
16:30 - they have no issue telling you that and
16:31 - helping you move forward they want you
16:33 - to succeed and that's what you want to
16:35 - do here you want to win your interview
16:36 - over at the beginning you want them to
16:37 - think you're confident and smart and be
16:39 - giving you the benefit of the doubt
16:40 - because if you don't do that and you
16:42 - just go and code thousands of lines on
16:45 - the whiteboard you don't say anything
16:46 - and you make a mistake how are they
16:48 - gonna give you the benefit of the doubt
16:49 - and be like okay you know maybe he just
16:50 - made a mistake no they're gonna think
16:52 - that you don't know how to program
16:53 - they're gonna think you didn't know the
16:55 - implementation you were going with and
16:56 - you're just trying to run something
16:57 - through your head and memorize the
16:58 - solution and write it down so that's
17:00 - kind of my algorithm for coming up with
17:03 - your algorithm to a programming problem
17:05 - again analyze the problem reduce
17:07 - ambiguity come up with the
17:09 - implementation discuss different
17:10 - alternatives of the implementation of
17:12 - why you're gonna go a certain route
17:13 - really make sure your interviewers with
17:15 - you the entire time you can even ask
17:17 - them like hey does that make sense you
17:18 - understand what I'm doing as if you're
17:19 - teaching them what you're about to write
17:21 - on the board and that's the way that I
17:22 - take it
17:23 - I am almost teaching them exactly what
17:25 - I'm about to show them and making sure
17:27 - they're on the same track as me and
17:28 - that's only gonna give you an advantage
17:29 - when you code make sure that you're
17:31 - describing everything that you're doing
17:32 - good variable names clean code try not
17:35 - to go into crazy indentation levels it
17:37 - just makes it very difficult to read and
17:39 - that's all you really need to do if you
17:42 - can do all of that then you will pass
17:44 - your coding interview that
17:46 - is the secret to it now obviously
17:48 - there's lots of different components as
17:49 - well you need to answer behavioural
17:51 - questions you need to be just a good
17:52 - personality in general but if you can go
17:55 - in right at the beginning and you can
17:56 - just have a smile on your face you can
17:58 - have some good answers to the questions
17:59 - and you can be ready and prepared for
18:01 - your coding aspect when you start coding
18:04 - you're already gonna be winning in the
18:05 - interview which is what you want because
18:07 - if you're already winning you're gonna
18:08 - get hints you're gonna get help you're
18:10 - gonna want your interviewers gonna want
18:12 - you to succeed and that's just gonna
18:14 - give you a massive benefit now this
18:16 - leads me into practice which is
18:17 - obviously is extremely important all of
18:19 - the skills that I've just mentioned may
18:20 - seem overwhelming and it may seem like
18:22 - it's difficult to be able to master that
18:24 - especially if you're on a tight deadline
18:25 - or a tight schedule but you need to be
18:27 - practicing doing that while you're
18:29 - solving programming problems for me what
18:31 - I would typically do because I'm not
18:33 - just gonna talk for like four hours
18:34 - alone by myself is I would do like three
18:37 - or four programming problems and then
18:38 - the fifth one I would do on a whiteboard
18:40 - that I actually have over here in my
18:42 - room that I bought specifically to
18:43 - practice programming problems and I
18:45 - would treat it as if it was an actual
18:47 - interview and I would genuinely look to
18:50 - my wall and ask it questions like I
18:52 - would do stuff like that that is the
18:54 - kind of practice I employed to make sure
18:56 - that when I got there I've been
18:58 - practicing in an environment as close as
19:00 - humanly possible to what I'm actually
19:01 - gonna be performing in you don't want to
19:03 - leave this up to chance you don't want
19:04 - to leave this up to okay you know I'll
19:06 - get it in moments I'll kill it no you
19:08 - want to go there as prepared as you
19:10 - possibly can be so that when you leave
19:13 - even if you don't get the job there's
19:15 - nothing more you could have done and
19:16 - that's the thing that I said after my
19:18 - interview I was like regardless if I get
19:20 - the offer or not I did as good of a job
19:21 - as I could do I did as much prep as was
19:24 - reasonable in the time before and
19:25 - there's no reason that I should be upset
19:27 - that I didn't get the job because well
19:30 - there was nothing more I could have done
19:31 - and those are my tips to you practice
19:34 - like you play right you're gonna be
19:36 - playing and you're gonna actually be
19:37 - doing the thing in a real interview
19:38 - practice like you would do that you
19:40 - don't need to do it every day but make
19:42 - sure that you are okay with vocalizing
19:44 - your solution which is a lot more
19:45 - difficult than it looks
19:47 - and I will tell you and you mean you
19:48 - guys can see it for yourself go watch my
19:50 - first youtube video from 2014 or
19:53 - whatever it was and you'll see that I
19:55 - was not very good at communicating I was
19:56 - not very good at vocalizing my school
19:58 - and talking about what I was coding now
20:01 - after 370 videos on my youtube channel I
20:03 - do it like it's nothing right and that's
20:05 - what you guys need to get to for these
20:07 - programming interviews I had a massive
20:09 - advantage because as much as I'd only
20:11 - been prepping programming problems for
20:13 - two three months I had been preparing
20:15 - and practicing my communication skills
20:17 - for the past three years so that's what
20:18 - you need to do that's how you get the
20:20 - job there's no easy shortcut there's no
20:22 - go leap Cove by this website do that
20:24 - it's a lot of hard work and I mean it
20:26 - pays off look at the compensation from
20:27 - some of these companies look at the
20:29 - career development there's a reason why
20:31 - the acceptance rate at Google is 0.2%
20:33 - from people that apply it's just because
20:36 - it actually is hard and it does require
20:37 - the work and not that many people are
20:39 - willing to put it in so that has been
20:41 - this video I hope you guys enjoyed I
20:43 - hope these tips helped you I understand
20:44 - this was long but I'm gonna give you
20:46 - guys as much information and value as I
20:47 - can if you do appreciate these kind of
20:49 - videos please do leave a like and leave
20:51 - a comment down below it really does help
20:53 - out the channel and of course subscribe
20:54 - for more content like