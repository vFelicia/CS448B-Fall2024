00:00 - if you use pandas at all you need to
00:01 - know about this library that can
00:03 - literally give you a 150 times
00:06 - performance increase with no code change
00:09 - I'm not exaggerating this library is the
00:11 - Rapids KF Library provided by Nvidia and
00:14 - I've teamed up with them in this video
00:16 - to demonstrate how easy it is to use and
00:18 - the massive performance benefit you can
00:20 - get obviously this is free you don't
00:22 - need to pay for anything and I'm going
00:23 - to show you here how it works and how
00:26 - much faster it is now as a quick primer
00:28 - the Rapids CF Library is a python GPU
00:31 - data frame Library that's aimed at
00:33 - accelerating data science workflows now
00:36 - what this allows you to do is unify the
00:38 - CPU and GPU experience so whenever you
00:41 - can't use the GPU it will just default
00:43 - to using the CPU now what this also
00:45 - allows you to do is continue using
00:47 - pandas when you have massive data sets
00:49 - that traditionally wouldn't be feasible
00:51 - to load on the CPU a lot of people when
00:53 - they use pandas had the issue that as
00:55 - soon as they got into big data sets or a
00:57 - lot of kind of heavy computation they
00:59 - they had to move away from it because
01:01 - they just couldn't utilize it in their
01:02 - workflow now when you have this massive
01:05 - speed increase in this library or
01:07 - specifically at the update to this
01:08 - Library you're actually able to continue
01:10 - using pandas which is the tool that most
01:12 - people love to use so I'll leave some
01:15 - links in the description as you guys can
01:16 - check it out for yourself one of them is
01:18 - going to be this right here which is The
01:20 - Notebook that kind of demonstrates the
01:22 - use case of the Rapids Library now it's
01:25 - the new update to the Rapids Library
01:26 - that came out about a month ago that
01:28 - really brings this huge performance
01:30 - benefit to pandas but Rapids has been
01:31 - around before as well anyways as we go
01:34 - into here you can see that there's just
01:36 - a few commands we got to obviously
01:37 - install CF once CF is installed we can
01:40 - simply import it and then we can
01:42 - literally just use CF as if it was the
01:45 - Panda's import so that's one way to use
01:47 - it but another thing that you can do is
01:49 - there's actually a command that you can
01:51 - run that simply changes over pandas so
01:54 - any import to pandas or third party
01:57 - libraries using pandas to just use CF so
01:59 - if you look right here it says load
02:01 - extension CF pandas when you do that
02:03 - inside of this kind of jupyter notebook
02:05 - environment now any import to pandas
02:08 - whether your codee's calling it any
02:10 - other code is calling it will just
02:11 - default to use KF the way it will work
02:14 - is anything that can be accelerated by
02:15 - the GPU it will just accelerate it and
02:17 - it will just be a lot faster anything
02:19 - that can't it will default to use the
02:21 - CPU so you're not going to have any
02:23 - breaking code everything literally just
02:25 - works let me just get these examples set
02:27 - up for you here and I'll show you how
02:28 - much faster it is all right so here's a
02:30 - quick demo just in the collab notebook
02:32 - you see analysis using standard pandas
02:35 - won't read through all of it we imported
02:36 - pandas I downloaded a data set that's
02:38 - about 455 Megs and we can go ahead and
02:42 - run it and Sample the first 10 entries
02:44 - that are in our data set so give this a
02:46 - second to run here you can see already
02:48 - it's being a little bit slow Okay so
02:50 - we've got 10 entries in here now we can
02:52 - try to answer some questions related to
02:54 - it right we can do some grouping we can
02:55 - sort some indexes some data science
02:58 - stuff that I'm sure most of you probably
02:59 - know know more than I do anyways as we
03:02 - go through here you can see there's some
03:03 - more things like which vehicle body
03:05 - types are the most frequently involved
03:06 - in parking violations Etc right we can
03:09 - go through and kind of run all of these
03:10 - different things now what we can also do
03:13 - is time this so what I'm going to do is
03:15 - just run this and get how long it
03:17 - actually takes to kind of go through
03:19 - this pipeline of operations then we'll
03:21 - compare the same thing later using the
03:24 - CF Library all right so this took 9.93
03:27 - seconds on the CPU a total of 12 12.7
03:30 - seconds I'm not sure what the wall time
03:31 - means but says 11.6 seconds anyways we
03:34 - have another timed operation which is
03:36 - this group by uh if I'm not mistaken
03:39 - these sometimes can take a little bit
03:40 - longer actually I guess I was mistaken
03:42 - this took 4.53 seconds and if we go down
03:46 - here this one let's give it a second
03:48 - here looks like it's going to take even
03:51 - a little bit longer took 6.33 seconds
03:56 - okay nice so now let's use KF so what
03:59 - I'm going to do is just just run this
04:00 - load the CF extension so CF extension is
04:03 - loaded and now whenever I import pandas
04:05 - we're going to use CF so we can time
04:07 - this one now when I run it you can see
04:11 - this takes 1.13 seconds when I run this
04:14 - here 24.8 milliseconds run this one here
04:19 - 140 milliseconds pretty much happens
04:21 - instantly now there's a bunch more stuff
04:22 - in this notebook if you guys want to
04:23 - check it out but I also want to show you
04:25 - my own custom demo in the installation
04:27 - process so let's get into that all right
04:29 - so I'm just on the rapid cf's GitHub
04:31 - page I just quickly want to talk to you
04:33 - a little bit about the installation this
04:34 - is going to widely vary depending on the
04:36 - operating system you're on but obviously
04:38 - you're going to need an Nvidia capable
04:40 - GPU and you're going to need Cuda
04:41 - installed on your system now this will
04:43 - work in some kind of Linux environment
04:45 - if you're on something like Windows like
04:47 - I am you can use WSL there's a few more
04:50 - setup steps there anyways as you can see
04:52 - here there's install for this to work
04:54 - again you need Cuda you need a Linux
04:56 - environment that's kind of the basics
04:58 - you obviously then need to have Pand do
04:59 - installed and then you need to install
05:02 - the Rapids CF Library there's a few ways
05:04 - to install that one of which is to
05:06 - install it using cond so you can see
05:08 - here it gives you all of the
05:09 - requirements and then gives you the cond
05:11 - install so in my situation all I did was
05:14 - I opened up WSL I enabled Cuda inside of
05:17 - WSL I installed cond and then I just
05:20 - installed the Rapids Library once I
05:22 - updated my Python and did all that kind
05:24 - of stuff I'm not going to bore you with
05:26 - that if you guys are going to use this
05:27 - chances are you're going to have to go
05:28 - through your own installation process
05:30 - anyways point being here we have two
05:33 - demos right first demo here is just
05:35 - using pandas I'm calling this demo slow
05:38 - I can do python demo slow. piy and
05:42 - you'll see that this works okay it just
05:44 - prints out information about some tip
05:47 - percentages or whatever using pandas now
05:50 - the normal demo here is not going to be
05:51 - any faster because we're not really
05:53 - doing anything that uses the speed
05:54 - increase the point of this is to
05:56 - illustrate to you that all I have to do
05:58 - is change out import pandas from import
06:01 - CF and now rather than doing pd. read
06:04 - CSV I'm just doing kf. read CSV and this
06:08 - will now work so if I do demo. piy we
06:11 - will get the exact same result and you
06:13 - can see we get the same result now just
06:14 - as a quick note here you don't actually
06:16 - have to import CF like I have here what
06:19 - you can do instead is simply run the
06:21 - python command with a specific argument
06:23 - and it will actually automatically kind
06:25 - of override the pandas import for you so
06:28 - I showed you that we could just use CF
06:30 - but instead what we can actually do here
06:31 - is we can say Python 3 and then we're
06:33 - just going to put this argument which
06:35 - is- M and then
06:37 - cf. pandas then we'll put the name of
06:40 - the file we want to run so demo slow.
06:43 - piy now that we're doing this we're
06:45 - going to run it with CF enabled and I
06:47 - actually had zero code change so let's
06:49 - go ahead and run that so there you go
06:51 - all functioning correctly throughout the
06:52 - rest of the video you'll see that I do
06:54 - have uh KF for example but again we
06:57 - don't actually need to change it to CF
06:59 - instead we can just use this manual
07:01 - argument that I have here now if we go
07:03 - here to the real demo what I did is just
07:06 - set up a little bit more advanced code
07:08 - and I actually downloaded a fairly large
07:11 - CSV file uh this file I believe is about
07:13 - 1 Gigabyte and as soon as you start
07:15 - using files that are over about 500 migs
07:18 - and you start to do some sord operations
07:20 - mean operations things that are doing a
07:22 - lot of aggregation or a lot of different
07:24 - operations on the data that's when
07:26 - you'll really start to see the
07:27 - performance impact so what I'm going to
07:28 - do is just run the regular demo here so
07:31 - real data demo and just kind of show you
07:34 - the speed I'm doing a bunch of
07:36 - operations here like getting the mean
07:37 - getting high severity sorting grouping
07:40 - and then applying a function to all of
07:42 - the different rows inside of my data you
07:44 - don't need to worry too much about
07:45 - exactly what's going on but you're going
07:47 - to see the DraStic speed increase I'm
07:49 - going to say Python 3 real data demo.
07:52 - piy this is going to take a minute to
07:54 - run once it's done I'll be back I'll
07:56 - show you how long it took and then we'll
07:58 - compare it to the fast or KF enabled
08:00 - version all right so I just ran the demo
08:02 - here and you can see that we're getting
08:04 - you know 46 seconds 39 seconds 19
08:08 - seconds which actually quite a bit of
08:09 - time especially if we had a larger data
08:11 - set 49 seconds 1.64 seconds okay so the
08:14 - main thing here is the Sorting which
08:16 - took a while so now what we can do is
08:18 - run the exact same command so python
08:21 - hyphen M
08:22 - cf. pandas this time and then the real
08:26 - data demo. pi and you'll see that now
08:29 - we'll enable KF you'll see how much
08:31 - faster this is with no code change just
08:34 - adding cf. pandas all right so this is
08:37 - finished now and you can see we're
08:38 - getting 1.2 seconds 0.02 seconds we're
08:42 - getting 0.4 seconds it's almost a 40
08:45 - times speed increase from the previous
08:46 - one we're getting 0.28 seconds and we
08:50 - get a bunch of other ones right that are
08:51 - quite slow 0.53 seconds Etc so not quite
08:54 - 150x on every operation but for
08:57 - something like sorting you can see that
08:58 - we're getting a huge performance impact
09:00 - by literally changing nothing we just
09:02 - ran the command using kf. pandas now for
09:05 - some reason you're curious about the
09:07 - data set here this is some us accident
09:09 - data so we've got some stuff like
09:11 - weather conditions severity of the crash
09:13 - start time visibility temperature all
09:15 - this kind of stuff trying to get some
09:16 - Trends based on that anyway it's not
09:18 - super important just wanted to show you
09:20 - the demo here and really illustrate the
09:22 - power of this Library obviously it is
09:24 - completely free and a big shout out to
09:26 - Nvidia for sponsoring this video and for
09:28 - coming with tech like this cuz this is
09:30 - quite incredible and I'm sure is going
09:32 - to help a lot of you now I've left some
09:34 - links in the description one of those
09:36 - links that I left let me see if I can
09:37 - pop it up here is actually a link to the
09:40 - AI and data science virtual Summit now
09:42 - this already happened but there is a
09:44 - bunch of replays of some really
09:45 - interesting events here so if you guys
09:47 - want to check it out feel free to do
09:48 - that this is pretty much just talking
09:50 - about AI data science tools Innovations
09:52 - in the space Etc I'm sure you guys might
09:55 - find some value in it all the links you
09:57 - need to get started with CF are in the
09:59 - description I hope you guys found some
10:01 - value if you did leave a like subscribe
10:04 - and I will see you in the next
10:06 - [Music]
10:13 - one