00:00 - coding has changed a lot in the past few
00:01 - years and naturally so has how you
00:03 - should learn it if I was learning python
00:05 - again completely from scratch I would do
00:08 - a lot of things differently so let me
00:10 - share those with you in this video now
00:12 - the absolute first thing that I would do
00:14 - before I start learning any of the
00:15 - Python features or syntax is actually a
00:18 - bit of research about the language I'd
00:20 - want to understand what it's good at
00:22 - what I can actually build with it and
00:24 - then try to set myself a goal for why I
00:26 - want to learn python as opposed to a
00:27 - different programming language this I'll
00:30 - know that python is actually the right
00:31 - choice for me it is worth me spending
00:34 - the time learning it and I can be
00:35 - working towards something like
00:36 - completing an application or finishing
00:38 - some type of script and I know that my
00:40 - learning actually is going to have some
00:42 - tangible outcome when you're programming
00:44 - it can be really difficult especially
00:46 - when you're starting out and a lot of
00:47 - people switch between languages or don't
00:49 - really know where they're going so it's
00:51 - really important to set the direction
00:53 - correctly make sure this is the language
00:55 - that you want to learn and give yourself
00:56 - some kind of goal to work towards that
00:58 - you know why you're doing of this work
01:00 - now after I was certain that python is
01:02 - the language that I want to learn the
01:04 - next thing I would do is try to make
01:06 - sure I get my machine set up for python
01:08 - development and learn about the
01:10 - different environment and tools that I
01:11 - need to actually start writing python
01:13 - code this step shouldn't take very long
01:16 - but a lot of people skip it or they
01:17 - don't find the right type of guide which
01:19 - means they get into a tutorial and
01:21 - they're immediately overwhelmed because
01:22 - they don't even have python on their
01:24 - machine they don't know how to run the
01:25 - code or execute it they don't know what
01:27 - a code editor or IDE is so you want to
01:29 - be looking for videos or at least
01:31 - articles or lessons online that will
01:33 - share with you that kind of Step Zero
01:35 - where you can get everything set up and
01:37 - feel comfortable before you start diving
01:39 - into the code and by the way if you want
01:41 - that type of video I'll leave one right
01:42 - here so now that I've got my machine set
01:44 - up what I'd be focusing on is mastering
01:47 - the basics now I'm going to give you an
01:48 - entire list of topics that you should
01:50 - master and after that I'll explain
01:52 - exactly how you should learn these
01:54 - especially when you're just starting out
01:56 - so excuse me for reading my phone I
01:57 - don't want to forget any topics but I
01:59 - have data types operators variables
02:03 - conditions conditionals so this is like
02:05 - if else else if statements looping so
02:08 - for Loops while Loops looping over
02:10 - different objects then I would focus on
02:12 - things like lists dictionaries and sets
02:15 - kind of the main data structures in
02:16 - Python Beyond things like strings and
02:18 - other more basic data types and then I
02:20 - would look at functions now I know that
02:22 - sounds like a lot of stuff but this is
02:24 - going to cover almost 80% of all the
02:26 - programming Concepts you'll really ever
02:28 - need to know and if you can understand
02:30 - all of those things even if you're not
02:31 - yet a master at them it's really going
02:33 - to help you progress quite quickly in
02:35 - your programming Journey so that's great
02:37 - we have this long list of things to
02:39 - focus on how do you actually learn those
02:41 - well my personal recommendation at least
02:43 - when you're right at the beginning is to
02:45 - learn these from videos the reason why I
02:47 - like watching video courses at the
02:49 - beginning is because at this point you
02:51 - don't yet know what you don't know
02:53 - there's going to be a lot of things that
02:54 - you won't know to go look up or find
02:56 - articles on or even ask something like
02:58 - Chad GPT but if you you can find a good
03:00 - educational resource like a YouTube
03:02 - series online and it has a good
03:04 - instructor they're going to be filling
03:05 - you with a lot of different pieces of
03:07 - information and just sharing a bunch of
03:08 - nuggets that you wouldn't get if you
03:10 - were trying to learn all these topics
03:12 - independently or Googling all of these
03:14 - things or finding them out yourself so
03:16 - what I would do now is actually commit
03:17 - the first day or two of my learning to
03:19 - going through a bunch of different
03:20 - resources I would recommend YouTube
03:22 - tutorial series or things like UD me
03:24 - courses I would watch the first few
03:26 - minutes of one of the lessons that they
03:28 - have there I would make sure that the
03:29 - teacher makes sense to me I can
03:31 - understand them their teaching styles is
03:33 - meshing well with me and I have
03:34 - confidence that this series will be good
03:36 - and then I'd read some of the comments
03:37 - or some of the reviews and just try to
03:39 - find a really high quality resource that
03:41 - I could follow for the next few hours to
03:43 - really get these basics down there are
03:45 - tons of different tutorials online tons
03:47 - of amazing instructors obviously I teach
03:50 - a lot of python on this channel I'm
03:52 - biased I think my videos are good you
03:53 - guys can check those out for beginner
03:55 - tutorials but if my teaching style
03:56 - doesn't work for you then don't stick
03:58 - through the entire 6our long video go
04:00 - and switch to someone else that works
04:02 - better again commit a little bit of time
04:04 - up front find the best resource you
04:06 - think at the current time is going to
04:07 - help you learn and then commit to that
04:09 - for the next few hours to master these
04:11 - Basics and just one last thing here if
04:13 - you are following along with video
04:14 - tutorials I highly recommend replicating
04:18 - everything that the instructor does on
04:19 - your own computer so when I was learning
04:21 - what was really effective for me is I
04:23 - would have a video on one screen or one
04:25 - part of my screen and on the other
04:27 - screen I would have my code editor and I
04:29 - would constantly be pausing the video
04:31 - typing things out and trying them on my
04:33 - own and trying to predict what the
04:35 - instructor would say next it's really
04:37 - important that you're fully engaged and
04:39 - actually interacting with the video
04:41 - rather than simply watching them and
04:43 - going through a 20-minute video where
04:44 - you're not actually doing anything and
04:46 - just listening to someone code you want
04:47 - to be coding alongside them pausing and
04:50 - taking your time meaning a video that's
04:52 - 15 20 minutes long it might take you an
04:54 - hour to get through that's totally fine
04:56 - but that's the best way to absorb
04:57 - information now at this point I know
05:00 - that a lot of you guys are thinking
05:01 - about AI hasn't AI changed things
05:03 - shouldn't I be using AI to learn and the
05:05 - answer is yes and I'm going to talk
05:07 - about that in one second but something
05:09 - else that AI has impacted is the ability
05:11 - to land a job in 2024 and Beyond now
05:14 - that's why I wrote an entirely free
05:16 - guide with the sponsor of this video
05:18 - HubSpot that explains how to land a
05:20 - developer role in the world of AI now
05:23 - this draws on my over decade of
05:25 - experience and it discusses the best
05:26 - programming languages to master and the
05:28 - most effective way to learn them it also
05:31 - gives you the best practices for
05:32 - crafting your portfolio and your resume
05:35 - along with YouTube recommendations and
05:37 - other resources that can help you
05:38 - enhance your programming skills I've
05:40 - left a link to this in the description
05:42 - that you can check out completely for
05:43 - free personally my favorite part of this
05:46 - guide is the long list of resources like
05:48 - YouTube channels and websites that offer
05:50 - fantastic free ways to improve your
05:52 - programming skills now this entire guide
05:55 - is really focused on how to distinguish
05:57 - yourself as a developer in the world of
05:59 - AI and it offers essential insights and
06:01 - tips to do exactly that I'm thrilled to
06:04 - collaborate with HubSpot on this
06:05 - resource so a massive thank you to them
06:07 - and with that said let's get into the
06:09 - rest of the video so after I gone
06:11 - through a bunch of videos and kind of
06:13 - gotten the theory out of the way what I
06:15 - would be focusing on is practicing as
06:16 - much as possible and really nailing all
06:19 - of these basic concepts until they
06:21 - become memorized and until I really
06:23 - understand them quite well now you don't
06:24 - need to memorize all of the syntax per
06:26 - se but you need to know how all of these
06:28 - things work and become able using them
06:30 - so how would I do that in 2024 well what
06:33 - I would do is really lean heavily into
06:35 - AI here and I would get AI to generate a
06:38 - ton of practice questions for me one of
06:40 - the biggest issues when you're trying to
06:41 - practice programming is finding a way to
06:43 - do that in small bits or to get a bunch
06:45 - of great practice questions to go
06:47 - through now courses can help you with
06:49 - that and there is some resources online
06:51 - but I would really be going to something
06:52 - like chat GPT saying hey I struggle in
06:55 - these certain areas and I want to do a
06:56 - lot of practice can you give me some
06:58 - small practice questions in Python for
07:00 - small questions like this it's very
07:02 - likely that it will generate good
07:03 - questions and it can verify the answers
07:05 - for you anything more complicated
07:07 - probably not but for really basic stuff
07:09 - you can almost entirely rely on it to be
07:12 - correct it can make mistakes but at
07:14 - least for the basics it can generate
07:15 - hundreds of different problems for you
07:17 - and you can just do a ton until you
07:19 - really really feel comfortable with the
07:21 - basic python syntax now after that and
07:24 - I'd gone through a ton of different
07:25 - practice questions I'm talking about
07:27 - hundreds doing maybe 10 20 per day
07:29 - depend depending on the amount of time
07:30 - that I had what I would do is focus on
07:32 - walking through beginner projects it's
07:35 - one thing to get the basics of a
07:36 - language down it's another thing to
07:39 - understand how to architect software
07:40 - even if it's small programs you know 50
07:42 - lines of code 100 lines of code and how
07:44 - to take all of this theoretical
07:46 - knowledge and all this syntax and
07:47 - combine it together into something
07:49 - larger now for this what I would do is
07:51 - go and find YouTube videos that have
07:53 - complete project walkthroughs I have a
07:55 - bunch of beginner videos on my channel
07:57 - where I do exactly this that you guys
07:59 - seem to really enjoy and I walk you
08:00 - through from the entire beginning where
08:02 - there's no code and build everything out
08:04 - and explain my thought process step by
08:06 - step this way you can get the experience
08:08 - that I have you can see exactly how I do
08:11 - things and even if you're not capable of
08:12 - doing it on your own at least you're
08:14 - learning and you're picking up those
08:15 - pieces so I would follow along with a
08:17 - tutorial like that I would try my best
08:19 - to pause the video and attempt certain
08:21 - portions of the code on my own and then
08:23 - what I would do is a few days later I'd
08:25 - go back to that same video and I would
08:27 - try to code out much larger portions of
08:29 - the project myself before referencing
08:31 - back to it or I'd go to another video
08:33 - and same thing I'd slowly try to become
08:35 - less reliant on it and use it more as an
08:38 - answer key rather than something that's
08:40 - telling me step by step what to do now
08:42 - at this point I would ideally feel
08:43 - really comfortable with basic
08:45 - programming and even creating some small
08:47 - projects and hopefully start to build my
08:49 - confidence a bit this is where I would
08:51 - then go into learning about
08:52 - object-oriented programming I wouldn't
08:54 - try to rush this and learn it too early
08:56 - but once I go through all of that
08:57 - practice and just do a ton of coding
08:59 - with the basic features oop is the
09:01 - natural next step now I have a video
09:03 - that has almost 3 million views that a
09:05 - lot of people find teaches oop very
09:07 - effectively object-oriented programming
09:09 - so I'll link that on the screen here
09:11 - there's not much more to say than that
09:12 - but you should learn objectoriented
09:14 - programming which is not really that
09:15 - complicated and shouldn't take you too
09:17 - long so at this point once I've learned
09:19 - objectoriented programming I know most
09:22 - of the core features in Python now there
09:24 - is some more advanced things to learn
09:25 - later on but at this point I would focus
09:27 - on trying to do something cool and
09:29 - interesting personally what I would do
09:31 - is try to make a game with python using
09:33 - a module like pame and try to do things
09:35 - like sending an email or messing with
09:37 - the OS module or doing a quick
09:39 - automation script I'd really want to
09:41 - focus on actually putting my python
09:43 - skills into practice and try to make
09:45 - something cool interesting now probably
09:47 - I need to follow along with some
09:48 - tutorials or I need to learn a bit about
09:50 - something like pame or some other kind
09:52 - of built-in python modules but I would
09:54 - really want to make sure I build
09:56 - something that I actually found cool and
09:58 - that I could work on maybe a few days or
10:00 - a week or two weeks and just really
10:02 - refine my skills and actually put it
10:03 - into practice doing something that is
10:05 - completely for me I think that's super
10:07 - important so I'd recommend at this stage
10:09 - pick something like a game make that in
10:12 - Python and that's kind of The Next Step
10:14 - before you move forward now once I built
10:16 - something cool like a game in Python
10:18 - what I would go into next is web
10:20 - development with python now this is
10:22 - really the main area where python shines
10:24 - it's where you can really build some
10:25 - interesting applications and even if you
10:27 - don't want to be a web developer it's
10:29 - assumed in a lot of roles that you at
10:31 - least have some basic understanding of
10:33 - these Concepts so that's where I would
10:34 - go to next now same thing I have a list
10:36 - here so I'm going to read a few topics
10:38 - you should really focus on here some of
10:40 - them are python python specific Sor some
10:42 - of them are not so the first thing I
10:44 - would focus on is learning about HTTP
10:46 - methods and just the basics on how the
10:48 - internet actually works how you serve a
10:50 - page how you view a page and how you
10:52 - interact with it using things like
10:54 - requests then what I would look at is
10:56 - the request module this is a module you
10:58 - can install and python that allows you
11:00 - to send various requests to things like
11:02 - apis another thing that you should learn
11:04 - about and different websites after that
11:06 - I would try to build a really simple
11:08 - website using a module like flask this
11:10 - is a really simple way that you can get
11:12 - a website up and running in just a few
11:13 - minutes I've got lots of tutorials on
11:15 - this channel but it's definitely worth
11:17 - looking at after that if I was
11:19 - interested in web development I would
11:20 - move on and learn about something like d
11:22 - Jango again I wouldn't spend a ton of
11:24 - time here but I would want to be
11:25 - familiar with it and have used it before
11:27 - and then lastly I would maybe tble in
11:29 - something like Fast API just to get a
11:31 - sense of these three different python
11:33 - Frameworks all of which you can use to
11:35 - build websites and apis so that's it I
11:38 - would Learn Python web development and
11:39 - then I would move on to some Advanced
11:41 - python features now the features I would
11:43 - focus on specifically are decorators
11:46 - generators context managers meta classes
11:49 - and Dunder methods now you really don't
11:51 - need to understand these super well to
11:53 - be good at python but it is helpful to
11:55 - really increase your comprehension of
11:57 - the language especially when you start
11:59 - working with a lot of different
12:00 - Frameworks or modules where these
12:02 - features might be built in but you don't
12:04 - directly touch them so I would learn
12:06 - these different features it shouldn't
12:07 - take you that long to get a hang of them
12:09 - and then at this point you'll know a lot
12:10 - more about the Python language as a
12:12 - whole you'll have some understanding of
12:14 - the advanced things that happen behind
12:16 - the scenes and that's really where most
12:17 - of you can stop when it comes to
12:19 - actually mastering python after that
12:22 - what's really next is just getting into
12:23 - specific niches and using python for
12:26 - well what it's used for building various
12:28 - applications so I have a long list of
12:30 - apps or different areas that you could
12:32 - get into once you've mastered all of
12:34 - those different topics so let me go
12:35 - through them here we have machine
12:37 - learning we have ai we have interacting
12:39 - with things like llms we have data
12:41 - science we have becoming a backend
12:43 - developer doing things like devops
12:45 - engineering doing automation working
12:47 - with robotics integrating with raspberry
12:50 - pies and the list goes on and on really
12:52 - at this point it's about learning the
12:54 - specific tools and modules that actually
12:56 - allow you to make cool stuff with python
12:58 - and then getting good at those specific
13:00 - Frameworks or modules regardless that'll
13:02 - wrap up this video obviously this is
13:04 - subjective this is just how I would do
13:06 - it if I was starting over if you have
13:07 - different ideas leave them in the
13:09 - comments down below and with that said I
13:11 - hope you enjoyed the video
13:14 - [Music]