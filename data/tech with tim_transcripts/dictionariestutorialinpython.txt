00:00 - hey guys and welcome back to another
00:02 - YouTube video so in today's video I'm
00:04 - gonna be teaching you all about
00:05 - dictionaries so dictionaries are very
00:08 - similar to sets in Python now if you
00:10 - don't know what sets are pretty much
00:12 - they are a collection of unique elements
00:15 - okay so it's a set is something that's
00:18 - like this so s is equal to and then
00:19 - curly brackets and like 1 3 4 6 7 okay
00:23 - now if you tried to add a duplicate
00:25 - elements in there you would see that if
00:27 - you print s it simply removes that
00:29 - duplicate element now this is the exact
00:31 - same thing with dictionaries they can
00:33 - have no duplicate elements they're
00:34 - completely unique and they're also
00:36 - unordered and that's the same as a set a
00:38 - set is completely unordered although it
00:39 - looks ordered right now it is unordered
00:42 - in pythons memory and in your computer's
00:44 - memory okay so that's the same thing for
00:46 - dictionaries now I'm gonna show you what
00:48 - a dictionary looks like pretty much it
00:50 - is a key value pair so for each key
00:53 - there is a value associated with that
00:55 - and keys and values can be anything you
00:57 - want so if I create a dictionary again
00:59 - I'm gonna use curly braces except the
01:02 - way that I create a new item or like a
01:04 - new element in the dictionary is I give
01:06 - it a key so in this case we're gonna do
01:07 - like Apple and then I'm gonna do for and
01:11 - I'll do like I don't know let's say pair
01:14 - 5 like this ok
01:16 - if I print D you can see we get Apple
01:18 - for pair 5 now you may have guessed but
01:22 - Apple would be a key and 4 would be the
01:25 - value and then pair would be a key and 5
01:27 - would be the value and this is the way
01:30 - that you can create a dictionary
01:31 - kind of like in one line like statically
01:34 - type in all the entries now obviously
01:36 - there's a lot of different ways and I'm
01:37 - gonna go through that just in a bit ok
01:39 - so now how do we access these values or
01:43 - how do we access these elements so in a
01:45 - dictionary the way that we do this is
01:47 - not something like this like D 0 because
01:49 - we get key error 0 doesn't exist we have
01:52 - to do deep and in the square brackets we
01:55 - put the key so in this case if I wanted
01:57 - to access the value 4 well that's
01:59 - associated with the key Apple so I would
02:02 - type Apple D Apple and you can see it
02:04 - returns a value of 4 now dictionaries
02:07 - are very good because just like sets
02:10 - operations are really fast on them so
02:12 - the operation like in
02:14 - index would he call it remove append
02:17 - those operations are extremely quick on
02:19 - dictionaries and on sets and that's
02:22 - because likewise they are unordered and
02:24 - that's why we can do these operations so
02:26 - fast and why you don't use dictionaries
02:27 - now again if I did something like D pair
02:31 - that we get a value of five now I'll
02:34 - show you again like what happens if I do
02:36 - d4 so four exists in my dictionary but
02:39 - it's not a key it's a value so I type T
02:40 - 4 you can see we get a key error so keys
02:44 - just so you know can they also don't
02:46 - have to be on strings they can be
02:49 - anything you want them to be so a key
02:50 - could be a list two key could be a
02:51 - tupple it could be a number so now I'm
02:54 - going to show you how you can add new
02:55 - things into the dictionary how you can
02:57 - create new key values pairs okay so if I
03:00 - do like something like this and I say D
03:02 - and it's critically actually let's make
03:03 - it a tupple all right it's like a
03:04 - position to three okay and I say is
03:07 - equal to seven so the key at two three
03:10 - the tupple to three is equal to seven
03:13 - that works perfectly fine if I check D
03:15 - we get Apple for pair five and then the
03:17 - key of two three is equal to seven so
03:19 - again shows us now that we don't have to
03:21 - have keys that are just one data type we
03:24 - can mix data types we can create them to
03:26 - be tuples and we can do all that kind of
03:28 - cool stuff so yeah if I access that key
03:31 - we get D three we get seven like that
03:33 - okay now again the reason we can do this
03:36 - and we can add a key like this is
03:38 - because dictionaries are mutable so they
03:40 - are changeable in in the memory system
03:43 - okay now to clear a dictionary we can do
03:46 - something like this like D clear and if
03:49 - we type D we get an empty dictionary and
03:50 - that's pretty straightforward okay so
03:52 - now I'm gonna go into looping through
03:54 - dictionaries and kind of like why
03:56 - they're useful so let's say for example
03:58 - we have a problem and I think I should
04:00 - you just need to create a new text file
04:02 - like this or a new file and we want to
04:05 - count and store the count of every
04:08 - letter in a string so I'm gonna say s is
04:10 - equal to hello my name is okay
04:14 - so hello my name is like this and we
04:17 - want to count every letter in here and
04:20 - store it in a list and be able to access
04:22 - like the count of any single number now
04:24 - there's a few ways we can do this but
04:25 - one way is to use a dictionary
04:27 - so if I create a dictionary I said count
04:28 - is equal to a new dictionary it looks
04:30 - like this with two curly braces now I'm
04:32 - gonna loop through s I'm gonna say for L
04:35 - and s and I let's just say like CHR for
04:38 - shark or ice actually f of type char for
04:41 - char in s now all I'm gonna do is let me
04:44 - say if char in counts alright because
04:50 - we're gonna use the each character as a
04:53 - key in the dictionary and then we're
04:55 - going to set the count to be the value
04:57 - when you access that key you'll see what
04:58 - I mean in a second so if chart in counts
05:00 - what we're gonna say is gonna say count
05:03 - char is equal to counts char plus 1 okay
05:10 - let me just say this quickly so that I
05:13 - can run this alright and we'll say else
05:16 - so if our character does not yet exist
05:19 - in our counts well let's create a new
05:21 - count so let's say count and then when I
05:25 - say char is just equal to 1 because
05:27 - we've counted that element at one time
05:29 - so I'm gonna run the program and if I
05:32 - type count you can see that we get h
05:35 - equal to 1 there's II has 2 l2a1 m2y and
05:41 - you can go through and you can see all
05:42 - the counts of each individual letter
05:45 - like this so now again if we want to
05:47 - print the count of each letter well we
05:50 - could loop through and print all the
05:51 - counts or we can say well we want to see
05:53 - how many times I shows up so let's do
05:54 - this
05:54 - count E and how many times that show up
05:59 - well that shows up two times in our
06:03 - count and that's a really useful example
06:05 - of how we can use dictionaries and
06:07 - there's tons and tons of other ways to
06:10 - use them that is really like really
06:12 - efficient ok so that's a really good way
06:14 - to use them and yeah so now let's go
06:17 - through a few more methods of
06:19 - dictionaries and we can see how we can
06:20 - actually loop through them ok so now
06:21 - that I've created this count let's
06:23 - actually just loop through our
06:24 - dictionary and see how that works so I'm
06:26 - gonna say 4 key in counts and let's just
06:32 - print key now you can probably guess
06:35 - what this is going to do but pretty much
06:37 - when we loop
06:38 - through a dictionary so we've created
06:39 - this dictionary counts after we've done
06:41 - this loop what it does is it
06:43 - automatically loops through each key and
06:45 - each key is going to be something like L
06:47 - o M it doesn't loop through the values
06:49 - so if I print this out to the screen you
06:52 - can see that we get hello my name is and
06:54 - those are all the keys in our dictionary
06:56 - because it loops through the keys now if
06:58 - we wanted to loop through not the keys
07:00 - but the values there's two ways we could
07:02 - do this so four key and counts if we
07:05 - wanted to print out the value well it's
07:06 - pretty easy you can just do counts and
07:08 - then key like this and that would simply
07:11 - print out the value because it's
07:12 - corresponding to each key but another
07:14 - way to do this is to change this I'm
07:17 - gonna just change this to I 4 I
07:18 - encounter values like this and what this
07:23 - does is get all of the values in
07:24 - dictionary and now it allows us to loop
07:26 - through it so if we do that now you can
07:29 - see we're getting 1 2 2 1 2 1 and so on
07:32 - like that so it goes through all the
07:33 - different values in our dictionary now
07:35 - if we want to go through each key and
07:38 - each value there is another little
07:41 - method that we can use this really
07:42 - useful to do this and it is items so for
07:44 - I or for key comma I encounter some
07:48 - value we're gonna print key and we're
07:50 - gonna print by and if we print that out
07:52 - you can see that we get H 1 e 2 L 2 o 1
07:56 - M 2 and it goes through and it gives us
07:58 - all of the different counts in our
08:00 - dictionary right and that's really
08:02 - useful ok so now that we've been through
08:05 - those let's go through like removing
08:07 - things from the dictionary and changing
08:08 - things that already exist so you can see
08:11 - here that we've kind of already done up
08:12 - here we said count char well that's
08:15 - equal to whatever the count is of that
08:17 - plus 1 and now that means we actually
08:19 - change the value of the key char
08:21 - whatever that represented - and we added
08:24 - one to it but other ways that we can
08:26 - change this is really simple so we need
08:27 - to say counts and we know that a exists
08:29 - right I understand can't E is equal to
08:32 - 87 and now that means well if this
08:34 - already exists in our dictionary we're
08:36 - gonna replace it if it doesn't we'll add
08:38 - a new element in so if we print or if we
08:41 - run this and then we simply do count
08:46 - you can see that E is now changed to 87
08:50 - now to change a key is a bit different
08:53 - the way we need to do what we need to do
08:55 - if we're going to change the actual
08:56 - value of a key is what we need to store
08:59 - what that key is what the value that key
09:01 - is and then add a new key with that same
09:04 - value and then delete the old key if
09:06 - that makes sense so we want to change e
09:08 - to be like said we didn't want a anymore
09:11 - well what we have to do is figure out
09:13 - whatever the value of County is trying
09:15 - to say the what do you call it V is
09:20 - equal to County okay and now we're gonna
09:23 - del actually we can't tell it yet we're
09:26 - gonna say count Zed like this is equal
09:32 - to V so now we've added in a new key
09:34 - that has the same value as whatever this
09:36 - key has now we can simply do this we'd
09:38 - say del counts eat okay so what we've
09:43 - done here is we've stored the value of
09:45 - whatever is pointing to and that we've
09:46 - changed or we've added a new key into
09:49 - the dictionary which is dead and it's
09:50 - now equal to that value and that we've
09:52 - deleted this so I think this is gonna
09:54 - work but let's just try because we might
09:56 - run into an issue here okay so now we're
09:58 - just gonna do two counts okay so there
10:01 - we go so we have Z is equal to two and
10:03 - we've removed the key key from our
10:06 - dictionary and that's what you do if you
10:08 - wanted to like change a key so does the
10:11 - same value but the key is different all
10:13 - right so I think that is pretty much it
10:16 - for dictionaries there's not much else I
10:18 - could really show you I could say well
10:20 - if you wanted to like remove an item
10:22 - from the dictionary without doing that
10:23 - del this is the way to do that you can
10:25 - say d dot pop and then just put in
10:27 - whatever the key is so if the key was
10:29 - like a then I can put a in there and
10:31 - that would simply remove that whole key
10:33 - from the dictionary anyways I hope you
10:35 - guys learned a bit dictionaries are
10:37 - really useful and there's a lot of
10:39 - applications to using them this has kind
10:40 - of been the basics if you want like a
10:42 - wit more advanced tutorial to showing
10:44 - like some more methods to using
10:45 - dictionaries let me know cuz I'm happy
10:46 - to do that stuff you guys but anyways
10:48 - that's been it for this video if you
10:49 - guys enjoy please make sure you leave a
10:50 - like and subscribe and I will see you
10:52 - again in another video
10:53 - [Music]