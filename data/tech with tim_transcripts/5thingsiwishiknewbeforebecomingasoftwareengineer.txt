00:00 - can you remember the frustration of just
00:02 - learning how to code and writing your
00:03 - first hello world program dealing with
00:06 - errors and bugs that kept you up for
00:07 - hours days or maybe even weeks and just
00:10 - the constant idea that you weren't
00:12 - making any progress and you were stuck
00:14 - not sure where to go next well if that's
00:16 - you then I can definitely relate to that
00:18 - believe it or not when I first started
00:20 - learning how to code I made really slow
00:22 - progress I was constantly frustrated and
00:24 - I just felt like I didn't really know
00:26 - what I was doing or where I was going
00:27 - now for that reason I'm gonna make this
00:29 - video and share with you five things
00:31 - that I wish I knew before I became a
00:34 - software engineer now even though they
00:35 - wouldn't have solved all my problems
00:37 - they would have made this experience so
00:38 - much more pleasurable and allowed me to
00:40 - advance that much faster so with that
00:43 - said let's get into the video and let me
00:44 - tell you about five things I wish I knew
00:46 - before becoming a software engineer tip
00:49 - or Point number zero on this list has to
00:51 - do with resources now there are so many
00:53 - free resources and paid resources out
00:56 - there for learning how to code and you
00:58 - have to quickly figure out what type of
00:59 - me medium and resources work best for
01:02 - you I know for me personally I like to
01:04 - read a lot I prefer to kind of skim
01:06 - through documentation maybe read some
01:08 - simple books I like to just get the
01:10 - information very quickly and experiment
01:12 - with it on my own but I know for a lot
01:14 - of you you prefer video content where
01:15 - you want a nice long textbook or you
01:18 - want a Blog article whatever it is you
01:19 - got to figure out the resource that
01:21 - works for you now if you are like me and
01:22 - you do prefer this written content
01:24 - You're Gonna Love a bunch of the free
01:25 - resources from our video sponsor HubSpot
01:28 - one of the resources that caught my eye
01:30 - was the 50 free coding templates which
01:33 - provides a ton of useful code Snippets
01:34 - that you can copy and paste into your
01:36 - code now this is completely free and
01:39 - this resource gives you things related
01:40 - to CSS effects nav bars buttons
01:43 - transitions really anything you can
01:45 - imagine there's a ton of resources in
01:47 - there and I know for me I love working
01:49 - with these kind of code Snippets and
01:51 - pre-built templates because it lets me
01:52 - get a website up and running really
01:54 - quickly without having to worry about
01:56 - all of the details like CSS which
01:58 - personally I hate writing now I've put
02:00 - the link in the description so you guys
02:01 - can check this out for yourself but
02:03 - HubSpot has a ton of other great
02:05 - resources and you can again check them
02:07 - out from the link in the description
02:08 - completely for free so a massive shout
02:10 - out to HubSpot for making all of these
02:12 - resources free and sponsoring this video
02:14 - now let's move on to our next tip so
02:17 - moving on something I really wish I
02:18 - could go back and tell myself is that
02:20 - the first programming language I learn
02:22 - is not going to be the last now I think
02:24 - a lot of people and especially myself
02:26 - when I was just getting started spent a
02:28 - lot of energy and time focusing on what
02:30 - language we should learn as the first
02:32 - language now as much as that's important
02:34 - and it is worth putting a bit of energy
02:36 - and time into you realize as you get
02:38 - better as a software engineer and just
02:40 - learn a lot of different things that
02:42 - really a language is based on what
02:44 - you're going to be doing with it right
02:45 - it's not like I'm just a python
02:47 - developer or I'm just a JavaScript
02:49 - developer or I only know this language
02:50 - you use different languages based on the
02:53 - type of applications and tasks that
02:54 - you're trying to achieve so rather than
02:56 - saying Hey I want to Learn Python
02:58 - because it's easier I'm going to learn
02:59 - JavaScript script or C plus plus I wish
03:01 - I had focused on what it is that I want
03:03 - to build do I want to build websites do
03:05 - I want to build mobile apps do I want to
03:07 - build I don't know games whatever it is
03:09 - right and then picking the correct
03:10 - language and stack based on that
03:12 - objective I think a lot of people have
03:14 - it the other way around where they pick
03:16 - a language and then they see what they
03:17 - can do with the language as opposed to
03:19 - picking what it is you actually want to
03:21 - make especially as you're getting
03:22 - started and you're really passionate
03:24 - about this and then finding how do I
03:26 - make that what do I need to learn also
03:29 - as you get more experience as a software
03:30 - developer you're going to work with
03:32 - multiple languages you're probably going
03:33 - to get hired on some job where there's
03:34 - going to be languages they use that you
03:36 - don't know and you're gonna have to
03:37 - spend a few weeks learning that language
03:39 - that's totally fine I just wanted to
03:41 - emphasize here it doesn't matter what
03:43 - you start with you can always learn
03:45 - different languages and the important
03:46 - thing is to use the right language for
03:48 - the job and not to be attached to any
03:50 - particular Tech stack or technology now
03:52 - the next thing I wish I knew is that
03:54 - mastering your software engineering
03:56 - tools is almost as important as
03:57 - mastering your problem solving and your
03:59 - program programming language skills now
04:02 - actually as a beginning kind of YouTuber
04:04 - and software engineer I think I made a
04:05 - few mistakes and misguided videos where
04:07 - I talked about things like why you don't
04:09 - need to use an IDE or why it's not that
04:11 - important to master this tool and that
04:13 - was really before I had a lot of
04:14 - experience actually working in a
04:16 - software engineering team now as a
04:18 - developer who writes code pretty much
04:20 - every single day reviews code and sees a
04:22 - lot of Junior developers I can say that
04:24 - it's super important that you're
04:26 - comfortable in the environment that
04:28 - you're working in and you're efficient
04:29 - with various software engineering tools
04:31 - the biggest one that comes to mind is
04:33 - git being really comfortable with Git
04:35 - knowing how to resolve conflicts knowing
04:37 - how to create a pull request knowing how
04:38 - to move commits from different branches
04:40 - there's a lot of stuff that happens when
04:42 - you're working in a large code base and
04:43 - being comfortable with your IDE knowing
04:46 - the different shortcuts and especially
04:47 - understanding things like bash and git
04:49 - commands really comes in handy and saves
04:52 - you a ton of time I can't tell you how
04:54 - many times I've kind of been approached
04:55 - by someone more Junior and they've said
04:57 - hey can you help me with this git issue
04:59 - that's totally fine I'm happy to help
05:01 - them with that but if they had spent
05:02 - maybe an hour watching a git course or
05:04 - going through some more advanced
05:05 - commands that would have saved them you
05:07 - know a ton of time they wouldn't have
05:08 - had to wait for me and they would have
05:09 - just been a lot more efficient so really
05:11 - the thing here is to make sure you are
05:13 - actually learning your software
05:14 - engineering tools you're learning about
05:16 - debuggers you're learning about git and
05:18 - you're placing a bit of an emphasis on
05:19 - that especially when you're trying to
05:21 - work in a team and land some type of job
05:23 - now the next thing I wish I knew was to
05:25 - focus on my coding habits and my coding
05:27 - style much earlier by software
05:30 - development Journey now a lot of people
05:32 - when they're just starting out don't
05:33 - really consider how they're writing code
05:35 - they're just trying to get something
05:36 - done they're just trying to solve a
05:38 - problem and even understand what's going
05:39 - on now that's very understandable and I
05:41 - don't blame anyone for that but I think
05:43 - it's very helpful to also consider the
05:46 - way in which you're writing code and the
05:47 - habits that you're building a lot of
05:49 - people get in the habit especially if
05:51 - they're like competitive programmers of
05:53 - writing really small variable names or
05:55 - not being expressive with their code
05:56 - just solving something as fast as
05:58 - humanly possible
06:00 - now that's great in a competitive
06:01 - programming setting but not when you're
06:03 - actually working in a team you want to
06:05 - be in the habit of writing potentially
06:07 - verbose long and just easy to understand
06:09 - variable names and even things like
06:12 - separating your code out into smaller
06:13 - functions uh kind of condensing some of
06:16 - your nesting levels maybe taking some
06:18 - conditions and putting those inside of a
06:20 - variable there's a lot of very simple
06:22 - things you can do that are really habits
06:24 - you build over time that allow you to
06:26 - write cleaner scalable and just much
06:28 - more expressive and easy to understand
06:29 - code it's very difficult if you've been
06:32 - coding in a certain style for two or
06:33 - three years to all of a sudden go and
06:35 - start writing that really clean code
06:37 - because the habit for you is to write it
06:39 - in the other way so if when you're just
06:41 - getting started you can consider okay
06:42 - how can I write the best code possible
06:44 - how can I be consistent that's the big
06:46 - thing being consistent in whatever style
06:48 - you use that's really going to serve you
06:50 - a lot and when you get into an interview
06:52 - or you get into a team environment where
06:54 - someone's reviewing your code you're not
06:56 - even going to have to think about
06:57 - writing in a different way because the
06:58 - Habit is already built in that you're
07:00 - going to write good code every single
07:02 - time because that's what you do so the
07:04 - next thing I wish I knew is that it's
07:06 - not a competition I think a lot of
07:08 - people and myself included get in this
07:10 - mindset where they're constantly
07:11 - comparing themselves to other people we
07:13 - may watch those videos like how much a
07:15 - software engineer makes right and we say
07:17 - oh that guy's making 200k at Google or
07:19 - that guy's making 250 but I don't even
07:20 - have a job yet or he did that in six
07:22 - months but I've been coding for two
07:24 - years and I still am just a junior
07:25 - developer whatever it may be right we
07:27 - have this constant mentality of looking
07:29 - at other people's success and saying we
07:31 - should be there we should be better than
07:32 - them the reality is that's really just
07:34 - not a helpful mindset it's not really
07:37 - going to get you anywhere and unless
07:38 - that really is like the energy and the
07:40 - passion you're getting for going and
07:41 - learning more stuff I just don't think
07:43 - it's a helpful thing to be doing
07:44 - everyone learns coding at a different
07:46 - pace there's some people that are just
07:48 - naturally very intelligent that can pick
07:50 - it up in a few months and there's some
07:51 - people that it takes two or three years
07:52 - to learn it doesn't matter how long it's
07:55 - taking you what matters is that you're
07:56 - constantly improving and you're doing
07:59 - the best that you pass possibly can
08:00 - right the only person I think you should
08:02 - be comparing yourself to is yourself and
08:04 - saying okay am I doing better than I was
08:06 - yesterday am I actually progressing am I
08:09 - at my capacity that's where a good
08:11 - comparison is to make not against other
08:13 - people that are in a completely
08:14 - different situation than yourself I know
08:16 - it's a lot easier said than done we're
08:18 - all still probably going to do this to
08:20 - some extent but I think as much as
08:21 - possible try to keep the comparison on
08:24 - yourself not on other people I just
08:26 - don't think it's a helpful thing to do
08:27 - all right so my last Point here is meant
08:29 - to be a bit motivational or
08:30 - inspirational but this is that you can
08:32 - really learn anything I think a lot of
08:35 - people especially when they're just
08:36 - beginning programming or getting into a
08:38 - more difficult field they kind of limit
08:40 - what they think they're going to be
08:41 - capable of right they're like oh well I
08:43 - can do python but I think something like
08:44 - C plus that might be a little bit too
08:46 - difficult for me or I don't think I can
08:48 - get into machine learning I just the
08:49 - math is going to be too complicated and
08:51 - they set these kind of limiting beliefs
08:53 - I promise you you can learn anything you
08:56 - want to learn what's going to be
08:58 - different is how long it takes you to
08:59 - learn that I truly believe at this point
09:02 - in time after learning so many different
09:03 - things and spending countless hours
09:05 - literally thousands probably tens of
09:07 - thousands of hours in front of my
09:08 - computer that it doesn't matter what you
09:10 - ask me to build I'll be able to build it
09:12 - doesn't matter what I need to learn I'll
09:14 - be able to learn it it's just gonna take
09:15 - me you know maybe more time than it
09:17 - might take someone else so I think
09:19 - adopting that mindset that you can
09:21 - figure anything out you can learn
09:22 - anything it's just a matter of how long
09:24 - it takes to do that is really really
09:26 - effective and it gives you the
09:27 - confidence to go out there and maybe
09:29 - take a job that you don't already quite
09:31 - know how to do I can't tell you how many
09:33 - times someone's come to me and said hey
09:35 - I need to build this I'm willing to pay
09:36 - you X dollars can you do it I have no
09:39 - idea how to do it but I just say yeah
09:40 - sure I'll figure it out and there we go
09:42 - and I go and I build it right and since
09:43 - I'm getting paid it's that much more
09:45 - motivation to go out there and actually
09:47 - learn this new stack and figure it out
09:49 - there's been all kinds of courses and
09:51 - things that I've wanted to do on YouTube
09:52 - or that you guys have asked me for where
09:54 - I have had no idea anything about it
09:56 - before I started actually producing the
09:58 - course but because I knew I was gonna
10:00 - have to teach it to you guys I had to
10:01 - figure it out go through all the steps
10:03 - do a ton of research and make sure I was
10:05 - confident in what I knew and then
10:06 - presented to you and kind of practice
10:08 - and reinforce all of my learning so
10:10 - anyways I just wanted to leave you with
10:11 - that I promise you guys can learn
10:13 - anything put your mind to it put the
10:15 - time in and you guys will get the
10:17 - results that you need anyways with that
10:19 - said I think I'm gonna wrap up the video
10:21 - here I hope you guys enjoyed if you did
10:23 - leave a like subscribe to the channel
10:25 - and I will see you in the next one
10:29 - foreign
10:31 - [Music]