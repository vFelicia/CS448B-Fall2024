00:02 - [Music]
00:06 - hello everyone and welcome back to their
00:09 - golang tutorial so in this video we're
00:11 - gonna talk about maps
00:12 - now maps allow us to store what's known
00:14 - as key value pairs so a key maps to some
00:18 - value that's why it's called a map so
00:21 - contrasting this to arrays where we had
00:23 - something that looked like you know all
00:25 - these random values the way we access
00:27 - these was by their position in the array
00:29 - so the order in which they occurred and
00:31 - arrays are really good at storing
00:33 - ordered data where the order of these
00:35 - information actually matters or most of
00:37 - the time it does and in fact to access
00:39 - the values we know that the first value
00:41 - we access with index 0 and the last one
00:44 - we would access with the length of the
00:46 - array minus 1 so the positions really
00:48 - matter and that's how we access elements
00:51 - now in some cases we actually don't care
00:53 - about the positions or the indexes we
00:56 - just care about the presence of elements
00:57 - right so we care about some key mapping
00:59 - to some value it doesn't matter what
01:01 - order they're in and in fact a map does
01:03 - not maintain any order so I'll start
01:05 - showing some examples so this makes
01:07 - sense but to create a map this is what
01:09 - we do something like var MP and then we
01:12 - can define the type that we want this
01:14 - map to be so there's a few different
01:15 - ways and I'll go through them we write
01:17 - map we put what type we want the key to
01:20 - be here in this case I'm gonna put
01:21 - string and then we put what type we want
01:24 - the value to be at the end so what this
01:26 - is saying is I'm making a map that has
01:28 - string keys that point to integer values
01:31 - so an example of a string key pointing
01:34 - to an integer value could be something
01:35 - like apples pointing to one maybe
01:38 - signifying that we have one Apple or we
01:40 - want to buy one Apple maybe it's a
01:42 - grocery list or something right whatever
01:43 - but this is an example of a mapping we
01:46 - have the key Apple or Apple's mapping to
01:49 - the value 1 and that's because this is a
01:51 - string and this is an int so the most
01:53 - common way to make maps I guess could be
01:55 - a map literal or I guess a map
01:57 - instantiation or whatever you want to
01:59 - call it but a map literal just means we
02:01 - actually start defining some key values
02:03 - we're gonna have in the map to start so
02:05 - to do that we define VAR m P we can put
02:08 - the type that we want although we don't
02:09 - need to put that there we're actually
02:11 - gonna copy the same thing again
02:13 - and then we're gonna put our curly
02:14 - braces like this and inside of here we
02:17 - can define our mappings so we define key
02:19 - values and of course we can add more
02:21 - things we can delete things from this we
02:22 - can check if things exist but we'll
02:24 - start with a few values just for this
02:26 - example so I'm gonna say actually yeah
02:28 - Apple let's put that at five and let's
02:31 - put pear at six and then let's put
02:34 - orange inside of quotation marks that
02:37 - would be important at nine okay now it
02:40 - is important that you add a comma after
02:42 - your last element unless you're gonna do
02:44 - a newline that's just something in
02:46 - goaling you might see an error so just
02:47 - add the comma at the end it doesn't hurt
02:49 - to do that okay so I'm gonna save this
02:51 - after I go ahead and print out FMT I'm
02:54 - gonna print out MP and just show you
02:56 - what this looks like okay so let's go go
02:59 - run tutorial go let's have a look at our
03:01 - map down in the console here okay so we
03:03 - get Apple orange pear and it gives us
03:05 - the values now one thing I want you to
03:07 - notice immediately is that these was
03:11 - that elements here mappings are not in
03:13 - the same order in which we inserted them
03:15 - that's because a map does not keep track
03:17 - of order whatsoever it just knows that
03:20 - this key references that value it knows
03:23 - if a key exists but it does not keep
03:25 - track of the order in which we insert
03:27 - things so that's something that's
03:28 - important if you care about the order of
03:30 - data then you're not gonna want to be
03:32 - using a map okay so we have apple orange
03:34 - pear that is the map now let's show a
03:37 - few other things I'll show you how to we
03:38 - can make other ways to make maps so
03:41 - another way to make map is to do like
03:42 - something like MP colon equals and then
03:45 - we could set it equal to that literal
03:47 - that we just did here or we could say MP
03:49 - equals make and inside of here we just
03:53 - put map string int now this will make an
03:57 - empty map for us that we could use I
03:59 - can't call as MP again just cuz this
04:01 - one's called MP but this is another way
04:03 - to make a map one of the most common and
04:05 - this makes an empty map so just keep
04:07 - that in mind these are probably the two
04:08 - ways you're gonna use there's a few
04:10 - other ways but if you need that you can
04:11 - look them off they're not that difficult
04:13 - okay so we have the map I'm gonna show
04:16 - you now how we can change values delete
04:17 - values add values so to change and
04:20 - access values what we do is we put MP
04:22 - and then inside of square brackets we
04:25 - put the name of the keyway on axe
04:26 - so if I wanted to access the value of
04:28 - Apple I would say fmt dot println MP at
04:32 - Apple so I usually call this like act or
04:35 - index but like inside of here you just
04:37 - put the key if I put pear that would get
04:39 - me six if I put orange that would give
04:40 - me nine apple will obviously return to
04:43 - be five so let's print this out and see
04:45 - what our output is to make sure I'm not
04:46 - lying
04:47 - and we get five and then the map so that
04:50 - is how you access the values knowing
04:52 - that you can quite easily change the
04:54 - values so I can do something like MP
04:56 - Apple equals nine hundred so what I've
05:00 - done here is I've set MP at the key
05:02 - Apple equal to nine hundred and
05:04 - coincidentally this is the same way that
05:06 - you add new values so let's just run
05:09 - this and I'll show you the change so
05:11 - Apple starts at five we print it out and
05:14 - then you can see that it changes to nine
05:16 - hundred afterwards so that's how you
05:18 - change values now to add values all you
05:20 - have to do is the same thing except
05:22 - you're just putting a key that doesn't
05:23 - already exist so if I put I don't know
05:26 - like some random I don't want to stick
05:28 - with fruit so I should put Tim say MP
05:30 - Tim equals 900 what's gonna happen now
05:32 - if we run this is we will add a new key
05:35 - value Tim 900 so we get that Tim 900
05:39 - when that was pretty easy that's how you
05:41 - add a new value so that's how you update
05:43 - change access and add new values now
05:47 - let's see how we can delete them so to
05:49 - delete a values pretty easy you write
05:51 - the delete function you write the name
05:53 - of the map and then you follow that by
05:55 - the key that you want to delete so I'm
05:57 - gonna put Apple inside of here what this
05:59 - will do is it will check if Apple is
06:01 - inside the map if it is there it will
06:03 - delete it if Apple is not inside the map
06:05 - it just won't do anything it won't
06:07 - delete that key so let's run this now
06:09 - and have a look at what we get and we
06:13 - get nice so we get that key deleted we
06:15 - can see that's different than the one
06:16 - from up above all right so that is the
06:18 - basics on maps I'm gonna show you now a
06:20 - few kind of tricks and things that are
06:22 - useful to do with them so one of the
06:24 - things that you typically want to do
06:25 - with maps is you want to check if a key
06:27 - exists now that's because you don't want
06:29 - to go about accessing that value if the
06:31 - key doesn't exist and sometimes you know
06:34 - you need to do something like if the key
06:35 - doesn't exist add it in like stuff like
06:36 - that so to actually check if a key
06:40 - this inside of a map and to possibly get
06:42 - the value you write an expression that
06:44 - looks like this
06:44 - Val comma okay colon equals MP at the
06:50 - key that you want so in this case I'll
06:51 - put Apple now what this says is if the
06:54 - key Apple exists store the value in Val
06:57 - if it does not make Val whatever the
07:00 - default type is for the type of the map
07:04 - so that in this case it would just be 0
07:05 - because that's the default value for int
07:08 - insect this okay variable to represent
07:10 - whether the key exists or does not so
07:13 - okay will be set to true in the case of
07:16 - Apple because the key app will exist but
07:18 - if I put in here let's say tim-tim does
07:22 - not exist in the map right now so okay
07:23 - would be false and the value would be
07:25 - default 0 so let me show you what I mean
07:28 - FM t dot println val okay so will print
07:33 - those two things out and see what we get
07:34 - when we try to access the key Tim so we
07:37 - see we get 0 false the reason for that
07:39 - is because the default value of int is 0
07:42 - and false tells us that this key was not
07:44 - inside of the map now if I go ahead and
07:47 - change this to Apple let's run this here
07:50 - and we get 5 true because the value 5
07:54 - existed and it's true that that is in
07:57 - there so it's giving us true so that is
07:59 - how you can check if a value is inside
08:00 - of a map now one important thing to say
08:03 - about maps this might go a little bit
08:04 - over some people's heads but I feel like
08:06 - it's important that it says that they
08:08 - access values in a very different way on
08:10 - a lower level than then arrays do so in
08:14 - fact accessing values from a map
08:16 - changing values adding values in a map
08:18 - happens and almost instantaneously
08:20 - doesn't matter how big the map is how
08:22 - many keys are inside of it you can kind
08:24 - of assume that it's gonna happen very
08:26 - quickly very fast almost instantly
08:28 - whereas with arrays we've seen how
08:31 - they're represented lower down in the
08:32 - computer and if I wanted to access
08:34 - values in an array that was like 20,000
08:37 - things long twenty thousand elements
08:38 - long I would actually have to
08:40 - potentially look at all of those
08:42 - elements to grab the element that I want
08:44 - which means typically arrays are going
08:46 - to be slower for certain operations than
08:49 - maps so that just means like only use an
08:52 - array if you actually
08:53 - care about the order in which data is
08:55 - there or you want that kind of structure
08:58 - that array structure with indexes and
08:59 - all of that and same thing with slices
09:01 - so a brazen slices they're pretty well
09:03 - the same in this explanation
09:04 - whereas maps will not store any order
09:07 - whatsoever but they will keep track of a
09:09 - key and a value and it'll make it very
09:12 - fast to access any key and any value so
09:14 - that's the two fundamental differences
09:16 - you'll see if you do any programming
09:18 - problems that maps are used a lot in
09:20 - terms of keeping time complexity pretty
09:22 - simple at what's known as a one-time
09:24 - complex near Big O one I'm trying to
09:27 - think there's anything else I could show
09:29 - you I believe we can get the length of
09:30 - the map by calling the land method let
09:33 - me check that I haven't actually tried
09:34 - this before so let's see if I can do
09:36 - this
09:36 - Len of MP let's see if that tells us how
09:39 - many keys are inside of there so go run
09:41 - tutorial go and we get three so yes we
09:43 - can use the Len of map and that will
09:46 - tell us how many keys are inside of it
09:47 - so I think with that that's all I need
09:49 - to cover for a map I hope you guys
09:51 - enjoyed if you did make sure you leave a
09:52 - like subscribe and I will see you in the
09:54 - next goal and tutorial