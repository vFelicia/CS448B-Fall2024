00:00 - hey guys and welcome back to their
00:02 - django tutorials so in today's video
00:03 - what we'll be doing is talking about
00:05 - logging in and authenticating users I
00:07 - will also show you how we can only
00:09 - restrict pages so that users that are
00:12 - logged in can see them so for example we
00:14 - maybe don't want a user that's not
00:16 - logged in to be able to create a new
00:17 - to-do list or because that probably
00:19 - won't work so how we can do stuff like
00:22 - that
00:22 - and then in the next video we're gonna
00:24 - I'm gonna be doing is talking about
00:25 - creating a custom user model which means
00:27 - that we can add things like all of our
00:30 - to-do lists to a specific user so that
00:32 - each user has their own to-do list and
00:34 - when they go on the website they're
00:35 - gonna see different to-do lists not just
00:37 - all the ones that have been created by
00:38 - any user that's we'll be doing the next
00:40 - one but this one will just be logging in
00:42 - validating and logging out as well so
00:44 - what we actually need to do first of all
00:47 - when we're gonna be logging in and
00:48 - logging out is we need to create those
00:50 - login and logout pages now luckily for
00:53 - us Django actually does a lot of this
00:55 - work for us they have a built in
00:57 - application if I show you in settings
00:59 - top I here that is Django dot contrib
01:03 - dot auth and what this does is it
01:05 - authenticates users so we've done all
01:08 - the hard work of creating new users but
01:10 - now since we've done that Django can
01:12 - actually authenticate those for us so we
01:15 - can use some of the built-in things in
01:16 - this application to do that for us so
01:18 - the first step in what we want to do is
01:21 - we actually want to use some built-in
01:23 - pages that Django's made so they
01:24 - actually have made logout login what
01:28 - does it change password like a ton of
01:30 - different pages like that that we can
01:32 - access simply by linking to them in our
01:34 - URL patterns from our main urls file
01:37 - inside of my site so what I'm gonna do
01:39 - just like I've done to get into my other
01:40 - applications so I'm just gonna say path
01:42 - in this case include but in here I'm
01:45 - gonna say Django dot contrib dot auth
01:50 - dot URLs and I believe that's correct
01:54 - but I will check that quickly to make
01:56 - sure I didn't mess that up yes so that's
01:58 - correct
01:58 - so what this will do now is it'll go to
02:00 - this application
02:01 - it'll look in the urls file there and
02:04 - we'll see if we have a valid URL so if
02:06 - we have login and logout change password
02:08 - create password a bunch of those
02:10 - different pages right now we're just
02:12 - gonna work with login and logout but you
02:13 - know what I mean
02:14 - that's what that'll do for us but the
02:16 - thing is these views if we try to go to
02:20 - them now they actually don't exist so
02:22 - what those templates attempt to do or
02:25 - what the views attempt to do is render a
02:26 - template called login dot HTML logout
02:30 - dot HTML from a specific folder that we
02:33 - need to create so what we actually need
02:35 - to do and it doesn't really matter where
02:37 - we do this but I'm gonna do it from
02:38 - inside of my register application so
02:40 - inside of templates I'm gonna create a
02:42 - new folder and in here I'm gonna call
02:44 - this registration like that now it's
02:48 - important that you spell registration
02:50 - correctly like I just miss felted
02:52 - registration because it's gonna look for
02:54 - this specific folder so we're gonna
02:56 - create a registration folder inside one
02:58 - of our templates folder and then in here
03:00 - we're gonna create a new HTML file and
03:03 - we're gonna call this login dot HTML now
03:06 - this is gonna be where Django will look
03:09 - and what template it will use to render
03:11 - our login form so what we'll do is we'll
03:14 - simply just do what we've done before so
03:16 - we'll start by extends and then in this
03:19 - case main slash based HTML and then
03:24 - we'll add our blocks for our title and
03:25 - for our content so let's do that now Oh
03:27 - block title and then we're gonna say and
03:33 - block like that and then I guess we can
03:38 - do the title we'll just do a login here
03:40 - or something like that and then you know
03:42 - I can just copy this and we'll just
03:45 - change the name to content and now we're
03:48 - just gonna create a nice form in here
03:50 - that will display our form just like
03:52 - we've done probably four or five times
03:54 - by now we'll say form we're gonna say
03:56 - method equals in this case post and then
03:59 - we're going to say class equals in this
04:01 - case form
04:02 - - group now we can't end our form like
04:06 - that and then inside here we'll add our
04:08 - CSS our token and whatever that is CSRF
04:12 - underscore token and we will simply
04:15 - display our form now I want to add this
04:18 - to be a Krispie form so it looks a bit
04:20 - nicer so to do that we'll have to load
04:22 - in our Krispies tags so we'll say load
04:25 - and in this case Krispies under school
04:27 - forms underscored tags I believe that's
04:31 - the correct way to do that
04:32 - you don't have crispy forms installed go
04:34 - back and watch the last video because we
04:36 - did that there and then what we'll do is
04:38 - we'll add a filter here and we'll say as
04:40 - the filter will just say crispy and this
04:43 - will display a nice form for us now we
04:46 - also need to add a button into our form
04:48 - because that doesn't come with it
04:49 - so to do that we'll say button we'll say
04:52 - type equals in this case submit and then
04:56 - I guess we'll say class equals BTN BTN -
05:01 - success and end our button and just say
05:05 - log in now is the name sweet so that
05:09 - should be it for this login form now we
05:11 - actually may want to add one more thing
05:13 - because sometimes you go to a login page
05:14 - it says well rather than logging in like
05:17 - create an account if you don't have one
05:18 - so maybe we'll add that in here quickly
05:20 - just make things look a bit nicer so
05:22 - we'll just add I guess some peat agz
05:24 - I'll just say /p and I'm gonna say don't
05:29 - and account question mark creates one
05:34 - and then I'll add an a tag which will
05:37 - just link to our treat so I believe it
05:40 - was slash register we did was it slash
05:42 - register slash create that was that URL
05:44 - let's check inside uh where is it here
05:49 - register registers the name awesome so
05:51 - let's go back here register and we'll
05:54 - say here and then sloshing sweet so that
05:57 - should I should be it for the login page
05:59 - and now we can actually go ahead and run
06:02 - our server which I already have running
06:04 - and we will see that the login page is
06:06 - actually working so this is the logout
06:07 - page let's go to login and see what we
06:09 - get
06:10 - slash login um oh well if you spell
06:14 - extends incorrectly extends there you go
06:18 - then it won't work now let's try it i
06:21 - refresh this here there we go so now you
06:23 - can see that we actually have a nice
06:25 - login page and this took us all of what
06:28 - six minutes to create so it's pretty
06:30 - straightforward and what will actually
06:31 - happen here is this will properly do our
06:34 - logins and validate users for us so
06:37 - let's try to login this is a valid login
06:39 - right now password one two three four
06:40 - when I click login you can see that it's
06:43 - actually directing me back to the home
06:45 - page now the reason that this is
06:46 - happening is because I actually have
06:49 - something added down here my settings
06:51 - dog pie file that I forgot to like
06:52 - resave that which is telling us to
06:55 - redirect that page but let me just
06:56 - refresh this let me go back to login and
06:59 - do this again because I want to show you
07:00 - what happens if you don't have that you
07:03 - can see that it brings us to this note
07:05 - page not found which is probably what
07:08 - you guys were getting when you're
07:08 - running this now that's because what
07:10 - happens is when we try to log in its
07:13 - gonna automatically attempt to redirect
07:15 - us to a page called accounts slash
07:17 - profile now we obviously haven't created
07:19 - a page or a URL for accounts slash
07:21 - profile so what we need to do is we need
07:24 - to modify where we're gonna go once we
07:26 - log in now the reason was happening for
07:28 - me is cuz I'd done that previously and
07:30 - forgot to save removing it but let's go
07:33 - inside our settings dot PI file inside
07:35 - of our my site and let's add a redirect
07:38 - to let's say the home page whenever we
07:40 - log in so to do this I'm gonna say in
07:43 - this case log in underscore redirects
07:47 - underscore URL equals and in this case
07:50 - you can pick wherever you'd like to go
07:51 - but I'm just gonna do slash standing for
07:54 - obviously the home page so let's do that
07:57 - now let's rerun and try to log in and
08:00 - well we will see that we should be
08:02 - directed directly to the home page once
08:04 - we log in let's do that and you can see
08:06 - we are brought to the home page so
08:07 - that's awesome now I'm just gonna
08:08 - quickly move this up one because I don't
08:11 - like how that looks let's put this P tag
08:14 - just above here and now I want to
08:17 - refresh this and that looks a little bit
08:19 - better to me so sweet that's how we
08:20 - login now let me show you what's
08:22 - actually happening in the backend when
08:24 - or how we can validate if we're logged
08:26 - in or not because right now there's not
08:28 - really any way for us to tell whether or
08:30 - not we're logged in or we're logged out
08:32 - so what I'm gonna do is I'm gonna go
08:34 - actually all the way back into my main
08:37 - application into templates and based on
08:40 - HTML and I'm going to create a thing
08:42 - that essentially only shows our main
08:45 - content body so like this block content
08:48 - if we are logged in otherwise it will
08:52 - tell us to login
08:53 - and I'll leave a link that says login so
08:56 - a way that you can actually tell if a
08:57 - user is logged in or not is by using
09:00 - what's known as user dot is
09:02 - authenticated so I can actually create a
09:04 - code block here and I'm gonna make this
09:06 - an if statement I'm gonna say if user
09:09 - dot is underscore off then dictated them
09:15 - to kated I think I spelled that
09:16 - correctly so what this does is by
09:19 - default whenever you go to a web page in
09:22 - Django it has a user attribute which
09:24 - stands for the current user now if
09:26 - there's no user signed in I believe it
09:29 - defaults to what's known as an anonymous
09:30 - user so if you call user dot is
09:33 - authenticated on the user if it is a
09:36 - valid user that's properly signed into
09:38 - the web page then this will return true
09:40 - if it does not return true then the
09:42 - person is not signed in so essentially I
09:44 - only want to show this content block for
09:47 - all the different pages that I have if
09:49 - where it logged in otherwise I want to
09:51 - ask the user to login or even maybe
09:54 - redirect them to login so what I would
09:57 - do here is now I'm gonna put an else
09:59 - statement that'll say essentially else
10:02 - so if you're not logged in what we'll do
10:05 - is we'll literally just put an a tag and
10:07 - you ought you guys can obviously make
10:08 - this look a lot nicer than I'm going to
10:09 - do and we'll just link it to the login
10:11 - page and we'll say log in here and you
10:17 - can just click this whole thing and
10:19 - that'll you know what actually let's put
10:20 - this in a P tag make it look a little
10:22 - bit nicer slash P and instead of having
10:26 - the whole thing being linked we'll just
10:28 - do login here alright so now we will
10:33 - hopefully redirect to the login page and
10:35 - the last thing I need to do before I
10:36 - forget is just end this gift blocks will
10:38 - say and if and there we go so let's now
10:41 - go back and let me go to home and I
10:44 - don't think I'm currently logged in but
10:46 - we'll see and okay so dish I am
10:48 - currently logged in so what I want to do
10:50 - actually is just log out so log out
10:54 - brings us to this logout page right that
10:56 - just says thank you for logging out this
10:58 - is the default logout page and I'll show
10:59 - ya we can change that in just a second
11:01 - so now let's go back to the web page and
11:03 - let's just go to the home page
11:04 - and you can see that now that I'm
11:06 - logged-in it says login here if I click
11:10 - this oh okay so that is actually an
11:14 - issue so what's happening essentially is
11:16 - when I go to the login page since we're
11:18 - not logged in it's not showing the login
11:19 - page cuz that's the block content so
11:22 - this is probably not the best way to do
11:24 - it but this is how you can tell if
11:26 - someone is authenticated so maybe
11:28 - actually let me remove this yeah because
11:34 - it won't let us login if that is there
11:37 - so we'll remove this for now and just
11:39 - leave it as block content but that shows
11:41 - you guys how you can restrict kind of
11:43 - page access to people that are logged in
11:45 - so obviously on certain pages you might
11:47 - want to add that if statement so that
11:49 - showing different stuff based on if your
11:51 - login or if you're not logged in but
11:53 - that is essentially kind of how you do
11:55 - login and logout I'll really quickly
11:57 - show you how to change the logout page
11:58 - if you'd like to do that so same thing
12:01 - as kind of changing the redirect here
12:03 - for login so all we'll do is we'll just
12:05 - literally copy this and change this to
12:07 - log out underscore redirect URL and then
12:10 - here we can just define whatever page we
12:12 - want to go to when we log out so if you
12:15 - had created a logout template you could
12:17 - go to that you could go to essentially
12:19 - whatever you want but just by doing that
12:21 - I'll just leave it as a home page for
12:22 - now but you know you get the idea so I
12:25 - guess the last thing I'll show you is
12:27 - let's say that you are create some URLs
12:30 - inside of your new application so maybe
12:32 - we go we have a URL we have to create so
12:35 - let's go to the create page for a second
12:36 - I actually want to go to views my
12:39 - apologies if we want to get the user
12:42 - from with within code we don't want it
12:44 - just inside of the HTML file what we can
12:47 - actually do is we can type response dot
12:50 - user now when you do response to a user
12:53 - that will give you the user and you can
12:55 - run dot is authenticated you can get all
12:58 - the attributes of the user like the name
12:59 - the password the email all that stuff
13:01 - directly from the code and then
13:03 - obviously you could pass that into the
13:06 - context of the page or you can do
13:08 - whatever you need to do with it from the
13:09 - backend so I just figured I'd show you
13:11 - how to do that quickly so anyways that
13:13 - has kind of been it for logging in and
13:14 - logging out pretty straightforward in
13:16 - the next video we'll create a custom
13:17 - user model
13:18 - and we'll talk about how we can modify
13:20 - that model to add attributes like all
13:22 - the to-do lists to a specific user so
13:24 - anyways that has been it for this video
13:25 - I hope you guys enjoyed if you did
13:26 - please make sure you leave a like and
13:28 - subscribe and I will see you again in
13:29 - the next one
13:30 - [Music]