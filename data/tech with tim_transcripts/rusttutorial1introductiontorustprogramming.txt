00:02 - [Music]
00:08 - hello everybody and welcome to a brand
00:10 - new tutorial series on this channel
00:12 - where i'm going to be covering the rust
00:14 - programming language now i'm super
00:16 - excited about this series rust is an
00:18 - awesome programming language i've really
00:20 - been enjoying it over the past few days
00:22 - and i think you guys are going to enjoy
00:24 - it as well going through this series now
00:26 - a big shout out to my discord server
00:28 - discord gg
00:29 - twt can join that from the link in the
00:31 - description for actually recommending
00:33 - this video idea and kind of constantly
00:35 - bombarding me about rust because now i'm
00:38 - finally making it they have convinced me
00:39 - i'm gonna go through and teach you the
00:41 - rust language ideally here we're going
00:43 - to have between 15 and 20 videos in this
00:45 - series i'm going to cover everything
00:47 - from the complete basics so setting up
00:49 - your environment to some more advanced
00:51 - rust concepts and show you some of the
00:53 - power of the rust programming language
00:55 - with that said i will quickly mention
00:57 - here that this series is not designed
00:59 - for complete beginners i'm assuming you
01:01 - have some familiarity with programming
01:04 - you've touched programming languages
01:06 - before or at least one before otherwise
01:09 - it will be a little hard to follow along
01:11 - here however if you are a beginner
01:12 - programmer that's fine i'm just assuming
01:14 - you kind of know what a variable is you
01:16 - understand what a command prompt in a
01:18 - terminal is i'm not going to explain all
01:20 - of the super basic stuff that i imagine
01:22 - most of you are familiar with now with
01:24 - that said if you are a complete beginner
01:26 - programmer or you're kind of in the
01:28 - beginner stages and you're looking to
01:29 - get better at programming you can check
01:31 - out my course programming expert dot io
01:33 - you can use discount code tim that is
01:35 - literally the best resource it's
01:37 - interactive and it will teach you how to
01:39 - get up to a software engineering level
01:40 - in programming really as fast as
01:42 - possible so check that out from the link
01:44 - in the description and with that said
01:46 - let's get into the rust language here
01:47 - i'm going to give you a quick intro to
01:49 - the language show you how to set up your
01:51 - environment for mac linux and windows
01:53 - then we'll write and compile our first
01:55 - rust program so as i was saying i'm just
01:57 - going to give you a quick intro here to
01:59 - rust spend a minute or two talking about
02:01 - some of the benefits and features of the
02:03 - language then we'll get into the
02:04 - installation so rust is a statically and
02:07 - strongly typed programming language it's
02:09 - also compiled and what that means is
02:11 - that if you write a rust program you
02:13 - compile it into a binary executable file
02:16 - and that file can be ran by anyone who
02:19 - doesn't actually have rust installed so
02:21 - this differs from something like python
02:23 - or javascript or ruby where you actually
02:25 - need a python interpreter for example on
02:28 - your system to be able to run the code
02:30 - this is different someone does not have
02:32 - to have rust installed to run your rust
02:34 - program assuming they're on the same
02:36 - operating system that you are on when
02:38 - you compiled the program continuing here
02:41 - rust is known as a very fast and
02:43 - reliable programming language it's very
02:45 - good at error handling and catching bugs
02:47 - and a lot of developers use it because
02:49 - it is very efficient like it's a very
02:51 - fast language in terms of execution
02:53 - speed but it also is not extremely
02:55 - difficult to write in the main benefit
02:57 - of rust is that it has a bunch of high
02:59 - level features but it also gives you
03:01 - control of lower level features and code
03:04 - without kind of the difficulty of
03:06 - languages that typically do that like c
03:08 - or c plus plus so really that is why you
03:11 - would use rust you want to make an
03:12 - efficient scalable very fast system of
03:14 - some sort but you don't want to deal
03:16 - with kind of the annoyance of writing
03:18 - code for example in c yet you still want
03:20 - to have the control of those low level
03:22 - features again this is a super high
03:24 - level overview of the language there's a
03:26 - ton of other awesome features and i have
03:28 - a little list here i'm going to read off
03:29 - of some of the things you can make with
03:31 - rust
03:32 - so rust allows you to make command line
03:34 - tools web services devops tools embedded
03:37 - devices or embedded systems
03:40 - cryptocurrency related stuff
03:41 - bioinformatics
03:43 - search engines machine learning and it's
03:45 - actually used in part of the firefox
03:47 - browser if you want to learn more about
03:49 - this language i will link the rust
03:51 - programming language book in the
03:52 - description this is completely free this
03:55 - is the official kind of rust
03:56 - documentation here for getting started
03:58 - and learning some concepts and really
04:00 - what i'm going to be doing in this
04:01 - series is following along with this book
04:04 - and kind of just picking out the more
04:06 - important information and giving you a
04:08 - almost summary or overview of the
04:10 - important topics without getting into
04:11 - all of the super kind of nuanced details
04:13 - that you don't really need to know to
04:15 - quickly pick up the language so if you
04:16 - want kind of a text-based resource here
04:18 - to follow along with go to this book
04:20 - again everything i'm teaching is going
04:22 - to be pretty much directly from here
04:23 - although i'll come up with my own
04:24 - examples and kind of add some more
04:26 - detail to this so with that said that is
04:29 - rust again a great programming language
04:31 - relatively easy to learn at least from
04:33 - my perspective with that said let's get
04:35 - into the setup and start writing some
04:37 - rust code all right so now we're going
04:38 - to move on to installation now there is
04:40 - different steps here for windows mac and
04:42 - linux so just go to the appropriate time
04:45 - stamp in the video player for which
04:47 - operating system uh reflects yours now
04:50 - i'm going to show you windows first so
04:52 - to install rust on windows first of all
04:54 - you can reference this page right here
04:56 - this has all the installation
04:57 - instructions in case for some reason
04:59 - what i'm showing you doesn't work
05:00 - although it should uh anyways what we
05:02 - need to do on windows is go to this page
05:04 - right here i'll leave this direct link
05:06 - in the description and we need to
05:08 - download the graphical installer for
05:10 - rust so we can download rust knit.exe
05:14 - we're going to use the 64-bit version
05:16 - unless for some reason you're on a
05:17 - 32-bit machine although i imagine most
05:20 - of you are on 64-bit so just click on 64
05:22 - if you're unsure anyways you're going to
05:24 - download that uh that is going to give
05:26 - you a program that you can just double
05:27 - click on wherever you download it to so
05:30 - i'm just going to load it up i already
05:31 - do have rust installed but just so you
05:33 - guys can see how to go through this and
05:34 - all you have to do here is hit one so
05:36 - you're gonna proceed with the
05:37 - installation just the default you don't
05:39 - need to mess with anything and then hit
05:41 - enter now i already have this installed
05:43 - so it went very fast uh but for you guys
05:46 - it will install rust and then you should
05:47 - be good to go now there is one more
05:49 - thing on windows however you do need to
05:51 - install and this is going to be the
05:52 - microsoft c plus plus build tools so
05:55 - i'll leave this link in the description
05:57 - go here download the build tools this is
05:59 - the 2019 build tools which is what we
06:01 - want and then when you go through this
06:03 - installer here
06:04 - mine probably looks a little bit
06:06 - different than yours so i'm not actually
06:07 - going to run it but as it says here in
06:10 - the installation documentation you need
06:12 - to make sure that you select c plus plus
06:14 - build tools and the windows 10 sdk as
06:18 - well as the english language pack
06:20 - now i think by default it will install
06:22 - these for you at least that's what it
06:24 - did for me but if for some reason you're
06:25 - having some options you need to select
06:27 - and uh or select from just make sure you
06:29 - select these ones right here so c plus
06:31 - plus build tools windows 10 sdk and the
06:33 - english language pack after that you
06:36 - should be good to go and if you want to
06:37 - test if your installation is working
06:39 - open up your command prompt on windows
06:41 - and just type in rust c and if you get
06:43 - some output from this command then
06:45 - you're all good to go and we can move on
06:47 - to the next step now let me show you the
06:49 - installation on mac alright so i'm now
06:51 - on my mac computer i'm just going to
06:52 - quickly run you through the steps this
06:54 - will be the same on linux as well by the
06:56 - way so i'm on the page for rust
06:58 - installation notice now it's not giving
07:00 - me the windows download buttons because
07:02 - i'm on mac and all i'm going to do here
07:04 - is just copy this now this link will be
07:06 - in the description so if you want to
07:07 - find this command just click this link
07:09 - and what we're going to you're going to
07:11 - do here sorry is open up a terminal
07:13 - window and we're just going to paste
07:14 - this in so i believe i can use command v
07:16 - to paste that if that doesn't work for
07:18 - you then try right clicking on your
07:20 - mouse and it should paste that into your
07:22 - terminal now what you can do here is hit
07:24 - enter and this should actually download
07:26 - the installer for you and run through
07:28 - the rust setup so here we're getting the
07:30 - same thing we got in the windows
07:31 - installation all we need to do is hit
07:34 - one to proceed with the default
07:35 - installation and then hit enter and it
07:38 - should install rust for us now we do
07:40 - also need a c compiler here to be able
07:42 - to run rust on mac however you should
07:45 - have one installed by default and once
07:47 - this is finished i'll show you how we
07:48 - can test the installation to make sure
07:50 - it's working all right so as you can see
07:52 - here rust is now installed however
07:54 - before we can get rust to work we do
07:55 - need to restart our terminal window so
07:58 - i'm just going to close the terminal
07:59 - here i'm just going to open up a new
08:01 - window so let's go new window here and
08:04 - inside of here i'm simply going to type
08:05 - the command rust c now if this command
08:08 - works for you then you have successfully
08:09 - installed rust and you're good to
08:11 - continue on with the video if this did
08:13 - not work then please check the
08:14 - installation documentation again it will
08:16 - be in the description there may be an
08:18 - additional step you need to follow or
08:20 - you may have not actually ran this
08:21 - command correctly with that said that's
08:23 - all that i have for you for the
08:24 - installation now let's actually write
08:26 - some rust code alright so i'm back on my
08:28 - windows machine and i think as i
08:30 - mentioned i'm going to be using sublime
08:31 - text here as my code editor you can use
08:34 - whatever you'd like but this one is free
08:35 - and what i'll be using so you can
08:37 - download this from the link in the
08:38 - description if you want and i have it
08:40 - open here now to start writing our first
08:42 - rust program i'm just going to go here
08:44 - to file new file let me just close this
08:46 - one here and i'm just going to save this
08:48 - file as something that ends in dot rs
08:51 - for now i'm going to go with main.rs and
08:54 - rs is the rust file extension so you
08:56 - need dot rs uh you can call this
08:58 - whatever you want but don't have any
09:00 - spaces in the name and if you wanted to
09:02 - have a space then put an underscore so
09:03 - if you want to do like hello
09:05 - world rather than not do like hello
09:07 - underscore world that's the convention
09:09 - for naming so for now though let's just
09:11 - call this main.rs and now we have a rust
09:14 - file now you should automatically get
09:16 - syntax highlighting for this if you're
09:18 - in vs code you may need to install the
09:19 - rust extension but let's write our first
09:22 - rust program so to do this i'm simply
09:24 - going to say fn standing for function
09:26 - i'm going to write the main function i'm
09:29 - going to put a set of parentheses a set
09:31 - of curly braces like this or brackets
09:33 - whatever you call them and then i'm
09:35 - going to write print ln exclamation
09:38 - point i'm going to put a set of
09:39 - parentheses and inside of here i'm going
09:41 - to put a string that i want to print out
09:43 - now of course we need to do hello world
09:45 - that's what we do for our first programs
09:47 - every time and let me save this file and
09:49 - i've now written my first rus program so
09:52 - i'll quickly break this down for you
09:53 - then i'll show you how we actually run
09:54 - this so fn stands for function we'll get
09:57 - into functions later but the main
09:59 - function is a special function in rust
10:01 - that's going to be executed
10:03 - automatically when you run your rust
10:05 - program so you need to make sure you
10:06 - call this function main it's kind of the
10:08 - entry point of your code and anything
10:10 - inside of here will run
10:12 - immediately now in rust you're supposed
10:15 - to have i believe it is four spaces not
10:18 - tabs for indentation although let me
10:20 - check on that so rust does actually
10:22 - recommend that you have four spaces as
10:24 - opposed to tabs for your indentation
10:26 - level it doesn't matter so long as
10:27 - you're inside of the correct set of
10:29 - parenthesis i'm actually just going to
10:30 - use tabs because they're easier but just
10:32 - wanted to mention in case any of you are
10:34 - wondering four spaces rather than taps
10:36 - continuing here we have print ln now
10:38 - this stands for print line and then we
10:40 - put an exclamation point now the
10:42 - exclamation point actually means that
10:44 - we're running something called a macro
10:46 - i'm not going to get to that for a while
10:48 - but this is different than a function
10:49 - this is actually a rust macro and this
10:52 - is going to take one string argument
10:54 - here that allows us to print this out to
10:56 - the screen so that's really all we're
10:58 - doing we're printing the string hello
10:59 - world to the screen and this is a string
11:01 - because it's surrounded in double
11:03 - quotation marks okay so let me save the
11:06 - program here now that we have our first
11:08 - program we need to know how to run this
11:09 - now the steps will be very similar on
11:11 - mac or windows same with linux we just
11:14 - need to open up a terminal or a command
11:15 - prompt all right so now that you have a
11:17 - terminal or command prompt open what you
11:19 - need to do is get into the directory
11:22 - where your rust code is so first you
11:24 - need to know where you saved it i
11:25 - imagine you guys can figure that out but
11:27 - mine is actually in a folder called rust
11:29 - tutorial which is on my desktop so from
11:32 - my command prompt here i'm going to type
11:33 - cd standing for change directory and i'm
11:36 - going to change into the desktop
11:37 - directory then i'm going to change into
11:39 - the rust tutorial directory and now that
11:41 - i'm here and i type ls you'll see that i
11:44 - see the main.rs file now all of these
11:46 - commands will work on any operating
11:48 - system so you can run them on you know
11:50 - windows mac linux etc now that we're
11:52 - here we can actually run the russ c
11:54 - command which stands for rust compile
11:57 - followed by the name of our file which
11:59 - in this case is main.rs now when we do
12:02 - this what's going to happen is we're
12:03 - going to compile what's known as our
12:04 - source code which is this file right
12:06 - here into an executable binary file
12:09 - which will be executable on the
12:11 - operating system in which we ran this
12:13 - code so if i run this or sorry this
12:15 - command so if i run this command on
12:17 - windows then the executable file i get
12:19 - runs on windows if i do it on mac then
12:21 - it runs on mac if i do it on linux it
12:23 - runs on linux etc and actually i think
12:25 - if you do it on mac it will run on linux
12:28 - or mac and same on linux it'll run on
12:30 - mac and linux anyways let's hit enter
12:32 - here we shouldn't get any output but
12:34 - what should happen if we type ls after
12:36 - this is we should see that we have a
12:39 - main.exe file or just a file called main
12:42 - or main.sh or something along those
12:45 - lines if you're on mac or linux so this
12:47 - is actually the executable binary file
12:50 - and this is what we can give to people
12:51 - if we wanted them to run our rus code
12:53 - without having rust installed so rather
12:56 - than giving them the source code which
12:57 - is in our rs file we give them the exe
13:00 - file and you don't need to worry about
13:01 - this third file right here so now how do
13:03 - we actually run our code well we've just
13:05 - compiled the code now we have the
13:07 - executable file and to do this it's a
13:10 - bit different on each operating system
13:11 - but on windows it's going to be dot
13:14 - backslash and then main dot exe like
13:16 - that when we run that command it should
13:19 - spit out hello world so that's what we
13:20 - have inside of the code here and if
13:23 - you're on mac or linux it's going to be
13:25 - dot the slash is going to be in the
13:26 - other direction and then i believe it's
13:28 - just going to be main i don't think
13:30 - you're going to have a dot exe extension
13:31 - on there so you would just do dot slash
13:33 - main and you should get the same output
13:35 - there in your terminal
13:37 - okay let me just clear this with cls
13:39 - again the command is russ c the name of
13:41 - your source code so main.rs it then
13:44 - gives you some type of executable file
13:46 - you can then run that executable file
13:48 - and there you go you have ran and
13:50 - executed your first rust program now if
13:53 - you are having trouble navigating here
13:54 - in the terminal i will leave a video in
13:56 - the description that shows you some
13:58 - basic terminal commands you do need to
14:00 - be familiar with this to be able to
14:02 - execute your rust code properly and i
14:04 - won't go through explaining all the cd
14:05 - commands so video in the description if
14:07 - you aren't able to follow along with
14:08 - these steps
14:09 - alright so that's really all that i have
14:11 - for you in this first video this is our
14:13 - first rust program we got the
14:15 - installation we are now able to actually
14:17 - run and compile our uh what is it rust
14:20 - code and in case you were confused there
14:22 - again we need to compile first into that
14:24 - executable then we could run the
14:26 - executable and now that we have the
14:28 - executable file we can give that to
14:30 - anyone and regardless of their
14:31 - environment setup well their operating
14:33 - system will matter but other than that
14:35 - they should just be able to run that
14:36 - code so with that said i will wrap up
14:38 - the video here in the next video i'm
14:40 - going to show you some rust command line
14:42 - tools i'm going to show you how to
14:43 - better set up a project then we'll move
14:45 - on to some more rust features some more
14:47 - syntax and look at all the stuff that
14:49 - you'd expect in a programming language
14:51 - if you guys enjoyed make sure to leave a
14:52 - like subscribe to the channel don't
14:54 - forget to check out programmingexpert.io
14:56 - from the link in the description and i
14:58 - will see you in the next one
15:01 - [Music]