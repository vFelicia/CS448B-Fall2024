00:00 - hey guys and welcome back to another
00:02 - Kibby tutorial so quick refresher on
00:04 - what we did last time is we pretty much
00:06 - set up this GUI using the Cavey language
00:09 - now I'm assuming something you probably
00:10 - realize some of the issues we might run
00:12 - into now so for example if I want to
00:14 - click this button or I want to type
00:16 - something in here and I want to get this
00:17 - information how do we do this we knew
00:19 - how to do it from Python code but with
00:21 - Cavey language there's no way for us to
00:24 - reference these variables especially
00:26 - when we want to do something with them
00:27 - logically from our actual Python code so
00:30 - that's what I'm gonna be showing you
00:30 - guys how to do today we're gonna be
00:33 - doing that using something called object
00:34 - properties and then IDs for some of the
00:36 - widgets you can think of it similar to
00:38 - IDs for like CSS classes or like spans
00:42 - and divs like all that stuff okay you
00:44 - know you have class and ID but anyways
00:46 - if you don't know that don't worry I'm
00:47 - gonna be going through how to do it all
00:49 - right now so in the KB language and I
00:52 - just have the same file I have last time
00:54 - again all this code will be up on Tech
00:56 - with Tim net under the kV or Kibby
00:58 - tutorials but what we need to do is we
01:00 - need to set up some variables now these
01:02 - variables are gonna represent something
01:04 - called object properties and we'll talk
01:06 - about what that is a bit later but
01:08 - essentially it's a way for us to access
01:10 - our values from within the class and
01:13 - you'll see how that works but we're
01:14 - gonna do them discuss a name : name and
01:16 - email : email because these are the two
01:19 - pieces of information that I likely want
01:21 - right and I'll be showing how we can
01:23 - actually bind this button to a function
01:25 - as well and all that these are the names
01:27 - we want right we want this text input
01:29 - and we want this text input so we're
01:31 - gonna declare what these are known as
01:32 - our global variables because while
01:34 - they're inside the class so name is
01:36 - gonna point to the ID name and email is
01:38 - gonna point to the ID email now you can
01:41 - make these difference you could make
01:42 - this email 3 it doesn't matter for
01:45 - simplicity I'm gonna make these two
01:46 - names the same ok so what I'm gonna do
01:48 - now is I'm gonna set some IDs for my
01:51 - text inputs so for this text input I'm
01:55 - gonna say the ID is gonna be equal to
01:56 - name and I again see how we have name
01:59 - here that's what you have to put and
02:00 - then for this other text input I'm gonna
02:03 - say ID is you know now just note right
02:06 - if I change this to email like with a
02:08 - bunch of L's this still sustains as
02:10 - email because this is going to point to
02:12 - the
02:13 - d and then we're gonna be able to access
02:14 - this from within our code I know it's
02:17 - weird kind of how that works but you
02:18 - guys will see that in a second ok so
02:20 - that's all I have to do for right now in
02:22 - this kV file I'm just setting IDs for my
02:24 - text inputs so name and email and these
02:27 - reference each other so email is going
02:29 - to reference email name is gonna
02:30 - reference name and you'll see how that
02:31 - works here so what I need to actually do
02:33 - is need to import something of course
02:34 - you got always gotta import stuff to
02:36 - sent essentially we're gonna say from Q
02:38 - dot properties I believe it's a capital
02:41 - P properties maybe one second guys I'll
02:47 - have a look here ok so I believe it's
02:49 - from Kibby dub properties we're gonna
02:51 - import object property I don't know why
02:53 - that wasn't coming out for me it always
02:55 - glitches out I don't know Fanny was key
02:57 - we're gonna do that from Q dot
02:58 - properties import object property when
03:01 - we're gonna do in our class now and I'll
03:02 - explain how all this works but
03:04 - essentially we're going to say name
03:05 - equals object property and then in here
03:08 - we're just gonna put enum and we're just
03:11 - gonna set this up as blank for right now
03:12 - because when we initially create this
03:14 - class so when we build it there will be
03:16 - no actual object property until it reads
03:18 - the kv file and looks at that so we have
03:20 - to initialize it as none to start and
03:22 - then it will be given a value after so
03:25 - say email equals object property none
03:29 - now note write this name and this email
03:32 - need to be the same as what these are so
03:35 - name and email because it was gonna sync
03:37 - up and find each other right so that's
03:39 - how we're gonna do that so for Python
03:42 - for our Python code these are the same
03:44 - for our IDs these are the same okay I
03:47 - hope that makes sense ever okay so we
03:49 - have our object properties now so this
03:51 - should actually be let's just test it
03:53 - and make sure we didn't make any
03:53 - mistakes to get rid of this pass now and
03:56 - see if we're running into any errors or
03:57 - not no okay so everything's working fine
03:59 - so now what do we have to do so I want
04:01 - to now bind this button right that we
04:04 - have here so that when we click it we
04:06 - get the same thing as we got last time
04:08 - and it prints out the text input for our
04:11 - email and our name right so how can we
04:14 - do that well if we remember the property
04:16 - for button to get like what happens when
04:19 - you press it was on underscore press
04:21 - okay so on press is gonna have to link
04:23 - to something now what is that
04:25 - well we need to create a method inside
04:27 - of our grid class here that is gonna be
04:30 - that on press method but we need to call
04:31 - so let's do that
04:33 - we'll say define I'll just call it BTN
04:35 - for button okay and remember we need to
04:37 - give one parameter here which is
04:39 - instance so take self and instance and
04:42 - we need this instance parameter and
04:43 - we'll talk about that in a second
04:45 - actually we might not need that we might
04:49 - not need this instance we'll see okay so
04:51 - we're gonna leave it out for right now
04:52 - because I'm just thinking about
04:53 - something anyways okay so what we're
04:55 - gonna do in here now is we want to get
04:57 - the name we want to get the text for
04:58 - this and we're gonna print that to the
04:59 - screen oh this is actually very
05:00 - straightforward it's exactly what we did
05:02 - last time so let's say name and then s
05:05 - we don't need that we new comma and then
05:07 - name dot txt right and then what we can
05:10 - do is we can say email and then we can
05:14 - say email dot txt or dot txt like that
05:19 - now I know these are not popping up it's
05:21 - because I think to add this self here
05:22 - because we're referencing the variables
05:24 - for the class but these are gonna be
05:26 - class variables which are going to store
05:27 - name and email so we can reference them
05:29 - in here by just doing self dot name text
05:31 - and then self dot email dot txt and
05:33 - let's actually go back now to our kv
05:36 - file and what we're gonna change here
05:38 - now is we're gonna say BTN like this now
05:41 - the thing is we can't just do this
05:43 - because if we do that but it's actually
05:46 - gonna happen is we're gonna look in this
05:48 - entire like file for a function that's
05:53 - called BTN not a method so what we need
05:55 - to do if that happens if we want to look
05:57 - inside here for the method is we
05:59 - actually have to say root BTN now the
06:04 - reason this works is because if you look
06:06 - right the root widget is my grid so for
06:09 - referencing root then we can reference
06:11 - all of the methods and all the
06:13 - attributes that are within that so let's
06:14 - try this and see if it works
06:16 - ok so if I click this you can see it
06:18 - says name email and obviously they're
06:20 - blanks I say hello I let's just do Tim
06:23 - gmail.com
06:24 - submit and you can see now we're getting
06:26 - hello and email Tim at gmail.com and
06:29 - that is working just like we had planned
06:30 - for it to work before right so now
06:32 - obviously if I wanted to clear those
06:34 - very straightforward we can do the same
06:36 - thing we did before self thought
06:38 - dot TX dot txt always do txt equals
06:42 - blank rank I don't know why that
06:44 - happened
06:45 - and it will say self that email a dot
06:47 - dot text equals blank ok and let's run
06:51 - this and just make sure everything's
06:52 - working here so much type hello and I
06:54 - click Submit you can see that it's
06:55 - clearing it now obviously right that's
06:57 - because we linked up this name and this
06:59 - email to be an object property when we
07:02 - read this Cavey file we found name we
07:04 - find found email we look for the IDS in
07:07 - here we linked all those up together so
07:09 - now we can reference our text input with
07:12 - those simple object properties of name
07:14 - and email and that is essentially how
07:16 - you do that obviously when we were
07:18 - calling the button what we did is we
07:20 - just use a root BTN because we're
07:21 - referencing first this widget and then
07:23 - the method button and yes so remember I
07:26 - was saying you had to put instance in
07:27 - here you don't actually have to do that
07:29 - and that's you don't need to know why if
07:31 - we were to do something like this and he
07:32 - said deef define button here then we
07:36 - would have to give it an instance
07:37 - because when we call what do you call it
07:40 - root dot button what's gonna happen is
07:43 - we're gonna pass an instance
07:44 - automatically into this this method that
07:47 - you don't actually see happening right
07:48 - if you know anything about
07:49 - object-oriented programming so I just
07:51 - want to try this and no promises that
07:53 - this is gonna work because I haven't
07:54 - tried this yet but I want to create a
07:56 - method here or sorry a function here and
07:59 - I want to try to call this function
08:01 - instead of this method so if I want to
08:04 - do that I would think you would just do
08:05 - this root you just do BTN right and
08:08 - we'll see if this works
08:10 - let's see name button is not to fund
08:13 - yeah so I think if I do something like
08:15 - cap BTN this might work but I could be
08:18 - wrong my app object has a hatchery
08:20 - button yeah so right it we can't
08:21 - actually do it with this function I
08:23 - thought we were gonna be able to do that
08:24 - but I guess I'm incorrect I assumed we
08:26 - could probably put like define BTN in
08:29 - here and then if we called app BTN that
08:31 - would work um but anyways I've shown you
08:34 - guys now how you're supposed to actually
08:36 - do this with the methods so just fall
08:38 - with that method I just want to test
08:39 - that the other one's gonna work um and
08:41 - yeah so that's essentially been it for
08:42 - this tutorial in the next tutorials we
08:44 - can get into some more advanced stuff
08:45 - this is just showing you because from
08:46 - now on I'm gonna be writing everything
08:48 - in this Cavey file so I want you guys to
08:50 - understand
08:51 - I'm doing why I'm doing it how we can
08:53 - link things up and now we're ready to
08:54 - get into some more advanced things do
08:56 - some more graphic stuff we're gonna do
08:57 - some drawing well maybe make a game you
08:59 - know I'm not sure exactly what's gonna
09:01 - happen but it will be good so if you
09:03 - guys enjoyed the video please make sure
09:04 - you leave a like and subscribe to the
09:05 - channel and I will see you again in the
09:07 - next one
09:08 - [Music]