00:00 - hey guys and welcome back to another
00:01 - Java programming tutorial in today's
00:04 - video we're gonna be going over enums
00:05 - now enums are pretty much a collection
00:08 - of constants that we can reference and
00:11 - then we can do things with those
00:12 - constants and they are pretty cool and
00:14 - just make your code more readable and
00:17 - yeah you guys will see when we go
00:18 - through the video so the first step is
00:20 - to create an enum now to do that is
00:23 - similar to creating a class or an
00:24 - interface or whatever go to your package
00:26 - right-click we're gonna click new and
00:28 - then enum
00:29 - so for you know I'm just gonna name mine
00:31 - hmm actually I'm just gonna name mine
00:34 - level because you'll see why just make
00:36 - sense for this example so again the
00:39 - syntax here is public enum level rather
00:41 - than like class or interface or whatever
00:43 - right so in here is where we're gonna
00:45 - define our constants okay now this is
00:48 - really useful because we don't have to
00:49 - do like public static int whatever like
00:52 - the name like we can literally just type
00:54 - whatever value we want our constant to
00:56 - be and typically it's a string so in my
00:58 - case I'm gonna go for level I'm gonna go
00:59 - in all caps you don't have to go in all
01:01 - caps when I go high medium and low okay
01:05 - now these are the three constants on
01:07 - this store in my level Eitam so we have
01:10 - high medium low and yeah that's
01:12 - literally all I'm gonna do right now for
01:15 - my enum it just means we have three
01:16 - constants that we can reference from
01:17 - level and these the three and obviously
01:20 - you can do as many as you want and just
01:21 - keep going with commas on and I think
01:23 - you can put them on the same line as
01:24 - well it just makes it more readable if
01:25 - you do them like other lines okay so if
01:28 - you have three constants now I'm gonna
01:29 - show you how we can actually use this
01:31 - email and you'll start to understand how
01:33 - it works so to use this enum we have to
01:35 - create a new instance of it so to do
01:37 - this I'm going to say level and we'll
01:39 - say lvl equals new actually I think it's
01:43 - like this it was level dot and yeah so
01:47 - we say high low and medium so Mike
01:49 - Easler just pick a low and I'll put a
01:51 - semicolon and now you can see it's all
01:53 - showing up in different colors and this
01:55 - is working fine so now that we have this
01:58 - as a constant we can do certain things
02:01 - with it right so typically you might
02:03 - want to check what value your constant
02:06 - is so like what value is level so we can
02:08 - obviously use these in an if statement
02:10 - like so so if I said if LVL you
02:14 - equals equals and they're like it's the
02:15 - level dot and it'll start out low I
02:18 - guess and we'll just work our way up to
02:21 - high and you'd say L if our else--if and
02:25 - we'll say lvl equals equals and then
02:29 - level dots and medium okay we'll do
02:33 - something in there and then finally else
02:35 - cuz if it's not lower medium it must be
02:37 - high then we'll just use me here so in
02:39 - this case we'll just say system dot out
02:41 - dot println and we're gonna print level
02:45 - for all of them cuz I want to show what
02:47 - this does okay Oh what the heck did I
02:50 - just do there okay anyways wait now
02:53 - we're just printing level each time and
02:54 - actually we just run this down and see
02:56 - what happens so you see we get low so
02:59 - when we print out level it's simply just
03:01 - gonna print like whatever the constant
03:02 - is that we have and that's because it
03:06 - has a go to string method built-in so we
03:09 - can convert these into a string and I'll
03:10 - show you what I mean by that so pretty
03:12 - much say we wanted to get this cuz right
03:14 - now like it's not a string it's not an
03:16 - int it's not a bullion we don't really
03:17 - know what type it is it's just like in
03:19 - level it gets an enum so to actually get
03:21 - this as a string value if we wanted to
03:23 - do something with it or store it we can
03:24 - use dot to string so if I say string I
03:27 - will say II yen why not why not we'll
03:31 - say is equal to lv l dot to string and
03:35 - that's just going to convert this to a
03:37 - string for us and then we can do all our
03:38 - string operations or whatnot with that
03:40 - alright so let's say get it to a string
03:42 - now another really useful thing that
03:44 - enums is we actually get all the
03:46 - different values of enums and print that
03:48 - to the screen so i do system dot out dot
03:51 - println and I believe the way we do this
03:55 - is your level dot values yes there we
03:59 - are so we go level dot values and if we
04:01 - hit that where we type that in you're
04:03 - gonna see when we run this now it gives
04:05 - us well it is actually giving us an
04:08 - array with the values so when we try to
04:10 - print that we're getting like you know
04:11 - the memory address of it so once we have
04:13 - these values so make sure you're just
04:14 - gonna store this in an array so that we
04:16 - can then iterate through it and print
04:17 - them out what I'm gonna do is we'll sit
04:19 - level array and this is the way you have
04:22 - to do it I will say ARR is equal to and
04:26 - then
04:26 - level values okay so that's working fine
04:29 - so we're going to do now is which is
04:30 - create a quick for loop so and I'll show
04:32 - you how we can loop through all the
04:33 - different values so say for e1 which
04:37 - would be s level level e and then we'll
04:43 - say in ARR what we'll do is we'll simply
04:48 - just print out e okay so system print
04:52 - out e and then we can see all the
04:53 - different constants that we're gonna get
04:55 - so let's go here and you see we get high
04:57 - medium low and then just print slow
04:59 - again just because we're doing this
05:00 - Latif statement here okay and that's how
05:01 - you can loop through all the different
05:03 - values so that's really cool
05:05 - but you might say okay well that's cool
05:07 - Tim but is this really that useful like
05:08 - we just have these constants well
05:10 - there's a few other things that we can
05:11 - do inside of this you know get add some
05:13 - methods and some instructors as well so
05:16 - that these constants actually point to
05:18 - certain values kind of similar to like a
05:20 - hash table or hash map that I showed you
05:22 - before so the way that we can do that is
05:24 - we need to create first of all a
05:27 - variable that's gonna be private so in
05:28 - this case I'm gonna say private and I'll
05:30 - say actually int level lvl Dom okay so
05:37 - this is gonna just be a private value
05:39 - that's just gonna store the value of
05:41 - each of these so like low medium high
05:43 - the value of all these levels so to set
05:46 - this value what we need to do is you
05:48 - need to create a constructor for our
05:50 - edom and you'll see how this works in a
05:52 - second so I'm just gonna say public
05:53 - level int and then num okay and in here
06:00 - what are we getting here remove invalid
06:03 - modifiers legal modifier for you know
06:06 - make it right only private discriminate
06:07 - just do this private sorry my bad
06:10 - private because we're just gonna call it
06:11 - on here you'll see in a second private
06:13 - level internet and we're just gonna say
06:15 - this dot LVO num is equal to num okay
06:20 - there we go so now what I can actually
06:22 - do is you see how these are highlighting
06:24 - in red so since this is a private
06:26 - constructor that means we're gonna
06:27 - define this variable based on what
06:30 - constant we choose for the enum so I'm
06:32 - gonna put brackets here and I'm going to
06:34 - define high as three medium as two and
06:37 - low as one
06:39 - now what this is gonna do is it's gonna
06:41 - keep our same constants of high medium
06:43 - and low but when we create a new
06:44 - constant it's gonna activate this
06:48 - constructor of level and it's gonna set
06:50 - this level num equal to whatever value
06:52 - we put in the bracket search so in this
06:54 - case three two one we could obviously
06:55 - have multiple what do you call
06:58 - parameters here and then we can have
06:59 - multiple arguments here and we can have
07:00 - a ton of different values and yeah so
07:03 - the only issue is since this value is
07:05 - private we're gonna need a way to access
07:07 - it from our main here because that's
07:10 - probably we're gonna want to use it so
07:12 - that means we're gonna have to create a
07:13 - few methods - well change that level mom
07:15 - and to get that level numb so we've done
07:17 - this before but actually I don't think I
07:19 - can do a public and we'll see if we can
07:22 - public gets level and then in here we'll
07:27 - simply return yes this is gonna need to
07:30 - be an int public into get level we'll
07:33 - simply return this LVL num okay yeah so
07:39 - that doesn't work fine I just can't do a
07:40 - public constructor okay so this is just
07:41 - gonna give us the level num if we call
07:43 - get level on our you know okay now to
07:46 - change this I would he call it level num
07:49 - what I'm gonna do is I'm going to do sex
07:52 - LVO and instead of having interior just
07:55 - going to be a void okay and all we're
07:57 - gonna say is this thought allele none is
08:01 - equal to num and then we're gonna put in
08:02 - here in num okay perfect so now what
08:06 - we're doing is we have a way to not only
08:08 - get the level num but to change it so
08:10 - now let's try using this out in our main
08:12 - and see how this works so I'm just gonna
08:14 - get rid of all this stuff because we
08:15 - don't need this for right now so right
08:17 - now we have our level and it's leveled
08:19 - out low so to actually get the value of
08:22 - this level we can use something called
08:24 - get value of or we can use that method
08:27 - that we had here so in this case I'm
08:28 - going to say get level so what I'll do
08:30 - is I'll say system dot out dot println
08:35 - and in here we'll say lvl dot and then
08:39 - what was the thing we were using get
08:41 - level like this so now if we print this
08:43 - out to the screen we should be getting
08:44 - one and indeed we are we're getting
08:47 - so now I want to show you this thing
08:49 - it's called get value of okay
08:51 - and is it its value every get value if
08:54 - I'm not sure we'll see so I'm pretty
08:56 - sure if we do something like this level
08:57 - dot value of yes that is exactly what it
09:00 - is and then we pick our we type in
09:03 - whatever the enum is so in this case we
09:04 - could say hello it's gonna give us let's
09:08 - see what's the issue here okay yeah so
09:13 - the issues I just got to put this in
09:14 - string I just forgot about that so I do
09:15 - the level dot get value of and say I put
09:17 - a string in here so like say someone was
09:18 - typing in and into the computer and they
09:22 - type in a string rain you want to pass
09:23 - this in to get value if we see what's
09:25 - we're actually gonna get is we get low
09:27 - right because that is the value of this
09:29 - string in enum although it's not a
09:32 - string it can like determine that okay
09:34 - so that's what value of is used for I
09:36 - can't really give you any good examples
09:37 - of them because I really know any good
09:38 - examples of using value of but for any
09:41 - of you that might see some use in it I
09:42 - figured I would show it to you so I
09:45 - guess we can do an example now just
09:46 - setting the level just to make sure that
09:48 - all of that is working
09:49 - I say lvl dot set level in this case
09:52 - let's say five and then let's just grab
09:55 - this again actually and we can delete
09:58 - this R up here and now I'm just simply
10:00 - going to print out go lvl dot yeah level
10:05 - and just make sure that everything is
10:06 - changing and working fine and there we
10:08 - go we get the level of five so that is
10:12 - how we can use items pretty much they're
10:14 - used for when you want to have a
10:15 - collection of different constants maybe
10:17 - you want to loop through see what those
10:18 - constants are and it just makes a code
10:20 - kind of readable right because we have
10:21 - level got low and then that low can
10:23 - point to like five to one whatever and
10:26 - that's all stored within our enum right
10:28 - here obviously you can have as many
10:29 - enums as you want and you'll really see
10:31 - the use of them further on in job but
10:33 - when you're creating like larger
10:34 - programs okay so anyways that has been
10:36 - it for this video if you guys enjoyed
10:37 - please make sure you leave a like and
10:39 - subscribe I will see you again in
10:41 - another video
10:42 - [Music]