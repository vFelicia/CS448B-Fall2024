00:00 - hello everybody and welcome back so in
00:03 - today's video i'm gonna be sharing with
00:04 - you
00:05 - five tools slash technologies that you
00:07 - need to know to be an effective software
00:09 - engineer
00:10 - now the reason i'm making this video is
00:12 - because back in the summer i started
00:13 - working for microsoft as a software
00:15 - engineer
00:16 - intern now while i was there i realized
00:18 - really quickly that there was a lot more
00:20 - to software engineering
00:21 - than just knowing how to code i felt
00:23 - pretty confident in my ability
00:25 - problem solving writing code and doing
00:26 - all of that but there was a ton of tools
00:28 - and technologies that i didn't know how
00:30 - to use
00:31 - and that really limited me in my first
00:33 - few weeks i had to pick those things up
00:34 - i was asking a lot of questions
00:36 - and well it would have just been a lot
00:37 - better if i knew those before i started
00:39 - working there
00:40 - so i figured i can make this video kind
00:42 - of share that information with you guys
00:43 - and then maybe you can be ahead when you
00:45 - go to your next job
00:46 - so anyways with that being said let's go
00:48 - ahead and get started and talk about
00:49 - five tools
00:50 - slash technologies that you need to know
00:52 - to be an effective software engineer
01:03 - so i'll start by mentioning that a lot
01:04 - of the tools i'm going to talk about
01:06 - here are pretty broad
01:07 - and there's definitely a lot that you
01:08 - can learn about each of these tools
01:10 - now i just want to make the point that
01:12 - it's not super important that you know
01:13 - everything it's just about having kind
01:15 - of a basic fundamental understanding
01:17 - and being able to understand how that
01:19 - tool works maybe have a conversation
01:21 - with someone about it
01:22 - and just being able to use it with a
01:23 - relative degree of effectiveness now if
01:26 - you're like me
01:26 - you'll probably learn a lot of these
01:28 - tools just by watching youtube videos or
01:30 - looking at other resources
01:31 - and well for me personally i like to
01:33 - keep track of kind of the best videos
01:35 - and resources that i've found
01:36 - so i can visit them later on now this is
01:38 - pretty difficult for me i don't like
01:39 - cluttering my bookmark bar and all of
01:41 - that stuff
01:42 - but fortunately the sponsor of this
01:44 - video which is proteus has a solution
01:46 - for us
01:47 - proteus is a free chrome extension that
01:49 - lets you track your time learning on
01:50 - youtube
01:51 - proteus makes it easy to find
01:52 - interesting and relevant classes that
01:54 - are taught by the best instructors
01:56 - you can filter the proteus library for
01:58 - classes based on skill
01:59 - difficulty and category and if you're
02:01 - the first one to find a great class then
02:03 - feel free to add it to the library
02:04 - yourself
02:06 - proteus lets you set daily learning
02:07 - goals track your learning progress and
02:09 - provides analytics and insights into
02:11 - your educational journey
02:13 - similar to spotify playlists users can
02:14 - package classes together as a course for
02:16 - other students to follow along
02:18 - and learn an entire curriculum proteus
02:20 - also lets you earn hours towards
02:22 - different pro degrees in your topics and
02:23 - fields of interest
02:25 - once you've earned a pro degree you can
02:26 - add it to your linkedin profile and show
02:28 - the time you've spent mastering that
02:29 - topic
02:30 - get started by downloading the free
02:32 - proteus chrome extension from the link
02:34 - in the description
02:34 - but if you're not a chrome user then
02:36 - feel free to check out the proteus web
02:37 - app
02:38 - from proteus.co or again the links in
02:40 - the description
02:44 - so the first and in my opinion the most
02:46 - important tool that you need to know
02:48 - is a version control software or system
02:50 - like git
02:51 - and github now i think this is pretty
02:53 - obvious why you need to know this
02:55 - but if you're working in a team of more
02:56 - than one person so you're not just
02:58 - working alone
02:59 - chances are you're going to be using git
03:01 - or github or some other kind of version
03:03 - control software
03:04 - and you're going to need to sync your
03:05 - local changes so the stuff you're
03:07 - actually writing and developing on your
03:08 - computer
03:09 - with well the company code base or the
03:11 - other person's code base
03:12 - and you're going to need a way to take
03:14 - other people's changes and well update
03:16 - that on your local code base
03:18 - so it's very important that you have a
03:19 - deep understanding of how both
03:21 - git and github work assuming you're
03:24 - using that software
03:25 - and that you can not only perform
03:26 - commands from the command line on your
03:28 - keyboard but you also can use the user
03:30 - interface on the github
03:32 - website now the reason i've separated
03:34 - these two things out is because as many
03:35 - people don't know
03:37 - git and github are two separate things
03:40 - yes they work
03:41 - very closely together they're very
03:42 - deeply integrated
03:44 - but git is kind of the back end actual
03:46 - version control software
03:48 - it's what's running on your computer
03:49 - it's what's checking for changes in your
03:51 - repository
03:52 - it's what's going to do all of kind of
03:54 - the hard lifting when you do say like a
03:55 - rebase command right that's what
03:57 - git will actually do it's kind of more
03:59 - in the back end that's the way i like to
04:01 - describe it
04:02 - whereas github is actually the front-end
04:04 - user interface it's the famous website
04:06 - that we all know about
04:07 - so you need to know how to use both of
04:08 - them you have to know how to use the
04:10 - basic git commands
04:11 - so how do i commit something how do i
04:13 - push something up to the remote
04:14 - repository
04:15 - how do i pull something down what does a
04:17 - rebase command do
04:18 - how do i make a new branch all of these
04:20 - different things and then you also have
04:22 - to know how to use the github website
04:24 - so how do i do a code review okay oh
04:26 - this is how i approve changes
04:28 - this is how i merge something into the
04:30 - branch all of those different things
04:32 - so i think i've gone on on this long
04:34 - enough but the point is that this is
04:36 - very important and really makes sure
04:38 - of all of the tools on the list you have
04:40 - this down and you have a deep
04:42 - understanding of how git
04:43 - and github work so the second thing on
04:45 - my list here is going to be linux
04:47 - commands
04:48 - and generally mac and windows commands
04:50 - as well
04:51 - as a software engineer there's a lot of
04:53 - situations where you are not going to be
04:55 - able to use a graphical user interface
04:57 - and you're going to have to be
04:58 - comfortable navigating a file system
05:00 - using
05:01 - just the command line even if we take an
05:03 - example where you're on windows or on
05:05 - mac
05:06 - there is again many situations where
05:08 - even though you might have a graphical
05:09 - user interface
05:10 - the tool you're interacting with or
05:12 - using is only available from the command
05:15 - line
05:15 - now i'm not saying you have to be an
05:16 - absolute pro and you never use a
05:18 - graphical user interface
05:20 - you just have to know how to navigate a
05:22 - file system
05:23 - how to copy a file move a file edit a
05:26 - file
05:26 - do these basic things that are very
05:28 - common and that you'll have to do a lot
05:30 - if you are ever in the situation where
05:32 - you don't have
05:33 - that graphical user interface or you
05:35 - can't use it for what you're doing
05:37 - now this will be especially important if
05:39 - you're someone who's working on any kind
05:40 - of web development
05:41 - if you're going to be interacting with
05:42 - any servers uh if you're needing to ssh
05:45 - into say a remote machine if you're
05:47 - going to be working with a lot of
05:48 - machine learning related stuff or really
05:50 - specific pieces of technology or
05:52 - programs i can tell you firsthand
05:55 - especially in python
05:56 - there's a lot of stuff that only runs on
05:58 - linux right it just doesn't work on mac
06:00 - or it doesn't work on windows
06:02 - so even having the ability to say boot
06:04 - up a virtual machine
06:06 - and get in and just really quickly kind
06:07 - of spin up in ubuntu box or some kind of
06:10 - linux box
06:11 - and start working on that is really
06:12 - important i can tell you firsthand that
06:14 - microsoft
06:15 - almost all of my co-workers had access
06:18 - to a virtual machine that was running
06:19 - linux
06:20 - and that never had a graphical user
06:22 - interface on it it was simply command
06:24 - line
06:24 - and they would use that when they needed
06:25 - to test really specific proprietary
06:28 - pieces of software and well if they
06:29 - didn't know how to use linux it was
06:30 - going to be a huge pain
06:32 - every time they needed to go in there
06:33 - when they're looking up hey how do i
06:35 - copy a file how do i edit a file how do
06:37 - i save something
06:38 - just some basic things that you should
06:40 - know and i would highly recommend
06:41 - you have a fundamental understanding of
06:43 - how to navigate a file system and
06:45 - perform some basic commands related to
06:47 - permissions
06:48 - on linux mac and windows the third thing
06:51 - i have on my list is
06:53 - using a debugger or i guess we could
06:55 - call this debugging
06:56 - but what i mean by this is understanding
06:58 - how to use a debugging tool
07:00 - and understanding how to go about
07:01 - debugging a complex program
07:04 - now this is really important because in
07:05 - a lot of situations especially if you're
07:07 - working for a company
07:08 - you're going to be dealing with files
07:10 - that have you know tens of thousands of
07:12 - lines where you're going to be dealing
07:13 - with
07:13 - tens of thousands of different files and
07:15 - it's just not going to be viable to be
07:17 - able to use a print
07:19 - debugging kind of style when you're
07:20 - debugging sure you could use that for
07:22 - maybe some small things but you're going
07:24 - to have to know how to use a debugger
07:25 - which means you have to know how to
07:26 - place break points
07:28 - what's stepping over stepping out of and
07:30 - stepping into does
07:31 - and kind of just the general process and
07:33 - strategy of how you debug a program
07:36 - now it's hard for me to give you that
07:37 - strategy because of course that's going
07:39 - to be specific to what you're doing
07:41 - but my point is just that you're going
07:42 - to be working in huge code bases with
07:44 - lots of files
07:45 - lots of lines and just tons of stuff
07:47 - going on so being able to isolate your
07:50 - problem
07:50 - first of all is the most important thing
07:52 - so you have to kind of practice
07:53 - debugging
07:54 - and understand how to use those tools
07:56 - now i do actually have a video on my
07:58 - channel that talks about how to use a
07:59 - debugger it goes through the vs code
08:01 - debugger which most of you might find
08:03 - useful
08:03 - so i will link that down below but i
08:05 - don't think i can talk about this much
08:07 - more
08:07 - it just is important to understand how
08:09 - to debug and you should know how to use
08:10 - a professional debugger
08:12 - to be an effective software engineer so
08:14 - the fourth thing i have on my list here
08:16 - is
08:16 - ide slash ide features now what i mean
08:20 - by this is really just how to set up a
08:21 - coding environment for yourself and how
08:23 - to take advantage of some of the cool
08:25 - features that are in
08:26 - ides now some features i can think of
08:28 - off of the top of my head that i think
08:29 - you should use
08:30 - are things like formatters debuggers
08:33 - find and replace
08:34 - refactor duplicate line just all these
08:37 - kind of different things i think you're
08:38 - getting the point
08:39 - now of course this is important because
08:41 - you want to be as fast as possible when
08:43 - you're writing code and if you can use
08:45 - these cool tools well it's going to be
08:46 - really useful
08:47 - now especially if you're working in a
08:49 - large code base understanding how to
08:51 - navigate a ton of different files
08:53 - and go to say the definitions of
08:55 - different functions or methods or
08:56 - classes
08:57 - is really important so just having a
08:59 - good understanding of the development
09:00 - environment that you're using
09:02 - and being able to take advantage of a
09:04 - lot of these core tools that are
09:05 - involved
09:06 - in these ides is really important now
09:08 - i'll just specify quickly here that i'm
09:11 - not really recommending using an ide if
09:13 - you're just an absolute beginner and
09:14 - you're still
09:15 - learning how to code this is more of a
09:17 - recommendation for people that really
09:18 - want to become software engineers
09:20 - that already have the basics of coding
09:22 - down and that are totally fine with
09:23 - getting a bit of aid from the computer
09:26 - another thing i'll quickly mention here
09:27 - is using a really good intellisense that
09:29 - will save you a significant amount of
09:30 - time
09:31 - and well that's all i can really talk
09:32 - about for this section just know how to
09:34 - use an ide know about the features that
09:36 - are in it and
09:37 - take advantage of them so the last item
09:40 - i have on my list here
09:41 - is networking basics now what i mean by
09:43 - this is just having a really basic
09:45 - understanding of how computers
09:46 - communicate with each other
09:48 - how maybe a distributed system might
09:50 - work why you may need to use say
09:52 - asynchronous programming or multiple
09:54 - threads due to the networking operations
09:56 - that you're using
09:57 - and then of course having an
09:58 - understanding of http protocols
10:00 - and you know maybe the difference
10:01 - between something like a get request and
10:03 - a
10:04 - post request or how you could send those
10:06 - kind of requests or send a response from
10:08 - code
10:09 - now of course there may be a set of
10:11 - software engineers that don't actually
10:12 - need to understand this
10:14 - but i would say in a lot of situations
10:16 - having this knowledge is really good and
10:18 - it just allows you to understand a lot
10:19 - more about what's happening in a system
10:21 - if you have kind of that underlying
10:23 - knowledge and information about how
10:25 - networking actually works
10:27 - again i'm no networking pro you know i
10:29 - can't talk about this a ton
10:31 - but i found especially when i'm writing
10:33 - programs that deal with any kind of
10:34 - networking related thing
10:35 - just having that little bit of knowledge
10:37 - has helped me a ton and made it a lot
10:39 - more clear into why i was writing
10:41 - specific blocks of code you know kind of
10:43 - based on that understanding
10:44 - so with that being said that is all i
10:46 - wanted to share with you so do you guys
10:48 - agree with me did i miss anything are
10:50 - any of these tools something that maybe
10:51 - you don't need to know
10:53 - please do let me know in the comments
10:54 - down below with that being said if you
10:56 - enjoyed make sure you leave a like
10:57 - subscribe to the channel and of course i
10:59 - will see you again in another
11:01 - youtube video