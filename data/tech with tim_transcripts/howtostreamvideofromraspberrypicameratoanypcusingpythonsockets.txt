00:00 - hey guys and welcome back to another
00:01 - Raspberry Pi video now in today's video
00:04 - what I'm gonna be doing is showing you
00:05 - how to stream data using Python sockets
00:08 - so purely with Python code there's
00:11 - nothing else that we need to install on
00:12 - our Raspberry Pi all we need to do is
00:14 - just use this Python code that I'm gonna
00:15 - give you guys so you can view live image
00:18 - data from any machine that you want and
00:20 - it doesn't obviously have to be that
00:22 - Raspberry Pi itself because let's be
00:23 - honest what's the point of just having
00:25 - our Raspberry Pi camera if we can't view
00:27 - it from anywhere else so to do this what
00:30 - you're gonna do is first of all just
00:31 - download the code that I have in the
00:33 - description now this code is written by
00:35 - Raspberry Pi I've done some slight
00:37 - modifications to it to make it work a
00:39 - little bit better but other than that
00:41 - just download that code and it's gonna
00:42 - have what's known as a server script and
00:44 - a client script now before I move too
00:47 - far let me show you guys how this works
00:48 - you can get idea of what we're about to
00:50 - do so I'm just gonna run the server
00:52 - script here which is actually on the
00:53 - machine that's gonna be accepting the
00:55 - image data and then on my Raspberry Pi
00:57 - here I'm gonna run the client script and
01:00 - wait for that to load for one second
01:02 - and now if we just give this client and
01:04 - server a second to connect you can see
01:06 - that we're seeing this live image data
01:08 - from our Raspberry Pi now it's still
01:09 - laying about a second and you can see
01:11 - that it's pretty slow in the FPS I'm
01:14 - gonna talk about why and how you might
01:15 - speed that up and all of that fun stuff
01:17 - in just a second so I don't want to run
01:19 - this anymore so I'm just gonna go to
01:21 - tools cancel build and now let's talk
01:24 - about how to set this up so first of all
01:27 - we're want we want to get on the machine
01:28 - that we're gonna be accepting the image
01:30 - data from so whatever computer this is
01:32 - and you're gonna put the server PI
01:34 - script on it now what we're gonna do is
01:37 - first of all just modify the script a
01:40 - little bit to work for your computer so
01:42 - what we're gonna do is install some
01:44 - Python packages and then figure out what
01:46 - IP address we're gonna use for this
01:47 - server so we're gonna start by doing pip
01:50 - install and now hello and the reason I'm
01:55 - doing this is because I need to install
01:56 - some Python modules that will allow this
01:58 - script to run and the two modules we
02:00 - need our pillow and matplotlib now if
02:03 - you already have these installed go
02:04 - ahead and move forward but you probably
02:06 - don't so go ahead and run this command
02:08 - in your command prompt this stands for a
02:10 - package installer Python I believe or
02:13 - Python installer packages something like
02:15 - that and hit enter if I do that's now I
02:18 - already have this satisfied so it song
02:20 - and do anything but for you guys you
02:21 - should see a little loading bar and it
02:22 - should install that now after this we're
02:24 - gonna do pip install Matt's plot lib and
02:27 - this is what we're gonna use to actually
02:29 - view the image now you can view the
02:31 - image however you'd like for me I found
02:32 - that plot lib was just the easiest so
02:34 - that's what I'm gonna use now once
02:36 - you've done that you should be good to
02:37 - go if you're having issues with your pip
02:39 - and you're getting pip is unrecognized
02:41 - command I'm gonna leave a card to a
02:43 - video in the top right hand corner right
02:44 - now that's gonna show you how to install
02:46 - pip now I know it's gonna look like the
02:48 - wrong video because it talks about Pi
02:50 - game but watch to that video and it
02:51 - shows you how to fix your pip now after
02:54 - you've done that we're gonna type
02:55 - ipconfig in our console here in our
02:58 - command prompt and it should pop up
03:00 - something that looks like this now what
03:02 - we're looking for here is our ipv4
03:05 - address now this is the address or you
03:08 - might have an ipv6 one as well it should
03:11 - look something like this 192.168.1.1
03:14 - five nine except this one five nine
03:16 - it'll be different depending on what
03:18 - computer you're on
03:18 - you might also have one that looks like
03:20 - 10.10 Don something what we're gonna do
03:23 - is just copy this address and we're
03:25 - gonna use this as our server address now
03:28 - this is if we're gonna be working on our
03:29 - local network which means that your
03:31 - Raspberry Pi is on the same network as
03:33 - your computer that's trying to connect
03:35 - to it now if you're not working on your
03:37 - local network what you're gonna do is go
03:39 - to the internet and you're gonna search
03:40 - my IP like that like my public IP
03:43 - whatever it is and I'm gonna take that
03:46 - value and you're gonna use that for the
03:47 - rest of the tutorial I'm not gonna
03:49 - search this because I don't want to get
03:50 - ddosed by you guys but go ahead search
03:53 - my IP address it'll give it to you and
03:54 - then that way you can use that as a
03:56 - server address so you can see that
03:58 - mine's already punched in here but right
04:00 - here we're just gonna put in the server
04:01 - address so where it's a server socket
04:03 - dump bind and that's all we need to do
04:05 - from this computer now time to go over
04:08 - to the Raspberry Pi so let's load that
04:09 - up now so on the Raspberry Pi we are
04:12 - gonna need this um what do you call it
04:15 - this client script that we've downloaded
04:17 - as well so find some way to get it over
04:19 - to the Raspberry Pi however you need to
04:20 - do that and what you're gonna paste that
04:22 - same address that you put on the server
04:24 - script into here now if you're on your
04:27 - local network
04:27 - again it should be something like this
04:29 - so one nine one nine two or like a 10.10
04:32 - or something like that if you're on
04:34 - you're just like Internet in general not
04:37 - local network then it's gonna be some
04:39 - arbitrary number right so now that we've
04:41 - done that it's actually time to start
04:43 - streaming the data it's as easy as that
04:45 - we'll go through how the script works in
04:46 - a second but what you're gonna want to
04:48 - do is go to your main computer so one
04:50 - that's gonna be accepting the images and
04:51 - run the script now to do this you're
04:54 - gonna whatever editor using just run the
04:56 - script so for me it's controlled be
04:57 - gonna wait a second and you shouldn't
05:00 - see any output because we haven't yet
05:02 - connected the Raspberry Pi so this is
05:04 - gonna wait for a connection and just be
05:06 - running in the background idle until
05:07 - eventually we connect so if we go to a
05:11 - Raspberry Pi now and we run this client
05:14 - script so I'm just gonna click f5 to do
05:15 - this now you should see in about a few
05:18 - seconds it connects and it's ready to go
05:20 - so now you can see we're getting some
05:22 - outputs as image is verified which
05:24 - essentially is just telling us that this
05:25 - image is actually working or we're
05:26 - getting it through and then we can see
05:28 - our live feed like this now I'm gonna go
05:31 - through the script and explain to you
05:32 - how it works so you get an idea of how
05:34 - you can modify it and play with it by
05:36 - yourself but that's all you need to do
05:38 - to view the live feed and the great
05:41 - thing with this is all your image data
05:42 - is coming in through Python code which
05:44 - means you can draw things on it you can
05:46 - add things to it you can turn it around
05:47 - you do whatever you want with it rather
05:49 - than getting a live feed from some other
05:51 - kind of you know area right so what I'm
05:54 - gonna do essentially is just walk you
05:56 - guys through this so this first part
05:57 - here is setting up what's known as the
05:59 - socket now a socket is how incoming
06:02 - connections are gonna connect to this
06:04 - machine and essentially what's gonna
06:05 - happen and you need either you need to
06:07 - be on some kind of network obviously for
06:09 - this to work he's gonna set up a port
06:11 - that's looking for connections and then
06:13 - the other script that we have is going
06:14 - to connect to them now once we accept a
06:16 - connection we're gonna create a file
06:18 - object that's readable which means we're
06:21 - gonna look for a file and read it and
06:23 - the other script is actually going to
06:24 - write to a file now what we're gonna do
06:26 - here is just run a while loop that's
06:28 - gonna constantly grab information from
06:30 - this file and that information is going
06:32 - to be our binary image data so what
06:35 - we're gonna do is use this which we're
06:37 - going to use a struct and I'm talking
06:38 - about how this works to essentially
06:39 - unpack our information
06:41 - take it into our code we're gonna make
06:43 - sure that we're actually getting image
06:45 - data and if we're not so if not image
06:47 - data we're gonna break and get out of
06:48 - this while loop we're gonna turn this
06:50 - into bytes io which is just kind of like
06:53 - a streaming thing we're gonna write to
06:57 - this bytes IO which is like a streaming
06:58 - thing the stuff that we read from our
07:01 - connection then what we're gonna do is
07:03 - we're gonna seek the beginning of this
07:05 - stream which is this bytes iostream
07:06 - again I'm not going to talk about this
07:07 - stuff too much we're gonna open up the
07:09 - image that's there and then what we're
07:12 - gonna do is try to display this image
07:14 - using matplotlib and that's what this
07:16 - part does right here now after this
07:18 - we're just printing out to make sure
07:19 - that our image is indeed working and
07:21 - then finally so if we break out of this
07:24 - loop or something goes wrong in this try
07:25 - statement we're just gonna close the
07:27 - connection and close the server and
07:29 - that's how easy this service script is
07:30 - now now over to our Raspberry Pi so if
07:35 - we go to our Raspberry Pi and I'm just
07:36 - gonna make this fullscreen like that
07:40 - will read through this script now we're
07:42 - just gonna import all the stuff at the
07:44 - beginning similar as to before we're
07:45 - gonna set up a socket and we're going to
07:48 - set up the connection so again using our
07:50 - IP address and port 8000 that's just a
07:53 - default port can change that if you'd
07:54 - like and now we're gonna create a file
07:57 - object on our socket essentially but
08:00 - instead of reading we are going to write
08:02 - to it and that's what WB stands for I
08:04 - believe this stands for right bytes now
08:07 - what we're gonna do is try to open up
08:09 - our PI camera and this is where you're
08:10 - gonna set up your resolution and if you
08:12 - need to flip the camera which I've done
08:14 - using a vertical flip you can set your
08:16 - resolution right here so I have mine at
08:17 - 500 by 480 now notice that the smaller
08:21 - your resolution
08:23 - the faster your image is going to come
08:25 - in so if you try to set this at 1080p
08:27 - it's gonna take a lot longer to stream
08:30 - this image data to the other computer
08:31 - because it's essentially sending eight
08:34 - times the bytes at least I'm pretty sure
08:37 - that's what it works out too if you go
08:38 - to 1080p from this or something like
08:40 - that so anyways the smaller your
08:42 - resolution the faster the image you get
08:43 - but obviously the lowest quality now
08:46 - down here what we're gonna do is
08:47 - actually just set up a timer and what we
08:50 - were doing this is because we're only
08:51 - going to run the stream for 60 seconds
08:53 - now if you don't want to
08:55 - on the stream for a limited amount of
08:57 - time which is what I'm doing you can
08:58 - simply remove this line of code right
09:00 - here which says if time time - start is
09:04 - greater than 60 and essentially what
09:06 - this is doing is checking to see if the
09:07 - stream has been running for over 60
09:08 - seconds if it does it just closes it I
09:11 - just have that there to make sure I
09:12 - don't have like the stream infinitely
09:15 - going but again you guys can remove that
09:16 - if you like and change that to be
09:18 - whatever time you want now in here what
09:21 - we're doing is simply writing to a file
09:23 - object which is a bytes stream I'm not
09:26 - gonna talk about how that really works
09:27 - using the continuous capture from our
09:30 - camera and then we're just kind of doing
09:32 - some stuff with the stream here writing
09:34 - it to the connection and then again here
09:36 - if we get any issues we're going to
09:37 - close the connection and close the
09:38 - socket and that is essentially how this
09:41 - works so this is a cool way to stream
09:44 - image data I know that it's not super
09:46 - fast FPS but it's really useful because
09:48 - you get the actual image in Python code
09:50 - which is what a lot of other tutorials
09:52 - don't show you how to do again most of
09:54 - this code is right from the Raspberry Pi
09:56 - documentation I've just modified it
09:58 - slightly like only a few lines really
10:00 - and just kind of walked you guys through
10:02 - it so you understand how this works so
10:03 - with that being said I hope you guys
10:05 - enjoyed this video I hope you can start
10:07 - streaming your Raspberry Pi camera
10:08 - information and I'd be interested to
10:10 - know what you guys are doing with this
10:11 - so let me know in the comment down below