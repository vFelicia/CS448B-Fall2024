00:00 - hey guys welcome back to another Kibby
00:02 - tutorial so in today's video we're gonna
00:04 - be going through something called float
00:05 - layout now float layout is really nice
00:07 - layout as it's meant kind of before
00:09 - better dynamically sized screens and and
00:12 - widgets and layouts and whatnot so the
00:14 - grid layout was nice but there was a few
00:16 - issues with that in terms of resize
00:17 - ability and things might overlap and I'm
00:20 - sure you guys might have found them if
00:21 - you were playing with them so a float
00:23 - layout is really a better layout to use
00:24 - if you're gonna be making this it's
00:26 - gonna run on all different kind of
00:28 - operating systems especially like phones
00:30 - and like Android apps and iPhone apps
00:33 - and whatnot float l√©o it's probably a
00:34 - bit better to use so you can see I've
00:36 - actually deleted everything essentially
00:38 - other than kind of the main aspect of
00:40 - our program made my kv files now empty
00:42 - and we're just gonna get we're going to
00:44 - start right from the beginning and just
00:45 - kind of mess around with float layout so
00:47 - what we need to do when we use float
00:48 - layout is obviously import that's will
00:50 - do qbw x dot float layout and then
00:52 - import float layout now instead of
00:55 - creating a class and doing all that that
00:57 - we did last time let's just return a new
00:59 - flow layout and then that's actually all
01:02 - we need to do from within our Python
01:03 - script and we can move over to our kv
01:05 - file which will be what we're working
01:06 - with for the rest of the video so you
01:09 - can see that right we created a new
01:11 - float layout and that's we're returning
01:12 - if you remember in the last videos I'd
01:15 - had something like this like widgets
01:16 - okay now this is actually what's known
01:19 - as a parent tag now I didn't mention on
01:21 - the last video but this is what it's
01:22 - known as and this is the the parent to
01:25 - whatever any of these properties are
01:27 - gonna be down here right so for example
01:30 - when we assign maybe the size to widgets
01:32 - that means that the entire
01:35 - all of those widgets got resized to fit
01:37 - inside of our container or anything that
01:41 - we put inside of here like a button was
01:43 - applied it was added to our widgets
01:45 - class right so what we're gonna do here
01:48 - is instead of using widgets we can use
01:51 - the like the actual widget that we want
01:53 - to to use or to add to or whatnot so in
01:56 - this case I can literally just type
01:57 - float layout and this means now that
02:00 - whenever I create anything in here it
02:03 - will apply to not only this float layout
02:05 - but any float layout that I create in
02:07 - this program so if for some reason I had
02:09 - like a float layout inside of a float
02:11 - layout
02:13 - everything in that float layout would
02:15 - have the same properties as what's gonna
02:17 - be in this tag and you guys will see
02:18 - that in just a second so what I'm gonna
02:20 - do in here let me create two buttons
02:21 - will do this really basically I'm just
02:24 - gonna make one button that says attacked
02:26 - with and then if you guys can guess what
02:28 - the other button is gonna say if you did
02:31 - not guess it is gonna say Tim all right
02:34 - so tech with and then Tim now this is
02:37 - great but I want to show you what else
02:38 - we can do so just like I created this
02:40 - kind of parent tag for a float layout I
02:42 - can create a parent tag for something
02:44 - like a button so you'll see you guys
02:46 - will see more how this works if you're
02:48 - confused in just a second so button and
02:50 - what I'm gonna do in here is I'm gonna
02:51 - do something like font - size and we'll
02:54 - just 840 and I'll do color and this
02:57 - would be the text color and color is
02:59 - actually in something called RGB a yeah
03:02 - RGB a so red green blue alpha now what
03:05 - this means is that your text properties
03:08 - I believe have to be between the value
03:09 - of negative 1 and 1 someone correct me
03:12 - if I'm wrong on that but I believe it's
03:13 - negative 1 and 1 or 0 and 1 pretty sure
03:16 - negative 101 though so if I want to
03:17 - create like I don't know what this text
03:19 - is gonna give me you'd have to look it
03:20 - up to figure out what these colors
03:21 - actually are I'm just gonna do 0.3 0.6
03:24 - and 0.7 and then I'll just put one as my
03:28 - alpha value because I want this to
03:29 - actually show up now alpha is a little
03:33 - bit different than opacity but I'm not
03:35 - gonna talk about the differences right
03:37 - now okay so anyways this is what we do
03:38 - now since we define these two properties
03:40 - here in button what this means is since
03:42 - this is the parent tag for button all
03:44 - other buttons will have these properties
03:46 - so for example this this button will
03:48 - have a font size of 40 and a color of
03:50 - this and this button will have that as
03:52 - well if I added any other buttons they
03:55 - would as well gain those properties and
03:57 - have access to those properties okay so
03:59 - let's run this now and let's just see
04:02 - what we're actually getting on the
04:03 - screen okay so we're getting a button
04:05 - that fills the entire screen you can see
04:06 - obviously it has a different color
04:08 - now this is obviously not ideal but this
04:10 - is working in terms of what we did so
04:13 - let's close this and let's talk about
04:14 - now how we can actually change the
04:16 - position and the size of these buttons
04:18 - so when we're using float layout the
04:21 - nice thing about it is allows us
04:22 - obviously use dynamic placement so
04:24 - rather than doing something
04:25 - we might have done in previous videos
04:26 - would be like pause and then we give it
04:29 - an XY so maybe like 40 50 we can't do
04:32 - that but what we should do is use
04:34 - something called position underscore
04:38 - hint now what this means is this kind of
04:40 - it's funny how the way they actually
04:42 - we're did it here hinting at what the
04:44 - position will be so this has six what he
04:48 - called keys then you notice that I put
04:49 - these because it's actually it's a
04:51 - dictionary it has the key X Y not width
04:55 - and height it has top bottom so bottom
05:00 - and then it has left and right as well
05:04 - okay so left and right like so okay so
05:08 - XY top bottom left right now these kinda
05:12 - don't work how you might assume you
05:14 - might think you put like actual number
05:15 - here like X : and it's like 50 um no all
05:19 - of these actually take values between 0
05:22 - & 1 and you can kind of think of it as
05:24 - like the degree of maybe X or the degree
05:27 - of Y or how much talk miss you have or
05:30 - how much bottom this you have and we'll
05:32 - talk about how we do this but let's
05:34 - actually let's get rid of a few these
05:35 - tags I just want to use X and top for
05:38 - right now so we'll do X and we'll just
05:40 - retype top and it's better just to show
05:42 - an example so for X again between 0 & 1
05:45 - so let's think about it for a second if
05:47 - I wanted to move my button to the right
05:49 - and this value is between 0 & 1
05:52 - what is the value I'd probably use to
05:54 - move it right well if we know and I
05:57 - don't know if I've actually talked about
05:58 - it the coordinate system in KB starts at
06:01 - the bottom left-hand corner of the
06:02 - screen which means that 0 0 is the
06:04 - bottom left so this is different from a
06:06 - lot of programming languages where the 0
06:09 - 0 is the top left-hand corner right so
06:12 - if I want to move to the right and 0 is
06:14 - the left then I would have to add to the
06:16 - X so I'm gonna do 0.5 here which stands
06:19 - for 50% X which means that I'm going to
06:22 - move 50% to the right which should
06:25 - essentially have me so I'm the bottom
06:27 - left of my button is in the middle of
06:29 - the screen okay so now for top so I want
06:32 - this to be at the very top so again if
06:33 - we're seeing zr0 is at the bottom what
06:35 - would we do to make it go up to the top
06:37 - well we need to add
06:38 - that y-value so I'm gonna put one here
06:40 - and the reason this is gonna work is
06:43 - because the way that the top property
06:44 - works is actually references the what do
06:48 - you call it the top left of our object
06:50 - because for example if I made this one
06:52 - you would think that the bottom
06:53 - left-hand corner of our button would go
06:55 - above the screen that means we wouldn't
06:56 - be able to see the button right but no
06:58 - the way top works is it references the
07:00 - top of our button which is actually nice
07:01 - which allows us just to do one to make
07:03 - go up to the top of the screen so let's
07:04 - just mess with this for now let's run
07:06 - this and I forgot to do this one second
07:10 - so the reason we're still seeing both of
07:11 - them is because I haven't defined a size
07:13 - for our buttons and because I didn't
07:14 - define a size it means they just take up
07:16 - the entire container so what we need to
07:19 - do is need to define the size now a
07:21 - similar thing for size we can do
07:23 - something called sock size pause Wow
07:25 - okay size hint I don't know what I just
07:28 - typed there just completely ignore that
07:30 - size underscore hint and then here we're
07:33 - going to have not a dictionary we're
07:35 - gonna have two values between 0 & 1
07:38 - which is you're gonna stand for the
07:40 - width and the height and again this is
07:41 - gonna be like relatives like a
07:43 - percentage so if I wanted them to be for
07:45 - example 0.3 so 30% width and let's say
07:49 - 50% height this is what I would do and
07:52 - let's just run this and see if we
07:53 - actually if I did this correctly and now
07:55 - you can see that indeed we're getting a
07:57 - well with that 0.3 so 30% of whatever
08:01 - the container it's in so these buttons
08:03 - beside each other would take up 60% of
08:05 - this entire float layout I hope that
08:07 - makes sense and you can see that now our
08:09 - button tech width has moved to start out
08:12 - 50% of the X right and then at the top
08:15 - it's it's all the way at the top so now
08:17 - just notice right away that if I start
08:19 - resizing this window that everything is
08:22 - moving and changing sizes as well and
08:24 - you'll notice that even though the text
08:27 - is getting cut off because of the font
08:28 - size
08:29 - none of these buttons are staying
08:31 - exactly where they are they're not
08:32 - overlapping and this is why we want to
08:33 - use something like a float layout okay
08:36 - so we can do stuff like that so you
08:37 - already can see the major advantage to
08:39 - it so the Sun you do the size hint right
08:41 - so the percentages position hands same
08:43 - thing obviously we can mess with
08:45 - position hit for this other button but
08:47 - what I want to do is talk about how we
08:49 - can actually change properties of the
08:51 - button based on
08:52 - a state so our button has I believe
08:55 - three states and I think one of the
08:58 - states is like normal so like meeting
09:00 - it's just it just they're like it's not
09:02 - being clicked and I believe I have to
09:04 - look actually the other one the other
09:06 - state would be down one of them I think
09:08 - there's another one which is like hover
09:10 - or click or whatnot so down is gonna
09:13 - mean that we're clicking on the button
09:14 - so if we wanted to for example change
09:16 - the text this button when we're clicking
09:18 - on it well what we can actually do is we
09:21 - can do that from within here so let's do
09:23 - it with this Tim button and let's say
09:24 - text is Tim if okay when I say if and
09:29 - then what actually to do is sorry set an
09:31 - ID here something I say ID BTN okay and
09:34 - I say if BTN dot state equals equals
09:39 - normal okay and then what I'm going to
09:42 - say is I'm gonna say Alice and then I'll
09:44 - define the text I want it to be in this
09:45 - case we saved out okay so if it is not
09:48 - in the normal state it's in any other
09:50 - state we're gonna change the text down
09:53 - so now watch what happens so Tim button
09:56 - right here okay so I'm hovering nothing
09:58 - is happening watch what happens when I
10:00 - click you can see that I'm holding down
10:02 - the mouse by the way right now it goes
10:04 - to down it might be hard to see because
10:05 - of the color but it does indeed change
10:08 - now we can use this kind of property to
10:11 - do anything we want for example I can
10:13 - say let's do background color okay and
10:18 - this is gonna be like 0.3 0.4 0.4
10:23 - actually let's try that point five one
10:25 - if BTN state equals equals normal okay
10:33 - if I type normal correctly so now let's
10:36 - watch what happens
10:38 - UFO person unexpected okay maybe we
10:43 - can't do that unless I have to do
10:45 - something like this like these brackets
10:47 - let's see no okay so we actually can't
10:51 - do that but you see what I mean in terms
10:53 - of the text how we can change that
10:54 - property so maybe colors but different
10:56 - we have to do that from inside of our
10:58 - witty code our actual logic but if I
11:01 - change the background color you can see
11:02 - that our background
11:03 - there is indeed changing and obviously
11:05 - when I click on it now it's a little
11:06 - easier to see that it says down so
11:08 - ignore what I just did but essentially
11:10 - you guys get the point now I'll show you
11:11 - quickly how we can we'll just mess
11:12 - around with this a bit kind of show
11:14 - exactly how all this works so for
11:16 - example if you wanted to make R and you
11:18 - know what let's do it with this one so
11:19 - let's do pause underscore hint okay and
11:22 - we'll just do Y and let's give this a Y
11:26 - of like let's say 30% okay and let's
11:30 - just see what this does now so now we
11:31 - give this a y of 30% you can see that
11:33 - now Tim has moved up on the screen 30%
11:36 - now notice that the Y right again it's
11:39 - working from the bottom left so we're
11:41 - gonna draw here 30% where some people
11:44 - might say well this looks like we're
11:45 - drawing from the top left or what not
11:47 - okay so just notice how that works so
11:49 - essentially this is a float layout you
11:52 - can see how nice we can resize things
11:53 - and kind of play with them and they just
11:56 - dynamically change for us and yeah so in
11:59 - the next video where I think I'm going
12:00 - to go through getting touch input will
12:03 - mess with flow a little bit more make
12:04 - like a nicer looking GUI but for now
12:06 - that's gonna be it if you guys enjoyed
12:08 - the video please make sure you like and
12:09 - subscribe and I will see you again in
12:11 - another video
12:11 - [Music]