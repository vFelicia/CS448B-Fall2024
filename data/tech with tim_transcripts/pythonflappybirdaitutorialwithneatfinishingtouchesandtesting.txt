00:00 - and now the last thing we need to do is
00:01 - actually move the burbs which I was
00:03 - gonna do at the beginning but I kind of
00:04 - skipped over so right now we've checked
00:06 - you know if they've collided with things
00:07 - I they're going through the pipes and
00:10 - we're removing it and all that we
00:11 - actually need to move the birds based on
00:13 - their neural network so the thing to
00:15 - think about here is what input are we
00:18 - giving to our neural network well we've
00:20 - already discussed this and we're giving
00:21 - you know the distance between the top
00:24 - pipe and the dystrophy in the bottom
00:25 - pipe as well as the Y position of the
00:26 - bird but what if there's more than one
00:28 - pipe on the screen well this is a
00:30 - problem I ran into and we need to make
00:32 - sure we account for this so essentially
00:34 - we need to check we need to find out
00:36 - which pipe we should actually be looking
00:37 - at if it's the first pipe in this list
00:39 - or if it's the second pipe in the list
00:41 - this list because they'll be at max two
00:43 - pipes at all times so to do this I'm
00:46 - gonna do this kind of weird thing I'm
00:47 - gonna say pipe IND equals zero and now
00:50 - I'm going to check if the Len birds is
00:53 - greater than zero and if it is what I'm
00:56 - gonna do is say if the Len of pipes is
00:58 - greater than one and Bird dot X on up
01:03 - yeah bird X we're gonna say bird birds
01:07 - zero dot X I just need to check this to
01:11 - make sure I don't mess it up
01:13 - is greater than pipes zero dot X plus
01:19 - pipes 0 dot top pipe or pipe top dot get
01:26 - underscore wit then what we're gonna do
01:30 - is say pipe underscore int because one
01:32 - alright so what did I just do here well
01:35 - essentially we're setting the pipe index
01:37 - to be 0 which means the pipe we're
01:38 - actually gonna look at for the what do
01:41 - you call it's the input to our neural
01:42 - network we're seeing if the length of
01:44 - birds is 0 because if it's not we don't
01:45 - mean it's about they're doing this and
01:47 - then we say if the let of pipes is
01:48 - greater than 1 then we're gonna do is
01:49 - just get the first bird in our list
01:52 - exposition now since these expositions
01:54 - are always going to be the same this
01:56 - doesn't matter which bird I get so I'm
01:57 - just using 0 advice if that is greater
02:00 - than pipe 0 dot X plus pipe 0 to pipe
02:03 - top get width which essentially just
02:05 - means if we've passed those pipes then
02:08 - change the pipe that we're looking at to
02:09 - be the second pipe in the list and that
02:11 - is as easy as that
02:13 - to work so now we're gonna do is for all
02:15 - of our birds we're gonna move them so
02:17 - whereas a four X comma bird in
02:20 - enumerates Birds
02:23 - what we're gonna do is create or not
02:26 - create but we're actually going to pass
02:28 - some values to a neural network so the
02:31 - neural network that's associated with
02:32 - this bird
02:33 - get its output value check if that
02:35 - output value is greater than 0.5 and if
02:38 - it is make the bird jump so we'll start
02:40 - by just moving the bird because this is
02:42 - important so we'll say bird dumb move
02:43 - we'll also just set the fitness of our
02:46 - bird give it a little bit of fitness for
02:47 - surviving this long so if it's reached
02:50 - this frame and we're actually running
02:51 - now he needs to get a little bit of
02:53 - fitness because it's moved forward so
02:55 - this is how we actually add Fitness to
02:57 - our bird and encourage it to keep moving
02:58 - forward we're gonna say bird or not bird
03:01 - gonna say GE x dot fitness plus equals
03:06 - zero point one now the reason I'm giving
03:08 - so little Fitness here is because this
03:10 - for loop is gonna run 30 times a second
03:13 - so in theory every second art bird stays
03:15 - alive it's gonna gain one fitness point
03:18 - which means that it's going to encourage
03:20 - the bird to stay alive and not just fly
03:22 - all the way up off the screen or fly all
03:24 - the way down okay so now that we've done
03:25 - that GE x dot fitness plus equals one we
03:28 - need to create or actually activate a
03:30 - neural network with our input so what
03:32 - I'm gonna say here is output which is
03:34 - gonna hold the value of the output from
03:36 - a neural network is neat dot isn't it -
03:40 - no it's not sorry it's net and then this
03:43 - is gonna be X dot activate in this case
03:48 - now we need to pass it up with all our
03:49 - inputs we're gonna say bird dot Y which
03:52 - is the first information that we need
03:54 - and now what we're gonna do is actually
03:56 - find the distance but in the Y between
03:58 - the top pipe and the bird so the way
04:00 - that we do that is we're gonna take the
04:01 - absolute value of bird Y - pypes pype
04:06 - underscore ind dot I guess in this case
04:10 - it is height which gonna is gonna stand
04:12 - for exactly where our pipe is on the top
04:15 - of the screen then we're gonna do
04:17 - another comma here we're gonna say abs
04:20 - of bird lime - pipes pipe underscore IND
04:26 - bottom and this bottom is the Y position
04:29 - of the bottom pipe and since we're doing
04:30 - absolute value it doesn't matter what
04:32 - way we subtract these we'll still get
04:34 - the correct value here okay awesome so
04:36 - we have that and now what we need to is
04:38 - actually look at this output and see if
04:40 - it's greater than 0.5 so we're gonna say
04:41 - if output is greater than 0.5 then we'll
04:45 - say bird dot jump like that okay so that
04:50 - should be moving our birds there's
04:52 - definitely a few things I forgot here I
04:54 - think one that I want to check here is
04:56 - if our bird reaches the top of the
04:59 - screen I want it to not survive as well
05:02 - because there'll be some birds that just
05:04 - jump every time and they'll actually be
05:06 - able to get like above the screen over
05:08 - the pipes and they'll never die so what
05:10 - I'm gonna do here is check if bird Y
05:12 - essentially is higher than 0 or less
05:15 - than 0 so I'll say or bird Y is less
05:19 - than 0 okay so now that we've done that
05:23 - I'm just gonna read through this program
05:25 - quickly because there's definitely
05:26 - things that I forgot and that we need to
05:27 - fix once we'll fix those we'll start
05:29 - testing this and then will pretty much
05:30 - be done with this program all right so
05:32 - I'm back and there's a bunch errors we
05:34 - need to fix things that I forgot like I
05:36 - mentioned first thing we're gonna get
05:38 - rid of this main function call here cuz
05:39 - we don't need that we're also gonna get
05:41 - rid of piking duck quit and quit I'm
05:43 - just gonna copy this and what I'm gonna
05:45 - do is instead of having it here I'm
05:46 - actually just gonna paste it right where
05:48 - we have this quit event and this way if
05:51 - we click the red X button rather than
05:53 - just breaking this loop because you know
05:55 - we're gonna call this function up to 50
05:57 - times then we're actually just gonna
05:59 - quit the game which is what we want to
06:01 - do all right so now that we're at the
06:03 - top of this let's start going through
06:05 - the errors so the first one here is we
06:06 - need to change this for loop to be
06:08 - underscore comma G in genomes now the
06:11 - reason we need to do this is because
06:13 - genomes is actually a tupple that has
06:16 - the genome ID so like one as well as the
06:20 - genome object now obviously we just care
06:23 - about the genome object so we need to
06:25 - loop through it like this so underscore
06:27 - G in genomes so we don't get any errors
06:29 - next thing which is coincidentally the
06:32 - next line down we need to add a dot
06:34 - create here I don't know why I forgot
06:36 - that but essentially feed-forward
06:37 - network dot create
06:39 - that's the method to actually make it
06:41 - where I was running into some issues
06:43 - when I tried to test that and let's keep
06:45 - going because there's some more things
06:46 - need to do alright so next if the line
06:50 - of birds is greater than zero if it's
06:53 - not greater than zero which means that
06:55 - we have no birds less left I want to
06:57 - quit this generation or quit running the
06:59 - game so to do that I'm just gonna type
07:01 - brake I'll type run equals false as well
07:04 - as brake just as like a fail-safe but
07:06 - anyways this means essentially if
07:08 - there's no birds left we're gonna quit
07:10 - the game it's what this else statement
07:12 - stands for I just works well as well
07:13 - with this you know pipe Ind thing that
07:15 - we have alright so next thing I need to
07:17 - change output here when we're comparing
07:19 - against 0.5 to be able to put 0 because
07:22 - output is actually a list which means
07:25 - that you know we're gonna get all of the
07:27 - output neurons in a list of the value of
07:29 - those output neurons in this case we
07:31 - only have one output neuron for our
07:32 - examples so we can just do output 0 but
07:35 - in some examples you'd have more than
07:36 - one output neuron and then you'd have to
07:37 - check you know 1 2 3 all the different
07:39 - values alright so that's pretty good I'm
07:44 - trying to remember what else oh this
07:46 - here we need to actually draw all of the
07:49 - birds which we weren't doing which means
07:51 - instead of having bird here we're gonna
07:53 - pass Birds and then what we're gonna do
07:55 - is go into our draw loop here and say
07:58 - instead of just drunk bird we're gonna
07:59 - say 4 birds in our sorry 4 bird in birds
08:06 - and then we're gonna change this
08:07 - parameter to say birds okay so that is I
08:11 - think everything that we need to do now
08:15 - I'm gonna run this and I did this on
08:17 - purpose but you guys gonna see what
08:20 - happens and I think some of you're gonna
08:21 - be kind of a surprise I've already ran
08:23 - this once but let's let's just run this
08:25 - and I'll show you what happens so here
08:28 - we go we have all our birds and
08:30 - surprisingly these birds seem to be
08:33 - doing pretty well on one generation how
08:39 - does that work why we haven't done any
08:41 - training this is generation zero these
08:43 - are all random neural networks why are
08:45 - these guys performing so well well it so
08:49 - happens that in with such a simple game
08:52 - and such a simple
08:53 - network which this is by generating a
08:56 - hundred birds to start we actually kind
08:59 - of come up with almost every possible
09:01 - neural network for this game and just by
09:04 - chance we've actually created two birds
09:06 - here that are doing phenomenally well
09:09 - and it looks like at this rate they're
09:10 - not actually gonna die so this isn't
09:13 - very efficient for most games to just
09:15 - randomly generate a ton and see which
09:17 - ones work well but let's let's just you
09:20 - know for this example it worked to do a
09:22 - ton of birds but let's bump this down to
09:24 - fifty and see if we got any significant
09:26 - changes in performance here and I have a
09:28 - feeling we will alright so this bird is
09:32 - doing okay I think he might run into a
09:34 - pipe though again still he's not he's
09:37 - not hitting anything which is really
09:39 - surprising me that these guys are doing
09:40 - so well okay so I'm gonna bump this down
09:43 - now to twenty because I guess we got
09:44 - lucky and those guys just worked well
09:46 - but let's see what we get now and this
09:50 - guy's going maybe he'll hit a pipe
09:52 - though or and crap out we'll see okay so
09:55 - he hit a pipe so there you go you can
09:56 - see when we generate twenty Birds now we
09:59 - don't get quite as lucky and now we
10:01 - still have to we have to actually go
10:02 - through the process of neuro evolution
10:04 - where before if we generate a ton of
10:06 - different birds
10:07 - we just we kind of get lucky and we
10:09 - generate one that does very well so
10:11 - that's what I wanted to show and you can
10:12 - see that here we're actually running on
10:14 - generation three and you can see kind of
10:16 - the stats popping up here too and this
10:18 - guy's pretty much perfect now now I want
10:22 - I encourage you guys to change and mess
10:24 - around with the fitness functions for
10:25 - this project and see how much worse and
10:27 - better your bird gets and notice that
10:29 - even just very slight changes to the
10:31 - fitness function will change how well
10:33 - this bird does exponentially now the
10:37 - last few things I want to show are kind
10:40 - of talked about this which is actually
10:41 - the statistics involved with this
10:43 - so what's popping up and what we're
10:45 - actually watching as well as how to save
10:46 - this guy so that we can use him
10:48 - immediately rather than having to always
10:50 - train this AI to play the game but after
10:52 - that we're pretty much gonna be done
10:54 - this tutorial series so let's look at
10:56 - some of the stats here so we can see
10:58 - that what we get as a populations
10:59 - average Fitness the standard deviation
11:01 - which I hope you guys know that others
11:02 - I'm not gonna explain it best fitness
11:05 - which is the best bit
11:06 - of that generation the size which is
11:08 - just I guess actually I don't know what
11:10 - size is I think it's like the amount of
11:12 - species maybe I don't know um average
11:15 - adjusted Fitness mean genetic distance
11:18 - honestly don't know what that is
11:20 - population of 20 members in one species
11:23 - it tells you the size the age so how
11:25 - long that species has existed as well as
11:27 - their adjusted fitness and there's
11:28 - stagnation I guess and then you know it
11:31 - tells you how long it took to run
11:32 - generation now let's say in theory that
11:35 - you wanted to run these generations
11:37 - extremely quickly well you wouldn't
11:39 - actually draw the pygame frame and you
11:42 - wouldn't take at 30 seconds what you
11:44 - would do is you would change that so
11:45 - that it runs as fast as possible because
11:47 - right now we're actually just like
11:48 - watching this guy run but in theory we
11:50 - can do all these calculations and just
11:52 - kind of simulate without actually
11:53 - rendering to the screen all of this
11:56 - stuff so that's just something important
11:57 - to note now obviously you know like
11:58 - after three generations this guy's
12:00 - running phenomenally well which really
12:03 - is honestly I'm blowing my mind that's
12:05 - running this well maybe just for the
12:07 - video it's doing that well I don't know
12:08 - so I'll run again and see you know if
12:11 - this will take longer but I guess it
12:13 - just figures it out pretty quickly
12:14 - because we have a very good fitness
12:16 - function for selecting the best birds
12:18 - and that's really important and I'll
12:19 - show you I guess you know if we change
12:21 - and we get rid of removing fitness for
12:23 - hitting a pipe and all of that then
12:27 - let's see what let's see if this makes
12:28 - any difference whatsoever so if we don't
12:31 - remove any fitness for hitting a pipe
12:32 - we'll give these guys a second to see if
12:34 - they say crap out or not why are these
12:38 - pipes staying so high make one go low
12:40 - then you can see that it doesn't do as
12:42 - well at least well if first generation
12:44 - was always random but then after that we
12:46 - can see these guys still do surprisingly
12:48 - well I want to see if any of them hit
12:49 - the pipe so there's one that hits the
12:50 - pipe anyways you guys you kind of get
12:53 - the point you can mess with the fitness
12:54 - you can see how it goes let's add one
12:55 - more thing to this where we actually
12:57 - draw the generation and the amount of
12:59 - alive birds so what I'm gonna do is just
13:01 - put another parameter in here called Gen
13:04 - and we'll just draw the generation as
13:07 - well onto the screen so that we can see
13:08 - that so let's copy this text for score
13:11 - and let's do text equals stat font
13:14 - instead of doing this we're gonna do Gen
13:16 - 4 generate
13:17 - and string Jen and let's just change the
13:21 - position here so that we are drawing it
13:23 - at like 1010 I guess so do 10 10 as our
13:29 - position for the text and then we need
13:31 - to obviously pass a generation so that
13:32 - also means that we need to keep track of
13:34 - a generation so every time that we run
13:37 - this main loop will increment generation
13:39 - which I guess is gonna have to be a
13:40 - global variable so to do that we'll just
13:44 - keep track up Jen up here this is a bad
13:48 - way to do everything by the way guys but
13:49 - it's it's fine for this purposes this is
13:52 - just you know to see something so I'm
13:54 - gonna say global Jen then what I'm gonna
13:58 - do is every time we run this I'm gonna
14:01 - say Jen plus equals 1
14:05 - okay so Jen plus equals 1 and then we'll
14:08 - pass generation where do we have this
14:12 - loop here in here so that we actually
14:13 - can draw it okay so let's run this now
14:16 - and see if we get generation so there we
14:18 - go we have generation 1 happening right
14:19 - now let's see if these guys die there
14:22 - we're on generation 2 and then you could
14:23 - also draw if you want to see the amount
14:25 - of birds that are currently alive all
14:27 - right so I guess the last thing to
14:28 - mention here and I talked about it
14:29 - briefly at the beginning is saving the
14:31 - best bird and actually using that bird
14:33 - now unfortunately I'm not actually gonna
14:36 - do that in this tutorial series because
14:37 - I was just kind of thinking about it and
14:39 - realizing that it's gonna take another
14:41 - like one or two videos to do that and I
14:43 - really don't want to do more videos in
14:45 - this series especially because we now
14:47 - kind of just wrapped it up and I feel
14:48 - like those problem oast people probably
14:49 - gonna watch them anyways but I'll give
14:52 - you some hints if you are interested in
14:53 - doing that on how you can be be able to
14:55 - so that you're not completely stuck if
14:57 - you want to so essentially there's a
14:58 - module in Python called pickle you can
15:00 - import it really easily just import
15:02 - pickle you don't need to install it or
15:04 - anything and what you can do is just
15:06 - save this object so save this winner
15:09 - object because this is gonna return to
15:11 - you the best genome whenever this stops
15:14 - running so whenever you meet the fitness
15:16 - threshold it's gonna be returned here to
15:18 - winner
15:18 - you can pickle that and save that as a
15:21 - file and then you can load that file in
15:24 - and use that neural network associated
15:26 - with that genome to move the bird up and
15:28 - down now you
15:30 - so need to change or create a new
15:32 - function like this that only runs the
15:34 - bird once there only runs one bird right
15:38 - or you just pass in like only one genome
15:40 - and it just runs through and use that
15:42 - uses that neural network now if you need
15:45 - to be able to actually break out of this
15:47 - wildly because what's gonna happen
15:49 - eventually is while you're training the
15:51 - birds you're gonna get one that's that's
15:53 - as good as it can get right like it's
15:55 - never gonna lose so you need some way to
15:57 - eventually actually be able to get this
15:58 - winner thing here so the way that you do
16:01 - that is you check the score and once the
16:04 - score meet just our reaches a certain
16:06 - threshold you can just break out of this
16:08 - while loop and then that genome will be
16:11 - at the fitness threshold so it'll stop
16:12 - running and it'll be returned to winner
16:14 - so what I do whenever I want to stop
16:16 - running after a while is I just say if
16:17 - score is greater than fifty brink now
16:21 - that's as easy as it is and when you do
16:23 - this once you reach a score up greater
16:25 - than fifty then you'll have a bird
16:26 - that's meets the fitness threshold it'll
16:29 - quit it'll be returned to winner you can
16:30 - pickle it save it and then you can use
16:32 - the neural network associated with that
16:34 - bird to just draw one bird on the screen
16:36 - and set up like a hundred and just have
16:38 - it run through and play the game and
16:39 - that's how you would do that pretty
16:41 - straightforward if you follow along
16:42 - through all this you should be capable
16:44 - of doing that and finally with that
16:46 - being said you guys enjoyed this video
16:48 - please please please give a massive
16:50 - thumbs up it's taking a really long time
16:52 - to make this tutorial series ivory
16:53 - recorded a few episodes just to make
16:55 - sure that everything is clear and works
16:57 - well and please if you are not
16:59 - subscribed to the channel seriously
17:00 - consider doing that because I come up
17:02 - with all kinds of cool stuff like this
17:03 - and I wouldn't want you to miss that in
17:05 - the future so anyways I will see you
17:06 - guys in another tutorial series