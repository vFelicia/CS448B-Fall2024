00:00 - hi guys and welcome back to another
00:02 - YouTube video so this is the fourth
00:04 - video in my PI game programming series
00:06 - and in today's video we're going to be
00:09 - going over optimization so pretty much
00:11 - if you remember from the last tutorial
00:13 - we have our little guy here he walks
00:16 - around the screen jumps up in the air
00:18 - and he's got a nice little animation and
00:20 - everything looks pretty good he can jump
00:22 - and run and if we get to the border of
00:24 - the screen here he stops like so now
00:27 - this is all great but if we look at our
00:30 - code here everything seems to look fine
00:33 - everything looks pretty clean but as we
00:35 - continue on with our game this is gonna
00:36 - become very very messy so for our
00:39 - purposes right now just with a very
00:41 - small game we just have a character
00:43 - running around the screen this doesn't
00:46 - seem like it's an issue but as we move
00:48 - forward we want to make sure that
00:49 - everything is neat and compact so that
00:51 - we can make sure our game runs smoothly
00:53 - and everything is clean and we're able
00:55 - to access everything again so in today's
00:57 - video what I'm going to be doing is
00:59 - pretty much changing this into an object
01:00 - orientated approach now it is to be
01:02 - noted that everything you can do object
01:04 - orientated you can do without that so
01:06 - for example right now we have an on
01:08 - object oriented approach to a game where
01:10 - we have a bunch of variables up here and
01:12 - these define our character and these are
01:15 - pretty much the attributes or the
01:16 - characteristics of our character now
01:19 - what we're going to do is we're just
01:20 - gonna put them into a class so that
01:22 - we're gonna be able to access them
01:23 - easier it's gonna look a lot cleaner and
01:25 - we're gonna be able to clean up this
01:27 - redraw game window function which is
01:29 - gonna become Messier as we move on with
01:30 - our program now you guys are gonna be
01:32 - mad at me because I'm gonna be telling
01:33 - you to change a lot of stuff that we
01:34 - already have but trust me it's worth it
01:37 - it's very important and this needs to be
01:39 - done in order for us to get to a better
01:41 - game and to move forward with the
01:43 - tutorials now if you don't want to do
01:45 - this you like I don't want to type it I
01:47 - already have this all pretty much I'll
01:49 - just just go down to my github link down
01:51 - below download the file and you can skip
01:53 - to the next tutorial if you really don't
01:55 - want to understand how all that works
01:57 - that's fine it's not too complex if you
01:59 - already understand classes and objects
02:00 - just go download that however if you
02:02 - don't understand that and you want to
02:03 - understand why we're making this class
02:05 - and how everything works I'm going to be
02:07 - talking about it in depth here so stick
02:09 - around for the video in that case okay
02:11 - so let's get started so the first thing
02:12 - we need to do is we need to actually
02:14 - a class called art well we'll call it
02:16 - player in this case we're gonna take
02:19 - class player inside here you can take
02:22 - object you don't have to do this I just
02:24 - like to do it and then we're gonna
02:26 - create our initialization function like
02:28 - so now again if you don't know how
02:31 - classes and objects work I do have a
02:33 - tutorial on this in my PI game program
02:35 - or in just my Python programming series
02:37 - so you might want to go check that one
02:38 - out first okay so now we're gonna make
02:41 - so we have to type in X Y width height
02:44 - to define our character and in here
02:47 - we'll just do self that x equals LX
02:49 - self-thought y equals y oops and then
02:57 - we'll have self-thought width equals
02:59 - width and self dot height equals height
03:04 - like so okay so these are four main
03:07 - characteristics but remember we do
03:09 - actually need to put in the rest of
03:10 - these variables here because we're going
03:12 - to use those as well inside of our class
03:14 - so we're gonna just do self Dogville set
03:19 - that equal to five do self dot is jump
03:23 - set that equal to false self that jump
03:29 - count set this one equal to ten again
03:33 - we're pretty much just copying whatever
03:34 - we have here and we're putting self
03:35 - before it so that it's an attribute of
03:37 - the class so and self dot write equals
03:43 - write or it was false re and then last
03:48 - one self thought walk count equals do
03:52 - like so so now that we have these in
03:54 - here we can delete these variables here
03:56 - and already our program is looking a
03:58 - little bit cleaner we've got rid of a
03:59 - bunch of the global variables there and
04:01 - now they're all an attribute of the
04:03 - class
04:05 - so now another thing that we're gonna
04:07 - have to do here since we've gotten rid
04:08 - of those global variables is we're gonna
04:10 - have to change a lot of stuff in here so
04:13 - the first thing is you need to create an
04:14 - instance of our character so this
04:16 - instance is going to be what we use to
04:18 - reference for example as X is y and
04:21 - they're gonna it's gonna create all
04:22 - these default values on our character
04:24 - the same thing as if we had just had
04:26 - typed this all this outside as a global
04:29 - variable like we had before so in this
04:31 - case I'm just gonna call my my character
04:33 - man you can give him a name and give me
04:35 - Billy whatever you want whatever you
04:36 - want to call them and just make them an
04:38 - instance of the player class and you
04:39 - have to give them an XY width and height
04:41 - so in this case we'll just give them an
04:43 - X of 300 maybe a wife or 10 and then we
04:47 - need 64 and 64 because that's the
04:49 - dimension of our sprite now after we do
04:52 - this we're gonna have to change a lot of
04:54 - variables in here so I know this is
04:57 - really annoying and it's gonna take a
04:59 - long time but pretty much just go to
05:01 - wherever you see a variable that would
05:04 - have been a global variable before that
05:05 - we changed or not should be it's gonna
05:07 - put man don't before it yes I know this
05:10 - is tedious but trust me it is important
05:13 - and we do need to do this I apologize
05:14 - that I didn't just do it object
05:15 - orientated right away but I want to show
05:17 - you guys that we can do it in pull both
05:20 - approaches in both ways and for a small
05:22 - game it might not make sense to make
05:24 - things as an object but for a large game
05:26 - like the one that we're gonna probably
05:27 - be doing here where we're gonna have
05:29 - multiple objects multiple classes we
05:32 - don't want to clog up our while loop
05:34 - with a ton of and we don't have a ton of
05:36 - global variables it's going to make it
05:38 - harder and you'll see what I mean when
05:40 - we go into creating a block in the next
05:43 - tutorial we don't want to have a ton of
05:45 - variables for each of those blocks
05:47 - pretty much we just want to have
05:48 - attributes attached to a class so we're
05:52 - just gonna keep going through this we
05:53 - should be close to done now I definitely
05:56 - probably missed one of these man's
05:59 - before something so if when we run the
06:02 - program it crashes don't get mad at me
06:05 - blue man but why
06:09 - Amanda jump count save them here
06:14 - man and man now let's just do a quick
06:19 - check through here to see if we forgot
06:21 - anything we look to be okay for right
06:25 - now
06:27 - and yeah I think we're okay so we're
06:29 - gonna go ahead we're gonna run the
06:30 - program here we're gonna make sure that
06:31 - everything is working okay
06:33 - and we've gotten here named walk count
06:35 - is not defined okay so I forgot to do
06:38 - the function here of course so again in
06:40 - here we're just uh we're actually gonna
06:42 - change this to self because we're gonna
06:44 - do something cool with this function so
06:46 - rather than having all this checking
06:48 - inside here let's just check it inside
06:51 - of the character so I'm just going to
06:52 - copy all this code right here so I just
06:54 - cut it out and then inside of our
06:57 - character here we're gonna have a method
06:59 - that we're gonna define as drop so
07:02 - pretty much now whenever we want to draw
07:03 - our character all we have to do is just
07:05 - call player dot draw where man draw give
07:08 - it the what he call it the argument of
07:12 - the window and then we can do all of
07:15 - this in here except so it cleans up our
07:18 - function because we're gonna be drawing
07:20 - a lot more stuff inside of this function
07:21 - so we don't have unnecessary code in
07:23 - there now again in here we're gonna have
07:25 - to make these all self I know it's
07:27 - annoying but we're gonna have to change
07:29 - all these things itself we can leave
07:30 - this walk left variable up at the top
07:33 - that's fine
07:35 - and we'll just keep changing everything
07:38 - and I promise you this is important
07:41 - otherwise it would be making guys do it
07:45 - so self self and we're almost done
07:54 - self-taught ex self-taught why now I
07:57 - mean II just need to go in here and
07:59 - we're gonna call man dot draw when we
08:03 - can get rid of this global right here
08:05 - and we should be all good let's run the
08:07 - program
08:09 - draw takes one positional argument I
08:10 - forgot something here
08:12 - my apologies we need the cell and let's
08:16 - run the program alright there we go
08:19 - and you can see we have the exact same
08:21 - result as last time except now all of
08:24 - our code is clean and ready for more
08:27 - stuff to be added to it
08:29 - so pretty much I'll go through it
08:31 - quickly because I know I went kind of
08:32 - fast through that what we've done
08:34 - essentially is we've just put everything
08:36 - into a class so this is our player class
08:38 - and again this could be used for
08:40 - multiple players so for example if you
08:42 - were gonna do a multiplayer game you
08:44 - probably wouldn't make a global variable
08:45 - outside of the class like here and you'd
08:47 - say like X 1 X 2 y 1 y 2 is jump one is
08:53 - jump 2 you got the point we don't want
08:55 - to do that because that's gonna use a
08:56 - ton of different variables here and it's
08:58 - gonna be a lot of typing and especially
09:00 - if we're gonna have something like
09:00 - blocks so we're going to be jumping over
09:02 - top of or enemies possibly we don't want
09:04 - to make a ton of different variables for
09:06 - each individual enemy when we can just
09:08 - use a class and just create a new
09:10 - instance of that class so here we have
09:13 - our player class we have all of the
09:14 - attributes the same as the variables we
09:16 - have before and now we have this little
09:17 - draw method which essentially just does
09:20 - the exact same thing we had inside of
09:21 - here except now it can be accessed a lot
09:23 - easier by just calling man draw again
09:27 - this is where we instantiate the class
09:28 - or the objects you can create you can
09:32 - change this if you want to whatever
09:33 - position and yeah we've just changed
09:36 - everything to men so I know this was
09:38 - tedious and this was kind of a waste of
09:41 - a tutorial video in my opinion but this
09:43 - really did need to be done I just want
09:45 - to show you guys that we can't do it in
09:46 - two different ways so no matter how you
09:49 - make a game there will be people out
09:51 - there watching tutorials that are gonna
09:52 - make games doing the way we did before
09:54 - where you just have x1 or you have X Y
09:56 - all the different variables and you
09:58 - don't use any classes and that's
09:59 - perfectly fine but as soon as we start
10:01 - moving into large games and more complex
10:03 - games we definitely do need to use these
10:05 - classes as it just makes everything a
10:07 - lot cleaner so yeah I hope you guys
10:09 - enjoyed this tutorial if you did please
10:11 - leave a like and subscribe and I'll see
10:14 - you again in the next video
10:16 - [Music]