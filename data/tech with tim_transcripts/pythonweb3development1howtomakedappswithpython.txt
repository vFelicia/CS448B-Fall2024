00:00 - in this series I'll show you how to
00:01 - write decentralized applications using
00:04 - normal programming languages that you
00:06 - already know like python that means you
00:08 - don't need to learn solidity you don't
00:10 - need to pick up a new language you don't
00:11 - need to be an expert blockchain
00:13 - developer and you can very quickly write
00:15 - decentralized applications that are web
00:17 - 3 that are running on a blockchain
00:19 - network like ethereum and you can use
00:21 - your existing web 2 knowledge to do that
00:24 - so whether you're a python developer
00:25 - JavaScript go C++ doesn't matter this
00:28 - video specifically in this series will
00:30 - be focused on python because I know many
00:32 - of my viewers know python but you can do
00:34 - the exact same thing in really any
00:36 - language so long as it runs on Linux now
00:39 - the way we're able to do this is by
00:41 - using a framework or Library known as
00:43 - cartei now cartei is the sponsor of this
00:46 - video and this series but don't worry
00:48 - they're completely free you don't need
00:49 - to pay for anything they don't even take
00:51 - any money from you and the reason why
00:53 - they sponsored this is they want me to
00:54 - show you how gamechanging this
00:56 - technology is and to try to get some
00:58 - more people into web 3 because they've
01:00 - completely removed the barrier of Entry
01:02 - which is learning solidity and picking
01:04 - up this whole new paradigm which can
01:06 - take a really long time so with that
01:08 - said let me give you a quick demo of
01:09 - exactly what we're going to build in
01:11 - this series then I'll talk more about
01:13 - exactly how this works and what you can
01:15 - expect for the rest of the videos all
01:17 - right so I got a quick demo running on
01:19 - my computer and I want to remind you
01:20 - that to build this I used no solidity on
01:23 - the right hand side of my screen I have
01:25 - a python back end that's right normal
01:27 - python code that you would be able to
01:29 - read and on the left side I have my
01:31 - front end which is written in JavaScript
01:33 - and react now we'll build this exact
01:35 - thing out step by step but I just want
01:37 - to show you how it works and give you a
01:38 - sense of the features we're going to
01:40 - build I know it seems a bit simple
01:42 - because this is going to be a rock paper
01:43 - scissors challenge game but I promise
01:45 - this is a really great introductory
01:47 - project and it will kind of lay the
01:48 - foundation and give you those core
01:50 - skills so you can extend this and make
01:52 - it a lot better A lot cooler and build
01:54 - some other decentralized apps so I'm
01:56 - signed in with metamask and I'm
01:58 - connected to kind of a demo demo hard
02:00 - hat node just running on my Local Host
02:02 - we don't have this deployed out but
02:04 - we'll talk about that later in the
02:05 - series now what we can do here is we can
02:07 - make challenges so you can see that I
02:10 - can click rock paper scissors and I can
02:11 - make a new challenge now I already have
02:13 - one active CU I just made one and it
02:15 - says my move is currently hidden
02:17 - Challenge number zero and we're waiting
02:19 - for someone to challenge us back to play
02:21 - Rock Paper Scissors against so what I'll
02:23 - do is I'll go to metamask I will change
02:25 - my account over here so let's connect to
02:27 - this one refresh and now you can see
02:30 - that we have a challenge this is the
02:32 - opponent the move is hidden and we can
02:35 - challenge them so I could choose maybe
02:36 - scissors and click on challenge okay and
02:39 - I'm going to go ahead and click confirm
02:41 - now notice the important thing is that
02:43 - one player made a challenge they
02:46 - submitted their move but I'm not able to
02:48 - see what their move is until I make my
02:50 - own move now we'll talk more about this
02:53 - in the series but this is a cool kind of
02:54 - feature we're adding here to show you
02:56 - how to securely transmit data in an
02:58 - asynchronous manner to the blockchain
03:01 - such that you can hide it from a third
03:02 - party so you can see that as I do this
03:05 - stuff we're getting some uh what do you
03:06 - call it kind of feedback here in the
03:08 - console or in our back end so just keep
03:10 - that in mind now if I update the
03:12 - challenge we have an active Challenge
03:14 - and both players have moved now that
03:16 - both players have moved what we can do
03:18 - is reveal our move and as soon as both
03:21 - players reveal their move then we will
03:22 - have a winner for the challenge now
03:24 - we're not revealing it until both
03:26 - players have made their original move so
03:28 - no one can cheat in this process so if I
03:30 - click on reveal move we'll go here and
03:33 - we'll send our transaction just give
03:35 - this a second here it should pop up in
03:36 - the console okay so it says adding
03:39 - notice this player has revealed their
03:41 - move of scissors so if we update the
03:43 - challenge now it says our move is
03:44 - scissors we're waiting on our opponent
03:46 - and if we go here and we switch back now
03:49 - to the
03:50 - opponent which is player six and we
03:53 - update the challenge so let's refresh
03:56 - the page here you can see it says the
03:57 - opponent move is scissors your move is
03:59 - is hidden if we want to see who wins
04:01 - then we can go ahead and reveal our move
04:04 - so let's do that give this a second for
04:07 - it to pop up in the terminal here okay
04:09 - so you can see it says this player has
04:11 - revealed their move of rock and if we
04:13 - update the challenges it says we won
04:16 - because we had Rock the opponent had
04:18 - scissors and there you go that is
04:20 - challenge zero then we could go ahead
04:22 - and make a new challenge if we want to
04:24 - so we can make a new one where we choose
04:27 - Rock okay we'll see if that comes in
04:29 - here give this a second okay challenge
04:32 - ID created update challenges we now have
04:34 - a new active Challenge and we can go
04:35 - through this whole process so anyways
04:38 - that was kind of the demo of the
04:39 - application just to give you a little
04:40 - sneak peek here you can see that if I go
04:42 - in this main.py file this is the whole
04:45 - back end that's running this application
04:47 - okay it's about 200 lines long there a
04:49 - few other files as well but this is all
04:51 - written in normal python no solidity
04:53 - code no complex stuff that you don't
04:55 - know only code that you've written
04:57 - before and that you've seen really
04:59 - really cool I can't wait to bring you
05:00 - guys along for this series let's now hop
05:03 - over and talk a little bit about the
05:04 - prerequisites and some more stuff that
05:06 - you need to know before we get started
05:08 - all right so before we go too much
05:09 - further let me just break down a few key
05:11 - terms that you're going to want to know
05:12 - before we go forward so first what is a
05:15 - decentralized application well this is
05:17 - really some kind of application that
05:19 - runs on typically a peer-to-peer
05:20 - blockchain Network think ethereum
05:22 - Bitcoin whatever that is decentralized
05:26 - decentralized means there's no Central
05:27 - Authority or someone controlling it it
05:29 - can't just go offline it can't just be
05:31 - deleted it can't be tampered with
05:33 - because of the security kind of features
05:35 - of a blockchain network so for example a
05:38 - bank right this is the best example we
05:40 - have of a centralized kind of entity if
05:43 - I were storing money with a bank at any
05:45 - point in time if the government doesn't
05:46 - like me if the bank doesn't like me they
05:48 - can freeze my assets they can take my
05:49 - money my account could be deleted
05:51 - there's a central figure or authority or
05:53 - multiple that have control of my account
05:57 - a decentralized application is the
05:58 - complete opposite once your code is
06:00 - hosted once it's live no one can go and
06:03 - tamper with that no one can change it no
06:05 - one can modify it it's there it exists
06:07 - it's trustworthy and that's kind of the
06:09 - major feature of a decentralized app we
06:11 - have trustless communication because of
06:14 - smart contracts and ways that we can
06:16 - interact with each other on these
06:17 - blockchain networks now when it comes to
06:19 - building these decentralized
06:21 - applications there's many different ways
06:22 - to do this and the first way would be to
06:24 - do this just directly on the blockchain
06:26 - network if you've ever ridden a solidity
06:28 - smart contract before for you just
06:30 - deploy that to ethereum and what this
06:32 - means is you're actually using a layer
06:34 - one solution or a layer one technology
06:37 - ethereum Bitcoin any base level
06:39 - blockchain Network that can operate
06:41 - independently of anything else is what's
06:43 - known as layer one now Layer Two is
06:46 - something that's on top of a Bas level
06:48 - blockchain Network it relies on the
06:50 - security features of that network but it
06:52 - aims to improve some of the speed
06:54 - scalability efficiency Etc of that base
06:58 - level Network so some something like
07:00 - ethereum can actually be incredibly slow
07:02 - and it can be incredibly expensive
07:04 - especially if you want to do a lot of
07:05 - operations you want to have a lot of
07:07 - code running you want to even just have
07:08 - a simple decentralized app like the one
07:10 - that we have if you're running that
07:12 - directly on ethereum it could be quite
07:14 - expensive so what we actually aim to do
07:16 - is take some of the transaction load and
07:18 - some of the computations off of the Bas
07:21 - level Network to a secondary Network
07:23 - known as our layer 2 solution right and
07:26 - then what we'll do is we'll utilize the
07:28 - main security features benefits of layer
07:30 - one to keep our application secure we
07:33 - kind of offloading some of the heavy
07:34 - expensive and timec consuming
07:36 - computation to Layer Two this is a gross
07:39 - oversimplification and I have some
07:41 - videos that go into this more in depth
07:42 - that I'll leave on the screen and in the
07:44 - description but when you think of layer
07:45 - one think of your base level Network and
07:47 - when you think of Layer Two think of on
07:49 - top of that Network which aims to make
07:52 - things faster cheaper Etc by kind of
07:54 - offloading some of that heavy
07:56 - computation but still relying on and
07:58 - utilizing the security benefits of layer
08:00 - one now a great example of a layer 2
08:02 - solution you probably know is something
08:04 - like polygon this sits on top of
08:06 - ethereum and it increases the
08:08 - transactions per second now what we'll
08:10 - be using here is something known as
08:11 - cartei this works quite a bit
08:13 - differently than something like polygon
08:15 - but this is a layer 2 solution sits on
08:18 - top of a blockchain network and it
08:20 - really just takes all of our heavy
08:22 - computations and execution takes it
08:24 - offchain and then does it in a
08:26 - verifiable and provable way and reports
08:29 - all of the results on chain we'll get
08:31 - into the architecture later on but what
08:33 - you need to understand for now is that
08:35 - cartez uses something known as
08:36 - optimistic rollups I have an entire
08:38 - video that breaks down what those are so
08:40 - I'll leave that in the description but
08:42 - what this really means is that we
08:43 - utilize the blockchain for reporting all
08:46 - of our transactions or kind of state
08:48 - changes which we'll get into later we
08:50 - then do all of the heavy computation
08:52 - offchain in a verifiable manner and then
08:55 - we report it back onchain that way at
08:58 - any point in time we we can actually
08:59 - check what's gone on we can see a log of
09:02 - all of the different transactions but
09:03 - they're condensed they're compressed and
09:05 - we're taking all of that heavy work that
09:07 - usually costs a lot of gas and money and
09:09 - we're just taking it offchain so that we
09:11 - can do everything a lot more scalable a
09:13 - lot faster and just a lot more
09:15 - efficiently than if we did it directly
09:17 - on the ethereum main Network which as
09:19 - you know can be congested expensive and
09:21 - slow so this is in contrast if we just
09:24 - wrote a normal smart contract a smart
09:26 - contract is something that is deployed
09:28 - directly to the ethereum main Network
09:30 - and this means that anytime we want to
09:32 - do any work in that smart contract we
09:34 - have to utilize the ethereum chain which
09:36 - means we're paying a ton of gas fees
09:38 - we're paying validators we're paying all
09:40 - this kind of stuff and we're doing quite
09:42 - a bit of work and doing any computations
09:44 - on a blockchain storing any kind of data
09:46 - is very very expensive so that's why we
09:49 - take it offchain we'll talk more about
09:51 - this later don't worry now this all
09:53 - sounds great but there's still a lot of
09:55 - issues with traditional blockchain
09:56 - development which is how people have
09:58 - been doing things kind of up to now so
10:00 - if you want to write a smart contract
10:02 - which is really the code that
10:04 - facilitates kind of trustless
10:05 - interaction on the blockchain it's
10:08 - difficult you got to learn a new
10:09 - language and there's quite a few
10:10 - limitations to what you're actually able
10:12 - to do solidity is a good language but
10:15 - it's very difficult to understand for
10:17 - someone who's new and there's just quite
10:18 - a few limitations for example anytime
10:20 - you want to perform executions or
10:22 - computations on the blockchain you need
10:24 - to submit gas gas is essentially a
10:26 - payment to whatever the node is that's
10:28 - actually doing all of these computations
10:31 - now there is a gas limit this gas limit
10:33 - is not that large and that actually
10:35 - means that if you wanted to do something
10:36 - as simple as 1,000 Loops okay you want
10:39 - to add a number a thousand times you
10:41 - could very easily run out of gas you can
10:44 - actually not have enough gas in one
10:46 - transaction to complete the computation
10:48 - that you want to perform so you think of
10:50 - huge computations that require maybe a
10:52 - few minutes to run it's impossible to do
10:54 - those in one transaction you'd have to
10:56 - batch them into like 20 30 50 10,000 in
10:59 - different transactions which would be
11:00 - extremely costly now as well as that
11:02 - there's a lot of features that just
11:03 - don't exist on the blockchain network
11:05 - itself things like floating Point
11:08 - numbers very very difficult to implement
11:10 - and utilize on the network you want to
11:12 - get the number Pi next to Impossible
11:14 - again to actually have that on a
11:16 - blockchain network you want to use
11:17 - familiar tools you want to use math
11:19 - libraries physics libraries data
11:21 - structures and algorithms good luck
11:23 - building those in solidity and utilizing
11:25 - them on the blockchain network there's
11:27 - quite a few limitations when it comes to
11:28 - the coding side if you've ever worked in
11:30 - solidity you would have seen that before
11:32 - and that's why with a framework like
11:33 - cartei we're going outside of the main
11:36 - Network performing computations offchain
11:39 - and allowing ourselves to use anything
11:41 - that we've used before we can use our
11:43 - math libraries we can use floating Point
11:45 - values we can use regular lists or
11:47 - dictionaries objects classes methods
11:50 - anything that you've used in standard
11:51 - programming before you can go ahead and
11:53 - use it and we can still write code in a
11:55 - verifiable and trustable way where we're
11:58 - utilizing the main security features of
12:00 - the blockchain so that is kind of why
12:02 - traditional web 3 development really
12:03 - hasn't taken off yet because there's so
12:05 - many limitations with it and as soon as
12:08 - you start trying to build anything
12:09 - complex you realize damn this is going
12:11 - to be way way harder than it would have
12:13 - been if I did it in a centralized manner
12:15 - using kind of a normal server normal web
12:18 - app whatever so a lot of people just
12:20 - don't bother building these
12:21 - decentralized apps or if they can build
12:23 - it it takes a very long time and it's
12:25 - very very challenging so I'm really
12:27 - excited about the next kind of phase of
12:29 - web 3 where we have all of these great
12:30 - Frameworks and libraries that are making
12:32 - things easier like cartei and I'm going
12:35 - to show you in this series exactly how
12:37 - we use it and how it works I know it's
12:38 - going to impress you now just as a last
12:40 - few notes Here some basic prerequisites
12:43 - for the rest of the series because the
12:44 - next video we're actually going to get
12:45 - into some setup and code you should have
12:48 - some familiarity with python you should
12:50 - have a little bit knowledge of how
12:51 - blockchain networks actually work if you
12:54 - don't I will leave a link in the
12:55 - description to a series that can teach
12:57 - you everything you need to know if you
12:59 - have any understanding of ethereum's
13:01 - Json RPC API that's going to be helpful
13:04 - if that's a bunch of gibberish to you
13:06 - don't worry you'll still be able to
13:07 - follow along if you have any experience
13:09 - with Docker that's going to be helpful
13:11 - because we will be using Docker but
13:13 - again if you don't I'm still going to
13:14 - walk you through the process step by
13:16 - step now if at any point you're getting
13:18 - stuck you're having issues troubles
13:19 - you're frustrated I will leave some
13:21 - support channels in the description that
13:23 - you can reach out to these are directly
13:25 - with cartei like cte's Discord server
13:28 - where you can go in there and you can
13:29 - get support oneon-one help any issue you
13:31 - have you can ask them they'll help you
13:33 - out to the best of their ability and
13:35 - that's how we're going to make this
13:36 - series really easy for everyone to
13:37 - follow along with anyways I hope you
13:39 - guys are excited I know this video is
13:41 - kind of a lot of theory demos Etc this
13:43 - is a new thing so I just want to make
13:44 - sure I take my time walk you through it
13:46 - step by step in the next video we're
13:48 - going to get into a setup you're going
13:50 - to see exactly how this works how we
13:52 - write this decentralized app with normal
13:55 - coding how we interact with it how we
13:57 - get our environment ready to go and then
13:59 - the next few videos we'll actually be
14:00 - building this D we'll go through the
14:02 - different features and you'll slowly
14:04 - start to get the hang of it so by the
14:05 - time you're at the end of the series you
14:07 - fully understand how this works and you
14:09 - are ready to build daps in really any
14:11 - normal programming language you already
14:14 - [Music]
14:21 - know