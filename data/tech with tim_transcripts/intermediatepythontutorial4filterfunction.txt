00:00 - hey guys and welcome to the fourth video
00:02 - in my intermediate Python tutorials and
00:05 - in today's video I am going to be going
00:07 - over the filter function so this one is
00:09 - very similar to what I did in the last
00:10 - video which is the map function but
00:13 - obviously it has a few differences but
00:15 - the filter and map function are nice to
00:16 - learn back-to-back because they can be
00:18 - used together and a lot of people do use
00:20 - them together when they're making
00:22 - programs so I'm just gonna go ahead and
00:24 - start off by typing out two functions
00:26 - here they're gonna be using in our
00:28 - examples so I'm just going to make one
00:31 - function called add 7 which is simply
00:33 - going to return 7 and I'm gonna make
00:34 - another one which is called is odd and
00:36 - it's just gonna return if the number is
00:39 - an odd number so the way we do that
00:41 - again is X modulus 2 does not equal 0
00:44 - like that ok pretty straightforward
00:47 - now I'm just gonna make a new list in
00:49 - this case I'm just gonna go 1 2 3 4 5 6
00:51 - 7 and 9 and then we'll even add a 10 in
00:55 - there and now I'm gonna go over what the
00:58 - filter function does so I want to assign
01:01 - a new variable here create a new one I'm
01:03 - just going to call this B and I'm gonna
01:05 - make an equal to list filter which is
01:08 - the name of our function just like this
01:10 - and now filter function actually takes
01:12 - the same arguments that our map function
01:15 - did in the last video it takes a
01:17 - function and it takes an iterable list
01:20 - so we can take a string as well but
01:22 - typically we just pass it a list
01:24 - something that's iterable and that you
01:25 - can go over on so what I'm gonna put in
01:27 - here for our first function is I'm gonna
01:29 - put is odd and then I'm gonna give a
01:33 - list a now the way filter function works
01:36 - is if this value so it's gonna its into
01:38 - the same thing the map function does is
01:40 - gonna pass every element in our iterable
01:42 - item in this case the list to the
01:45 - function is odd so it's gonna start with
01:46 - 1 it's gonna pass 1 in there you can say
01:48 - 1 modulus 2 does not equal 0 which is
01:51 - true so it's gonna give us a true value
01:54 - and then it's that's gonna be added to
01:56 - the B list because this function
01:58 - returned a true value
01:59 - now say we put 2 in here and we go and
02:02 - we say 2 is X 2 modules 2 well that does
02:05 - equal 0 so we get a false value returned
02:08 - here now 2 is not added to the list this
02:11 - is essentially filtering out
02:14 - based on a predefined function so
02:17 - obviously you can make your function
02:18 - that you want to check a lot longer and
02:21 - a lot more extensive so you're filtering
02:23 - out more items but this is extremely
02:25 - useful when you're solving problems so
02:27 - rather than going through a for loop and
02:28 - checking every single item like we might
02:32 - have done with the map function to add
02:33 - things into a list we can just simply
02:35 - call filter give it the function that we
02:37 - want to filter based on and then a list
02:40 - and it's gonna return that new list so
02:41 - let's just go ahead and run the program
02:42 - here and make sure that everything's
02:43 - working fine so I'm just gonna print out
02:46 - a to the screen and I'm going to print
02:48 - out B and we can see that B has
02:51 - essentially filtered out all of the
02:53 - elements on that we're even so we get to
02:55 - 6 8 10 they are all gone so now I want
02:58 - to show you how we can implement this
03:00 - with our map function why is this useful
03:03 - what can we use the map function for so
03:05 - I'm making another list here and I'm
03:06 - gonna call it C and this time I'm just
03:09 - gonna do list map and then inside a map
03:13 - I'm going to do filter but before filter
03:16 - I'm just gonna apply another function so
03:18 - in this case I'm going to add 7 and then
03:20 - in filter here I'm actually just gonna
03:22 - change this too because I'm gonna type
03:24 - the same thing out let's go over what I
03:25 - just did here so essentially what's
03:27 - gonna happen now is we're using the map
03:29 - function which if you don't know go back
03:31 - and watch the previous video and we're
03:33 - going to apply this new list B which has
03:36 - been filtered so we filtered out this
03:39 - original list now we have 1 3 5 7 9 so
03:42 - far and based on that list we're gonna
03:44 - add 7 to every element in that list now
03:47 - again if you wanted to save a line I
03:49 - could just get rid of B here and I could
03:52 - simply paste that in here
03:54 - removing list like that and this would
03:58 - work fine so let's go ahead and see what
04:00 - actually happens here again we're just
04:02 - taking this new filtered list and now
04:04 - we're applying another function to it in
04:06 - this case add 7 so to make sure that
04:08 - this is indeed working I haven't made a
04:10 - mistake here so we'll print a again and
04:12 - I will print C and you can see that we
04:17 - do indeed get that so our one-seven we
04:20 - get 8 are 3 add 7 we get 10 5 7 and so
04:24 - on you can see how this works
04:26 - now these are extremely straightforward
04:28 - examples but if you're doing a list and
04:30 - for example you want to filter out and
04:32 - the elements that contained a certain
04:33 - digit or that met a certain criteria
04:36 - then you could create a more advanced
04:38 - filter function function to filter based
04:40 - off of that had a whole bunch of
04:42 - criteria and then it's gonna return a
04:43 - true or false value so show you here if
04:45 - I do something like just return true and
04:48 - I don't return a condition per se that
04:50 - every element in my list is gonna be
04:53 - sent through because nothing's gonna be
04:55 - filtered out so again if I print C here
04:58 - all of our elements are here so we have
05:00 - ten elements because we're always
05:03 - returning true same thing if I always
05:04 - return false then none of our elements
05:08 - are gonna be printed because well it's
05:10 - always false so the way to think about
05:12 - it is uncomment this for a second is
05:15 - what this filter function does is it's
05:17 - going to apply function that gives us a
05:19 - true or false value to every element in
05:23 - the list if when that element is applied
05:25 - to that function we get a true value
05:27 - then it's going to be created in that
05:28 - new list which filter returns to us like
05:32 - that
05:32 - now again yeah this is really useful for
05:34 - solving problems and I just want to show
05:35 - you what happens if I do something like
05:36 - return one and I'll print C to the
05:40 - screen here you can see we get every
05:44 - every element out of here so pretty much
05:46 - the way is in Python something is said
05:49 - to be true as long as it's not 0 if it's
05:51 - a number so like if I pass something
05:52 - like hi well if you say is hide true
05:56 - technically hi is true I Canada if I
05:59 - print C we're still gonna get every
06:02 - element although I didn't pass the value
06:04 - true hi technically evaluates to a true
06:08 - value in Python the only thing that's
06:09 - not gonna evaluate to true value is
06:11 - something like 0 so now if I print C you
06:15 - can see we get an empty list
06:16 - I'm just wanted to add that and at the
06:18 - end there teaches something you might
06:19 - not have known there so anyways that's
06:21 - been it for the filter function in the
06:24 - next video I'm gonna tie these all
06:25 - together with something called lambdas
06:27 - and what they look like is that you can
06:30 - see it highlights here as a keyword and
06:32 - pretty much this is a kind of function
06:34 - that we can use so we don't have to keep
06:35 - creating all these other ones at the
06:37 - beginning of our program
06:38 - and they're extremely useful and they're
06:40 - really cool so make sure you guys stay
06:41 - tuned for the next video I'm gonna be
06:43 - explaining how we can use those with
06:44 - lists maps and on their own anyways if
06:47 - you guys enjoyed please make sure you
06:48 - leave a like and subscribe and I will
06:49 - see you again in the next video
06:52 - [Music]