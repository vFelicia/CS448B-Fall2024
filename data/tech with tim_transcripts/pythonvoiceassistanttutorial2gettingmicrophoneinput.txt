00:00 - hello everybody and welcome back so that
00:03 - is what we did in the last tutorial
00:04 - video is figure out how to make Python
00:06 - say or just you know output some kind of
00:09 - stuff throughout the speaker so that we
00:10 - can actually hear it so we're gonna be
00:12 - doing in this video is actually getting
00:14 - some input from the user through the
00:16 - microphone so we're gonna allow them to
00:18 - speak into the microphone we're gonna
00:19 - figure out what it is that they said
00:21 - turn that into some kind of text and
00:23 - then do something with that
00:24 - but if you guys missed the last video I
00:26 - mean this is the code for it is pretty
00:27 - straightforward but it also goes through
00:28 - just how to set up and get all these
00:30 - modules installed so definitely watch
00:32 - that if you haven't already all right so
00:34 - we're gonna get started right away here
00:35 - and we're gonna create a function to get
00:37 - some audio from the user so I'm just
00:39 - gonna call this function actually get
00:41 - underscore audio and what it's gonna do
00:43 - is just return the text version of
00:45 - whatever we say into the microphone so
00:48 - first of all I just want to make sure
00:49 - that if you guys don't have a microphone
00:51 - obviously this is not going to work you
00:53 - need a microphone and you're probably
00:55 - gonna get an error if you try to do what
00:56 - I'm gonna do without a microphone but to
00:58 - change your microphone settings if you
01:00 - just type in audio in this bottom bar
01:02 - and go to manage audio devices you can
01:04 - go here to recording and then pick what
01:07 - microphone you want to use you can see I
01:08 - have a few different ones to select here
01:09 - from but again you know pick what one
01:12 - and then that way you can actually get
01:14 - some kind of output or I guess give
01:16 - input to the computer alright so we're
01:18 - gonna start by doing is creating what we
01:19 - call a recognizer object from speech
01:22 - recognition module and we're gonna say s
01:25 - r dot recognizer so R equals s r dot
01:29 - recognizer now what we're gonna do is
01:31 - use the microphone to get some kind of
01:33 - inputs we're gonna say with SR dot
01:35 - microphone as source what we're gonna do
01:40 - is use this to listen so we're gonna say
01:42 - audio
01:43 - equals r dot listen source that all of
01:48 - course just means you know use our
01:49 - speech recognizer to listen to the
01:51 - source which is going to be the
01:52 - microphone and you could use something
01:54 - else as a source like you could use the
01:55 - text file or something like that and now
01:58 - what we're gonna do is try to figure out
01:59 - what they actually said so I'm gonna
02:01 - create a variable called said which is
02:03 - equal to a blank string and what I'm
02:05 - gonna do is create a try except Clause
02:07 - here and try to figure out what it is
02:10 - that they said so I'm going to say
02:12 - said equals are recognized underscored
02:16 - sound or not sound sorry recognize
02:18 - underscored Google and audio so what
02:22 - this is gonna do essentially is use the
02:24 - Google API to recognize what it is that
02:27 - we said and that's what you know speech
02:29 - recognition does that's what the module
02:31 - uses so we're gonna say our to recognize
02:33 - underscore Google and then what we're
02:35 - gonna do is print said to the screen so
02:40 - essentially we will be able to see what
02:41 - it is we said in a text form and now
02:44 - what I'm gonna do is put an accept here
02:47 - I'm gonna say accept exception as e
02:50 - because sometimes when you do this you
02:53 - get an error so let's say that
02:54 - microphone does get any input for a
02:56 - while you're gonna get an error or it
02:58 - doesn't understand what you said you're
03:00 - gonna get an error so we need to have an
03:01 - exception here where essentially we can
03:03 - tell a user you know we didn't
03:04 - understand what it is that you said or
03:06 - you know this error occurred so that we
03:08 - can just continue moving with our
03:09 - program we don't crash if something goes
03:11 - wrong so what I'm gonna do is just print
03:13 - a exception plus string II and what
03:19 - that's gonna do is just tell us what the
03:21 - exception was and actually I'll do it
03:23 - pull in here in a space we can see what
03:24 - it is and have a look at it so what I'm
03:27 - gonna do now at the end of this is
03:29 - return set so after we you know create
03:34 - this we're just going to return set and
03:35 - obviously if we get an error here then
03:38 - said it will just be equal to a blank
03:39 - string and we shouldn't have any issues
03:41 - so what I'm gonna do is start by
03:42 - speaking hello everybody and welcome
03:44 - back and then I'm else okay actually I
03:46 - don't want to say this whole thing again
03:47 - let's just say hello and then what I'm
03:49 - gonna do is just call this get audio
03:52 - function and we're gonna look and see if
03:55 - it can actually get what it is that we
03:56 - said so let's try this hello
04:01 - just testing here and there you go you
04:06 - can see that a prince here just testing
04:08 - here and this is really nice because the
04:09 - module is also actually able to detect
04:12 - when you're speaking and when you're not
04:13 - speaking just by using a basic volume
04:16 - level so as soon as you have a long
04:17 - enough pause in your sentence then what
04:20 - it does is it will stop recording and a
04:23 - execute but if you keep speaking then it
04:26 - will keep recording what you say so you
04:27 - can say longer strains or longer
04:29 - messages as well awesome so that is how
04:32 - that works so now that we've done that
04:34 - we're just gonna do a few small things
04:36 - to essentially you know speak back to
04:38 - the user if they say certain things now
04:40 - we're gonna get a little bit more
04:42 - complicated here in the future when
04:44 - we're doing things but I just want to
04:46 - show you what we can actually do so I'm
04:48 - gonna say now here text equals get audio
04:53 - and now we're gonna parse this text
04:55 - since you know if it contains hello if
04:57 - it as this if it has that then we're
04:59 - gonna say a certain thing back to the
05:00 - user so I'm just gonna say here if text
05:04 - should I do this actually I'm just gonna
05:06 - say if hello in text then what we're
05:11 - gonna do is say hello back to the user
05:13 - so let's try this
05:14 - we don't you speak hello how are you
05:20 - question right okay so let's just see if
05:23 - this actually works and let's go control
05:26 - B hello there hello how are you
05:32 - so there you go you can see how this is
05:34 - actually gonna work we're gonna say
05:35 - something we're gonna figure out if what
05:37 - we're saying you know like if we have a
05:39 - certain word in the message or if it is
05:40 - a certain thing and then we're gonna
05:42 - respond back to the user
05:43 - appropriately now we can also do another
05:46 - one like if what is your name
05:51 - in text then we're gonna print out or
05:55 - not print I guess we'll speak my name is
06:00 - Tim I mean we haven't named this guy yet
06:03 - but let just say that and let's try this
06:05 - one what is your name robot my name is
06:11 - Tim and there you go so you can see you
06:13 - can make as many commands as you want
06:15 - and I think this is kind of cool in my
06:17 - opinion how we can just really easily
06:19 - check if certain strings are in this
06:21 - text and then if they are we can say
06:22 - things back to the user so anyways I'm
06:24 - gonna leave the video here and I was a
06:26 - bit shorter but this is kind of all we
06:27 - need to accomplish today in terms of
06:29 - just getting some audio from the user as
06:31 - well as you know printing certain things
06:33 - out I welcome you guys to continue to
06:34 - mess around with this make this as
06:36 - complicated as you want and in the next
06:38 - few days we're going to be adding some
06:39 - actually useful features that aren't
06:41 - just you know text responding back to
06:43 - the user as always if you guys enjoyed
06:44 - make sure you leave a like and subscribe
06:46 - to the channel and leave any comments
06:47 - for future things you'd like to see