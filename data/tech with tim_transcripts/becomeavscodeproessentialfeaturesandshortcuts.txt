00:03 - foreign
00:08 - I'll be sharing with you the best vs
00:11 - code features that are guaranteed to
00:13 - make you a more efficient developer I'll
00:15 - be walking you through Global and
00:16 - workspace settings creating custom tasks
00:19 - to automate workflows terminal
00:21 - customizations life-saving keyboard
00:23 - shortcuts popular extensions and much
00:26 - much more now by the end of this video I
00:28 - guarantee that you will have learned
00:29 - something about vs code and discovered
00:31 - some new features that will save you
00:33 - time now to guarantee that I've actually
00:35 - teamed up with Microsoft who has
00:37 - sponsored this video now as many of you
00:39 - know Microsoft actually owns vs code
00:41 - GitHub and many other developer tools
00:44 - and they help me come up with the
00:45 - outline for this video now in addition
00:47 - to this video we're going to be
00:49 - providing a 45 minute long webinar on
00:51 - May 9th as a part of the developer
00:53 - digital Meetup tour this webinar will go
00:56 - into much more depth on how to use vs
00:58 - code in GitHub like a professional and
01:00 - of course it will also include a live q
01:02 - a session to sign up for the webinar go
01:05 - to AKA dot Ms slash Tech with Tim to
01:07 - learn more about of vs code and GitHub
01:10 - workflows if you're watching this video
01:12 - after May 9th then you can still access
01:14 - the recording from the same link AKA dot
01:17 - Ms slash Tech with Tim it will also be
01:19 - linked in the description with that said
01:21 - let's go ahead and get into the video
01:23 - alright so let's go ahead and get
01:25 - started now the first section I want to
01:27 - dive into here is settings and
01:29 - customization obviously when you're
01:31 - working in any kind of code editor or
01:33 - coding environment you want to customize
01:35 - this to your liking and make sure
01:36 - everything is set up nicely so you can
01:38 - have the maximum efficiency and even
01:40 - just pleasure when you're using the code
01:42 - editor so in vs code obviously there is
01:44 - unlimited customization and the way you
01:46 - can get to the settings menu that I'm on
01:48 - right now is you can go to the gear and
01:50 - then you can click on settings
01:51 - alternatively you can open this by
01:53 - hitting Control Plus comma or command
01:56 - plus comma depending on the operating
01:57 - system that you're on so from here
02:00 - notice that we have two settings
02:01 - categories we have user and workspace
02:04 - settings now the user settings are your
02:06 - global settings and the works space
02:08 - setting is specific to a folder or a
02:11 - workspace that you're working in now
02:13 - your user settings are going to be
02:14 - stored in a settings.json file notice
02:17 - here when I hover it shows me the
02:19 - location of that settings.json file if I
02:21 - want to actually open up that file I can
02:23 - hit Ctrl shift p or command shift p this
02:26 - toggles the command palette for you and
02:29 - then I can go open settings and then
02:32 - Json so open default settings Json or
02:35 - open user settings or open workspace
02:37 - settings you can pick what you want so
02:38 - I'll open the user settings with Json
02:40 - and notice here that I have all of the
02:43 - available settings or at least the ones
02:44 - that I have modified inside of here I
02:47 - can do some custom settings I can change
02:49 - some stuff that I may not be able to
02:50 - change from this menu but for ninety
02:52 - percent of the time it's fine to just
02:54 - work in here but I just wanted to show
02:55 - you we have this Json file you can go in
02:58 - here you'll have intellisense when
02:59 - you're writing different settings and
03:01 - you can do some specific customization
03:02 - you may not be able to do inside of this
03:04 - file now for the workspace settings this
03:07 - is going to be a setting things.json
03:09 - file inside of a DOT vs code folder I'm
03:12 - going to show this to you in a second
03:13 - but this is going to live inside of the
03:15 - workspace or the project that you have
03:17 - open and these settings are
03:19 - automatically going to override your
03:20 - user or global settings so it goes user
03:23 - or Global then you have your workspace
03:25 - and of course you have all the default
03:26 - settings and these two settings would
03:28 - override any of the default settings as
03:30 - well
03:31 - okay so in terms of a few settings that
03:33 - you may want to change right away I like
03:35 - changing the editor font size now I like
03:37 - to have my font size nice and large so I
03:39 - usually put this at about 22 and then if
03:41 - I want to zoom in and out the window
03:43 - what I can do is hit Control Plus or
03:46 - control minus so you'll see quite a bit
03:48 - when I'm working in tutorials I'll Zoom
03:49 - kind of the whole vs code window in
03:53 - quite a bit just so you guys can read
03:54 - everything that I'm doing however
03:56 - sometimes I want to zoom stuff in
03:58 - without actually say affecting all of
04:01 - these icons or affecting the entire UI
04:03 - in that case I'll just make the font
04:05 - size larger and that's what's going to
04:07 - affect the actual size of the font in my
04:09 - code editor so that affects that and
04:11 - then I can zoom that in and out so just
04:13 - distinguish the difference there when
04:14 - you zoom in and out it does the entire
04:16 - window whereas when you change the font
04:18 - size it's just the font size for your
04:20 - actual code editing files alright so
04:22 - next thing that you'll probably want to
04:24 - change here is your theme now there's a
04:26 - few ways to do this of course you can do
04:27 - it from the settings you can go to theme
04:29 - and then you can select the theme that
04:31 - you want want personally I like to use
04:32 - monokai a lot of you guys ask me about
04:34 - my theme this is the one that I use I've
04:36 - used it pretty much forever you can also
04:38 - install additional themes 2bs code
04:41 - through different extensions or you can
04:43 - hit Ctrl shift p to open the command
04:45 - palette type in theme and then you can
04:47 - select the theme that you want and again
04:49 - you can kind of customize these themes
04:50 - too I won't get into that right now
04:52 - okay that's pretty much it for your
04:54 - global settings now I just want to show
04:56 - you a few more advanced uses related to
04:58 - settings that you may not know about so
05:01 - you can actually toggle settings for
05:03 - specific languages and using specific
05:06 - filters so for example let's say I want
05:08 - to search for all of the settings that
05:10 - I've actually modified what I can do is
05:13 - use a tag or kind of a filter story
05:15 - which starts with the ad symbol and then
05:17 - I can type modified and this is going to
05:19 - give me a list of all of the settings
05:20 - that I've actually changed here in
05:22 - Visual Studio code okay so that's an
05:24 - example of a filter maybe I want to look
05:27 - at all of the settings related to an
05:28 - extension well of course I could just do
05:30 - it in the extensions menu or I could
05:31 - type in a filter so I can do extension
05:33 - so EXT colon and then MS
05:37 - and then Python and then dot Python and
05:40 - it shows me all these settings now maybe
05:42 - I want to look at all the ones I
05:43 - modified there you go I can now see the
05:45 - settings I've modified here so just
05:47 - showing you there's a lot of cool stuff
05:48 - you can do that you may not know about
05:49 - and you can kind of plug in these
05:51 - filters all right last thing I'll show
05:53 - you here with settings is a custom
05:55 - setting that kind of is cool and shows
05:57 - you the power of using the settings.json
05:59 - file so I'm going to go Ctrl shift p
06:02 - I'm going to open my settings Json okay
06:04 - and I'm just going to go in here to the
06:06 - very bottom
06:07 - and I'm going to paste this set
06:09 - workbench color customizations okay
06:11 - editor line number foreground and then I
06:13 - change the color so this is an example
06:15 - of something you'd only be able to
06:16 - modify from within the settings.json
06:18 - file and look I can change the color of
06:21 - uh kind of what do you call it these
06:23 - line numbers right or whatever's popping
06:25 - up so you can do all kinds of
06:27 - customizations like that just wanted to
06:29 - show you kind of the power of this file
06:31 - and I don't know maybe some hidden
06:33 - information you may not have notified
06:38 - foreign
06:40 - so now we're going to dive into our
06:42 - workspace settings now if you want to
06:43 - create custom workspace settings you can
06:45 - just go in here and start changing stuff
06:46 - so let me go to workspace and for
06:48 - example I can make this 22. when I do
06:51 - that notice that you're going to see a
06:52 - DOT vs code folder pop up and then
06:54 - you're going to have a settings.json
06:56 - file inside of here now this is any
06:58 - changes you've made in the current
06:59 - workspace now this is great because for
07:02 - example if you had some tasks or some
07:03 - commands or some specific settings
07:06 - related to extensions that you wanted
07:08 - everyone in maybe your organization to
07:10 - have you could actually commit this file
07:12 - to GitHub and then people could pull
07:14 - that file down and automatically have
07:16 - those settings apply to their workspace
07:18 - now oftentimes you do want to Omit this
07:21 - from your GitHub commits depending on
07:22 - what you're doing but in my case if I
07:24 - have a private repository just for me I
07:26 - may upload my DOT vs code folder so then
07:29 - I can just pull it down on another
07:30 - computer and automatically get the same
07:32 - settings so you put them inside of here
07:35 - settings.json now I'll show you right
07:37 - that if I change the workbench color
07:38 - here to be all of this
07:40 - okay that's great that's inside of this
07:43 - um what do you call it workspace now
07:45 - what I can do is I can open up a new
07:47 - workspace let's go file open folder uh
07:50 - let me just go here to blockchain expert
07:52 - my new course you guys should check it
07:53 - out from the link in the description and
07:55 - notice here that if I open up a file my
07:57 - line numbers are not a different color
07:59 - because that vs code setting that
08:02 - workspace setting was only applied to
08:04 - the previous workspace okay so let's go
08:05 - back open recent and we'll open our
08:08 - tutorial
08:09 - okay so that was really all I had for
08:11 - workspace settings just wanted to show
08:12 - you kind of how to configure those using
08:14 - this dot vs code folder and then
08:16 - settings.json
08:18 - [Music]
08:23 - all right continuing now we are going to
08:26 - look at tasks now a task is essentially
08:29 - a command that you can run from Visual
08:31 - Studio code it's going to automate some
08:33 - kind of workflow now tasks can be
08:36 - automatically populated or detected by
08:38 - vs code or you can write them manually
08:40 - so I'll show you both instances so right
08:43 - now I just have a very basic npm project
08:45 - this is actually just the boilerplate
08:47 - you get when you create a react
08:49 - application so I just ran npx create
08:51 - react app and you can see I have kind of
08:53 - an npm project in my package.json I have
08:56 - start build test
08:58 - Etc okay now what I can actually do from
09:00 - vs code is I can open up the build
09:03 - scripts now the way to do that is to hit
09:05 - control shift and then b b as in build
09:08 - or command shift B now notice when I do
09:12 - this that actually brings up all of the
09:14 - build tasks that I can possibly run in
09:16 - this case it's detecting the npm build
09:19 - app task from my package.json so already
09:23 - you can probably see how that's fairly
09:24 - powerful because now you don't actually
09:26 - have to go to your terminal to run a
09:28 - command if it's Auto detected by vs code
09:31 - you can just run it directly in Visual
09:33 - Studio code now alternatively there's a
09:35 - lot of other tasks that you can look at
09:37 - so you can hit Ctrl shift p or command
09:39 - shift p to open up the command palette
09:41 - you can type tasks and then you have a
09:43 - ton of option here so you can do open
09:45 - user task configure default build task
09:47 - configure task manage automatic task Etc
09:49 - and you could run a task let's go run
09:52 - task now when you go here it shows you a
09:54 - bunch of tasks that are kind of
09:56 - automatically populated by vs code I can
09:59 - go into npm and I can run any of these
10:01 - so npm install npm eject
10:04 - Etc so let's go npm install and then
10:07 - notice that it starts actually executing
10:08 - this task and it has this in a special
10:10 - task terminal okay so I'm just going to
10:13 - close this for now because we don't need
10:14 - that I just wanted to show you that this
10:16 - is a thing in BS code many people don't
10:19 - actually know about that now Beyond just
10:21 - Auto detecting tasks we can can create
10:23 - our own custom tasks now there is
10:25 - documentation on how to do this so I'll
10:27 - link it in the description for now I'll
10:29 - just share with you kind of a basic task
10:30 - so what I can do is create a DOT vs code
10:33 - folder just like the folder where I had
10:35 - my settings.json file in now in here I
10:39 - can go to tasks dot Json and I can put
10:42 - custom workspace tasks so just as a
10:45 - quick example here I'll paste in a task
10:47 - that just comes directly from the
10:49 - Microsoft documentation you can see that
10:51 - we have the version of the task where
10:52 - the version of this tasks file story and
10:55 - then we have an array or a list of all
10:57 - of the tasks in this case we have one
10:59 - task the label for this is to run tests
11:01 - the type is shell this is the command
11:03 - that we're going to run and then we
11:05 - could change the command for Windows Mac
11:06 - Linux Etc in case it was slightly
11:08 - different we have the group and then we
11:10 - can present this based on specific
11:12 - conditions so I won't get into all the
11:14 - syntax again the URL is here if you want
11:16 - to see how exactly to kind of format
11:17 - this and create different tasks but now
11:19 - that we have this task I can go command
11:21 - shift p to open the command palette I
11:23 - can go task like this and then run task
11:26 - and then what I can do is use the run
11:29 - tests task right so notice that one is
11:31 - right here now it's not going to work
11:33 - because I don't actually have this
11:34 - script defined but if I did then it
11:36 - would run that script okay so let me
11:37 - close this task notice it also
11:39 - highlights in red telling me that this
11:41 - was unsuccessful okay that's all you
11:43 - need to know about tasks very useful
11:45 - feature consider adding it when you have
11:47 - larger projects and scripts that
11:49 - potentially multiple users are going to
11:51 - be running maybe based on a GitHub
11:52 - project or some code base that you're
11:54 - working on
11:58 - foreign
12:01 - here I'm going to share with you a few
12:03 - useful features related to terminals
12:05 - that you may not know about or maybe you
12:07 - do but you just don't use them so
12:09 - oftentimes when I'm working on a project
12:10 - I find myself having a ton of different
12:13 - terminals now it's useful that they kind
12:15 - of get organized on the right hand side
12:16 - here but when they're all just named CMD
12:18 - or they give me kind of a vague
12:20 - description oftentimes I find myself
12:22 - like clicking through all of these to
12:24 - try to find what it is that I'm looking
12:26 - for now obviously vs code is thought of
12:28 - a better way and this involves renaming
12:31 - and customizing your terminals so what
12:33 - you can actually do when you have
12:35 - multiple terminals like this is you can
12:36 - right click them so let's right click
12:38 - and you can change the color the icon or
12:41 - the name so if I go here and I rename I
12:44 - could rename this to say API and then I
12:47 - could go and I could change the color
12:48 - and maybe I make this yellow okay so
12:50 - already much clearer I understand what
12:53 - is being run in this term now of course
12:55 - you can create different types of
12:57 - terminals so you can have a Powershell
12:59 - get bash JavaScript debug
13:01 - Etc and you can actually split terminals
13:03 - as well so in this case maybe I go to
13:05 - split terminal or I would have pressed a
13:07 - little split button there and now I have
13:09 - two Terminals and I can kind of change
13:10 - the sizes this is useful if you want to
13:12 - view two things at the exact same time
13:14 - now another thing you can do with
13:16 - terminals that you may not have seen is
13:17 - you can actually view them in the
13:19 - standard kind of code editing area the
13:22 - way to do that is right click on a
13:23 - terminal and then go to move terminal to
13:27 - editor area now you get the terminal up
13:29 - here and now you can kind of split them
13:31 - as you would regular windows and view
13:33 - terminals at the bottom while you're
13:35 - viewing a terminal window here now
13:37 - continuing here of course I could view
13:38 - another one in the editor area so there
13:40 - you go and now I have two and then I can
13:42 - kind of split these and do what I want
13:43 - with them uh you know as I please so
13:45 - that pretty much covers everything I
13:47 - need to go through related to terminals
13:48 - I'll quickly mention that of course you
13:50 - can change the default terminal as well
13:52 - by going here and going configure
13:54 - terminal settings you can also set up
13:56 - profiles for your Terminals and if you
13:58 - want a quick way to toggle the terminal
14:00 - window then you can do control back tick
14:02 - sorry or command backtick okay that's
14:04 - going to toggle the terminal open and
14:07 - close you also of course can just drag
14:09 - from the bottom of the screen like this
14:11 - and there should be a command palette
14:12 - command to open the terminal so open new
14:15 - terminal and oh that actually opens uh a
14:17 - separate terminal but there you go I
14:19 - guess you know how that works now too
14:26 - all right now we move on to the next
14:28 - section in the video which is going to
14:30 - be on some useful keyboard shortcuts now
14:32 - vs code obviously has a ton of shortcuts
14:35 - you can view all of these and you can
14:37 - customize these to be whatever you like
14:39 - I find the defaults pretty useful and I
14:41 - usually just like to keep the defaults
14:42 - because they're consistent with some
14:44 - other editors so I don't have to kind of
14:45 - remember to constantly change them
14:47 - regardless I'm going to show you a bunch
14:49 - of keyboard shortcuts here I will put
14:51 - them up on the screen and of course will
14:52 - describe what they do we're going to
14:54 - start with some basic ones and then get
14:55 - into some more advanced kind of nuanced
14:58 - and useful ones so let's start with
15:00 - command palette in vs code you need to
15:02 - know how to open the command palette
15:03 - that is going to be Ctrl shift p or
15:06 - command shift p pretty much whenever I
15:08 - say control from now on if you're on Mac
15:10 - then you're going to be using command
15:12 - Okay so to open the command palette
15:13 - there you go and then here we can type
15:15 - any command that we want now what's
15:18 - interesting is that if you want to
15:19 - actually search for a file what you can
15:21 - do is just hit backspace here and now
15:24 - when you don't have this greater than
15:25 - sign you're able to actually do a file
15:28 - search so I can do for example app.css
15:31 - and then I can search for the file and
15:32 - get into that very useful trick
15:34 - especially if you have a larger codes
15:36 - now if you just want to open up that
15:38 - file search you can hit control P so
15:41 - just doing control P not having the
15:43 - shift is going to open up the file
15:45 - search like we just showed you but again
15:47 - to get back to command you just add that
15:49 - symbol down
15:50 - okay so that is the first shortcut next
15:52 - shortcut is to toggle this sidebar here
15:55 - so a lot of times when I'm coding this
15:56 - can kind of get in the way it's a bit
15:58 - annoying so what I like to do is hit
15:59 - Ctrl b b as in basket and that's going
16:03 - to open and close this talk uh this
16:05 - sidebar sorry it's going to toggle it
16:06 - all right there you go now next is not
16:09 - really a shortcut well there is a
16:10 - shortcut for it but I don't remember
16:11 - what this is this is Zen mode so if you
16:14 - open up the command palette and then you
16:15 - type in Zen mode you can toggle this and
16:19 - this is going to bring you into an
16:20 - editor that has no icons no distractions
16:23 - and just the code sometimes for
16:25 - recording I like to have this code
16:26 - editor I find it's kind of cleaner when
16:28 - you guys are following along now to get
16:30 - out of that I can just hit Ctrl shift p
16:32 - again
16:33 - okay and then I can toggle Zen mode and
16:35 - it brings me outside
16:37 - all right next we are going to look at
16:39 - adding a cursor to all of our matching
16:42 - selections now this is a little bit of a
16:45 - kind of complicated keyboard shortcut
16:46 - but it's very useful especially in HTML
16:49 - so let's say we have a bunch of P tags
16:51 - here and we want to modify the content
16:54 - of all of these was a few ways to go
16:57 - about doing this maybe I actually want
16:58 - to change all these tags to be saying H1
17:00 - Tech what I can do is I can select this
17:03 - and then I can hit Ctrl shift and then l
17:06 - or command shift L and notice it's going
17:09 - to select all of the tags that match
17:11 - this so now I've selected all these and
17:14 - I can kind of tab inside of here and I
17:16 - can change these tags to be whatever I
17:17 - want so I can change these to be in H1
17:19 - okay now I'm done with that I hit Escape
17:21 - now I'm going to do the same thing so
17:23 - I'm going to select my closing P tag
17:25 - here so let's select the whole thing and
17:27 - we're going to hit Ctrl shift L and then
17:29 - again I can go here and I can change
17:31 - this to an ending H1 tag and now I've
17:33 - modified all of my H1 tags using a few
17:36 - keystrokes as opposed to many more if I
17:38 - were going to change all of them uh kind
17:40 - of at once now of course you could use
17:42 - find or replace but sometimes you want
17:44 - to just do it quickly in the code editor
17:45 - in that case you're going to use Ctrl
17:47 - shift l or command shift L alright
17:50 - moving on the next command is actually
17:52 - similar to this one and this is to
17:53 - select all of the content on a single
17:55 - line so a lot of times you want to
17:57 - select the entire line there's a few
17:59 - different ways to go about doing this
18:00 - this but the way that I like to use is
18:02 - control l or command L notice it
18:05 - automatically puts your cursor on the
18:06 - next line by the way and this is going
18:08 - to select the entire line of course then
18:10 - you could change that you can copy it
18:12 - you could do whatever you want with that
18:13 - so that's going to be command l or
18:16 - control L that just selects the entire
18:18 - line that you're on again that's kind of
18:19 - how it looks right
18:21 - okay next command that we have is go to
18:24 - line now this can be useful if you're in
18:26 - a very large code file say you've got an
18:28 - editor or say you got an error sorry and
18:30 - it said hey you know there's a mistake
18:31 - online 43 there's an error here what you
18:34 - could do is hit Ctrl G or command G and
18:37 - then you can go to whatever line you
18:39 - want so if I want to go to line say 27
18:41 - then it brings me directly to line 27.
18:43 - if I want to go to line one brings me to
18:45 - line one unfortunately my file is not
18:47 - quite large enough to show the
18:48 - usefulness of this maybe I have a larger
18:50 - file in here it doesn't look like I do
18:52 - okay here we go let's go command G
18:56 - let's go to Line 39 and then it brings
18:58 - me to that line all right so we're back
19:01 - inside of our app file now and I'm going
19:03 - to show you another shortcut which is
19:04 - related to commenting a line now this is
19:07 - very useful when you want to toggle
19:09 - comments so maybe something is commented
19:11 - you want to uncomment it or you want to
19:12 - uncomment multiple lines at a time this
19:15 - is what you'd use so let's just create a
19:16 - variable we'll say we can spell cons
19:18 - correctly cons hello is equal to one and
19:21 - then what I'm going to do on this line
19:22 - here it doesn't matter if the whole line
19:24 - selected my cursor just has to be here
19:26 - I'm going to hit control and then the
19:28 - forward slash on my keyboard or command
19:30 - and the forward slash on my keyboard
19:32 - that's going to comment out the whole
19:33 - line now to toggle this I just keep
19:35 - hitting it right it's going to remove
19:36 - the comment or add it so very useful if
19:39 - you have say a few lines you want to
19:42 - comment all of them select and then you
19:44 - can comment and then you can toggle the
19:46 - comment of course you could do a block
19:47 - comment but this is pretty useful now
19:50 - it's gonna automatically change the
19:52 - comment type based on the language that
19:53 - you're working on uh working in sorry if
19:55 - I was in pi python then it would
19:57 - obviously change it to the pound symbol
19:59 - now let's say I wanted to comment out
20:01 - maybe a tag in here well the comment for
20:03 - this is slightly different so if I hit
20:04 - Ctrl forward slash notice it gives me
20:06 - the correct style of comment uh whereas
20:09 - if I just tried to do a slash slash here
20:11 - that's not going to work right okay so
20:13 - there you go that is toggling your
20:15 - comments
20:17 - all right next shortcut is one that I
20:19 - always forget that that is so useful and
20:21 - this is to move a line up or down so
20:24 - especially in HTML maybe I have my image
20:27 - here and I want to move this down in the
20:29 - file rather than copying it and kind of
20:31 - pasting it which I can do but that
20:33 - typically requires me go to my mouse
20:35 - what I can do is Select this line or
20:37 - just put my cursor here and then I can
20:40 - use option or alt so if you're on Mac
20:43 - you're going to use option if you're on
20:44 - Windows or Linux you're going to use alt
20:46 - and I'm going to hold that and then I'm
20:48 - just going to use my arrow keys and go
20:49 - up and down this allows me to now move
20:51 - this all around the file again that's
20:54 - going to be holding alt or holding
20:56 - option depending on the operating system
20:57 - that you're on okay very useful next
21:01 - shortcut that I have another very useful
21:03 - one is to duplicate a line now to
21:06 - duplicate a line you're going to hit
21:07 - option or alt plus the shift key and
21:10 - then you're going to use the up or down
21:12 - arrow key so in this case I'm on line
21:13 - eight I'm going to hit shift alt because
21:15 - I'm on Windows and then down that's
21:18 - going to copy the line down okay now if
21:20 - I go here so I'm on this image tag and I
21:22 - hit shift alt up then it's actually
21:24 - going to copy the line upwards now I
21:26 - know this seems a bit weird because
21:27 - these are all image tags here but let me
21:30 - show you again
21:31 - if I go here let's go to this a tag and
21:34 - I hit control or sorry shift alt up
21:37 - notice it copies that line upwards okay
21:39 - now let's get rid of that now if I
21:42 - select this whole thing and I hit shift
21:43 - alt up it's going to select the whole
21:45 - thing and copy that up if I go down then
21:48 - it's going to copy it down okay so very
21:50 - useful again that's going to be shift
21:52 - alt or shift option all right now we
21:55 - move on to the last notable shortcut
21:57 - which is a multi-line edit I use this
21:59 - one all the time
22:01 - now the way this works is you are going
22:03 - to hit control and then alt or control
22:06 - and option and then you're just going to
22:08 - move your cursor up or down okay now
22:11 - this allows you to edit multiple things
22:13 - at a time so notice here that my cursors
22:16 - are in multiple locations and I can well
22:18 - edit all of these okay now let me get
22:20 - out of this
22:21 - let's do the same thing over here so I'm
22:23 - going to go
22:24 - Control Alt okay and then I can go up
22:26 - and down and I can kind of move these
22:29 - around and do whatever I want with these
22:30 - different cursors and edit multiple
22:32 - lines at the exact same time so
22:34 - depending on the type of file you have
22:35 - and what you're working on this can be
22:37 - extremely useful again this is going to
22:39 - be Ctrl alt or control option depending
22:42 - on your operating system
22:49 - all right so to start wrapping up the
22:51 - video here I'm just gonna mention to you
22:53 - a few useful extensions that I
22:55 - personally use you can see that I have a
22:57 - ton of extensions here so if you want to
22:59 - kind of pause you can see all the ones
23:00 - that I use but the main ones that I want
23:03 - to mention here are code spell checker
23:05 - so I'm going to go code spell you can
23:07 - see I have that here by the way I got to
23:09 - this page by clicking on this icon right
23:11 - here which is extensions also Ctrl shift
23:13 - X code spell checker very useful I think
23:16 - that's straightforward what that does
23:17 - another one I like is prettier which is
23:20 - right here this automatically formats
23:21 - your code of course I have the python
23:23 - extension installed and any other
23:25 - language specific extension that I'm
23:27 - using so if I'm using JavaScript I
23:29 - install that extension and then another
23:32 - extension that I like is git lens now
23:35 - what this does is actually tell you uh
23:37 - the commit message related to specific
23:40 - files so I think I can kind of demo this
23:42 - if I go back to app.js notice here it
23:45 - says you 26 minute ago minutes ago
23:47 - initialize project using this now uh the
23:50 - reason I like this is so I can see if I
23:52 - change the line or if someone else
23:53 - changed the line I can view this
23:55 - specific commit and then I can kind of
23:57 - say Hey you know who messed this up or
23:58 - did I make this mistake or what's going
24:00 - on here and I can ask the author of that
24:02 - line I just kind of saves a bit of time
24:04 - and makes everything really clear when
24:06 - I'm working in a GitHub repository now
24:08 - of course there is built-in GitHub
24:10 - um integration here for vs code so I'm
24:13 - sure many of you know how to use this I
24:15 - won't go through this extension it's
24:17 - already in vs code you don't need to
24:18 - install it and you can kind of see all
24:20 - your changes you know you can look at
24:22 - the side by side
24:23 - Etc and then if you're working with
24:25 - something like Azure say you're
24:27 - deploying a web service you're
24:28 - connecting to a database there's all
24:30 - kinds of azure extensions that you can
24:32 - install related to the different Azure
24:34 - services so I don't have any right now
24:36 - but if I was working with same Azure
24:38 - database or Azure storage I would of
24:40 - course install these extensions and then
24:42 - I would be able to connect directly to
24:44 - those instances and pretty much do
24:46 - everything I need to from vs code
24:54 - all right so with that said I'm gonna
24:56 - start wrapping up the video here if you
24:58 - want to learn more about vs code GitHub
25:00 - GitHub actions and more advanced
25:02 - developer workflows then make sure to
25:04 - attend the webinar that we are doing on
25:06 - May 9th as a part of the developer
25:08 - digital Meetup tour this webinar will be
25:11 - in collaboration with Microsoft and of
25:13 - course it will include a live q a
25:14 - session if you want to be a part of that
25:16 - make sure you go to the link AKA dot Ms
25:19 - slash Tech with Tim and register for the
25:21 - webinar it will also be linked in the
25:23 - description with that said thank you so
25:25 - much for watching and I look forward to
25:26 - seeing you in another YouTube video
25:31 - foreign
25:33 - [Music]