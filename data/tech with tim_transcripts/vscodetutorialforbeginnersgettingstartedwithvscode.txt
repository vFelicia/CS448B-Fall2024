00:02 - [Music]
00:08 - hello everybody and welcome to this
00:10 - visual studio code
00:11 - full tutorial for beginners in this
00:14 - video i'm going to be aiming to show you
00:15 - all of the important functionality in vs
00:17 - code that you need to know
00:19 - to get up and running as fast as
00:20 - possible and be as efficient as you
00:22 - possibly can
00:23 - this tutorial is designed for people
00:25 - that have never seen vs code before
00:27 - however if you have seen vs code and you
00:29 - don't know all of the functionality in
00:30 - it this is probably useful to watch
00:32 - and if you're looking for any specific
00:34 - features or functionality
00:36 - look in the description i will have some
00:37 - time stamps that state all of the stuff
00:39 - that i will be covering
00:40 - in this video so with that said let's
00:42 - dive in after a quick word
00:44 - from our sponsor before we get started i
00:46 - need to thank the sponsor of this video
00:48 - which is
00:48 - alco expert oligoexpert is the best
00:51 - platform to use when preparing for your
00:53 - software engineering coding interviews
00:55 - as the highest quality coding interview
00:56 - practice questions
00:58 - with over 115 practice questions
01:00 - detailed solutions in nine of the most
01:02 - popular programming languages
01:04 - a feature-packed browser-based coding
01:06 - environment extensive test suites and
01:08 - conceptual overviews and code
01:10 - walkthroughs
01:11 - for each and every problem algo expert
01:13 - is the best resource to use to ace your
01:16 - coding interviews
01:17 - algo expert also has a data structures
01:19 - crash course
01:20 - coding interview assessments and a brand
01:22 - new mock interviews feature
01:24 - i can highly recommend algo expert as a
01:26 - former customer myself
01:27 - and now an official instructor on the
01:29 - platform get started using algo expert
01:31 - today by hitting the link in the
01:33 - description
01:33 - and using the code tech with tim for a
01:35 - discount on the platform
01:37 - so before we actually go through the
01:38 - visual studio code application
01:40 - i wanted to quickly give you an
01:42 - introduction to what it is so vs code or
01:44 - visual studio code
01:46 - oftentimes people will refer to it as bs
01:48 - code is a free
01:50 - open source lightweight code editor that
01:52 - works for almost every programming
01:54 - language
01:54 - now vs code is the most popular code
01:57 - editor at least in 2021 when i'm filming
01:59 - this video
02:00 - and is maintained and developed by
02:02 - microsoft now the reason that people
02:03 - like it so much
02:04 - is because it's extremely versatile it's
02:06 - extensible so you can actually
02:08 - make your own extensions for vs code and
02:10 - you can really make your vs code
02:12 - environment
02:13 - specific to your development needs so
02:15 - with that said
02:16 - let's get into the vs code environment
02:18 - i'll actually open the application
02:20 - if you have not yet downloaded it i will
02:21 - leave a link in the description so you
02:23 - can download and set up
02:24 - vs code so i'm now here inside of visual
02:27 - studio code
02:28 - when you first open vs code you may see
02:30 - a screen that looks something like this
02:32 - it should most likely open this welcome
02:33 - screen
02:34 - you don't have to have this welcome
02:35 - screen open you can close it by pressing
02:37 - this button
02:38 - but this just provides some shortcuts
02:39 - for example to open a folder
02:41 - clone a repository create a new file or
02:43 - review some of your recent projects
02:45 - so i'm going to start by closing this
02:47 - and i will show you the first important
02:49 - aspect of vs code
02:50 - which is this explorer tab so you can
02:52 - see that there are some tabs right here
02:54 - these are very frequently used tabs
02:56 - you're probably going to use
02:57 - all of these when you're actually
02:58 - developing or writing code in bs code
03:00 - and this explorer tab is kind of like
03:02 - your windows or file explorer
03:04 - this explorer tab allows you to view all
03:06 - of the files that are in your project
03:08 - to create new files to create new
03:10 - directories to modify or manage files
03:12 - move them around and do everything that
03:14 - you would probably
03:15 - be able to do in a regular windows
03:18 - explorer like this
03:19 - or in your finder if you're on mac or
03:21 - whatever the explorer is
03:22 - for ubuntu so with that said let's get
03:25 - started by creating a new
03:26 - vs code project i will also show you how
03:28 - to open an existing project
03:30 - so to do this we are going to go to file
03:32 - and we're going to press
03:33 - open folder now you'll notice that there
03:35 - is something called a workspace here
03:37 - so in bs code we have kind of two
03:38 - distinguishing things that you can open
03:41 - a folder or a workspace now a workspace
03:44 - is just a folder that has bs code
03:46 - settings that are specific
03:47 - to that workspace so for example it may
03:50 - have some test scripts that are set up
03:52 - such that there's shortcuts to run them
03:53 - it may have a different font it may have
03:55 - a different size for the editor
03:57 - you can customize settings for a
03:59 - workspace you also have settings that
04:00 - are global
04:01 - and i will show you the global settings
04:03 - in a few minutes anyways for us we don't
04:05 - need to worry about a workspace in fact
04:07 - almost
04:08 - all of the time you're not going to use
04:09 - a workspace you can press open
04:11 - folder so here in open folder if you
04:13 - have a folder that you would like to
04:15 - open so you have some project you can
04:16 - just open that folder
04:18 - or you can create a new folder and then
04:20 - that will kind of create a new project
04:22 - so here i'll make a new folder i'll call
04:24 - this vs
04:26 - code quick start and i'll spell start
04:29 - correctly
04:30 - and then we will open this folder and
04:32 - that will be our new project
04:34 - so now when i open this folder bs code
04:36 - will refresh and we can see that this
04:38 - folder is now open
04:39 - in our editor or in our explorer sort so
04:42 - from here we can start by creating some
04:43 - new files or some new folders
04:45 - so let's actually make a folder i'll
04:47 - make a folder here and just call this
04:48 - test
04:49 - and then inside of this folder i'll
04:50 - create a few files i'll say test
04:52 - dot py that's a python script and then i
04:55 - will say test.html that of course is an
04:57 - html script
04:58 - notice we get some fancy icons popping
05:00 - up here before the file
05:02 - telling us that vs code does actually
05:03 - know what these files are
05:05 - and it recognizes the file extensions
05:07 - now if you are not seeing these icons
05:09 - don't worry i will show you how to make
05:10 - them appear in one minute
05:12 - so that is the basics of opening
05:14 - projects opening files and folders from
05:16 - here you can right click on files and do
05:18 - anything that you normally would be able
05:20 - to do
05:20 - you can copy them you can paste them you
05:22 - can move them around for example if i
05:24 - want to move this
05:25 - file outside of this test folder i can
05:27 - just drag it out
05:28 - and now it will ask me if i want to move
05:30 - this i say yes and now you can see this
05:32 - outside of this interior directory
05:34 - now right above this tab here where it
05:36 - says vs code quick start you can see i
05:38 - have my open editors tab and this will
05:40 - just show you all of the files that you
05:41 - currently have open
05:43 - so like in most ides you can have
05:45 - multiple files open here notice that
05:46 - when i double click on them they will
05:48 - stay
05:48 - open in the editor here and i can drag
05:51 - them around and
05:52 - move them as i please everything in vs
05:54 - code is very intuitive and you can
05:56 - resize everything as you would
05:57 - intuitively think to be able to do
05:59 - so now that we understand the file
06:01 - explorer how to open projects and how to
06:03 - create a new project
06:05 - i will show you the vs code terminal
06:06 - which in my opinion is one of the most
06:08 - useful
06:09 - and just nice to have features in vs
06:11 - code so to open the vs code terminal
06:13 - you can type the following command
06:15 - control and then backtick
06:17 - now backtick is on the same key as the
06:19 - tilde which is kind of that squiggly
06:20 - line that no one knows what it's called
06:22 - it is to the left of the one key and
06:24 - below the escape key
06:26 - but there's also an easier way to open
06:27 - up the terminal you can simply drag from
06:29 - the bottom of your screen
06:31 - and move it up now this terminal is just
06:34 - like any default terminal that you would
06:35 - use
06:36 - so if you're on windows this is going to
06:38 - be powershell or your standard command
06:40 - prompt if you're on mac or on linux this
06:42 - will probably be your bash or whatever
06:43 - the default terminal is for your system
06:46 - and inside of here you can type any
06:47 - commands that you would normally type
06:49 - now by default this terminal will start
06:51 - in the directory of the project that you
06:53 - opened
06:54 - if you're using a specific python
06:55 - interpreter like i am right here
06:57 - it will automatically activate that
06:59 - interpreter for you you don't have to
07:00 - worry about this if you're not someone
07:02 - who works in python or understands
07:03 - anaconda
07:04 - this is just something that by default
07:05 - will happen when you have your python
07:07 - interpreter set up in a specific way
07:09 - now the nice thing about this is that
07:10 - you can create multiple terminal
07:12 - instances
07:13 - you can kill terminals you can split
07:14 - them so you can view multiple terminals
07:16 - you can also look at things like an sql
07:18 - console a debug console
07:20 - an output window and any problems that
07:22 - may occur so for example if you're
07:24 - working in say a java file or a
07:26 - typescript file and there was some
07:27 - typing issues
07:28 - all of those would pop up right here you
07:30 - would be able to press on those problems
07:32 - and then it would bring you
07:34 - to where those problems actually existed
07:36 - in your project
07:37 - anyways let's focus on the terminal the
07:39 - first thing i'm going to do here is show
07:40 - you this window right here
07:42 - so this window where it says conda will
07:44 - allow you to actually view and configure
07:46 - all of the terminals you currently have
07:47 - open
07:48 - so i'm going to create a new terminal by
07:49 - pressing this plus button
07:51 - and notice that it now shows you i'm in
07:52 - the powershell terminal
07:54 - so i'm going to go back to my conda
07:56 - terminal and i'm going to kill this
07:57 - terminal by pressing this trash button
07:59 - right here
08:00 - now it will bring me to my only active
08:02 - terminal which is powershell
08:03 - inside of here of course i could type
08:05 - any command that i want so i could cd
08:07 - into something
08:08 - i could ls i could clear so cls and any
08:12 - other thing that you would normally do
08:13 - you can do in the terminal
08:15 - now i will create another terminal here
08:16 - so i have now two powershell terminals
08:18 - one of them is senkana you don't have to
08:20 - worry about that
08:20 - and if i want to view both of these
08:22 - terminals at the same time i can now
08:24 - split this terminal so when i split this
08:26 - terminal notice that i have conda
08:28 - hyphen conda so i now have this terminal
08:30 - but two times
08:32 - so i could type two separate things and
08:33 - view them i believe i could split this
08:35 - again and now i would have three
08:36 - terminals and now i can close this
08:38 - close another one and close that one by
08:40 - pressing the trash
08:41 - icon anyways what i'll do now is just
08:44 - close
08:45 - this so i can drag this downwards i will
08:47 - now show you
08:48 - the extensions pane the debug pane the
08:51 - github pane
08:51 - and the search pane now first of all
08:53 - whenever i work in bs code
08:55 - i like to work in full screen mode so to
08:57 - get into full screen mode and visual
08:59 - studio code
09:00 - you can press f11 now if you're on mac i
09:02 - believe this is going to be function
09:04 - f11 it may be a different key but on
09:05 - windows at least if you press f11 this
09:07 - will toggle
09:08 - full screen so anyways i'm going to stay
09:10 - out of full screen mode just so we have
09:12 - access to all of the file menus
09:13 - up here and i'm now going to show you
09:15 - the extensions pane
09:17 - so when i press on extensions or i press
09:19 - ctrl shift and then
09:20 - x it will show me all of the extensions
09:22 - i have installed and recommended
09:24 - extensions for my development
09:26 - environment
09:26 - so vs code is great because by default
09:28 - it comes very bare bones there's pretty
09:30 - much
09:30 - nothing installed by default whenever
09:33 - you start working in different languages
09:34 - or using specific
09:36 - frameworks or scripts you're usually
09:38 - going to be prompted to install an
09:39 - extension for those
09:40 - for example you can see here i have 23
09:42 - installed extensions
09:44 - and extensions are just extra
09:45 - functionality for whatever it is that
09:47 - you're doing
09:48 - so if i scroll down you can see i have
09:49 - the python extension notice this has
09:51 - 31 million downloads that is the one i
09:53 - worked on when i was at microsoft
09:55 - i also have this remote wsl extension
09:58 - and a bunch of other ones as well
10:00 - so extensions are super simple to manage
10:02 - you can just press uninstalled
10:04 - extensions to disable them to uninstall
10:06 - them to install them
10:07 - and to search for an extension you can
10:08 - just search for it in here
10:10 - so for example one of the extensions i
10:12 - usually recommend people install is
10:14 - called prettier
10:15 - now prettier is a code formatter and i
10:17 - will show you how it works shortly you
10:19 - don't have to install this
10:20 - but it is just an example of an
10:21 - extension you may want to install now if
10:23 - you were working in java are you working
10:25 - in python or javascript or typescript
10:27 - you would install
10:27 - those extensions and then you get
10:29 - support for those languages
10:31 - so that is why vs code is loved by many
10:33 - because it doesn't come with all this
10:34 - stuff you don't need
10:35 - you just install what it is that you do
10:37 - need so anyways that is the extensions
10:39 - tab
10:40 - again go here whenever you're looking
10:41 - for some specific functionality
10:43 - there's a lot of useful extensions if
10:45 - you would like a video on my top
10:46 - extensions then leave a like and a
10:49 - comment
10:50 - in the comment section down below and
10:52 - then i will potentially make a video on
10:53 - that
10:54 - anyways now that we have looked at this
10:56 - extensions tab i want to show you this
10:58 - search tab so one of the most common
10:59 - things you're going to be doing when
11:00 - you're writing code
11:01 - is you're going to be searching for
11:03 - variable definitions you're going to be
11:04 - trying to find and replace things
11:06 - and well being able to search for
11:08 - specific lines or search for specific
11:10 - text is very useful
11:11 - so let me now open up a bit of a larger
11:13 - project that already exists and i will
11:15 - show you how we can use this search
11:17 - functionality
11:18 - so i've opened a web development project
11:19 - that i actually did for an entire
11:21 - youtube tutorial series this was the
11:23 - full stack web application with react
11:25 - and django and inside of here you can
11:27 - see i have a ton of different files i
11:29 - have some python ones i have some
11:30 - javascript ones
11:31 - whatever i have a bunch of different
11:32 - things so firstly i'll show you how you
11:35 - can actually zoom in and zoom out of vs
11:37 - code because notice my text is quite
11:39 - large and you probably don't want it
11:40 - this large when you're actually writing
11:41 - code
11:42 - and not making youtube tutorials so to
11:44 - do this you can press ctrl
11:46 - then minus and plus on your keyboard as
11:48 - you normally would
11:49 - and this will shrink and zoom in and
11:52 - resize this vs code window
11:54 - now i just want you to note that this is
11:55 - zooming so we are simply
11:57 - scaling the vs code window we are not
11:59 - actually changing the size of the font
12:01 - here which i will show you how to do in
12:03 - a minute when we get to the settings
12:04 - section
12:05 - anyways i wanted to show you the search
12:06 - tab so let's zoom in one more time
12:09 - and here what we can do is just search
12:11 - for text so if i wanted to search for
12:13 - say
12:13 - room join which is some text that exists
12:16 - in my program
12:17 - you can see it will show me all of the
12:18 - files that have the text
12:20 - room join all i have to do is press on
12:22 - these and it will bring me
12:24 - to where that text is defined now if i
12:26 - want to replace some specific text
12:29 - what i can do is type the text that i
12:30 - want to replace
12:32 - so i could just say room join and then
12:33 - maybe i want to replace that with join
12:35 - and it will show me what this
12:36 - replacement will actually be and i can
12:38 - now press this button right here to
12:40 - replace
12:41 - all there's a few more settings here
12:42 - like match case
12:44 - match whole word and regular expression
12:46 - but i won't get into those in this video
12:49 - so that is the search tab there is not
12:50 - much more to talk about with
12:52 - that and now i'm just going to show you
12:54 - a few kind of editing tricks or a few
12:56 - things that you can do
12:57 - in the editor itself so one of the most
12:59 - common things or one of the most useful
13:01 - things that you can actually do in vs
13:02 - code
13:03 - is you can find the definition of
13:05 - variables or of classes
13:07 - so for example i have i'm trying to find
13:10 - some variable here that this is going to
13:11 - be good for
13:12 - i have this variable here called room
13:14 - code so if i highlight this first of all
13:16 - you can see it's highlighting all of the
13:17 - other room codes but what i could do
13:18 - here is right click on this
13:20 - and click go to definition go to type
13:22 - definition
13:23 - go to implementations go to references
13:26 - peak and a ton of other useful things
13:28 - so i won't really show you all of these
13:30 - because there's a lot of different ways
13:31 - to look at this
13:32 - but i just wanted you to be aware that
13:34 - you can do things like this and
13:35 - specifically if you're working in a
13:37 - typed language
13:38 - it's very useful to look at say all of
13:39 - the references of a variable
13:41 - or look at where it was defined now this
13:43 - isn't going to work very well in
13:44 - javascript but if you're working in
13:45 - typescript or java or c
13:47 - plus or something this would be a lot
13:49 - more useful anyways if you want to do
13:51 - some basic stuff like you want to find
13:52 - text in a file
13:54 - so you don't want to use the search tab
13:55 - here because this finds it in all of the
13:57 - files
13:58 - in your directory in your project you
14:00 - can press ctrl
14:01 - f it will bring up this right here which
14:04 - will allow you to just search for things
14:05 - in this file so of course you can press
14:07 - enter and it will bring you down to the
14:08 - different matches that it finds
14:11 - now if you want to actually replace text
14:13 - you can press ctrl
14:14 - h now this will open up this replace tab
14:16 - right here you can also just press this
14:18 - little arrow
14:19 - and now you can find and replace you can
14:21 - replace one at a time
14:22 - or you can replace all of the matches
14:25 - all right so that is finding and
14:26 - replacing
14:27 - now i will show you a few other
14:28 - interesting tricks that are very useful
14:30 - for example you can see we have all
14:32 - these windows open here
14:33 - sometimes you'll notice when i open a
14:35 - file so let's actually just open info.js
14:38 - you see that this file is italicized
14:40 - when the name of the file is italicized
14:42 - that means that this is going to close
14:43 - when you open another file so if i open
14:45 - homepage.js
14:47 - notice that my info.js is going to close
14:49 - if you want this to stay open
14:51 - you can double click on it notice it
14:53 - will not go italicized now
14:54 - and then it will stay open it also will
14:56 - stay open if you make any changes to the
14:58 - file itself
14:59 - anyways once we have all of these files
15:01 - a lot of times you want to view files
15:02 - side by side
15:03 - or up and down vertically to do that you
15:05 - can right click on the file
15:07 - and you can split this up down left or
15:09 - right so if i split left
15:11 - now i can see multiple files and i can
15:12 - resize the windows just by moving them
15:14 - around
15:15 - like this i can also split again so i
15:18 - can split this up
15:19 - and now you can see we have all of these
15:20 - files open and you can play around with
15:22 - that yourself
15:23 - uh pretty straightforward and easy to
15:24 - figure out how that works i also can
15:26 - just drag this file around to wherever i
15:28 - want so i could drag it on here i also
15:30 - could drag it up here
15:31 - and then it will automatically respond
15:33 - to that action
15:34 - all right so now let's quickly go
15:36 - through the settings page of bs code
15:38 - there's not a lot of settings that you
15:39 - need to modify
15:40 - in fact by default you probably don't
15:41 - really need to change anything in bs
15:43 - code
15:43 - but it is useful to know what some of
15:45 - these settings are so when i press on
15:47 - this settings button right here notice
15:48 - we see a few things popping up the
15:50 - command palette
15:51 - the settings menu which you can access
15:52 - from control plus comma
15:54 - extensions keyboard shortcuts user
15:57 - snippets color theme
15:58 - and a bunch of other things so actually
16:00 - let's change the color theme first
16:02 - this is probably the first thing you're
16:03 - going to want to do we'll go color theme
16:05 - and you can see i'm using manaki or
16:07 - however you say that i probably
16:08 - mispronounced that we could change this
16:10 - to say
16:10 - solarize dark let's change this to
16:13 - something else now
16:14 - let's go with light default which i
16:16 - think looks horrible
16:18 - let's change this now back to the one
16:20 - that i liked okay so this is my favorite
16:21 - one by far but
16:22 - everyone has their own preference and
16:24 - then i will show you a very useful thing
16:26 - here
16:26 - so if you press on the settings button
16:28 - and you open the command
16:30 - palette this is something that you're
16:31 - going to use all of the time in vs code
16:34 - so a lot of the extensions that you
16:35 - install will have some commands that
16:38 - come with them
16:38 - now to open the command palette you of
16:40 - course can press settings and then you
16:42 - can open it manually
16:43 - or you can press ctrl shift and p
16:46 - on your keyboard so this opens up the
16:48 - command palette and inside of here you
16:50 - can type a ton of different commands
16:51 - so for example if i type python you can
16:54 - see all of the commands that are
16:55 - prefaced
16:55 - by python now of course i can't really
16:57 - go through all these commands because
16:58 - this depends on the extensions that
17:00 - you're using
17:01 - but if you're looking for a specific
17:02 - command say like copy just type it in
17:04 - the command palette and see if it pops
17:06 - up
17:06 - and chances are you'll find something
17:08 - that you're looking for another useful
17:09 - one is format document
17:11 - so if you have a formatter installed you
17:12 - can press format document with
17:14 - and then you can pick the formatter that
17:16 - you want to use in this case you can see
17:17 - only python is the one that i have so i
17:19 - press python and it will automatically
17:20 - format this document for me
17:22 - all right so that's the basics of the
17:24 - command palette the next thing i'm going
17:25 - to show you is the file
17:27 - explorer so yes there is this explorer
17:29 - here but if you want to search for a
17:30 - file name what you can do is press ctrl
17:33 - p
17:34 - this will now bring up the search file
17:36 - by name window i don't really know the
17:38 - name of this
17:38 - and what you can do is just search for
17:39 - files so i can search for say util.pi
17:42 - it will show up here i can press that to
17:44 - open that file very useful
17:46 - saves you a lot of time now there's a
17:48 - ton of keyboard shortcuts in visual
17:50 - studio code
17:51 - to find them you can go to the settings
17:52 - menu and in fact let's do that
17:54 - so let's now go to settings so control
17:57 - plus comma
17:58 - and this is where we can change all of
17:59 - the settings for vs code so you can see
18:01 - we have our font size this is an
18:03 - important one
18:03 - we can also search for all of our
18:05 - settings up here and there's a ton of
18:07 - other things that we can change so i'll
18:08 - let you guys mess around with this on
18:10 - your own there's not too much for me to
18:11 - go through here but the first thing
18:12 - you're probably going to want to change
18:13 - is font size
18:14 - if you're like me and you like your font
18:16 - to be nice and large
18:18 - all right so that is the settings page
18:19 - in vs code now i will show you the debug
18:22 - window and i will show you
18:23 - the github window so let me actually
18:25 - open up a new project to illustrate this
18:27 - and i will be right
18:28 - back all right so i've opened a new
18:30 - project and now i will show you how to
18:32 - run a file
18:33 - i will show you this github window and
18:35 - then this run and debug window
18:37 - so first of all if you want to run a
18:39 - file this of course depends on the type
18:41 - of file that you're using but for python
18:43 - files for example
18:44 - there is this run button at the top of
18:46 - the screen so if i were to type in some
18:48 - code here let's say
18:50 - print hello and then world
18:53 - then what i can do is save this file
18:55 - control s and then
18:56 - run now when i run notice it's going to
18:58 - open up a terminal and then i will see
19:00 - my output
19:01 - down here so that's as easy as it is to
19:03 - run your code but again this depends on
19:05 - the type of file that you're using
19:06 - and this is going to be different
19:08 - depending on what stack you have
19:10 - anyways what i will show you now is this
19:12 - github window so
19:13 - for this github window what i need to do
19:15 - is initialize a github repository
19:17 - but if i was already in a github
19:19 - repository then you would see what we're
19:20 - about to see
19:21 - so what i'm going to do is initialize a
19:23 - repository all this is really going to
19:25 - do for us is run the command
19:26 - git init that creates a new github
19:29 - repository
19:30 - and now notice inside of this we have
19:32 - our source control window
19:33 - which is showing me all the changes that
19:35 - i've made i can add these changes to the
19:37 - staging area by pressing this
19:39 - plus button and i can also remove them
19:41 - from the staging area by pressing the
19:42 - minus button
19:43 - i also can revert all of the changes
19:46 - sorry that's open file but here i
19:47 - believe i can revert all of the changes
19:49 - by pressing discard changes
19:51 - and then once i have the files in the
19:52 - staging area that i want to make a
19:54 - commit for
19:55 - i can type in my commit message so say
19:57 - something like
19:58 - first commit and then i can press the
20:00 - check mark which will actually commit
20:02 - all of these changes so now you can see
20:04 - little two goes away saying that hey we
20:06 - have no files in the staging area
20:08 - now from here i can do a bunch of other
20:10 - things i can toggle the view mode which
20:12 - allows me to actually see all of the
20:13 - changes that i've made to my files in
20:15 - my code editor i also can refresh my
20:18 - github repository
20:19 - i can press these three dots to do
20:21 - things like pull push
20:22 - change branches and all the other
20:24 - standard github commands you would
20:25 - normally want to use
20:26 - there is a nice interface for github in
20:29 - bs code
20:30 - all right so now we understand github
20:31 - and of course there's a lot more to go
20:33 - through but i won't cover it all here
20:34 - let's talk about this run and debug
20:36 - window so this run and debug window
20:39 - allows you to run and debug files
20:41 - so notice that when i'm on an html file
20:43 - here it's not really giving me any
20:44 - meaningful output because i can't really
20:46 - run and debug my html file but for my
20:49 - python file here i can press
20:50 - run and debug and then it will ask me
20:52 - how i want to debug this
20:54 - so you can choose your method i'm just
20:56 - going to go with python file
20:58 - and then it will bring up this little
20:59 - debugger window and it will run the code
21:02 - now i didn't place any breakpoints so we
21:04 - didn't really get any meaningful debug
21:06 - output
21:06 - and i'm not going to be going through
21:07 - debugging in depth i have an entire
21:09 - video on how to debug
21:11 - but the basics are you can press
21:12 - breakpoints by going in the gutter here
21:15 - so this is called the gutter and if i
21:16 - highlight over this it should say
21:18 - place breakpoint anyways you can see
21:20 - these little red dots are different
21:21 - break points in your program
21:23 - and then at the bottom here you can see
21:25 - that we have this breakpoint window
21:27 - which is showing us where the break
21:28 - points are anyways if i run
21:30 - and debug my file with a breakpoint so
21:33 - let's go ahead and do that
21:34 - as soon as i hit that breakpoint my
21:36 - program is going to stop
21:37 - i can see all of the variables on the
21:39 - left-hand side of my screen
21:40 - i can type in expressions to watch from
21:42 - right here i also can play
21:44 - i can step forward i can step into and i
21:47 - can step
21:48 - out of i can also restart stop and of
21:50 - course play and pause
21:52 - so that is kind of the basics of the
21:54 - debug window again i don't want to go
21:55 - into depth in any of this stuff
21:57 - just showing you what exists there's a
21:59 - few other windows here for example
22:00 - remote explorer
22:01 - and sql tools i'm not going to talk
22:03 - about those in this video
22:04 - and in fact i think that covered pretty
22:06 - much everything that i wanted to show
22:08 - you
22:08 - so last thing that i will mention is
22:10 - that there is a ton more stuff in bs
22:12 - code for example you can modify the
22:13 - appearance going in full screen mode
22:15 - going in something called zen mode which
22:17 - removes all of the gutters and all of
22:18 - the side menus
22:20 - i believe to get out of this uh you just
22:22 - press f11 it removes you from
22:24 - full screen mode there's a few other
22:26 - interesting things like your editor
22:27 - layout which you can change
22:29 - and yeah just a ton of stuff in vs code
22:31 - it's super useful
22:33 - super versatile and also keep in mind
22:35 - there's this little kind of bottom menu
22:36 - here that shows you some useful
22:38 - information
22:38 - so anyways that is all i wanted to cover
22:40 - i hope that this video was helpful to
22:42 - you
22:42 - if it was make sure you leave a like
22:44 - subscribe to the channel and i will see
22:46 - you in another youtube video