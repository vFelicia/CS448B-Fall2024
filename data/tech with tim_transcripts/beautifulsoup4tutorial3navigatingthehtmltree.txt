00:00 - hello everybody and welcome to video
00:02 - three in this python web scraping
00:04 - tutorial series in this video i'm gonna
00:07 - be showing you how we can actually
00:09 - navigate through the tree so the tree
00:11 - structure that's generated by reading in
00:13 - an html document specifically i'm going
00:16 - to show you how we can do this to
00:17 - actually find the prices of different
00:19 - cryptocurrencies so i have this window
00:22 - right here which is coin market cap open
00:25 - notice there is kind of like a table
00:26 - here of all of these different coins and
00:29 - i'll show you how we can kind of iterate
00:31 - through them using some different
00:32 - functionality of beautiful soup i've not
00:34 - yet showed you get the name and then get
00:37 - the price with that said let's go ahead
00:39 - and dive in
00:43 - [Music]
00:49 - all right so let's go ahead and get
00:51 - started in front of me here i have the
00:52 - website coinmarketcap.com
00:55 - which has all of the popular
00:56 - cryptocurrencies and then i've opened it
00:58 - up in inspect element or opened the
01:00 - inspect tab the way you do this in
01:03 - chrome is you right click and you press
01:05 - inspect you can also do control shift
01:06 - and i believe that's an i
01:08 - anyways you can see this is kind of what
01:10 - the html is looking like and the data
01:13 - that i want here is inside of this table
01:16 - so if you look here i'm going to
01:17 - highlight over t-body t-body is what i'm
01:19 - looking for i want to see the data in
01:22 - this table and so what i'm going to
01:24 - start by doing here and notice i already
01:26 - have the code that actually loads in the
01:29 - coinmarketcap.html just wrote the url
01:31 - got my request or sent my request
01:33 - grabbed the text
01:34 - and then read it in with beautiful soup
01:36 - but what i'm going to start by doing is
01:38 - looking for the tea t-body tag
01:40 - so i'm just going to say doc dot t-body
01:43 - i think this should work at least and
01:45 - this should give me the actual table
01:47 - body so t-body is equal to that and
01:50 - let's print it
01:52 - t-body okay when i print this we do
01:55 - indeed get the table body that we are
01:57 - looking for so what i want to show you
01:59 - in this video is how we can navigate by
02:02 - looking at things that are on at the
02:04 - same level in the tree so if we have a
02:08 - look here notice that t body is the
02:11 - parent of all of these table rows and
02:14 - all of these table rows are on the same
02:15 - level in the tree so what i could do is
02:17 - just get all of the contents of the
02:19 - table body and loop through this right i
02:22 - think i showed you how to do that but i
02:23 - will show you that again what we can
02:24 - also do is look at the siblings of tags
02:28 - that are within the same level of the
02:30 - tree
02:31 - so all of these table rows here they're
02:33 - all siblings of each other because
02:34 - they're at the same level they have the
02:36 - same parent and so from any one of these
02:38 - table rows i can go to the next sibling
02:40 - or the previous sibling so i don't just
02:42 - have to traverse by searching for
02:44 - specific tags from one tag i can jump
02:47 - down to the next one these tags don't
02:49 - need to be named the same thing
02:51 - it just allows you to go to the next
02:53 - sibling or the previous sibling or all
02:55 - of the next siblings or all of the
02:56 - previous siblings so let's have a look
02:58 - at how that works
03:00 - so i have my t body and i'm actually
03:02 - going to start by just saying trs is
03:04 - equal to t body dot
03:06 - contents now what this does is give me a
03:09 - list of all of the tags that are inside
03:12 - of my table body so it should give me
03:14 - all of my table rows so if i print
03:16 - tr's like this
03:18 - we should see we get a list and if i go
03:20 - to the top here notice we have a table
03:22 - row
03:24 - so now that i have the table row i just
03:26 - i'll just show you how the the siblings
03:27 - work so if we go to tr's here let's grab
03:30 - the very first table row that we have
03:32 - and let's look at this next sibling like
03:36 - that so if we go trs.next sibling it
03:39 - should work should give me something
03:42 - it gives me the next table row that is
03:45 - uh after the first table row and to
03:47 - prove this to you let's try to look here
03:49 - notice this says f the very first piece
03:51 - of data that we have in our table is
03:54 - bitcoin and so that is indeed working
03:56 - it's giving us the next sybil
03:58 - now in the same way if i go to table
04:00 - rows one
04:02 - i can use dot previous sibling
04:04 - so this will bring me back up in the
04:06 - tree to the previous sibling so let's
04:09 - look for
04:10 - a bitcoin here somewhere i'm sure
04:13 - can i can i search it uh no that's not
04:15 - gonna work in my console
04:17 - okay let's just run this again so that i
04:19 - get the output uh i think bitcoin is
04:21 - somewhere here yeah there you go okay
04:23 - btc so it is indeed giving me the
04:25 - correct sibling that we are looking for
04:27 - now in the same way that you can look at
04:29 - the next sibling you can look at the
04:30 - next siblings so if i go next siblings
04:34 - like this from table row 0
04:36 - then this will give me a generator
04:38 - object now a generator object is just
04:41 - something you can iterate through
04:43 - so if i wanted to look through this i
04:44 - could say
04:46 - actually can i turn this to a list i
04:47 - think i can turn this to a list let's
04:49 - convert this to a list and
04:51 - i am able to look at all the table rows
04:53 - that come after the first table row
04:56 - okay that's the basics of traversing on
04:58 - the same level so we will continue in
05:01 - one second but i need to quickly thank
05:02 - the sponsor of this video and the series
05:04 - which is i'll go expert algo expert is
05:07 - the best platform to use when preparing
05:08 - for your software engineering coding
05:10 - interviews they have mock interviews a
05:12 - data structures crash course and many
05:14 - other very helpful features to ace your
05:16 - software engineering coding interviews
05:18 - check them out from the link in the
05:19 - description and use the code tech with
05:21 - tim for a discount on the platform now i
05:23 - showed you previously we can also use
05:25 - something like dot parent if i use dot
05:27 - parent this will give me the tag above
05:30 - me so let's not turn this into a list
05:33 - let's go table row 0 dot parent
05:36 - and then notice it should give me the
05:38 - entire tbody tag
05:40 - and just to show you we actually look at
05:42 - the name here and this gives us the name
05:44 - of the tag
05:46 - perfect now again we can also look at
05:48 - the descendants now the descendants
05:51 - gives us everything that comes after or
05:54 - inside of this tag so if i go
05:56 - tr0.descendant
05:58 - and i run this again we get a generator
06:00 - object okay let's convert this to a list
06:04 - and let's run and now notice we should
06:06 - get all of the table data that we're
06:08 - looking for
06:09 - so multiple ways to do this rather than
06:11 - descendants you can also do dot contents
06:14 - both of them work and you can also do
06:17 - dot children now they work a little bit
06:19 - different the children will just give
06:20 - you the tags that are inside of the
06:24 - table rows tag whereas descendants i
06:26 - believe is going to give you everything
06:28 - even the tags that are inside of the
06:30 - other tags uh that might be incorrect
06:32 - but regardless there's descendants
06:34 - children and then what else do we have
06:36 - dot contents
06:37 - okay
06:38 - anyways now that i've showed you kind of
06:40 - traversing the different levels looking
06:42 - at the parent looking at the descendants
06:43 - the contents we want to actually
06:45 - complete our example we want to look for
06:47 - all of the names of the cryptocurrencies
06:49 - and then the prices so we have all of
06:51 - our table rows so what i need to do is
06:53 - loop through all of my table rows first
06:54 - though i'm just going to say
06:57 - prices is equal to an empty dictionary
06:59 - i'm going to say 4 tr in trs and look
07:03 - through all of them now for each table
07:05 - row i want to look through all of the
07:07 - table data that's inside of that table
07:09 - row so i'm going to say 4
07:11 - td in tr dot
07:13 - contents that should give me all of the
07:16 - td tags that i can then loop through
07:18 - then what i want to do inside of here
07:20 - is print td
07:22 - and just have a look at this and i'll
07:24 - print a blank line after this as well
07:27 - just so we can see what this looks like
07:29 - okay so let's
07:31 - go to the very top here
07:32 - and notice we get td okay this looks
07:35 - like an icon or something
07:37 - then we get the rank
07:39 - then we get
07:40 - what looks like the name of the
07:41 - cryptocurrency
07:43 - and then we get the price
07:45 - so
07:46 - we're getting rank
07:48 - uh sorry not rank we're getting
07:49 - something rank
07:51 - name price so we just want the first
07:54 - four here
07:55 - so i don't know if i can actually
07:58 - index this but let's go colon
08:01 - 1 colon 4 like that and that should give
08:03 - us actually want 2 colon 4 that should
08:06 - give us just the name and just the price
08:10 - so let's try this now and see if that
08:12 - crashes no okay so that's good so now
08:14 - we're just getting the name and we're
08:16 - just getting the price so for all of my
08:18 - table rows or all my table data i'm just
08:21 - looking at the second and third piece of
08:23 - information because that's the only ones
08:25 - that i want okay so now that i have the
08:28 - second
08:29 - and the fourth piece of information what
08:31 - i'm actually going to do is change this
08:33 - and i'm going to say that my name
08:37 - and my price is equal to this such that
08:39 - i get one variable storing what the name
08:41 - is and one storing with the prices and
08:43 - then we'll loop through the name and the
08:45 - price accordingly so now let's just
08:47 - print
08:48 - the name and make sure this is working
08:50 - properly
08:52 - okay so if we print name there we go all
08:55 - is good now we need to actually find
08:57 - what the name is inside of all of this
08:59 - gibberish so we have all of these kind
09:01 - of things here but what i'm looking for
09:03 - is just
09:04 - not the ticker symbol i actually want
09:06 - the proper name
09:07 - which should be bitcoin not btc okay so
09:09 - bitcoin is right here and this is inside
09:12 - of a class that has
09:15 - this so let's look for this class here
09:18 - actually maybe we can just look for the
09:20 - p tag in fact
09:22 - yes let's just look for the p tag and
09:24 - then see what we get inside of the p
09:26 - text i'm going to say print name dot p
09:29 - and now that i do this okay so it works
09:31 - up here but here is not getting the
09:34 - correct name so we'll have to fix that
09:35 - but this is at least giving me the top
09:38 - coins so we could just look for the top
09:40 - coins in fact they'll probably be easier
09:41 - for now so let's just do that right now
09:43 - so i'm just going to look for the top
09:44 - coins
09:45 - and that will give me bitcoin like that
09:47 - okay so now that i have the p tag if i
09:49 - want just the name this is going to be
09:51 - dot string to give me what's inside of
09:53 - the p tag so let's run this and now
09:56 - notice we are getting the correct names
10:00 - although
10:00 - we had an error because i guess once we
10:03 - get down to this point the names are no
10:04 - longer stored inside of the p-type so
10:07 - how many names do we have here one two
10:09 - three four five six seven eight
10:12 - nine ten so let's just look at the first
10:15 - ten
10:16 - table rows then so that hopefully we no
10:18 - longer get this error and there we go
10:20 - now we're all good we're going to get
10:22 - the top 10 coins
10:23 - okay so now that we have the name we can
10:26 - say that the
10:27 - i guess
10:29 - for fixed name is equal to this
10:33 - and now we need to look for the price so
10:36 - let's try to look for the price so let's
10:38 - print out the price
10:40 - and let's see what we are getting okay
10:42 - so the price seems to be
10:45 - of the a tag uh yes inside of the a tag
10:49 - so let's just look for the a tag in each
10:51 - of these let's go price dot a
10:53 - now we're getting just the link and now
10:56 - what we want to do is get the actual
10:57 - price so now we can say
11:00 - dot string
11:02 - and then there you go that gives us the
11:03 - price perfect so now that we have that
11:05 - let's say
11:06 - fixed underscore price is equal to that
11:10 - and let's go
11:11 - prices at
11:13 - fixed underscored name
11:15 - is equal to fixed underscore price
11:19 - and then we will print out
11:22 - our prices
11:24 - okay so let's have a look here and
11:25 - notice we get all of the prices that we
11:28 - are looking for so there you go that is
11:29 - how you can find the prices from a coin
11:32 - market cup now really the point of this
11:33 - video was just to show you how to
11:35 - navigate this tree show you the next
11:36 - sibling previous sibling parent etc i
11:39 - don't have a great use for them because
11:41 - you can see this is somewhat easier
11:43 - right to just look at the contents look
11:45 - at specific contents that we want grab
11:47 - the name grab the price store it in
11:49 - dictionary print it out
11:51 - so there you go just there's an example
11:53 - of how you can actually use this in a
11:55 - real world scenario to find the price of
11:56 - cryptocurrency now yeah we did have an
11:59 - issue that's why we only have to look
12:00 - for 10 here if i wanted to make this
12:02 - video longer i would make it work for
12:04 - the rest of them but if you wanted to
12:05 - make it work for the rest of them then
12:07 - what you need to do is find
12:09 - kind of what happens after 10. so maybe
12:11 - the first 10 you find like this and then
12:13 - the rest of them you find in a different
12:15 - way or you just come up with a better
12:16 - strategy that doesn't involve looking
12:18 - for just the p tag and maybe you look
12:20 - for a specific amount of text or you
12:22 - look for a dollar sign or something
12:23 - along those lines anyways with that said
12:26 - i think i'm going to end the video here
12:28 - in the next video i am going to show you
12:30 - how we can search across multiple
12:32 - websites for graphics cards prices and
12:34 - then compare them and return what
12:36 - website has the best price i think that
12:39 - will be an interesting application of
12:40 - this if there's anything else you guys
12:42 - want to see let me know in the comments
12:43 - down below make sure to like the video
12:45 - subscribe to the channel i will see you
12:47 - in another one
12:50 - [Music]
12:56 - you