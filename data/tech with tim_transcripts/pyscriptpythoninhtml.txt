00:00 - so i'm a little bit late to the party
00:01 - here but i figured today i'd share with
00:03 - you my thoughts on pi script and run you
00:05 - through a few quick demos of how you
00:07 - actually use this in your html code now
00:10 - if you're unfamiliar with pi script this
00:11 - is something that is brand new from what
00:13 - i know it came out a few months ago and
00:15 - i just heard about it actually a few
00:16 - weeks ago hence why i'm making the video
00:18 - now and this lets you pretty much inject
00:20 - python code and run it in the browser in
00:23 - your html document now you can import
00:26 - python files you can import python
00:28 - modules you can do stuff like display a
00:30 - matplotlib graph like directly on the
00:32 - html page you can generate random
00:34 - numbers you can get values from input
00:37 - fields or change document tags it's
00:39 - pretty cool even in the very early and
00:41 - alpha stage that it's in right now and i
00:43 - think it's something we can hopefully
00:44 - look forward to in the future with that
00:46 - said though let me just hop over to
00:48 - visual studio code i'll give you a few
00:49 - quick demos hopefully you'll get a sense
00:51 - of what this can do and i'd love to hear
00:53 - your thoughts on pi script in the
00:54 - comments down below
00:58 - [Music]
01:04 - so before we get into the video i will
01:06 - mention that if you don't already know
01:07 - python you should check out
01:09 - programmingexpert.io from the link in
01:10 - the description this is a course that i
01:12 - created with the algo expert team in my
01:14 - opinion it's one of the best resources
01:16 - to learn how to code and get to a
01:18 - software engineering level as fast as
01:19 - possible it teaches python go and a
01:22 - bunch of other skills like software
01:23 - engineering tools software design etc
01:26 - if you guys want check it out from the
01:27 - link in the description and use discount
01:29 - code tim so i'm here in visual studio
01:31 - code you can see i have an html document
01:33 - right here and then on the side of my
01:35 - screen i have that html document open so
01:37 - i can actually view kind of the contents
01:39 - of the page now to use pi script is
01:41 - super simple all you have to do is
01:43 - inject these two lines of code or place
01:45 - these two lines of code into the head
01:47 - tag of your document you can get them
01:49 - right from the pi script website which
01:50 - i'll leave in the description and you
01:52 - actually don't need the style sheet but
01:54 - some of the output from this pie script
01:56 - tag looks weird and it gets restyled
01:58 - with this sheet so you can remove this
02:00 - if you want i'll just leave it in for
02:02 - now really all you need is this script
02:04 - here and it lets you actually use this
02:06 - pie script tag and start writing some
02:07 - python code so right away you can see
02:09 - that what i'm doing is printing hello
02:11 - world now since i'm doing that that's
02:13 - actually the output from this tag and
02:15 - then it's showing up here on the page
02:17 - and then i'm also just writing to an
02:19 - html tag so i have a p tag with id equal
02:22 - to text then i'm saying pi script dot
02:24 - right i'm writing to the uh i guess
02:27 - what do you call it elements or document
02:29 - element with uh id text and then i'm
02:32 - writing x plus one x is zero and so i
02:34 - get one so pretty simple but that's the
02:36 - basics of pi script this is how you use
02:38 - it you don't need to install anything
02:40 - you literally just put this script thing
02:41 - in the head of your tag and then it
02:43 - works i'll show you a few other demos
02:45 - here but in case you're wondering how i
02:46 - get this to live update i'm using
02:48 - something called live server here it's
02:50 - an extension and visual studio code so
02:53 - that i don't actually have to keep
02:54 - refreshing this page every time i make a
02:56 - change it just updates over here so
02:58 - anyways that is the most simple demo i
02:59 - can give you that is pi script that's as
03:01 - easy as it is to get started with it and
03:03 - the next thing i'll show you is using
03:05 - like numpy importing a python module etc
03:08 - so i've just loaded up another example
03:09 - here and you can see that i'm actually
03:11 - viewing a scatter plot that i created
03:13 - with matplotlib now this example is
03:15 - actually directly from the pi script
03:16 - documentation but you can see that what
03:18 - i'm doing here is actually using the
03:20 - contents from a local python file that i
03:23 - have and i'm also declaring the
03:25 - different modules that i'm going to be
03:26 - using inside of this python script so
03:29 - not all of the modules are supported but
03:31 - right now numpy map plot lib most of
03:33 - your common python modules do actually
03:36 - work with pi script so i can do
03:38 - something like create a matplotlib plot
03:40 - so here i'm importing matplotlib i'm
03:42 - importing a function from this data.pi
03:45 - file that i have in the same directory
03:47 - and then i'm just creating a plot and
03:49 - just outputting that now the way i'm
03:50 - outputting that is by writing the name
03:52 - of the plot and by doing that inside of
03:54 - the pi script tag it actually shows up
03:56 - on the screen now if i were to say
03:58 - comment this out uh then i believe
04:00 - that's gonna go away
04:01 - and let's see here
04:03 - and
04:05 - if it loads
04:06 - you can see that this is again in a very
04:08 - early stage this does take actually a
04:10 - really long time to work then it goes
04:12 - away okay now here i've just said that
04:14 - the output is going to be plot which
04:16 - means whatever the output of this pi
04:17 - script tag is goes to this div so it's
04:20 - going inside of there and the reason i'm
04:22 - able to use these modules is because i
04:23 - declared them inside of pi e and v right
04:26 - i put numpy matplotlib and then i have a
04:28 - local module so i said paths and then
04:31 - dot slash data.pi now i'm able to
04:33 - actually use this file and then i can do
04:35 - whatever i want inside of here now one
04:37 - thing to note is that inside of your pi
04:39 - script code you can actually use
04:40 - javascript code so i can just go
04:42 - console like this
04:44 - dot log
04:46 - and let's just say hello
04:47 - now you have to be careful when you save
04:49 - this because the auto formatter i have
04:51 - one enabled it will like mess up all
04:52 - your python code but now if i go to
04:54 - inspect and i go to the console we
04:57 - should see that we get a hello once this
04:59 - actually loads up okay so let's give it
05:01 - a second here to finish
05:03 - and there you go we can see we get hello
05:05 - we have our plot showing up here and
05:07 - yeah any valid javascript code just
05:08 - works inside of here with your python
05:11 - code
05:11 - so there you go that is example two let
05:14 - me load up one more all right so i've
05:16 - just loaded up example number three and
05:18 - here i've created a random number
05:19 - guessing game where i've used almost all
05:21 - just python code to do this inside of pi
05:24 - script so let's just try this i can say
05:26 - one two three four five and okay i got
05:30 - it in five guesses so correct you took
05:31 - five guesses and it says guess the
05:33 - number in range one to ten and then i
05:35 - can restart and there you go so i'm
05:37 - interacting with the dom elements i'm
05:38 - changing uh different fields like i'm
05:40 - changing the zero to one two three etc
05:43 - and i'm getting the value from this
05:44 - input field and then linking a python
05:46 - function to the press of a button so
05:48 - i'll show you how we do that of course i
05:50 - have my script here notice i uh or
05:52 - noticed sorry i did not put the style
05:54 - sheet if i put the style sheet it makes
05:57 - my uh forum look all weird so i just
05:59 - remove the style sheet i don't need it
06:00 - there and then what i've done is created
06:02 - a little i guess form or i guess the
06:05 - document elements whatever you want to
06:06 - call this where i have guess the random
06:08 - number number of guesses that i'm
06:10 - displaying i have an input field and
06:12 - then two buttons and a place where i am
06:14 - showing the result
06:15 - so what i need to do for this to work
06:17 - here is i actually needed to link the
06:20 - button presses here to a python function
06:23 - and the way that you do that is using
06:25 - these two modules so you have to create
06:26 - a proxy between a javascript event to a
06:30 - python function call
06:32 - sounds complicated but it's really not
06:33 - that bad so i have from js import
06:35 - document from whatever this module name
06:38 - is import create proxy and then i'm
06:40 - importing brand so i just create a
06:42 - random number here at the top i have
06:43 - guesses equal to zero i'm sure you guys
06:45 - can read this python code yourself but i
06:47 - just global numbering guesses yes that's
06:49 - bad practice but i just wanted to show
06:51 - you how this works and then i create a
06:52 - new number if you restart and i reset
06:54 - the guesses to zero while clearing what
06:56 - i'd written on the screen so i clear the
06:58 - result and then rewrite this back to
07:00 - number of guesses here now down here
07:02 - what i actually needed to do is again
07:04 - create this proxy so i say my guess
07:06 - proxy is equal to create proxy and then
07:08 - i put inside of here guess now guess is
07:10 - the function that i want to create the
07:12 - proxy for so i'm putting the name of my
07:14 - python function and i say my guess
07:16 - button is equal to
07:17 - document.getelementbyid
07:19 - and then guess button the reason i can
07:21 - do that is because i'm saying from js
07:23 - import document
07:24 - and
07:25 - then i get access to that element then
07:27 - i'm going to say guessbutton.add event
07:29 - listener just like i would in javascript
07:31 - i'm listening on click and then what i'm
07:33 - gonna do is call the guest proxy so
07:35 - since i've created the proxy it will
07:37 - then actually call the guest function
07:39 - and run that python code
07:41 - same thing for the restart proxy and the
07:43 - restart button it's just changed to be
07:45 - the id of the restart button
07:46 - yeah we can look in here so i have
07:48 - global guesses guesses plus equals one i
07:51 - then get the input field so to do that
07:54 - you just have element you put the name
07:56 - of or the id of the element and then dot
07:58 - element to access that and i say text is
08:00 - equal to imp.value just to get the value
08:03 - from that input field i then clear the
08:05 - input value and i'm checking if the text
08:08 - which is this right here is equal to the
08:10 - number that uh we created the random
08:12 - number right
08:13 - uh if it is then i'm going to say okay
08:15 - you've got that correct with number of
08:16 - guesses otherwise i'm going to write
08:18 - wrong and then no matter what i am going
08:20 - to write an updated number of guesses so
08:23 - there you go that is it for creating a
08:24 - random number guessing game i know this
08:27 - seems pretty trivial and pretty easy to
08:29 - you guys but i just wanted to show you
08:30 - kind of what you can do with pi script
08:32 - in a really short video and give you a
08:33 - quick introduction to this cool thing so
08:36 - now that we've looked at the demo let me
08:37 - just share with you my thoughts quickly
08:39 - i think that this is cool right and
08:41 - that's really the best way for me to
08:42 - describe it i don't think it's very
08:43 - useful but it definitely is interesting
08:45 - i had fun kind of playing with it for 20
08:47 - minutes before this video and if i was
08:49 - going to do something really simple or
08:51 - maybe i was teaching a beginner how to
08:53 - program and we wanted to create a basic
08:55 - user interface or something along those
08:56 - lines then pi script seems like kind of
08:58 - a cool way to go for example here i
09:01 - created a random number guessing game
09:03 - where you actually have buttons to press
09:04 - you have an input field and you saw it
09:06 - was relatively simple it was what you
09:08 - know 20 lines of code or something like
09:10 - that whereas if i were to do this just
09:12 - in standard python i wouldn't really
09:13 - have a user interface i'd just have the
09:15 - terminal
09:16 - and it wouldn't be as interactive as or
09:18 - as interesting maybe for a beginner to
09:21 - see kind of what they've created so
09:22 - that's really where i see the value here
09:24 - when you're learning how to program this
09:26 - could be cool because now you can
09:27 - actually visualize what you're doing in
09:29 - a web browser and kind of mix a bit of
09:31 - html with your python code but beyond
09:34 - that again i just can't really see
09:36 - myself writing python code in the
09:38 - browser as opposed to just writing
09:39 - javascript if this does get better if it
09:42 - gets faster if it has more features i'll
09:44 - definitely try it again and maybe create
09:46 - some cool projects with pyscript but for
09:48 - now i think this is really more of i
09:50 - don't want to say a gimmick but just
09:51 - kind of a cool thing that you can do
09:53 - it's probably useful for learning and
09:55 - you know some of you guys are probably
09:56 - going to try this out after just because
09:57 - you think it's interesting beyond that
09:59 - though i wouldn't use this in production
10:01 - code and in fact it actually says on the
10:03 - pi script website do not use this in
10:05 - production uh because it's very alpha
10:07 - it's very slow it's kind of you know
10:10 - like clunky in a sense and it has a long
10:12 - way to go
10:13 - anyways though i think this is
10:14 - interesting if you guys want to see some
10:16 - videos on pi script in the future then
10:18 - let me know i wouldn't be opposed to
10:20 - making a few kind of beginner projects
10:21 - with pi script with a nice user
10:23 - interface maybe some javascript or css
10:26 - animations or something like that that
10:27 - could be triggered from python maybe
10:29 - that's something cool that we can do on
10:31 - the channel let me know your thoughts in
10:32 - the comments down below with that said
10:34 - though i'm going to wrap it up here if
10:35 - you guys enjoyed make sure to leave a
10:36 - like subscribe to the channel and i will
10:38 - see you in the next one
10:42 - [Music]
10:48 - you