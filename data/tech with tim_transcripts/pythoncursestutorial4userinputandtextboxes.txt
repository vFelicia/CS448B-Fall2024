00:00 - hello everybody and welcome to the
00:02 - fourth video in this python curses
00:04 - tutorial series in this video i'm going
00:07 - to be showing you how to get input from
00:08 - the user so how to get key strokes as
00:11 - well as the characters that they type so
00:13 - let's go ahead and get started
00:18 - [Music]
00:23 - all right so the first thing i want to
00:25 - show you is just how to get the
00:26 - keystrokes from the user and then i will
00:28 - show you how to actually implement a
00:30 - text box and some more advanced things
00:32 - so you can see here that we have std scr
00:35 - dot get ch now this is a method we've
00:38 - been using a ton and all this does is
00:40 - wait for the user to type something in
00:42 - and then give us the value of what they
00:43 - typed in so also note here that i'm in
00:46 - the same example i was in all the other
00:47 - videos i've just cleared everything
00:49 - other than the colors
00:50 - so what i'm going to do is say key is
00:52 - equal to and then this line here now
00:55 - this is again going to wait for the user
00:56 - to type something and then give us the
00:58 - ordinal value of what they typed now the
01:00 - ordinal value is going to be the number
01:02 - that represents the character they typed
01:04 - now if you don't want the ordinal value
01:06 - instead you want to get the actual key
01:09 - name then you can use getkey now this
01:11 - will give you like a if you type in a it
01:14 - will give you like
01:15 - shift or like left underscore shift if
01:18 - you hit that key there's a bunch of kind
01:20 - of weird names for all of the i guess
01:22 - controls on your keyboard other than
01:23 - just the regular characters but
01:25 - hopefully you get the idea
01:27 - so what i'm going to do here is i'm
01:28 - going to allow the user to type
01:30 - something in and then i'm just going to
01:32 - show it on the screen so i'm going to
01:33 - say
01:34 - let's go
01:36 - std scr.ad
01:38 - string and then let's add an f string
01:40 - and let's say key
01:42 - colon and then we'll go with
01:45 - key like this inside of here and we can
01:48 - place this at like five five that's fine
01:52 - okay then we'll refresh the screen
01:54 - so let's say refresh
01:56 - and then we will wait for the user to
01:58 - type something in except this time i
02:01 - don't care what they type in so i'm just
02:02 - going to use get
02:03 - ch like that and this will just mean we
02:06 - aren't going to immediately exit the
02:07 - program we have to enter or some other
02:09 - key before we continue okay so let's run
02:12 - this and let's just see what happens so
02:14 - i'm going to run python tutorial 4 okay
02:17 - i'm going to type in h and then no
02:18 - notice when i type in h it shows key and
02:20 - then h okay so let's get out of this
02:22 - let's run it again let's try hitting
02:24 - escape notice it gives me this key
02:26 - apparently that's the key that escape
02:28 - represents or that represents escape
02:31 - okay let's continue let's go to
02:33 - something like three it's gonna give me
02:35 - 3 okay let's try this again let's go
02:37 - with l okay it gives me l you get the
02:39 - idea it gives us the keystroke that the
02:41 - user typed in now the thing is here it's
02:44 - waiting for the user to type something
02:46 - that's fine we can wait for the user to
02:47 - type something a lot of times we want to
02:49 - do that but sometimes we just want to
02:51 - kind of be listening for the user to
02:52 - type in any key and if they hit any key
02:55 - we're going to respond to it so now i'm
02:57 - going to change this example a little
02:58 - bit and i'm going to listen for the
03:00 - arrow keys and if the user hits an arrow
03:02 - key i want to kind of move something
03:03 - around the screen so this will be a bit
03:05 - more of an advanced example but i think
03:06 - this is fine to go through so let's get
03:09 - rid of all of this right now
03:11 - and let's set up a wall i'm going to say
03:13 - while true and inside of here what i'm
03:15 - going to do is i'm going to get the key
03:17 - that the user types so i'm going to say
03:18 - std scr
03:20 - dot get and then this is going to be key
03:24 - we're going to store this in key
03:27 - then what i want to do is i want to
03:28 - check if this key is one of the arrow
03:29 - keys so i actually have to look at what
03:31 - the name of the arrow keys are let me
03:33 - look for those and i'll be right back
03:34 - okay so it looks like they're pretty
03:35 - straightforward it's just going to be
03:37 - key
03:38 - like this underscore left so this is an
03:41 - underscore story and then up right and
03:43 - down that's what the name is for the
03:45 - arrow keys so what i'm going to do here
03:47 - is say if key is equal to this
03:49 - then we'll do something we'll say alif
03:52 - key
03:53 - is equal to then this will be key
03:55 - underscore right
03:57 - then we'll do something so pass and then
04:00 - we'll say l if key is equal to k
04:03 - underscore up then we'll do something
04:04 - pass
04:05 - and then we'll say l if key is equal to
04:07 - key underscored down then we'll do
04:09 - something now what i'm actually going to
04:11 - do is i'm going to say my
04:13 - x comma y is equal to 0 0 and if i hit
04:16 - the key left i'm going to say x minus
04:18 - equals 1. if i hit the key right i'm
04:20 - going to say x plus equals 1. if i hit
04:22 - the key up i'm going to say y
04:24 - minus equals 1. remember if we go up we
04:26 - are subtracting from the y and then i'm
04:28 - going to say y plus equals 1 if we hit
04:30 - down
04:31 - then i'm going to draw let's just go
04:33 - with like a 0 or something on the screen
04:35 - and we'll move it around based on us
04:37 - pressing the arrow keys so i'm going to
04:39 - say std scr and then i'm going to place
04:43 - this at y comma x and i'm just going to
04:46 - place let's go with a 0 like this and we
04:49 - don't need to color it's fine we can
04:50 - just have a 0.
04:52 - so the idea here is oh what am i doing
04:54 - i'm going to say add string sorry is
04:56 - that we're going to draw the zero at the
04:57 - x and y and we will then change the x
04:59 - and y based on what the arrow key is and
05:01 - that will allow us to kind of move this
05:03 - around the screen this is something you
05:04 - might do if you're trying to make a game
05:07 - then i need to of course clear the
05:08 - screen and update it so let's first go
05:10 - with refresh
05:12 - and then at the top of the while loop
05:13 - here i will clear the screen so std
05:16 - screen
05:17 - dot clear and in fact i actually don't
05:20 - want to do it up here i want to do it
05:22 - right before i add this
05:24 - because remember this is going to wait
05:25 - for us to type in a key so if i were to
05:27 - clear it at the top then we would
05:29 - actually never see this moving because
05:31 - what would happen is we would draw this
05:33 - we would refresh then we would
05:34 - immediately clear and then we would wait
05:37 - this way we're going to wait for the key
05:39 - then we're going to clear the screen so
05:40 - we'll see the key or we'll see the zero
05:43 - while we're waiting for the keystroke
05:44 - then we'll clear it and then we'll move
05:46 - it okay hopefully that is clear let us
05:50 - run this now and see if this works okay
05:52 - so let me try to move the arrow key so
05:54 - i'm moving this over so i'm going to the
05:56 - right i'm going down i can go left and
05:58 - up now if i try to go too far upper left
06:00 - we're going to get an error because we
06:01 - can't draw this on the screen but we
06:03 - don't really need to worry about that
06:04 - for right now
06:05 - the point is we can kind of move this
06:06 - around
06:07 - very nicely
06:08 - there you go we now have a way to
06:10 - actually use the arrow keys to change
06:12 - what is on the screen okay so let's get
06:14 - out of this i actually didn't make a way
06:16 - to get out of it so let me just crash
06:19 - that is the way that we can look for
06:20 - certain keystrokes all right so now that
06:22 - we've looked at that example i want to
06:24 - quickly show you how we can make it so
06:25 - this line right here is not going to
06:27 - hang our program now what i mean by that
06:30 - is right now we need to type something
06:32 - for something to happen if i don't type
06:34 - something then we're just going to be
06:36 - waiting on this line because this line
06:37 - waits for the user to give some input
06:40 - now a lot of times what i want to happen
06:42 - is i want to handle the user's key press
06:44 - as soon as they press it but i don't
06:46 - want to be waiting for them to press
06:47 - something i want to still be able to say
06:49 - move something around the screen or
06:51 - handle something else i don't want to
06:52 - have to wait for them to press something
06:54 - so i'm going to show you how we can
06:55 - handle that now the way we do that is we
06:58 - actually say i pasted in the wrong
07:00 - command but it's going to be
07:02 - std like this
07:04 - scr dot no delay true so when you set
07:07 - this to true you're saying i don't want
07:09 - this to delay which means that it's just
07:12 - going to not delay if you don't type
07:13 - something in what's actually going to
07:15 - happen is you're going to get an error
07:16 - but we can handle the error so let me
07:18 - show you what i mean here i've just set
07:20 - this no delay equal to true
07:22 - and now if i go here and i run this
07:24 - notice we get a problem or an error that
07:25 - says no input at this line so the issue
07:28 - is since we're not waiting for the user
07:30 - to type something in we're still trying
07:31 - to get what they typed in and if they
07:33 - don't type something in that gives us an
07:34 - exception so what i need to do here is
07:36 - just say try
07:38 - and then i'm going to say
07:39 - accept like this and i'm just going to
07:41 - say key is equal to none okay
07:44 - so what this is going to do is try this
07:46 - line if it results in an exception so we
07:48 - didn't hit something then we're just
07:49 - going to say key equals none so that way
07:51 - this doesn't crash and we still have
07:52 - access to a key variable so let me run
07:55 - this now
07:56 - and notice that i can now press the
07:58 - arrow keys and it works the exact same
08:00 - way as it did before except i'm not
08:02 - waiting or delaying on the user to press
08:05 - something now to prove that to you we
08:06 - actually need to implement something
08:08 - else let me just crash this program here
08:10 - because right now this doesn't look any
08:12 - different than what we had previously so
08:13 - now that we've implemented this node
08:15 - delay i'm going to start moving some
08:17 - text on the screen so i'm going to say
08:20 - let's go with
08:21 - what do we even want here
08:23 - stdscreen.add
08:25 - string and let's just go with hello
08:27 - world let me just make some variable
08:29 - here let's call this
08:31 - string
08:32 - x
08:33 - is equal to zero and every iteration i'm
08:35 - just going to increment this string x
08:37 - plus equals one and what i'm going to do
08:39 - is
08:40 - say
08:41 - zero and then string x like that and
08:44 - we'll actually
08:46 - i'm trying to think how i can make this
08:47 - not move super fast
08:49 - you know what for now this is fine so
08:51 - what this is going to do is it's going
08:52 - to move this string but i actually
08:54 - realize i need to do this right before i
08:57 - clear the screen otherwise we're never
08:58 - going to see it so we're going to
09:00 - increment the string x and we're just
09:01 - going to continually move this string
09:02 - while this while loop runs so let's try
09:04 - this
09:06 - and notice that it just zips right off
09:08 - of the screen that's what i was trying
09:10 - to avoid i don't really want to add a
09:12 - time delay here
09:13 - uh so to fix this
09:16 - i'm going to say plus equals 1 and then
09:18 - i'm just going to divide this into
09:20 - divide this by 50 just so that i have to
09:22 - increment this 50 times before this
09:24 - moves over one pixel or one character
09:27 - okay let's try this now and let's run
09:30 - this
09:31 - and notice that hello world is moving
09:33 - even though i didn't type something and
09:34 - while i'm hitting the key i'm still able
09:36 - to move this while this is moving on the
09:38 - screen now if i get rid of the no delay
09:41 - which i'll show you now oh that's kind
09:42 - of cool and it moved to the next line
09:44 - that was interesting but if i get rid of
09:46 - the no delay so let's just comment this
09:48 - out you're going to see that this string
09:49 - doesn't move
09:51 - so actually notice nothing's happening
09:52 - and as soon as i hit a key
09:55 - then hello world's actually able to
09:56 - start moving
09:58 - let me see if i can get it to move once
10:00 - i need to get this count up to 50 okay
10:01 - so you can see it moves once but the
10:03 - problem is we're waiting for me to hit a
10:05 - key so it's not moving whereas when i
10:06 - put the no delay true then we're able to
10:08 - move even if i'm not pressing a key okay
10:10 - hopefully that makes sense let's crash
10:12 - the program
10:13 - now what i will show you is how to
10:15 - actually get user input so how to allow
10:17 - the user to type in say you know like a
10:20 - paragraph and then to get that paragraph
10:22 - and handle it
10:23 - okay so let's clear everything that we
10:25 - have so far
10:26 - let's get rid of all of this and let me
10:28 - now talk to you about something called
10:30 - text box so it turns out i already
10:32 - imported the stuff that i needed i was
10:33 - messing around with this before the
10:34 - tutorial you can see we have from
10:37 - curses.txtpad import textbox and
10:39 - rectangle so you need to import both of
10:41 - these things we're just going to use a
10:43 - rectangle to draw it on the screen and
10:44 - kind of make an outline for our text box
10:47 - anyways now that we have that imported
10:49 - the first thing i want to show you is
10:51 - how we draw a rectangle on the screen
10:53 - this is pretty easy but i'm going to say
10:55 - rectangle like this
10:57 - and then i'm going to put where i want
10:58 - to draw it so i'm going to draw it on
11:00 - the screen and then i need to put the x
11:02 - y position so i'm going to go 2 2 so
11:04 - this is the top left hand corner of the
11:06 - rectangle and then i need to put the
11:07 - bottom right hand corner of the
11:08 - rectangle so i'm going to go with 10 and
11:10 - then 20 like that okay so that should
11:12 - draw a rectangle so now i could say std
11:15 - screen dot refresh
11:19 - like that okay so this hopefully should
11:21 - draw a rectangle let's see if this is
11:23 - gonna work so tutorial four and it did
11:25 - draw a rectangle and it just very
11:26 - quickly crashed on us or stopped because
11:29 - we didn't have the line that we need
11:31 - which is this
11:33 - okay so let me run this reminder this
11:35 - gives you the ordinal value the other
11:37 - one gives you the key value so what i'm
11:39 - going to do here is
11:40 - run this and notice we get a beautiful
11:42 - rectangle on our screen and if i hit
11:44 - enter then we exit so that's how you
11:46 - draw a rectangle now one thing because i
11:48 - realized i didn't really cover this in
11:49 - the last kind of section here as i was
11:52 - saying getch gives you the ordinal
11:54 - getkey is giving you the actual key
11:56 - value now the key value it's kind of
11:59 - hard to check for the function keys or
12:02 - the shift key or the backspace key if
12:04 - you want to find those i actually have a
12:06 - list right here it just went off my
12:08 - screen let me see if i can find it this
12:11 - is the documentation for curses i'm
12:13 - going to try to find where this list was
12:15 - it was literally just on my screen and
12:17 - then it messed up okay so here we are we
12:19 - have like keymin keybray key down
12:21 - keyright key backspace so i'll leave a
12:22 - link to this in the description and it
12:24 - shows you literally everything that i'm
12:26 - covering in this video what all of the
12:27 - different kind of key names are and how
12:30 - you access them okay
12:32 - hopefully that's helpful anyways that
12:33 - will be linked in the description for
12:35 - now though you can see that we drew a
12:36 - rectangle now my rectangle is a bit big
12:38 - so i'm going to make it a little bit
12:39 - smaller i'm just going to only make it
12:41 - three rows high so now let's run this
12:45 - and
12:46 - what happened there okay we got our
12:47 - rectangle showing up that is what i want
12:49 - so now what i'm going to do is i'm going
12:51 - to put a text box inside of this
12:53 - rectangle by creating a new window so
12:56 - i'm going to make a new window up here
12:57 - i'm going to say win
12:59 - is equal to and then this will be curses
13:02 - dot new win
13:04 - now for my window i actually forget
13:06 - exactly what i need i think i need the
13:09 - whip height and then top left hand
13:11 - corner position let me look at my little
13:13 - cheat sheet here to see what we need to
13:15 - do
13:15 - um yes it looks like we're going to go
13:17 - with height and then top corner position
13:20 - so for the width i want the width to be
13:24 - let's go with
13:25 - uh 18. the reason i'm going to go with
13:27 - 18 is because this is 2 and 20 and so
13:30 - the width of my rectangle is going to be
13:32 - 18 so that's why i'm putting 18 here for
13:34 - the height i'm going to go with 3 and
13:36 - then for the top corner position i'm
13:38 - going to go with 2 2 so it starts
13:39 - exactly where this rectangle is okay so
13:42 - that's our window now i'm going to place
13:44 - a text box in this window so that's why
13:46 - i'm making the window the exact size of
13:48 - what the text box is going to be so now
13:51 - i will make my text box now to do that
13:53 - i'm going to say box is equal to text
13:55 - box
13:56 - and then i'm going to put this on my win
13:58 - okay
13:59 - and then if we go here
14:00 - you can see we're importing text box
14:02 - right okay so let's just run this here
14:04 - and see what we're getting
14:06 - okay notice we're getting our box and
14:07 - actually really nothing has changed
14:10 - now let me quickly explain what this
14:11 - text box actually does so this text box
14:14 - is going to give you kind of a text
14:15 - editing area again you're putting it
14:17 - inside of a window so it's going to take
14:18 - up the size of the entire window and
14:20 - it's going to give you emac like
14:22 - commands so emacs is a text editor it's
14:25 - kind of like a console terminal text
14:27 - editor very very old anyways it has a
14:29 - bunch of keyboard shortcuts and you can
14:31 - use those same shortcuts inside of this
14:33 - text box so for example if you want to
14:35 - get out of the text box you have to use
14:37 - control g okay really weird but this is
14:40 - the keyboard shortcut you have to use to
14:41 - say okay i'm done editing the text box
14:43 - you do ctrl g
14:45 - so what i'm going to do here is i'm now
14:47 - going to say box dot edit but i need to
14:49 - make sure i do that after i refresh the
14:52 - screen
14:53 - so let's do it right here and actually
14:57 - let me see if that's even the correct
14:58 - place to do it uh yes that looks like
15:01 - that is fine okay so what i'm doing here
15:03 - is i'm creating a window i'm creating a
15:05 - text box that's going to be on that
15:06 - window i'm then creating the rectangle
15:08 - that's going to kind of cover the the
15:09 - text box i'm then refreshing the screen
15:11 - so all that's going to show up and then
15:13 - i'm going to edit the box now when i say
15:14 - box dot edit this will now take my
15:17 - cursor inside of the text box and let
15:19 - the user start editing the box and then
15:21 - they have to hit ctrl g to get out all
15:23 - right so let's run this and see what the
15:25 - text box looks like and how it works
15:28 - okay so it's a little bit messed up i
15:29 - actually think i know the problem but if
15:31 - i start typing you can see that i can
15:33 - type and of course i've messed up the
15:34 - dimensions here but anyways to get out
15:36 - of this i'm going to hit ctrl g so it
15:38 - brings my cursor out of the text box and
15:39 - then i can hit enter and i get out now
15:41 - let me fix this because i realize what i
15:43 - did here
15:44 - so when i was picking the width of the
15:45 - text box i accidentally put that where
15:47 - the height is so i need to swap this so
15:50 - this is 3 and 18
15:52 - and now this should hopefully be better
15:54 - we might also have to mess around with
15:56 - the window and where we're drawing the
15:57 - rectangle
15:58 - because i think the rectangle might have
16:00 - to be just outside
16:02 - of the text box so that we're actually
16:04 - able to show everything properly
16:06 - anyways let's give this a shot here
16:08 - and let's see what this looks like so
16:10 - python tutorial four okay there we go so
16:12 - i've now placed the rectangle slightly
16:13 - outside the text box uh just so that uh
16:16 - what he called we're actually able to
16:18 - see the entire text box because i guess
16:20 - what was happening is the window that's
16:22 - containing the text box was being drawn
16:24 - over top of the rectangle
16:26 - anyways now i can say hello world my
16:29 - name
16:30 - is tim and this is a
16:33 - text box and i can't type any further
16:36 - than this because i've reached the end
16:37 - of the text box now to get out i can hit
16:40 - ctrl g now my cursor goes right
16:42 - underneath the text box i can hit enter
16:44 - and then i'm done
16:46 - sweet now what i want to do is show you
16:47 - how we actually get the text from inside
16:49 - of this box so the way we do that is we
16:51 - say text is equal to box dot and then
16:53 - this is going to be gather now gather
16:55 - just gathers the contents of the box so
16:58 - now we can do is add this text to the
16:59 - screen so let's say
17:01 - what is this even called anymore okay
17:04 - this dot add string
17:06 - let's add text and let's add it at like
17:09 - uh oh i don't know how far we want to go
17:11 - maybe like 10
17:13 - and we'll go like 40
17:15 - just to make sure that we can see it
17:17 - okay so let's now run this
17:20 - and let's see what we get
17:21 - okay so let's say hello world my name is
17:24 - tim
17:25 - okay now ctrl g
17:27 - and notice when i do that it places my
17:29 - text over here now it's kind of messed
17:32 - it up a little bit i don't know why it's
17:33 - kind of going off the screen i'm not
17:35 - going to worry about that oh the reason
17:36 - why it's going off the screen sorry guys
17:37 - just realized here is because
17:39 - we have a new line after the name right
17:42 - so since e is on a new line what
17:44 - happened here is i put the text and then
17:46 - we saw a new line character which means
17:48 - that we're going to
17:49 - automatically move this text story down
17:51 - to the next line so that's why this is
17:53 - happening it's intentionally being
17:55 - brought down to the next line because
17:56 - from the text box it was on another line
17:59 - okay now let me show you how we can
18:01 - actually get rid of that because it's
18:03 - kind of annoying sometimes we just want
18:04 - the text all on one line we don't want
18:06 - it to automatically go to the next line
18:08 - okay so what i can actually do to get
18:10 - rid of these new line characters here is
18:12 - when i use my gather i can say dot and
18:15 - then replace
18:17 - so let's go like this and i can replace
18:20 - the new line character which is
18:21 - backslash n it's an invisible character
18:23 - that tells us to go the next line with
18:25 - nothing okay
18:27 - this just means now we're not going to
18:28 - have this in our string i'm also going
18:30 - to say
18:31 - dot strip here now what dot strip is
18:34 - going to do is remove any leading or
18:36 - trailing white spaces from our string so
18:38 - let's just try this now
18:40 - and see if it works okay let's go hello
18:43 - world my
18:45 - name is tim okay and now let us hit ctrl
18:50 - g
18:51 - and then notice we get this all on one
18:53 - line it removed all of the back slash
18:55 - ends okay there you go that is how you
18:58 - can get text now of course you can also
19:00 - get text by just reading in one
19:02 - character at a time by using the get ch
19:04 - or the get key
19:06 - functions or methods that i showed you
19:08 - you just have to store all of those
19:09 - characters in a list or a string or
19:11 - whatever you want to use to store them
19:13 - but this is a better way to use some
19:14 - type of text box
19:16 - okay so that said that's pretty much all
19:18 - i need to show you in this video in the
19:21 - next video i'm just going to go through
19:22 - a few kind of more advanced things that
19:24 - we can do how we can say style the
19:26 - rectangle that we just drew and show you
19:28 - a few other cool methods that you might
19:29 - want to know with that said if you
19:31 - enjoyed the video make sure to leave a
19:32 - like subscribe to the channel and i will
19:34 - see you in another one
19:37 - [Music]
19:43 - you