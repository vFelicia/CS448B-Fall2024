00:00 - hello everybody and welcome to the
00:01 - second video in this beautiful soup 4
00:03 - tutorial series in this video i'm going
00:06 - to be showing you how to search for more
00:07 - advanced things in your html document
00:10 - i'll also be showing you how you can
00:12 - modify and look at the attributes of
00:14 - html tags and i'll show you how you can
00:16 - do things like use regular expressions
00:18 - search for multiple tags at the same
00:20 - time search for properties or attributes
00:22 - of a tag all of the things that you need
00:24 - to do when you're looking for something
00:26 - in an html document so that said let's
00:28 - go ahead and dive in
00:32 - [Music]
00:38 - okay so the first thing i do need to
00:40 - mention here is that i did change my
00:41 - html document so if you go here i'm
00:44 - reading in my index.html it's a document
00:46 - we're going to work on here and this is
00:48 - what the document looks like it is a
00:50 - form so i actually have it open in my
00:52 - web browser you can see this here is
00:55 - actually what it looks like and well i
00:57 - just want to show you that because it's
00:58 - different from what i had before again i
01:00 - will upload this onto github in case you
01:02 - want to work on this yourself but it
01:04 - just has some more stuff like a bunch of
01:05 - options some input fields more stuff
01:07 - that we can work with
01:09 - anyways what i'm going to start by doing
01:11 - is just kind of recapping how we can
01:13 - search for things in our document so we
01:15 - saw previously there was two kind of
01:17 - search functions we had dot find and
01:20 - then we had dot find all now dot find
01:24 - gives us the first result that is
01:26 - matched with whatever we put in dot find
01:28 - and then dot find all gives us all of
01:30 - the results so let's just do a quick
01:32 - search right now i'm gonna say result is
01:34 - equal to doc dot find and let's just
01:37 - look for all of the option tags and then
01:40 - print
01:42 - result so when we do this we can see
01:44 - sorry we get the first option tag
01:45 - because i just did dot find but if i do
01:48 - dot find all it should give me them all
01:50 - in a list pretty straightforward gives
01:52 - you the actual tag so now let's go back
01:54 - to find for a sec and i'm going to show
01:56 - you how we can actually modify the
01:58 - attributes of this tag so notice we have
02:01 - selected
02:02 - value and then we have the actual string
02:04 - here so how can we change what the value
02:07 - is how can we change what select it is
02:09 - well it's actually really
02:10 - straightforward so let's just call this
02:12 - tag and now i guess we could print the
02:15 - tag after two
02:17 - what you can do if you want to access or
02:19 - modify the attributes in the tags so
02:21 - selected and value is you can access
02:23 - them like a dictionary so you you can
02:25 - say tag and in this case value and let's
02:28 - just make this equal to
02:31 - i don't know
02:32 - new value like that and this will
02:34 - actually change the value attribute for
02:36 - you so if you run this now notice it's
02:38 - changed to new value now obviously this
02:41 - works for
02:42 - selected as well we can make selected
02:44 - and maybe make it equal to false and
02:47 - then notice this is false so pretty
02:49 - straightforward now if you want to add
02:51 - attributes what you can do is just add
02:53 - them like this so i could say tag and
02:55 - maybe color and oops let's make this
02:58 - equal to blue so then if i make that
03:01 - equal to blue if i were to save this
03:03 - html document which i'll show you in a
03:05 - minute it would actually modify the
03:06 - document such that it now has the color
03:08 - blue
03:09 - for this option actually i don't know if
03:11 - this is going to work in this tag but
03:13 - you get the idea you can add an
03:14 - attribute very easily by doing that now
03:16 - if you just want to see what all of the
03:18 - attributes are what you can do is print
03:20 - out tag dot adders so attributes and
03:23 - then this will give you all of them in a
03:24 - dictionary so value and selected and
03:27 - well that's how we were accessing them
03:28 - before anyways
03:30 - so pretty straightforward that's kind of
03:31 - all you need to know related to the
03:32 - attributes now let's go back to find i'm
03:35 - going to show you some more advanced
03:36 - things that we can do when we are using
03:38 - find so when you just put in a string
03:40 - like this what you're searching for is a
03:43 - tag name right we've already done that a
03:45 - few times however you can search for
03:47 - multiple tag names at the first time or
03:50 - at this at the same time sorry not the
03:52 - first time and the way you do that is
03:53 - you make a list and put all of the tag
03:55 - names that you want to find inside of it
03:57 - now i'm going to do find all because
03:59 - this will make more sense for this
04:00 - example but let's go find all and let's
04:02 - look for the p tags
04:04 - let's look for maybe the div tags
04:06 - and let's look for
04:08 - what else do we want do we have like a
04:11 - li tag let's see if we have any of those
04:14 - okay so now notice we get a list and it
04:16 - gives us all of the tags that have well
04:18 - p div or li
04:21 - pretty straightforward and then
04:21 - obviously gives us everything inside of
04:23 - those tags as well
04:25 - so that's how you can search for tag
04:26 - names you can also search for other
04:28 - things and you can search for
04:29 - combinations of things at the same time
04:32 - for example maybe i want to look for an
04:34 - option tag and maybe i want this option
04:37 - tag to have the text that is equal to
04:40 - let's find one right here undergraduate
04:42 - so let's take this and let's put this
04:45 - here now if i do this notice it gives me
04:47 - this tag right so i searched for an
04:49 - option tag and then any tag that had
04:51 - undergraduate as the text for it so you
04:53 - can combine these queries together now
04:55 - what you can also do is look for
04:56 - specific values or look for specific
04:59 - attributes of these tags so if you want
05:01 - to look for say the value attribute then
05:03 - what you can do is say value is equal to
05:06 - and then in this case this would be
05:08 - undergraduate like that so if we run
05:11 - this it should still work we get the
05:13 - value undergraduate now if we change
05:15 - this and we remove the e notice that
05:17 - obviously it's not going to give it to
05:18 - us because that no longer matches so
05:20 - pretty straightforward if you want to
05:21 - look for an attribute just put the name
05:23 - of the attribute equals and then
05:24 - whatever it is that you're looking for
05:26 - if you want to look for text you can
05:27 - look for text like this and if you want
05:29 - to look for multiple tag names you can
05:31 - put them inside of a list so before we
05:33 - continue i do need to thank the sponsor
05:35 - of this video and the series which is
05:36 - algo expert algo expert is the best
05:39 - platform to use from preparing for your
05:40 - software engineering coding interviews
05:42 - they have a ton of practice questions
05:44 - mock interviews a data structures crash
05:46 - course and a lot of other awesome
05:48 - features check them out today from the
05:50 - link in the description and use the code
05:51 - tech with tim for a discount on the
05:53 - platform now next i'm going to show you
05:55 - how we can look for different class
05:57 - names so this one is actually very
05:59 - useful uh to be able to do a lot of
06:01 - times you want to look for a class that
06:03 - is placed on some of these elements so
06:05 - maybe we're looking for button item or
06:06 - something like that now what you would
06:08 - think you would do right would you you
06:10 - just write class equals but the problem
06:13 - with this is that class is a reserved
06:14 - keyword in python that is used for
06:16 - actually creating a class so instead of
06:18 - writing class you just do class
06:20 - underscore and now you can search for
06:22 - the class name of specific items so
06:24 - let's remove all of this and let's find
06:26 - all of the classes that have btn hyphen
06:29 - item or all of the tags that have btn
06:31 - item as one of their classes so now
06:33 - you're going to see that we get this a
06:35 - tag i guess we get another a tag
06:37 - regardless you get the point that is how
06:39 - you search for a class name
06:41 - now lastly i will show you how we can
06:43 - use a regular expression so the regular
06:45 - expression module in python is called re
06:48 - so if you import re what you can
06:50 - actually do now is you can look or use a
06:52 - regular expression for any of these
06:55 - things that you're searching for so
06:56 - let's say we want to find some text so
06:59 - let's go
07:00 - text is equal to and we want this text
07:03 - to contain a dollar sign but we actually
07:05 - want to get what the text is after the
07:07 - dollar sign as well so the same example
07:09 - we had done previously right we wanted
07:11 - to find the price of an item and what we
07:13 - did is we found the dollar sign and then
07:15 - we had to do a bit of work and find the
07:16 - parent tag and then we looked for
07:18 - another tag inside of that and then we
07:20 - found the text inside of that tag and
07:21 - well that was a lot of work and the
07:23 - reason we had to do that is because we
07:24 - could only find just the dollar sign we
07:26 - didn't know what the price was going to
07:28 - be whereas here we can use a regular
07:30 - expression that will actually give us
07:32 - all of the text that is beside to the
07:34 - left or right of a dollar sign so if you
07:36 - look here notice i have two things that
07:38 - have dollar signs so 2 3 4 5 1 2 3 i
07:40 - just threw them in the document here
07:42 - and now what i can do is look for text
07:45 - and i can say re dot compile this is how
07:48 - you write a regular expression you put
07:50 - it inside of dot compile and i won't
07:52 - really necessarily go through the syntax
07:53 - here but if we want to look for anything
07:56 - after the dollar sign and including a
07:57 - dollar sign we have to use the escape
07:59 - character dollar sign dot and then a
08:03 - asterisk like this so this means we are
08:05 - matching the dollar sign and then any
08:08 - character any number of times coming
08:09 - after the dollar sign and the reason i
08:11 - have to use an escape character here and
08:13 - why it's highlighting is because dollar
08:15 - sign is part of a regular expression
08:17 - syntax and so it won't actually let me
08:20 - like look for it if i just put a dollar
08:21 - sign anyways i won't go through the
08:23 - syntax necessarily you can look that up
08:25 - on your own but if i run this now notice
08:27 - i'm going to get these two prices so if
08:29 - i wanted to get them nicer then what i
08:32 - could do is say
08:34 - i don't want to do anything too advanced
08:36 - to do this let's just do a for loop for
08:38 - tag
08:39 - in tags and then i can print
08:42 - tag dot
08:43 - strip and this should remove all of
08:46 - these white spaces for me uh let's see
08:48 - if that does it and there you go now i
08:51 - actually get what the prices are so
08:53 - that's pretty easy you can use a regular
08:55 - expression so finally the last thing i
08:58 - will show you here is how you can
09:00 - actually limit the number of results
09:02 - that you get when you are doing a search
09:04 - so in this case when we have find all
09:07 - maybe we only want to find the first
09:08 - five or the first seven or the first n
09:10 - results right if that's the case then
09:13 - what we can do is add
09:14 - another keyword here called limit and
09:17 - limit can be equal to
09:18 - and then in this case i can just do like
09:20 - limit equals one and now it's only going
09:21 - to give me one result so if you want to
09:23 - limit the number of results you can use
09:25 - limit pretty straightforward alright so
09:27 - now that i've showed you how to search
09:28 - through the document in multiple ways
09:30 - i'm going to show you how we can
09:31 - actually save the modifications we make
09:34 - to the document this is pretty simple
09:36 - but first i actually want to make some
09:38 - changes to the document so what i'm
09:40 - going to do is look through my document
09:42 - and i'm going to find all of the input
09:45 - tags that have type equal to text
09:49 - now those tags would be
09:51 - actually let me just open up this file
09:54 - here
09:54 - uh those tags would be email i guess
09:56 - actually not email probably full name
09:59 - and maybe email uh anyways i think
10:01 - there's a few tags that have some text
10:03 - as their type regardless i am going to
10:06 - change their placeholder just to say
10:08 - something else
10:09 - so let's do that i'm going to say for
10:11 - tag in tags and i'm going to say tag
10:14 - at placeholder is equal to i changed you
10:18 - exclamation point
10:20 - perfect now what i want to do is
10:22 - actually save these changes so i've
10:23 - modified the attributes of these tags
10:26 - now i want to change that so to do that
10:28 - i'm going to say with open i'm going to
10:30 - open a new html file i'll call this
10:33 - actually changed.html
10:36 - i'm going to open this in write mode
10:37 - because i'm creating this file so when
10:39 - you open it in w mode it actually will
10:41 - override or create a new file if this
10:44 - file doesn't already exist i'm going to
10:46 - call this as file and then what i'm
10:48 - going to do is say file.write and i'm
10:50 - going to write the string
10:52 - of my document so when you take the
10:55 - string of your document it just gives
10:56 - you all of the html so let's just go
10:59 - ahead and write that into the file and
11:00 - that's literally all we need to do we'll
11:03 - just be writing html into our html
11:05 - document so let's save this
11:08 - let's run it uh we got some issue here
11:11 - oh oops i didn't put these inside of
11:13 - open i'm sure you guys were wondering
11:14 - what i was doing there okay so let's fix
11:16 - that
11:17 - now let's run it it's create a new file
11:19 - for me when i open this file notice says
11:21 - i changed you i changed you and i
11:23 - changed it so i guess those ones that
11:24 - have the text type
11:26 - so yeah with that said
11:28 - that is really all i need to show you in
11:30 - this video in the next video i'm going
11:32 - to show you more of how we can kind of
11:34 - traverse the tree and look at neighbors
11:37 - of tags and look at parents and
11:38 - descendants and similar to what we did
11:40 - in the first video but just in a more
11:42 - in-depth way
11:43 - anyways i hope you guys enjoyed if you
11:44 - did make sure to leave a like subscribe
11:46 - to the channel and i will see you in
11:47 - another one
11:50 - [Music]