00:00 - hello everybody and welcome back to
00:01 - really flash tutorial so as you guys
00:03 - might be able to tell we are starting
00:05 - off fresh here and what I'm actually
00:06 - gonna be doing is talking about static
00:08 - assets or static files now in flask
00:11 - there's kind of a weird way of
00:12 - displaying images and loading in your
00:14 - own custom CSS classes and using your
00:17 - own custom JavaScript so I'm gonna cover
00:18 - that quickly today and then in the next
00:20 - video we're gonna talk about blueprints
00:21 - which is what a lot of you guys have
00:23 - been asking me about on how we can
00:24 - actually make our flask app into
00:26 - multiple Python files and kind of split
00:28 - it up and make it a bit more organized
00:30 - than what we had before so anyways let's
00:32 - go ahead and get started since I'm
00:33 - starting fresh I'm gonna create a brand
00:34 - new project to refresh you guys on kind
00:37 - of how we do this create the directories
00:38 - on all that so I'm just gonna make a
00:40 - file I'm gonna call this main to up high
00:41 - this will be where we actually have our
00:43 - flask app and I'm just gonna go through
00:45 - and quickly do some things so I guess
00:46 - say from flask import flask with a
00:51 - lowercase L and import render underscore
00:54 - template what I'm gonna do now is just
00:56 - create a brand new flask app we already
00:58 - know to do this on your underscore name
00:59 - underscore and that will just create a
01:02 - very basic kind of home page function
01:04 - here so app dot root will make this just
01:07 - a slash home I'm also gonna show you
01:09 - that we can do more than one route to
01:11 - these functions so I'm gonna do another
01:13 - one for slash which now just means this
01:16 - function can be accessed by both of
01:17 - these different routes I'm gonna say
01:19 - define home and then here we're just
01:21 - gonna return render template and we'll
01:24 - call this one home dot HTML for now and
01:27 - then we'll do something with that okay
01:28 - so now let's run our app so if
01:30 - underscore underscore name equals equals
01:32 - underscore underscore main I believe we
01:35 - say what is it
01:36 - app dot run and then debug equals true
01:42 - like that okay so that should be all
01:44 - that we need to do if I didn't make any
01:45 - mistakes for the main file now what I'm
01:47 - gonna do is set up a template file so
01:49 - we're gonna put all our HTML files so to
01:51 - do that we're just gonna make a new
01:52 - folder I'm gonna call this one templates
01:54 - and then I'm gonna make another new
01:56 - folder this time and we haven't seen
01:57 - this yet I'm gonna call this one static
01:59 - now you might already be able to tell
02:01 - where we're gonna put specific files but
02:03 - essentially any static file we have
02:05 - which means not like a changing file so
02:07 - for example JavaScript CSS images I
02:10 - believe there's some other kind of
02:11 - static files as well are going to go in
02:13 - static directory and then all of our
02:15 - HTML files that we're gonna be rendering
02:17 - again will go inside this templates
02:18 - folder so inside this templates folder
02:20 - I'll create a new file I'm gonna start
02:22 - with a base of each DML we'll also make
02:24 - a new one while we're here and we'll
02:26 - call it home dot HTML we'll start coding
02:29 - up the base dot HTML file and then I'll
02:31 - talk about creating a few files inside
02:33 - of our static directory and how we can
02:35 - import our own custom CSS and then an
02:37 - image as well so let's just create a
02:38 - very basic HTML I'm gonna avoid putting
02:41 - the bootstrap stuff in for now just
02:42 - because it's gonna take up some time we
02:44 - don't need to waste sex we know to do
02:45 - that already so in the head will set up
02:47 - a title like that and then I don't know
02:52 - why it always does that adds the other
02:53 - bracket we'll set up block so we'll just
02:55 - say block title if I could type
03:00 - correctly and then end block now we'll
03:04 - set up a some body tags here so body and
03:09 - then see what it always freakin does
03:11 - that okay and then we'll add another
03:13 - block for 7% block content and then % %
03:21 - and block like so okay so now that we
03:24 - have that we have our base template so
03:26 - let's extend this base template it's a
03:28 - percent percent this is gonna be inside
03:30 - our home HTML file again we already know
03:32 - how to extend so extends based HTML and
03:35 - then we'll add our blocks here so pretty
03:38 - straightforward percent percent block
03:43 - content and then % percent and block and
03:48 - then we'll add our block title which I
03:50 - guess I'll just copy this and put it at
03:51 - the beginning to save us some time okay
03:53 - so now that we've done that let's just
03:55 - fill in these blocks quickly that's what
03:56 - we want to display and then we'll
03:57 - actually get into the static files
03:58 - I know I've wasted a bit of time here
04:00 - but we just need to set this up for the
04:01 - beginning so for our title I'll just
04:03 - call this home page and forever block
04:05 - let's just do an h1 and let's just do
04:07 - home page cuz I'm just gonna apply some
04:10 - basic styles to this so that you guys
04:11 - see how this works okay so we have our
04:13 - home dot HTML file kind of messy but
04:15 - that's fine like that we have our based
04:18 - on HTML file and now what I want to do
04:20 - is show you how we can import our own
04:21 - custom CSS so to import our own custom
04:24 - CSS we're gonna create a new CSS
04:26 - file inside of our static directory so
04:28 - do this I'm just gonna call this style
04:30 - dot CSS it doesn't matter what you call
04:32 - it but make sure you that you remember
04:33 - the name and now I'm going to show you
04:35 - how we can actually load the CSS file
04:37 - from inside here so to do that what
04:39 - we're gonna do is say a link rel equals
04:43 - stylesheet I'm going through this kind
04:46 - of quickly as well because I realize a
04:47 - lot of you guys know HTML so you
04:49 - probably know how this works and then
04:50 - I'm gonna say href equals and then this
04:52 - is where it gets a little bit different
04:54 - so make sure you're paying attention now
04:55 - inside of our kind of flask application
04:58 - it sets a default that all of our static
05:01 - files will be saved in the folder called
05:03 - static which means you actually need to
05:05 - make this folder called static on that
05:07 - I'm showing right here it needs to be
05:08 - called that
05:09 - because what we're gonna do is grab the
05:11 - URL for that static file and then
05:14 - reference the actual specific file name
05:16 - that we want inside of here so to do
05:18 - that we're gonna say URL underscore 4
05:20 - and then here we're gonna put the name
05:22 - of static so we're just gonna say static
05:25 - like that and we're going to say file
05:27 - name equals make sure you don't forget
05:29 - the quotes and in here the name of your
05:31 - CSS file so in this case style dot CSS
05:33 - the way that this works is essentially
05:35 - we're gonna use the Python code here to
05:37 - grab the URL for the static folder which
05:40 - will give us the URL to here then we can
05:42 - specify the exact file name in this case
05:44 - is styled up CSS and then we'll load
05:46 - that in as a stylesheet now we might
05:48 - also want to do a type equals and I
05:50 - don't actually know if this even makes a
05:52 - difference because sometimes I do
05:53 - without and it doesn't do any different
05:55 - we'll just say text slash CSS and there
05:58 - we go we should now actually have loaded
05:59 - in our stylesheet so I'm not gonna
06:01 - really talk about how CSS works it's
06:03 - just a very basic styling but do you
06:05 - kind of make this easy for us and see
06:07 - that everything's working I'm just gonna
06:08 - set a body color so I'm just gonna say
06:09 - body color I don't know what's let's
06:12 - just do some random FF II I don't think
06:16 - I can actually do FF a why not I don't
06:18 - know what come there that's gonna be but
06:20 - I guess we will see ok so now that we've
06:22 - done that I think we're actually good to
06:24 - go ahead and run this and see if this is
06:27 - working properly we're actually loading
06:28 - this in so give me a second I'm just
06:30 - gonna CMD into this folder and then
06:31 - we'll be right there
06:32 - ok so python maned up I just ran this
06:34 - now sorry that just took me a second
06:36 - gonna open up a
06:37 - web-browser here let's get this in drag
06:40 - this over and you can see we get
06:42 - homepage showing up in this kind of
06:43 - weird blue color because that is well I
06:45 - guess whatever the color is I decided to
06:47 - make with FFA but anyways that that is
06:50 - how you load in static CSS now if you
06:53 - wanted to have your bootstrapping here
06:55 - as well which you likely would I'm just
06:57 - gonna grab it I have another file open
06:58 - here that actually has that in here what
07:00 - you do is just put your bootstrap HTML
07:03 - or bootstrap CSS link above the other
07:06 - link so what you need to do is put
07:07 - bootstrap up here then you put the link
07:09 - to your custom CSS file and then that
07:12 - way if you do it correctly in your CSS
07:14 - file you can actually override these
07:15 - bootstrap classes and make your own kind
07:17 - of custom HTML and stuff so if you see
07:20 - this like when i refresh that you see
07:22 - that this text gets changed because we
07:24 - had the bootstrap load in here but our
07:26 - color is actually staying the same
07:27 - because that color is gonna override by
07:29 - adding that to the body tag like that so
07:32 - anyways that can get a bit confusing
07:33 - when you have multiple kind of
07:34 - stylesheet - you're referencing and you
07:35 - need to override specific styles but
07:38 - this is kind of how you do it you're
07:39 - gonna put your CSS Styles in here now I
07:41 - just want to show you that we can
07:42 - actually create folders within our
07:44 - static folder so if I wanted to say that
07:47 - all the CSS for a specific part of my
07:48 - website is in one folder maybe it's like
07:50 - the login page or the user signup or
07:52 - something let's just say styles like
07:55 - that I'm gonna create a Styles folder I
07:57 - can move this style file into that
08:00 - folder so I'm just gonna do this through
08:02 - subline so Styles like that and now what
08:05 - I would do if I want to reference that
08:07 - is rather than saying file name equals
08:09 - style dot CSS I'm just gonna say Styles
08:11 - slash and then in this case where'd it
08:14 - go
08:14 - style dot CSS the reason that works is
08:16 - again because we're gonna reference this
08:17 - static folder and then once we're in
08:19 - that folder we can just type the
08:20 - absolute path to whatever file we want
08:23 - it will grab that for us and render it
08:25 - okay so we've done that now and lastly
08:27 - to talk about images and then the
08:28 - JavaScript if you know how to do this
08:30 - you'll know how to do the JavaScript so
08:31 - it's not that hard so I want to actually
08:33 - reference an image and display that on
08:35 - my web page so I mean you guys were
08:36 - asking about this how do I do that well
08:38 - we need to grab an image first of all
08:40 - and throw it in our static folder so let
08:42 - me do that if I can actually find an
08:44 - image I don't know where I saved it
08:46 - okay so I found an image I just threw
08:47 - one into the static folder this is what
08:49 - the image looks like it's just off my
08:50 - Python programming tutorials and
08:53 - essentially I've just thrown it in there
08:55 - now what I'm actually gonna do is create
08:57 - a new folder in here and just call it
08:58 - images and then I'll throw that image in
09:00 - there just so we keep things nice and
09:02 - kind of clean here so I guess I'll move
09:03 - that one back in probably should have
09:05 - created the other directory first but
09:07 - that's fine and now to reference that
09:09 - we're gonna do the exact same thing we
09:10 - did for this stylesheet here except
09:13 - we're gonna do with an image so really
09:14 - easy I'm gonna just copy this link tag
09:16 - you don't have actually it's probably
09:18 - easier just to type up the image but I'm
09:20 - gonna paste this in here I'm gonna
09:21 - change this tag to say image like that
09:24 - we'll get rid of rel we'll get rid of
09:26 - type and then our href will just change
09:28 - so that it references the images folder
09:29 - in a references image PNG which is just
09:33 - what I named my image so let's do that
09:35 - so I realized that I actually need to
09:37 - change this to source not a traffic as a
09:40 - traps actually can it be the link that's
09:42 - why this wasn't working when I was
09:43 - messing with it before but let's run
09:44 - this now and when we do we see we get
09:46 - this Python showing up here I'm still
09:48 - not really sure why this homepage has
09:51 - kind of disappeared maybe I did
09:52 - something with the color um but anyways
09:55 - there you that is the image for us it's
09:57 - showing up and that is pretty much how
09:59 - you work with static files I mean we
10:01 - have style in here we know how to
10:03 - reference that by just going where is it
10:06 - here by doing URL for our static folder
10:09 - then we just type in whatever it is that
10:11 - we need and then if we go to home here
10:13 - for the source same thing URL for static
10:16 - and then file name equals and whatever
10:17 - that file is and that is pretty much all
10:20 - there is to using static files now if
10:22 - you're gonna use a JavaScript file same
10:24 - thing here right you'll do your script
10:25 - tag like that or you'll link rel
10:27 - JavaScript and then just load in that
10:30 - specific javascript file and then that
10:32 - will actually work for whatever class
10:34 - you're doing so that is pretty much it
10:36 - on how you use static files images and
10:38 - JavaScript and if you guys have any
10:40 - questions let me know and in the next
10:42 - video we'll be getting into blueprints
10:43 - which is kind of how we can organize our
10:45 - document a little bit better