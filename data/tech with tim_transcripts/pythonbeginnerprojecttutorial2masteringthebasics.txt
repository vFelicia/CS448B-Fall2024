00:02 - [Music]
00:06 - hello everyone and welcome back so in
00:09 - this tutorial we're gonna be continuing
00:11 - with what we did in the previous
00:12 - tutorial working towards a project and
00:15 - learning the fundamentals and basics of
00:16 - the Python programming language if you
00:19 - have not seen the first video in this
00:20 - series please go do check that one out
00:22 - beforehand as we're gonna be building on
00:24 - kind of what we've worked on already so
00:26 - you can see where we've left off with
00:27 - the code we had before I got rid of some
00:29 - of the comments I had below and we've
00:30 - just left this now and what this program
00:32 - does at this point is just welcomes us
00:34 - to the game asks us for our name and age
00:36 - and then prints out the name and age of
00:38 - the user so whoever typed about it now
00:41 - what I want to do here and there's a few
00:43 - things we're gonna have to learn to be
00:44 - able to do this is check if the user is
00:46 - old enough to play our game so I want to
00:48 - check if they are you know older than 18
00:50 - or maybe this game is pg-13 or something
00:53 - right that's what I want to make sure
00:54 - that they're the correct age before we
00:56 - actually prompt them you know do you
00:58 - want to play so before we let them start
00:59 - playing we want to check that they're
01:01 - older than a certain age so how do we
01:03 - actually do that well that leads me to
01:05 - an important thing called conditions so
01:08 - first we need to talk a little bit about
01:09 - arithmetic so arithmetic is just math
01:12 - there's four main operators in or not
01:15 - four sorry there's actually more than
01:17 - four there are some main operators
01:18 - inside of Python that allow us to do
01:20 - arithmetic arithmetic it's just math
01:22 - right so we have the asterisk the star
01:25 - the plus the minus and the modulus now
01:28 - there's also a double slash to which
01:30 - we'll talk about very briefly and these
01:32 - are important these are the operators
01:34 - from math operations so the asterisks is
01:36 - multiplication the slash the forward
01:39 - slash is division the plus is addition
01:41 - obviously the minus is subtraction the
01:43 - percent sign is actually modulus which
01:45 - gets us the remainder of a division I'll
01:47 - show you and the double slash stands for
01:49 - integer division so these are the main
01:51 - operators that we can use and I just
01:53 - want to show you how we can do some
01:54 - basic math on just so you have that
01:57 - skill if you need to use it we may not
01:59 - use it in this kind of project but it is
02:01 - something important so I figured I'd
02:02 - show it so let's say we have the
02:03 - variable x equals 9 and y equals 8 what
02:07 - do I do if I want to add x and y well I
02:09 - could do X plus y right that technically
02:12 - would add them
02:13 - but I want to store that addition
02:15 - somewhere else so just something
02:17 - important to understand is that when you
02:19 - do something like X plus y this does not
02:22 - assign X to 17 it might make sense right
02:25 - if you say oh XP
02:26 - you might be saying like Oh add Y to X I
02:29 - could understand why that may seem
02:31 - logical to some people but this doesn't
02:33 - really work in programming what I do
02:34 - this all that happens is this gives me a
02:36 - value 17 but it doesn't get stored
02:38 - anywhere so what I need to do if I
02:41 - wanted to say add the value Y to the
02:44 - variable X is do something like x equals
02:47 - x plus y now I'm going to say the
02:49 - variable X is equal to whatever the
02:51 - previous value of X was plus y that will
02:54 - actually do that addition for me now
02:56 - same thing if I do this so plus equals
02:59 - is a shortcut for what I just showed you
03:01 - the people that made Python know that a
03:03 - common operation is to add one variable
03:06 - to another so rather than having to
03:07 - rewrite you know x equals x plus y you
03:10 - can just do X plus equals Y which stands
03:13 - for X is equal to the addition of X plus
03:16 - y right that's pretty much what that's
03:18 - doing so that will assign the value of
03:20 - 17 to X if you did something like that
03:22 - now when you're doing arithmetic the
03:24 - order of operations apply so let's say I
03:26 - have a variable is that and I said Zed
03:28 - is equal to 9 times or not 9 times 8 X
03:31 - Asterix y plus y well the order of
03:36 - operations that we know will follow
03:38 - which means this multiplication will
03:39 - happen before this addition now let's
03:42 - say we didn't want that and we wanted to
03:44 - you know change the order of operations
03:45 - well we could use parentheses like we
03:48 - would in any other map or any other
03:50 - programming language or math or whatever
03:52 - and then this will follow so we will do
03:54 - the parentheses first now these are the
03:56 - common operations right so this is
03:58 - multiplication
03:58 - that's division now I'll just show you
04:01 - the kind of two or three ones that you
04:02 - might not know so the exponential
04:04 - operator which actually haven't shown it
04:06 - is the two asterisks so when you do two
04:08 - asterisks that stands for raise to the
04:10 - power so X raised to the power of y plus
04:13 - y so whatever that would be so 16 I
04:15 - guess and then the other two operators I
04:18 - wanted to show you where the mod
04:20 - operator and the integer
04:22 - operator so the mod operator what this
04:25 - does is get the remainder after division
04:27 - so if I say X mod y this is actually
04:30 - equal to 1 now the reason this is equal
04:33 - to 1 is because the way you do this is
04:35 - you say okay how many times does 8 go
04:37 - into 9 how many times it goes in one
04:40 - time Folie right it goes in one full
04:42 - time what is the remainder what after
04:45 - you take that eight out of the nine well
04:47 - it's 1 right so if you do 9 divided by 8
04:49 - you get one point something but really
04:51 - it's one remainder one that's the way
04:54 - you can think of it so like if I had say
04:55 - 5 and 2 then the mod again would be 1
05:00 - because you say how many times does 2 go
05:01 - into 5 well it goes in 2 times okay so
05:04 - what is that that's 4 let's take 4 out
05:06 - of 5
05:07 - okay what's the remainder now well
05:08 - there's one left so that's remainder 1
05:10 - it's pretty straightforward that's how
05:11 - that works whenever you do something mod
05:14 - 1 obviously the remainder is going to be
05:15 - 0 because 5 can be divided by 1
05:18 - perfectly fine and if I did something
05:19 - like 0 mod 1 then that would be equal to
05:22 - 0 because 0 does not go into 1 at all so
05:24 - what's the remainder 0 I hope that makes
05:26 - sense
05:27 - that's the mod operator for you it's not
05:28 - super important so I won't spend too
05:30 - much time on it and then we have the
05:32 - integer division so integer division is
05:34 - two slashes and this is kind of the
05:36 - opposite of mod it doesn't give you the
05:38 - remainder after division it gives you
05:40 - the whole number division or the whole
05:43 - number quotient is what it's called so
05:45 - if I do 5 divided by 2 how many times
05:47 - does 2 evenly go into 5 well it goes in
05:50 - twice so the integer division of X by Y
05:54 - is going to be 2 right and then if I
05:56 - change this to 7 same thing so how many
05:58 - times does 2 go into 7 well it goes in 3
06:01 - times so the integer integer division
06:03 - would be 3 that is the basics of those
06:05 - mathematical operators just in case you
06:07 - need to use them I felt they're
06:08 - important to show now with those
06:10 - operators there's also a bunch of other
06:12 - operators too
06:13 - we have a less than we have a greater
06:15 - than we have a less than or equal to a
06:17 - greater than or equal to is equal to and
06:19 - are not equal to now these are what are
06:21 - known as our comparison operators and
06:23 - this is how we actually check equality
06:25 - between different things you know you
06:26 - might imagine that it's actually pretty
06:28 - important for us to for example check if
06:30 - someone is older than a certain age so
06:33 - if we wanted to check if the person's
06:35 - age was older than 14 we would have to
06:37 - use one of these operators to do that
06:39 - now this is where we start talking about
06:41 - boolean's I'm trying not to go too fast
06:43 - here but again I really do want to get
06:44 - to the project but some of these things
06:46 - are pretty fundamental to go through so
06:48 - actually can I type in here let me just
06:51 - see if this works ah perfect so I'll
06:53 - actually do some stuff in the console
06:54 - for us and don't worry I'll zoom in
06:56 - quite a bit so you guys can see this all
06:57 - right so zoom zoom zoom okay and now I'm
07:00 - just gonna do a few examples of what we
07:02 - call conditions or boolean expressions
07:05 - so remember I showed you that type
07:06 - before that was bool right um that
07:08 - doesn't matter that you see that but it
07:09 - was a bool and those were the values
07:11 - true or false right so when we use these
07:15 - conditional operators so that greater
07:17 - than that less than the less than or
07:19 - equal to the greater than or equal to
07:21 - that is equal to them not equal to when
07:24 - we use those whatever we put on the left
07:26 - hand side and the right hand side will
07:28 - be compared using that operator and
07:31 - we'll either get a true or false value
07:32 - so if I said something and this is like
07:35 - a really common example 3 is less than 4
07:37 - well what do you think right if I tell
07:39 - you this is going to be either true or
07:41 - false so it's gonna be one of those
07:42 - boolean types what do you think this
07:44 - would be well of course that's true
07:46 - because 3 is indeed less than 4 right
07:49 - and then if I just watch us switch this
07:51 - around I say 3 greater than 4 well we
07:55 - get false because 3 is not greater than
07:56 - 4 so this is the basics on how these
07:58 - conditional operators work and I can do
08:01 - something like you know 45 less than or
08:05 - equal to 45 now is this true or false
08:07 - well that's true because the way that
08:09 - this works is it checks if the value on
08:11 - the left hand side is less than or equal
08:14 - to this value right and that's kind of
08:16 - the basics on how some of these things
08:17 - work now let me see can i clear there we
08:19 - go awesome let's hit enter here and see
08:22 - if we can start typing now the important
08:24 - ones that we want to go through though
08:25 - are comparing for equality that's
08:27 - something we want to do a lot of time so
08:29 - comparing numbers using the less than
08:30 - and greater than signs that's pretty
08:32 - easy I think that makes sense to most of
08:34 - you you know it's either true or false
08:35 - so you can read it and pretty well
08:36 - figure it out but sometimes when we have
08:39 - checking for equality it can be a little
08:41 - bit different so if I have something
08:42 - like 5 equals equals 5 what this is what
08:45 - this says is is 5 equal to 5 so what I
08:48 - did
08:49 - before right when we made a variable we
08:50 - could do something like x equals 5 and
08:52 - that is an assignment that means we're
08:55 - signing 5 to the value X but if I go x
08:59 - equals equals 5 what I'm asking is is
09:02 - like is X equal to 5 the two equal sign
09:06 - is like a question mark almost like is
09:07 - this true give me the result whereas the
09:10 - 1 equal sign is an assignment you're
09:11 - telling X that yes it is equal to 5 so
09:14 - if I say x equals equals 5 we get the
09:17 - value true right and in fact what I can
09:19 - do is make a variable called Y let's say
09:21 - y equals 5 and I can say x equals equals
09:24 - y and we'll get true all that happens
09:26 - when I use the variables here is that
09:28 - we'll just check what their values so
09:29 - we've assigned their values here and it
09:31 - will compare their values and tell me if
09:33 - that's true or false so that is the very
09:35 - basics of how we can use that equality
09:37 - so equals equals and then there's one
09:39 - more which is the not equals 2 and what
09:42 - this does is tell us if two values are
09:44 - not the same so whatever the result of
09:46 - the two equal sign would be it's just
09:48 - reverse so in this case X is equal to Y
09:50 - so since they're not equal to each other
09:53 - or since they are equal to each other
09:55 - then not equal two will give us false
09:57 - right so if we look at false it says no
09:58 - these actually are equal to each other
10:01 - so we're getting false for the not equal
10:03 - to operator I hope that makes sense now
10:05 - lastly we can compare strings right so I
10:07 - can do something like hello equals
10:10 - equals hello and boom that works fine
10:12 - that's totally true but what happens if
10:15 - I try to do this
10:16 - hello equals five note we cannot assert
10:19 - not hello equals five hello equals
10:21 - equals five what am I saying we get the
10:22 - value false right so we could when we
10:24 - compare different types like an int and
10:26 - a string together obviously those aren't
10:28 - going to be the same and what if I
10:29 - actually go ahead and do something like
10:30 - this five equals equals five well that's
10:33 - false
10:34 - to so even though these values are
10:37 - technically the same since this is a
10:39 - string and this is an int we're gonna
10:41 - get false so that's very important that
10:43 - when we're checking things they are the
10:44 - same type because if they're not then
10:47 - we're gonna get errors like this where
10:49 - they might actually be the same value
10:50 - but it's not showing up as the same
10:52 - value so I'm hoping this is making sense
10:54 - of course we're going to go through more
10:55 - examples but last thing I'll show you is
10:58 - that when I do like Hello equals equals
11:01 - hello do we thing
11:03 - this is gonna be equal or not if you
11:04 - have a look at it yes no what do you
11:06 - think let's run this we get false so
11:08 - whenever there's any capital letters
11:10 - that really matters so just make sure
11:12 - you understand that the types really
11:14 - matter and the capitalization matters as
11:16 - well and I'm gonna show you ways that we
11:18 - can deal with that because you could
11:20 - imagine like if we're checking to see if
11:22 - the user types something and we want
11:24 - them if they type it in with a capital
11:26 - letter or not with a capital letter we
11:27 - still want that to work right we still
11:29 - want to check and see that that value is
11:31 - is what we want it to be equal to so
11:33 - anyways that was kind of the theory that
11:35 - we needed to go through now let's get it
11:36 - into the project and start working on it
11:38 - apologize if that was longer than and
11:41 - then anticipated all right so what does
11:43 - I want to do I wanted to check if the
11:45 - users age was over a certain value so
11:49 - what I need to do is I need to write an
11:52 - expression that pretty much checks if
11:53 - age is greater than you know some some
11:56 - value right so let's first of all check
11:58 - this let's print and we're actually
12:00 - gonna go and we're gonna say is
12:02 - underscore older so I make a variable
12:04 - called is older I'm gonna set that equal
12:06 - to H and we'll say age greater or equal
12:10 - to 18 so what this is gonna do is it's
12:13 - going to assign whatever the value of
12:14 - this expression is so this will either
12:15 - be true or false to the variable is
12:18 - older and then I'll print is underscore
12:21 - older just like that so this will just
12:23 - tell us true or false and let's actually
12:25 - have a look at what we get here because
12:27 - it might surprise you a bit so let's run
12:29 - this and let's have a look it will begin
12:31 - so let's go name tim age 19 and we get a
12:35 - bunch of red text this is our first red
12:37 - text that we've seen so this is an error
12:39 - message I did this purposely and I want
12:42 - us to read what actually happened here
12:43 - and see what line had happened at so
12:46 - that we understand what happens when we
12:47 - get an error message so if you see this
12:49 - red text don't worry it just means
12:51 - you've done something wrong uh you know
12:53 - could be able it definitely is your
12:55 - fault because you typed it but you can
12:57 - definitely figure out what's wrong just
12:58 - by reading through this error message
12:59 - quite easily so you can see it says
13:01 - trace back most recent call last you
13:03 - know don't worry about this gibberish if
13:04 - it doesn't make sense that's fine what
13:06 - you're really looking for here is the
13:07 - line number the actual line where this
13:10 - thing went wrong and then what the error
13:12 - was so in this case it says file main
13:13 - dot PI so that's the file we're working
13:15 - in line seven
13:16 - so line seven this is the expression so
13:19 - is older equals age greater than or
13:21 - equal to 18 and then type error greater
13:23 - than or equal to is not supported
13:25 - between instance of string and int so
13:27 - what that actually means is that this
13:30 - age variable here is a string and this
13:33 - here on the right hand side is an int so
13:35 - I cannot compare if the string like cuz
13:38 - imagine if I had a string like you know
13:40 - hello I can't say hello greater than or
13:42 - equal to 18 that doesn't make any sense
13:44 - I can't do that and since age is a
13:46 - string we can't do that but what it why
13:49 - is ages string didn't I type in nineteen
13:51 - that's weird
13:52 - well by default whenever you type
13:55 - something in using input it
13:57 - automatically comes in as a string so
13:59 - even though I typed in nineteen like
14:01 - this and I didn't put the do quotation
14:02 - marks around it it automatically looks
14:04 - like this inside of my program that's
14:07 - just the way it works because this input
14:09 - doesn't know what we're gonna type right
14:11 - so it has to just assume it's gonna be a
14:13 - string because a string can hold
14:15 - anything inside of it so long as this
14:16 - wrapped in the quotation marks so that's
14:19 - why we have to do that
14:20 - so anyways that's what we do and yeah so
14:24 - we now need to actually find a way that
14:26 - we can convert this age to an integer so
14:29 - we need to take that string value and we
14:31 - need to convert it to an int so that we
14:34 - can actually compare these two things so
14:35 - the way that I do that is I write int
14:37 - and then I wrap the variable age with
14:41 - this int so I say int open bracket close
14:43 - bracket around age now that says
14:45 - whatever this ages is so whatever number
14:48 - this age is because in this case it's a
14:50 - string that's 19 let's just strip out
14:52 - the number from that so get rid of the
14:54 - quotation marks and make this an int
14:56 - value so now if I say is older equals
14:59 - the int value of whatever the ages so
15:02 - take those quotation marks away just
15:03 - make it an integer and check if that's
15:05 - greater than or equal to 18 so that's
15:08 - this will work now so let's actually
15:09 - have a look at this so what is your name
15:11 - Tim what's your age 19 hello Tim you are
15:14 - 19 years old and then it says true so
15:16 - that totally worked and that was fine we
15:18 - were able to convert the string that we
15:20 - typed in into a number so just keep that
15:22 - in mind if you're asking a user to type
15:24 - in a number then you want to make sure
15:26 - you convert whatever they typed in to an
15:28 - integer so that
15:30 - you want to compare it or you want to
15:32 - use it it's actually an integer value
15:33 - and there's another way to do this I can
15:36 - type int around the input statement up
15:38 - here and the reason this works is
15:40 - because this is pretty much doing the
15:41 - exact same thing we're doing down here
15:43 - except now we're gonna actually assign
15:46 - an integer value to the age variable
15:48 - rather than just convert the age
15:50 - variable later on to an int so it takes
15:53 - the input whatever the user types in and
15:55 - then immediately just converts it right
15:57 - into an integer and now I can remove
15:59 - this and this will still work because
16:02 - this is being converted to an integer
16:03 - immediately so let's run this one so
16:06 - what is your name Tim what is your age
16:08 - 19 and now we get hello Tim you're 19
16:10 - years old true all right so we've
16:12 - covered a lot of stuff there's one more
16:14 - thing to go through and this will be
16:15 - kind of the most exciting thing we do so
16:16 - far so I'm excited to do it and this is
16:19 - called the if statement so right now we
16:21 - just printed true but ideally you know I
16:22 - want to give the user some different
16:24 - messages based on if they're old enough
16:25 - or not right I don't want to just print
16:27 - out true so how do I do that
16:29 - well this is where we use the if
16:31 - statement so you've seen that we make
16:33 - these little conditions right by using
16:34 - these conditional operators and these
16:36 - are either true or false
16:37 - now the reason we use these is because
16:39 - we can use them inside of an if
16:40 - statement so actually what I can do is I
16:43 - don't need brackets but I'm gonna remove
16:45 - this variable is older and I'm gonna
16:46 - take this age greater than 18 and I'm
16:48 - just gonna kind of code something out
16:50 - and then I'll talk about how this works
16:54 - oops if we could get this type in right
16:57 - you are old enough okay so what this is
17:01 - saying is this is an if statement what
17:04 - the if statement does is says if the
17:07 - condition here is true do this that's as
17:10 - simple as it is you literally read it
17:12 - like plain English you write the key
17:13 - word if so IIF you write some condition
17:16 - here whatever you want to check but this
17:18 - needs to compare or it needs to be true
17:20 - or false so this needs to evaluate to
17:22 - true or false and then you put a colon
17:24 - it's important you add the colon then
17:27 - down here you do a tab right so you tab
17:29 - in so one in debt level and whatever's
17:32 - inside of this indented block underneath
17:34 - the if statement will happen if this
17:37 - condition is true if it's not true it
17:39 - will simply skip whatever's indented and
17:41 - just keep moving on in the program
17:43 - so I'll just show you because I'm gonna
17:45 - print this twice just so that this makes
17:47 - sense so I'll print this two times so
17:49 - now if the age is greater than equal to
17:51 - 18 we'll print you're old enough
17:53 - twice so let's run this and let's go
17:56 - ahead was your name Tim what is your age
17:58 - 19 hello Tim you're 19 years old you are
18:02 - old enough you are old enough so that is
18:03 - exactly how that works now there's one
18:06 - more component to show to this and I
18:07 - think that was easy enough hopefully
18:09 - that makes sense it's just if you write
18:11 - some condition here and then if that
18:13 - condition is true you go ahead and you
18:15 - do whatever is in this block now what
18:17 - about if they're not older than 18 right
18:20 - so if I run this again and I say what is
18:22 - your name
18:22 - Tim 19 hello Tim you're in uh well I
18:25 - should I should have selected an age
18:27 - that was younger let's do Tim 17 hello
18:29 - Tim you're 17 years old what if I want
18:31 - to tell them that they're not old enough
18:33 - to play well I could do another if
18:35 - statement right I could do if age is
18:37 - less than 18 and then I could print that
18:40 - out but it's actually an easier way to
18:41 - do this and this is using an else so
18:44 - this else statement kind of combines
18:46 - with the if and whenever you write an if
18:48 - you have the option you don't have to
18:50 - but it's up to you if you want to put an
18:51 - else statement afterwards that tells you
18:54 - what to do if this condition is not true
18:56 - so essentially this is saying if this is
18:58 - true do this otherwise do this and now
19:01 - we're gonna put another indented
19:03 - statement and we're gonna say you are
19:06 - not old enough to play da so let's try
19:12 - this now and just see how this works oh
19:14 - let's go Tim let's go 17 and now it says
19:17 - slow Tim you're 17 years old you are not
19:19 - old enough to play whereas before it
19:21 - told us we were old enough to play so
19:23 - that is the basics of the if statement
19:24 - so we have the if and the else now I'll
19:27 - show you one more thing with the if
19:28 - statement and then we'll kind of start
19:30 - the very beginning of our game and then
19:31 - continue the rest of it in the next one
19:33 - but we've almost learned pretty much
19:34 - everything we need to know so now we're
19:37 - gonna go else if so Ellis if is another
19:41 - statement that we can use and the way
19:43 - that this works is essentially we're
19:45 - checking for one more thing so let's say
19:47 - we had three options right maybe if they
19:49 - were younger than 14 they just couldn't
19:52 - play if they were older than 14 but they
19:54 - had a parent with them they're a lot
19:55 - to play and if they're older than 19
19:57 - they could play alone maybe those are
19:58 - the three options we have so what I
20:00 - could actually do is I could change this
20:02 - around a bit I can say if age is greater
20:04 - than or equal to 18 you're old enough to
20:05 - play then I could say Alice if so if
20:09 - this isn't true but this is true so what
20:11 - I put here age is greater than or equal
20:15 - to 14 and then what I can do is print
20:19 - you can play with supervision or
20:24 - something
20:24 - supervision okay so now what I'm saying
20:27 - is what is this sorry not else if this
20:29 - should be L if I'm coding another
20:32 - language here sorry not else if L if L
20:34 - if' apologize about that but L if then
20:37 - you put the condition and then whatever
20:39 - you put any indented block below that
20:41 - will happen if this is not true but this
20:44 - is true so I hope that makes sense but
20:46 - it goes like you know check this if it's
20:48 - true do this and skip the rest of it and
20:50 - then if this is not true check this if
20:53 - this is true do this skip the rest of it
20:56 - if this is not true go into the else and
20:58 - do this that is kind of the way that
21:00 - this works and you can actually put
21:01 - multiple L if statements underneath each
21:04 - other so you can do if L if L if L
21:06 - if/elif/else and these again are all
21:08 - optional but just remember that the else
21:10 - always comes at the end the elif's go in
21:12 - between and that you can have as many of
21:14 - them as you want but you don't need to
21:16 - so that's an important thing but let's
21:17 - just have a look at what happens now and
21:19 - say what is your name Tim what is your
21:22 - age let's do 15 and now it says slow Tim
21:24 - you're 15 years old you can play it with
21:26 - supervision so that is the basics of the
21:28 - if/elif/else now let me scrap this
21:31 - actually I want to scrap this but I'll
21:33 - get rid of the else F and let's leave it
21:35 - at this for now cuz it's gonna say okay
21:37 - actually we'll add one more thing to
21:39 - finish it up if age is greater than or
21:41 - equal to 18 print you are old enough to
21:43 - play and now what I wanted you to wrap
21:46 - this up is ask them a question do you
21:49 - want to play so if they're old enough to
21:50 - play let's ask them if they want to play
21:52 - and let's do that inside of here so only
21:56 - if they're older than 18 and they're old
21:59 - enough to play then I will ask them if
22:01 - they want to play otherwise I'm not
22:02 - going to so inside this if statement I'm
22:04 - actually going to say you know wants
22:08 - underscore too
22:09 - underscore play you can name this
22:10 - variable anything you want I just like
22:12 - to make mine descriptive and I'll say
22:13 - input do you want
22:17 - oops do you want to play now I'm doing
22:23 - this space here just so that when they
22:24 - start typing and I forgot to mention sis
22:26 - in the last video when they start typing
22:28 - I doesn't get squished right beside the
22:30 - text so I just add a space afterwards
22:32 - and it makes a little bit nicer but
22:34 - wants to play equals input do you want
22:35 - to play and now I'm gonna check if they
22:39 - want to play so I'm gonna say if and I
22:42 - watched you said wants to play equals
22:44 - equals yes so if what they type in is
22:48 - equal to yes then print let's play
22:55 - exclamation point so I know that was a
22:57 - lot let me zoom out a bit here just so
22:59 - we can read this a little bit easier and
23:00 - now let's run this program for the last
23:01 - time before we wrap up this video so
23:03 - what is your name Tim what is your age
23:06 - 18 hello Tim you're 18 years old you're
23:10 - old enough to play you want to play
23:11 - let's type yes and it says let's play
23:13 - awesome let's run this one more time
23:15 - what is your name Tim what is your age
23:17 - let's go
23:19 - younger than this time so let's go 17
23:21 - hello Tim you're 17 years old you are
23:23 - not old enough to play so I hope this is
23:25 - starting to make sense but I'll just
23:26 - give you a really quick summary so we
23:28 - welcome the user we asked them for their
23:30 - name and their age we convert their age
23:32 - right away to a number so that we can
23:34 - actually compare it later on we then say
23:36 - hello whatever their name is you are
23:38 - whatever their ages years old we then
23:41 - check how old they are if they're older
23:43 - than 18 we tell them they're old enough
23:45 - to play and then we ask them if they
23:48 - want to play if they say yeah so if they
23:50 - type in the string yes we print and
23:53 - let's play otherwise we tell them
23:55 - they're not old enough to play and that
23:56 - is the very beginning of our game and I
23:59 - hope you can see what's kind of gonna
24:00 - happen here in the future right so when
24:02 - they want to play now what I'm gonna do
24:04 - is inside of here I'm gonna ask them
24:06 - their first question so I'm gonna say
24:08 - okay you know your first decision is do
24:10 - you want to go left or right or will
24:11 - make something up and we're gonna keep
24:12 - kind of chaining inwards and nesting if
24:15 - statements together just to make all
24:17 - these blocks with all these different
24:18 - decisions and you're gonna see it's
24:20 - gonna get pretty intricate pretty
24:22 - quickly but I think
24:23 - is pretty cool and right now you've
24:24 - learned almost everything you need to
24:26 - know to make this full game so with that
24:28 - being said that's gonna be this video as
24:30 - always I hope you guys enjoyed if you
24:31 - did make sure they like subscribe and I
24:33 - will see you in the next one