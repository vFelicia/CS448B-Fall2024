00:02 - [Music]
00:08 - hello everybody and welcome to the sixth
00:10 - and final video in this blockchain for
00:13 - beginners tutorial series in this video
00:16 - i'm going to talk to you about ethereum
00:18 - scaling solutions specifically solutions
00:20 - on layer one and on layer two and of
00:23 - course i'll describe what layer one and
00:25 - layer two mean now the reason we need
00:27 - ethereum scaling solutions is because as
00:30 - you've seen through this series ethereum
00:32 - can be quite slow and the number of
00:34 - transactions that it can handle per
00:35 - second is very very small now this means
00:38 - it takes a really long time for us to
00:40 - actually submit a transaction to the
00:42 - blockchain and have that processed and
00:44 - validated and if we want to be using a
00:46 - smart contract to perform computations
00:48 - that can take a really long time as well
00:50 - or be infeasible based on the amount of
00:52 - say iterations we need to do within a
00:54 - for loop or something along those lines
00:56 - so there's tons of reasons why we need
00:58 - better scalability on ethereum and
01:00 - fortunately there's many different
01:02 - solutions so with that said we'll go
01:04 - ahead and get into the video but i do
01:06 - want to thank cartesi for sponsoring
01:08 - this video and this series they're an
01:10 - awesome company that have been helping
01:11 - me come up with all of the content for
01:13 - this series and they're actually working
01:15 - on a bunch of layer two blockchain
01:17 - solutions right now and trying to make
01:19 - the blockchain more accessible and
01:21 - scalable for developers so definitely
01:24 - check them out from the link in the
01:25 - description they have a ton of detailed
01:27 - articles on a lot of the stuff i'm going
01:28 - to go over in this video and i do just
01:30 - want to quickly mention here in the
01:32 - intro that this is going to be very high
01:34 - level i'm not going to get into a ton of
01:36 - technical explanations about these
01:38 - different solutions i just want to give
01:39 - you an introduction to them and then
01:41 - encourage you to research and learn more
01:43 - anyways let's start talking about the
01:45 - difference between layer 1 and layer 2
01:47 - solutions so in blockchain world and in
01:49 - this video you're going to see the terms
01:51 - layer 1 and layer two a lot now layer
01:54 - one is referring to the blockchain
01:56 - network itself so the actual ethereum
01:58 - main network and layer two is referring
02:00 - to stuff built on top of that network so
02:03 - when we talk about increasing the
02:05 - scalability of ethereum when we're
02:06 - referring to layer one we're talking
02:08 - about actually modifying the underlying
02:10 - blockchain technology so changing the
02:13 - architecture increasing the block size
02:15 - decreasing the block size whatever the
02:17 - solution is going to be it's going to be
02:18 - right on ethereum and that's something
02:20 - that we can't really directly modify
02:22 - ourself the people that are working on
02:23 - ethereum would have to actually change
02:26 - then we have layer two layer two is
02:28 - referring to solutions we build on top
02:30 - of the block chain so we're not touching
02:32 - layer one we're not modifying the
02:34 - ethereum network we're doing stuff on
02:36 - top of this to increase the scalability
02:38 - so of course i'll get into those
02:40 - different solutions but again on layer
02:42 - two we're relying on layer one to give
02:44 - us the security and aspects of the
02:46 - blockchain but we're not actually gonna
02:48 - be modifying that underlying technology
02:50 - and that underlying architecture
02:52 - hopefully that is clear now what i want
02:54 - to do is talk to you about something
02:55 - known as the scalability trilemma which
02:57 - has to do with the different aspects of
02:59 - a blockchain that we want to have and
03:01 - that we need to consider when we're
03:03 - picking different blockchain solutions
03:05 - so the scalability trilemma is
03:06 - essentially a triangle i'll put a photo
03:08 - up on the screen where each vertex or
03:11 - point is one of the properties or
03:13 - aspects of a blockchain that we like to
03:15 - have so here we have security
03:17 - decentralization and scalability now
03:19 - broadly speaking what this says is that
03:21 - whenever we implement a solution we end
03:24 - up lacking in one of the areas of this
03:26 - triangle so one of these points for
03:28 - example if we implement a solution that
03:30 - has great security and great
03:31 - decentralization typically we're going
03:34 - to have worse scalability where if we
03:36 - implement something with great
03:37 - scalability and great security we may
03:39 - have worse decentralization now this is
03:41 - not always the case there is some
03:43 - solutions that are great in all three of
03:45 - these areas but this is something that
03:46 - we want to think about when we're
03:48 - actually talking about different
03:49 - blockchain solutions so does this
03:52 - increase decentralization does it
03:53 - decrease decentralization what are the
03:55 - pros and the cons and the trade-offs as
03:57 - it relates to the scalability trilemma
04:00 - now before we go any further i do really
04:02 - want to define scalability as well as
04:04 - security and decentralization just to
04:06 - make sure we know those terms so when
04:08 - we're talking about scalability the
04:09 - common thing to refer to as it relates
04:11 - to blockchains is transactions per
04:14 - second or transaction throughput now
04:16 - that is one of the areas of scalability
04:18 - that we're concerned with but we're also
04:19 - concerned with data scalability as well
04:21 - as computation scalability so when we
04:24 - were building smart contracts one of the
04:25 - big issues there was we don't want to
04:27 - store a ton of data and we can't do too
04:29 - many computations in the smart contract
04:31 - because of the cost on the ethereum
04:33 - network and the time it takes to
04:35 - actually process those so keep that in
04:37 - mind as we go through this video it's
04:38 - not just the number of transactions it's
04:40 - also computations and data on the
04:43 - blockchain now as we go to
04:45 - decentralization that's really referring
04:47 - to the centralization of power or in
04:50 - this case the lack of centralization of
04:52 - power so the example i always like to
04:53 - use is a bank a bank is an example of a
04:56 - central institution or organization they
04:59 - have you know a few executives or a few
05:00 - board members that really control what
05:02 - the bank can do they have investors they
05:04 - have government interests whatever it's
05:06 - very very centralized the people that
05:08 - use a bank don't control what the bank
05:10 - is able to do and what control they have
05:12 - of your money it's the bank itself very
05:14 - central that controls all of them so
05:16 - hopefully that makes a bit of sense now
05:18 - when we talk about blockchain we want
05:20 - everything to be decentralized so
05:22 - there's not one person one institution
05:24 - or maybe a few people or a few
05:25 - institutions that have control over the
05:27 - network ideally we want millions of
05:30 - computers or thousands of computers
05:31 - around the world to be running and
05:33 - securing this network so we're less
05:35 - prone to hacks less prone to corruption
05:37 - and all those other things that can
05:38 - happen when you have central power and
05:41 - central you know authority of something
05:43 - so hopefully that makes a little bit of
05:44 - sense then we're talking about security
05:47 - this is pretty straightforward but how
05:48 - secure is the network how easy is it to
05:51 - be hacked how uh sure can we be that
05:53 - this transaction is valid when it's
05:55 - posted on the blockchain ledger all of
05:57 - those types of things relate to security
05:59 - all right so that is the scalability
06:01 - dilemma keep this in mind as we go
06:03 - through the rest of this video now i'm
06:05 - going to start talking to you about
06:06 - layer 1 solutions now i'm not going to
06:08 - spend too much time here because we
06:09 - don't have much control over layer 1
06:11 - solutions we can't really build a layer
06:13 - 1 solution because we don't have control
06:15 - of the ethereum network
06:17 - regardless though i will talk about why
06:19 - we would want a layer 1 solution so why
06:21 - would we actually want to improve
06:23 - ethereum well as i'm sure many of you
06:25 - are aware ethereum is relatively slow so
06:28 - we're talking about scalability it only
06:30 - does about 15 transactions per second
06:33 - and in contrast to something like visa
06:35 - that can do upwards of about 60 000
06:37 - that's really really slow and that makes
06:39 - it infeasible for a ton of different
06:41 - applications especially something like
06:44 - being the global currency right if we
06:46 - wanted everyone to be using ethereum for
06:48 - their day-to-day transactions well that
06:50 - would take a really long time because we
06:52 - would have to be waiting hours maybe
06:53 - even days for a transaction to go
06:55 - through because we can only do 15 per
06:57 - second now in terms of computations as
06:59 - well we've seen when we're working with
07:01 - smart contracts we're really limited in
07:04 - what computations we can't do we
07:06 - probably can't implement any advanced
07:08 - data structures and algorithms we can't
07:10 - store too much information and we can't
07:11 - do too many iterations without it
07:13 - costing us a ton of money on the
07:15 - blockchain so that is kind of the reason
07:17 - we would want to improve ethereum
07:19 - because of those lack of scalability
07:21 - issues now ethereum is very
07:23 - decentralized and is very secure so
07:25 - we're not super concerned with those two
07:27 - aspects we just really want the
07:28 - scalability to increase without hurting
07:30 - the decentralization and hurting the
07:32 - security
07:33 - anyways let's talk about the layer 1
07:35 - solutions so currently ethereum is
07:37 - actually working on a layer 1 solution
07:39 - which they're calling ethereum 2.0 this
07:42 - is going to be a complete change to the
07:44 - architecture and the algorithm used for
07:46 - ethereum so i'm sure many of you have
07:49 - heard of this before they've been
07:50 - working on it for a really long time and
07:51 - it should be out relatively soon but
07:53 - they're going to be changing from proof
07:55 - of work to proof of stake now i'm not
07:57 - going to discuss the differences here or
07:59 - get into kind of a debate about which is
08:01 - better but that is what they're doing
08:02 - they're changing the main algorithm from
08:04 - proof of work to proof of stake and
08:06 - ideally they're going to be bringing the
08:07 - transaction through put from about 15
08:09 - transactions per second to upwards of a
08:11 - hundred thousand transactions per second
08:14 - now i cannot confirm this these are just
08:15 - the rumors and what i've heard online
08:17 - and seen when looking at the project
08:19 - anyways that is kind of what they're
08:21 - doing now in ethereum 2.0 they're doing
08:23 - a few other things one of the main
08:24 - things that they're adding is something
08:26 - called sharding so sharding is really
08:28 - this process of taking a large piece of
08:30 - data and splitting it horizontally into
08:33 - smaller pieces of data which can be
08:35 - handled by multiple computers at the
08:37 - exact same time so to put this simply
08:39 - imagine i have one piece of data and
08:41 - this piece of data can only be processed
08:43 - by one computer at a time well it's
08:45 - going to be slower to process that data
08:47 - than if i split this data into say 64
08:49 - chunks or 120 chunks or whatever the
08:51 - number of chunks is going to be and
08:53 - allow 120 computers 2 000 computers
08:56 - whatever the number is to process these
08:58 - smaller pieces of data at the exact same
09:00 - time so that's exactly what ethereum is
09:02 - aiming to do take the large piece of
09:04 - data split it into multiple smaller
09:06 - pieces of data and then allow for
09:07 - parallel processing and to drastically
09:10 - increase the number of transactions per
09:12 - second in fact this is a similar thing
09:14 - that many large companies do and many
09:15 - large databases do to increase the
09:18 - efficiency or increase the scalability
09:20 - of their systems so this is not just
09:22 - something that's done in blockchain this
09:24 - is done generally in computer science
09:26 - and i would encourage you to read more
09:27 - about it and look it up if you're
09:29 - interested in exactly how sharding works
09:31 - so with that said that's going to wrap
09:32 - up our layer 1 solutions now i'm going
09:35 - to talk about the layer 2 solutions so
09:37 - as a reminder layer 2 solutions are
09:39 - simply solutions built on top of
09:41 - ethereum so they rely on the ethereum
09:43 - network and they do not modify it and
09:45 - they aim to increase the scalability
09:47 - while again still keeping the
09:48 - decentralization and security aspect so
09:51 - that said let's talk about some
09:53 - different layer two solutions now the
09:55 - solutions that we have are things like
09:57 - state channels side chains and then
10:00 - roll-ups now i'm actually going to start
10:02 - with side chains so i probably should
10:03 - list it in the other order what a side
10:05 - chain is is essentially another
10:07 - blockchain network that has a different
10:09 - architecture than the ethereum network
10:12 - and makes it better for scalability so
10:14 - what a side chain actually does is it
10:16 - links to the ethereum main network it
10:18 - makes it very easy to transfer assets
10:20 - between the two different chains now
10:22 - typically side chains are going to be
10:23 - much smaller they're going to have less
10:25 - validators they may have smaller block
10:27 - sizes and this does actually decrease
10:30 - the security and the decentralization of
10:32 - the side chain but it drastically
10:34 - increases the scalability because now
10:37 - rather than me sending a transaction to
10:39 - ethereum i'm going to send it to a side
10:41 - chain and then the side chain can kind
10:42 - of link up with the ethereum main
10:44 - network and allow me to transfer the
10:46 - assets between the two networks very
10:48 - very quickly or very easily at minimum
10:51 - so an example of a side chain would be
10:52 - something like polygon i'll put up an
10:54 - image on the screen these are
10:56 - controversial and there's a lot of
10:58 - reasons why you may not want to use a
10:59 - side chain but again the basic reasoning
11:01 - here is rather than using the ethereum
11:03 - network we're going to use a completely
11:05 - entirely different blockchain network
11:07 - that's going to be somewhat linked to
11:08 - the ethereum main network which allows
11:10 - us to take the smart contracts running
11:12 - on the side chain and very easily port
11:14 - them over to the ethereum main network
11:16 - while still maintaining all of the data
11:18 - all of the assets and all of the
11:20 - information essentially that was posted
11:21 - to the sign chain network hopefully that
11:24 - makes a bit of sense but those are side
11:26 - chains
11:26 - so the next solution that i'm going to
11:28 - introduce to you is something known as
11:30 - state channels now i just want to
11:32 - emphasize before doing that again i'm
11:34 - bringing this to you at a very very high
11:36 - level there's a lot of details and
11:37 - nuance with all of these solutions and
11:40 - you really should do some research and
11:41 - look at these more before actually
11:43 - trying to implement them or use them for
11:45 - your decentralized applications so
11:47 - please keep that in mind this is a very
11:49 - very general introduction anyways state
11:52 - channels to explain the usefulness of
11:53 - state channels i want to introduce to
11:55 - you a problem of making a decentralized
11:57 - application so if we wanted to make a
12:00 - decentralized app we want this to be
12:01 - some type of game maybe a game like
12:03 - chess right well this game requires many
12:06 - state changes now we know when we make a
12:08 - decentralized application we're going to
12:10 - have a smart contract the smart contract
12:12 - handles the state of our application if
12:15 - we're talking about chess it would need
12:16 - to store the state of the board so if we
12:18 - want to play a game of chess on the
12:20 - ethereum network what we would have to
12:22 - do is send transactions to the smart
12:25 - contract to update the state after every
12:27 - single move was played now at least in
12:29 - the chess games that i play they're like
12:31 - five minutes long we're three minutes
12:33 - long and we make moves every few seconds
12:35 - right so i make a move my opponent makes
12:37 - a move and every time that would happen
12:39 - if we were running this on ethereum we
12:41 - would need to submit a transaction to
12:42 - the network however the next player
12:45 - can't make a move until that transaction
12:47 - is verified and the state has been
12:48 - updated in the smart contract and we
12:50 - know that that can take a really long
12:52 - time to happen so that makes it
12:54 - infeasible for us to play a game that
12:56 - has very rapid state changes hopefully
12:58 - that makes sense but you would be
12:59 - sitting there waiting 30 minutes an hour
13:01 - for the transaction to be finalized
13:03 - before the next player would be able to
13:05 - move and while that completely defeats
13:06 - the purpose of like a quick game of
13:08 - chess or something along those lines so
13:10 - this is where we introduce state
13:11 - channels so the idea here between state
13:13 - channels is that if we have a ton of
13:15 - micro transactions or many transactions
13:17 - that are going to be occurring in a
13:18 - short period of time rather than doing
13:20 - them on the blockchain we're going to
13:22 - take them off the blockchain and do them
13:24 - in a secure way that can later be
13:26 - verified by the blockchain so estate
13:29 - channel is essentially a communication
13:31 - channel a peer-to-peer messaging channel
13:33 - where me and someone else who are
13:34 - participating in for example some type
13:36 - of game are going to be sending signed
13:38 - messages to and from each other with the
13:41 - state of the game so if we're playing a
13:43 - game of chess i'm going to be sending a
13:45 - message that's signed by me to my
13:47 - opponent saying i made this move and
13:49 - then they're going to send me a message
13:50 - that signed said i made this move and
13:52 - we're both going to be verifying the
13:54 - state is correct at each point in time
13:56 - by signing these messages hopefully that
13:58 - makes a bit of sense now the way that
14:00 - this works is we're first going to send
14:02 - a transaction to a smart contract
14:04 - sitting on layer 1 to open up the state
14:07 - channel once the state channel has been
14:09 - opened we're going to do all of our
14:10 - transactions the micro quick ones off
14:12 - the blockchain they will happen almost
14:14 - instantly then at the end of the game
14:16 - we're going to send one transaction to
14:18 - the smart contract with the final state
14:21 - and we're going to say hey we finished
14:23 - the game and then the smart contract is
14:25 - essentially going to verify the state is
14:27 - correct and there's a lot of stuff that
14:29 - goes on to do that i won't really talk
14:30 - about how that works and if we were
14:32 - playing for say one ethereum so whoever
14:34 - wins the chess game gets one ethereum
14:36 - then that ethereum would be transferred
14:37 - and we would have had to kind of stake
14:38 - that at the beginning of the game so
14:40 - hopefully that makes a bit of sense but
14:42 - typically state channels allow for us to
14:44 - have very fast transactions they make it
14:46 - very cheap because we don't have to pay
14:48 - gas fees when we're doing this off the
14:49 - blockchain we just have that first and
14:51 - last transaction that require the gas
14:53 - fee to open the state channel and to
14:55 - close the state channel and typically
14:57 - they do allow for the same security and
14:59 - decentralization however you may have
15:01 - the security be slightly decreased
15:03 - depending on the way that you're
15:05 - verifying the states and what you're
15:07 - doing between the blockchain and the off
15:09 - chain or between layer one and layer two
15:12 - again i don't wanna get into this too
15:13 - much those are stage channels very
15:15 - useful when you have a ton of micro
15:17 - transactions that need to be performed
15:18 - very very quickly so now we are moving
15:20 - on to the final solution i have in this
15:23 - video which is rollups now before i get
15:25 - into those i do want to mention that
15:27 - cartesi actually implements a ton of
15:29 - layer 2 solutions and makes it really
15:31 - easy for developers like yourself to use
15:34 - these solutions without having a full
15:36 - understanding of how they work and
15:37 - what's going on behind the scenes
15:39 - cartesia is working on operating systems
15:41 - libraries
15:43 - modules packages frameworks all of the
15:45 - stuff you could imagine is going to make
15:47 - it easier for you as a developer to use
15:49 - these types of solutions that are really
15:51 - complicated on a lower level so make
15:53 - sure you check them out from the link in
15:54 - the description anyways let me talk
15:56 - about roll ups here and i will also
15:58 - mention that cartesi has a ton of
16:00 - articles that explain this stuff more in
16:02 - depth if you're interested again
16:03 - reference them from the link in the
16:04 - description so a rule up is essentially
16:07 - an idea that we're going to take all of
16:09 - the transaction execution so the
16:11 - computations associated with the
16:13 - transaction and perform those off the
16:15 - blockchain while posting transaction
16:18 - data to the blockchain on layer 1. so
16:20 - the basic concept behind rollups is that
16:22 - it's very expensive to perform
16:24 - computations on the blockchain it can
16:26 - also be very time consuming so rather
16:29 - than do them on the blockchain let's
16:31 - perform our transaction execution off of
16:33 - the blockchain and then post the
16:35 - transaction data to layer one and have a
16:38 - smart contract on layer one so on the
16:40 - blockchain that can validate that the
16:42 - execution that we did off the blockchain
16:44 - was indeed correct now i know that's
16:46 - confusing but essentially we're taking
16:48 - the time consuming operations and
16:50 - computations performing them off the
16:52 - blockchain and then posting all the data
16:54 - to the blockchain where we can then
16:56 - validate that it is correct and we can
16:58 - use the properties of the blockchain to
17:00 - store the data now another advantage of
17:02 - the rollups is that what they can do is
17:04 - they can bundle multiple transactions
17:06 - maybe hundreds or thousands of
17:08 - transactions into one smaller
17:10 - transaction and then post that to layer
17:12 - one so rather than having the user have
17:15 - to send a thousand transactions directly
17:17 - to a smart contract which costs a lot
17:19 - takes a lot of time we're going to send
17:21 - it to whatever is rolling up these
17:23 - transactions it's going to kind of
17:25 - bundle them all together and then send
17:27 - one transaction to the blockchain that
17:29 - contains all of the data that it needs
17:31 - or the state change that's going to be
17:32 - made so before i can go any further
17:34 - because i do want to give you some more
17:35 - detail here i will mention that there's
17:37 - some different types of roll-ups so we
17:39 - have optimistic roll-ups and pessimistic
17:41 - ropes now i'm going to start with
17:43 - optimistic roll-ups now i do want to add
17:45 - here that the blockchain community
17:47 - currently considers roll-ups to be one
17:49 - of the most promising solutions for
17:50 - scaling ethereum and the reason for that
17:52 - is that they allow you to scale the
17:54 - computations and throughput of the
17:56 - network without compromising on security
17:58 - and decentralization
18:00 - so using that in combination with
18:02 - sharding which allows you to scale the
18:04 - data on the network really gives you the
18:06 - best of both worlds and allows you to
18:08 - scale ethereum and all three of the
18:09 - areas that we talked about so sharding
18:11 - scales the data and the roll-ups allow
18:13 - us to scale the computations as well as
18:16 - the throughputs of the transactions per
18:17 - second so you're likely going to be
18:19 - hearing a lot more about roll-ups in the
18:20 - future and maybe even using them
18:22 - yourself and if you were to pay
18:23 - attention to any of the solutions in
18:25 - this video this would be the one that i
18:27 - recommend so when we talk about
18:28 - optimistic rollups what we're really
18:30 - referring to is that the smart contract
18:32 - that's sitting on layer one is assuming
18:34 - that any of the transactions sent to it
18:37 - are valid so any of the state changes
18:39 - that are made any of the transaction
18:40 - data we just assume that's valid and
18:42 - that it's not malicious now this allows
18:44 - for us to have very quick transactions
18:46 - and to perform faster computations off
18:49 - the blockchain because we don't have to
18:50 - prove that everything is correct however
18:52 - this does mean that someone could submit
18:54 - a malicious transaction now there is
18:57 - incentives put in place to make sure
18:58 - that people do not submit malicious
19:00 - transactions for example there may be
19:02 - something like staking ethereum so
19:04 - whenever people are dealing with rollups
19:06 - you may have to stake some ethereum that
19:07 - says hey i'm going to be a good actor
19:09 - i'm not going to submit any malicious
19:11 - transactions or state data and if you do
19:14 - that so if you are malicious your stake
19:16 - could get slashed that could be the
19:18 - incentive or de-incentive from
19:20 - performing poorly or having bad behavior
19:22 - on the network hopefully that makes a
19:24 - bit of sense but the idea here is that
19:26 - we're assuming everything is correct now
19:28 - if someone does do something that is not
19:30 - correct or is invalid or malicious or
19:32 - whatever anyone can submit something
19:34 - known as a fraud proof now this fraud
19:37 - proof essentially says i believe that
19:39 - this state is incorrect i believe that
19:41 - someone did something malicious go and
19:43 - verify that it's not or go and verify
19:45 - that they did indeed do something
19:47 - malicious so that's what's called it's a
19:49 - fraud proof this puts the smart contract
19:51 - into a specific mode where it's going to
19:53 - go and validate that all of the
19:55 - transactions and data that are sent is
19:57 - actually correct and if they are not
19:58 - correct it's going to punish whoever
20:00 - submitted the incorrect transaction
20:02 - hopefully that makes a bit of sense but
20:04 - that is optimistic roll-ups again just
20:06 - really think about the fact that an
20:07 - optimistic roll-up is assuming
20:09 - everything is correct and it's only
20:10 - doing a validation if someone submits a
20:13 - fraud proof all right moving on now to
20:15 - pessimistic roll-ups now pessimistic
20:17 - roll-ups are kind of the opposite of
20:19 - optimistic roles in a pessimistic rollup
20:22 - you cannot submit or update the state of
20:24 - a smart contract unless you submit
20:26 - something known as a validity proof now
20:29 - this proof is a specific cryptographic
20:31 - proof i'm not going to really talk about
20:33 - exactly how it works but essentially off
20:35 - the blockchain when you're performing
20:37 - all of your computations you also need
20:38 - to compute this proof and then this
20:40 - proof is sent to the smart contract
20:43 - and you can only submit or update the
20:44 - state story of the smart contract if you
20:47 - have this proof alongside it now the
20:48 - only real issue with these type of
20:50 - proofs though is that they can be
20:52 - inviable to compute for really complex
20:54 - transactions so these are time consuming
20:56 - and difficult for a computer to come up
20:58 - with these cryptographic proofs and so
21:00 - if you're doing anything that's too
21:01 - complex it can be inviable to come up
21:04 - with one of these proofs and in that
21:06 - situation you need to use an optimistic
21:08 - rollup now the reason you would use one
21:09 - of these proofs though is because this
21:11 - limits the amount of data that the smart
21:13 - contract needs to hold because all it
21:15 - needs to do is hold a state because it
21:17 - can only update the state if it has a
21:19 - valid proof i understand it's a little
21:21 - bit confusing but in the optimistic
21:23 - roll-up scenario it's holding all of the
21:25 - transaction data and it's only doing a
21:27 - verification when a fraud proof is sent
21:30 - so it is time consuming when you send
21:31 - the fraud proof but ideally you're not
21:33 - having that happen very often whereas in
21:36 - a pessimistic scenario here the smart
21:38 - contract is holding much less data it's
21:41 - just storing the state and it's only
21:42 - updating that state when you submit the
21:44 - proof this means it's really easy for
21:46 - the smart contract to validate that
21:48 - everything is correct however it takes
21:50 - more time off the blockchain to be able
21:53 - to submit these state changes because
21:55 - you need to perform this validity proof
21:57 - and sometimes this validity proof can be
21:59 - inviable to compute alright so that's
22:01 - pretty much all i can share with you
22:02 - related to roll up so getting into too
22:04 - much detail again i want to emphasize
22:07 - this at a very high level there's a ton
22:09 - of stuff that i skipped over and omitted
22:11 - in this video with that said i'm going
22:13 - to start wrapping it up here another
22:15 - massive thank you to cartesi for
22:16 - sponsoring this video and this series
22:18 - make sure you check them out from the
22:20 - link in the description they have all
22:21 - kinds of articles very smart people
22:23 - there that are implementing these types
22:25 - of layer two solutions and are trying to
22:27 - make it much easier for you and me to
22:29 - develop decentralized applications
22:31 - without the huge issues or limitations
22:34 - of ethereum that we looked at in some
22:35 - previous videos i hope you guys enjoyed
22:38 - this series if you did make sure you
22:39 - leave a like subscribe to the channel
22:41 - please leave a comment down below and
22:43 - let me know if you want to see more
22:44 - blockchain on this channel because i'm
22:46 - hoping to do some more series in the
22:48 - future and with that said i will see you
22:50 - in another youtube video
22:52 - [Music]
23:00 - you