00:00 - hey guys and welcome back to another
00:02 - YouTube video so in this video I'm
00:04 - actually starting a new series on
00:05 - classes and objects in Python now I'm
00:08 - gonna start off fairly simple and just
00:10 - explain to you kind of what is a class
00:11 - what is an object how can we create our
00:13 - own and in future videos I'm gonna get a
00:15 - lot more advanced and show you some
00:16 - really cool things that you can do with
00:18 - classes and objects to not only make
00:20 - your life a lot easier but are really
00:21 - cool in my opinion and I didn't even
00:24 - know you could do them until I was kind
00:25 - of searching around before making this
00:26 - video so make sure if you guys are
00:29 - interested in bringing your program and
00:30 - cut to the next level and stepping out
00:32 - of the basics of Python and moving into
00:33 - more of an intermediate to advanced
00:35 - topic that you guys watch through this
00:36 - series because you're gonna learn a lot
00:38 - and you're gonna have a fundamental
00:40 - understanding of Python that you never
00:42 - understood before if you can understand
00:44 - the topics I'm gonna talk about okay so
00:46 - let's start by talking about objects
00:48 - what is an object well in Python an
00:52 - object is pretty much anything and you
00:54 - can see on this my screen here I have
00:57 - two variables X equals 5 y equals string
01:00 - now to us without any understanding of
01:02 - objects and classes this just looks like
01:03 - X is equal to an integer that's 5 and Y
01:07 - is a string and that string value is
01:09 - string now I just want to show you
01:11 - quickly and you might have seen that you
01:12 - can do this before if I print out the
01:15 - type of X and what you call it we'll
01:18 - just do the same thing here with Y run
01:21 - our program
01:22 - you see we get class int and class
01:25 - string now this is pretty trivial you
01:27 - figured this was gonna happen but what
01:29 - does this class actually mean here well
01:32 - pretty much whenever you create a new
01:34 - object in Python store whenever you
01:36 - create a variable or something like that
01:38 - it automatically creates an instance of
01:41 - an object now if X the way that you can
01:43 - also read this is X is equal to an
01:46 - instance of the int class and its value
01:49 - is 5 whereas Y is equal to an instance
01:51 - of the STR class and its value is
01:54 - strength now these classes allow us to
01:57 - have built-in functionality in Python
01:59 - now you might take for granted the fact
02:00 - that we can do something like X plus 7
02:02 - right and obviously we know we're gonna
02:05 - get 12 when we do that if we do like X
02:07 - minus 6 or X / 4 but someone actually
02:11 - coded this functionality in
02:13 - Python and you just can't see it when
02:15 - you're coding here because it's kind of
02:17 - underneath and I'm gonna actually show
02:18 - you a way that you can look at this
02:20 - built-in code okay
02:23 - so just know that anytime you create a
02:25 - variable and any time you kind of use
02:27 - any functions like for example if you
02:29 - use I don't know say like H is equal to
02:33 - what's something we can do like int Y
02:36 - okay I know it's not gonna work but
02:37 - whenever you use functions like this
02:39 - someone already coded these functions
02:40 - for you and they're typically built into
02:42 - a class of a certain type when you do
02:45 - something like Y dot strip you just take
02:49 - for a take for granted the fact that you
02:51 - can use this dot strip method and this
02:53 - is called a method but someone actually
02:55 - built this in and the reason you can use
02:57 - this is because it's a method on the
02:59 - class of STR if I try to do something
03:02 - like X dot strip well clearly that's not
03:04 - going to work because X is not a string
03:07 - object so just understand that whenever
03:09 - you create anything in Python it is
03:11 - actually an object without you really
03:12 - knowing it or not okay so now I'm going
03:15 - to show you I'm just gonna run this in
03:17 - debug mode so I can print some stuff up
03:19 - to the screen okay so like a console and
03:22 - python calls okay so I'm using PI
03:24 - charmer this works perfectly fine with
03:26 - regular ideally in Python okay
03:28 - so if I type this help function and I
03:32 - pick a class I'm gonna pick int like
03:34 - this okay I type help on int you can see
03:37 - it prints me all this stuff now what
03:39 - does this actually mean well once we get
03:41 - to the top you can see it says class int
03:43 - of type object or inherit from object so
03:48 - pretty much whenever we create an
03:50 - integer and the way we create an integer
03:52 - and python is simply by just saying like
03:54 - x equals five x equals four hundred
03:56 - seventy whatever like that it
03:58 - automatically defaults this x is a type
04:01 - int and you can see here that actually
04:04 - tells us exactly how this class works
04:06 - and this is really useful if you don't
04:08 - know documentation you can just type
04:09 - help on something and it'll read out all
04:12 - the class and everything for you so
04:13 - converting numbers string to an integer
04:15 - return zero if no arguments are given
04:17 - that's what happens when you call the
04:19 - int function and when you give a base
04:21 - well then it tells you what it does
04:22 - there okay now it says methods defined
04:25 - here
04:26 - well these are actually all the methods
04:28 - that you can use on the class integer so
04:32 - if you have abs you have ad and bool
04:34 - sealed if mod equal to float floor floor
04:38 - tip and I'm gonna show you what all
04:39 - these actually mean and why they have
04:41 - the underscores on them later on okay so
04:44 - just wait for that you can see that
04:45 - there's a ton of different methods and a
04:47 - ton of functionality already built into
04:49 - this integer class size of string and
04:53 - you can just keep going two bytes and
04:55 - there's a ton and then class methods
04:57 - defined here we're going to talk about
04:58 - what those are later now I want to show
04:59 - you if I do the same thing on string so
05:02 - I say help on oops on STR like this then
05:07 - we get the same thing except for string
05:09 - and this one is going to be we call it a
05:11 - little bit longer because there's more
05:13 - things you can do with string but you
05:14 - can see we have class string and it
05:16 - inherits from object and we'll talk
05:18 - about all what all this means later just
05:20 - follow along for now create a new string
05:22 - object from a given object if encoding
05:25 - and so on okay and it goes down here add
05:27 - contains equal and you can go through
05:28 - all of the different methods that it has
05:30 - now obviously this is the same for
05:32 - boolean values and for what do you call
05:35 - it floats and all other data types in
05:37 - Python now if any of you've ever seen
05:40 - turtle before you know that if you
05:42 - create for example import turtle okay
05:45 - wow I can't type today and you create
05:48 - like Tim equals turtle dot turtle like
05:52 - this what you're actually doing is
05:54 - creating a new instance of a turtle
05:57 - object so in this turtle module there's
06:00 - a class named turtle and when you call
06:02 - this what's known as a constructor
06:04 - you're actually creating a new turtle
06:06 - object and you're just naming it Tim or
06:08 - storing it in the variable Tim okay so
06:11 - what else should we talk about with
06:12 - objects here yeah so let's talk about
06:15 - the difference between methods and what
06:17 - do you call it functions quickly so a
06:19 - function everyone here should know is
06:21 - created with the defined key okay we're
06:24 - like to find keyword so I say define
06:25 - func give it a value X and we'll simply
06:28 - return X plus one now we know to call
06:33 - this function what we can do is we can
06:34 - simply say like print and then func
06:39 - five and we know that that should give
06:41 - us a value of six right because it just
06:43 - simply adds one to what we're giving and
06:45 - this is a function there's no question
06:47 - about it okay
06:47 - now a class is actually what you call
06:50 - with the dot operator
06:52 - so this you're sorry not a class a
06:54 - method so this dot right here turtle the
06:57 - turtle is a method that creates a new
06:59 - turtle object and I'll show you what I
07:01 - mean here so if I do something like
07:03 - print Y dot upper well this upper right
07:09 - here is not a function it's actually
07:11 - known as a method and it only applies to
07:14 - the class STR so I'll just print this
07:16 - Coakley just show you we get string in
07:18 - all capitals okay if I tried to do
07:20 - something like X dot upper and I click
07:24 - the play button here well X has no
07:26 - method upper and you can see into object
07:29 - has no attribute upper okay and that's
07:31 - because well X is an object of type int
07:34 - and remember when we typed help on int
07:36 - well we didn't see any upper method
07:37 - there so we actually can't use that and
07:40 - that's why we can only use methods on
07:41 - their correct datatypes right so if you
07:44 - create a float and you do like I don't
07:47 - know F equals like five point five then
07:50 - obviously if we try to do F dot upper
07:52 - here this is gonna crash as well because
07:54 - well float object has no attribute upper
07:57 - right it doesn't have that class or that
08:00 - method sorry in it okay so what method
08:02 - is anything you're calling on an object
08:03 - itself right and a function is something
08:06 - that's gonna take an object and apply an
08:08 - operation to it right so you can see
08:10 - here that five is passed into the
08:13 - function we don't have to do like X dot
08:15 - function we just pass it in there and
08:18 - then it returns us a value now methods
08:21 - can return us values as well this one is
08:22 - returning us a value of all capital
08:24 - string it's just different how we
08:26 - actually call those things and they are
08:28 - very similar just the difference is the
08:31 - way that one of them you call on an
08:32 - object and one of them you have to just
08:34 - call and then pass an object through and
08:37 - sometimes these methods can take objects
08:39 - as well for example let's see if I do X
08:42 - dot or F dot replace I think that's the
08:46 - thing all right I'm gonna have to do y
08:47 - dot replace
08:49 - why doctor place like this okay and then
08:53 - I'm gonna pass it a I don't know what
08:55 - should we pass it let's pass it a s and
08:58 - we'll replace it with a blank string
09:00 - okay so we're passing a object of type
09:03 - string and we're passing another
09:04 - objective type string and that's what
09:06 - this method takes as well as we have to
09:09 - call it on the instance right so string
09:11 - so if I call this we get train and six
09:14 - because it's simply replaced s with
09:16 - quotations okay
09:18 - so I think I'm gonna cut the video here
09:20 - I hope you have a little bit of an
09:23 - understanding of what an object is
09:25 - because in the next video we're gonna
09:27 - create our own objects and our own
09:28 - classes and we're gonna talk about that
09:31 - it just was fundamental that you guys
09:32 - understood this before moving on to the
09:34 - next video okay so that's been it for
09:36 - this video if you guys liked please make
09:37 - sure you leave a like and subscribe and
09:39 - I will see you again in the next one
09:40 - [Music]