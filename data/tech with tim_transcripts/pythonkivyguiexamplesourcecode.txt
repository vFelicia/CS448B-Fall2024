00:00 - hey guys and welcome back trailer Kibby
00:02 - tutorial so in today's video I've
00:04 - actually developed a pretty like
00:06 - decent-sized GUI that has three
00:08 - different pages essentially what it is
00:10 - it's a login form but it actually saves
00:13 - your login information so you can create
00:15 - an account on one page you can log in on
00:16 - the other page and then once you're
00:18 - logged in you're brought to a main
00:19 - window which displays some information
00:21 - to you now your logins are saved so
00:24 - they're saved in a text file I know it's
00:25 - not the most secure way to save it but
00:27 - essentially that means that so you close
00:29 - the app and you rerun it if you'd
00:30 - already create an account your account
00:31 - still exists and your information is
00:33 - still saved so I just want to show you
00:36 - guys and the reason I did this is
00:37 - because a lot of you were asking me to
00:39 - create like a large-scale GUI
00:40 - so this is kind of something I did
00:42 - didn't take me very long maybe about
00:43 - half an hour 40 minutes and this uses
00:46 - all of the different things that I've
00:47 - showed you there's a few other small
00:49 - things that I've added that I didn't
00:51 - talk about but I'm gonna be releasing
00:52 - all this code on tech with Tim donut so
00:54 - you guys can have a look through here as
00:55 - a great sample application to kind of
00:57 - mess look through it's pretty clean in
00:59 - terms of the way I coded it I didn't
01:01 - comment anything but I'm sure you guys
01:03 - to be able to figure it out and I'm
01:03 - gonna run you through the code
01:04 - afterwards in case you want to know
01:06 - exactly how this works so let's just run
01:08 - the program and just kind of get a feel
01:10 - of exactly what this is so first of all
01:11 - it's fully resizable you can see
01:13 - obviously it's not ideal when you go
01:15 - full screen but if I I don't know pull
01:17 - it out a little bit then it resizes
01:19 - fairly well to the actual screen size so
01:21 - I'm just gonna leave it like this for
01:22 - now so it brings you to a login page and
01:25 - essentially you can log in or you can
01:27 - create an account so if we click create
01:28 - an account it transitions it's over we
01:30 - have a create account name email
01:31 - password if you already have an account
01:32 - you can log in and you can see how that
01:34 - works now if I try to log in obviously I
01:36 - haven't put anything in here you can see
01:38 - that this gives me an invalid form nice
01:39 - pop up window invalid username or
01:41 - password and just to be clear here I
01:43 - didn't try to go crazy on the cosmetics
01:45 - I could have changed some colors mess
01:46 - around with that but I want to get the
01:47 - functionality down first now what we're
01:50 - gonna do is I don't have an account
01:51 - created yet so let's create an account
01:53 - so the way I'm gonna do this I'm gonna
01:54 - say my name is Tim my email is Tim at
01:57 - gmail.com not my actual email but
02:00 - anyways password let's say 1 2 3 4 and
02:03 - let's click Submit ok so we submit so it
02:06 - brings us over to the login page so now
02:08 - we can log into our account so let's say
02:10 - email is tim at gmail.com and
02:13 - password let's just try 1 2 3 now if I
02:15 - try to login you can see we get invalid
02:17 - login invalid username a password so if
02:19 - I add that for there then it allows me
02:21 - to login and you can see that we come
02:23 - here to this page where it gives me my
02:25 - account name my email and the date that
02:27 - it was created on and the only thing I
02:29 - have here is this information but you
02:30 - can see what you'd be able to do with
02:32 - this and you guys can add more stuff to
02:34 - it again it didn't take me very long to
02:35 - create this now obviously I can log out
02:37 - it said I want someone to see my
02:38 - information so I log out brings me back
02:40 - to the login page which is now empty I
02:43 - can go back to create another account
02:44 - and what not so let's just say if I
02:46 - close this application and I run it
02:48 - again what I can do is I can now
02:50 - obviously I can try to type in that same
02:52 - account and it will let me login so Tim
02:55 - at gmail.com 1 2 3 4 log in and you can
02:58 - see that is indeed working now obviously
03:00 - if I tried to do a different cat like
03:02 - Tim and like 3 4 5 invalid username or
03:05 - password and there you are so that is
03:08 - essentially the GUI that I created I'm
03:10 - gonna walk you through how I did this
03:12 - very slowly kind of through the old code
03:15 - right now so essentially I have this
03:17 - users dot txt file which just saves all
03:20 - the users and their passwords and
03:23 - whatnot and you can see that it just
03:24 - separates things by semicolons pretty
03:26 - straightforward that just adds a new
03:27 - line for each user now that's kind of my
03:30 - data base per se so what I'm working
03:32 - with here is two main classes I have
03:34 - this database class which essentially is
03:36 - responsible for any operations involving
03:39 - this text file which means getting
03:40 - information and setting information and
03:42 - I do this in actually a very efficient
03:45 - way using something called a dictionary
03:46 - so what happens is when you initially
03:48 - run the program it loads up my database
03:50 - first I brings all the entries into
03:52 - what's known as a dictionary and then
03:54 - that dictionary stores user names as
03:57 - keys and all the values like password
03:59 - name and created on as values for that
04:02 - key so that way when we want to look up
04:04 - information it happens in oh of endtime
04:06 - or oh man well one time so like constant
04:09 - time as opposed to every time reading
04:12 - through this thing and you guys will see
04:14 - that when you look through the code and
04:15 - again this be up in my website tech with
04:17 - tip nonet
04:18 - okay so essentially let's go to actually
04:20 - the kV file for a second you can see I
04:22 - didn't go crazy on all the cosmetics but
04:25 - I have
04:26 - two or three main windows so I have
04:28 - create account I have login window and I
04:31 - have main window now these all inherit
04:33 - from the screen and then I have a screen
04:35 - manager that I'm using which is window
04:37 - manager in just a blank class and it's
04:39 - just responsible for moving the things
04:40 - you can see I got two functions here you
04:42 - guys should be familiar with this
04:43 - invalid form invalid login and these
04:46 - just pop up a pop-up window whenever um
04:48 - you know you do something wrong or
04:50 - whatnot
04:51 - what I'm doing here is I'm loading in my
04:53 - kv file with just like a loader file I'm
04:56 - setting up a new instance of database
04:58 - which we'll talk about in a second and
05:00 - then what I'm doing actually here is
05:01 - it's a bit different but this just so I
05:03 - can change screens from within my actual
05:06 - code without having to do it from the kv
05:10 - file which i'll talk about as well in a
05:12 - in a bit so when I do something like SM
05:14 - current this is the same as changing the
05:16 - current window within the KB file but
05:18 - I'm just changing it from code so that
05:20 - way I can check before I go to the next
05:21 - window and make sure that like they had
05:23 - an invalid login for example before
05:25 - moving to the main window where it had
05:27 - the information right okay so that's how
05:29 - that works essentially also what I do is
05:32 - I create a new instance of SM or a
05:35 - window manager equal to SM and that's
05:37 - what I'm returning it might build up and
05:39 - you guys if you read through this you
05:40 - should be able to understand it now
05:42 - let's just talk about our main classes
05:44 - let's talk about login window first so
05:46 - essentially a login window maybe we'll
05:49 - go to KB file okay so let's go KB file
05:51 - for login window you can see we give it
05:53 - a name and login just so we can
05:54 - reference that I has to object
05:56 - properties email and password so we can
05:58 - reference those values and make sure
06:00 - they're correct obviously float layout
06:02 - and inside the float layout we have an
06:03 - email text input email label text input
06:06 - password and then we're having two
06:09 - buttons and obviously one of those
06:10 - buttons says login and one of those
06:12 - buttons says don't have an account
06:14 - create one and I kind of just
06:15 - dynamically placed them again you guys
06:17 - should know how to do all this to change
06:18 - the transitions I talked about this
06:20 - again we do just equals up and for both
06:22 - these buttons all I'm doing is simply
06:24 - calling a function that's stored or a
06:25 - method that's stored in the class that
06:27 - they belong to you yes let's go to main
06:29 - window quickly
06:30 - um so main window three properties and
06:32 - just stands for name I just couldn't
06:33 - name it name because that's a property
06:35 - of main window already I can float
06:37 - layout we just have the labels and then
06:39 - we have
06:40 - the button which is gonna call but it's
06:42 - a duo no if you use logout it just
06:44 - automatically brings you back so I just
06:46 - change the current from here okay so I
06:48 - think we have what is it two more
06:50 - classes to talk about yeah so or one
06:52 - more create account window so this one's
06:54 - a bit larger you can see we have these
06:56 - different properties again float layouts
06:58 - and again I'm not gonna go through all
06:59 - this because you guys know how that
07:00 - works essentially but you can see that
07:02 - when I call the button I'm calling route
07:04 - login and that's gonna trigger a
07:06 - function or a method sorry from within
07:08 - this class and it's gonna check things
07:09 - before possibly moving us to the next
07:11 - window okay so that's it for the kV file
07:14 - so let's talk about this login class so
07:16 - I have this login button this create
07:18 - button and this reset now what reset is
07:20 - going to do is it's gonna reset both of
07:22 - email and password text fields and
07:24 - that's again one of the reasons I have
07:25 - them as an object property so I can
07:27 - reset them so obviously before we move
07:29 - to another page we'd like to reset that
07:31 - form so when we go back to it it's not
07:33 - it's not filled in stuff right so now
07:36 - login button what this is gonna do is
07:38 - it's gonna call a database method called
07:40 - validate and essentially what that does
07:42 - is it's gonna just validate the email
07:44 - against the password and I'll show you
07:47 - how that works in a second and then we
07:48 - have main window current equals self
07:51 - that email dot text so say that this is
07:53 - true this validate validation is correct
07:55 - the password is correct then that means
07:56 - we're going to what do you call it go to
07:58 - the next window
08:00 - so actually sorry that's not what that
08:02 - does but this is what this does go to
08:04 - the next window this what it's doing is
08:05 - actually setting the current user with
08:07 - inside this main window screen so that
08:10 - that way we can actually display the
08:12 - information for that current user by
08:14 - getting it from the database which is DB
08:16 - get user logout again all this does is
08:19 - just move you to the login screen I
08:21 - don't think I even need that anymore to
08:23 - be honest but anyways okay so back in
08:25 - the login sorry I got distracted create
08:27 - button alice is doing is obviously
08:28 - resetting the form and then moving us to
08:30 - the create page it doesn't we don't have
08:32 - to validate anything before we move to
08:33 - that page right sounds long in window
08:36 - pretty straightforward um this one
08:38 - create account window a bit more
08:39 - advanced but nothing crazy all this is
08:40 - doing essentially in this submit method
08:42 - here is what's called when you press
08:44 - that submit button is it just checking
08:46 - to make sure all of our forms are
08:48 - balanced so they're not empty and that
08:49 - our email is like somewhat validated
08:51 - just that it hasn't
08:52 - sign and it has a period like at least
08:54 - one because you need that calm or
08:56 - whatever right we're also just checking
08:58 - to make sure the password is not equal
08:59 - to blank if you want to do some more
09:00 - checks on the password for example make
09:02 - sure that it didn't have invalid
09:04 - character I don't know whatever you want
09:05 - to do make sure it's length five has a
09:07 - capital letter you can do that in here
09:08 - as well and essentially if all this is
09:10 - correct I'm gonna add this user to the
09:12 - database I'm going to reset the field
09:14 - and I'm gonna change my window to the
09:16 - login page where then we can handle the
09:18 - logging in now if for some reason any of
09:21 - these are not correct I can do invalid
09:23 - form now the reason I have these twice
09:24 - and so just adding this statement in
09:26 - this if up here is in case you wanted to
09:28 - do some more checks on pass or didn't
09:29 - call a different pop-up window like be
09:32 - like you need to type six characters for
09:34 - your password instead of just saying
09:35 - it's an invalid form you know what I
09:36 - mean
09:37 - okay so login what this is doing again
09:39 - we're resetting all the things which are
09:41 - object properties up here and then we
09:44 - are simply changing the page to the
09:45 - login page and I think that's almost it
09:48 - now let's go to database talk about that
09:49 - and that should be almost done so data
09:53 - pace in board date times because we want
09:55 - the date when we're saving it like this
09:56 - okay but essentially database all this
09:59 - is doing is responsible for loading up
10:01 - this users text file and saving things
10:03 - to it so we start off with the file name
10:05 - this is the initializer so we need this
10:08 - just to know what file we're gonna be
10:09 - working with because this can work with
10:10 - multiple databases we're gonna do load
10:13 - this is the first method obviously load
10:15 - what this is gonna do is load all of our
10:16 - data into a dictionary which is gonna be
10:18 - stored in self-taught users up here and
10:20 - it's gonna make it really quick to be
10:22 - able to look through information so I
10:24 - did that for an efficiency standpoint so
10:26 - we're gonna go forward line and file
10:28 - just you know get email password name
10:30 - just splitting the line up by semicolon
10:31 - and just add a key in our dictionary
10:33 - which is the email and it's gonna have
10:34 - that information like I was talking
10:36 - about and make sure we close that file
10:38 - once we opened up and just so we're
10:40 - making sure we save everything and yeah
10:42 - next method get user really easy we're
10:45 - just gonna first check to make sure that
10:46 - email key is actually in self-taught
10:48 - users if that key exists will return
10:50 - that otherwise we're gonna return
10:51 - negative one representing the fact that
10:52 - we did not find that key okay adding
10:55 - users again pretty straightforward all
10:57 - we're gonna do is just first of all
10:59 - check to make sure this email and I'm
11:01 - just stripping it to get rid of any
11:02 - trailing or leading white spaces is not
11:05 - inside
11:05 - the self-taught users and self-taught
11:07 - users obviously have already been loaded
11:09 - up by the time we're calling add user so
11:12 - we'll be able to check to make sure
11:13 - we're not creating a duplicate account
11:14 - now if that's if this information is
11:17 - correct then what we're gonna do is
11:18 - going to do we're gonna add a key to our
11:21 - what do you call it dictionary which is
11:22 - gonna be that email and we're gonna have
11:24 - the password name and database dot get
11:27 - date I'm sorry that's a method we'll
11:28 - talk about in a second we're gonna save
11:30 - which I'll talk about again later return
11:33 - one representing that this was
11:34 - successful and then otherwise we'll just
11:36 - say email already exists and we'll just
11:37 - do negative one okay now validate so
11:40 - what validate is gonna do is really
11:42 - straightforward we're just gonna get the
11:43 - current user email we're gonna make sure
11:47 - first of all the current user it exists
11:49 - so when we get the user we don't get a
11:51 - value of negative one meaning it exists
11:52 - that means we can try to now grab the
11:55 - user's email so it was a self-taught
11:57 - users the key email zero which sorry is
12:00 - actually in represent the password I'm
12:01 - gonna check to make sure it's equal to
12:02 - the password it was passed if it is
12:04 - we'll return that will turn true
12:06 - otherwise it's gonna return false
12:07 - strikes we're just returning this
12:09 - condition ok safe pretty straightforward
12:11 - all we're doing is just based on every
12:13 - database entry so everything in our
12:15 - self-taught users dictionary we're gonna
12:17 - write that into our text file
12:18 - accordingly so that it looks like nice
12:20 - and neat like this that's what this line
12:22 - does here and then get date very
12:25 - straightforward we're just getting the
12:26 - current date now that essentially is
12:28 - this GU I'll open it up once again just
12:31 - to give you reminders took me like 3040
12:33 - minutes to make so imagine what you guys
12:35 - can make if you spent like a few days
12:36 - doing this or maybe a week in create
12:38 - some pretty cool graphical user
12:39 - interfaces and it's really easy and nice
12:41 - and hopefully in the next videos I'm
12:44 - gonna go through how we can package this
12:45 - up for Android and iOS now no promises
12:48 - because I'm still trying to mess with it
12:49 - myself I think I figured out iOS but I
12:51 - don't know how to do Android right now
12:52 - so once I figure that out I'll release
12:54 - that to you guys but yeah in the
12:56 - meantime make sure you guys stay tuned
12:57 - make sure you guys so subscribe to the
12:59 - channel for more content and if you like
13:00 - this video in this tutorial series
13:02 - please make sure to let me know by
13:03 - leaving a like can give me some feedback
13:04 - in the comment
13:06 - [Music]