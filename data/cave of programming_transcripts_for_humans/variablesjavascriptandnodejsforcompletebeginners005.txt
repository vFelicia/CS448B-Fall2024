With timestamps:

00:00 - hello this is John from cave of
00:03 - programming calm in this video we're
00:05 - going to take a look at variables in
00:08 - JavaScript so I'm going to start by
00:10 - creating another file here let's go to
00:13 - the file menu and new file or I can just
00:17 - use this icon here in there in the
00:23 - Explorer in visual studio code so either
00:27 - way is good let's take a look so I
00:31 - create a new file I'm gonna start giving
00:34 - my files names that have section numbers
00:36 - and file numbers in just to help me
00:38 - organize this course and so that you can
00:40 - find my code more easily on github but
00:44 - you don't need to do that of course so
00:47 - you could call this variables J s but
00:50 - I'm gonna give it a number and call it o
00:53 - 105 o space variables da Jas alright now
01:02 - let's let's write out let's basically
01:05 - recreate the hello world program that we
01:07 - had last time so I'm going to write
01:09 - console dot log and single quotes and
01:15 - hello world and at the end we should
01:20 - really put a semicolon it will work
01:23 - without that but I you know semicolon is
01:26 - kind of used to define the end of a
01:29 - statement a complete sort of bit of
01:31 - little bit of code in JavaScript and I
01:35 - think it's good practice to put it in
01:37 - generally okay so now we can go to the
01:41 - terminal
01:42 - zoom out a bit here and if I do LS in
01:47 - this directory I can see my new file and
01:50 - I can run it with node and filename so
01:55 - I've used a tab key to auto-complete the
01:57 - file name here and because I've got a
01:59 - space in mine in order to stop the the
02:04 - bash shell interpreting this is to two
02:08 - file names one called
02:09 - a 105 oh and the other variables but yes
02:13 - Bosch has helped the Bosch autocomplete
02:15 - helpfully put a backslash in front of
02:18 - the space and that stops it being
02:22 - treated as a separator character if you
02:25 - just called your file variables dot J s
02:27 - and it's not got spaces in the file name
02:29 - though you won't have to worry about any
02:31 - of that all right so let's run it and
02:33 - check that it works it says hello world
02:36 - okay now we could we could use what we
02:43 - call a variable to refer to this hello
02:47 - world message and you'll see as we go
02:50 - along through the course that the
02:51 - variables are a key part of computer
02:55 - programming they're absolutely a
02:58 - fundamental building block that we use
03:00 - here so let's write this I'm going to
03:02 - make up a name I'm gonna create a
03:06 - variable called message although a case
03:09 - and I'm going to set that equal to in
03:13 - single quotes hello world and I'll put a
03:16 - semicolon at the end and then we're
03:20 - going to output this variable border
03:24 - value of this variable in console dot
03:26 - log I'm going to write console dot log
03:28 - and in the round bracket so I'm going to
03:30 - put message so what have we actually
03:33 - done here well first of all let's just
03:34 - see it running if I run it it doesn't
03:38 - seem to do anything different to before
03:40 - it just says hello world so this is what
03:46 - we call a string in computer programming
03:47 - this bit of text and message it's like a
03:52 - label that I've devised so if you think
03:55 - about it okay this this text here when
03:58 - the program runs it must be somewhere in
04:00 - the computer's memory and it's as if we
04:03 - put a label on that bit of memory called
04:06 - message so that we can use the label
04:08 - message to refer to this piece of text
04:12 - later on and then we say console dot log
04:14 - message we can also do this with numbers
04:19 - let's go down and create another
04:23 - variable let's call this
04:26 - I don't know let's call it days and set
04:31 - it equal to seven just like the number
04:33 - of days in a week so days equals seven
04:36 - semicolon and then if I write console
04:39 - dot log days like this and then let's go
04:46 - back and to the terminal and run this
04:53 - and it says hello world and then it says
04:55 - seven so we've output seven so some
05:00 - people that get confused because at this
05:02 - point it looks as though we're saying
05:03 - days equals seven and what does that
05:07 - even mean that's not really what we're
05:10 - doing this equals here is what we call
05:13 - the assignment operator so these are
05:18 - variables message and days are variables
05:20 - and we're using equals to assign a value
05:23 - to them you can think of it as though
05:26 - we're storing a value in them although I
05:29 - think in JavaScript arguably it's more
05:32 - accurate really to say that these
05:36 - variables are like labels that we used
05:39 - to refer to these these values these
05:42 - literal values we call them but
05:46 - basically where we say here that we we
05:50 - are assigning values to variables so
05:53 - I've assigned the value hello world to
05:56 - the variable message and I've assigned
05:58 - the value seven to the variable days and
06:00 - then we can output those try those for
06:02 - yourself and we'll discuss this more and
06:04 - look at some refinements to this in the
06:07 - next video

Cleaned transcript:

hello this is John from cave of programming calm in this video we're going to take a look at variables in JavaScript so I'm going to start by creating another file here let's go to the file menu and new file or I can just use this icon here in there in the Explorer in visual studio code so either way is good let's take a look so I create a new file I'm gonna start giving my files names that have section numbers and file numbers in just to help me organize this course and so that you can find my code more easily on github but you don't need to do that of course so you could call this variables J s but I'm gonna give it a number and call it o 105 o space variables da Jas alright now let's let's write out let's basically recreate the hello world program that we had last time so I'm going to write console dot log and single quotes and hello world and at the end we should really put a semicolon it will work without that but I you know semicolon is kind of used to define the end of a statement a complete sort of bit of little bit of code in JavaScript and I think it's good practice to put it in generally okay so now we can go to the terminal zoom out a bit here and if I do LS in this directory I can see my new file and I can run it with node and filename so I've used a tab key to autocomplete the file name here and because I've got a space in mine in order to stop the the bash shell interpreting this is to two file names one called a 105 oh and the other variables but yes Bosch has helped the Bosch autocomplete helpfully put a backslash in front of the space and that stops it being treated as a separator character if you just called your file variables dot J s and it's not got spaces in the file name though you won't have to worry about any of that all right so let's run it and check that it works it says hello world okay now we could we could use what we call a variable to refer to this hello world message and you'll see as we go along through the course that the variables are a key part of computer programming they're absolutely a fundamental building block that we use here so let's write this I'm going to make up a name I'm gonna create a variable called message although a case and I'm going to set that equal to in single quotes hello world and I'll put a semicolon at the end and then we're going to output this variable border value of this variable in console dot log I'm going to write console dot log and in the round bracket so I'm going to put message so what have we actually done here well first of all let's just see it running if I run it it doesn't seem to do anything different to before it just says hello world so this is what we call a string in computer programming this bit of text and message it's like a label that I've devised so if you think about it okay this this text here when the program runs it must be somewhere in the computer's memory and it's as if we put a label on that bit of memory called message so that we can use the label message to refer to this piece of text later on and then we say console dot log message we can also do this with numbers let's go down and create another variable let's call this I don't know let's call it days and set it equal to seven just like the number of days in a week so days equals seven semicolon and then if I write console dot log days like this and then let's go back and to the terminal and run this and it says hello world and then it says seven so we've output seven so some people that get confused because at this point it looks as though we're saying days equals seven and what does that even mean that's not really what we're doing this equals here is what we call the assignment operator so these are variables message and days are variables and we're using equals to assign a value to them you can think of it as though we're storing a value in them although I think in JavaScript arguably it's more accurate really to say that these variables are like labels that we used to refer to these these values these literal values we call them but basically where we say here that we we are assigning values to variables so I've assigned the value hello world to the variable message and I've assigned the value seven to the variable days and then we can output those try those for yourself and we'll discuss this more and look at some refinements to this in the next video
