With timestamps:

00:00 - hello in this video I'm going to write a
00:03 - little program in JavaScript to convert
00:06 - temperatures in Celsius to temperatures
00:09 - in Fahrenheit so if I go to Google and I
00:12 - write convert Celsius to Fahrenheit and
00:21 - it will give me a formula so I take the
00:24 - value in Celsius I multiply by 9 divided
00:27 - by 5 and I add 32 right so let's try
00:32 - that and so when I grew up I was
00:38 - familiar with Fahrenheit and probably
00:41 - Celsius as well because the UK was kind
00:45 - of switching over from one to the other
00:46 - but now I'm much more familiar with
00:49 - Celsius and in the USA I believes
00:53 - Fahrenheit is much more common so these
00:55 - are both commonly used at least
00:58 - Fahrenheit is used in the US and
01:00 - probably some other places all right so
01:02 - let's create a new file here so I go to
01:05 - the file explorer and create a new file
01:07 - let's call it converts temp or yeah I'll
01:13 - do convert M touch yes maybe I'll put an
01:18 - underscore in there all right so let's
01:22 - start off with you strict because this
01:24 - ensures that I have to declare variables
01:27 - before using them and that's a good
01:30 - thing to have it reduces errors and we
01:33 - need to get the value in Celsius I'll
01:35 - get it from a command line so I'll
01:37 - assume that the user has typed node
01:39 - convert MJS and then a temperature in
01:43 - Celsius that they want to convert at the
01:45 - moment with the syntax we've seen which
01:47 - is very limited we have no way of
01:49 - checking if they've correctly typed
01:51 - something we can't even tell them what
01:54 - to type yet we can't output a message
01:57 - before the script runs it's not possible
02:00 - but we're going to improve on this a lot
02:03 - later on so we'll just do what we can
02:05 - for a moment with this syntax we've got
02:06 - so we've seen that we can get
02:11 - most right let Celsius we can get
02:16 - arguments from the command line via
02:18 - process tog v2 so remember the first if
02:26 - we write process durog v1 that would
02:28 - give us the name and location of the
02:31 - node Jas program program than the
02:35 - program called node process - I agree
02:38 - one is the name and location of our
02:40 - script process that arc v2 is the first
02:44 - thing the user types if anything after
02:47 - the name of the program and process that
02:49 - our v3 will be the next thing they type
02:51 - after that and so on on the command line
02:53 - when they run the program so let's get
02:55 - let's assume we can get Celsius like
02:57 - this and we can just output it with
03:00 - console dot log just to check so if I do
03:08 - just clear if I clear this and write
03:10 - node convert temps is if I don't type
03:14 - anything afterwards that's going to come
03:16 - out as a value called undefined but if I
03:20 - type something like 21 which I would
03:23 - consider room temperature then it is
03:28 - echoing back the value that I typed well
03:30 - I just did something here okay
03:32 - there we go so that seems to be working
03:36 - how will we convert convert it to
03:39 - Fahrenheit so let's say let fer and
03:43 - height equal we need to take the value
03:46 - in Celsius multiply it by 5 divided by 9
03:51 - and we need to add 32 so we should be
03:54 - able to do it like this let's try let's
03:56 - write console dot log and that's right
04:03 - let's write out the value in Celsius
04:06 - comma in Celsius is comma Fahrenheit
04:18 - Fahrenheit so if you can see what this
04:24 - is doing I'm trying to write something
04:26 - like for example 21 in Celsius is
04:33 - whatever it is 65 in Far Fahrenheit I'm
04:45 - trying to make my output look like this
04:47 - I remember we can output multiple values
04:49 - using console dot log doesn't matter if
04:51 - they're variables or their literal
04:54 - strings like this bits of text which we
04:57 - call strings but I've literally written
04:58 - exactly there we can output them with
05:02 - console dot log and we can output
05:04 - multiple values by separating them here
05:07 - by commas let's try this and see what
05:09 - that looks like so I just clear my
05:12 - console and use the up arrow here to
05:14 - bring Brett bring back this and if I run
05:16 - it 21 in Celsius is 43 in Fahrenheit I
05:20 - made a mistake here
05:21 - I should have 9 divided by 5 instead of
05:27 - 5 divided by 9 let's try it
05:29 - there we go sixty nine point eight
05:31 - Fahrenheit and that looks right to me we
05:35 - could check on Google of course let's
05:37 - say 21 Celsius to Fahrenheit 69 point
05:41 - eight so that seems to be correct let's
05:44 - just correct this it's about 70
05:47 - Fahrenheit basically okay now this
05:52 - expression here okay it worked but it's
05:56 - it looks a bit ambiguous there's a thing
06:00 - called operator precedence that
06:02 - determines which operators run first for
06:07 - example as a question here do we do
06:11 - Celsius times nine divided by five and
06:16 - then add 32 or do we do Celsius times
06:20 - nine divided by five at 32 or do we even
06:25 - do Celsius times nine and then divide by
06:29 - five plus thirty
06:31 - - you know it could be seen as ambiguous
06:34 - in fact in this case operator precedence
06:37 - just takes care of this and it works as
06:39 - you might expect but in general with
06:42 - expressions like this if you have any
06:44 - fear that operators might run in a way
06:48 - that you don't want you can use round
06:50 - brackets to make it clearer what's going
06:51 - on so in this case I would consider
06:56 - putting round brackets here around this
06:59 - bit just to make it a bit clearer then
07:02 - it makes it clearer that we're doing
07:03 - Celsius times nine divided by five it
07:06 - doesn't matter whether we do Celsius
07:08 - times nine ten divided by five or we do
07:11 - Celsius times nine divided by five it's
07:14 - the same anyway and then add 32 after
07:17 - all that let's check that it still works
07:22 - there we go yeah so you can put round
07:27 - brackets into maybes clearer if you are
07:30 - new to programming then you need to
07:33 - practice this stuff a lot you know
07:36 - practice it quite a bit I would say so
07:39 - one good thing to do is just you know
07:42 - try to convert one thing to another you
07:44 - know try to convert for example
07:48 - measurements in feet and inches to
07:53 - measurements in meters whatever you like
07:55 - or another good one is you know working
07:58 - with dates like you can do stuff like
07:59 - try to convert a certain number of days
08:03 - to a period specified in in like months
08:09 - and years or something like that lots of
08:13 - things like that you can do use your
08:16 - imagination but you want to practice
08:18 - using variables using arithmetic and
08:23 - outputting stuff with console dot log
08:25 - practice all this stuff thoroughly spend
08:28 - some time on it if you need to
08:29 - programming if you if you've done
08:31 - programming before this is old stuff to
08:33 - you you probably just are watching this
08:35 - to know where JavaScript is different so
08:39 - I'm going to try to go not too slowly
08:42 - I'm not going to dwell on every operator
08:44 - because I'm aware that many people will
08:47 - have some prior programming experience
08:48 - but I want to keep it simple enough that
08:51 - you can follow this course with no
08:53 - programming experience at all but if you
08:55 - haven't got no programming experience at
08:57 - this point you want to play with these
08:59 - ideas a bit try to try to write
09:01 - different little programs that convert
09:03 - one thing to another if you don't always
09:05 - succeed that's okay but the important
09:07 - thing is to try because you just need to
09:10 - become more familiar with using
09:12 - variables to see what you can do and
09:14 - what you can't do and we're going to be
09:16 - looking at more obviously more examples
09:18 - as we go through the course okay so
09:20 - until next time happy coding

Cleaned transcript:

hello in this video I'm going to write a little program in JavaScript to convert temperatures in Celsius to temperatures in Fahrenheit so if I go to Google and I write convert Celsius to Fahrenheit and it will give me a formula so I take the value in Celsius I multiply by 9 divided by 5 and I add 32 right so let's try that and so when I grew up I was familiar with Fahrenheit and probably Celsius as well because the UK was kind of switching over from one to the other but now I'm much more familiar with Celsius and in the USA I believes Fahrenheit is much more common so these are both commonly used at least Fahrenheit is used in the US and probably some other places all right so let's create a new file here so I go to the file explorer and create a new file let's call it converts temp or yeah I'll do convert M touch yes maybe I'll put an underscore in there all right so let's start off with you strict because this ensures that I have to declare variables before using them and that's a good thing to have it reduces errors and we need to get the value in Celsius I'll get it from a command line so I'll assume that the user has typed node convert MJS and then a temperature in Celsius that they want to convert at the moment with the syntax we've seen which is very limited we have no way of checking if they've correctly typed something we can't even tell them what to type yet we can't output a message before the script runs it's not possible but we're going to improve on this a lot later on so we'll just do what we can for a moment with this syntax we've got so we've seen that we can get most right let Celsius we can get arguments from the command line via process tog v2 so remember the first if we write process durog v1 that would give us the name and location of the node Jas program program than the program called node process I agree one is the name and location of our script process that arc v2 is the first thing the user types if anything after the name of the program and process that our v3 will be the next thing they type after that and so on on the command line when they run the program so let's get let's assume we can get Celsius like this and we can just output it with console dot log just to check so if I do just clear if I clear this and write node convert temps is if I don't type anything afterwards that's going to come out as a value called undefined but if I type something like 21 which I would consider room temperature then it is echoing back the value that I typed well I just did something here okay there we go so that seems to be working how will we convert convert it to Fahrenheit so let's say let fer and height equal we need to take the value in Celsius multiply it by 5 divided by 9 and we need to add 32 so we should be able to do it like this let's try let's write console dot log and that's right let's write out the value in Celsius comma in Celsius is comma Fahrenheit Fahrenheit so if you can see what this is doing I'm trying to write something like for example 21 in Celsius is whatever it is 65 in Far Fahrenheit I'm trying to make my output look like this I remember we can output multiple values using console dot log doesn't matter if they're variables or their literal strings like this bits of text which we call strings but I've literally written exactly there we can output them with console dot log and we can output multiple values by separating them here by commas let's try this and see what that looks like so I just clear my console and use the up arrow here to bring Brett bring back this and if I run it 21 in Celsius is 43 in Fahrenheit I made a mistake here I should have 9 divided by 5 instead of 5 divided by 9 let's try it there we go sixty nine point eight Fahrenheit and that looks right to me we could check on Google of course let's say 21 Celsius to Fahrenheit 69 point eight so that seems to be correct let's just correct this it's about 70 Fahrenheit basically okay now this expression here okay it worked but it's it looks a bit ambiguous there's a thing called operator precedence that determines which operators run first for example as a question here do we do Celsius times nine divided by five and then add 32 or do we do Celsius times nine divided by five at 32 or do we even do Celsius times nine and then divide by five plus thirty you know it could be seen as ambiguous in fact in this case operator precedence just takes care of this and it works as you might expect but in general with expressions like this if you have any fear that operators might run in a way that you don't want you can use round brackets to make it clearer what's going on so in this case I would consider putting round brackets here around this bit just to make it a bit clearer then it makes it clearer that we're doing Celsius times nine divided by five it doesn't matter whether we do Celsius times nine ten divided by five or we do Celsius times nine divided by five it's the same anyway and then add 32 after all that let's check that it still works there we go yeah so you can put round brackets into maybes clearer if you are new to programming then you need to practice this stuff a lot you know practice it quite a bit I would say so one good thing to do is just you know try to convert one thing to another you know try to convert for example measurements in feet and inches to measurements in meters whatever you like or another good one is you know working with dates like you can do stuff like try to convert a certain number of days to a period specified in in like months and years or something like that lots of things like that you can do use your imagination but you want to practice using variables using arithmetic and outputting stuff with console dot log practice all this stuff thoroughly spend some time on it if you need to programming if you if you've done programming before this is old stuff to you you probably just are watching this to know where JavaScript is different so I'm going to try to go not too slowly I'm not going to dwell on every operator because I'm aware that many people will have some prior programming experience but I want to keep it simple enough that you can follow this course with no programming experience at all but if you haven't got no programming experience at this point you want to play with these ideas a bit try to try to write different little programs that convert one thing to another if you don't always succeed that's okay but the important thing is to try because you just need to become more familiar with using variables to see what you can do and what you can't do and we're going to be looking at more obviously more examples as we go through the course okay so until next time happy coding
