With timestamps:

00:00 - in this video we're going to look at
00:01 - some more comparison operators in Python
00:06 - we're going to look at these if you
00:08 - start a line in Python with a hash sign
00:12 - like
00:13 - this or if you put that anywhere on a
00:16 - line in Python whatever comes after it
00:19 - on that line is a comment so you can use
00:22 - this hash symbol to add comments to your
00:25 - code some programs go overboard with
00:27 - this but it's probably much more common
00:30 - that programmers don't put enough
00:31 - comments into their
00:34 - code as a beginner you might feel like
00:36 - putting a lot of comments into your code
00:38 - or not it's up to you I would suggest in
00:41 - general that comments should be added to
00:43 - code in cases where you're writing a
00:45 - block of code and it's really not
00:47 - obvious what it does so you maybe want
00:50 - to make a note to say what that code is
00:54 - supposed to be doing but of course you
00:56 - have to keep your comments up to date if
00:58 - you change the code or otherwise they'll
01:00 - get misleading so let's take a look at
01:02 - these operators we've already seen the
01:04 - equality test operator equals equals we
01:08 - could write for example print let's try
01:12 - cat equals equals cat
01:15 - now on the face of it this looks useless
01:18 - but of course one or both of these
01:20 - strings would normally be a variable so
01:24 - it wouldn't be obvious what the result
01:26 - is going to be if I run this since
01:29 - they're both string literals of course
01:31 - we get true if I change one of them to
01:35 - something else then we're going to get
01:37 - false pretty
01:39 - straightforward and we've seen also that
01:41 - you can use this operator with
01:46 - integers so if I write here
01:49 - 5al equal 6 what's that going to
01:54 - return well this is going to evaluate to
01:59 - false and so we print false it's not a
02:02 - good idea to use equals equals with
02:04 - floating Point values because floating
02:07 - Point values are not stored precisely in
02:10 - the computer's memory so you can get
02:12 - misleading results from doing that with
02:14 - floating Point values the question you
02:17 - would want to be asking instead
02:19 - is is this floating point value close to
02:23 - this other floating point value rather
02:26 - than asking if they're equal which is
02:29 - not necessary as meaningful as you might
02:31 - think under the circumstances
02:34 - here but with integers equals equals
02:37 - works really well we've also got less
02:41 - than so we could write print five less
02:45 - than
02:47 - six well that should be true right so it
02:50 - says true and we've got greater
02:54 - than so 5 greater than 6 of course
02:58 - that's false now useful trick for
03:01 - remembering the difference between
03:03 - greater than and less than if you're not
03:05 - used to them they are found in
03:07 - mathematics as
03:09 - well is let's just zoom in a
03:13 - bit if you look at these symbols they
03:16 - both have a sort of big end to them and
03:18 - a small end right there's a big end
03:21 - there a small
03:22 - end if the smaller value is at the
03:24 - smaller end and the bigger value is at
03:27 - the bigger end then the whole thing
03:28 - evaluates to true
03:30 - if it's the other way around so in this
03:32 - case you've got the smaller value at the
03:34 - big end and a bigger value at the small
03:36 - end then these Expressions evaluate to
03:39 - false and you can see that works we've
03:41 - got true and false here
03:44 - it's the right way round so to speak and
03:48 - here it's the wrong way round
03:50 - surprisingly these also work with
03:52 - strings so we could say print cat
03:56 - greater than
03:58 - dog of course this is a topic that
04:01 - brings out strong opinions but leaving
04:03 - that aside is this going to be true or
04:07 - false let's run it and
04:09 - see so it's
04:11 - false why well this is basically doing
04:14 - an alphabetical comparison and dog
04:17 - occurs later in the alphabet than cat so
04:21 - in a sense dog is greater than cat here
04:25 - on the other hand watch what happens if
04:27 - I give dog a capital letter at the
04:31 - start so we did get false remember now
04:34 - we get true why is
04:37 - that well strictly speaking this isn't
04:40 - exactly an alphabetical comparison in
04:43 - fact every letter has a
04:46 - number in the Unicode table of
04:50 - characters and it's using those numbers
04:53 - to do the
04:54 - comparison you can find out what the
04:56 - numbers of letters are using the OD
04:58 - function let's print OD this is a
05:01 - built-in
05:02 - function and let's try it
05:06 - on C and we'll also try it on
05:11 - D and what we find is
05:15 - that the number of C in the Unicode
05:18 - character set is
05:20 - 99 and the number of D is only 68 so if
05:25 - we go to a browser and we search for
05:28 - Unicode table or something like
05:31 - that so we've got a table at this site
05:34 - unic cod.com it's pretty
05:37 - good and we can see here that in fact
05:40 - the capital letters occur in this table
05:43 - before the lowercase letters which
05:45 - explains why the capital letters have
05:49 - lower numbers associated with them than
05:52 - the lowercase letters so you can use
05:55 - less than and greater than with strings
05:57 - as well as with integers we've also got
06:00 - not equals so let's do
06:03 - print
06:05 - cat not equal
06:08 - to dog is that true or false well it's
06:12 - true because uh cat the text is not
06:15 - equal to this text dog so we get true
06:19 - there and we've got less than or equal
06:22 - to and greater than or equal to let's
06:25 - try we'll try numbers this time so
06:30 - five greater than or equal
06:34 - to 6 is that true or
06:37 - false it's false five is not greater
06:41 - than six it's also not equal to six so
06:45 - this is
06:46 - false let's try
06:49 - five less than or equal to five is this
06:53 - true or false well five is not less than
06:56 - five but it is equal to five so
06:59 - 5 less than or equal to 5 is actually
07:03 - true and that comes back
07:07 - true now what I'd suggest you do with
07:10 - these is as always I don't recommend
07:14 - stressing about memorizing this stuff
07:17 - but I do very strongly recommend trying
07:18 - it out try this out try out all of these
07:23 - operators with your own integers and
07:26 - strings check if they behave as you
07:28 - expect and if you find anything
07:31 - unexpected try to figure out why it
07:34 - doesn't work quite as you expect you can
07:37 - always come back to this code right
07:40 - here and if you're really unsure about
07:42 - this stuff then a good way to start is
07:45 - just literally typing out this it's
07:48 - really surprising how typing code out
07:51 - helps you become familiar with
07:54 - it it's as if a lot of the learning
07:57 - really does take place in your finger I
07:59 - find that once I've typed code it's then
08:02 - much easier to understand it after I've
08:04 - typed it so try all these out for
08:06 - yourself don't stress about memorizing
08:08 - them we're going to be using them as we
08:10 - go through the course but definitely do
08:12 - try them out hello you've been watching
08:14 - a free sample from my Python and machine
08:17 - learning for complete beginners course
08:19 - I'm uploading enough videos from the
08:21 - start of the course to get you started
08:24 - with python and machine learning the
08:26 - full course is absolutely massive if
08:28 - you're interested in it please click the
08:30 - link in the description the complete
08:33 - course covers not only basic python but
08:35 - also some fairly Advanced python even
08:38 - some desktop programming stuff and then
08:40 - goes on to machine learning and
08:42 - artificial intelligence until next time
08:45 - happy coding

Cleaned transcript:

in this video we're going to look at some more comparison operators in Python we're going to look at these if you start a line in Python with a hash sign like this or if you put that anywhere on a line in Python whatever comes after it on that line is a comment so you can use this hash symbol to add comments to your code some programs go overboard with this but it's probably much more common that programmers don't put enough comments into their code as a beginner you might feel like putting a lot of comments into your code or not it's up to you I would suggest in general that comments should be added to code in cases where you're writing a block of code and it's really not obvious what it does so you maybe want to make a note to say what that code is supposed to be doing but of course you have to keep your comments up to date if you change the code or otherwise they'll get misleading so let's take a look at these operators we've already seen the equality test operator equals equals we could write for example print let's try cat equals equals cat now on the face of it this looks useless but of course one or both of these strings would normally be a variable so it wouldn't be obvious what the result is going to be if I run this since they're both string literals of course we get true if I change one of them to something else then we're going to get false pretty straightforward and we've seen also that you can use this operator with integers so if I write here 5al equal 6 what's that going to return well this is going to evaluate to false and so we print false it's not a good idea to use equals equals with floating Point values because floating Point values are not stored precisely in the computer's memory so you can get misleading results from doing that with floating Point values the question you would want to be asking instead is is this floating point value close to this other floating point value rather than asking if they're equal which is not necessary as meaningful as you might think under the circumstances here but with integers equals equals works really well we've also got less than so we could write print five less than six well that should be true right so it says true and we've got greater than so 5 greater than 6 of course that's false now useful trick for remembering the difference between greater than and less than if you're not used to them they are found in mathematics as well is let's just zoom in a bit if you look at these symbols they both have a sort of big end to them and a small end right there's a big end there a small end if the smaller value is at the smaller end and the bigger value is at the bigger end then the whole thing evaluates to true if it's the other way around so in this case you've got the smaller value at the big end and a bigger value at the small end then these Expressions evaluate to false and you can see that works we've got true and false here it's the right way round so to speak and here it's the wrong way round surprisingly these also work with strings so we could say print cat greater than dog of course this is a topic that brings out strong opinions but leaving that aside is this going to be true or false let's run it and see so it's false why well this is basically doing an alphabetical comparison and dog occurs later in the alphabet than cat so in a sense dog is greater than cat here on the other hand watch what happens if I give dog a capital letter at the start so we did get false remember now we get true why is that well strictly speaking this isn't exactly an alphabetical comparison in fact every letter has a number in the Unicode table of characters and it's using those numbers to do the comparison you can find out what the numbers of letters are using the OD function let's print OD this is a builtin function and let's try it on C and we'll also try it on D and what we find is that the number of C in the Unicode character set is 99 and the number of D is only 68 so if we go to a browser and we search for Unicode table or something like that so we've got a table at this site unic cod.com it's pretty good and we can see here that in fact the capital letters occur in this table before the lowercase letters which explains why the capital letters have lower numbers associated with them than the lowercase letters so you can use less than and greater than with strings as well as with integers we've also got not equals so let's do print cat not equal to dog is that true or false well it's true because uh cat the text is not equal to this text dog so we get true there and we've got less than or equal to and greater than or equal to let's try we'll try numbers this time so five greater than or equal to 6 is that true or false it's false five is not greater than six it's also not equal to six so this is false let's try five less than or equal to five is this true or false well five is not less than five but it is equal to five so 5 less than or equal to 5 is actually true and that comes back true now what I'd suggest you do with these is as always I don't recommend stressing about memorizing this stuff but I do very strongly recommend trying it out try this out try out all of these operators with your own integers and strings check if they behave as you expect and if you find anything unexpected try to figure out why it doesn't work quite as you expect you can always come back to this code right here and if you're really unsure about this stuff then a good way to start is just literally typing out this it's really surprising how typing code out helps you become familiar with it it's as if a lot of the learning really does take place in your finger I find that once I've typed code it's then much easier to understand it after I've typed it so try all these out for yourself don't stress about memorizing them we're going to be using them as we go through the course but definitely do try them out hello you've been watching a free sample from my Python and machine learning for complete beginners course I'm uploading enough videos from the start of the course to get you started with python and machine learning the full course is absolutely massive if you're interested in it please click the link in the description the complete course covers not only basic python but also some fairly Advanced python even some desktop programming stuff and then goes on to machine learning and artificial intelligence until next time happy coding
