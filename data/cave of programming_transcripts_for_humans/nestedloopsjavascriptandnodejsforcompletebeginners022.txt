With timestamps:

00:00 - hello this is john from
00:02 - caveofprogramming.com
00:04 - in this video we're going to take a look
00:05 - at nested loops continuing
00:07 - my series on node.js and javascript for
00:10 - complete
00:11 - beginners so a nested loop is a loop
00:14 - within a loop
00:15 - and we can use a nested loop to visit
00:18 - each element in a 2d array one after the
00:22 - other
00:22 - let's start with use strict as as usual
00:27 - and i'm going to copy the 2d array that
00:28 - i created in the last video
00:30 - so i'm gonna copy this animal table
00:34 - so i've got let animal table equal and
00:36 - i've set this variable equal to a two
00:38 - two dimensional array so an array
00:42 - where each element is itself an array
00:44 - and the challenge is
00:46 - uh the challenge that we're going to do
00:48 - is can we visit each of these items in
00:50 - turn
00:51 - either setting them or outputting them
00:53 - with console.log
00:55 - so how would we use a for loop
00:58 - to access these two
01:01 - inner arrays so the two elements in this
01:04 - outer array here
01:05 - well we could do it like this for let
01:08 - i equals zero i less than animal table
01:12 - dot length so the length of it is 2
01:15 - and i plus plus and then we can just
01:19 - output console.log
01:22 - animal table
01:26 - and i so if we run this code
01:32 - we are visiting the two elements of this
01:35 - sort of outer array that zero element
01:38 - zero
01:39 - and element 1 element index 0
01:42 - element index 1 and we're outputting
01:45 - them here
01:47 - but each of those elements is itself an
01:49 - array
01:50 - let's maybe get each element in a
01:52 - variable so i'm going to say
01:54 - let row equal animal table
01:57 - i like this
02:01 - so now i'm i'm this variable row
02:04 - i'm setting first to that and then when
02:07 - the loop goes around again
02:09 - it gets set to this so row is an array
02:13 - and we can actually iterate over row
02:15 - using another loop
02:17 - so i can write four let now we can't use
02:20 - the name i
02:21 - again here the scope of this i variable
02:24 - in other words the variable
02:26 - the area where it exists is basically
02:28 - from here to here
02:30 - so anywhere within there we can't
02:31 - declare another variable called i
02:34 - we could do afterwards but within here
02:35 - we can't
02:37 - so let's give this another name like j
02:40 - i'm going to set j equal to 0 we're
02:43 - going to keep looping
02:44 - while j is less than row.length
02:50 - and we're going to say j plus
02:54 - and then here we can write console dot
02:57 - log
02:58 - let's output i and j so we can see what
03:01 - they are
03:02 - and then i'm going to write row j
03:06 - take a look
03:11 - so now we've got all the elements within
03:14 - this 2d array dog cat giraffe
03:17 - element rhino and you can see that the
03:19 - values of i and j
03:21 - are taking well all the values that we
03:24 - need them to so we've got
03:25 - um row zero row zero column zero is dog
03:30 - row zero column one is cat row one
03:33 - column zero is giraffe
03:34 - row one column one elephant and row
03:37 - one so this one
03:41 - column two which is that rhino
03:45 - is rhino we could also set the values in
03:48 - the array if we wanted
03:50 - like this so if i had another one of
03:52 - these
03:53 - i could set each element in turn
03:56 - and javascript is weakly typed so we
03:59 - could even set them to numbers you know
04:01 - we could do what we want with them
04:02 - really
04:03 - we could say for example um let's say
04:06 - row j
04:09 - equals i times j
04:13 - see what that does so we had strings
04:16 - in this 2d array we're changing them all
04:18 - to numbers
04:19 - where each number is equal to the row
04:22 - index
04:23 - times the color index column index and
04:26 - then we get this
04:26 - sort of strange looking table here
04:30 - um so the point that i want to make
04:32 - there is really
04:33 - just that we can change the elements in
04:37 - the array via this mechanism as well
04:40 - as well as accessing them let's set them
04:41 - all to hello
04:43 - and then they're all hello but anyways
04:47 - comment that out so if you're a
04:51 - complete beginner especially or any sort
04:54 - of beginner
04:55 - [Music]
04:56 - you need to practice this um so
05:00 - ideally try to get to the point where um
05:03 - you can define let's just move that down
05:06 - a bit actually move it out of the way
05:07 - there we go with alt or option and down
05:10 - arrow
05:12 - so you want to get to the point ideally
05:13 - where you can write this out from memory
05:15 - not this exact code but so
05:19 - first practice this type it out get it
05:20 - working
05:22 - and then see if you can
05:25 - without referring to other code after a
05:28 - bit of practice
05:29 - because at first you will probably need
05:31 - to refer to this
05:33 - code or other code examples um
05:36 - see if you can eventually get to a point
05:38 - where you can declare a 2d array
05:40 - and iterate through it using a nested
05:41 - loop incidentally we could also write
05:46 - here we could write animal table
05:49 - i j
05:54 - and here we could write animal
05:59 - animal table
06:03 - i and then we don't need this so that's
06:06 - another way to do it
06:10 - let's try that so you can see that works
06:13 - as well
06:14 - i'm going to just copy that and then
06:16 - just undo
06:20 - i wanted to show you this way first
06:21 - because i think it's sort of simpler
06:24 - and it makes it clearer what's going on
06:26 - i'll put this in a comment
06:27 - and you can find this on
06:31 - github.comcaverprogramming and my
06:32 - node.js public repository if you want to
06:35 - browse the code there
06:38 - so ideally get to the point where you
06:40 - can do it from memory if you get bored
06:41 - and get sick of it just move on to
06:43 - something else
06:44 - eventually with practice you'll be able
06:46 - to do this sort of thing
06:48 - and it'll seem um clear to you it just
06:51 - takes
06:52 - it just takes some practice i don't
06:54 - think it's very helpful to make notes
06:56 - it's you just need to practice it
06:57 - type it get used to typing this sort of
06:59 - thing really
07:00 - and in fact after you've typed things a
07:03 - few times
07:04 - i find it's a lot easier to understand
07:06 - them uh
07:07 - than to do that the other way around in
07:09 - other words it's a lot easier a lot
07:10 - easier to type stuff and then understand
07:12 - it
07:13 - than it is to understand stuff and then
07:15 - type but typing stuff out
07:17 - is and getting working is vital to the
07:20 - process of learning
07:22 - with programming absolutely vital so
07:24 - worth worth trying this out
07:26 - i'll give you an exercise with this i
07:28 - think probably in
07:30 - the next video possibly
07:33 - but for now this is just enough in
07:35 - itself
07:36 - so do try this out see how you get on
07:39 - until next time happy coding

Cleaned transcript:

hello this is john from caveofprogramming.com in this video we're going to take a look at nested loops continuing my series on node.js and javascript for complete beginners so a nested loop is a loop within a loop and we can use a nested loop to visit each element in a 2d array one after the other let's start with use strict as as usual and i'm going to copy the 2d array that i created in the last video so i'm gonna copy this animal table so i've got let animal table equal and i've set this variable equal to a two two dimensional array so an array where each element is itself an array and the challenge is uh the challenge that we're going to do is can we visit each of these items in turn either setting them or outputting them with console.log so how would we use a for loop to access these two inner arrays so the two elements in this outer array here well we could do it like this for let i equals zero i less than animal table dot length so the length of it is 2 and i plus plus and then we can just output console.log animal table and i so if we run this code we are visiting the two elements of this sort of outer array that zero element zero and element 1 element index 0 element index 1 and we're outputting them here but each of those elements is itself an array let's maybe get each element in a variable so i'm going to say let row equal animal table i like this so now i'm i'm this variable row i'm setting first to that and then when the loop goes around again it gets set to this so row is an array and we can actually iterate over row using another loop so i can write four let now we can't use the name i again here the scope of this i variable in other words the variable the area where it exists is basically from here to here so anywhere within there we can't declare another variable called i we could do afterwards but within here we can't so let's give this another name like j i'm going to set j equal to 0 we're going to keep looping while j is less than row.length and we're going to say j plus and then here we can write console dot log let's output i and j so we can see what they are and then i'm going to write row j take a look so now we've got all the elements within this 2d array dog cat giraffe element rhino and you can see that the values of i and j are taking well all the values that we need them to so we've got um row zero row zero column zero is dog row zero column one is cat row one column zero is giraffe row one column one elephant and row one so this one column two which is that rhino is rhino we could also set the values in the array if we wanted like this so if i had another one of these i could set each element in turn and javascript is weakly typed so we could even set them to numbers you know we could do what we want with them really we could say for example um let's say row j equals i times j see what that does so we had strings in this 2d array we're changing them all to numbers where each number is equal to the row index times the color index column index and then we get this sort of strange looking table here um so the point that i want to make there is really just that we can change the elements in the array via this mechanism as well as well as accessing them let's set them all to hello and then they're all hello but anyways comment that out so if you're a complete beginner especially or any sort of beginner you need to practice this um so ideally try to get to the point where um you can define let's just move that down a bit actually move it out of the way there we go with alt or option and down arrow so you want to get to the point ideally where you can write this out from memory not this exact code but so first practice this type it out get it working and then see if you can without referring to other code after a bit of practice because at first you will probably need to refer to this code or other code examples um see if you can eventually get to a point where you can declare a 2d array and iterate through it using a nested loop incidentally we could also write here we could write animal table i j and here we could write animal animal table i and then we don't need this so that's another way to do it let's try that so you can see that works as well i'm going to just copy that and then just undo i wanted to show you this way first because i think it's sort of simpler and it makes it clearer what's going on i'll put this in a comment and you can find this on github.comcaverprogramming and my node.js public repository if you want to browse the code there so ideally get to the point where you can do it from memory if you get bored and get sick of it just move on to something else eventually with practice you'll be able to do this sort of thing and it'll seem um clear to you it just takes it just takes some practice i don't think it's very helpful to make notes it's you just need to practice it type it get used to typing this sort of thing really and in fact after you've typed things a few times i find it's a lot easier to understand them uh than to do that the other way around in other words it's a lot easier a lot easier to type stuff and then understand it than it is to understand stuff and then type but typing stuff out is and getting working is vital to the process of learning with programming absolutely vital so worth worth trying this out i'll give you an exercise with this i think probably in the next video possibly but for now this is just enough in itself so do try this out see how you get on until next time happy coding
