With timestamps:

00:00 - hello in this video we're going to
00:03 - actually create and run a Java program
00:06 - if you can get to the end of this video
00:09 - and you can actually do this and make it
00:11 - work then you can really give yourself a
00:14 - pat on the back because this is really
00:17 - something to create your first hello
00:20 - world type computer program is really a
00:23 - great thing it's really important and
00:25 - wonderful step and once you can do that
00:27 - you're well on your way so there are two
00:31 - ways I can create a Java project here
00:34 - you may or may not have this because
00:36 - different versions of Eclipse do sort of
00:39 - change a bit but here it gives me an
00:41 - option that I can just click to create a
00:44 - Java project here in the area that we
00:47 - call the package Explorer so I can just
00:49 - click that create a Java project but I'm
00:52 - going to do it a different way
00:53 - that's more standard across different
00:55 - versions of Eclipse I'm going to go to
00:58 - the file menu and I'm going to go to new
01:01 - Java project
01:03 - if you can't see Java project here and
01:07 - go to other and when you click brother
01:09 - you'll have a whole list of different
01:12 - types of project and you just have to go
01:14 - to Java and select Java project so it
01:18 - doesn't matter you just do one of these
01:20 - but your goal is to create a new Java
01:22 - project okay so let's go back and do it
01:26 - in a way that is most common at least as
01:29 - far as I'm concerned I'll go to the file
01:31 - menu go to new Java project and we get
01:35 - this screen here we need to give the
01:38 - project a name now usually that can be
01:42 - pretty much anything you like
01:45 - this is just an eclipse thing it's not a
01:47 - Java thing so there's there's no there's
01:51 - no real rules about it what I have found
01:54 - is that occasionally occasionally people
01:57 - run into problems if they have a space
01:59 - or some weird characters in a project
02:01 - named weird characters I suppose from
02:04 - the point of view of the kind of
02:06 - standard Latin alphabet so what I'll do
02:11 - is I'll call this project
02:13 - a hello world I'm giving it a capital H
02:16 - capital W W but that's not important
02:19 - it's just for readability and I won't
02:21 - put any spaces in there just to be on
02:23 - the safe side so we fill that in another
02:28 - thing to pay attention to is the version
02:31 - of Java that were creating this project
02:33 - for so here it says use an execution
02:38 - environment JRE and that set to version
02:41 - twelve of Java but that's not what I'm
02:43 - using I'm using version 11 so I'm going
02:46 - to select version 11 here this this says
02:52 - here the default compiler compliance
02:54 - level for the current workspace is 12
02:56 - the new project will use a project
02:57 - specific compiler compliance level of 11
03:00 - that's that's just kind of for
03:02 - information it's not really important
03:05 - for what we're doing here the compiler
03:08 - compliance level is actually it's just
03:10 - talking about what version it expects
03:13 - your Java code to be so it's saying that
03:15 - in this case because I've selected
03:20 - version 11 of Java we're going to be
03:22 - writing Java in a Java 11 type of style
03:26 - Java is backwards compatible so if you
03:31 - write code for version 8 it will still
03:35 - usually work in it should work I think
03:37 - always probably in version 10 or version
03:41 - 12 okay so you just need to make sure
03:46 - here that you have Java version 11
03:48 - selected and for the most of what we're
03:51 - doing here even version 9 would be all
03:54 - right
03:54 - version 8 of Java would be alright for
03:57 - most of it and version 10 would probably
04:00 - be all right maybe for the entire course
04:03 - so you could even use version 10 you
04:07 - could use even version 8 for most of
04:10 - what we're doing here okay all right so
04:13 - we give the project a name we make sure
04:15 - you got Java standard edition version 11
04:18 - selected and if not you can try playing
04:21 - around with these but hopefully this
04:22 - will all go pretty smoothly and you can
04:25 - just use that
04:26 - okay click Next
04:30 - so on this screen the only option that
04:33 - we need to pay attention to is we've got
04:36 - this option to create module - info Java
04:40 - Java mod modules are fairly new addition
04:44 - to Java they're added a few versions ago
04:48 - and we're going to look at them later in
04:51 - the course but to start with we're not
04:52 - going to use them because they will only
04:54 - complicate things further so I'm going
04:56 - to unpick that that's the only change
04:58 - that I'm going to make then I'm going to
05:00 - click finish hopefully you'll get a
05:04 - project generated now and you can expand
05:08 - it and look into it you will have
05:11 - included in a project the it will say
05:14 - JRE JRE system library should be version
05:17 - 11 here that's just a load of stuff it's
05:21 - loaded basic Java stuff so load of sort
05:25 - of code that lets you build upon it to
05:28 - do things in Java basically and we've
05:30 - got this source folder and the source
05:32 - folders where I kept where our code
05:33 - actually goes now I'm going to select
05:38 - the kind of root folder there hello
05:41 - world I'm going to right-click it and
05:44 - I'm going to go to new class and I'm
05:49 - gonna go back and explain this more in
05:52 - the next video for now we're just going
05:55 - to do it so we need to create a new
05:57 - class in our project I need to give it a
06:00 - name and a name that I'm going to give
06:02 - it I'm going to call it up now that can
06:07 - be what you want but oh it's just using
06:10 - app to start with but just for
06:12 - consistency with these videos it it
06:16 - should have an upper class first name
06:18 - and the rest of the letters in it should
06:21 - be lower case unless you've got multiple
06:23 - words in which case each word starts
06:26 - with an uppercase letter but we'll be
06:28 - seeing more of that later for now just
06:30 - call it up a PP the package we don't
06:34 - have to fill this in but if we don't
06:37 - fill it in we might get a
06:39 - morning packages again we'll be talking
06:42 - about those later on they're just the
06:44 - way of organizing Java code kind of like
06:48 - a folder really so for the moment I just
06:53 - need to give the package some name I
06:56 - might just use my initials jwp you can
06:59 - use yours
06:59 - now the thing about the package is the
07:02 - letters in it should be lowercase so I
07:05 - would say for the moment just use your
07:08 - initials or whatever you could you could
07:10 - even call it hello something like that
07:12 - maybe I'll call it hello but they should
07:15 - be lowercase and and for the moment
07:17 - don't put any symbols or anything like
07:20 - that in there and we'll talk more about
07:22 - packages later on in the course another
07:25 - thing I'm gonna do is I'm gonna tick
07:28 - this box to create a public static void
07:31 - main string array togs now of course
07:33 - that looks incomprehensible to you if
07:36 - you're new to Java that's fine but tick
07:39 - that box that's really important so
07:42 - we've added a name for the class that
07:44 - begins with an uppercase first letter
07:46 - we've given a packager name and that's
07:49 - all lowercase letters no spaces or
07:51 - anything and I've ticked that I want to
07:55 - create a public static void main and the
07:57 - other options I just left them as they
07:58 - are and I click finish and then we've
08:02 - got Java program and in fact I'll leave
08:08 - it here in this video and we'll we'll
08:12 - actually make this do something I think
08:13 - in the next video now I know that this
08:17 - has a recipe but feel I know that you
08:19 - don't understand what you're doing
08:21 - unless you've you're already a bit
08:23 - familiar with Java you won't understand
08:24 - this that's fine it's normal it won't be
08:27 - like that for the entire course but we
08:29 - just need to get started okay so until
08:32 - next time happy coding

Cleaned transcript:

hello in this video we're going to actually create and run a Java program if you can get to the end of this video and you can actually do this and make it work then you can really give yourself a pat on the back because this is really something to create your first hello world type computer program is really a great thing it's really important and wonderful step and once you can do that you're well on your way so there are two ways I can create a Java project here you may or may not have this because different versions of Eclipse do sort of change a bit but here it gives me an option that I can just click to create a Java project here in the area that we call the package Explorer so I can just click that create a Java project but I'm going to do it a different way that's more standard across different versions of Eclipse I'm going to go to the file menu and I'm going to go to new Java project if you can't see Java project here and go to other and when you click brother you'll have a whole list of different types of project and you just have to go to Java and select Java project so it doesn't matter you just do one of these but your goal is to create a new Java project okay so let's go back and do it in a way that is most common at least as far as I'm concerned I'll go to the file menu go to new Java project and we get this screen here we need to give the project a name now usually that can be pretty much anything you like this is just an eclipse thing it's not a Java thing so there's there's no there's no real rules about it what I have found is that occasionally occasionally people run into problems if they have a space or some weird characters in a project named weird characters I suppose from the point of view of the kind of standard Latin alphabet so what I'll do is I'll call this project a hello world I'm giving it a capital H capital W W but that's not important it's just for readability and I won't put any spaces in there just to be on the safe side so we fill that in another thing to pay attention to is the version of Java that were creating this project for so here it says use an execution environment JRE and that set to version twelve of Java but that's not what I'm using I'm using version 11 so I'm going to select version 11 here this this says here the default compiler compliance level for the current workspace is 12 the new project will use a project specific compiler compliance level of 11 that's that's just kind of for information it's not really important for what we're doing here the compiler compliance level is actually it's just talking about what version it expects your Java code to be so it's saying that in this case because I've selected version 11 of Java we're going to be writing Java in a Java 11 type of style Java is backwards compatible so if you write code for version 8 it will still usually work in it should work I think always probably in version 10 or version 12 okay so you just need to make sure here that you have Java version 11 selected and for the most of what we're doing here even version 9 would be all right version 8 of Java would be alright for most of it and version 10 would probably be all right maybe for the entire course so you could even use version 10 you could use even version 8 for most of what we're doing here okay all right so we give the project a name we make sure you got Java standard edition version 11 selected and if not you can try playing around with these but hopefully this will all go pretty smoothly and you can just use that okay click Next so on this screen the only option that we need to pay attention to is we've got this option to create module info Java Java mod modules are fairly new addition to Java they're added a few versions ago and we're going to look at them later in the course but to start with we're not going to use them because they will only complicate things further so I'm going to unpick that that's the only change that I'm going to make then I'm going to click finish hopefully you'll get a project generated now and you can expand it and look into it you will have included in a project the it will say JRE JRE system library should be version 11 here that's just a load of stuff it's loaded basic Java stuff so load of sort of code that lets you build upon it to do things in Java basically and we've got this source folder and the source folders where I kept where our code actually goes now I'm going to select the kind of root folder there hello world I'm going to rightclick it and I'm going to go to new class and I'm gonna go back and explain this more in the next video for now we're just going to do it so we need to create a new class in our project I need to give it a name and a name that I'm going to give it I'm going to call it up now that can be what you want but oh it's just using app to start with but just for consistency with these videos it it should have an upper class first name and the rest of the letters in it should be lower case unless you've got multiple words in which case each word starts with an uppercase letter but we'll be seeing more of that later for now just call it up a PP the package we don't have to fill this in but if we don't fill it in we might get a morning packages again we'll be talking about those later on they're just the way of organizing Java code kind of like a folder really so for the moment I just need to give the package some name I might just use my initials jwp you can use yours now the thing about the package is the letters in it should be lowercase so I would say for the moment just use your initials or whatever you could you could even call it hello something like that maybe I'll call it hello but they should be lowercase and and for the moment don't put any symbols or anything like that in there and we'll talk more about packages later on in the course another thing I'm gonna do is I'm gonna tick this box to create a public static void main string array togs now of course that looks incomprehensible to you if you're new to Java that's fine but tick that box that's really important so we've added a name for the class that begins with an uppercase first letter we've given a packager name and that's all lowercase letters no spaces or anything and I've ticked that I want to create a public static void main and the other options I just left them as they are and I click finish and then we've got Java program and in fact I'll leave it here in this video and we'll we'll actually make this do something I think in the next video now I know that this has a recipe but feel I know that you don't understand what you're doing unless you've you're already a bit familiar with Java you won't understand this that's fine it's normal it won't be like that for the entire course but we just need to get started okay so until next time happy coding
