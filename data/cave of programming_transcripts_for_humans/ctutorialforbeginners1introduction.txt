With timestamps:

00:00 - [Music]
00:17 - hello this is John from Cave of
00:20 - programming. comom Welcome to C++ for
00:22 - complete
00:23 - beginners um I'm going to teach you C++
00:26 - the programming language from scratch in
00:29 - this course assuming no knowledge of of
00:32 - programming and uh in most of this
00:34 - course I'm going to be programming in
00:36 - front of your eyes and to get the most
00:38 - out of it you should also uh type in the
00:41 - code and play around with it a little
00:43 - bit after each
00:45 - video in this particular video I'm just
00:47 - going to talk about uh what C++ actually
00:50 - is and then in the next video we we'll
00:53 - get on to looking a bit more at
00:55 - installation although you're going to
00:56 - have to do some Googling uh to find the
00:59 - right stuff to install for your platform
01:01 - and then we'll get on to actually coding
01:04 - stuff uh so C++ it's a programming
01:07 - language that's been around for a long
01:09 - time um and it's going to be around a
01:12 - long time into the future I'm
01:15 - sure uh but um before you start learning
01:18 - C++ there are some reasons why you might
01:21 - not want to learn it and let's take a
01:23 - look at those first although I don't
01:25 - want to discourage you um some people
01:28 - are going to be better off learning a
01:31 - language like Java and I I have a
01:33 - massive free course on Java uh which you
01:36 - can find at cof programming. comom or
01:39 - python for
01:40 - example uh C++ is considered challenging
01:46 - to to learn it's not the easiest
01:48 - programming language to learn although
01:50 - you absolutely can learn it um as a
01:53 - beginner uh it's it's easy to introduce
01:57 - horrible bugs into a C++ program
02:01 - and uh actually both of these uh facts
02:05 - probably have to do with the fact that
02:07 - C++ doesn't protect you from yourself at
02:10 - all um a C++ program just carries out
02:13 - your instructions it doesn't second
02:15 - guess them and try to figure out what
02:17 - you might have done wrong it doesn't try
02:19 - to protect you from yourself it just
02:21 - carries out what you tell it to do uh so
02:24 - when you're programming in C++ you have
02:26 - to be very careful you have to think a
02:28 - lot and um it's very easy to create
02:32 - horrible bugs in there if you're not
02:34 - careful it's even possible to screw up
02:37 - your computer if you do something really
02:39 - really really stupid although that's not
02:42 - normally something you have to to worry
02:44 - about but it is possible uh C++ is um
02:49 - it's often time consuming to write a C++
02:54 - program um that's that's not necessarily
02:56 - the case but in my experience uh if if
02:59 - you want to get something done it's
03:02 - often quicker to use uh what you might
03:05 - call a slightly higher level language
03:07 - like Java or or python that um kind of
03:11 - does protect you from yourself more and
03:13 - gives you more sort of um facilities
03:17 - that are immediately easy to use so if
03:20 - you want to write like let's say a
03:21 - desktop program you can do it in C++ and
03:25 - it's going to be very fast usually if if
03:27 - you do but uh it's it's not so easy to
03:31 - write desktop programs in C++ there are
03:33 - other languages that that make it
03:37 - easier um it's C++ is not truly platform
03:42 - independent um you often can with a
03:44 - minimal amount of work get a C++ program
03:47 - to to work on different uh platforms
03:51 - like for example a Mac and a Windows
03:53 - computer and so on but um equally often
03:57 - it requires substantial amount of work
03:59 - to get the same program to run on a
04:01 - completely different kind of computer
04:05 - and that contrasts with Java where with
04:07 - with Java there's a whole simulated
04:10 - computer basically running on your own
04:12 - computer and your Java program will then
04:15 - run on that simulated computer and that
04:18 - means um that you can run a Java program
04:21 - quite easily on many different platforms
04:24 - as long as they're you know they're
04:26 - roughly similar like they have big
04:27 - screens and keyboards or whatever
04:31 - um but this is this is not the case with
04:32 - C++ there's no simulate simulated
04:35 - computer that's going to be the same for
04:38 - every uh every different kind of
04:40 - machine uh with a C++ program your C++
04:44 - program is running directly on your
04:46 - actual computer and for that reason it's
04:49 - not um necessarily so easy to transfer
04:53 - transfer it to a different
04:56 - platform but there of course there are
04:58 - reasons why you might want to learn C++
05:02 - let's take a look at those so C++ is
05:05 - very very fast uh you can write um
05:08 - programs that are pretty much as fast as
05:10 - they can possibly be if you write good
05:13 - C++ code because as I mentioned there's
05:17 - nothing between the C++ program and your
05:20 - computer it's directly issuing
05:22 - instructions to your computer and that
05:24 - makes it very fast at least if you uh
05:27 - program well
05:30 - and uh by the same token you can also um
05:33 - access all the kind of low-level
05:35 - Hardware type facilities of your
05:38 - computer and C++ if you want to and if
05:41 - you understand them and you know how to
05:42 - do it uh C++ will let you do basically
05:45 - anything with your
05:47 - computer that can be done with
05:50 - it uh so because C++ is is fast and it's
05:54 - it's efficient uh and also in terms of
05:58 - memory if if you write it
06:00 - correctly uh as well as in terms of um
06:03 - speed and processing power that means
06:06 - that you can get a lot of processing
06:07 - done in a short time with a C++ program
06:11 - uh so typically a C++ program is going
06:13 - to be much faster than Java or python or
06:16 - something like that again uh with the
06:18 - caveat that you have to write it well in
06:20 - the first place and that means C++ is
06:23 - good for things like high-end
06:26 - games where where you're trying to
06:28 - squeeze as as much power as possible out
06:31 - of your computer although of course you
06:33 - have to be aware that um these really
06:35 - glitzy high-end games kind of 3D type
06:39 - games uh usually have a team of people
06:41 - working on them it's not so easy to
06:43 - write those things including artists and
06:46 - so on uh C++ uh is good for artificial
06:50 - intelligence where you're again you're
06:52 - trying to do a lot of
06:53 - processing in um in a short amount of
06:56 - time on your computer or for any kind of
06:58 - real time time application where you're
07:01 - having to do a lot of processing and get
07:03 - it done quickly and sharply it's good
07:05 - for that kind of stuff and for that
07:07 - matter if you do write Windows kind of
07:09 - desktop programs in
07:12 - C++ uh usually you can expect them to
07:15 - run very crisply and to be very
07:17 - responsive because um C++ is fast and
07:21 - you can write device drivers in C++
07:25 - because again you have the uh ability to
07:28 - access your Hardware in
07:31 - C++ uh C++ also pushes you to understand
07:34 - your computer more um a language like
07:37 - Java uh which is running on a a
07:40 - simulated computer in effect a virtual
07:43 - machine uh that runs on your own
07:46 - computer insulates you somewhat from
07:49 - your actual computer there's no such
07:51 - insulation in C++ so when you learn C++
07:55 - you do usually uh learn more and more
07:58 - about your
08:00 - computer and uh finally learning C++ is
08:04 - a bit of a badge of honor among
08:06 - programmers I mean you'll get guys who
08:08 - say oh C++ why are you bothering with
08:10 - that Java is so much nicer and so on but
08:13 - I think even those guys are mostly
08:15 - secretly impressed if you know
08:18 - C++ uh so um yeah it's it's challenging
08:21 - but when you've learned it you can
08:23 - really feel that you've really learned
08:25 - something um so to get started with C++
08:29 - or basically two things you need and uh
08:32 - um a lot of the best stuff is free and
08:34 - I'm going to be using free stuff in this
08:37 - course the first thing you need is um
08:39 - well a bunch of software programs that
08:41 - together we collectively call the
08:45 - compiler uh so um you you need to we're
08:49 - going to write C++ programs as text
08:52 - files uh as what we call Source Code
08:54 - files and then we use some software the
08:57 - compiler to turn those text files into a
09:00 - computer program and there's a choice of
09:03 - different compilers the compiler that
09:05 - I'm going to be using uh for these
09:08 - tutorials is uh the G compiler um the
09:12 - the G is actually pronounced in G uh I
09:15 - believe um it's some sort of strange
09:17 - acronym um and uh that compiler is known
09:21 - as GCC or also
09:24 - g++ um GCC was originally designed for
09:27 - creating a language
09:30 - uh for compiling a computer language
09:32 - called C and um later on extensions were
09:37 - added to C to create
09:39 - C++ and then um extensions were built
09:43 - into GCC to create g++ so now they're
09:46 - the same program you use GCC um to
09:50 - compile C++ programs as well as C and
09:54 - just as a side note here um it seems
09:57 - like no one's really sure why C++ is
09:59 - called C++ but uh in George ell's book
10:04 - 1984 um if something's um really good
10:08 - then you say it's plus plus like um I
10:13 - don't
10:14 - know ice cream Plus+ would be really
10:16 - good ice cream and because C++ was built
10:20 - on top of a language called C therefore
10:22 - you have C++ maybe that's the reason I I
10:26 - don't know so um I'm going to be using
10:28 - the g++
10:30 - compiler and that runs on Unix type
10:33 - systems and I'm using a Mac which is a
10:35 - Unix type system these days if you're
10:38 - using Windows you can use Min GW it's
10:40 - also free and that stands for I think
10:44 - minimal goo for Windows and it's the
10:47 - same compiler just ported to
10:50 - Windows uh there's also visual C++ um
10:54 - that's uh that's very
10:57 - popular um and you probably can follow
11:00 - these tutorials using visual C++ I
11:03 - believe there's a free Express version
11:05 - that lacks some features but you can use
11:07 - that for these tutorials but there are
11:09 - going to be some differences which I
11:11 - I'll try to point out where I'm aware of
11:13 - them as you go along uh but it's if
11:16 - you're using visual C++ it's going to
11:18 - look a little different things are going
11:19 - to be a little different and
11:21 - occasionally the actual syntax of the
11:24 - language um well not the syntax but some
11:26 - of the things that you have to type are
11:28 - going to be
11:29 - a little bit different with visual
11:31 - C++ but I can highly recommend ganu uh
11:35 - the ganu compiler g++ because uh it's
11:39 - it's widely widely used in the industry
11:43 - possibly even more so in visual C+ plus
11:46 - um it's it's it's an industry standard
11:48 - and it's completely free and you can you
11:50 - can absolutely rely on
11:52 - it uh so U that's the compiler that's
11:54 - the software that turns your source code
11:58 - the stuff you you type into a program uh
12:02 - but you're also going to need an IDE
12:04 - which this stands for integrated
12:06 - development environment and that's kind
12:09 - of the equivalent of you know Microsoft
12:11 - Word if you like for computer
12:13 - programming so you'll type your your
12:16 - source code as we as we call it into the
12:19 - IDE and then press a button and that
12:22 - will behind the scenes use your compiler
12:25 - to create the actual computer
12:27 - program and the IDE that I'll be using
12:31 - in these tutorials is the eclipse
12:35 - CDT uh which stands for um C++
12:39 - development tool chain or something like
12:41 - that I'm not sure uh so and again
12:44 - Eclipse CDT is
12:46 - free um you can also use visual C++
12:49 - that's an IDE which comes with its own
12:52 - visual C++ compiler on Windows um a very
12:56 - easy option is to use code blocks but
12:58 - I've never known anyone who uses code
13:00 - blocks professionally but it you
13:03 - definitely could uh so that's another as
13:06 - far as I know free IDE that you could
13:09 - use and uh code blocks makes it pretty
13:12 - easy to
13:13 - install um a compiler as well so if if
13:16 - you end up having trouble getting
13:17 - started code blocks is um maybe a good
13:20 - thing to look
13:21 - at on top of that you can use um idees
13:26 - uh which
13:27 - are um somewhat lower level in a way
13:30 - like emac and Vim uh these are kind of
13:34 - um editors that you can use for C++
13:36 - programming but it's a lot more
13:38 - complicated and some people swear by
13:41 - these things but personally um I'm not
13:44 - so keen on them uh although I've I've
13:46 - used um Vim for a couple of years but I
13:49 - I prefer something that looks more like
13:52 - a nicely sort of colored um thing with
13:56 - buttons and stuff um so I'll be using
13:58 - Eclipse
14:00 - CDT now in the next tutorial we're going
14:03 - to talk more about um installation and
14:06 - things to
14:08 - install unfortunately I can't give you
14:11 - specific instructions because it depends
14:13 - on your choice of compiler and IDE and
14:17 - it depends on your uh platform so I'm
14:20 - using a Mac but maybe you're using
14:21 - Windows or something else or Linux so
14:24 - you'll have to do some Googling probably
14:26 - but I will give you recommendations
14:28 - about what to install and uh kind of
14:30 - point you in the right direction to
14:32 - hopefully get you started so that's it
14:34 - for this tutorial and until next time
14:37 - happy
14:38 - [Music]
14:54 - coding

Cleaned transcript:

hello this is John from Cave of programming. comom Welcome to C++ for complete beginners um I'm going to teach you C++ the programming language from scratch in this course assuming no knowledge of of programming and uh in most of this course I'm going to be programming in front of your eyes and to get the most out of it you should also uh type in the code and play around with it a little bit after each video in this particular video I'm just going to talk about uh what C++ actually is and then in the next video we we'll get on to looking a bit more at installation although you're going to have to do some Googling uh to find the right stuff to install for your platform and then we'll get on to actually coding stuff uh so C++ it's a programming language that's been around for a long time um and it's going to be around a long time into the future I'm sure uh but um before you start learning C++ there are some reasons why you might not want to learn it and let's take a look at those first although I don't want to discourage you um some people are going to be better off learning a language like Java and I I have a massive free course on Java uh which you can find at cof programming. comom or python for example uh C++ is considered challenging to to learn it's not the easiest programming language to learn although you absolutely can learn it um as a beginner uh it's it's easy to introduce horrible bugs into a C++ program and uh actually both of these uh facts probably have to do with the fact that C++ doesn't protect you from yourself at all um a C++ program just carries out your instructions it doesn't second guess them and try to figure out what you might have done wrong it doesn't try to protect you from yourself it just carries out what you tell it to do uh so when you're programming in C++ you have to be very careful you have to think a lot and um it's very easy to create horrible bugs in there if you're not careful it's even possible to screw up your computer if you do something really really really stupid although that's not normally something you have to to worry about but it is possible uh C++ is um it's often time consuming to write a C++ program um that's that's not necessarily the case but in my experience uh if if you want to get something done it's often quicker to use uh what you might call a slightly higher level language like Java or or python that um kind of does protect you from yourself more and gives you more sort of um facilities that are immediately easy to use so if you want to write like let's say a desktop program you can do it in C++ and it's going to be very fast usually if if you do but uh it's it's not so easy to write desktop programs in C++ there are other languages that that make it easier um it's C++ is not truly platform independent um you often can with a minimal amount of work get a C++ program to to work on different uh platforms like for example a Mac and a Windows computer and so on but um equally often it requires substantial amount of work to get the same program to run on a completely different kind of computer and that contrasts with Java where with with Java there's a whole simulated computer basically running on your own computer and your Java program will then run on that simulated computer and that means um that you can run a Java program quite easily on many different platforms as long as they're you know they're roughly similar like they have big screens and keyboards or whatever um but this is this is not the case with C++ there's no simulate simulated computer that's going to be the same for every uh every different kind of machine uh with a C++ program your C++ program is running directly on your actual computer and for that reason it's not um necessarily so easy to transfer transfer it to a different platform but there of course there are reasons why you might want to learn C++ let's take a look at those so C++ is very very fast uh you can write um programs that are pretty much as fast as they can possibly be if you write good C++ code because as I mentioned there's nothing between the C++ program and your computer it's directly issuing instructions to your computer and that makes it very fast at least if you uh program well and uh by the same token you can also um access all the kind of lowlevel Hardware type facilities of your computer and C++ if you want to and if you understand them and you know how to do it uh C++ will let you do basically anything with your computer that can be done with it uh so because C++ is is fast and it's it's efficient uh and also in terms of memory if if you write it correctly uh as well as in terms of um speed and processing power that means that you can get a lot of processing done in a short time with a C++ program uh so typically a C++ program is going to be much faster than Java or python or something like that again uh with the caveat that you have to write it well in the first place and that means C++ is good for things like highend games where where you're trying to squeeze as as much power as possible out of your computer although of course you have to be aware that um these really glitzy highend games kind of 3D type games uh usually have a team of people working on them it's not so easy to write those things including artists and so on uh C++ uh is good for artificial intelligence where you're again you're trying to do a lot of processing in um in a short amount of time on your computer or for any kind of real time time application where you're having to do a lot of processing and get it done quickly and sharply it's good for that kind of stuff and for that matter if you do write Windows kind of desktop programs in C++ uh usually you can expect them to run very crisply and to be very responsive because um C++ is fast and you can write device drivers in C++ because again you have the uh ability to access your Hardware in C++ uh C++ also pushes you to understand your computer more um a language like Java uh which is running on a a simulated computer in effect a virtual machine uh that runs on your own computer insulates you somewhat from your actual computer there's no such insulation in C++ so when you learn C++ you do usually uh learn more and more about your computer and uh finally learning C++ is a bit of a badge of honor among programmers I mean you'll get guys who say oh C++ why are you bothering with that Java is so much nicer and so on but I think even those guys are mostly secretly impressed if you know C++ uh so um yeah it's it's challenging but when you've learned it you can really feel that you've really learned something um so to get started with C++ or basically two things you need and uh um a lot of the best stuff is free and I'm going to be using free stuff in this course the first thing you need is um well a bunch of software programs that together we collectively call the compiler uh so um you you need to we're going to write C++ programs as text files uh as what we call Source Code files and then we use some software the compiler to turn those text files into a computer program and there's a choice of different compilers the compiler that I'm going to be using uh for these tutorials is uh the G compiler um the the G is actually pronounced in G uh I believe um it's some sort of strange acronym um and uh that compiler is known as GCC or also g++ um GCC was originally designed for creating a language uh for compiling a computer language called C and um later on extensions were added to C to create C++ and then um extensions were built into GCC to create g++ so now they're the same program you use GCC um to compile C++ programs as well as C and just as a side note here um it seems like no one's really sure why C++ is called C++ but uh in George ell's book 1984 um if something's um really good then you say it's plus plus like um I don't know ice cream Plus+ would be really good ice cream and because C++ was built on top of a language called C therefore you have C++ maybe that's the reason I I don't know so um I'm going to be using the g++ compiler and that runs on Unix type systems and I'm using a Mac which is a Unix type system these days if you're using Windows you can use Min GW it's also free and that stands for I think minimal goo for Windows and it's the same compiler just ported to Windows uh there's also visual C++ um that's uh that's very popular um and you probably can follow these tutorials using visual C++ I believe there's a free Express version that lacks some features but you can use that for these tutorials but there are going to be some differences which I I'll try to point out where I'm aware of them as you go along uh but it's if you're using visual C++ it's going to look a little different things are going to be a little different and occasionally the actual syntax of the language um well not the syntax but some of the things that you have to type are going to be a little bit different with visual C++ but I can highly recommend ganu uh the ganu compiler g++ because uh it's it's widely widely used in the industry possibly even more so in visual C+ plus um it's it's it's an industry standard and it's completely free and you can you can absolutely rely on it uh so U that's the compiler that's the software that turns your source code the stuff you you type into a program uh but you're also going to need an IDE which this stands for integrated development environment and that's kind of the equivalent of you know Microsoft Word if you like for computer programming so you'll type your your source code as we as we call it into the IDE and then press a button and that will behind the scenes use your compiler to create the actual computer program and the IDE that I'll be using in these tutorials is the eclipse CDT uh which stands for um C++ development tool chain or something like that I'm not sure uh so and again Eclipse CDT is free um you can also use visual C++ that's an IDE which comes with its own visual C++ compiler on Windows um a very easy option is to use code blocks but I've never known anyone who uses code blocks professionally but it you definitely could uh so that's another as far as I know free IDE that you could use and uh code blocks makes it pretty easy to install um a compiler as well so if if you end up having trouble getting started code blocks is um maybe a good thing to look at on top of that you can use um idees uh which are um somewhat lower level in a way like emac and Vim uh these are kind of um editors that you can use for C++ programming but it's a lot more complicated and some people swear by these things but personally um I'm not so keen on them uh although I've I've used um Vim for a couple of years but I I prefer something that looks more like a nicely sort of colored um thing with buttons and stuff um so I'll be using Eclipse CDT now in the next tutorial we're going to talk more about um installation and things to install unfortunately I can't give you specific instructions because it depends on your choice of compiler and IDE and it depends on your uh platform so I'm using a Mac but maybe you're using Windows or something else or Linux so you'll have to do some Googling probably but I will give you recommendations about what to install and uh kind of point you in the right direction to hopefully get you started so that's it for this tutorial and until next time happy coding
