With timestamps:

00:00 - hello in this video we're going to look
00:02 - at comparing numbers in JavaScript if
00:05 - you've done programming before in some
00:07 - other language you can skip this video
00:09 - because there are no surprises in this
00:11 - particular one this is stuff that it's
00:13 - the same in many different programming
00:15 - languages so let's start off with you
00:17 - strict here because I want to force
00:20 - myself to declare variables now we can
00:23 - write console.log and we could compare
00:26 - for example 7 with 7 supposing we want
00:29 - to know if 7 is equal to 7 which it
00:31 - clearly is we can write 7 equals equals
00:35 - 7 now this equals equals here is the
00:43 - Equality test
00:44 - operator it's unlike the single equals
00:48 - sign which is used to assign values to
00:51 - variables the double equals sign is
00:53 - equality test operator it's used to
00:56 - check if two values are equal or not and
00:58 - it returns either true or false
01:00 - I say returns meaning this whole
01:03 - expression here will evaluate as a whole
01:06 - to either true or false let's run this
01:11 - so what like all that I called it
01:14 - comparing numbers so if I run node
01:19 - comparing numbers dot j s it says true
01:22 - now this is a bit useless because we
01:25 - know that 7 is equal to 7 but I could
01:28 - have one of these values stored in a
01:29 - variable like let's write let value well
01:35 - that's right let's call it days in week
01:38 - equals 7 and notice the way I write this
01:44 - variable here is called camel casing so
01:47 - I've written the first letter lowercase
01:50 - and an each subsequent word that it's
01:53 - made up of I write with an uppercase
01:55 - first letter for readability this is
01:59 - called camel casing and it's a very
02:01 - common convention in JavaScript so it's
02:04 - what I'm going to be using here it's
02:06 - important to stick to consistent coding
02:09 - conventions now so I can compare days in
02:12 - week here
02:13 - with seven is it equal to seven that and
02:19 - that's going to be of course true true
02:24 - whereas if I asked is equal to six or
02:27 - something then it's going to be false
02:29 - and this might not seem like much but
02:33 - this is sort of a key part of
02:35 - programming really comparing values like
02:37 - this this might be something you've got
02:39 - from user input or it's something you
02:41 - calculated at enormous length and then
02:43 - you want to check is it equal to
02:45 - something else in JavaScript there's
02:49 - also a symbol with three equal signs
02:51 - like this which at first glance seems to
02:55 - do the same sort of thing and we're
02:57 - going to be looking at that a video to a
03:00 - video video or two down the line for a
03:04 - moment we'll just look at equals equals
03:05 - now let's just copy this and I'll add
03:10 - like sort of a bit of text here so that
03:19 - we can because I'm going to have lots of
03:20 - these I want to keep track of which ones
03:23 - which
03:23 - okay so there's equals equals there's
03:28 - also less than or greater than so we
03:32 - could write days and we less than eight
03:36 - for example that will be true let's try
03:43 - this true and there's also greater than
03:50 - so days in week greater than eight so of
03:56 - course this this is the bit that's being
03:58 - actually evaluated and turned into
04:01 - either true or false this is just some
04:02 - text that I've just put there as a
04:05 - description so his days and we greater
04:07 - than eight no it's not because days in
04:09 - week is seven so if we run this now we
04:12 - should get false and we do false there's
04:17 - you can use less than and greater than
04:19 - with floating point numbers like eight
04:21 - point three for example if you want you
04:24 - know you want to compare two numbers
04:25 - with decimal points in them
04:27 - you can compare them with greater than
04:29 - or less than you can't do it so
04:32 - successfully with equals equals it
04:34 - should be avoided don't try to compare
04:36 - floating-point numbers or decimals or
04:38 - fractions whatever you want to call them
04:40 - with equals equals because they can't be
04:43 - stored in a precise way in a computer's
04:47 - memory
04:47 - so two floating-point numbers that seem
04:51 - to be equal you know they could differ
04:53 - by some tiny tiny amount and they won't
04:56 - be equal at all or you know something we
04:58 - could happen basically just avoid
05:00 - comparing floating point numbers with
05:02 - equality test operators in most
05:04 - programming languages in general it's
05:07 - not a good thing to do but all of these
05:09 - work fine with integers and it's common
05:12 - to use these two with floating point
05:14 - integers notice with the less-than and
05:16 - greater-than operators they return true
05:20 - if the thing at the smaller end of them
05:23 - if you think of them as having a small
05:25 - end and a large end these actual
05:29 - operators it's when the thing at the
05:31 - smaller end is smaller than the thing at
05:36 - the lighter end that they return true so
05:39 - dazing week is that smaller than eight
05:41 - which is that the larger end yes so
05:43 - that's true here we've got another
05:45 - operator is greater than dazing week is
05:48 - that the bigger end of the operator so
05:50 - to speak is that bigger therefore than
05:52 - eight which is at the smaller end no
05:54 - it's not so this is going to evaluate to
05:58 - false after a while it sort of becomes
06:03 - second nature to to recognize these less
06:09 - than and greater than so we've also got
06:10 - greater than or equal to I less than or
06:14 - equal to as copy these and change them
06:17 - to less than or equal to and greater
06:20 - than or equal to less than or equal to
06:23 - greater than or equal to so these this
06:28 - will this taking this one for start less
06:31 - than or equal to this is going to return
06:33 - true if if days in week is
06:40 - either less than or equal to 8
06:45 - let's maybe put 7 here so if we asked
06:50 - firstly is it is it is dazing we less
06:56 - than 7 that's false it's not it's not
07:01 - less than 7 because it's equal to 7 but
07:07 - if I write is dazing me less than or
07:09 - equal to 7 less than or equal to 7
07:12 - that's now true dazing we is less than
07:15 - or equal to 7 because it happens to be
07:18 - equal to 7 so if I run this now
07:21 - I should change the text as well here
07:27 - this is now true and greater than or
07:34 - equal to of course works in the same
07:35 - sort of way I'll just leave this as it
07:39 - is is dazing we greater than or equal to
07:41 - 8 false it's not greater than 8 and also
07:47 - it's not equal to 8 and that's why that
07:49 - gives me false
07:53 - there we go false ok so that those are
08:00 - all the most important comparison
08:02 - operators for numbers we've also got
08:05 - this one the identity test operator
08:09 - which we're going to talk about later
08:11 - but you know in general you can
08:14 - basically use that instead of equals
08:17 - equals wherever you feel like it with
08:20 - numbers here it's just going to do the
08:23 - same thing
08:24 - oh yeah there's also not equal which I
08:26 - should mention so if I copy these we've
08:32 - got
08:35 - not equal looks like this and we've also
08:40 - got a version of it with just another
08:44 - equals sign in which for our purposes
08:47 - here does the exact same thing so it's
08:50 - dazing ly not equal to 6 that's true
08:55 - it's it's not equal to 6 so if you run
08:58 - this we find yes it's true that it's not
09:02 - equal to 6 and this longer version does
09:05 - the same thing here we'll talk about
09:06 - that later so if you're a beginner and
09:10 - you probably are if you actually watch
09:13 - this video then you want to just
09:17 - practice these try them all out for
09:19 - yourself just try them all out don't
09:21 - worry about making notes but try them
09:24 - for yourself and you probably want to
09:26 - make sure that you can remember what
09:28 - they're called I suppose so this is
09:30 - equality test this is actually identity
09:35 - test which we'll look at later this is
09:39 - the not equal operator this is not
09:44 - identical and we've got less than what's
09:52 - this one greater than less than or equal
09:58 - to greater than or equal to okay
10:09 - try them all out and we'll move on to
10:12 - look at comparing strings when we
10:15 - finished going through these comparison
10:16 - operators which won't take us much
10:18 - longer
10:18 - then we will go on to actually
10:21 - practically using them and looking at
10:22 - some more of the building blocks of
10:24 - programming so until next time happy
10:27 - coding

Cleaned transcript:

hello in this video we're going to look at comparing numbers in JavaScript if you've done programming before in some other language you can skip this video because there are no surprises in this particular one this is stuff that it's the same in many different programming languages so let's start off with you strict here because I want to force myself to declare variables now we can write console.log and we could compare for example 7 with 7 supposing we want to know if 7 is equal to 7 which it clearly is we can write 7 equals equals 7 now this equals equals here is the Equality test operator it's unlike the single equals sign which is used to assign values to variables the double equals sign is equality test operator it's used to check if two values are equal or not and it returns either true or false I say returns meaning this whole expression here will evaluate as a whole to either true or false let's run this so what like all that I called it comparing numbers so if I run node comparing numbers dot j s it says true now this is a bit useless because we know that 7 is equal to 7 but I could have one of these values stored in a variable like let's write let value well that's right let's call it days in week equals 7 and notice the way I write this variable here is called camel casing so I've written the first letter lowercase and an each subsequent word that it's made up of I write with an uppercase first letter for readability this is called camel casing and it's a very common convention in JavaScript so it's what I'm going to be using here it's important to stick to consistent coding conventions now so I can compare days in week here with seven is it equal to seven that and that's going to be of course true true whereas if I asked is equal to six or something then it's going to be false and this might not seem like much but this is sort of a key part of programming really comparing values like this this might be something you've got from user input or it's something you calculated at enormous length and then you want to check is it equal to something else in JavaScript there's also a symbol with three equal signs like this which at first glance seems to do the same sort of thing and we're going to be looking at that a video to a video video or two down the line for a moment we'll just look at equals equals now let's just copy this and I'll add like sort of a bit of text here so that we can because I'm going to have lots of these I want to keep track of which ones which okay so there's equals equals there's also less than or greater than so we could write days and we less than eight for example that will be true let's try this true and there's also greater than so days in week greater than eight so of course this this is the bit that's being actually evaluated and turned into either true or false this is just some text that I've just put there as a description so his days and we greater than eight no it's not because days in week is seven so if we run this now we should get false and we do false there's you can use less than and greater than with floating point numbers like eight point three for example if you want you know you want to compare two numbers with decimal points in them you can compare them with greater than or less than you can't do it so successfully with equals equals it should be avoided don't try to compare floatingpoint numbers or decimals or fractions whatever you want to call them with equals equals because they can't be stored in a precise way in a computer's memory so two floatingpoint numbers that seem to be equal you know they could differ by some tiny tiny amount and they won't be equal at all or you know something we could happen basically just avoid comparing floating point numbers with equality test operators in most programming languages in general it's not a good thing to do but all of these work fine with integers and it's common to use these two with floating point integers notice with the lessthan and greaterthan operators they return true if the thing at the smaller end of them if you think of them as having a small end and a large end these actual operators it's when the thing at the smaller end is smaller than the thing at the lighter end that they return true so dazing week is that smaller than eight which is that the larger end yes so that's true here we've got another operator is greater than dazing week is that the bigger end of the operator so to speak is that bigger therefore than eight which is at the smaller end no it's not so this is going to evaluate to false after a while it sort of becomes second nature to to recognize these less than and greater than so we've also got greater than or equal to I less than or equal to as copy these and change them to less than or equal to and greater than or equal to less than or equal to greater than or equal to so these this will this taking this one for start less than or equal to this is going to return true if if days in week is either less than or equal to 8 let's maybe put 7 here so if we asked firstly is it is it is dazing we less than 7 that's false it's not it's not less than 7 because it's equal to 7 but if I write is dazing me less than or equal to 7 less than or equal to 7 that's now true dazing we is less than or equal to 7 because it happens to be equal to 7 so if I run this now I should change the text as well here this is now true and greater than or equal to of course works in the same sort of way I'll just leave this as it is is dazing we greater than or equal to 8 false it's not greater than 8 and also it's not equal to 8 and that's why that gives me false there we go false ok so that those are all the most important comparison operators for numbers we've also got this one the identity test operator which we're going to talk about later but you know in general you can basically use that instead of equals equals wherever you feel like it with numbers here it's just going to do the same thing oh yeah there's also not equal which I should mention so if I copy these we've got not equal looks like this and we've also got a version of it with just another equals sign in which for our purposes here does the exact same thing so it's dazing ly not equal to 6 that's true it's it's not equal to 6 so if you run this we find yes it's true that it's not equal to 6 and this longer version does the same thing here we'll talk about that later so if you're a beginner and you probably are if you actually watch this video then you want to just practice these try them all out for yourself just try them all out don't worry about making notes but try them for yourself and you probably want to make sure that you can remember what they're called I suppose so this is equality test this is actually identity test which we'll look at later this is the not equal operator this is not identical and we've got less than what's this one greater than less than or equal to greater than or equal to okay try them all out and we'll move on to look at comparing strings when we finished going through these comparison operators which won't take us much longer then we will go on to actually practically using them and looking at some more of the building blocks of programming so until next time happy coding
