With timestamps:

00:00 - in this video I want to give you some
00:02 - tips on how to use this course
00:05 - now if you can already program in some
00:07 - programming language you can probably
00:09 - skip this video but if you're an
00:12 - absolute beginner with programming I
00:14 - would say this is probably the most
00:16 - important video in the entire course so
00:19 - please don't skip it
00:21 - in my experience progress with learning
00:24 - programming looks something like this
00:27 - curve
00:28 - so we've got time spent learning on the
00:30 - x-axis and progress on the y-axis here
00:35 - and what I'm trying to say with this is
00:37 - that as with learning many other things
00:40 - I think initially you can feel like
00:42 - you're not making progress
00:45 - but if you keep practicing eventually it
00:47 - starts to get together and then you make
00:49 - much more rapid progress
00:52 - so don't be discouraged if initially
00:54 - programming seems confusing because it
00:57 - seems confusing at first to nearly
01:00 - everyone
01:01 - I can still remember spending a lot of
01:03 - time trying to understand what a
01:05 - variable was exactly and that's a pretty
01:08 - basic concept as we'll see
01:11 - so expect to be confused at the
01:14 - beginning but if you keep practicing
01:15 - things will come together
01:18 - and eventually you'll get on a roll and
01:20 - you'll make great progress
01:23 - I strongly recommend you type out all
01:26 - the code you see for yourself I know
01:28 - that this is boring but it will really
01:30 - help you to learn it and when you've
01:33 - typed it out experiment with it a little
01:36 - bit so see if you can change it in some
01:38 - kind of a meaningful way
01:40 - without breaking the program and if you
01:43 - do break it you can just go back to the
01:46 - previous version but if you experiment
01:48 - with the code you've typed out you can
01:51 - confirm or refute your ideas about it
01:53 - find out whether you've really
01:55 - understood it or not
01:57 - and you need to prioritize practicing
02:00 - rather than memorizing I've seen people
02:03 - trying to learn programming making loads
02:06 - of notes lots and lots of notes and I'm
02:09 - not saying you can't do that if you
02:10 - really want to but I think the key to
02:13 - learning programming really is in the
02:15 - practice
02:18 - beginner programmers sometimes look at
02:20 - the amount of stuff that they feel
02:23 - they've got to learn and they think how
02:24 - am I going to remember all that and the
02:27 - answer is well you don't really
02:28 - consciously have to try to memorize
02:31 - things all you have to do is Practice
02:33 - Things even professional programmers
02:36 - forget things all the time but these
02:38 - days we just look it up on Google or
02:40 - wherever and that's very fast if you're
02:42 - a practiced programmer so you really
02:45 - have to see this as something that is
02:47 - very much about practicing
02:50 - you've got to type out stuff you've got
02:53 - to experiment with it you can't learn
02:55 - programming just by watching videos
02:56 - videos can only be a source of
02:59 - information but it's like learning the
03:01 - piano for example you can't learn to
03:03 - play a piano by watching a video
03:06 - you have to practice
03:08 - and if you put the effort in at the
03:10 - beginning there's quite a high chance
03:12 - that pretty soon you'll start to find
03:13 - programming addictive it is fascinating
03:16 - to type instructions to a computer and
03:19 - then see it actually carry out those
03:21 - instructions so it's not going to be
03:23 - hopefully just one long dreary slog but
03:26 - you have to put that practice in and at
03:28 - the beginning it can feel a bit like
03:30 - hard work but once you get over that
03:33 - you're going to be flying so always
03:35 - remember you've got to be typing code
03:37 - out experimenting with it seeing what
03:40 - you can do with it and if you do that
03:42 - then your skills will actually steadily
03:45 - improve even if at the very start you
03:49 - don't feel that they are improving
03:55 - when you write a program I strongly
03:57 - recommend you approach it like this so
04:00 - you type out a few lines of code or at
04:02 - the beginning even just one line you run
04:04 - it to see if it actually works and you
04:07 - can also in the lingo we say print out
04:09 - but I mean display the values of what we
04:13 - call variables to see if they are what
04:15 - you expect now this is going to make
04:17 - more sense later on but I will repeat
04:20 - this advice later on
04:23 - and once you've done that you add
04:24 - another bit of code and you run it again
04:26 - and you see if it still works and so on
04:31 - so the takeaway message here that I want
04:33 - to give you is don't just write a whole
04:35 - big program and then cross your fingers
04:38 - and hope that it works you've got to
04:39 - write it a little bit at a time and run
04:42 - it see if it works then if it does work
04:44 - add a little bit more to it and so on
04:47 - it's like an incremental thing rather
04:50 - than writing a whole load of code and
04:52 - running it and finding it doesn't work
04:53 - and throwing up your hands in despair
05:01 - over the years people have often asked
05:03 - me were there
05:05 - they should learn to touch type touch
05:07 - type means typing without looking at the
05:10 - keyboard so you put your hands in a
05:12 - position known as the home position and
05:15 - then without looking at the keyboard you
05:17 - can type fairly quickly you don't need
05:20 - to check where the keys are
05:23 - I think about half of computer
05:25 - programmers touch type so you absolutely
05:29 - do not have to learn to touch type even
05:31 - to be a world-class programmer
05:37 - however I do think it's a good thing if
05:39 - you do want to learn it if you look up
05:41 - touch typing on Google or your favorite
05:44 - search engine you can find lots of free
05:46 - programs online that will teach you how
05:49 - to touch type and it's not a long
05:51 - process it takes maybe a few weeks or
05:55 - even maybe just days
05:58 - to learn where all the keys are
06:01 - and once you've done that it's a matter
06:03 - of forcing yourself to touch type when
06:05 - you write emails or tweets or whatever
06:08 - so touch typing is something you can
06:11 - learn pretty easily and
06:14 - it will help you but it's not necessary
06:16 - I do touch type myself
06:19 - mostly for the most part there are some
06:21 - keys I have to look up because I'm
06:23 - always using different keyboards
06:25 - slightly different keyboards in
06:27 - different languages my mother was
06:29 - actually an expert touch typist and she
06:32 - recommended to me really early on in my
06:34 - life that you should learn to touch type
06:36 - even though back then we had massive
06:38 - steel typewriters and not computers and
06:41 - I do feel it stood me in good Stead
06:44 - because it makes the work of typing up
06:47 - code a lot less boring because you can
06:49 - do it much faster
06:51 - it seems less of a chore and that means
06:54 - you're more inclined to practice and
06:56 - practices what it all comes down to
07:00 - so I definitely recommend this if you
07:02 - even spend just 10 minutes a day with a
07:04 - touch typing program online there are
07:06 - lots of free ones I think it's a really
07:09 - valuable thing to do and apart from
07:11 - anything else it looks impressive people
07:13 - always imagine that programmers can
07:15 - touch type probably half of us can't but
07:18 - you automatically look more professional
07:20 - just from being able to touch type I'm
07:23 - going to give you lots of exercises in
07:24 - this course they are completely optional
07:27 - I would not want you to start an
07:30 - exercise and then think this is too hard
07:32 - and then give up the course because the
07:35 - exercise is hard really the exercises
07:38 - are just suggestions for how you might
07:40 - practice the vital thing is that you do
07:42 - practice you've got to be writing these
07:45 - programs for yourself and playing around
07:47 - with them
07:49 - exactly how you do that is completely up
07:51 - to you and I will give you suggested
07:53 - exercises but they are literally just
07:55 - suggestions they're not things that you
07:58 - absolutely have to do to get through the
08:00 - course and I provide them just because
08:02 - some people really feel lost they feel
08:05 - like they don't know what they would do
08:06 - to practice and so they have asked me to
08:09 - include exercises in my courses and
08:12 - that's why the exercises are here
08:16 - but if you can think of ways to
08:18 - experiment yourself to play around with
08:19 - the code then in some ways that's even
08:22 - better you can make up your own practice
08:24 - exercises
08:26 - many people have asked me if they can
08:28 - get a job with programming so can they
08:30 - start to learn programming not knowing
08:32 - anything and then get a job with it
08:35 - now I started putting together a course
08:38 - on Java programming something like 10
08:41 - years ago now and many people have
08:44 - followed that course and then got a job
08:46 - as a Java programmer
08:50 - so the answer is absolutely yes you can
08:52 - just start from scratch you can learn
08:55 - programming and get a job with it and
08:56 - that is what I did myself
09:01 - I decided to make this course on python
09:03 - now because I think if anything now is
09:06 - really
09:08 - at The Cutting Edge of programming
09:12 - it's probably now more python than Java
09:15 - I have to admit there are still plenty
09:17 - of jobs around with Java and other
09:19 - languages they're not going to go away
09:23 - but in some ways python is now where
09:26 - it's at
09:27 - although it does depend exactly what
09:29 - you're trying to accomplish some
09:31 - programming languages are better for
09:33 - some tasks than other things and python
09:36 - is a great general purpose language you
09:38 - can totally get jobs with python of
09:40 - course if there are jobs in your area or
09:43 - somewhere you can go and live you can
09:45 - look on online job sites to see what
09:48 - jobs there are with python around you
09:52 - programming jobs often
09:55 - have just an unreasonable number of
09:58 - skills listed in them
10:00 - but that won't stop you getting a job if
10:03 - you're persistent the fact is that there
10:05 - are a lot of employers out there
10:07 - complaining about skill shortages
10:10 - looking for python programmers
10:14 - and if you can learn python acceptably
10:18 - well which you can if you practice it
10:20 - then you can get a job with python if
10:23 - there are jobs anywhere near you
10:26 - so the answer to this is yes so with
10:30 - that said let's get into the whole
10:32 - business of actually writing python
10:35 - programs this is a free video from my
10:39 - course Python and machine learning for
10:42 - complete beginners I'm releasing the
10:44 - first couple of chapters of this course
10:46 - completely for free on YouTube to get
10:49 - you started with python I plan to upload
10:52 - new videos here to YouTube every Monday
10:55 - and every Thursday for at least a couple
10:58 - of months if you're interested in the
11:00 - complete course which teaches you python
11:03 - from scratch and eventually progresses
11:05 - to things like creating graphical user
11:08 - interfaces and using neural networks
11:11 - principal component analysis cluster
11:14 - analysis all that stuff and much more
11:17 - besides then you can find a link in the
11:19 - description or just go to this URL on
11:23 - the screen right here if you finish the
11:25 - whole course you'll be able to write all
11:27 - kinds of general purpose programs in
11:29 - Python and use Python to do machine
11:32 - learning and artificial intelligence as
11:34 - well thank you for watching until next
11:37 - time happy coding

Cleaned transcript:

in this video I want to give you some tips on how to use this course now if you can already program in some programming language you can probably skip this video but if you're an absolute beginner with programming I would say this is probably the most important video in the entire course so please don't skip it in my experience progress with learning programming looks something like this curve so we've got time spent learning on the xaxis and progress on the yaxis here and what I'm trying to say with this is that as with learning many other things I think initially you can feel like you're not making progress but if you keep practicing eventually it starts to get together and then you make much more rapid progress so don't be discouraged if initially programming seems confusing because it seems confusing at first to nearly everyone I can still remember spending a lot of time trying to understand what a variable was exactly and that's a pretty basic concept as we'll see so expect to be confused at the beginning but if you keep practicing things will come together and eventually you'll get on a roll and you'll make great progress I strongly recommend you type out all the code you see for yourself I know that this is boring but it will really help you to learn it and when you've typed it out experiment with it a little bit so see if you can change it in some kind of a meaningful way without breaking the program and if you do break it you can just go back to the previous version but if you experiment with the code you've typed out you can confirm or refute your ideas about it find out whether you've really understood it or not and you need to prioritize practicing rather than memorizing I've seen people trying to learn programming making loads of notes lots and lots of notes and I'm not saying you can't do that if you really want to but I think the key to learning programming really is in the practice beginner programmers sometimes look at the amount of stuff that they feel they've got to learn and they think how am I going to remember all that and the answer is well you don't really consciously have to try to memorize things all you have to do is Practice Things even professional programmers forget things all the time but these days we just look it up on Google or wherever and that's very fast if you're a practiced programmer so you really have to see this as something that is very much about practicing you've got to type out stuff you've got to experiment with it you can't learn programming just by watching videos videos can only be a source of information but it's like learning the piano for example you can't learn to play a piano by watching a video you have to practice and if you put the effort in at the beginning there's quite a high chance that pretty soon you'll start to find programming addictive it is fascinating to type instructions to a computer and then see it actually carry out those instructions so it's not going to be hopefully just one long dreary slog but you have to put that practice in and at the beginning it can feel a bit like hard work but once you get over that you're going to be flying so always remember you've got to be typing code out experimenting with it seeing what you can do with it and if you do that then your skills will actually steadily improve even if at the very start you don't feel that they are improving when you write a program I strongly recommend you approach it like this so you type out a few lines of code or at the beginning even just one line you run it to see if it actually works and you can also in the lingo we say print out but I mean display the values of what we call variables to see if they are what you expect now this is going to make more sense later on but I will repeat this advice later on and once you've done that you add another bit of code and you run it again and you see if it still works and so on so the takeaway message here that I want to give you is don't just write a whole big program and then cross your fingers and hope that it works you've got to write it a little bit at a time and run it see if it works then if it does work add a little bit more to it and so on it's like an incremental thing rather than writing a whole load of code and running it and finding it doesn't work and throwing up your hands in despair over the years people have often asked me were there they should learn to touch type touch type means typing without looking at the keyboard so you put your hands in a position known as the home position and then without looking at the keyboard you can type fairly quickly you don't need to check where the keys are I think about half of computer programmers touch type so you absolutely do not have to learn to touch type even to be a worldclass programmer however I do think it's a good thing if you do want to learn it if you look up touch typing on Google or your favorite search engine you can find lots of free programs online that will teach you how to touch type and it's not a long process it takes maybe a few weeks or even maybe just days to learn where all the keys are and once you've done that it's a matter of forcing yourself to touch type when you write emails or tweets or whatever so touch typing is something you can learn pretty easily and it will help you but it's not necessary I do touch type myself mostly for the most part there are some keys I have to look up because I'm always using different keyboards slightly different keyboards in different languages my mother was actually an expert touch typist and she recommended to me really early on in my life that you should learn to touch type even though back then we had massive steel typewriters and not computers and I do feel it stood me in good Stead because it makes the work of typing up code a lot less boring because you can do it much faster it seems less of a chore and that means you're more inclined to practice and practices what it all comes down to so I definitely recommend this if you even spend just 10 minutes a day with a touch typing program online there are lots of free ones I think it's a really valuable thing to do and apart from anything else it looks impressive people always imagine that programmers can touch type probably half of us can't but you automatically look more professional just from being able to touch type I'm going to give you lots of exercises in this course they are completely optional I would not want you to start an exercise and then think this is too hard and then give up the course because the exercise is hard really the exercises are just suggestions for how you might practice the vital thing is that you do practice you've got to be writing these programs for yourself and playing around with them exactly how you do that is completely up to you and I will give you suggested exercises but they are literally just suggestions they're not things that you absolutely have to do to get through the course and I provide them just because some people really feel lost they feel like they don't know what they would do to practice and so they have asked me to include exercises in my courses and that's why the exercises are here but if you can think of ways to experiment yourself to play around with the code then in some ways that's even better you can make up your own practice exercises many people have asked me if they can get a job with programming so can they start to learn programming not knowing anything and then get a job with it now I started putting together a course on Java programming something like 10 years ago now and many people have followed that course and then got a job as a Java programmer so the answer is absolutely yes you can just start from scratch you can learn programming and get a job with it and that is what I did myself I decided to make this course on python now because I think if anything now is really at The Cutting Edge of programming it's probably now more python than Java I have to admit there are still plenty of jobs around with Java and other languages they're not going to go away but in some ways python is now where it's at although it does depend exactly what you're trying to accomplish some programming languages are better for some tasks than other things and python is a great general purpose language you can totally get jobs with python of course if there are jobs in your area or somewhere you can go and live you can look on online job sites to see what jobs there are with python around you programming jobs often have just an unreasonable number of skills listed in them but that won't stop you getting a job if you're persistent the fact is that there are a lot of employers out there complaining about skill shortages looking for python programmers and if you can learn python acceptably well which you can if you practice it then you can get a job with python if there are jobs anywhere near you so the answer to this is yes so with that said let's get into the whole business of actually writing python programs this is a free video from my course Python and machine learning for complete beginners I'm releasing the first couple of chapters of this course completely for free on YouTube to get you started with python I plan to upload new videos here to YouTube every Monday and every Thursday for at least a couple of months if you're interested in the complete course which teaches you python from scratch and eventually progresses to things like creating graphical user interfaces and using neural networks principal component analysis cluster analysis all that stuff and much more besides then you can find a link in the description or just go to this URL on the screen right here if you finish the whole course you'll be able to write all kinds of general purpose programs in Python and use Python to do machine learning and artificial intelligence as well thank you for watching until next time happy coding
