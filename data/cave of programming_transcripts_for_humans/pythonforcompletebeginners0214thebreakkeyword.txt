With timestamps:

00:00 - in this video we're going to take a look
00:01 - at the break keyword let's create a loop
00:05 - to start with so I'm going to say four I
00:09 - in
00:10 - range maybe
00:13 - five and then here we're going to print
00:16 - something let's print
00:20 - Loop
00:21 - [Music]
00:23 - number and cast that to a string and use
00:26 - I so let's in fact say here starting
00:31 - Loop number whatever it is and then
00:33 - we'll also have ending Loop number
00:36 - whatever it
00:37 - is now if I just run this as it
00:41 - is of course we
00:44 - get just a load of print statements
00:47 - executing basically starting loot number
00:49 - zero ending loot number zero and then 1
00:51 - 2 3 all the way through to
00:54 - four remember this specifies the end of
00:57 - the range and the end is not included in
01:00 - the range now supposing every time we go
01:03 - around the loop here so all the code
01:05 - that I'm writing here is indented
01:07 - because it's part of this Loop code
01:10 - block supposing we get some feedback
01:13 - from the user let's say
01:16 - stop equals so that's just a variable
01:19 - that I'm creating stop equals
01:22 - input Stop the
01:25 - Loop brackets yes or no question mark so
01:29 - every time we go around the loop now
01:31 - we're going to ask the user if we should
01:34 - stop the loop and the idea is that they
01:36 - should be able to enter y if they want
01:38 - to stop the loop and N if they don't and
01:42 - we're going to store whatever they type
01:44 - in this variable stop let's try it just
01:48 - to see what it does at the
01:49 - moment so it asks me if I want to stop
01:53 - the loop after printing starting Loop
01:55 - number zero and it doesn't matter what I
01:57 - type here whatever I type type it's just
02:00 - then going to carry on looping again so
02:04 - after I type something or just hit
02:06 - return for that matter it's going to say
02:09 - ending Loop number whatever it is and
02:11 - then it goes to the next iteration of
02:13 - the loop starting Loop number one here
02:15 - and then it ask me again do I want to
02:16 - stop it or not I can just hit return and
02:19 - go all the way through all the loops
02:21 - until they finally
02:23 - finish now supposing I actually want to
02:25 - make this work so if the user types y
02:28 - the loop should actually stop how should
02:31 - I do
02:32 - that well I'm probably going to need
02:34 - some kind of if statement because I need
02:37 - to check if something's true or not I
02:39 - need to check if they've entered Y in
02:42 - this case so within the loop code block
02:46 - we can have an if statement notice this
02:48 - is indented like everything else here so
02:52 - if stop that's the text that the user
02:56 - has entered equals y
03:00 - colon and now how do we stop the loop
03:03 - well the answer is a good way to do it
03:06 - is we can use the break keyword so this
03:09 - is a keyword that's found in most
03:11 - programming languages I think and it's
03:14 - used in exactly the same way in all the
03:16 - ones that I've seen sometimes it might
03:18 - be called something else but I can't
03:20 - actually think of an example of that
03:22 - probably it's always called Break
03:24 - actually and what it does is it
03:27 - terminates the loop immediately
03:30 - so it will cause the looping to stop and
03:34 - whatever's after that in the loop code
03:37 - block won't be
03:39 - executed actually to make this a bit
03:41 - clearer at the bottom here let's print
03:46 - program
03:48 - finished so this isn't indented so it
03:51 - isn't part of the code that's going to
03:53 - actually be
03:54 - looped okay now let's try
03:57 - this Stop the Loop if I just Type n or
04:02 - if I just hit return or type anything
04:04 - apart from y it carries on looping but
04:07 - if I type
04:09 - y we go straight to program finished and
04:12 - notice that after I typed
04:15 - y so this was then true and this
04:19 - executed we didn't execute this this
04:23 - whole thing is the code block that we're
04:25 - actually looping we're actually making
04:27 - that run repeatedly but as soon as we
04:29 - hit break it goes straight out of this
04:32 - whole code block and executes anything
04:35 - after that in the program break here is
04:38 - a keyword in the Python language and it
04:40 - is important and very useful so I would
04:44 - recommend typing this out for yourself
04:46 - I'm going to give you an exercise later
04:49 - on but for a moment try out the break
04:52 - keyword yourself with your own piece of
04:55 - code using a loop of course if I didn't
04:58 - have this if here and if I just put the
05:00 - break right here
05:03 - instead then we would only get one Loop
05:05 - actually executing I can probably show
05:08 - you that if I just comment out if so if
05:11 - I put a hash sign there this just
05:14 - becomes a comment and now I've got a
05:16 - sort of squiggly red error because the
05:19 - indentation is wrong so I just need to
05:22 - unindent break and if I just run
05:25 - this it doesn't matter what I type now
05:29 - that just going to finish the loop
05:31 - straight away but that isn't much use
05:33 - it's much more useful to only execute
05:36 - break under certain conditions to stop
05:39 - the
05:41 - loop hello you've been watching a free
05:44 - sample from my Python and machine
05:46 - learning for complete beginners course
05:49 - I'm uploading enough videos from the
05:51 - start of the course to get you started
05:53 - with python and machine learning the
05:55 - full course is absolutely massive if
05:57 - you're interested in it please click the
05:59 - link in the description the complete
06:02 - course covers not only basic python but
06:04 - also some fairly Advanced python even
06:07 - some desktop programming stuff and then
06:09 - goes on to machine learning and
06:12 - artificial intelligence until next time
06:15 - happy coding

Cleaned transcript:

in this video we're going to take a look at the break keyword let's create a loop to start with so I'm going to say four I in range maybe five and then here we're going to print something let's print Loop number and cast that to a string and use I so let's in fact say here starting Loop number whatever it is and then we'll also have ending Loop number whatever it is now if I just run this as it is of course we get just a load of print statements executing basically starting loot number zero ending loot number zero and then 1 2 3 all the way through to four remember this specifies the end of the range and the end is not included in the range now supposing every time we go around the loop here so all the code that I'm writing here is indented because it's part of this Loop code block supposing we get some feedback from the user let's say stop equals so that's just a variable that I'm creating stop equals input Stop the Loop brackets yes or no question mark so every time we go around the loop now we're going to ask the user if we should stop the loop and the idea is that they should be able to enter y if they want to stop the loop and N if they don't and we're going to store whatever they type in this variable stop let's try it just to see what it does at the moment so it asks me if I want to stop the loop after printing starting Loop number zero and it doesn't matter what I type here whatever I type type it's just then going to carry on looping again so after I type something or just hit return for that matter it's going to say ending Loop number whatever it is and then it goes to the next iteration of the loop starting Loop number one here and then it ask me again do I want to stop it or not I can just hit return and go all the way through all the loops until they finally finish now supposing I actually want to make this work so if the user types y the loop should actually stop how should I do that well I'm probably going to need some kind of if statement because I need to check if something's true or not I need to check if they've entered Y in this case so within the loop code block we can have an if statement notice this is indented like everything else here so if stop that's the text that the user has entered equals y colon and now how do we stop the loop well the answer is a good way to do it is we can use the break keyword so this is a keyword that's found in most programming languages I think and it's used in exactly the same way in all the ones that I've seen sometimes it might be called something else but I can't actually think of an example of that probably it's always called Break actually and what it does is it terminates the loop immediately so it will cause the looping to stop and whatever's after that in the loop code block won't be executed actually to make this a bit clearer at the bottom here let's print program finished so this isn't indented so it isn't part of the code that's going to actually be looped okay now let's try this Stop the Loop if I just Type n or if I just hit return or type anything apart from y it carries on looping but if I type y we go straight to program finished and notice that after I typed y so this was then true and this executed we didn't execute this this whole thing is the code block that we're actually looping we're actually making that run repeatedly but as soon as we hit break it goes straight out of this whole code block and executes anything after that in the program break here is a keyword in the Python language and it is important and very useful so I would recommend typing this out for yourself I'm going to give you an exercise later on but for a moment try out the break keyword yourself with your own piece of code using a loop of course if I didn't have this if here and if I just put the break right here instead then we would only get one Loop actually executing I can probably show you that if I just comment out if so if I put a hash sign there this just becomes a comment and now I've got a sort of squiggly red error because the indentation is wrong so I just need to unindent break and if I just run this it doesn't matter what I type now that just going to finish the loop straight away but that isn't much use it's much more useful to only execute break under certain conditions to stop the loop hello you've been watching a free sample from my Python and machine learning for complete beginners course I'm uploading enough videos from the start of the course to get you started with python and machine learning the full course is absolutely massive if you're interested in it please click the link in the description the complete course covers not only basic python but also some fairly Advanced python even some desktop programming stuff and then goes on to machine learning and artificial intelligence until next time happy coding
