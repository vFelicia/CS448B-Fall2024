With timestamps:

00:00 - in this video we're going to take a look
00:01 - at numeric variables in Python and doing
00:05 - calculations people often wonder if you
00:08 - have to be good at mathematics to be
00:11 - good at programming and the answer is no
00:13 - you don't it is true that if you are
00:16 - good at mathematics you probably will be
00:18 - good at programming because they are
00:20 - somehow similar things but we don't use
00:24 - mathematics all that much in programming
00:27 - except when we are actually writing some
00:30 - kind of inherently mathematical program
00:32 - so you don't need to know mathematics to
00:35 - do programming it's a short answer now
00:38 - in a previous video we saw a program
00:41 - that assigned a string to a variable
00:45 - but we can also assign numbers to
00:47 - variables I've created a new empty file
00:50 - here
00:51 - let's create a variable and we'll
00:54 - imagine that we've got a plot of land
00:55 - and we've measured how wide it is and
00:58 - how long it is
00:59 - and we want to work out the area of it
01:03 - by multiplying those two things together
01:06 - so I'm going to say here
01:07 - width equals 15.
01:11 - now what I've done here is I've declared
01:13 - a variable width I just made that up
01:16 - it's just well I decided to call it and
01:19 - I've used the assignment operator to
01:21 - assign a value to it but notice this
01:24 - time the value that I've assigned is not
01:28 - a string it's a number because it's not
01:31 - a string it doesn't go in quotes So if I
01:34 - were to write this
01:37 - that's legitimate python is fine but
01:39 - what I'm doing here is taking some text
01:42 - which happens to look like the number 15
01:44 - and assigning it to the width variable
01:48 - if I get rid of the quotes I'm doing
01:50 - something fundamentally different I'm
01:53 - assigning the actual number 15 to this
01:56 - variable it not only looks like 15 it is
01:59 - actually 15. now let's create one called
02:02 - length
02:04 - and set that equal to maybe 22 or
02:06 - something
02:08 - now we can multiply the two together to
02:11 - store the result of the calculation I'm
02:13 - going to want another variable let's
02:15 - call it area
02:16 - and I'm going to say area equals width
02:20 - multiplied by length
02:22 - now notice that in Python and many other
02:25 - programming languages the sign for
02:27 - multiplication is an asterisk it's not
02:30 - an X
02:32 - like this because
02:35 - well that's just the letter x
02:38 - so we use this instead to avoid
02:40 - confusion with any letters
02:42 - now let's try to print out the result of
02:45 - our calculation so I'm going to say
02:47 - print
02:48 - and let's Supply a string here that
02:50 - explains what we're printing
02:53 - area of land colon and a space
02:58 - so this is just text so it goes in
03:00 - quotes
03:02 - and now I'm going to try to do something
03:03 - that actually won't work I'm going to
03:06 - say plus area
03:08 - let's run this
03:10 - and see what actually happens
03:15 - so what we get is a thing called a
03:17 - traceback now this looks alarming you
03:21 - may already have seen tracebacks already
03:23 - if you've been experimenting
03:26 - but don't be scared by them the entire
03:29 - purpose of them is to give you
03:31 - information about what went wrong
03:35 - and usually what you're looking for in
03:37 - tray Sparks is the line in your code
03:40 - where it went wrong and we can see here
03:42 - line six
03:44 - you may see multiple lines mentioned in
03:46 - tracebacks some of them may be in code
03:48 - that you've not written so you're really
03:50 - looking for a line
03:53 - in your actual program so this is
03:56 - numeric variable stop Pi where the error
03:59 - occurred
04:00 - so this is where the error occurred line
04:02 - six
04:03 - and it says
04:05 - can only concatenate stre not int to
04:09 - stro what's it talking about well
04:12 - this is a string
04:15 - and we know that we can join strings
04:17 - with plus which functions then as a
04:22 - concatenation operator for concatenating
04:25 - or joining things together
04:28 - but here we've actually got a variable
04:31 - that refers to a number
04:34 - these are what we call integers actually
04:38 - in other words whole numbers and often
04:41 - we call them ins short for integer which
04:44 - just means a whole number
04:46 - so when we multiply these two whole
04:48 - numbers together we get another whole
04:50 - number
04:51 - and that means that what we're trying to
04:53 - do here is join a whole number with a
04:56 - string and the plus operator
04:59 - does not know how to do that
05:03 - however the problem is easily solved
05:07 - and one way to solve it
05:10 - short of changing the plus to a comma
05:12 - which I don't want to do just yet
05:15 - is we can write stre open round bracket
05:18 - and the closing round bracket
05:20 - goes around area
05:23 - so a passing area
05:26 - to the string function
05:28 - and what that does is it turns this int
05:32 - integer in other words into a string and
05:35 - now we can join these two strings with
05:38 - the plus operator let's try it again
05:40 - and you can see it now runs
05:42 - and it says area of land 330 which if
05:45 - these were meters
05:48 - then this would be in square meters if
05:51 - we take a look at the python built-in
05:52 - functions we can see that there is
05:54 - indeed a Str built-in function and it
05:58 - says it returns a string version of
06:01 - object where object is whatever you pass
06:03 - to it
06:05 - so we can say that this and for that
06:08 - matter this
06:10 - are objects so every almost everything
06:13 - in Python really is an object
06:16 - this is an object and so on but the
06:17 - problem is this is an INT object and
06:20 - this is a string object and we can't
06:22 - join those two together with plus until
06:25 - we've turned the int into a string
06:28 - try it out for yourself and see if you
06:30 - can think of something that you might
06:32 - want to calculate
06:35 - by the way if you want to do small
06:38 - experiments you can also just type
06:40 - python by itself and that will open a
06:43 - kind of python console down here
06:46 - so I could do 15 times 22 and it will
06:49 - give me the answer
06:52 - I can also write variables and things in
06:54 - here if I want to
06:55 - I don't find this much use for learning
06:57 - python because I just find it easier to
07:00 - type python into text files which I can
07:02 - actually save
07:03 - but it is pretty useful for doing quick
07:07 - calculations if you have a need for that
07:09 - to get out of this python terminal we
07:13 - just do quick round brackets so we call
07:15 - the quit function in here this is a free
07:18 - video from my course Python and machine
07:21 - learning for complete beginners I'm
07:24 - releasing the first couple of chapters
07:26 - of this course completely for free on
07:28 - YouTube to get you started with python I
07:32 - plan to upload new videos here to
07:34 - YouTube every Monday and every Thursday
07:37 - for at least a couple of months if
07:40 - you're interested in the complete course
07:42 - which teaches you python from scratch
07:45 - and eventually progresses to things like
07:47 - creating graphical user interfaces and
07:50 - using neural networks principal
07:52 - component analysis cluster analysis all
07:56 - that stuff and much more besides then
07:58 - you can find a link in the description
08:00 - or just go to this URL on the screen
08:03 - right here if you finish the whole
08:05 - course you'll be able to write all kinds
08:08 - of general purpose programs in Python
08:10 - and use Python to do machine learning
08:13 - and artificial intelligence as well
08:15 - thank you for watching until next time
08:17 - happy coding

Cleaned transcript:

in this video we're going to take a look at numeric variables in Python and doing calculations people often wonder if you have to be good at mathematics to be good at programming and the answer is no you don't it is true that if you are good at mathematics you probably will be good at programming because they are somehow similar things but we don't use mathematics all that much in programming except when we are actually writing some kind of inherently mathematical program so you don't need to know mathematics to do programming it's a short answer now in a previous video we saw a program that assigned a string to a variable but we can also assign numbers to variables I've created a new empty file here let's create a variable and we'll imagine that we've got a plot of land and we've measured how wide it is and how long it is and we want to work out the area of it by multiplying those two things together so I'm going to say here width equals 15. now what I've done here is I've declared a variable width I just made that up it's just well I decided to call it and I've used the assignment operator to assign a value to it but notice this time the value that I've assigned is not a string it's a number because it's not a string it doesn't go in quotes So if I were to write this that's legitimate python is fine but what I'm doing here is taking some text which happens to look like the number 15 and assigning it to the width variable if I get rid of the quotes I'm doing something fundamentally different I'm assigning the actual number 15 to this variable it not only looks like 15 it is actually 15. now let's create one called length and set that equal to maybe 22 or something now we can multiply the two together to store the result of the calculation I'm going to want another variable let's call it area and I'm going to say area equals width multiplied by length now notice that in Python and many other programming languages the sign for multiplication is an asterisk it's not an X like this because well that's just the letter x so we use this instead to avoid confusion with any letters now let's try to print out the result of our calculation so I'm going to say print and let's Supply a string here that explains what we're printing area of land colon and a space so this is just text so it goes in quotes and now I'm going to try to do something that actually won't work I'm going to say plus area let's run this and see what actually happens so what we get is a thing called a traceback now this looks alarming you may already have seen tracebacks already if you've been experimenting but don't be scared by them the entire purpose of them is to give you information about what went wrong and usually what you're looking for in tray Sparks is the line in your code where it went wrong and we can see here line six you may see multiple lines mentioned in tracebacks some of them may be in code that you've not written so you're really looking for a line in your actual program so this is numeric variable stop Pi where the error occurred so this is where the error occurred line six and it says can only concatenate stre not int to stro what's it talking about well this is a string and we know that we can join strings with plus which functions then as a concatenation operator for concatenating or joining things together but here we've actually got a variable that refers to a number these are what we call integers actually in other words whole numbers and often we call them ins short for integer which just means a whole number so when we multiply these two whole numbers together we get another whole number and that means that what we're trying to do here is join a whole number with a string and the plus operator does not know how to do that however the problem is easily solved and one way to solve it short of changing the plus to a comma which I don't want to do just yet is we can write stre open round bracket and the closing round bracket goes around area so a passing area to the string function and what that does is it turns this int integer in other words into a string and now we can join these two strings with the plus operator let's try it again and you can see it now runs and it says area of land 330 which if these were meters then this would be in square meters if we take a look at the python builtin functions we can see that there is indeed a Str builtin function and it says it returns a string version of object where object is whatever you pass to it so we can say that this and for that matter this are objects so every almost everything in Python really is an object this is an object and so on but the problem is this is an INT object and this is a string object and we can't join those two together with plus until we've turned the int into a string try it out for yourself and see if you can think of something that you might want to calculate by the way if you want to do small experiments you can also just type python by itself and that will open a kind of python console down here so I could do 15 times 22 and it will give me the answer I can also write variables and things in here if I want to I don't find this much use for learning python because I just find it easier to type python into text files which I can actually save but it is pretty useful for doing quick calculations if you have a need for that to get out of this python terminal we just do quick round brackets so we call the quit function in here this is a free video from my course Python and machine learning for complete beginners I'm releasing the first couple of chapters of this course completely for free on YouTube to get you started with python I plan to upload new videos here to YouTube every Monday and every Thursday for at least a couple of months if you're interested in the complete course which teaches you python from scratch and eventually progresses to things like creating graphical user interfaces and using neural networks principal component analysis cluster analysis all that stuff and much more besides then you can find a link in the description or just go to this URL on the screen right here if you finish the whole course you'll be able to write all kinds of general purpose programs in Python and use Python to do machine learning and artificial intelligence as well thank you for watching until next time happy coding
