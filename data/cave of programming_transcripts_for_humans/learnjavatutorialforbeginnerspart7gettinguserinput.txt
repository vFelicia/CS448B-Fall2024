With timestamps:

00:09 - you
00:15 - hello this is John from cave of
00:18 - programming calm this is tutorial number
00:21 - seven in the series of beginners Java
00:23 - tutorials and in this tutorial we're
00:26 - gonna look at getting user input so I've
00:29 - got my main program here I've got a main
00:32 - method inside a class and I'm gonna use
00:37 - the scanner class to get user input now
00:43 - the scanner class looks like this so
00:46 - you've already seen the string class
00:47 - this is scanner and I'm going to create
00:50 - a variable that can refer to a an object
00:55 - of type scanner so I'm going to call it
00:57 - input so input is an arbitrary variable
01:03 - name I could call that anything I like I
01:06 - could call it not if I wanted to it
01:09 - makes no difference
01:10 - I'll call this input and and the reason
01:15 - I'm getting an error here at the moment
01:16 - is because I need a statement at the top
01:19 - of the class file that imports the
01:23 - scanner class so that my program knows
01:27 - where to find it and I can either type
01:31 - that myself or I can get Eclipse to do
01:33 - it for me and I could click on this icon
01:35 - here and go to import scanner or my
01:39 - favorite shortcut I could go to I could
01:42 - press ctrl shift + o and eclipse will
01:46 - add all necessary imports for me so I've
01:50 - got this import statement here which
01:51 - must be the first line in your file
01:55 - except you could have a package
01:57 - statement on the first line but we'll
01:59 - look it up in the future okay so I've
02:02 - got a variable here but I haven't
02:04 - actually got a scanner object this
02:07 - doesn't actually refer to anything so
02:10 - I'm going to type here new scanner
02:12 - system dot in and don't worry about this
02:16 - syntax if it's new too because we will
02:19 - we will examine it in more detail later
02:22 - on but basically what I'm doing here
02:24 - is I'm creating a new scanner object and
02:27 - I'm passing it the standard predefined
02:30 - system in input stream object but for
02:36 - the moment I'd suggest you know just
02:38 - practice typing this and to get some
02:42 - user input I I'm going to get a line to
02:45 - start with a line of text and I'm going
02:47 - to store that in a string so I'll create
02:49 - a variable of type string and I'll call
02:51 - it line and again it could be anything
02:55 - and I'll say that equals input dot next
02:59 - line and here I'm going to add a prompt
03:06 - a prompt is just some text that last
03:09 - user to do something so I'm going to say
03:11 - system dot println enter a line of text
03:17 - and by line I mean that the user can
03:21 - enter zero zero or more characters but
03:25 - he or she must then hit the return key
03:27 - and that's kind of the definition of a
03:31 - line and once I've got the line I'm
03:33 - going to say this out control space
03:38 - you entered line so I'm going to tell
03:43 - them what they entered so this here I'm
03:47 - just creating the scanner object then
03:49 - I'm saying enter line of text and then
03:51 - at this point here I'm actually going to
03:55 - wait for them to enter a line and just
04:00 - to make this clearer what I'm going to
04:02 - do is I'm going to put some comments in
04:04 - here now you can put a one-line comment
04:06 - in Java by typing slash slash and then
04:10 - just type some text so I'll say great
04:13 - scanner object and here I'll say output
04:20 - outputs the prom
04:22 - and here I'll say wait wait for the user
04:29 - to enter a line of text and then here
04:35 - I'll say tell tell them what they
04:40 - entered so I'll run this program and
04:44 - says enter a line of text and I can
04:46 - enter anything here my name is John you
04:50 - entered my name is John
04:53 - now we're not restricted to getting just
04:57 - lines of text with scanner for example I
05:02 - could get a number we could say enter an
05:06 - integer which means a whole number and I
05:09 - could say instead of string line here I
05:12 - put to wait for the user to enter
05:16 - something and here instead of string
05:20 - line I'll say int value and I'll say
05:25 - input dot next int extend and if you if
05:30 - you type the first few letters of
05:33 - something in eclipse and press control
05:35 - space you get this autocomplete and pop
05:39 - up and you can accept you can scroll
05:41 - between different defaults with the
05:42 - arrow keys or the mouse and you can
05:44 - accept a suggestion by pressing enter
05:47 - which is really handy sometimes you need
05:49 - to get rid of extra brackets if you've
05:52 - already typed some okay and here I'll
05:55 - say you entered value and if I run that
06:00 - enter an integer 88 you entered 88 this
06:07 - program unfortunately isn't very robust
06:10 - because if I run it and I enter letters
06:12 - instead of an integer it will crash but
06:16 - at least it has Christ in a controlled
06:17 - way by throwing something called an
06:20 - exception which will occur in future and
06:25 - I can also get a floating-point value I
06:27 - could say enter a enter a floating-point
06:32 - value in other words
06:35 - a fractional value with a decimal point
06:39 - and I can say double value equals input
06:47 - next double say you entered value again
06:52 - there's a little complication here
06:54 - because if you're in the UK or the USA
06:57 - for floating point values you'll be used
07:00 - to typing things like sixty seven
07:02 - seventy seven point four but if you are
07:06 - in summer in Europe outside the UK you
07:12 - will be used to using a comma instead so
07:14 - you'll say 77 comma four and I'm using a
07:19 - actually a Dutch version of Windows here
07:22 - so if I run this program I have to enter
07:26 - for example five comma six but if you're
07:31 - in the UK or the US this is going to be
07:32 - five point six and then when I hit
07:35 - return is actually telling me what I
07:37 - entered in UK u.s. format okay
07:42 - that's all for this tutorial just about
07:45 - if you want more information on the
07:47 - scanner class then just type scanner
07:50 - Java into Google and you can look at the
07:53 - API document and if you want to make
07:55 - your program more robust scanner has a
07:59 - method that will enable you to see if
08:02 - there is an X double or a next int and
08:06 - you can use an if statement to get a
08:08 - line if there isn't one waiting but I
08:10 - will leave that as an exercise for you
08:12 - and in the next tutorial we are going to
08:16 - look at do-while loops which is just a
08:19 - variation on the while loop
08:22 - and until then happy coding
08:32 - you
08:46 - you

Cleaned transcript:

you hello this is John from cave of programming calm this is tutorial number seven in the series of beginners Java tutorials and in this tutorial we're gonna look at getting user input so I've got my main program here I've got a main method inside a class and I'm gonna use the scanner class to get user input now the scanner class looks like this so you've already seen the string class this is scanner and I'm going to create a variable that can refer to a an object of type scanner so I'm going to call it input so input is an arbitrary variable name I could call that anything I like I could call it not if I wanted to it makes no difference I'll call this input and and the reason I'm getting an error here at the moment is because I need a statement at the top of the class file that imports the scanner class so that my program knows where to find it and I can either type that myself or I can get Eclipse to do it for me and I could click on this icon here and go to import scanner or my favorite shortcut I could go to I could press ctrl shift + o and eclipse will add all necessary imports for me so I've got this import statement here which must be the first line in your file except you could have a package statement on the first line but we'll look it up in the future okay so I've got a variable here but I haven't actually got a scanner object this doesn't actually refer to anything so I'm going to type here new scanner system dot in and don't worry about this syntax if it's new too because we will we will examine it in more detail later on but basically what I'm doing here is I'm creating a new scanner object and I'm passing it the standard predefined system in input stream object but for the moment I'd suggest you know just practice typing this and to get some user input I I'm going to get a line to start with a line of text and I'm going to store that in a string so I'll create a variable of type string and I'll call it line and again it could be anything and I'll say that equals input dot next line and here I'm going to add a prompt a prompt is just some text that last user to do something so I'm going to say system dot println enter a line of text and by line I mean that the user can enter zero zero or more characters but he or she must then hit the return key and that's kind of the definition of a line and once I've got the line I'm going to say this out control space you entered line so I'm going to tell them what they entered so this here I'm just creating the scanner object then I'm saying enter line of text and then at this point here I'm actually going to wait for them to enter a line and just to make this clearer what I'm going to do is I'm going to put some comments in here now you can put a oneline comment in Java by typing slash slash and then just type some text so I'll say great scanner object and here I'll say output outputs the prom and here I'll say wait wait for the user to enter a line of text and then here I'll say tell tell them what they entered so I'll run this program and says enter a line of text and I can enter anything here my name is John you entered my name is John now we're not restricted to getting just lines of text with scanner for example I could get a number we could say enter an integer which means a whole number and I could say instead of string line here I put to wait for the user to enter something and here instead of string line I'll say int value and I'll say input dot next int extend and if you if you type the first few letters of something in eclipse and press control space you get this autocomplete and pop up and you can accept you can scroll between different defaults with the arrow keys or the mouse and you can accept a suggestion by pressing enter which is really handy sometimes you need to get rid of extra brackets if you've already typed some okay and here I'll say you entered value and if I run that enter an integer 88 you entered 88 this program unfortunately isn't very robust because if I run it and I enter letters instead of an integer it will crash but at least it has Christ in a controlled way by throwing something called an exception which will occur in future and I can also get a floatingpoint value I could say enter a enter a floatingpoint value in other words a fractional value with a decimal point and I can say double value equals input next double say you entered value again there's a little complication here because if you're in the UK or the USA for floating point values you'll be used to typing things like sixty seven seventy seven point four but if you are in summer in Europe outside the UK you will be used to using a comma instead so you'll say 77 comma four and I'm using a actually a Dutch version of Windows here so if I run this program I have to enter for example five comma six but if you're in the UK or the US this is going to be five point six and then when I hit return is actually telling me what I entered in UK u.s. format okay that's all for this tutorial just about if you want more information on the scanner class then just type scanner Java into Google and you can look at the API document and if you want to make your program more robust scanner has a method that will enable you to see if there is an X double or a next int and you can use an if statement to get a line if there isn't one waiting but I will leave that as an exercise for you and in the next tutorial we are going to look at dowhile loops which is just a variation on the while loop and until then happy coding you you
