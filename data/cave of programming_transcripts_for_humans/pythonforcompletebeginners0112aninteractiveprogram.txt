With timestamps:

00:00 - in this video we're going to create our
00:02 - first interactive program I'm going to
00:05 - take a copy of this file I'm always
00:07 - going to be doing that or almost always
00:09 - when I create a new program I'm going to
00:12 - save this I'll just do it by
00:14 - using file and save as this time and
00:17 - we'll call it
00:19 - interactive dot pi
00:24 - okay
00:25 - so using interactive.pi here the first
00:28 - thing that I'm going to do is I want to
00:31 - change this program a little bit to get
00:33 - rid of world let's get rid of world here
00:37 - and I want to create a new variable
00:40 - which I'll call name
00:43 - and set that equal to some name like Joe
00:45 - for example
00:47 - so what I what I type here is is just
00:51 - stuff I've made up there's nothing
00:52 - special about it but notice that
00:55 - variable names like these they don't go
00:57 - in quotes the theme that goes in quotes
00:59 - is just text literal text like these
01:03 - strings here now supposing I want to
01:05 - Output all of this on a single line
01:08 - here's one way to do it I can type
01:12 - greeting comma name comma question
01:16 - and if we run this
01:21 - we see all that text on one single line
01:24 - however I'm going to suggest that for
01:26 - the moment you forget that you've seen
01:28 - this
01:29 - so this this does work we've just got
01:31 - the variables or strings
01:34 - separated by commas between the two
01:37 - round brackets of the print function but
01:40 - I think if we do it another way it'll
01:42 - help you better to learn how to work
01:45 - with variables so I'm going to do it do
01:47 - this a different way instead of commas
01:49 - I'm going to separate these with plus
01:51 - signs
01:56 - now when we use plus signs with a string
02:00 - on either side so these are string
02:02 - variables yes but we can use them
02:04 - wherever we might otherwise use a string
02:06 - then it basically performs concatenation
02:10 - in other words joining together
02:13 - so in this context we call things like
02:16 - plus and equals operators and in this
02:19 - context
02:21 - this is a concatenation operator for
02:24 - joining strings together
02:27 - and if we try this out
02:31 - it works it is even worse than using
02:34 - commas because we've lost some spaces
02:36 - here but you can see it basically joins
02:40 - these strings together via the variables
02:42 - and outputs them now let's try to format
02:46 - this a bit more nicely we want some
02:48 - spaces and punctuation in there so I can
02:52 - actually put spaces inside strings so I
02:55 - could put a space here as long as it's
02:57 - within these quotes then we're fine and
03:00 - if I run this now you see a space after
03:03 - hello we probably want a full stop after
03:07 - hello Joe as well to do that I'm just
03:10 - going to add in a string literal so
03:13 - let's put
03:14 - in quotes a DOT and a space and another
03:18 - quote and then I need another plus sign
03:20 - here
03:22 - so I'm joining together four different
03:25 - strings here three of them I'm referring
03:27 - to with variables and the other one is a
03:29 - string literal we can mix and match like
03:31 - that
03:32 - they all behave just like string
03:34 - literals basically if I run that
03:37 - we have some pretty nicely formatted
03:40 - text so you you're definitely going to
03:42 - want to try this out because if it does
03:44 - seem at all confusing or mysterious now
03:47 - which will be normal if you are an
03:49 - absolute beginner
03:50 - it will stop seeming confusing if you
03:53 - just practice doing this a bit now the
03:55 - reason I separated our name here is
03:57 - because I want to get that from the user
04:00 - I want the user to enter their own name
04:02 - to tell me what their name is and I want
04:04 - to Output that in this text so to do
04:07 - that firstly I'm going to go above where
04:10 - I create the name variable and I'm going
04:12 - to say let's print a prompt so let's say
04:17 - enter your name colon maybe space and
04:22 - how do I collect what the user enters on
04:25 - the terminal
04:26 - I can do it like this instead of saying
04:28 - name equals Joe so I'm assigning the
04:32 - value of the string literal Joe to this
04:34 - variable name instead of doing that I
04:37 - can type input and then open and close
04:40 - round bracket
04:41 - so this is what we call the input
04:43 - function
04:45 - and the round brackets there
04:48 - clue you in that it is a function in
04:51 - other words it's some code that's going
04:53 - to do something it's not just another
04:55 - variable or something
04:58 - let's maybe try to arrange this a bit
05:00 - nicely
05:03 - to help us understand the program better
05:06 - now let's run this and see what it does
05:09 - so I run it and it says enter your name
05:12 - and let's enter John which is my name
05:15 - and it says hello John how are you so
05:19 - now we've got a program that's actually
05:20 - Interactive
05:22 - try this out for yourself so you want to
05:25 - definitely type this out and see if you
05:27 - can change it to do something maybe a
05:29 - little bit different it is normal to
05:31 - feel confused at this stage but the
05:34 - answer to confusion here is is always
05:36 - going to be practice
05:38 - by the end of this course if you follow
05:41 - it all the way through and you practice
05:42 - honestly the whole idea of variables and
05:45 - string literals and functions and all
05:46 - this stuff and much much more besides is
05:49 - gonna seem like second nature to you
05:51 - this is a free video from my course
05:55 - Python and machine learning for complete
05:57 - beginners I'm releasing the first couple
06:00 - of chapters of this course completely
06:03 - for free on YouTube to get you started
06:05 - with python I plan to upload new videos
06:08 - here to YouTube every Monday and every
06:11 - Thursday for at least a couple of months
06:14 - if you're interested in the complete
06:16 - course which teaches you python from
06:19 - scratch and eventually progresses to
06:22 - things like creating graphical user
06:23 - interfaces and using neural networks
06:26 - principal component analysis cluster
06:30 - analysis all that stuff and much more
06:32 - besides then you can find a link in the
06:35 - description or just go to this URL on
06:38 - the screen right here if you finish the
06:40 - whole course you'll be able to write all
06:42 - kinds of general purpose programs in
06:44 - Python and use Python to do machine
06:47 - learning and artificial intelligence as
06:50 - well thank you for watching until next
06:52 - time happy coding

Cleaned transcript:

in this video we're going to create our first interactive program I'm going to take a copy of this file I'm always going to be doing that or almost always when I create a new program I'm going to save this I'll just do it by using file and save as this time and we'll call it interactive dot pi okay so using interactive.pi here the first thing that I'm going to do is I want to change this program a little bit to get rid of world let's get rid of world here and I want to create a new variable which I'll call name and set that equal to some name like Joe for example so what I what I type here is is just stuff I've made up there's nothing special about it but notice that variable names like these they don't go in quotes the theme that goes in quotes is just text literal text like these strings here now supposing I want to Output all of this on a single line here's one way to do it I can type greeting comma name comma question and if we run this we see all that text on one single line however I'm going to suggest that for the moment you forget that you've seen this so this this does work we've just got the variables or strings separated by commas between the two round brackets of the print function but I think if we do it another way it'll help you better to learn how to work with variables so I'm going to do it do this a different way instead of commas I'm going to separate these with plus signs now when we use plus signs with a string on either side so these are string variables yes but we can use them wherever we might otherwise use a string then it basically performs concatenation in other words joining together so in this context we call things like plus and equals operators and in this context this is a concatenation operator for joining strings together and if we try this out it works it is even worse than using commas because we've lost some spaces here but you can see it basically joins these strings together via the variables and outputs them now let's try to format this a bit more nicely we want some spaces and punctuation in there so I can actually put spaces inside strings so I could put a space here as long as it's within these quotes then we're fine and if I run this now you see a space after hello we probably want a full stop after hello Joe as well to do that I'm just going to add in a string literal so let's put in quotes a DOT and a space and another quote and then I need another plus sign here so I'm joining together four different strings here three of them I'm referring to with variables and the other one is a string literal we can mix and match like that they all behave just like string literals basically if I run that we have some pretty nicely formatted text so you you're definitely going to want to try this out because if it does seem at all confusing or mysterious now which will be normal if you are an absolute beginner it will stop seeming confusing if you just practice doing this a bit now the reason I separated our name here is because I want to get that from the user I want the user to enter their own name to tell me what their name is and I want to Output that in this text so to do that firstly I'm going to go above where I create the name variable and I'm going to say let's print a prompt so let's say enter your name colon maybe space and how do I collect what the user enters on the terminal I can do it like this instead of saying name equals Joe so I'm assigning the value of the string literal Joe to this variable name instead of doing that I can type input and then open and close round bracket so this is what we call the input function and the round brackets there clue you in that it is a function in other words it's some code that's going to do something it's not just another variable or something let's maybe try to arrange this a bit nicely to help us understand the program better now let's run this and see what it does so I run it and it says enter your name and let's enter John which is my name and it says hello John how are you so now we've got a program that's actually Interactive try this out for yourself so you want to definitely type this out and see if you can change it to do something maybe a little bit different it is normal to feel confused at this stage but the answer to confusion here is is always going to be practice by the end of this course if you follow it all the way through and you practice honestly the whole idea of variables and string literals and functions and all this stuff and much much more besides is gonna seem like second nature to you this is a free video from my course Python and machine learning for complete beginners I'm releasing the first couple of chapters of this course completely for free on YouTube to get you started with python I plan to upload new videos here to YouTube every Monday and every Thursday for at least a couple of months if you're interested in the complete course which teaches you python from scratch and eventually progresses to things like creating graphical user interfaces and using neural networks principal component analysis cluster analysis all that stuff and much more besides then you can find a link in the description or just go to this URL on the screen right here if you finish the whole course you'll be able to write all kinds of general purpose programs in Python and use Python to do machine learning and artificial intelligence as well thank you for watching until next time happy coding
