With timestamps:

00:00 - hello in this video we're going to take
00:04 - a further look at variables and we're
00:06 - going to look at adding numbers together
00:08 - if you feel confused at this stage
00:11 - that's absolutely normal you probably
00:14 - should feel confused but things are
00:18 - going to get clearer as you go through
00:20 - the course as long as you practice what
00:21 - we're doing it's very important that you
00:24 - try try this out for yourself
00:28 - incidentally you might wonder what kinds
00:33 - of variables there are in Java and we're
00:35 - going to be looking at looking at that
00:37 - in the course but for now I just want to
00:40 - direct your attention to a page if you
00:43 - type into a search engine Java primitive
00:48 - primitive types and maybe click on one
00:54 - of these links let's go to the sort of
00:58 - official Oracle documentation primitive
01:01 - data types in Java and you can see here
01:04 - don't you don't have to read this or
01:06 - anything but you can see that there's
01:07 - there are various types listed and int
01:09 - is one of them you can also see that it
01:12 - has a maximum value that we can put in
01:14 - it
01:14 - that's 2 to the power of 31 minus 1
01:21 - there's a reason why such a strange kind
01:24 - of value but we needn't go into that and
01:26 - the minimum value you can put in is
01:27 - minus 2 to the power of 31 okay don't
01:32 - worry about that though let's have a
01:35 - look Len so what can we do with this
01:36 - well one thing we can do is edition and
01:40 - in fact the way I've written this here
01:42 - is unnecessarily verbose we can do this
01:47 - more briefly more quickly
01:50 - so I've declared a variable here I've
01:55 - declared a variable called caps and here
01:58 - I've assigned the value 7 to the
02:01 - variable cats we can do that in one
02:03 - single step before we do that let's
02:06 - create a duplicate of our project and if
02:09 - you're working on code
02:12 - and you've got something that works and
02:14 - then you don't want to disturb that or
02:18 - it's possible that you might mess it up
02:20 - with how you're about to change it it's
02:22 - a really good idea to take a copy of it
02:24 - either that or you could use a version
02:26 - control system like git for example but
02:29 - we're just going to make a copy so I'm
02:32 - going to right click my project and go
02:34 - to copy I'm just going to click in a
02:37 - blank space in Eclipse in the package
02:40 - Explorer right-click and go to paste and
02:43 - we can give this a new name now let's
02:46 - call it edition and click copy so now
02:54 - we've got a new project and I would
02:56 - recommend creating projects from scratch
02:59 - until you're you feel completely
03:02 - familiar with that rather than just
03:03 - copying projects but anyway so let's run
03:08 - that so I'm going to select my app click
03:12 - run and it runs just as before but now
03:16 - let's delete this int cats and so now
03:22 - we've got an error why have we got an
03:24 - error it's because let's hover over the
03:26 - error
03:27 - it says cats cannot be resolved to a
03:29 - variable that's because I'm trying to
03:31 - output the value contained in this cat's
03:34 - variable but I haven't declared the
03:37 - cat's variable and I haven't assign the
03:39 - value to it what we're gonna do now is
03:41 - declare it and assign a value in a
03:43 - single step now this has to be above
03:46 - where you're using the variable so
03:48 - wherever you use a variable that both
03:51 - that somewhere in your code you have to
03:54 - declare it
03:55 - so let's write int cats equals 7 so I'm
04:01 - declaring it and I'm assigning a value
04:03 - to it in one single step
04:05 - remember your program is going to
04:07 - execute line by line so it's going to go
04:10 - down your code your code block here and
04:14 - that's why we first got to declare a
04:16 - variable before we can use it it has to
04:19 - be above because this is going to get
04:22 - read
04:23 - by the Java Runtime environment before
04:26 - this is read and executed okay so that
04:32 - that will do the same as a program we
04:33 - had before we can run it and it just
04:35 - outputs seven now let's say we've also
04:38 - got dogs
04:39 - so let's write int dogs equals let's say
04:47 - we've got five dogs and by some miracle
04:49 - we can stop the dogs eating the cats
04:52 - again we've got a warning because we'd
04:54 - not use the value of dogs yet what I'm
04:57 - going to do is add these together and to
05:00 - do that I need a third variable I'm
05:03 - going to type int total equals cats plus
05:11 - dogs and then using my system dot out
05:15 - dot print line I'm going to output the
05:18 - value of total should be 12 so let's
05:23 - let's run this and down here we have 12
05:28 - what have we done here
05:30 - so we declare a variable called cats and
05:34 - assign the value 7 to it we declare a
05:36 - variable called dogs assign the value 5
05:39 - to it and then we declare a variable
05:41 - called total and the value that we
05:44 - assign to total is the number of cats
05:47 - plus the number of dogs and then we
05:50 - output it try that for yourself if you
05:55 - it is easy to make mistakes here so for
05:58 - example you can't have two variables
06:01 - called cats in in your code block here
06:04 - if we try that we get an error if we
06:09 - hover over the error
06:10 - it says duplicate local variable cats
06:13 - let's delete the second one in fact ik
06:16 - in Eclipse if I just put my cursor on a
06:19 - line and then in the Mac if I do command
06:23 - D or in Windows I think it would be ctrl
06:26 - D that deletes the line so it's quite a
06:29 - handy shortcut ctrl D or command D to
06:33 - delete a line if I'm giving them any of
06:36 - the wrong sort
06:37 - cuts for windows you can always type
06:39 - into a search engine
06:41 - something like eclipse shortcuts Eclipse
06:45 - shortcut-keys something like that and
06:47 - you'll find a whole list quite easily
06:49 - okay so try replicating this program try
06:53 - changing these numbers to different
06:55 - numbers and see if it still works you
06:59 - can also try giving them different names
07:01 - so they don't have to be cats dogs in
07:03 - total you might run into problems you
07:06 - can't have spaces in variable names you
07:08 - can't have punctuation in there you
07:11 - should always start them with a
07:12 - lowercase first letter that is very
07:14 - important without that your program will
07:17 - work so I could write total here with a
07:20 - capital T and it would still run
07:23 - probably well it will do if I I have to
07:27 - change both of them of course well
07:31 - that's not obvious let me explain that
07:33 - let's run this so that works with a
07:36 - capital T on total for example or I
07:39 - could put a capital C cats or a capital
07:42 - D on dogs but it's very bad practice the
07:46 - standard in Java is that variables start
07:48 - with a lowercase first letter so if
07:52 - you're using the conventional coding
07:53 - style in Java which we are you should
07:56 - always start your variables with a
07:57 - lowercase first letter don't do anything
08:00 - crazy with them for a moment just keep
08:02 - them all lowercase and notice that Java
08:06 - is case-sensitive so a variable called
08:10 - dogs with a capital D is different to a
08:15 - variable called
08:16 - dogs with a lowercase D see that's only
08:19 - a warning whereas if I had lowercase D I
08:22 - get an error seems to be some
08:24 - street-cleaning taking place outside
08:26 - apologies for the noise okay anyway so
08:29 - let's get rid of that what we what we
08:31 - want to aim for at the moment is
08:33 - creating legal reasonable code written
08:36 - in the standard style so create
08:39 - something that looks like this and try
08:41 - it out and try to eking it change the
08:43 - numbers change the variable names see if
08:46 - you can get it to work
08:47 - and don't don't forget that if you
08:49 - change cats here
08:50 - you have to change the name of it here
08:52 - as well the same for all of these
08:54 - variables you have to be consistent okay
08:57 - have a go at that and until next time
08:59 - happy coding

Cleaned transcript:

hello in this video we're going to take a further look at variables and we're going to look at adding numbers together if you feel confused at this stage that's absolutely normal you probably should feel confused but things are going to get clearer as you go through the course as long as you practice what we're doing it's very important that you try try this out for yourself incidentally you might wonder what kinds of variables there are in Java and we're going to be looking at looking at that in the course but for now I just want to direct your attention to a page if you type into a search engine Java primitive primitive types and maybe click on one of these links let's go to the sort of official Oracle documentation primitive data types in Java and you can see here don't you don't have to read this or anything but you can see that there's there are various types listed and int is one of them you can also see that it has a maximum value that we can put in it that's 2 to the power of 31 minus 1 there's a reason why such a strange kind of value but we needn't go into that and the minimum value you can put in is minus 2 to the power of 31 okay don't worry about that though let's have a look Len so what can we do with this well one thing we can do is edition and in fact the way I've written this here is unnecessarily verbose we can do this more briefly more quickly so I've declared a variable here I've declared a variable called caps and here I've assigned the value 7 to the variable cats we can do that in one single step before we do that let's create a duplicate of our project and if you're working on code and you've got something that works and then you don't want to disturb that or it's possible that you might mess it up with how you're about to change it it's a really good idea to take a copy of it either that or you could use a version control system like git for example but we're just going to make a copy so I'm going to right click my project and go to copy I'm just going to click in a blank space in Eclipse in the package Explorer rightclick and go to paste and we can give this a new name now let's call it edition and click copy so now we've got a new project and I would recommend creating projects from scratch until you're you feel completely familiar with that rather than just copying projects but anyway so let's run that so I'm going to select my app click run and it runs just as before but now let's delete this int cats and so now we've got an error why have we got an error it's because let's hover over the error it says cats cannot be resolved to a variable that's because I'm trying to output the value contained in this cat's variable but I haven't declared the cat's variable and I haven't assign the value to it what we're gonna do now is declare it and assign a value in a single step now this has to be above where you're using the variable so wherever you use a variable that both that somewhere in your code you have to declare it so let's write int cats equals 7 so I'm declaring it and I'm assigning a value to it in one single step remember your program is going to execute line by line so it's going to go down your code your code block here and that's why we first got to declare a variable before we can use it it has to be above because this is going to get read by the Java Runtime environment before this is read and executed okay so that that will do the same as a program we had before we can run it and it just outputs seven now let's say we've also got dogs so let's write int dogs equals let's say we've got five dogs and by some miracle we can stop the dogs eating the cats again we've got a warning because we'd not use the value of dogs yet what I'm going to do is add these together and to do that I need a third variable I'm going to type int total equals cats plus dogs and then using my system dot out dot print line I'm going to output the value of total should be 12 so let's let's run this and down here we have 12 what have we done here so we declare a variable called cats and assign the value 7 to it we declare a variable called dogs assign the value 5 to it and then we declare a variable called total and the value that we assign to total is the number of cats plus the number of dogs and then we output it try that for yourself if you it is easy to make mistakes here so for example you can't have two variables called cats in in your code block here if we try that we get an error if we hover over the error it says duplicate local variable cats let's delete the second one in fact ik in Eclipse if I just put my cursor on a line and then in the Mac if I do command D or in Windows I think it would be ctrl D that deletes the line so it's quite a handy shortcut ctrl D or command D to delete a line if I'm giving them any of the wrong sort cuts for windows you can always type into a search engine something like eclipse shortcuts Eclipse shortcutkeys something like that and you'll find a whole list quite easily okay so try replicating this program try changing these numbers to different numbers and see if it still works you can also try giving them different names so they don't have to be cats dogs in total you might run into problems you can't have spaces in variable names you can't have punctuation in there you should always start them with a lowercase first letter that is very important without that your program will work so I could write total here with a capital T and it would still run probably well it will do if I I have to change both of them of course well that's not obvious let me explain that let's run this so that works with a capital T on total for example or I could put a capital C cats or a capital D on dogs but it's very bad practice the standard in Java is that variables start with a lowercase first letter so if you're using the conventional coding style in Java which we are you should always start your variables with a lowercase first letter don't do anything crazy with them for a moment just keep them all lowercase and notice that Java is casesensitive so a variable called dogs with a capital D is different to a variable called dogs with a lowercase D see that's only a warning whereas if I had lowercase D I get an error seems to be some streetcleaning taking place outside apologies for the noise okay anyway so let's get rid of that what we what we want to aim for at the moment is creating legal reasonable code written in the standard style so create something that looks like this and try it out and try to eking it change the numbers change the variable names see if you can get it to work and don't don't forget that if you change cats here you have to change the name of it here as well the same for all of these variables you have to be consistent okay have a go at that and until next time happy coding
