With timestamps:

00:00 - [Music]
00:18 - hello this is John from cave of
00:20 - programming calm this is the third
00:24 - tutorial in our series of tutorials for
00:29 - beginners in Java in the last tutorial
00:32 - we looked at
00:34 - Java's primitive types there are eight
00:36 - primitive types in Java and in this
00:39 - tutorial we're gonna look at our first
00:41 - non primitive type the string type and
00:45 - then in the next tutorial we can look at
00:49 - loops but before you do anything with
00:51 - loops we need to know how to represent
00:54 - texts in Java so I'm in Eclipse as usual
00:59 - and I'm gonna create a new Java project
01:02 - and I'm gonna give it a name let's call
01:07 - it tutorial 3 and click Next and finish
01:14 - now as in the first tutorial we're going
01:18 - to create a class which will be the only
01:20 - class in our little test program here
01:23 - I'm gonna right click on the project
01:26 - folder and go to new class and this time
01:35 - I'm not gonna take public static void
01:38 - main I'm not gonna ask it to create the
01:40 - main method just because I want to show
01:42 - you a different way of doing that I'll
01:45 - give the class a name I'm gonna call
01:47 - this application click finish and here
01:56 - is my application class now every
02:00 - program in Java as we saw in the first
02:04 - tutorial must have a main method and
02:07 - that's where the program starts and one
02:12 - way of creating one of course you could
02:15 - type it yourself here but just to show
02:18 - you another Eclipse shortcut I'll type
02:20 - main and press control space and hit
02:24 - return and hey presto I've got a main
02:27 - method the only thing is the indentation
02:31 - all wrong here and I'm gonna select that
02:34 - and press tab once because every time
02:39 - you have brackets like these everything
02:41 - inside them should be indented one tab
02:44 - otherwise you won't be able to keep
02:46 - track of what belongs to what so we saw
02:53 - in the last tutorial that you can create
02:55 - an integer variable which is kind of
02:57 - just a box that you can put integers
02:59 - into like this so int my int equals
03:05 - seven semicolon for example and in the
03:09 - same way you can create a string type
03:11 - which holds text except that it's string
03:16 - with an uppercase s because string is
03:19 - not a primitive type it's actually a
03:22 - class and I'll call this text for
03:26 - example it could be anything and I'll
03:29 - set that equal to some text hello
03:38 - so what's going on here I'm going to
03:41 - labor this point a little bit because
03:44 - gradually I want to introduce you to the
03:46 - concept of objects and classes and so
03:50 - string is a class which means it's just
03:53 - a type for example in a real world we
03:56 - have cats but the concept cats isn't
04:00 - doesn't refer to a particular card it's
04:03 - it's a general type of of something it's
04:08 - a type of animal in fact and in the same
04:11 - way string here is a type of object that
04:15 - can hold text this is a variable which
04:20 - is which is capable of not of holding or
04:25 - storing a string instance but it's
04:30 - capable of referring to a thing that has
04:33 - the type string and don't worry if this
04:35 - sounds like Greek because we'll keep
04:37 - coming back to it and you'll gradually
04:38 - get used to it and this is actually a
04:41 - text object so you've got class
04:44 - string and particular instance of the
04:47 - class in other words an object here and
04:51 - I can output that just by typing sis out
04:53 - control space and put text in there and
04:58 - if I click run
05:01 - we should get hello if my computer
05:03 - wasn't so horrendously slow and you can
05:07 - do a lot of some interesting things with
05:08 - strings for example you can add them
05:10 - together let's create a string called
05:14 - blank and I'll set that equal to just
05:18 - some empty space like that I'll create
05:21 - another string called name Oh
05:25 - so that equal to Bob I can add all these
05:31 - strings together I can say okay here's a
05:33 - string greeting and with greeting and
05:39 - I'm gonna put that equal to text plus
05:42 - blank plus name semicolon and remember
05:47 - that every statement must end in a
05:49 - semicolon now if I put greeting in here
05:54 - it's gonna output hello and space and
05:58 - Bob and in fact you can add string
06:05 - objects together directly because I can
06:09 - achieve the same thing if I type
06:12 - system.out.println and I could write for
06:15 - example Bob plus some space plus hello
06:22 - no no actually I wanted to type hello
06:27 - space and Bob and then semicolon at the
06:35 - end of the line and we'll get the same
06:37 - thing again and you can also if you've
06:40 - got for example an int you can you can
06:45 - output you can concatenate that with a
06:47 - string when we add strings we speak
06:49 - about concatenating I'll types this out
06:53 - control space and for some like say my
06:57 - integer
06:58 - is and add my int and if I run that my
07:07 - integer is seven hey presto notice this
07:10 - is a very labored way of doing this
07:12 - because I got to just type one long
07:14 - string and said hello space Bob but I've
07:17 - just to show you addition of strings
07:20 - concatenation I've created three
07:22 - separate strings here lots of other
07:27 - things you can do with strings and we
07:29 - will look at some more things in the
07:32 - next tutorial but for now I just wanted
07:37 - to show you how you can output some text
07:39 - and you can work variables into it
07:42 - and one last thing is yeah supposing you
07:50 - have some variable as to Clara a double
07:53 - variable double precision floating point
07:56 - number seven point eight and of course I
08:02 - can put that in the middle of string as
08:03 - well I could say my number is plus well
08:09 - I missed off the variable name my double
08:15 - my double plus and it's just have a full
08:21 - stop and that will also work my number
08:24 - is seven point eight that's all for this
08:27 - tutorial
08:27 - pretty simple have fun try adding
08:30 - strings together and see where you get
08:33 - and in the next tutorial we'll look at
08:36 - loops and we'll start really leveraging
08:37 - the power of Java to do things that
08:41 - would be incredibly tedious to do by
08:44 - hand that's all for this time you can
08:47 - find more information and tutorials on
08:49 - cave of programming com
08:51 - I hope you will join me again
08:52 - for the next tutorial my name is John
08:56 - and until next time happy coding
09:02 - you
09:03 - [Music]
09:16 - you

Cleaned transcript:

hello this is John from cave of programming calm this is the third tutorial in our series of tutorials for beginners in Java in the last tutorial we looked at Java's primitive types there are eight primitive types in Java and in this tutorial we're gonna look at our first non primitive type the string type and then in the next tutorial we can look at loops but before you do anything with loops we need to know how to represent texts in Java so I'm in Eclipse as usual and I'm gonna create a new Java project and I'm gonna give it a name let's call it tutorial 3 and click Next and finish now as in the first tutorial we're going to create a class which will be the only class in our little test program here I'm gonna right click on the project folder and go to new class and this time I'm not gonna take public static void main I'm not gonna ask it to create the main method just because I want to show you a different way of doing that I'll give the class a name I'm gonna call this application click finish and here is my application class now every program in Java as we saw in the first tutorial must have a main method and that's where the program starts and one way of creating one of course you could type it yourself here but just to show you another Eclipse shortcut I'll type main and press control space and hit return and hey presto I've got a main method the only thing is the indentation all wrong here and I'm gonna select that and press tab once because every time you have brackets like these everything inside them should be indented one tab otherwise you won't be able to keep track of what belongs to what so we saw in the last tutorial that you can create an integer variable which is kind of just a box that you can put integers into like this so int my int equals seven semicolon for example and in the same way you can create a string type which holds text except that it's string with an uppercase s because string is not a primitive type it's actually a class and I'll call this text for example it could be anything and I'll set that equal to some text hello so what's going on here I'm going to labor this point a little bit because gradually I want to introduce you to the concept of objects and classes and so string is a class which means it's just a type for example in a real world we have cats but the concept cats isn't doesn't refer to a particular card it's it's a general type of of something it's a type of animal in fact and in the same way string here is a type of object that can hold text this is a variable which is which is capable of not of holding or storing a string instance but it's capable of referring to a thing that has the type string and don't worry if this sounds like Greek because we'll keep coming back to it and you'll gradually get used to it and this is actually a text object so you've got class string and particular instance of the class in other words an object here and I can output that just by typing sis out control space and put text in there and if I click run we should get hello if my computer wasn't so horrendously slow and you can do a lot of some interesting things with strings for example you can add them together let's create a string called blank and I'll set that equal to just some empty space like that I'll create another string called name Oh so that equal to Bob I can add all these strings together I can say okay here's a string greeting and with greeting and I'm gonna put that equal to text plus blank plus name semicolon and remember that every statement must end in a semicolon now if I put greeting in here it's gonna output hello and space and Bob and in fact you can add string objects together directly because I can achieve the same thing if I type system.out.println and I could write for example Bob plus some space plus hello no no actually I wanted to type hello space and Bob and then semicolon at the end of the line and we'll get the same thing again and you can also if you've got for example an int you can you can output you can concatenate that with a string when we add strings we speak about concatenating I'll types this out control space and for some like say my integer is and add my int and if I run that my integer is seven hey presto notice this is a very labored way of doing this because I got to just type one long string and said hello space Bob but I've just to show you addition of strings concatenation I've created three separate strings here lots of other things you can do with strings and we will look at some more things in the next tutorial but for now I just wanted to show you how you can output some text and you can work variables into it and one last thing is yeah supposing you have some variable as to Clara a double variable double precision floating point number seven point eight and of course I can put that in the middle of string as well I could say my number is plus well I missed off the variable name my double my double plus and it's just have a full stop and that will also work my number is seven point eight that's all for this tutorial pretty simple have fun try adding strings together and see where you get and in the next tutorial we'll look at loops and we'll start really leveraging the power of Java to do things that would be incredibly tedious to do by hand that's all for this time you can find more information and tutorials on cave of programming com I hope you will join me again for the next tutorial my name is John and until next time happy coding you you
