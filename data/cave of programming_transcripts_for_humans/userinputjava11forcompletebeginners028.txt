With timestamps:

00:00 - hello in this video we're going to take
00:02 - a look at getting input from the user so
00:05 - we're going to take an important step
00:07 - and actually make our program
00:09 - interactive so to do that I'm going to
00:13 - use a class called scanner so at the
00:17 - moment you still don't really know what
00:19 - a class is but we do have we do have at
00:23 - least one well we have a couple of
00:24 - examples of classes here we've got AB
00:26 - and that's a class that we're creating
00:28 - ourselves we've set a public class app
00:31 - we've created an app and we've also got
00:34 - a system here and we can recognize these
00:38 - because they have uppercase first
00:40 - letters these are actually classes and
00:42 - you'll find out what a class is later on
00:44 - we're going to use another class in this
00:47 - video called scanner so I'm going to
00:49 - write something that's going to look
00:50 - quite cryptic but if you type it out a
00:53 - few times you'll get used to using it
00:55 - and you'll gradually come to understand
00:57 - it as you go through the course as with
00:59 - many other things so after the opening
01:02 - curly bracket of this main method I'm
01:05 - going to put a couple of blank lines so
01:08 - I'm gonna write scanner with an
01:11 - uppercase s scanner with a lowercase s
01:14 - equals new scanner two round brackets
01:20 - and a semicolon
01:21 - it's the capitalization is very
01:24 - important here you have to get it right
01:25 - and between these two round brackets I'm
01:29 - going to type system capital S dot in
01:33 - and we've still got an error at the
01:35 - moment now that's because I'm using this
01:38 - scanner class which is part of Java it's
01:42 - part of the JDK Java development kit but
01:46 - it's in a it's in a package and my
01:49 - program doesn't know how to find this
01:51 - package so to tell it where to find
01:54 - scanner I'm going to use a shortcut key
01:58 - so on the Mac I'm going to do command
02:01 - shift o or on the windows ctrl shift o
02:05 - so I hold down if I was on Windows I'd
02:09 - hold down ctrl and press shift on Mac
02:12 - command + Shift and then
02:13 - press o the letter o o stands for
02:16 - organized imports and it brings up this
02:18 - dialogue box and I'm going to select
02:21 - this Java dot util dot scanner and click
02:26 - finish and what that does is all it does
02:31 - is it adds this line at the top of my
02:33 - program after the package statement
02:36 - it adds import java.util.scanner
02:40 - and that's saying when we say scanner in
02:43 - the program we mean this scanner and
02:45 - we're going to use this scanner and it's
02:48 - in the java.util package so this what
02:53 - our packages in a class will become
02:54 - clearer to you in time from for the
02:57 - moment I'm just kind of trying to get
02:58 - used to the terminology let's take a
03:00 - closer look at this line looks a bit
03:03 - cryptic scanner here is a class and we
03:06 - can recognize it because it has an
03:08 - uppercase first letter and s so let me
03:12 - give you a little question here we're
03:15 - already working with two other classes
03:18 - in this one program and maybe try to
03:22 - maybe pause the video if you feel like
03:24 - it and see if you can figure out where
03:27 - those two other classes are that we're
03:29 - using on the basis of what I've just
03:31 - said okay so now maybe you found them or
03:36 - maybe you don't want to pause the video
03:37 - what I'm going to tell you so we're
03:39 - defining a class of our own here called
03:41 - app and that's got a first upper case
03:43 - first letter and we're also using the
03:46 - system class here and we're using the
03:49 - system class here it's the same class so
03:51 - there's there's two that I can see
03:53 - already here
03:56 - this here is a variable it's a variable
03:59 - of type scanner now I've given it I've
04:02 - also called it scanner I've given it the
04:05 - same name as a scanner class but with a
04:07 - lowercase first letter some people don't
04:11 - like to do that they may even argue that
04:13 - this is bad practice to give a variable
04:16 - the same name as its type so both are
04:19 - called scanner in this case I'm a fan of
04:22 - it I think it makes it clearer what this
04:25 - actually is
04:26 - I don't mind that they only differ by
04:28 - capitalization but if you want you can
04:30 - call it something different like you
04:33 - know scanning pots or some people even
04:37 - calls that call it input but I find that
04:39 - a bit confusing here because it's not
04:42 - actually input there's a thing that's
04:44 - used for getting input and what we do
04:46 - then is we want to set it to a new we
04:51 - call this an object but we're setting it
04:53 - to a new instance of scanner so a class
04:57 - is kind of like a template and an object
04:59 - is like a particular object made from
05:03 - that template so we're creating a new
05:06 - scanner object here and that will become
05:08 - clearer also later on don't worry about
05:10 - it now but it's as if scanner is a
05:12 - blueprint or a recipe for making
05:15 - something maybe more like a blueprint
05:17 - and here we're actually creating a
05:20 - particular instance of that thing like
05:22 - if we had plans for making a car here in
05:26 - the form of a class and we have a
05:28 - particular car we create a particular
05:30 - actual car by doing new here and then
05:34 - we're saying that scanner is going to
05:35 - scan the system input system dot in and
05:39 - that's going to be input from the
05:41 - console okay let's actually make this
05:45 - work so what we have to do is I'm gonna
05:49 - say underneath this I'm going to say
05:52 - let's maybe have another blank line and
05:54 - write sis sis owl and value in fahren
06:03 - height to convert and let's put like one
06:09 - of these characters a sort of angle
06:12 - bracket pointing to the right to make it
06:15 - a bit more like a prompt maybe I'll have
06:16 - a I'll have a space there as well and
06:19 - I'll also change this from print line to
06:23 - just print so hopefully the user can
06:25 - type directly after this space we'll see
06:29 - how this works so if I run this now it
06:33 - simply outputs some text and if
06:39 - the result is on the same line so it
06:41 - even looks a bit ugly but after this
06:45 - immediately after the system dot out dot
06:47 - print I'm gonna write that's right well
06:52 - let's actually let's change this double
06:54 - Fahrenheit so I'll move it up slightly
06:56 - and instead of saying equals ninety-one
06:59 - I'll say equals scanner dot next float
07:05 - and as soon as I see the right thing
07:07 - selected in this autocomplete I think I
07:10 - press control space sort of
07:12 - instinctively so you've type a few
07:15 - characters press control space and this
07:17 - thing comes up get s gets rid of it so
07:21 - what I want is next float hit return and
07:26 - semicolon let's try that so I'm going to
07:31 - run it and in the console it says enter
07:34 - value in Fahrenheit to convert I'm going
07:37 - to convert 97 very hot hit return and we
07:43 - get 97 point naught degrees Fahrenheit
07:45 - is 36.1 degrees Celsius what happens if
07:51 - you enter something that isn't isn't a
07:55 - floating-point value let's run it well
07:58 - it's fine with integers if I write 454
08:02 - or something it works it can easily
08:05 - convert an int to a float just treat it
08:08 - like a float but supposing we run it I
08:11 - enter something that's not even a number
08:13 - like some random text we get an error
08:18 - and in the next video we're going to
08:20 - look a little bit at that error so for
08:23 - now try this out for yourself and if
08:26 - you're feeling creative even better make
08:29 - up your own program for example make up
08:32 - a program to convert miles to kilometers
08:35 - something like that you can find a
08:38 - formula for it here to convert miles to
08:41 - fill up miles to kilometers you just
08:44 - multiply the number of miles by one
08:46 - point six zero nine so you could write a
08:49 - program that asks the user for a number
08:51 - of miles
08:53 - and converts it to a number of
08:54 - kilometers and it will work very much
08:57 - like this maybe have a go at that and
09:01 - type this out for yourself I was just
09:03 - first or just launched into trying to
09:06 - create a program very similar to this
09:08 - one that converts something to something
09:09 - else but also gets input from the user
09:12 - okay I'll leave it there for this video
09:14 - until next time happy coding

Cleaned transcript:

hello in this video we're going to take a look at getting input from the user so we're going to take an important step and actually make our program interactive so to do that I'm going to use a class called scanner so at the moment you still don't really know what a class is but we do have we do have at least one well we have a couple of examples of classes here we've got AB and that's a class that we're creating ourselves we've set a public class app we've created an app and we've also got a system here and we can recognize these because they have uppercase first letters these are actually classes and you'll find out what a class is later on we're going to use another class in this video called scanner so I'm going to write something that's going to look quite cryptic but if you type it out a few times you'll get used to using it and you'll gradually come to understand it as you go through the course as with many other things so after the opening curly bracket of this main method I'm going to put a couple of blank lines so I'm gonna write scanner with an uppercase s scanner with a lowercase s equals new scanner two round brackets and a semicolon it's the capitalization is very important here you have to get it right and between these two round brackets I'm going to type system capital S dot in and we've still got an error at the moment now that's because I'm using this scanner class which is part of Java it's part of the JDK Java development kit but it's in a it's in a package and my program doesn't know how to find this package so to tell it where to find scanner I'm going to use a shortcut key so on the Mac I'm going to do command shift o or on the windows ctrl shift o so I hold down if I was on Windows I'd hold down ctrl and press shift on Mac command + Shift and then press o the letter o o stands for organized imports and it brings up this dialogue box and I'm going to select this Java dot util dot scanner and click finish and what that does is all it does is it adds this line at the top of my program after the package statement it adds import java.util.scanner and that's saying when we say scanner in the program we mean this scanner and we're going to use this scanner and it's in the java.util package so this what our packages in a class will become clearer to you in time from for the moment I'm just kind of trying to get used to the terminology let's take a closer look at this line looks a bit cryptic scanner here is a class and we can recognize it because it has an uppercase first letter and s so let me give you a little question here we're already working with two other classes in this one program and maybe try to maybe pause the video if you feel like it and see if you can figure out where those two other classes are that we're using on the basis of what I've just said okay so now maybe you found them or maybe you don't want to pause the video what I'm going to tell you so we're defining a class of our own here called app and that's got a first upper case first letter and we're also using the system class here and we're using the system class here it's the same class so there's there's two that I can see already here this here is a variable it's a variable of type scanner now I've given it I've also called it scanner I've given it the same name as a scanner class but with a lowercase first letter some people don't like to do that they may even argue that this is bad practice to give a variable the same name as its type so both are called scanner in this case I'm a fan of it I think it makes it clearer what this actually is I don't mind that they only differ by capitalization but if you want you can call it something different like you know scanning pots or some people even calls that call it input but I find that a bit confusing here because it's not actually input there's a thing that's used for getting input and what we do then is we want to set it to a new we call this an object but we're setting it to a new instance of scanner so a class is kind of like a template and an object is like a particular object made from that template so we're creating a new scanner object here and that will become clearer also later on don't worry about it now but it's as if scanner is a blueprint or a recipe for making something maybe more like a blueprint and here we're actually creating a particular instance of that thing like if we had plans for making a car here in the form of a class and we have a particular car we create a particular actual car by doing new here and then we're saying that scanner is going to scan the system input system dot in and that's going to be input from the console okay let's actually make this work so what we have to do is I'm gonna say underneath this I'm going to say let's maybe have another blank line and write sis sis owl and value in fahren height to convert and let's put like one of these characters a sort of angle bracket pointing to the right to make it a bit more like a prompt maybe I'll have a I'll have a space there as well and I'll also change this from print line to just print so hopefully the user can type directly after this space we'll see how this works so if I run this now it simply outputs some text and if the result is on the same line so it even looks a bit ugly but after this immediately after the system dot out dot print I'm gonna write that's right well let's actually let's change this double Fahrenheit so I'll move it up slightly and instead of saying equals ninetyone I'll say equals scanner dot next float and as soon as I see the right thing selected in this autocomplete I think I press control space sort of instinctively so you've type a few characters press control space and this thing comes up get s gets rid of it so what I want is next float hit return and semicolon let's try that so I'm going to run it and in the console it says enter value in Fahrenheit to convert I'm going to convert 97 very hot hit return and we get 97 point naught degrees Fahrenheit is 36.1 degrees Celsius what happens if you enter something that isn't isn't a floatingpoint value let's run it well it's fine with integers if I write 454 or something it works it can easily convert an int to a float just treat it like a float but supposing we run it I enter something that's not even a number like some random text we get an error and in the next video we're going to look a little bit at that error so for now try this out for yourself and if you're feeling creative even better make up your own program for example make up a program to convert miles to kilometers something like that you can find a formula for it here to convert miles to fill up miles to kilometers you just multiply the number of miles by one point six zero nine so you could write a program that asks the user for a number of miles and converts it to a number of kilometers and it will work very much like this maybe have a go at that and type this out for yourself I was just first or just launched into trying to create a program very similar to this one that converts something to something else but also gets input from the user okay I'll leave it there for this video until next time happy coding
