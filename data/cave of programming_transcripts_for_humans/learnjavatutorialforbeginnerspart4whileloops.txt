With timestamps:

00:00 - [Music]
00:16 - hello Estes John from cave of
00:18 - Programming calm this is part four of
00:21 - the Java for complete beginners tutorial
00:24 - from kpop programming and in this
00:26 - tutorial we're going to look at loops
00:29 - I'm using the Eclipse IDE as usual and
00:32 - I'm gonna go to new Java project and I'm
00:36 - gonna type a name for the project in
00:38 - tutorial for next and finish and I'll
00:43 - right click the project folder create a
00:45 - new class as usual I'll call this
00:49 - application and I'll click finish and to
00:54 - create a main method I'm gonna type main
00:56 - control space hit return and here we've
01:01 - got some bad formatting not enough
01:03 - indent here so to deal with that I'm
01:06 - just gonna select it and go ctrl shift +
01:09 - F and now it's perfectly formatted okay
01:14 - so in the in the first tutorial we saw
01:16 - the boolean type which can be used to
01:20 - store a true or a false value so I could
01:24 - create a boolean for example which I
01:29 - call it well I'll call it loop for
01:33 - reasons that you'll see later and I
01:35 - could set that to if I you like true for
01:41 - example true and I could output this
01:45 - this out control space
01:48 - run the program and we've got true oh
01:53 - yeah now what I can also do is set it
01:58 - equal to something like 4 less than 5 so
02:05 - this is a less than sign and you can see
02:09 - there's the less than sign that's a kind
02:11 - of small end here and it kind of has a
02:13 - big end here and the smaller number goes
02:16 - at the small end and a big one again and
02:19 - if you have the numbers the right way
02:20 - around this whole expression
02:23 - we'll return true now 4 is less than 5
02:27 - so if I run this program again we've got
02:29 - true or of course if I said 6 greater
02:33 - than 1 which is clearly not true this is
02:38 - a greater than sign
02:39 - I of course 6 is greater than 1 what am
02:45 - I talking about if I say 6 less than 1 I
02:50 - get false now I can also use a variable
02:56 - in in here I can say for example int
03:00 - value equals let's say 10 and then I can
03:07 - say boolean loop equals value less than
03:13 - 20 so value is equal to 10 and value is
03:19 - less than 20 so loop is set to true now
03:27 - we can use this to control a loop and to
03:31 - create a loop in Java I could type while
03:35 - and then in here I need some condition
03:37 - and the condition is what determines
03:39 - when the loop stops or rather I should
03:43 - say it determines when the loop will run
03:46 - because as long as the condition that I
03:49 - type in here is true the loop will run
03:52 - so if I say value less than 10 and let's
03:57 - set value equal to 0 and I put brackets
04:03 - in here I can put some code in here
04:08 - which will run as long as this condition
04:12 - is true and clearly this condition is
04:15 - always going to be true value will
04:17 - always be less than 10 so if I run this
04:20 - program it's just an infinite loop that
04:24 - never stops but what I can do to make
04:29 - this more interesting is here I can say
04:32 - value equals value plus 1
04:36 - what something is so to start with value
04:41 - equals zero and then this condition is
04:45 - true so the loop starts to execute we
04:49 - output some text and then we say
04:51 - whatever value is add one to it and then
04:56 - store it back in value itself so value
05:00 - is gonna increase zero one two three
05:03 - four five and eventually it will be
05:05 - equal to ten and when it's equal to ten
05:08 - this condition is no longer true and the
05:11 - loop stops and so if I run this you can
05:15 - see that we've got ten of those and just
05:18 - to make it clearer I can I'll add a
05:22 - space after hello and then I'll put the
05:25 - value I'll concatenate the value as a
05:28 - string to this string and if I run that
05:32 - you see we've got hello zero to nine so
05:36 - in total is 10 this 10 hello its output
05:42 - it ten times so this is the structure of
05:46 - this is we've got here this is this is a
05:51 - keyword while and this is a condition
05:55 - which is in round brackets after the
05:58 - keyword and then after that you've got a
06:01 - pair of curly brackets and your code
06:04 - that you want to execute repeatedly goes
06:06 - in here and of course you need some
06:09 - something in here that will gradually
06:11 - count up a loop and eventually make this
06:13 - condition false the best way to learn
06:18 - this is not to ponder over it too long
06:22 - or too much but just to try typing out
06:26 - yourself try to create loops if you can
06:29 - start them and stop them see if you can
06:31 - print stuff out from them and pretty
06:35 - soon you will be a dab hand at it that's
06:40 - all for this time
06:43 - next time we're going to look
06:45 - for loops which her a little bit more
06:48 - complicated but extremely useful and you
06:52 - can find more information and tutorials
06:54 - on K for programming comm I hope you'll
06:58 - join me again if Linux tutorial and
07:00 - until then happy coding
07:02 - [Music]
07:14 - you

Cleaned transcript:

hello Estes John from cave of Programming calm this is part four of the Java for complete beginners tutorial from kpop programming and in this tutorial we're going to look at loops I'm using the Eclipse IDE as usual and I'm gonna go to new Java project and I'm gonna type a name for the project in tutorial for next and finish and I'll right click the project folder create a new class as usual I'll call this application and I'll click finish and to create a main method I'm gonna type main control space hit return and here we've got some bad formatting not enough indent here so to deal with that I'm just gonna select it and go ctrl shift + F and now it's perfectly formatted okay so in the in the first tutorial we saw the boolean type which can be used to store a true or a false value so I could create a boolean for example which I call it well I'll call it loop for reasons that you'll see later and I could set that to if I you like true for example true and I could output this this out control space run the program and we've got true oh yeah now what I can also do is set it equal to something like 4 less than 5 so this is a less than sign and you can see there's the less than sign that's a kind of small end here and it kind of has a big end here and the smaller number goes at the small end and a big one again and if you have the numbers the right way around this whole expression we'll return true now 4 is less than 5 so if I run this program again we've got true or of course if I said 6 greater than 1 which is clearly not true this is a greater than sign I of course 6 is greater than 1 what am I talking about if I say 6 less than 1 I get false now I can also use a variable in in here I can say for example int value equals let's say 10 and then I can say boolean loop equals value less than 20 so value is equal to 10 and value is less than 20 so loop is set to true now we can use this to control a loop and to create a loop in Java I could type while and then in here I need some condition and the condition is what determines when the loop stops or rather I should say it determines when the loop will run because as long as the condition that I type in here is true the loop will run so if I say value less than 10 and let's set value equal to 0 and I put brackets in here I can put some code in here which will run as long as this condition is true and clearly this condition is always going to be true value will always be less than 10 so if I run this program it's just an infinite loop that never stops but what I can do to make this more interesting is here I can say value equals value plus 1 what something is so to start with value equals zero and then this condition is true so the loop starts to execute we output some text and then we say whatever value is add one to it and then store it back in value itself so value is gonna increase zero one two three four five and eventually it will be equal to ten and when it's equal to ten this condition is no longer true and the loop stops and so if I run this you can see that we've got ten of those and just to make it clearer I can I'll add a space after hello and then I'll put the value I'll concatenate the value as a string to this string and if I run that you see we've got hello zero to nine so in total is 10 this 10 hello its output it ten times so this is the structure of this is we've got here this is this is a keyword while and this is a condition which is in round brackets after the keyword and then after that you've got a pair of curly brackets and your code that you want to execute repeatedly goes in here and of course you need some something in here that will gradually count up a loop and eventually make this condition false the best way to learn this is not to ponder over it too long or too much but just to try typing out yourself try to create loops if you can start them and stop them see if you can print stuff out from them and pretty soon you will be a dab hand at it that's all for this time next time we're going to look for loops which her a little bit more complicated but extremely useful and you can find more information and tutorials on K for programming comm I hope you'll join me again if Linux tutorial and until then happy coding you
