With timestamps:

00:00 - hello this is John from cave of
00:02 - programming calm
00:04 - we're continuing my free course here on
00:06 - nodejs and JavaScript for beginners and
00:09 - in this video we're going to look at
00:11 - adding two arrays so so far we've seen
00:14 - how to create arrays including
00:16 - two-dimensional arrays but we've
00:19 - initialized them when we declare the
00:21 - variable we've been declaring them and
00:23 - initializing them with data at the same
00:25 - time
00:25 - but what we can also do is we can add
00:27 - data to existing arrays or we can even
00:30 - just declare an empty array and then add
00:32 - data to that so first of all let's take
00:35 - a look at what we would do for
00:37 - one-dimensional arrays in other words
00:39 - lists because that's simpler than
00:42 - two-dimensional arrays so let's declare
00:46 - out an empty array let's say let fruits
00:49 - equal and I'll use square brackets here
00:52 - to indicate just an empty array so one
00:57 - way that you can add items to an array
01:00 - is just to use an index to set items and
01:05 - the index that you use is the first
01:07 - index that's off the end of the array so
01:09 - if I were to refer to fruits 0 here
01:13 - because this has no items in it fruit 0
01:17 - which would normally be the first item
01:18 - doesn't exist is off the end of the
01:21 - array already but I can actually set the
01:23 - item to expand the array so if I write
01:26 - fruits 0 equals orange that will
01:33 - actually expand the array and add one
01:35 - item to it let's do let's do console dot
01:38 - log fruits 0 to check that it works and
01:43 - this is well supported by all browsers
01:45 - and as far as I know all major browsers
01:47 - and has been for a long time so here I'm
01:50 - going to run my programs check that I'm
01:52 - in the right place yeah so let's do node
01:56 - and adding two arrays ojs and we can see
01:59 - we've got orange in that array so let's
02:02 - do another one
02:03 - what's what's the first item what's the
02:06 - index of the first item that would now
02:08 - be off the end of the array now that
02:12 - would now be one
02:13 - so we've got an array here with one item
02:15 - in it so their maximum index that we can
02:19 - use to access items is zero so if I pick
02:23 - the next index it's just off the end of
02:25 - the array one I can set that to expand
02:28 - the array let's write fruits one equals
02:32 - Apple and we could also output the
02:36 - length of the array console.log fruit
02:40 - stop length and if we try this then we
02:48 - find we've got an array with two items
02:50 - in it we're displaying only the first
02:51 - one let's display the second as well
02:55 - second item which is that index one
03:00 - there we go we've got orange and apple
03:03 - now this can seem counterintuitive if
03:06 - you've been programming in other
03:09 - languages because many programming
03:11 - languages would not let you do this
03:13 - javascript is in many ways unusually
03:15 - flexible for example if you did this in
03:18 - a c program or a java program it would
03:22 - cause problems you can't access or set
03:25 - elements of an array usually that are
03:27 - off the end of the array but javascript
03:30 - lets you do it however there is another
03:32 - way of doing this that is more similar
03:35 - to how you would usually do this in in
03:38 - probably most other programming
03:40 - languages and that's to use a method
03:42 - called push so a method is a subroutine
03:46 - it's a kind of function it's a
03:48 - collection of code that is associated
03:51 - with an object and an array here is
03:55 - isn't is what we call an object in
03:57 - JavaScript so you don't you don't really
04:00 - need to know that yet we're going to
04:01 - cover that later but what you need what
04:04 - you need to know is just how you
04:06 - actually do this so let's write fruits
04:09 - and we use them a method called push so
04:16 - push adds items to the end of an array
04:20 - let's do push and banana
04:24 - and then I'm gonna actually move this
04:27 - code up so you can get the new length of
04:31 - the array and that's it's also out put
04:35 - this new item which is now going to be
04:37 - at index two so if we take a look at
04:40 - this then we see we've now got banana in
04:45 - the array why is it called push well
04:49 - we're kind of thinking of an array here
04:51 - as it's kind of a bit like a stack a
04:55 - stack data structure is is a data
04:59 - structure where the first item that we
05:02 - room we remove is the last one we added
05:06 - so if you think of like a stack of cards
05:10 - a deck of cards you can put a card on
05:13 - the top and you can take it off again in
05:17 - computer programming those kinds of data
05:20 - structures are called stacks now an
05:22 - array is not a stack because you know we
05:24 - can read items from anywhere within the
05:26 - array but this terminology posh is used
05:30 - with stacks and it indicates basically
05:34 - pushing something onto the top of a
05:37 - stack in this case we've got an array if
05:39 - you think of it like a deck of cards
05:41 - were like putting a card on on top of
05:44 - the cards like pushing a card on top of
05:47 - the cards it's a bit like that I don't
05:49 - know if that information really helps
05:51 - but we talked about pushing things onto
05:54 - the end of the array and that terminal
05:57 - terminology I think really comes from
05:59 - stack data structures okay so we can
06:03 - iterate through our array as well of
06:05 - course we could do we could do that in
06:08 - various ways so let's maybe just use a
06:11 - for loop conventional for loop which is
06:13 - we've already seen that in the course so
06:16 - let's do four let I equals 0 I less than
06:28 - fruit dot length I plus plus
06:33 - and we're going to see other ways of
06:34 - iterating through arrays later on in the
06:38 - course and will access fruits pi because
06:42 - this is not necessarily the most
06:43 - convenient way to do this let's also
06:45 - output a blank line to kind of create
06:48 - some separation in that in our output so
06:51 - if we look at the output now here we can
06:54 - see we're iterating through the array
06:57 - and you want to become really fluent
07:00 - with creating arrays adding items to
07:02 - them and iterating through them with a
07:04 - for loop is something you can just learn
07:07 - through practice so how would we deal
07:09 - with a two dimensional array well with a
07:12 - two dimensional array the elements are
07:15 - themselves arrays so let's create a two
07:19 - dimensional array now we need kind of a
07:22 - table of something so let's maybe write
07:26 - let animals equal and again I'll set it
07:30 - equal to an empty array now there are
07:32 - various subtleties around this and
07:34 - various things you can do but for our
07:37 - purposes here this this will be good to
07:39 - get us started so we could add to the
07:43 - end of animals for example by using push
07:45 - and what do we want to add we want to
07:48 - add a raise so let's say animals dot
07:53 - posh and let's add the first row of this
07:55 - table now the thing that we want to push
07:58 - is itself going to be an array so to
08:01 - denote an array we write square brackets
08:04 - like this and in there we can add some a
08:07 - list of animals let's write dog cat and
08:12 - mouse and that will add items to our two
08:17 - dimensional array and we could iterate
08:19 - through it using the technique that we
08:22 - saw in a previous tutorial or for now I
08:25 - could just iterate through the outer
08:26 - array let's maybe put a blank line again
08:29 - console dot log and then do four let's I
08:33 - equals zero I less than animals dot
08:38 - length now I plus plus
08:41 - and we'll iterate through this array and
08:43 - output the elements in it just just as
08:45 - we did up here and notice this I the
08:50 - scope of it in other words the region
08:51 - where it exists is just here outside of
08:54 - that it doesn't exist and that's why we
08:56 - can create a new eye here so I'm going
08:59 - to output animals I and now we're
09:06 - outputting one row at a time we've only
09:08 - got one row in it
09:09 - so far so if I run this program then we
09:15 - can see we've got an array of animals
09:18 - coming out because the the array is the
09:21 - eye sorry the elements in this animals
09:24 - array are themselves arrays we can of
09:26 - course add more to it so let's have
09:28 - another row in the table and this time
09:30 - I'll put animals that that are not
09:34 - familiar with because we don't really
09:36 - have them in England like Tiger I am
09:39 - familiar with them we we just don't have
09:43 - them roaming about okay
09:44 - lion and elephant kind of be nice if
09:48 - there are elephants in England probably
09:50 - a bit destructive but anyway okay so
09:52 - let's run this and we can see down here
09:57 - if you can see this we've got two rows
10:01 - now and second row is my sort of
10:05 - tropical type or animals that we don't
10:09 - have in England okay so that's it for
10:13 - this video I'm going to give you an
10:15 - exercise in the next video which you can
10:18 - do to kind of improve your fluency with
10:20 - this if you want main thing to do though
10:22 - is just practice it and you know
10:24 - practice typing it out probably if
10:26 - you're a complete beginner inevitably
10:27 - you'll make mistakes
10:29 - but that's the point of practice you'll
10:30 - correct your mistakes and eventually
10:33 - you'll stop making them so much okay so
10:36 - until next time happy coding

Cleaned transcript:

hello this is John from cave of programming calm we're continuing my free course here on nodejs and JavaScript for beginners and in this video we're going to look at adding two arrays so so far we've seen how to create arrays including twodimensional arrays but we've initialized them when we declare the variable we've been declaring them and initializing them with data at the same time but what we can also do is we can add data to existing arrays or we can even just declare an empty array and then add data to that so first of all let's take a look at what we would do for onedimensional arrays in other words lists because that's simpler than twodimensional arrays so let's declare out an empty array let's say let fruits equal and I'll use square brackets here to indicate just an empty array so one way that you can add items to an array is just to use an index to set items and the index that you use is the first index that's off the end of the array so if I were to refer to fruits 0 here because this has no items in it fruit 0 which would normally be the first item doesn't exist is off the end of the array already but I can actually set the item to expand the array so if I write fruits 0 equals orange that will actually expand the array and add one item to it let's do let's do console dot log fruits 0 to check that it works and this is well supported by all browsers and as far as I know all major browsers and has been for a long time so here I'm going to run my programs check that I'm in the right place yeah so let's do node and adding two arrays ojs and we can see we've got orange in that array so let's do another one what's what's the first item what's the index of the first item that would now be off the end of the array now that would now be one so we've got an array here with one item in it so their maximum index that we can use to access items is zero so if I pick the next index it's just off the end of the array one I can set that to expand the array let's write fruits one equals Apple and we could also output the length of the array console.log fruit stop length and if we try this then we find we've got an array with two items in it we're displaying only the first one let's display the second as well second item which is that index one there we go we've got orange and apple now this can seem counterintuitive if you've been programming in other languages because many programming languages would not let you do this javascript is in many ways unusually flexible for example if you did this in a c program or a java program it would cause problems you can't access or set elements of an array usually that are off the end of the array but javascript lets you do it however there is another way of doing this that is more similar to how you would usually do this in in probably most other programming languages and that's to use a method called push so a method is a subroutine it's a kind of function it's a collection of code that is associated with an object and an array here is isn't is what we call an object in JavaScript so you don't you don't really need to know that yet we're going to cover that later but what you need what you need to know is just how you actually do this so let's write fruits and we use them a method called push so push adds items to the end of an array let's do push and banana and then I'm gonna actually move this code up so you can get the new length of the array and that's it's also out put this new item which is now going to be at index two so if we take a look at this then we see we've now got banana in the array why is it called push well we're kind of thinking of an array here as it's kind of a bit like a stack a stack data structure is is a data structure where the first item that we room we remove is the last one we added so if you think of like a stack of cards a deck of cards you can put a card on the top and you can take it off again in computer programming those kinds of data structures are called stacks now an array is not a stack because you know we can read items from anywhere within the array but this terminology posh is used with stacks and it indicates basically pushing something onto the top of a stack in this case we've got an array if you think of it like a deck of cards were like putting a card on on top of the cards like pushing a card on top of the cards it's a bit like that I don't know if that information really helps but we talked about pushing things onto the end of the array and that terminal terminology I think really comes from stack data structures okay so we can iterate through our array as well of course we could do we could do that in various ways so let's maybe just use a for loop conventional for loop which is we've already seen that in the course so let's do four let I equals 0 I less than fruit dot length I plus plus and we're going to see other ways of iterating through arrays later on in the course and will access fruits pi because this is not necessarily the most convenient way to do this let's also output a blank line to kind of create some separation in that in our output so if we look at the output now here we can see we're iterating through the array and you want to become really fluent with creating arrays adding items to them and iterating through them with a for loop is something you can just learn through practice so how would we deal with a two dimensional array well with a two dimensional array the elements are themselves arrays so let's create a two dimensional array now we need kind of a table of something so let's maybe write let animals equal and again I'll set it equal to an empty array now there are various subtleties around this and various things you can do but for our purposes here this this will be good to get us started so we could add to the end of animals for example by using push and what do we want to add we want to add a raise so let's say animals dot posh and let's add the first row of this table now the thing that we want to push is itself going to be an array so to denote an array we write square brackets like this and in there we can add some a list of animals let's write dog cat and mouse and that will add items to our two dimensional array and we could iterate through it using the technique that we saw in a previous tutorial or for now I could just iterate through the outer array let's maybe put a blank line again console dot log and then do four let's I equals zero I less than animals dot length now I plus plus and we'll iterate through this array and output the elements in it just just as we did up here and notice this I the scope of it in other words the region where it exists is just here outside of that it doesn't exist and that's why we can create a new eye here so I'm going to output animals I and now we're outputting one row at a time we've only got one row in it so far so if I run this program then we can see we've got an array of animals coming out because the the array is the eye sorry the elements in this animals array are themselves arrays we can of course add more to it so let's have another row in the table and this time I'll put animals that that are not familiar with because we don't really have them in England like Tiger I am familiar with them we we just don't have them roaming about okay lion and elephant kind of be nice if there are elephants in England probably a bit destructive but anyway okay so let's run this and we can see down here if you can see this we've got two rows now and second row is my sort of tropical type or animals that we don't have in England okay so that's it for this video I'm going to give you an exercise in the next video which you can do to kind of improve your fluency with this if you want main thing to do though is just practice it and you know practice typing it out probably if you're a complete beginner inevitably you'll make mistakes but that's the point of practice you'll correct your mistakes and eventually you'll stop making them so much okay so until next time happy coding
