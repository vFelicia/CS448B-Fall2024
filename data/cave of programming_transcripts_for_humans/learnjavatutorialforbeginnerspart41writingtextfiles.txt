With timestamps:

00:00 - hello this is John from cave of
00:03 - programming calm in this tutorial we're
00:05 - going to look at writing files with Java
00:07 - which is pretty similar to reading files
00:10 - and I just want to also point out that
00:13 - if you if you're watching this on
00:15 - youtube or udemy or somewhere then you
00:18 - can find the source code for all of my
00:20 - free tutorials on cave or programming so
00:22 - if you go to cave of programming calm
00:24 - and at the moment where I've put it is
00:27 - you have to scroll down it's a bit
00:29 - obscure to these YouTube videos and
00:32 - let's say we want to know how to write
00:35 - the file we can go to sorry read the
00:39 - file look at reading files with file
00:41 - reader for example or actually let's
00:44 - take a look at this next one try with
00:45 - resources because I'm going to adapt
00:47 - this code a bit for this tutorial and if
00:50 - you scroll down you'll see you'll see
00:51 - the source code in there so this so this
00:56 - is the code that we've used in a
00:58 - previous tutorial for reading a file and
01:01 - writing files almost identical so I'm
01:05 - thinking about copying it just to save
01:08 - me typing illis let's do that let's just
01:10 - change it rather than type it all out
01:12 - again so I'll copy that and I'm going to
01:16 - use this I'll show you this using the
01:19 - Java 7 specific syntax that's kind of
01:21 - try with resources syntax but if you
01:25 - want to use Java 6 or earlier syntax
01:28 - then just look at the previous example
01:32 - let's go back here of go down to youtube
01:36 - videos here and if you look at reading
01:39 - files with file reader this tutorial and
01:42 - that I discuss reading files the old way
01:45 - that kind of pre Java 7 syntax and you
01:49 - can take what I'm about to show you in
01:50 - this tutorial and adapt it for previous
01:52 - versions of Java just like this if you
01:54 - want to but it is a bit more on winded
01:56 - so I've got a program set up in Eclipse
01:59 - here and let's just paste this in so it
02:03 - just does with reading files we need to
02:06 - create a file and now instead of using a
02:10 - buffered reader we're going to use a
02:13 - buffer
02:13 - writer and instead of using a file
02:15 - reader we're going to use a file writer
02:16 - so it's really that simple let's change
02:19 - this to buffered writer and I'll set a
02:24 - equal to new buffered writer and instead
02:26 - of file reader will have file writer
02:28 - this only applies to text files by the
02:31 - way you have to do something a bit
02:32 - different if you wanted to write binary
02:35 - files and then we don't want this stuff
02:37 - for reading the file and I suppose we
02:43 - yeah we don't want to catch file not
02:45 - found exception I don't think but we
02:47 - probably want to catch IO exception so
02:50 - I'll leave that in so now now we've got
02:56 - that the outline of the thing and but I
02:58 - need to put one one more thing in here
03:01 - and I don't I was going to say I need to
03:03 - close the file but I don't because this
03:07 - try with resources will handle it for me
03:09 - that's the point of it that it will call
03:11 - BR dot close if you're using previous
03:14 - versions of Java when you're writing
03:15 - files it's really important that you
03:18 - close the file so then you have to call
03:20 - B are close yourself because unless you
03:23 - close the file you won't see the stuff
03:24 - probably that you're actually writing to
03:26 - it but in this case with this syntax and
03:29 - it will close it for you automatically
03:31 - as we saw I think it's in the last
03:33 - tutorial so let's now just try writing
03:36 - some stuff to this file so the file
03:38 - doesn't exist at the moment test stop
03:40 - text I'm just going to say BR dot let's
03:44 - use right sees print and yeah oh yeah I
03:53 - can't you remember what what methods has
03:55 - got things got a write method that
03:57 - allows us to write strings yeah let's
03:59 - use that and we'll write a few lines so
04:03 - let's say I know this is line 1 and I
04:09 - have another line line 2 and to write a
04:13 - new line I'm not sure if it works if you
04:15 - put backslash n in but there's there's
04:19 - in any case is a BR dot new line method
04:22 - and then let's write one more line after
04:25 - that as well as say
04:26 - you're right and last line I'll do the
04:32 - trick
04:33 - and it's going to be closed I feel like
04:35 - I really want to type the odds up close
04:37 - but we had to really don't need to
04:39 - because this is this is going to call
04:40 - that method literally for me this try
04:43 - with resources syntax let's just run
04:46 - that and we could specify a full file
04:48 - path in here and if you do that all the
04:50 - considerations that we've talked about
04:51 - when we were looking at reading files
04:53 - also apply ie if you have a backslash in
04:56 - there then you need to backslash the
04:57 - backslash you need to escape it let's
04:59 - just run that so I think it ran and I'm
05:02 - just going to right-click the project
05:04 - and go to refresh and now here's the
05:07 - file
05:07 - we double click on that and here we've
05:10 - written some files and actually I forgot
05:12 - to write a new line between two of those
05:15 - so you can see that the second right
05:19 - there is just continued on the same line
05:21 - so if I run it again it's it's just
05:25 - going to recreate this file I might have
05:26 - to I was going to say imma have to
05:27 - refresh it by obviously don't it has
05:29 - refreshed and there's the file that I
05:31 - created and it sits in the project
05:34 - folder the root project folder because I
05:36 - didn't specify a full file path file
05:38 - path just the name and obviously if I
05:41 - had specified a full file path it will
05:44 - be somewhere else and it won't appear
05:47 - until you're right click and refresh the
05:48 - project either so you won't see it until
05:50 - you do that although it will actually be
05:51 - on the disk so if you browse to wherever
05:54 - the project is let's just go to right
05:56 - click go to properties and it's going to
05:59 - be if we click resource it's going to be
06:01 - here a sort of project is the file will
06:04 - actually exist it's just the eclipse
06:06 - won't show it to you until you refresh
06:08 - the project so that's it for this
06:10 - tutorial
06:10 - join me again next time and you can find
06:13 - lots more tutorials and articles on cave
06:15 - of programming calm until next time
06:18 - happy coding

Cleaned transcript:

hello this is John from cave of programming calm in this tutorial we're going to look at writing files with Java which is pretty similar to reading files and I just want to also point out that if you if you're watching this on youtube or udemy or somewhere then you can find the source code for all of my free tutorials on cave or programming so if you go to cave of programming calm and at the moment where I've put it is you have to scroll down it's a bit obscure to these YouTube videos and let's say we want to know how to write the file we can go to sorry read the file look at reading files with file reader for example or actually let's take a look at this next one try with resources because I'm going to adapt this code a bit for this tutorial and if you scroll down you'll see you'll see the source code in there so this so this is the code that we've used in a previous tutorial for reading a file and writing files almost identical so I'm thinking about copying it just to save me typing illis let's do that let's just change it rather than type it all out again so I'll copy that and I'm going to use this I'll show you this using the Java 7 specific syntax that's kind of try with resources syntax but if you want to use Java 6 or earlier syntax then just look at the previous example let's go back here of go down to youtube videos here and if you look at reading files with file reader this tutorial and that I discuss reading files the old way that kind of pre Java 7 syntax and you can take what I'm about to show you in this tutorial and adapt it for previous versions of Java just like this if you want to but it is a bit more on winded so I've got a program set up in Eclipse here and let's just paste this in so it just does with reading files we need to create a file and now instead of using a buffered reader we're going to use a buffer writer and instead of using a file reader we're going to use a file writer so it's really that simple let's change this to buffered writer and I'll set a equal to new buffered writer and instead of file reader will have file writer this only applies to text files by the way you have to do something a bit different if you wanted to write binary files and then we don't want this stuff for reading the file and I suppose we yeah we don't want to catch file not found exception I don't think but we probably want to catch IO exception so I'll leave that in so now now we've got that the outline of the thing and but I need to put one one more thing in here and I don't I was going to say I need to close the file but I don't because this try with resources will handle it for me that's the point of it that it will call BR dot close if you're using previous versions of Java when you're writing files it's really important that you close the file so then you have to call B are close yourself because unless you close the file you won't see the stuff probably that you're actually writing to it but in this case with this syntax and it will close it for you automatically as we saw I think it's in the last tutorial so let's now just try writing some stuff to this file so the file doesn't exist at the moment test stop text I'm just going to say BR dot let's use right sees print and yeah oh yeah I can't you remember what what methods has got things got a write method that allows us to write strings yeah let's use that and we'll write a few lines so let's say I know this is line 1 and I have another line line 2 and to write a new line I'm not sure if it works if you put backslash n in but there's there's in any case is a BR dot new line method and then let's write one more line after that as well as say you're right and last line I'll do the trick and it's going to be closed I feel like I really want to type the odds up close but we had to really don't need to because this is this is going to call that method literally for me this try with resources syntax let's just run that and we could specify a full file path in here and if you do that all the considerations that we've talked about when we were looking at reading files also apply ie if you have a backslash in there then you need to backslash the backslash you need to escape it let's just run that so I think it ran and I'm just going to rightclick the project and go to refresh and now here's the file we double click on that and here we've written some files and actually I forgot to write a new line between two of those so you can see that the second right there is just continued on the same line so if I run it again it's it's just going to recreate this file I might have to I was going to say imma have to refresh it by obviously don't it has refreshed and there's the file that I created and it sits in the project folder the root project folder because I didn't specify a full file path file path just the name and obviously if I had specified a full file path it will be somewhere else and it won't appear until you're right click and refresh the project either so you won't see it until you do that although it will actually be on the disk so if you browse to wherever the project is let's just go to right click go to properties and it's going to be if we click resource it's going to be here a sort of project is the file will actually exist it's just the eclipse won't show it to you until you refresh the project so that's it for this tutorial join me again next time and you can find lots more tutorials and articles on cave of programming calm until next time happy coding
