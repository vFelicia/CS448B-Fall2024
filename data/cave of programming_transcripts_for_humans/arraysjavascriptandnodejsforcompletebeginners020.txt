With timestamps:

00:00 - hello this is John from cave our
00:02 - programming calm in this video we're
00:04 - going to take a look at arrays in
00:07 - JavaScript and nodejs continuing my
00:10 - course on nodejs and javascript for
00:13 - complete beginners so in the last video
00:15 - we took a look at four loops and now
00:18 - we're going to look at arrays so let's
00:20 - create a new file here in visual studio
00:22 - code and I'll call it a raised dot yes
00:27 - and as usual I'm going to write you
00:29 - strict at the top so an array is a list
00:34 - of items it's a you can think of it like
00:37 - a numbered list of items so let's let's
00:43 - create a variable I'm going to call this
00:45 - days and I'm going to set it equal to
00:48 - and now we've we've seen variables that
00:51 - have there are the type text so I could
00:54 - write you know days equals hello or
00:57 - whatever and we've seen numerical
00:59 - variables like 7.3 but I can actually
01:04 - set a single variable equal to a whole
01:06 - list of things and the way we do that is
01:09 - well there are various ways to do this
01:11 - in JavaScript but again here I'm going
01:14 - to concentrate in this first part of the
01:18 - course on stuff that is similar to what
01:21 - you get in other programming languages
01:22 - and there is also very common in
01:25 - JavaScript just concentrating on the
01:27 - simplest ways of doing things and
01:29 - fundamental building blocks so we write
01:32 - two square brackets here and then the
01:34 - usual semicolon and in these two square
01:37 - brackets I can put a list of things now
01:42 - its usual to put a list of things that
01:46 - are all the same type although you don't
01:49 - have to so here I'm going to write days
01:52 - of the week let's have Sunday Monday
01:56 - Tuesday and that's enough I think so
02:02 - this this is like it's like a shopping
02:05 - list of well days in this case which is
02:08 - a bit weird but each of these items is
02:11 - numbered starting at 0
02:13 - and the fact that that things in an in
02:15 - an array on numbered starting at zero
02:17 - does tend to confuse beginners but you
02:23 - just have to sort of get used to it
02:25 - so to actually access a we call these
02:28 - things elements we call the items in an
02:30 - array elements of the array and to
02:33 - actually access them we we do it like
02:36 - this let's write console.log and access
02:41 - an element of this array so the first
02:43 - one would be so the variable name and
02:46 - then square brackets and then a number
02:50 - like that so we're this is item zero in
02:54 - the array so here we use square brackets
02:56 - to actually initialize a variable this
02:59 - is here we're using square brackets to
03:01 - actually create an array and here now
03:05 - that we've got the variable we're using
03:07 - those same square brackets with just an
03:09 - integer inside to access elements of the
03:14 - array and this is sometimes called
03:16 - dereferencing dereferencing the array so
03:21 - if we run this program then let's run
03:25 - node arrays j/s we get sunday the first
03:30 - item in the array we could also have for
03:34 - example set a variable equal to this
03:38 - let's try that with the second element
03:40 - at index 1 so that's right let let day
03:48 - equal days one and then console.log day
03:57 - so because we start numbering at zero
04:00 - item number one in the array is Monday
04:05 - so we've got 0 1 & 2 and here we're just
04:09 - with dereferencing the array getting a
04:11 - value out of it and getting an element
04:16 - from the array and we were using it to
04:19 - initialize this variable day and then
04:23 - outputting it
04:24 - let's try that I'm just gonna clear my
04:28 - console no we've got Monday let's let's
04:34 - that well was that didn't want that
04:36 - there okay
04:38 - let's try and the final element so the
04:41 - final element days of course at index 2
04:45 - and that is Tuesday you can you can have
04:51 - a raise that are absolutely massive so
04:55 - there we go Tuesday we've got three
04:57 - elements here but and you know if you're
05:00 - having to initialize arrays by hands
05:03 - sort of hard-coding and literal values
05:06 - like this then you're not going to have
05:08 - many values because it's going to get
05:10 - boring to tighten them but you could for
05:11 - example initialize an array from values
05:13 - in a file or from values that you've
05:16 - created somehow and arrays can then
05:20 - potentially have you know even millions
05:23 - tens of millions or whatever entries in
05:25 - them so you can put a lot of stuff in
05:27 - array we could have an array of numbers
05:31 - for example so let's write let what
05:36 - should we call this I don't really know
05:40 - heights equal imagine this is these are
05:43 - Heights or a bunch of people so we have
05:46 - the square brackets and then we have how
05:50 - are they going to be 1.7 may be meters
05:53 - one point six five one point five one
05:59 - point nine and we can do the same thing
06:05 - with that just you know like consult
06:07 - logs so for example this will be our
06:11 - index two in the array so that's index
06:14 - zero one two three so that's output it
06:18 - Heights to JavaScript
06:23 - unlike many more strict programming
06:25 - languages doesn't always force you to
06:28 - put that semicolon at the end of a
06:30 - statement but it is a good idea to put
06:33 - it in okay let's try running this and we
06:37 - get one point five down there we can mix
06:43 - things of different types in JavaScript
06:45 - arrays so let's maybe first though look
06:51 - at how we would iterate through an array
06:55 - so one thing to say is that we can get
06:58 - the length of an array so we can do that
07:01 - like this let's get the length of this
07:03 - Hight's array console.log height length
07:09 - so we used the variable name of the
07:11 - array and then dot length and that that
07:14 - tells us how many items are in the array
07:17 - so if you run this we see there are four
07:20 - items that's that's right here items in
07:26 - heights array I tend to revert using
07:34 - double quotes because they're probably
07:37 - more common in programming languages so
07:39 - I'm used to typing them but I I do sort
07:42 - of prefer single quotes for JavaScript
07:45 - personally I don't know I just think it
07:47 - looks nicer anyway let's let's try this
07:50 - so items in height sorry for so we've
07:53 - got four items in the heights array but
07:56 - notice the last item would be at index 3
07:58 - so one less than the length of the array
08:01 - and that's because we start numbering at
08:05 - zero and this this can be confusing
08:07 - sometimes we call it the off by one
08:10 - problem or related problems we call them
08:13 - the off by one problem you have to
08:16 - remember that the last element of the
08:17 - array is a index length minus one so we
08:24 - can actually iterate through the whole
08:27 - array and output every item in it with a
08:30 - for loop and if you've been following
08:32 - this course from the start and you're a
08:35 - relative beginner
08:36 - I would recommend now trying to do that
08:38 - yourself see if you can work out how to
08:39 - do it can you use a for-loop to output
08:43 - every item in an array like this one and
08:48 - I'm going to show you how to do it so if
08:49 - you want to have a go at that pause the
08:50 - video and try it
08:52 - so let's write four I can use let I
08:58 - equal zero I less than Heights length I
09:05 - plus plus and then we can use ie to
09:11 - access all the items in the array so I
09:13 - can write console.log heights square
09:18 - brackets I let's maybe put some text
09:24 - here so the output isn't too confusing
09:27 - item in Heights array I can even put
09:35 - item it's right item I in Heights array
09:42 - let's try that and see what it looks so
09:45 - what we what it looks like so we get
09:47 - this so this stuff here and we've output
09:53 - successfully the entire array now in
09:57 - JavaScript we can actually put things of
10:02 - different types in arrays so I could
10:04 - write here hello like that and if I now
10:09 - try to output that array you know it
10:13 - still works but it has to be said that
10:17 - in general in programming if you have an
10:20 - array like this generally you're going
10:22 - to put things at the same type in it and
10:25 - generally you're going to write code
10:26 - that treats the elements in the array
10:30 - all in the same kind of a way so you
10:32 - won't want them to be all the same kind
10:34 - of a thing all right we'll leave it
10:36 - there for this video and the thing to do
10:39 - as always if you're confused by this or
10:42 - even if you're not if if you have if
10:44 - you're not used to working with arrays
10:46 - and using for loops and things you just
10:49 - just
10:50 - this try out for yourself try to get to
10:52 - a point where you can just write it out
10:54 - from memory I don't think it's helpful
10:57 - to take notes I do think it's helpful to
11:00 - type this stuff out even multiple times
11:03 - until you can do it from memory and
11:07 - don't forget you can also find my github
11:09 - repository at get TOCOM slash cave of
11:12 - programming and then go to the go to the
11:16 - repository for this course
11:18 - if you want to browse the source code
11:20 - online okay we'll leave it there for now
11:24 - until next time happy coding

Cleaned transcript:

hello this is John from cave our programming calm in this video we're going to take a look at arrays in JavaScript and nodejs continuing my course on nodejs and javascript for complete beginners so in the last video we took a look at four loops and now we're going to look at arrays so let's create a new file here in visual studio code and I'll call it a raised dot yes and as usual I'm going to write you strict at the top so an array is a list of items it's a you can think of it like a numbered list of items so let's let's create a variable I'm going to call this days and I'm going to set it equal to and now we've we've seen variables that have there are the type text so I could write you know days equals hello or whatever and we've seen numerical variables like 7.3 but I can actually set a single variable equal to a whole list of things and the way we do that is well there are various ways to do this in JavaScript but again here I'm going to concentrate in this first part of the course on stuff that is similar to what you get in other programming languages and there is also very common in JavaScript just concentrating on the simplest ways of doing things and fundamental building blocks so we write two square brackets here and then the usual semicolon and in these two square brackets I can put a list of things now its usual to put a list of things that are all the same type although you don't have to so here I'm going to write days of the week let's have Sunday Monday Tuesday and that's enough I think so this this is like it's like a shopping list of well days in this case which is a bit weird but each of these items is numbered starting at 0 and the fact that that things in an in an array on numbered starting at zero does tend to confuse beginners but you just have to sort of get used to it so to actually access a we call these things elements we call the items in an array elements of the array and to actually access them we we do it like this let's write console.log and access an element of this array so the first one would be so the variable name and then square brackets and then a number like that so we're this is item zero in the array so here we use square brackets to actually initialize a variable this is here we're using square brackets to actually create an array and here now that we've got the variable we're using those same square brackets with just an integer inside to access elements of the array and this is sometimes called dereferencing dereferencing the array so if we run this program then let's run node arrays j/s we get sunday the first item in the array we could also have for example set a variable equal to this let's try that with the second element at index 1 so that's right let let day equal days one and then console.log day so because we start numbering at zero item number one in the array is Monday so we've got 0 1 & 2 and here we're just with dereferencing the array getting a value out of it and getting an element from the array and we were using it to initialize this variable day and then outputting it let's try that I'm just gonna clear my console no we've got Monday let's let's that well was that didn't want that there okay let's try and the final element so the final element days of course at index 2 and that is Tuesday you can you can have a raise that are absolutely massive so there we go Tuesday we've got three elements here but and you know if you're having to initialize arrays by hands sort of hardcoding and literal values like this then you're not going to have many values because it's going to get boring to tighten them but you could for example initialize an array from values in a file or from values that you've created somehow and arrays can then potentially have you know even millions tens of millions or whatever entries in them so you can put a lot of stuff in array we could have an array of numbers for example so let's write let what should we call this I don't really know heights equal imagine this is these are Heights or a bunch of people so we have the square brackets and then we have how are they going to be 1.7 may be meters one point six five one point five one point nine and we can do the same thing with that just you know like consult logs so for example this will be our index two in the array so that's index zero one two three so that's output it Heights to JavaScript unlike many more strict programming languages doesn't always force you to put that semicolon at the end of a statement but it is a good idea to put it in okay let's try running this and we get one point five down there we can mix things of different types in JavaScript arrays so let's maybe first though look at how we would iterate through an array so one thing to say is that we can get the length of an array so we can do that like this let's get the length of this Hight's array console.log height length so we used the variable name of the array and then dot length and that that tells us how many items are in the array so if you run this we see there are four items that's that's right here items in heights array I tend to revert using double quotes because they're probably more common in programming languages so I'm used to typing them but I I do sort of prefer single quotes for JavaScript personally I don't know I just think it looks nicer anyway let's let's try this so items in height sorry for so we've got four items in the heights array but notice the last item would be at index 3 so one less than the length of the array and that's because we start numbering at zero and this this can be confusing sometimes we call it the off by one problem or related problems we call them the off by one problem you have to remember that the last element of the array is a index length minus one so we can actually iterate through the whole array and output every item in it with a for loop and if you've been following this course from the start and you're a relative beginner I would recommend now trying to do that yourself see if you can work out how to do it can you use a forloop to output every item in an array like this one and I'm going to show you how to do it so if you want to have a go at that pause the video and try it so let's write four I can use let I equal zero I less than Heights length I plus plus and then we can use ie to access all the items in the array so I can write console.log heights square brackets I let's maybe put some text here so the output isn't too confusing item in Heights array I can even put item it's right item I in Heights array let's try that and see what it looks so what we what it looks like so we get this so this stuff here and we've output successfully the entire array now in JavaScript we can actually put things of different types in arrays so I could write here hello like that and if I now try to output that array you know it still works but it has to be said that in general in programming if you have an array like this generally you're going to put things at the same type in it and generally you're going to write code that treats the elements in the array all in the same kind of a way so you won't want them to be all the same kind of a thing all right we'll leave it there for this video and the thing to do as always if you're confused by this or even if you're not if if you have if you're not used to working with arrays and using for loops and things you just just this try out for yourself try to get to a point where you can just write it out from memory I don't think it's helpful to take notes I do think it's helpful to type this stuff out even multiple times until you can do it from memory and don't forget you can also find my github repository at get TOCOM slash cave of programming and then go to the go to the repository for this course if you want to browse the source code online okay we'll leave it there for now until next time happy coding
