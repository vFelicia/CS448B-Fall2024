With timestamps:

00:00 - hello in this video we're going to look
00:02 - at
00:03 - various different ways of incrementing
00:05 - and decrementing variables
00:07 - so we've seen that in our video on while
00:09 - loops
00:11 - uh that we had to increment a variable
00:14 - and that's such an important thing to do
00:16 - and there are various ways to do it so
00:18 - we're going to look at some of them here
00:19 - and that's going to sort of although it
00:21 - might not seem
00:23 - very important now we're going to find
00:25 - that this is going to be quite
00:26 - enlightening
00:27 - as we progress through the course so
00:30 - let's start off with a variable here i'm
00:32 - going to make to type int
00:35 - and i'm going to let's call it just
00:38 - count
00:39 - and set it equal to zero
00:43 - so what we did to incr increment our
00:46 - variable
00:47 - for our while loop was we wrote this
00:50 - something like this count plus
00:54 - count sorry count equals count
00:57 - plus one and we've already gone over
01:01 - that so i won't go over it again
01:03 - um and then if we output it then okay it
01:07 - started at zero
01:08 - and so it's going to be one now and if
01:10 - we just run that then we can see the
01:12 - value one in the console
01:14 - of course if i started it at something
01:16 - else like 11
01:17 - and i increment it it will be 12 so
01:19 - there's no great mysteries there
01:21 - nothing special about zero here
01:24 - now there are various other ways we can
01:26 - do that
01:28 - so um one way is
01:31 - we can um we can use the same operator
01:35 - that we previously used with strings
01:36 - plus equals
01:38 - so i could say here let's increment it
01:41 - further
01:42 - so i could say here count plus equals
01:44 - one
01:46 - and then we'll output it
01:49 - so what we're doing here is um we start
01:52 - off with count at zero
01:54 - and then we're adding one to it by the
01:56 - most
01:57 - basic kind of simple method we're
02:00 - outputting it
02:01 - and then we're adding one to it by
02:02 - another method and outputting it again
02:05 - so we expect to see one and two in the
02:08 - console
02:09 - now what this does is plus equals is
02:12 - exactly equivalent to count
02:16 - equals count plus one it's equivalent to
02:19 - that it's like a sort of synonym for it
02:22 - the plus equals operator takes the
02:25 - existing value of a variable
02:27 - and adds something to it or
02:31 - it kind of looks like it does that at
02:33 - least with with strings
02:37 - with strings you use it to concatenate
02:39 - more text
02:40 - to an existing string basically and in
02:43 - fact
02:46 - with strings what you're really doing is
02:48 - creating completely new string
02:50 - and create and assigning the original
02:52 - string
02:53 - reference to refer to a new string but
02:55 - that's not important
02:56 - we'll leave that aside for now but i
02:58 - just wanted to mention that
03:00 - um so yeah we're taking
03:03 - count and we're adding one to its
03:05 - existing value using
03:06 - plus equals and we'll just run that
03:08 - let's run it
03:11 - so uh we've got one and two uh coming
03:14 - out in the console there
03:15 - so let's increment it by yet another uh
03:19 - way of incrementing variables let's do
03:22 - count
03:23 - plus plus semicolon
03:27 - so this is um is the
03:30 - well it's the increment operator um
03:34 - it's uh
03:37 - yeah there's there's some subtleties to
03:39 - this but i'm going to leave them aside
03:41 - just for this minute
03:42 - let's just output this already
03:48 - so that does it in this case it does the
03:51 - same thing as these other statements
03:53 - that we've got it's just going to
03:54 - increase the value of count by one so
03:57 - now with with these statements here
03:59 - you don't have to increase the value of
04:00 - count by one you could increase it by
04:02 - anything you like
04:03 - we're just specifying one here as it
04:05 - happens
04:06 - in this case it specifically increases
04:10 - the values of integers by one so you
04:13 - can't use it to increase them by 10 or
04:15 - something is
04:16 - is going to be one so what we expect now
04:19 - is to see that
04:20 - after we've done that and we if we print
04:22 - it out again
04:23 - its value will now at this point in a
04:25 - program
04:26 - it will be three so if we run this
04:30 - we see it's three so we've got one two
04:32 - three
04:35 - another thing we can do is
04:38 - this plus plus count and don't forget
04:41 - the semicolon
04:42 - of course as usual and if we output that
04:47 - this does almost the same thing as this
04:50 - so if we run it indeed it's increased
04:54 - the value of count to four
04:57 - now this is called the postfix version
05:01 - of this operator postfix meaning
05:04 - after you know it's kind of fixed on
05:06 - after the variable
05:08 - this is the prefix version prefix
05:10 - meaning well a prefix you know it's
05:12 - fixed in place before the variable
05:16 - uh there is a difference between the
05:18 - this and this but we won't look at it in
05:19 - this video
05:20 - um we'll talk about it in another video
05:24 - so we see here that there are four
05:28 - different ways
05:29 - um that spring to my mind at least that
05:32 - we could
05:33 - increase or increment the value of this
05:36 - of a variable of an integer variable
05:39 - first way is this
05:40 - count equals count plus one we can also
05:43 - do count plus equals
05:44 - one or count plus equals whatever other
05:46 - number we want
05:48 - and then we can use a postfix increment
05:52 - operator count plus plus or we could use
05:55 - a prefix increment operator
05:57 - plus plus count
06:00 - um so i would suggest trying those out
06:04 - but actually before you do that
06:07 - let's look at decrementing the variable
06:10 - as well
06:11 - so i can do the same thing in reverse
06:13 - for every
06:15 - increment operator there's a kind of
06:18 - well for every
06:18 - way of incrementing this there's also a
06:20 - way of decrementing it
06:22 - so if i say count equals
06:26 - count minus one
06:29 - that's going to that's going to take the
06:32 - value of count
06:33 - subtract one from that value and at the
06:36 - moment we're then holding that
06:38 - new value temporarily in memory and then
06:40 - assign that new value
06:42 - to the original variable so this has the
06:45 - effect of subtracting one
06:47 - from the value of calm i'm giving you
06:50 - explanations here but
06:52 - that is to try to hopefully you'll
06:55 - understand bits of my explanations
06:57 - at least but the real learning will take
07:00 - place
07:00 - when you type this out and try it and
07:02 - even experiment with it
07:04 - so if we now run this then we get one
07:07 - two three four and then we decremented
07:09 - it and we've got
07:10 - down to three again we can also
07:13 - decrement using this kind of a technique
07:16 - so instead of plus equals we can do
07:18 - minus equals
07:19 - let's do count minus equals one
07:23 - and sis out
07:28 - let's run this so now it's down to two
07:33 - uh so this this is precisely equivalent
07:37 - to this let's just format that to get
07:39 - rid of that blank line well that doesn't
07:40 - work
07:41 - oh yeah it does okay so this
07:44 - and this mean exactly the same thing
07:48 - we can also do count negative negative
07:51 - or count minus minus so that's the
07:54 - postfix decrement operator
07:58 - and that works just fine so if we run
08:00 - this now
08:01 - it's down to one and finally
08:05 - we can do a prefix decrement operator we
08:08 - could do this
08:09 - count minus minus count
08:12 - we could have used any of these methods
08:15 - in our for loop
08:16 - in our while loop sorry uh well any of
08:18 - the methods that increment it
08:21 - at least so let's run this
08:24 - and we get finally we get down to zero
08:27 - which is what it was to start with and
08:30 - to make that clearer actually
08:32 - after i initially uh assign a value zero
08:36 - to count
08:37 - let's put an initial sis out in there
08:41 - so it starts off at zero we increment it
08:44 - one two three four
08:45 - and then we're decrementing it by
08:46 - various methods three two one zero
08:49 - now what i'd suggest is that you type
08:53 - all of these yourself um either one
08:55 - after the other or just try them
08:58 - just create a program increment a
09:00 - variable in it
09:01 - like this run it check that it works
09:05 - and then change that to this so
09:09 - get this to work once you've tried them
09:11 - all out
09:12 - try to write this program from memory
09:16 - that is start with a variable
09:17 - that has some value for example zero and
09:20 - then
09:20 - increment it by each of the four
09:22 - different methods
09:24 - and then outputting it every time
09:26 - afterwards
09:27 - and then decrement it by each of the
09:29 - four methods
09:31 - outputting it every time if you can be
09:34 - bothered to do that that will help
09:35 - fix all these different operators in
09:37 - your mind
09:38 - and then uh you'll you'll feel more
09:40 - confident when we actually start using
09:42 - them
09:43 - so in other words try to replicate this
09:45 - program from memory
09:46 - but i probably suggest unless you're
09:48 - feeling confident
09:50 - that you try each of them out
09:51 - individually before you try to do it all
09:54 - without referring back to this code have
09:56 - a go at it and see how far you get
09:58 - okay so until next time happy coding

Cleaned transcript:

hello in this video we're going to look at various different ways of incrementing and decrementing variables so we've seen that in our video on while loops uh that we had to increment a variable and that's such an important thing to do and there are various ways to do it so we're going to look at some of them here and that's going to sort of although it might not seem very important now we're going to find that this is going to be quite enlightening as we progress through the course so let's start off with a variable here i'm going to make to type int and i'm going to let's call it just count and set it equal to zero so what we did to incr increment our variable for our while loop was we wrote this something like this count plus count sorry count equals count plus one and we've already gone over that so i won't go over it again um and then if we output it then okay it started at zero and so it's going to be one now and if we just run that then we can see the value one in the console of course if i started it at something else like 11 and i increment it it will be 12 so there's no great mysteries there nothing special about zero here now there are various other ways we can do that so um one way is we can um we can use the same operator that we previously used with strings plus equals so i could say here let's increment it further so i could say here count plus equals one and then we'll output it so what we're doing here is um we start off with count at zero and then we're adding one to it by the most basic kind of simple method we're outputting it and then we're adding one to it by another method and outputting it again so we expect to see one and two in the console now what this does is plus equals is exactly equivalent to count equals count plus one it's equivalent to that it's like a sort of synonym for it the plus equals operator takes the existing value of a variable and adds something to it or it kind of looks like it does that at least with with strings with strings you use it to concatenate more text to an existing string basically and in fact with strings what you're really doing is creating completely new string and create and assigning the original string reference to refer to a new string but that's not important we'll leave that aside for now but i just wanted to mention that um so yeah we're taking count and we're adding one to its existing value using plus equals and we'll just run that let's run it so uh we've got one and two uh coming out in the console there so let's increment it by yet another uh way of incrementing variables let's do count plus plus semicolon so this is um is the well it's the increment operator um it's uh yeah there's there's some subtleties to this but i'm going to leave them aside just for this minute let's just output this already so that does it in this case it does the same thing as these other statements that we've got it's just going to increase the value of count by one so now with with these statements here you don't have to increase the value of count by one you could increase it by anything you like we're just specifying one here as it happens in this case it specifically increases the values of integers by one so you can't use it to increase them by 10 or something is is going to be one so what we expect now is to see that after we've done that and we if we print it out again its value will now at this point in a program it will be three so if we run this we see it's three so we've got one two three another thing we can do is this plus plus count and don't forget the semicolon of course as usual and if we output that this does almost the same thing as this so if we run it indeed it's increased the value of count to four now this is called the postfix version of this operator postfix meaning after you know it's kind of fixed on after the variable this is the prefix version prefix meaning well a prefix you know it's fixed in place before the variable uh there is a difference between the this and this but we won't look at it in this video um we'll talk about it in another video so we see here that there are four different ways um that spring to my mind at least that we could increase or increment the value of this of a variable of an integer variable first way is this count equals count plus one we can also do count plus equals one or count plus equals whatever other number we want and then we can use a postfix increment operator count plus plus or we could use a prefix increment operator plus plus count um so i would suggest trying those out but actually before you do that let's look at decrementing the variable as well so i can do the same thing in reverse for every increment operator there's a kind of well for every way of incrementing this there's also a way of decrementing it so if i say count equals count minus one that's going to that's going to take the value of count subtract one from that value and at the moment we're then holding that new value temporarily in memory and then assign that new value to the original variable so this has the effect of subtracting one from the value of calm i'm giving you explanations here but that is to try to hopefully you'll understand bits of my explanations at least but the real learning will take place when you type this out and try it and even experiment with it so if we now run this then we get one two three four and then we decremented it and we've got down to three again we can also decrement using this kind of a technique so instead of plus equals we can do minus equals let's do count minus equals one and sis out let's run this so now it's down to two uh so this this is precisely equivalent to this let's just format that to get rid of that blank line well that doesn't work oh yeah it does okay so this and this mean exactly the same thing we can also do count negative negative or count minus minus so that's the postfix decrement operator and that works just fine so if we run this now it's down to one and finally we can do a prefix decrement operator we could do this count minus minus count we could have used any of these methods in our for loop in our while loop sorry uh well any of the methods that increment it at least so let's run this and we get finally we get down to zero which is what it was to start with and to make that clearer actually after i initially uh assign a value zero to count let's put an initial sis out in there so it starts off at zero we increment it one two three four and then we're decrementing it by various methods three two one zero now what i'd suggest is that you type all of these yourself um either one after the other or just try them just create a program increment a variable in it like this run it check that it works and then change that to this so get this to work once you've tried them all out try to write this program from memory that is start with a variable that has some value for example zero and then increment it by each of the four different methods and then outputting it every time afterwards and then decrement it by each of the four methods outputting it every time if you can be bothered to do that that will help fix all these different operators in your mind and then uh you'll you'll feel more confident when we actually start using them so in other words try to replicate this program from memory but i probably suggest unless you're feeling confident that you try each of them out individually before you try to do it all without referring back to this code have a go at it and see how far you get okay so until next time happy coding
