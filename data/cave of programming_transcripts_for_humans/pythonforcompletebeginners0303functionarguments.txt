With timestamps:

00:00 - in this video we're going to take a look
00:01 - at function arguments let's create a
00:04 - simple function I'm going to use the
00:07 - defa keyword and then I'll make up a
00:09 - name like
00:11 - greet and so we've got the round
00:13 - brackets the colon and I'll make this
00:15 - function just print
00:18 - hello now let's create a main function
00:21 - So Def main round brackets column and
00:25 - this is where we put the code that
00:27 - basically starts off our program so for
00:30 - the moment let's just call greet in
00:32 - there and then at the bottom of the
00:34 - program we're going to run main we're
00:36 - going to call
00:37 - Main so we call Main here main simply
00:41 - calls the Greet function that's all it
00:43 - does and the Greet function is going to
00:45 - print hello let's run it and see what it
00:50 - does so it just says hello now supposing
00:54 - in main we do some stuff before we call
00:56 - the Greet function namely I'm going to
00:59 - ask the user what their name is let's
01:02 - say name equals
01:04 - input what is your name and we'll create
01:08 - a sort of prompt here for them to type
01:12 - at so I run the
01:15 - program it says what is your name then
01:18 - it says hello now it would be nice if I
01:21 - got this greet function to print hello
01:23 - and then my
01:25 - name but the problem is how do I get
01:27 - name from here in Main
01:31 - to here in the Greet function where I
01:33 - can actually print it out
01:35 - usefully and we do this with something
01:39 - called function arguments so an argument
01:42 - as I've said previously is a piece of
01:45 - data that you passed to a function and
01:46 - we have been using those we passed here
01:49 - for example an argument to the input
01:53 - function what if we could pass an
01:55 - argument to the Greet
01:57 - function which we could then use inside
02:00 - greet let's in here in the round
02:04 - brackets type a variable name which I'm
02:07 - going to make up let's call it
02:10 - username so this is literally just the
02:12 - name of a variable that I've literally
02:14 - just made up and typing variable names
02:17 - within these round brackets here
02:20 - actually creates this variable but now
02:23 - greet expects us to pass some data to it
02:26 - because of this so I can pass name in
02:29 - here
02:30 - and name will end up in this variable
02:33 - here so we can actually print it out
02:36 - let's put a space there and then do plus
02:43 - username so you can think of these round
02:45 - brackets as a bit like a kind of a chute
02:49 - you're getting name here and then you're
02:52 - throwing it down the
02:53 - Chute and where does it appear it
02:56 - appears here so it lands in this
02:59 - variable here
03:00 - and then we can actually use it let's
03:02 - just run this so you can see what it
03:04 - does what is your name John and it says
03:07 - hello John so this variable username it
03:10 - has nothing to do with this name
03:12 - variable it's a totally different
03:14 - variable but it ends up referring to the
03:16 - same piece of data which is whatever
03:19 - name the user enters at the prompt I
03:22 - could also call this
03:24 - name I could write name here if I want
03:26 - and then I have to write name there
03:29 - but it's important to realize that
03:32 - this bit of code here is actually
03:35 - creating a new variable called name
03:37 - which has nothing to do with this
03:39 - variable called name there's no
03:40 - connection between them yes these
03:42 - variables are both called
03:44 - name but they're not the same variable a
03:47 - kind of connection is made only in as
03:50 - much as we are passing some data to the
03:53 - Greet function which the name variable
03:56 - at this point refers to and that ends up
03:58 - in this name variable here let's change
04:00 - this back to username because I think to
04:03 - start with that's less
04:05 - confusing to have different names for
04:07 - these two
04:09 - variables in fact every variable has a
04:11 - scope that is it has a region or area of
04:14 - the
04:15 - program where the variable actually
04:17 - exists so this name variable here is
04:21 - going to exist within this main function
04:25 - and this username variable exists within
04:27 - this greet function and outside of that
04:30 - they don't exist so if I put some code
04:33 - here and try to write print
04:37 - name I'm just going to get an error
04:39 - because outside of this function name
04:42 - does not exist that's outside of the
04:45 - scope of this name variable we can only
04:48 - refer to it inside the function so if I
04:51 - put some
04:52 - code into this function code block then
04:56 - of course we can refer to it
05:00 - so let's get rid of this and the thing
05:02 - to do with this I think is just type it
05:05 - out and get it working as usual and you
05:08 - can play around with it a bit you could
05:10 - try defining another function see if you
05:12 - can pass some different piece of data to
05:15 - a different function maybe whatever you
05:17 - like but the important thing is to type
05:18 - this out and actually see it working
05:22 - after you've typed it yourself you've
05:23 - been watching a free sample from my
05:26 - Python and machine learning for complete
05:28 - beginners course I'm uploading enough
05:31 - videos from the start of the course to
05:33 - get you started with python and machine
05:35 - learning the full course is absolutely
05:37 - massive if you're interested in it
05:39 - please click the link in the description
05:42 - the complete course covers not only
05:44 - basic python but also some fairly
05:46 - Advanced python even some desktop
05:49 - programming stuff and then goes on to
05:51 - machine learning and artificial
05:53 - intelligence until next time happy
05:56 - coding

Cleaned transcript:

in this video we're going to take a look at function arguments let's create a simple function I'm going to use the defa keyword and then I'll make up a name like greet and so we've got the round brackets the colon and I'll make this function just print hello now let's create a main function So Def main round brackets column and this is where we put the code that basically starts off our program so for the moment let's just call greet in there and then at the bottom of the program we're going to run main we're going to call Main so we call Main here main simply calls the Greet function that's all it does and the Greet function is going to print hello let's run it and see what it does so it just says hello now supposing in main we do some stuff before we call the Greet function namely I'm going to ask the user what their name is let's say name equals input what is your name and we'll create a sort of prompt here for them to type at so I run the program it says what is your name then it says hello now it would be nice if I got this greet function to print hello and then my name but the problem is how do I get name from here in Main to here in the Greet function where I can actually print it out usefully and we do this with something called function arguments so an argument as I've said previously is a piece of data that you passed to a function and we have been using those we passed here for example an argument to the input function what if we could pass an argument to the Greet function which we could then use inside greet let's in here in the round brackets type a variable name which I'm going to make up let's call it username so this is literally just the name of a variable that I've literally just made up and typing variable names within these round brackets here actually creates this variable but now greet expects us to pass some data to it because of this so I can pass name in here and name will end up in this variable here so we can actually print it out let's put a space there and then do plus username so you can think of these round brackets as a bit like a kind of a chute you're getting name here and then you're throwing it down the Chute and where does it appear it appears here so it lands in this variable here and then we can actually use it let's just run this so you can see what it does what is your name John and it says hello John so this variable username it has nothing to do with this name variable it's a totally different variable but it ends up referring to the same piece of data which is whatever name the user enters at the prompt I could also call this name I could write name here if I want and then I have to write name there but it's important to realize that this bit of code here is actually creating a new variable called name which has nothing to do with this variable called name there's no connection between them yes these variables are both called name but they're not the same variable a kind of connection is made only in as much as we are passing some data to the Greet function which the name variable at this point refers to and that ends up in this name variable here let's change this back to username because I think to start with that's less confusing to have different names for these two variables in fact every variable has a scope that is it has a region or area of the program where the variable actually exists so this name variable here is going to exist within this main function and this username variable exists within this greet function and outside of that they don't exist so if I put some code here and try to write print name I'm just going to get an error because outside of this function name does not exist that's outside of the scope of this name variable we can only refer to it inside the function so if I put some code into this function code block then of course we can refer to it so let's get rid of this and the thing to do with this I think is just type it out and get it working as usual and you can play around with it a bit you could try defining another function see if you can pass some different piece of data to a different function maybe whatever you like but the important thing is to type this out and actually see it working after you've typed it yourself you've been watching a free sample from my Python and machine learning for complete beginners course I'm uploading enough videos from the start of the course to get you started with python and machine learning the full course is absolutely massive if you're interested in it please click the link in the description the complete course covers not only basic python but also some fairly Advanced python even some desktop programming stuff and then goes on to machine learning and artificial intelligence until next time happy coding
