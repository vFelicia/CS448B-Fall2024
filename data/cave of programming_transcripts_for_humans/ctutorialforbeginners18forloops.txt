With timestamps:

00:17 - hello this is John from cave of
00:20 - programming calm in this tutorial we're
00:23 - going to look at fall in C++
00:27 - I totally forgotten in last video that
00:29 - we still haven't covered the most
00:31 - important type of loop in C++ and I've
00:34 - saved this one for after we covered a
00:37 - while because and do-while because it's
00:39 - a little bit more complicated but it's
00:41 - very commonly used and very very useful
00:45 - so that the for loop looks like this
00:48 - first we have the keyword for then round
00:50 - brackets and we're going to put some
00:52 - stuff in those round brackets and then
00:54 - we have the curly brackets that contain
00:56 - the code we want to execute multiple
01:00 - times now in these round brackets here
01:03 - I'm going to put two semicolons like
01:07 - that and so that that divides the the
01:11 - area in these round brackets up into
01:13 - three sections here and we're going to
01:15 - fill in each of these three sections now
01:19 - this in itself is illegal for loop so
01:22 - let's see that working there should be
01:23 - an infinite loop I'm going to type C out
01:26 - hello and endler and let's just run this
01:35 - so we see we get we've got an infinite
01:37 - loop like with while true but what we
01:40 - can do is we can put stuff in each of
01:42 - these to control precisely how many
01:45 - times the loop iterates so I'll show you
01:50 - what what we most commonly do with a for
01:53 - loop although there are many
01:55 - possibilities here so in this section
01:58 - here in the first section we're going to
02:01 - declare a variable that we're going to
02:03 - use as a loop counter I'm going to say
02:05 - int I equals naught so I've set it to
02:09 - naught to start with so this section
02:12 - here will be run before the entire loop
02:15 - runs whatever you put in there it's
02:17 - going to run before the loop starts in
02:20 - this second section here we put a
02:24 - condition which the loop will execute as
02:28 - long as the condition
02:29 - the second section is true so this is
02:33 - where we put a condition that similar to
02:35 - what we had in the round brackets for
02:37 - the while loop or a do-while loop so
02:39 - what we typically put in here is going
02:41 - to be something like I less than let's
02:43 - say 10 so if you want a for loop to
02:49 - execute let's say 5 times you typically
02:53 - put I equals nor I less than 5 in here
02:55 - so that's going to be the number of
02:57 - times you want the loop to execute and
02:59 - notice that we've got I less than 10
03:02 - we're not saying less than or equal to
03:04 - 10 because the first iteration of the
03:07 - loop has I equal to 0 and the last
03:09 - iteration will have I equal to 9 and
03:12 - that's a total of 10 iterations and then
03:16 - finally we park on we put something in
03:19 - the third section here which will be
03:21 - executed after every time the loop has
03:24 - run once so what I'm going to do is put
03:28 - I plus plus in here which you'll recall
03:29 - I just Inc increments I increases the
03:33 - value of it by 1 so we're going to start
03:37 - with I equal to 0 the loop will keep
03:38 - going as long as I is less than 10 and
03:40 - after every time the loop as has rung
03:43 - this is going to increase the value of I
03:46 - by 1 and to see that working let's just
03:48 - put in here
03:51 - let's put I in there so we can see the
03:54 - value of it I'm going to save that and
03:56 - run it and here we can see that we've
04:01 - got 10 iterated iterations of the loop
04:03 - from 0 to 9 so you can miss out any of
04:06 - these sections or as we've seen all of
04:08 - them and you don't have to you don't
04:11 - have to follow and this kind of stuff
04:13 - you don't have to put this kind of stuff
04:14 - in there you can get creative and put
04:17 - all kinds of things in these 3 different
04:20 - sections but this is the most typical
04:22 - usage you will say something like for
04:24 - int I equals naught is less than 10 or
04:28 - whatever I plus plus and after you type
04:31 - this a few times you just get into the
04:34 - swing of remembering these conditions
04:38 - so although this looks quite complicated
04:40 - it is pretty simple really and to
04:44 - practice this and I would advise that
04:48 - you certainly go and type out a for loop
04:50 - and try to try to get to the point where
04:53 - you can type this whole thing without
04:56 - referring back to to this code so try to
04:59 - get to the point where you can remember
05:01 - this and create loops that iterate a
05:04 - precise number of times that you decided
05:06 - on an experiment with it a bit as well
05:08 - see what happens if you miss out the
05:10 - different sections notice that I is
05:15 - usually if we declare a variable like I
05:19 - within curly brackets is available
05:21 - within those curly brackets but there
05:23 - are some situations where you can
05:25 - declare and I in round brackets that
05:28 - precede the curly brackets and then once
05:31 - again I is now available within these
05:33 - brackets so the scope of I you say scope
05:36 - of this variable is these curly brackets
05:39 - we can use either but we can't refer to
05:41 - I down here if I say something like I
05:44 - equals 5 or whatever it's not going to
05:48 - let me do that if I try to build this
05:49 - project it's it's not going to build
05:52 - them so I have to save it first and
05:55 - project build so we see that I is not
05:59 - available down here but it is available
06:01 - within the curly brackets so as always
06:04 - don't forget to indents your code by one
06:06 - tab and extra tab within these curly
06:09 - brackets and if you have any doubt at
06:12 - all about your formatting just right
06:14 - click or use the keyboard shortcut and
06:16 - go to an source and format
06:22 - so that's it for this tutorial and until
06:25 - next time help you coding
06:38 - you

Cleaned transcript:

hello this is John from cave of programming calm in this tutorial we're going to look at fall in C++ I totally forgotten in last video that we still haven't covered the most important type of loop in C++ and I've saved this one for after we covered a while because and dowhile because it's a little bit more complicated but it's very commonly used and very very useful so that the for loop looks like this first we have the keyword for then round brackets and we're going to put some stuff in those round brackets and then we have the curly brackets that contain the code we want to execute multiple times now in these round brackets here I'm going to put two semicolons like that and so that that divides the the area in these round brackets up into three sections here and we're going to fill in each of these three sections now this in itself is illegal for loop so let's see that working there should be an infinite loop I'm going to type C out hello and endler and let's just run this so we see we get we've got an infinite loop like with while true but what we can do is we can put stuff in each of these to control precisely how many times the loop iterates so I'll show you what what we most commonly do with a for loop although there are many possibilities here so in this section here in the first section we're going to declare a variable that we're going to use as a loop counter I'm going to say int I equals naught so I've set it to naught to start with so this section here will be run before the entire loop runs whatever you put in there it's going to run before the loop starts in this second section here we put a condition which the loop will execute as long as the condition the second section is true so this is where we put a condition that similar to what we had in the round brackets for the while loop or a dowhile loop so what we typically put in here is going to be something like I less than let's say 10 so if you want a for loop to execute let's say 5 times you typically put I equals nor I less than 5 in here so that's going to be the number of times you want the loop to execute and notice that we've got I less than 10 we're not saying less than or equal to 10 because the first iteration of the loop has I equal to 0 and the last iteration will have I equal to 9 and that's a total of 10 iterations and then finally we park on we put something in the third section here which will be executed after every time the loop has run once so what I'm going to do is put I plus plus in here which you'll recall I just Inc increments I increases the value of it by 1 so we're going to start with I equal to 0 the loop will keep going as long as I is less than 10 and after every time the loop as has rung this is going to increase the value of I by 1 and to see that working let's just put in here let's put I in there so we can see the value of it I'm going to save that and run it and here we can see that we've got 10 iterated iterations of the loop from 0 to 9 so you can miss out any of these sections or as we've seen all of them and you don't have to you don't have to follow and this kind of stuff you don't have to put this kind of stuff in there you can get creative and put all kinds of things in these 3 different sections but this is the most typical usage you will say something like for int I equals naught is less than 10 or whatever I plus plus and after you type this a few times you just get into the swing of remembering these conditions so although this looks quite complicated it is pretty simple really and to practice this and I would advise that you certainly go and type out a for loop and try to try to get to the point where you can type this whole thing without referring back to to this code so try to get to the point where you can remember this and create loops that iterate a precise number of times that you decided on an experiment with it a bit as well see what happens if you miss out the different sections notice that I is usually if we declare a variable like I within curly brackets is available within those curly brackets but there are some situations where you can declare and I in round brackets that precede the curly brackets and then once again I is now available within these brackets so the scope of I you say scope of this variable is these curly brackets we can use either but we can't refer to I down here if I say something like I equals 5 or whatever it's not going to let me do that if I try to build this project it's it's not going to build them so I have to save it first and project build so we see that I is not available down here but it is available within the curly brackets so as always don't forget to indents your code by one tab and extra tab within these curly brackets and if you have any doubt at all about your formatting just right click or use the keyboard shortcut and go to an source and format so that's it for this tutorial and until next time help you coding you
