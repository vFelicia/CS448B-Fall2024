00:00 - hello everyone welcome back to our
00:02 - channel
00:03 - here we share beginner friendly coding
00:04 - tutorials on scratch roblox minecraft
00:07 - web programming and many more
00:09 - and today we're going to finish our
00:11 - sneak game
00:12 - so in the last video we were creating
00:15 - the foundations of
00:16 - our game we defined the functions which
00:18 - are codes that can be referenced and
00:20 - used anywhere in the program
00:22 - which allows us to make to move this
00:24 - name in the game
00:25 - so for today what we're going to do is
00:27 - we're going to create the game loop
00:28 - which controls the flow
00:30 - of the game so let's get started
00:35 - so we'll continue from where we left off
00:37 - in the last video
00:38 - and remember we talked about the game
00:40 - loop so we'll start by adding the loop
00:42 - itself
00:44 - okay in my line 79. so a loop is a block
00:47 - of code that repeats itself until the
00:50 - condition inside of it becomes
00:51 - false so in this case we'll make a while
00:54 - loop that never ends
00:56 - or as we also call it an infinite loop
01:00 - so wow true
01:06 - okay so the reason we're creating an
01:08 - infinite loop is because we want the
01:10 - game to run
01:11 - until the window is closed and also the
01:13 - first instruction will code
01:15 - in the loop is the update function so
01:18 - wn.update
01:19 - which redraws what needs to be redrawn
01:22 - so that the game is always up to date
01:25 - okay and then the first thing we need to
01:27 - do is also check if the snake has died
01:30 - so for that we'll check if the head of
01:32 - the snake
01:33 - is in a coordinate that is beyond the
01:35 - walls of the window
01:37 - or near the scoreboard so if it is then
01:40 - we need to code
01:41 - in what's necessary for it to restart
01:44 - the game
01:45 - so first we'll stop the game for one
01:47 - second using
01:48 - sleep then we'll also move the head to
01:50 - the middle and
01:52 - make it stop moving okay so now we're
01:54 - going to check its coordinate first
01:58 - okay so we'll say if head dot explore
02:02 - okay so if head dot x core bigger than
02:05 - 340
02:06 - or head dot x core
02:09 - smaller than minus 340 or
02:12 - head dot y core now we're doing up and
02:15 - down
02:16 - okay bigger than 310
02:22 - or head dot y core the y coordinate
02:26 - smaller than minus negative
02:29 - 40 then we will
02:33 - do time dot sleeve
02:37 - one second and then move the head of the
02:41 - snake again
02:42 - the head dot go to zero
02:45 - zero and then head dot direction
02:50 - goes to stop
02:53 - all right okay then to destroy the snake
02:56 - body parts we'll move all of them to a
02:59 - point in the window
03:00 - where they will be invisible from the
03:02 - player so let's say
03:04 - like the coordinates 1000 okay
03:07 - and we can also use a for loop to go
03:10 - through all of the segments to move them
03:12 - to this point so
03:14 - uh x and y coordinates would be a
03:15 - thousand and a thousand each
03:18 - okay so we're going to say four
03:21 - segments in segments
03:26 - segment dot go to one thousand
03:30 - one thousand okay
03:33 - so after moving them all then we can use
03:36 - the instruction
03:36 - clear so python can take care of them so
03:40 - say segments
03:44 - dot clear okay make sure that we also
03:48 - reset the score
03:49 - okay so we'll say score is equal to zero
03:53 - and then we also want to go ahead
03:56 - and um reset the delay
04:00 - okay so we're going to go ahead and say
04:02 - delay
04:04 - equal to 0.1
04:08 - okay so finally we also need to reset
04:11 - the values of the score in our
04:13 - scoreboard
04:14 - remember we made that earlier so we need
04:16 - to say
04:17 - pen dot clear and then
04:20 - pen dot write
04:26 - score
04:44 - okay align equals
04:47 - center
04:51 - and then the font
05:05 - okay now to check if the head has eaten
05:08 - the food or not we can use the distance
05:11 - function okay we're going to create that
05:13 - to measure the distance between the head
05:15 - of the snake and the food
05:17 - so if the distance is less than 20 then
05:19 - we can say that
05:20 - the head has eaten the food the head of
05:23 - the snake
05:24 - but if that distance is less than 20
05:26 - then we can say that
05:29 - what we'll do is we're going to move the
05:31 - food to a random spot in the game map
05:34 - okay so to do that we need to use the
05:36 - random integer instruction from the
05:38 - random library that we imported
05:40 - to generate a random number that falls
05:42 - into the boundaries of the game
05:45 - then we will use the go to
05:48 - to move the food there so we'll say if
05:51 - head dot distance
05:54 - from food is smaller than 20
05:58 - then we move the food to a random spot
06:00 - so x equals to random that random
06:03 - integer from minus 330
06:07 - to 330 and
06:10 - y again random dot ran
06:14 - in and anywhere from minus 330 to
06:18 - 290 and then we'll move the food there
06:21 - so food
06:22 - dot go to x and y
06:26 - okay so after eating the food we'll also
06:30 - make sure that the snake grows longer
06:32 - so to do so we'll make another body part
06:35 - similar to the head of the snake
06:37 - you can also define the color as a
06:39 - different one
06:40 - if you'd like to so do the same steps as
06:43 - the head
06:44 - and then append this variable to the
06:45 - list of segments okay
06:51 - the same thing we're gonna go ahead
06:55 - and say new dot
06:58 - new underscore segment equals to
07:03 - turtle.turtle
07:06 - okay same thing new segment
07:10 - speed zero
07:14 - new segment
07:16 - dot shape square
07:23 - okay so the colors i'm choosing a
07:26 - different one i'm choosing white
07:27 - so new segment.color
07:31 - white and then move the segment to
07:34 - append it
07:35 - all right so new segment dot pen
07:39 - up segment dot append
07:43 - new segment new body part
07:51 - okay all right now then
07:55 - we can also shorten the delay which will
07:57 - make the
07:58 - snake move slightly faster to increase
08:01 - the difficulty
08:02 - all right so then we also want to
08:04 - increase the score by
08:06 - any amount that we want so let's say in
08:09 - my case here i'm going to increase the
08:11 - score by 10.
08:12 - okay so i'm going to now shorten delay
08:15 - shorten the delay to make the snake move
08:17 - faster
08:17 - so delay minus equals to let's say 0.001
08:22 - okay just a slight increase and then
08:26 - also increase the score so score plus
08:29 - equals 10. okay now of course i also
08:33 - want to constantly check if
08:34 - my score that i just obtained is higher
08:37 - than the original high score that i have
08:39 - if it is then we'll replace it with the
08:41 - score that we just got
08:43 - okay so if scored bigger than high score
08:49 - then high score is now equal to the
08:51 - score we just got
08:53 - okay now remember we also need to clear
08:56 - the scoreboard so we need to write pen
08:59 - clear before penrite
09:01 - so that it does not write on top of our
09:03 - previous message
09:05 - okay all right so pen dot
09:08 - clear and then write the new message so
09:12 - pen
09:12 - dot right
09:15 - all right so the next step is just to
09:17 - move all the segments in order so that
09:20 - they follow the head so
09:22 - we will use a for loop to move from the
09:24 - last segment to the second to the first
09:26 - segment since the first segment
09:28 - must move to where the head is all right
09:31 - so the range will also be from the
09:34 - length of the list
09:35 - minus one to one in
09:38 - descending order okay so we'll go ahead
09:41 - and
09:43 - put in our loop right here
09:46 - so for segment
09:50 - sorry let's do for index in range
09:54 - length segments
09:58 - minus one okay and then stop at zero
10:02 - and descending order so -1
10:07 - okay then we're gonna go ahead and say
10:09 - okay x
10:11 - equals two okay now for this part
10:14 - okay the x and y variables will store
10:17 - the x and y
10:18 - coordinates of the next segment in line
10:21 - then the indexed
10:22 - segment will move to that position in
10:25 - order
10:26 - until it's done okay so here that's why
10:28 - i did my x
10:29 - equals two okay so x equals to segment
10:35 - index minus 1
10:38 - dot x core okay and then
10:42 - y equal to segments
10:46 - index minus one dot
10:49 - y core okay and then we're gonna move
10:53 - them so segments
10:56 - index dot go to
11:00 - x and y okay
11:04 - all right
11:08 - so now that all the segments has moved
11:11 - we just need to move the segment before
11:14 - the head which only exists if there's at
11:16 - least one element
11:17 - in the list of segments all right so we
11:20 - need to make sure that we have the
11:22 - condition
11:23 - if the length of segments
11:28 - is bigger than zero then we'll say
11:31 - okay x equals to head dot x
11:34 - chord and y equals to
11:38 - head dot y core
11:41 - okay and then segments
11:44 - index 0 dot go to
11:48 - x y okay and then
11:52 - we also need to finally call the
11:54 - function move to move
11:56 - the head to the next position
11:59 - all right so we'll go ahead
12:03 - and say move
12:06 - all right so now finally we'll check
12:10 - the last death condition and it is when
12:12 - the head of the snake runs into the body
12:14 - so for that we'll use another for loop
12:17 - to check it's all uh to check
12:18 - all of the segments and if any of these
12:21 - segments has a distance to the head of
12:24 - less than 20 then that means that they
12:26 - are touching each other
12:27 - then we will need to kill the snake just
12:29 - as before
12:31 - all right so we're gonna go ahead and
12:34 - make a for loop so four segments
12:37 - in segments okay
12:40 - if segment dot distance from the head
12:44 - is smaller than 20 then we
12:47 - are going to go ahead and say okay time
12:50 - dot sleep one second
12:53 - and then move the snake back into the
12:55 - middle the head
12:56 - dot go to zero zero
13:00 - okay and then head dot direction equals
13:03 - to stop
13:06 - all right now we also want to make sure
13:08 - we hide all the body parts of the snake
13:10 - okay
13:11 - and we only want to have the head of the
13:13 - snake left
13:14 - so for that we're gonna need to go ahead
13:18 - and say okay for
13:21 - segments in segments
13:24 - okay segment same place we go to a place
13:27 - where we can't
13:28 - uh see so that's a thousand and a
13:30 - thousand for
13:31 - x and y coordinates okay and then we
13:34 - also want to clear the segment list
13:37 - so segment dot clear
13:40 - and then reset the score so score equals
13:43 - to zero and reset the delay
13:45 - delay equals to 0.1 and then we want to
13:49 - update the score display
13:51 - so pen dot clear all right and we're
13:54 - going to get the code
13:55 - to reset the scoreboard from here all
13:58 - right that we did earlier
14:00 - right here
14:04 - okay so now that we have added the um
14:08 - scoreboard the final step is we're going
14:10 - to add a sleeve
14:12 - before um closing the game loop so we
14:15 - simulate the delay
14:17 - uh the speed of the snake and then the
14:19 - last instruction will be to add a
14:21 - window.main loop outside of the game
14:23 - loop to control the window operation
14:26 - right so we're going to go ahead and do
14:28 - that we'll go ahead
14:30 - and say time
14:33 - dot sleep delay
14:37 - and then window
14:43 - dot mean loop
14:48 - and just like that our program is done
14:51 - now it's time for us to test out the
14:53 - finish game
14:54 - so that we can make sure all directions
14:56 - are working all right so run
14:58 - module and then right here is our game
15:03 - okay so that's the food that's the
15:04 - snakehead okay so i'm gonna click
15:07 - w to make sure that this thing can move
15:10 - right so there you go i just screw a new
15:12 - um part of my body
15:14 - okay now it's getting um longer
15:18 - okay now i'm gonna try to see if i crash
15:21 - will the game reset
15:23 - okay all right so i just crashed and now
15:26 - my the head of the snake is moved into
15:28 - the
15:28 - middle of the screen again and my high
15:31 - score is updated to be 30.
15:34 - all right so that's all for today um
15:37 - hope you liked the video and don't
15:39 - forget to like
15:40 - and subscribe if you do all right and in
15:42 - the meantime you can check out our other
15:44 - videos while you're waiting for the next
15:46 - video
15:47 - okay bye