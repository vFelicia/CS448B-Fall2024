With timestamps:

00:01 - hi so before I get into the main content
00:04 - in this video which will be tabular data
00:06 - I wanted to mention these videos here
00:09 - intro to processing for database they
00:10 - are made by Mathew Epler I will include
00:12 - a link below I recommend you watch these
00:14 - videos over the one you're currently
00:16 - watching cuz they're actually quite a
00:18 - bit in many ways more comprehensive but
00:21 - certainly in particular if you want to
00:23 - look for different algorithms for
00:25 - drawing different ways of setting pixels
00:28 - and drawing shapes on the screen that
00:30 - visualize the data I would recommend
00:32 - these I'm in the videos I'm making them
00:34 - much more focused on how do you actually
00:36 - get the data parse the data and and the
00:39 - next step is really left to you of what
00:41 - what you're gonna do with that and how
00:42 - you're gonna draw and display that data
00:44 - so I recommend these take a look at them
00:46 - let's let's talk about tabular data in
00:49 - processing so you might find you know
00:51 - you wake up one morning and you decide I
00:52 - need to find some data at somewhere and
00:54 - you just like look around the world and
00:55 - most likely you find the data on your
00:57 - computer in this case although it you
00:59 - know you should find data in other
01:00 - places too how do you get that data into
01:02 - processing so it might be that the data
01:04 - is meant for you to get its open it's
01:08 - there's an there's an API for in an
01:10 - application programming interface I
01:12 - think that's what it stands for this
01:13 - means there is an engine that's designed
01:15 - to hand data from one application a web
01:18 - server over to some other application
01:20 - like the one you're making in processing
01:21 - if that's the case you're in a good
01:23 - place another form that another
01:25 - possibility might be oh the data is
01:27 - available for download it's downloadable
01:30 - as calm as a spreadsheet this is
01:33 - actually what I want to focus on in this
01:34 - video this is also a great thing because
01:36 - processing has a table class a table
01:42 - class which is an object that load
01:45 - tabular data spreadsheet data comma
01:47 - separated values data that's in a
01:49 - tabular format directly to processing
01:51 - and it will be very easy for you to
01:52 - parse in and go through that data
01:54 - another format might be XML extensible
02:00 - markup language I don't know somebody
02:02 - correct the comments loop that's not
02:04 - right another format might be JSON
02:07 - JavaScript object notation so it makes
02:11 - sense to have standard format
02:13 - for data if they're if a format is
02:15 - standard we can always parse it very
02:18 - easily since we know exactly how the
02:20 - data will be how the data is presented
02:22 - to us and we'll look at these
02:23 - standardized formats XML and JSON in the
02:26 - next video for now I want to stick to
02:28 - table tabular data so what is tabular
02:31 - data
02:31 - so let's come back over here and I'm
02:33 - going to close this browser window and
02:36 - come over here so this is the citibike
02:38 - website a city bike is a bike sharing
02:42 - program in New York City in case you're
02:43 - not familiar with it and city bike just
02:46 - it has a site where all the data you can
02:49 - just download all the data and it has
02:50 - trip histories and there's all sorts of
02:53 - it's just some grocery there's all sorts
02:54 - of things so I've already downloaded
02:55 - this data and I have it now here in as a
03:00 - spreadsheet that it's a CSV file comma
03:02 - separated values that I've opened up
03:04 - here in libreoffice so you can see this
03:07 - is tabular data there are columns each
03:10 - column has a heading the duration of the
03:13 - trip the start time the stop time
03:14 - there's lots of other things here too
03:17 - the station name the station latitude
03:19 - longitude so and then there are rows the
03:22 - rows are individual records much like a
03:25 - database a database has fields and then
03:27 - records a database of about of people
03:31 - might be first-name lastname age gender
03:34 - and there's lots of records lots of
03:36 - people with first names last names age
03:38 - gender the you can think of these the
03:40 - column as headers or keys for the that
03:43 - particular column so this is the kind of
03:46 - thing that we could work with very
03:48 - easily easily in a piece of software
03:49 - like Libre Office and in fact it even
03:51 - has like some automatic ways of graphing
03:53 - that data but what I want to look at is
03:55 - how do we get this data into processing
03:57 - so first let's just take a moment and
03:59 - look at how is this data actually stored
04:02 - so if I close this and I'm gonna go into
04:05 - sublime here sublime text which is a
04:07 - text editor and now I have that same
04:10 - file open but I'm looking at its raw
04:12 - format so you can see here that the
04:15 - first a line of text in this text file
04:18 - actually has all the headers in quotes
04:20 - separated by commas and the next line
04:22 - has all of that then all the other rows
04:24 - are records and that
04:25 - if data are just separated by commas so
04:27 - this is a little harder for us to look
04:29 - at visually as a human being but this is
04:32 - very easy for prop for libre office to
04:34 - to parse and also for processing to
04:36 - parse so how do we do that so let's say
04:40 - we have this file um I don't know what
04:43 - I'm doing next something hopefully that
04:45 - will be helpful to you so let's say we
04:47 - have this file okay let's let's come
04:49 - over here we know we could load a text
04:52 - file and a CSV is just a text file with
04:54 - load strings and load strings would get
04:57 - this data and in fact there was a tithe
04:59 - many years ago where this was your only
05:02 - option in processing load strings and
05:04 - then after you split and have to chop it
05:05 - up and do all this stuff and it's a big
05:07 - pain in the neck life is good these days
05:09 - and I can say this table T equals load
05:16 - table data dot CSV so I can take this
05:23 - particular file and load it into a table
05:26 - object load strings give me as an array
05:29 - of strings load table gives me a table
05:32 - object and we're going to see shortly
05:34 - load XML and load JSON as well so table
05:42 - XML and JSON those are the three
05:44 - standardized data formats that
05:46 - processing knows about can grab and and
05:49 - you can parse them very easily and
05:51 - another video will look at what if the
05:53 - data is not in any of these formats what
05:55 - do we do you know we will come up with a
05:58 - solution okay so let's come back over
06:00 - here okay so remember this example from
06:05 - a video or two ago what was in this
06:08 - example we have a string of comma
06:11 - separated values we split that string up
06:14 - we converted to two integers and we draw
06:16 - some stuff I want to do exactly the same
06:18 - thing only instead of a hard-coded
06:21 - string I want to load those comma
06:23 - separated values from a file and instead
06:27 - of loading it as a string and splitting
06:29 - it up and doing all that stuff manually
06:31 - I want to load it into a table object so
06:33 - I can parse it automatically so now if I
06:36 - go to the data folder here we can see
06:38 - there
06:39 - is a CSV which just Mac preview by the
06:42 - way will visualize it for you as a grid
06:43 - which is kind of useful and then but if
06:47 - I actually open up that file what's in
06:49 - that file it is just these four numbers
06:52 - so these four numbers I want to load
06:54 - this in as a table object
06:56 - so let's actually get rid of everything
06:59 - and instead of having a string I'm gonna
07:02 - say load a table load table data dot CSV
07:07 - now I have the data as a table object
07:11 - rather than just as a raw string so
07:13 - what's the next thing that I need to do
07:14 - so here we're here right now we have a
07:17 - table object and what is the table
07:19 - object a table object essentially in
07:21 - memory now is all of the information in
07:23 - that table and it's kind of stored in a
07:26 - grid-like format now another object that
07:29 - we need is a table row object so if the
07:36 - table object refers to the entire table
07:39 - a table row object refers to an
07:42 - individual row so if we now have a
07:44 - reference to an individual row we can
07:47 - start asking for give me this piece of
07:48 - data in that row give me this piece of
07:50 - data in that row give me this piece of
07:52 - data in that row so let's look at how we
07:54 - might do that so here now I can say give
07:57 - me a table row table dot get row 0 this
08:03 - is a very simple UPS this is a very
08:05 - simple case where there is only a single
08:08 - row so now I have a reference to this
08:10 - row and I can start doing something like
08:12 - ok give me an X which is row dot get
08:16 - what is it it's an integer get to get
08:19 - the the integer in the first column or Y
08:22 - is the integer in the second column and
08:25 - maybe there's a width and a height which
08:28 - are the numbers in the second the fourth
08:32 - the third and fourth column and by the
08:33 - way get float so depending on what's in
08:36 - that table I can ask for that piece of
08:38 - data as a certain data type oh is it is
08:40 - there an integer you know I have to know
08:42 - this in advance but is it an integer in
08:44 - that column give me that number is it a
08:46 - floating-point number
08:47 - is it a string and we'll see as we get
08:49 - to another example we'll see a more
08:50 - complex
08:51 - but for right now it's simplest for me
08:53 - to just say give me all the integers
08:54 - whoops give me the integers zero one two
08:58 - and three and then what could I do I
09:01 - could draw a rectangle and there we go
09:05 - now let's let's confirm that this is
09:07 - really really working I mean I this
09:09 - seems like the right rectangle it's a
09:11 - rectangle associated with these numbers
09:13 - but what if I were to say 300 200 120 75
09:19 - so that's another row I've added another
09:22 - row to this table and if I run this
09:25 - again we still see that first row and if
09:28 - I run this again now I'm going to look
09:30 - at the next row look I've got the date a
09:32 - rectangle for that next row so you can
09:34 - see I can load add a table I can look at
09:36 - any row I can pull out the individual
09:37 - pieces of data in that row and I can use
09:39 - them the truth of the matter is while
09:41 - this works this isn't exactly the
09:43 - scenario that will come up most commonly
09:45 - and there's a there's a difference here
09:47 - so coming back over here right I had a
09:50 - row and I was able to get each piece of
09:52 - data out of that road cameras are always
09:54 - going off sorry okay
09:57 - so am i back yes so how did I look at
10:00 - each one of those pieces of data I
10:02 - looked at it by the index the number of
10:05 - the row but what you might have is
10:07 - actually a name for each row and in fact
10:12 - in your file the name for each row might
10:16 - actually actually be in the file itself
10:18 - as asked the first row itself I lost my
10:22 - train of thought with the stupid camera
10:23 - growing up okay let's get back on track
10:25 - here
10:25 - so what did we do we got each piece of
10:28 - data as its index but a more convenient
10:32 - way of working with tabular data in
10:34 - processing is actually to have a file
10:36 - that happens to have header information
10:39 - in it so now I've added headed for
10:41 - header information this file if you go
10:43 - back and look at that citibike data it's
10:44 - already in there most files will have
10:46 - this and I could just say all right now
10:50 - let's see what happens now when I run it
10:53 - oh look I don't get anything why am I
10:55 - not getting anything because the first
10:57 - row in this file has strings in it I
11:00 - can't get those strings as numbers to
11:02 - draw something so one of the things if
11:03 - my file has a
11:05 - Henner I need to tell processing that
11:07 - there's a header and I do that by when I
11:09 - load table I had a second argument the
11:11 - string header and now when I run it
11:13 - we're gonna see ah the the first row now
11:16 - is the actual data the header is ignored
11:18 - as data and once I've done this I can
11:22 - reference the values by their header
11:27 - name and the reason why this is so much
11:30 - more convenient is you know in this case
11:34 - there's just four and it's very easy for
11:35 - me to track but if you have a huge data
11:37 - set like the city bike data I don't know
11:39 - which number which column number is the
11:41 - latitude but I know it's just called
11:42 - latitude so I can say getfloat latitude
11:45 - for when I want the latitude of a
11:47 - particular record so this is a much more
11:49 - convenient way of working and this kind
11:53 - of wraps it up in a way this is really
11:55 - the functionality that we need we need
11:57 - to be a low to table deal with its
11:58 - header figure out how we get individual
12:00 - rows out and then get the individual
12:02 - pieces of data from each column of that
12:04 - row so let's look at a different another
12:07 - scenario that has a bit more involved in
12:09 - it there's a few missing pieces here
12:11 - that I think we could look at so I'm
12:12 - gonna save this and I'm going to to have
12:15 - it open already no I'm going to open I
12:17 - had it open recently so I'm gonna open
12:20 - another example this is from the
12:22 - learning processing book it's example
12:24 - 18.3 of course this is from the next
12:26 - edition of learning processing book
12:27 - which doesn't exist but anyway if you go
12:29 - to the github repository the examples
12:31 - are there and we can see okay so this
12:33 - particular example is is going to load a
12:38 - file
12:39 - I mean I'm gonna look at the data file
12:40 - for this example and we can see it here
12:44 - and we can see we have another table so
12:48 - there's a few things that are a little
12:49 - different one this table each column is
12:52 - a different data type so there X is an
12:53 - integer Y is an integer the diameters of
12:55 - float and name is a string so let's find
12:58 - the place in the code where that data is
13:00 - being loaded and you can see it right
13:02 - here and actually I just want to change
13:04 - something really quickly hopefully this
13:06 - will still work so you can see here this
13:08 - is where for any given row give me the X
13:11 - integer giving the y integer give me the
13:12 - Diana man or float and give me the name
13:14 - as a string so this is where we can see
13:16 - now that a table can have different data
13:18 - types and each
13:18 - column and you can pull out that data if
13:21 - you know the data type now something
13:24 - else you'll see here is what is each row
13:26 - I have a loop I starts at 0 I goes to
13:29 - row count give me every row index I so
13:32 - this is just like looping through an
13:34 - array give me all the elements of the
13:35 - array this is just give me all the rows
13:37 - of the table and so this is what you'll
13:38 - see in a lot of this is more likely what
13:40 - you're going to have and your project
13:43 - that you're going to make you're gonna
13:44 - want to loop through all the rows of the
13:46 - table now there's something else kind of
13:48 - really interesting about this particular
13:49 - example let me run this what's on the
13:52 - screen there are these circles each one
13:55 - that I hover over it has like a label
13:57 - and you can see these circles are made
13:59 - these bubbles are made from the data in
14:01 - that file and there's a bubble object my
14:04 - audio is still working yet there's a
14:06 - bubble object right here look at this
14:07 - bubble object as an X a Y a diameter a
14:09 - name two floats add another float and a
14:12 - string this is back what we did with
14:14 - object-oriented programming I need to
14:16 - have this thing this object that has a
14:18 - bunch of properties and some
14:19 - functionality and we have this questions
14:21 - like well let's say I have a lot of
14:22 - these objects how do I initialize them
14:23 - maybe I make them all randomly or maybe
14:25 - I arrange them in a grid pattern or a
14:27 - spiral pattern but here's another way of
14:30 - doing it what's in that file look at
14:33 - this data file this data file has all of
14:37 - the initial values for a bunch of
14:40 - objects so this is mapping a CSV to the
14:42 - data in an object is a really useful way
14:45 - of just keeping track of information or
14:48 - even doing data visualization you have
14:50 - this you know if I if I want to have
14:52 - load the city bike data I might make a
14:54 - trip object and that trip object would
14:56 - have a start station and end station a
14:59 - duration so that so this mapping I think
15:02 - is a really useful way of working with
15:04 - data from a file in processing so let's
15:08 - look at a couple other pieces of
15:09 - functionality here so I'm going to go
15:13 - back to the sketch and I'm going to
15:14 - start clicking in the sketch
15:15 - click-click-click
15:17 - now I added three bubbles with the
15:20 - labels blah into this particular file
15:22 - and I'm going to do this particular
15:25 - sketch I'm going to close this and I'm
15:28 - going to run it again
15:30 - new bubbles I added are still there even
15:32 - though I quit the sketch and opened it
15:34 - again how did that happen
15:35 - let's go back and look at the data file
15:38 - again I probably have to close it yeah
15:40 - sorry to close it let's look at it again
15:44 - look at this there are new records in
15:48 - the file so in addition to loading data
15:51 - from a file from a tape tabular data
15:53 - from a CSV file you can write a file out
15:56 - so this particular example is
15:58 - demonstrating the fact that you can use
16:00 - a table object for persistence if I
16:04 - wanted to keep track of the list of high
16:05 - scores for a game I could always every
16:07 - time I run my processing sketch I could
16:09 - save out the current high scores so they
16:11 - could access them the next time I run
16:12 - the sketch and if we look at the code
16:14 - down here we will see how is this
16:18 - happened look every time I click the
16:20 - mouse I make a new row and I set the
16:23 - values of that row I set the X to Mouse
16:25 - X is set the Y to Mouse way I said the
16:27 - diameter something random and I give it
16:29 - a label and you can see here then what
16:31 - happens I can now save I can now save
16:35 - that a table object out back to the same
16:38 - file so there's a lot going on here in
16:41 - this example and what we've talked about
16:43 - but just to sum it all up we have a CSV
16:46 - file you can load that see us about fee
16:48 - file and you can read through every row
16:50 - and pull out all the data you can make
16:51 - objects from that data you could
16:53 - visualize those objects and then if
16:55 - those objects change or you add more you
16:56 - could save that file back out so what I
16:58 - would suggest to you there's a there's a
17:00 - couple different things you could try as
17:01 - an exercise one is you might work with
17:03 - this try to make the bubbles just have
17:05 - like a color and see if you can like
17:07 - load the color from a file save colors
17:09 - out to the file another thing you might
17:11 - do is find some tabular data make your
17:13 - own spreadsheet download that citibike
17:16 - data find something else and see if you
17:17 - could at least parse it and do some very
17:18 - basic drawing with it you know maybe
17:20 - just you just get started with you know
17:24 - a simple bar graph or something very
17:25 - basic so give that a try and in the next
17:28 - video we're gonna look at this exact
17:30 - same scenario but instead of the data
17:32 - being a tabular format we're gonna look
17:33 - at the data as XML or as JSON okay and
17:37 - this is the end

Cleaned transcript:

hi so before I get into the main content in this video which will be tabular data I wanted to mention these videos here intro to processing for database they are made by Mathew Epler I will include a link below I recommend you watch these videos over the one you're currently watching cuz they're actually quite a bit in many ways more comprehensive but certainly in particular if you want to look for different algorithms for drawing different ways of setting pixels and drawing shapes on the screen that visualize the data I would recommend these I'm in the videos I'm making them much more focused on how do you actually get the data parse the data and and the next step is really left to you of what what you're gonna do with that and how you're gonna draw and display that data so I recommend these take a look at them let's let's talk about tabular data in processing so you might find you know you wake up one morning and you decide I need to find some data at somewhere and you just like look around the world and most likely you find the data on your computer in this case although it you know you should find data in other places too how do you get that data into processing so it might be that the data is meant for you to get its open it's there's an there's an API for in an application programming interface I think that's what it stands for this means there is an engine that's designed to hand data from one application a web server over to some other application like the one you're making in processing if that's the case you're in a good place another form that another possibility might be oh the data is available for download it's downloadable as calm as a spreadsheet this is actually what I want to focus on in this video this is also a great thing because processing has a table class a table class which is an object that load tabular data spreadsheet data comma separated values data that's in a tabular format directly to processing and it will be very easy for you to parse in and go through that data another format might be XML extensible markup language I don't know somebody correct the comments loop that's not right another format might be JSON JavaScript object notation so it makes sense to have standard format for data if they're if a format is standard we can always parse it very easily since we know exactly how the data will be how the data is presented to us and we'll look at these standardized formats XML and JSON in the next video for now I want to stick to table tabular data so what is tabular data so let's come back over here and I'm going to close this browser window and come over here so this is the citibike website a city bike is a bike sharing program in New York City in case you're not familiar with it and city bike just it has a site where all the data you can just download all the data and it has trip histories and there's all sorts of it's just some grocery there's all sorts of things so I've already downloaded this data and I have it now here in as a spreadsheet that it's a CSV file comma separated values that I've opened up here in libreoffice so you can see this is tabular data there are columns each column has a heading the duration of the trip the start time the stop time there's lots of other things here too the station name the station latitude longitude so and then there are rows the rows are individual records much like a database a database has fields and then records a database of about of people might be firstname lastname age gender and there's lots of records lots of people with first names last names age gender the you can think of these the column as headers or keys for the that particular column so this is the kind of thing that we could work with very easily easily in a piece of software like Libre Office and in fact it even has like some automatic ways of graphing that data but what I want to look at is how do we get this data into processing so first let's just take a moment and look at how is this data actually stored so if I close this and I'm gonna go into sublime here sublime text which is a text editor and now I have that same file open but I'm looking at its raw format so you can see here that the first a line of text in this text file actually has all the headers in quotes separated by commas and the next line has all of that then all the other rows are records and that if data are just separated by commas so this is a little harder for us to look at visually as a human being but this is very easy for prop for libre office to to parse and also for processing to parse so how do we do that so let's say we have this file um I don't know what I'm doing next something hopefully that will be helpful to you so let's say we have this file okay let's let's come over here we know we could load a text file and a CSV is just a text file with load strings and load strings would get this data and in fact there was a tithe many years ago where this was your only option in processing load strings and then after you split and have to chop it up and do all this stuff and it's a big pain in the neck life is good these days and I can say this table T equals load table data dot CSV so I can take this particular file and load it into a table object load strings give me as an array of strings load table gives me a table object and we're going to see shortly load XML and load JSON as well so table XML and JSON those are the three standardized data formats that processing knows about can grab and and you can parse them very easily and another video will look at what if the data is not in any of these formats what do we do you know we will come up with a solution okay so let's come back over here okay so remember this example from a video or two ago what was in this example we have a string of comma separated values we split that string up we converted to two integers and we draw some stuff I want to do exactly the same thing only instead of a hardcoded string I want to load those comma separated values from a file and instead of loading it as a string and splitting it up and doing all that stuff manually I want to load it into a table object so I can parse it automatically so now if I go to the data folder here we can see there is a CSV which just Mac preview by the way will visualize it for you as a grid which is kind of useful and then but if I actually open up that file what's in that file it is just these four numbers so these four numbers I want to load this in as a table object so let's actually get rid of everything and instead of having a string I'm gonna say load a table load table data dot CSV now I have the data as a table object rather than just as a raw string so what's the next thing that I need to do so here we're here right now we have a table object and what is the table object a table object essentially in memory now is all of the information in that table and it's kind of stored in a gridlike format now another object that we need is a table row object so if the table object refers to the entire table a table row object refers to an individual row so if we now have a reference to an individual row we can start asking for give me this piece of data in that row give me this piece of data in that row give me this piece of data in that row so let's look at how we might do that so here now I can say give me a table row table dot get row 0 this is a very simple UPS this is a very simple case where there is only a single row so now I have a reference to this row and I can start doing something like ok give me an X which is row dot get what is it it's an integer get to get the the integer in the first column or Y is the integer in the second column and maybe there's a width and a height which are the numbers in the second the fourth the third and fourth column and by the way get float so depending on what's in that table I can ask for that piece of data as a certain data type oh is it is there an integer you know I have to know this in advance but is it an integer in that column give me that number is it a floatingpoint number is it a string and we'll see as we get to another example we'll see a more complex but for right now it's simplest for me to just say give me all the integers whoops give me the integers zero one two and three and then what could I do I could draw a rectangle and there we go now let's let's confirm that this is really really working I mean I this seems like the right rectangle it's a rectangle associated with these numbers but what if I were to say 300 200 120 75 so that's another row I've added another row to this table and if I run this again we still see that first row and if I run this again now I'm going to look at the next row look I've got the date a rectangle for that next row so you can see I can load add a table I can look at any row I can pull out the individual pieces of data in that row and I can use them the truth of the matter is while this works this isn't exactly the scenario that will come up most commonly and there's a there's a difference here so coming back over here right I had a row and I was able to get each piece of data out of that road cameras are always going off sorry okay so am i back yes so how did I look at each one of those pieces of data I looked at it by the index the number of the row but what you might have is actually a name for each row and in fact in your file the name for each row might actually actually be in the file itself as asked the first row itself I lost my train of thought with the stupid camera growing up okay let's get back on track here so what did we do we got each piece of data as its index but a more convenient way of working with tabular data in processing is actually to have a file that happens to have header information in it so now I've added headed for header information this file if you go back and look at that citibike data it's already in there most files will have this and I could just say all right now let's see what happens now when I run it oh look I don't get anything why am I not getting anything because the first row in this file has strings in it I can't get those strings as numbers to draw something so one of the things if my file has a Henner I need to tell processing that there's a header and I do that by when I load table I had a second argument the string header and now when I run it we're gonna see ah the the first row now is the actual data the header is ignored as data and once I've done this I can reference the values by their header name and the reason why this is so much more convenient is you know in this case there's just four and it's very easy for me to track but if you have a huge data set like the city bike data I don't know which number which column number is the latitude but I know it's just called latitude so I can say getfloat latitude for when I want the latitude of a particular record so this is a much more convenient way of working and this kind of wraps it up in a way this is really the functionality that we need we need to be a low to table deal with its header figure out how we get individual rows out and then get the individual pieces of data from each column of that row so let's look at a different another scenario that has a bit more involved in it there's a few missing pieces here that I think we could look at so I'm gonna save this and I'm going to to have it open already no I'm going to open I had it open recently so I'm gonna open another example this is from the learning processing book it's example 18.3 of course this is from the next edition of learning processing book which doesn't exist but anyway if you go to the github repository the examples are there and we can see okay so this particular example is is going to load a file I mean I'm gonna look at the data file for this example and we can see it here and we can see we have another table so there's a few things that are a little different one this table each column is a different data type so there X is an integer Y is an integer the diameters of float and name is a string so let's find the place in the code where that data is being loaded and you can see it right here and actually I just want to change something really quickly hopefully this will still work so you can see here this is where for any given row give me the X integer giving the y integer give me the Diana man or float and give me the name as a string so this is where we can see now that a table can have different data types and each column and you can pull out that data if you know the data type now something else you'll see here is what is each row I have a loop I starts at 0 I goes to row count give me every row index I so this is just like looping through an array give me all the elements of the array this is just give me all the rows of the table and so this is what you'll see in a lot of this is more likely what you're going to have and your project that you're going to make you're gonna want to loop through all the rows of the table now there's something else kind of really interesting about this particular example let me run this what's on the screen there are these circles each one that I hover over it has like a label and you can see these circles are made these bubbles are made from the data in that file and there's a bubble object my audio is still working yet there's a bubble object right here look at this bubble object as an X a Y a diameter a name two floats add another float and a string this is back what we did with objectoriented programming I need to have this thing this object that has a bunch of properties and some functionality and we have this questions like well let's say I have a lot of these objects how do I initialize them maybe I make them all randomly or maybe I arrange them in a grid pattern or a spiral pattern but here's another way of doing it what's in that file look at this data file this data file has all of the initial values for a bunch of objects so this is mapping a CSV to the data in an object is a really useful way of just keeping track of information or even doing data visualization you have this you know if I if I want to have load the city bike data I might make a trip object and that trip object would have a start station and end station a duration so that so this mapping I think is a really useful way of working with data from a file in processing so let's look at a couple other pieces of functionality here so I'm going to go back to the sketch and I'm going to start clicking in the sketch clickclickclick now I added three bubbles with the labels blah into this particular file and I'm going to do this particular sketch I'm going to close this and I'm going to run it again new bubbles I added are still there even though I quit the sketch and opened it again how did that happen let's go back and look at the data file again I probably have to close it yeah sorry to close it let's look at it again look at this there are new records in the file so in addition to loading data from a file from a tape tabular data from a CSV file you can write a file out so this particular example is demonstrating the fact that you can use a table object for persistence if I wanted to keep track of the list of high scores for a game I could always every time I run my processing sketch I could save out the current high scores so they could access them the next time I run the sketch and if we look at the code down here we will see how is this happened look every time I click the mouse I make a new row and I set the values of that row I set the X to Mouse X is set the Y to Mouse way I said the diameter something random and I give it a label and you can see here then what happens I can now save I can now save that a table object out back to the same file so there's a lot going on here in this example and what we've talked about but just to sum it all up we have a CSV file you can load that see us about fee file and you can read through every row and pull out all the data you can make objects from that data you could visualize those objects and then if those objects change or you add more you could save that file back out so what I would suggest to you there's a there's a couple different things you could try as an exercise one is you might work with this try to make the bubbles just have like a color and see if you can like load the color from a file save colors out to the file another thing you might do is find some tabular data make your own spreadsheet download that citibike data find something else and see if you could at least parse it and do some very basic drawing with it you know maybe just you just get started with you know a simple bar graph or something very basic so give that a try and in the next video we're gonna look at this exact same scenario but instead of the data being a tabular format we're gonna look at the data as XML or as JSON okay and this is the end
