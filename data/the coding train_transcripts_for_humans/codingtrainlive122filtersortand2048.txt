With timestamps:

00:00 - [Music]
00:01 - hello I am back for a second livestream
00:05 - session today this is the coding train
00:07 - on YouTube my name is Dan I had some
00:13 - lunch and fresh I had a lovely sweet
00:17 - greens bowl with some like kale and
00:20 - cabbage nuts delicious
00:24 - I've got some nice warm tea here slowing
00:30 - down with the caffeine and feeling the
00:33 - music and I'm back to talk about
00:36 - emptiness the void there is nothing but
00:41 - now higher-order functions so I had a
00:44 - session this morning if you weren't here
00:46 - you missed it but it obviously was
00:47 - recorded and archived and I started
00:50 - talking about this idea of higher-order
00:51 - functions what that means in JavaScript
00:54 - and then I moved on to looking at
00:56 - higher-order functions that are part of
00:57 - the array class or the rate object in
01:01 - JavaScript and I think I got through map
01:06 - fill and reduce was okay I feel like I
01:13 - started out well in other words I kind
01:16 - of went out and there's some two things
01:17 - I didn't like number one is I did this
01:19 - whole example about passing a function
01:22 - in as a callback I feel like it didn't
01:23 - it wasn't like didn't have any actual
01:25 - real-world practical Mis to it
01:29 - whatsoever so I feel like that example
01:30 - wasn't so great the example about
01:33 - returning a function I think worked
01:35 - better and then also I feel like once we
01:38 - were kind of doing reduce I was off into
01:40 - the weeds of cryptic syntax but that's
01:42 - what I did I so what what's gonna happen
01:45 - this afternoon is I want to talk about
01:46 - filter it's really I guess I could talk
01:49 - about sort also then I want to take some
01:53 - of these array functions and apply them
01:56 - to one of my particle system examples to
01:58 - kind of like rewrite the code with this
01:59 - new functional style way with arrow
02:04 - syntax because that's what my nature of
02:07 - code examples are that's actually how
02:09 - they're written right now if you go to
02:10 - the github repository so I'm going to
02:11 - kind of go
02:11 - through that so that's an 8000 and then
02:14 - oh my goodness I don't know I'm a time
02:15 - for all this I want to talk about
02:16 - inheritance and polymorphism what is
02:18 - that if you're asking yourself that
02:20 - question
02:20 - good then you could stay and watch that
02:23 - and I should do at least one coding
02:27 - challenge maybe I'll just do a simple
02:28 - spring the thing is I want to get back
02:30 - into the neural network stuff there's so
02:32 - much to get to there but I don't know
02:34 - realistically what I'll have time for
02:35 - today so we'll see that's what's coming
02:37 - down the tracks the coding train choo
02:41 - choo chugga chugga choo choo tracks so
02:43 - to speak so here I am boy I hope
02:46 - someone's actually watching I better
02:50 - hope this is working am i streaming yes
02:52 - there's people in the chat ok so now I'm
02:53 - back over here let's see ok before I get
02:55 - started without any of that while I was
02:59 - relaxing having my lunch call I noticed
03:03 - some pull requests come in so let's take
03:06 - a moment to go to rainbow code which is
03:09 - actually now just github.com coding
03:12 - train slash website and there are a lot
03:16 - of pull requests here I need to get back
03:18 - into them but let's look at this one
03:20 - that came in an hour ago my contribution
03:23 - to the fractal tree coding challenge
03:26 - thank you to Niels Webb who is the
03:30 - creator of the coding train website and
03:33 - approved these changes because as I
03:35 - mentioned something I would hopefully
03:37 - off time to implement it myself is unit
03:39 - testing for this repository in
03:41 - particular does somebody's contribution
03:46 - that they're submitting we can see it
03:47 - right here does it break the build
03:50 - system for the website is there a syntax
03:53 - error the system is being built with
03:54 - Jekyll and this is a markdown format
03:58 - special for Jekyll I suppose maybe this
04:00 - is like yeah mole somehow I don't know I
04:02 - don't know what a this stuff is what did
04:05 - I say Gamal was this before I mean this
04:07 - is about what it actually stands for but
04:08 - I like to think of cents for ya markup
04:12 - language ok so thank you to a Rashad and
04:15 - so what I'm going to do is I'm going to
04:17 - merge this live my sound board is
04:19 - working again
04:23 - how far can i zoom in on the merge
04:26 - button I want to be able to do this
04:32 - through like some gesture oh no wait one
04:37 - more click there you go all right so
04:39 - this has been merged so what happens
04:42 - here what is going on if I go to the
04:44 - coding train comm this is the new coding
04:46 - train website you can see here that
04:48 - there's a little note at some point be
04:50 - actually great to have a little big like
04:51 - on air live on air right now those
04:54 - blinking red things on websites is a
04:56 - little probably passe so to speak but it
05:01 - could say it does say tune in live right
05:03 - here and up so now I want to go to
05:08 - coding challenges and I'm gonna look for
05:10 - fractal tree 3d fractal trees which is
05:15 - the one that that was just contributed
05:17 - to I think it was this one
05:18 - so each challenge now has a card with a
05:22 - little thumbnail the number description
05:24 - this will take you directly to YouTube
05:27 - to watch it and this will take you to a
05:28 - page on the website where it looks like
05:32 - the site hasn't built yet so let's make
05:34 - sure which one did this go to this one
05:36 - went to 14 fractal tree and I am on 14
05:40 - fractal tree ah just one refresh and
05:44 - here we go now we can see that Raja
05:46 - --tz--
05:47 - contribution is here thank you for that
05:50 - I am going to click on this it uses code
05:52 - pen I love code pen and there we go
05:55 - beautiful work I like how there's like a
05:59 - little bit of first of all couple things
06:00 - let me mention so this is an expansion
06:02 - off of mine for a number of reasons
06:03 - number one is I love the use of the
06:05 - different thicknesses of the branches I
06:07 - love the fact that branching to the left
06:09 - and to the right both have different
06:10 - angles and this lure of lovely addition
06:13 - of leaves these green ellipses that look
06:16 - like they're rotated a nice way towards
06:18 - the end if you know one thing that I uh
06:19 - you know that I think is interesting to
06:21 - look at now it looks to me like this is
06:23 - running at a rather slow framerate so
06:25 - first of all we could say my computer
06:27 - not the best computer in the world it's
06:28 - kind of slow it's it bears some
06:30 - responsibility here but I think that's
06:32 - often a question when working
06:34 - interactive animations is you want to
06:36 - fill the screen with all your stuff that
06:37 - you want to draw and because it's gonna
06:39 - look the most beautiful if you can layer
06:40 - the most leaves but if you can't get up
06:44 - to probably at least 20 24 frames per
06:46 - second it's going to stutter and perhaps
06:49 - that takes you outside of the of the
06:52 - feeling of you know so there's a balance
06:54 - here yet there's a trade-off do you want
06:55 - perfectly smooth animation or do you
06:58 - want to have as many layers of color and
07:00 - particle leaves things as you want and I
07:02 - would say probably here it's probably
07:04 - worth it with something like this if the
07:05 - idea is to have it feel like it's
07:07 - experiencing physics or in the wind to
07:09 - like reduce the amount of stuff that is
07:10 - being drawn in order to gain a bit and
07:13 - the frame rate so that's and then of
07:14 - course there's always ways of optimizing
07:16 - things and using other environment the
07:18 - canvas is a bit slow of just pure 2d
07:21 - canvas
07:21 - especially with p5 which is a higher
07:23 - level library so there's even some
07:25 - additional slowness there all right so
07:32 - look taking a look at the chat and all
07:39 - right so let's see where now what's
07:41 - going alright now let's go to somewhere
07:43 - just for a moment I'm quite afraid this
07:47 - is like blown my mind what's happened in
07:49 - the last week so you may recall if
07:53 - you've been watching if I even just go
07:55 - to my channel that probably the most
07:59 - active playlist right now with new
08:01 - content is oh I'm not logged in as
08:04 - myself so it looks totally different
08:06 - let's go down to nature of code and
08:11 - neural networks and so here is the
08:16 - neural network playlist and I got
08:18 - basically there's edited versions of
08:21 - everything that I've done in the live
08:22 - stream all the way down to coding
08:23 - challenge number 92 now you might
08:25 - remember that I did a version of M
08:27 - missed
08:28 - digit classification during the live
08:30 - stream in the end I opted not to edit
08:33 - that and post that as a standalone video
08:35 - it was a bit of a mess there's some
08:37 - things in it that there was like a major
08:39 - mistake in it where I forgot to
08:40 - normalize the values of the pixels of
08:42 - the image I was drawing and it also was
08:44 - just there was a lot of me fighting with
08:46 - Dom manipulation
08:47 - which is really outside of the core
08:50 - content of looking at doing
08:52 - classification with a neural network so
08:54 - I might come back to do that again in a
08:57 - more thoughtful way but one thing that
09:00 - I've been but but all of these videos if
09:03 - you get all the way through ten-point 18
09:05 - which is right here and you go to the
09:08 - that same website repository and I go
09:13 - again I've got a wreath I've really got
09:15 - to think the organizational structure of
09:16 - this but if I go into courses under
09:18 - nature of code and ten-point 18 this is
09:21 - the code for the neural network library
09:26 - as I left it neural network yes matrix
09:29 - not yes
09:30 - now if you've been following along I'll
09:31 - just mention again briefly that I am
09:34 - trying to get to the point where I'm
09:37 - going to replace a lot of the internal
09:40 - mechanics of the machine learning system
09:42 - that I built from scratch in a very
09:43 - inefficient way with deep learning is
09:46 - which is a JavaScript library for
09:49 - machine learning that is hardware
09:50 - accelerated this also relates to a
09:52 - project that is happening a research
09:54 - project at ITP right now called ml 5
09:57 - which is a higher-level library on top
10:00 - of deep learning is this is not exactly
10:02 - accurate but you could sort of think if
10:04 - you've heard of tensorflow and Charis
10:06 - Charis is a sort of higher-level library
10:09 - to do machine learning stuff that's
10:10 - built on top of tensorflow ml 5 is a
10:13 - higher-level JavaScript library built on
10:15 - top of deep learning is I could just
10:19 - click here for a second and go to
10:20 - examples and we can see here here's an
10:22 - example running guess this is a tabby
10:25 - cat this is doing image classification
10:27 - with a pre trained model and you can see
10:29 - that the code is very p5 friendly you're
10:32 - just creating an image with this kitten
10:34 - you call this predict function and you
10:37 - get a callback with results and you see
10:39 - a label and a probability so this is the
10:41 - idea of being able to create some sort
10:42 - of higher level tools to be able to
10:44 - access some of this machine learning
10:45 - except now why am I talking about all
10:46 - this so that's where I'm going and I
10:49 - wish I could just like be here live
10:51 - streaming every day I think I would get
10:53 - further faster but I also have to like
10:55 - research and try stuff out a little bit
10:57 - non live-streaming
10:58 - I'm sort of a full time job which is a
11:00 - wonderful wonderful thing
11:02 - but what I wanted to mention is this
11:05 - code so this is the code that matches
11:07 - exactly with the videos however there's
11:10 - also this repository toy neural network
11:13 - j/s and I put the word toy in there
11:16 - because it wasn't my intention to it
11:21 - wasn't my intention to have this be
11:22 - necessarily something that anyone would
11:24 - use for like real scientific work maybe
11:28 - for some creative exploration or to
11:29 - educational purposes or just to sort of
11:31 - play and experiment with but I've been
11:34 - amazed I am like overwhelmed right now
11:36 - there are currently 19 total requests
11:38 - since last Friday and I just really
11:41 - haven't had the time to review them and
11:42 - fall and I've read every single comment
11:44 - I want to give a shout out to where is
11:49 - this particular is it an issue or a poll
11:51 - let me look into the issues to versatil
11:54 - asan github who added this sort of
11:59 - summary of some of the things I've
12:00 - talked about alike these are some things
12:01 - that I hope to accomplish referencing
12:03 - various pull requests and issues that
12:08 - was not a notification for a life slack
12:10 - channel ok good and then some other
12:13 - things that I might do later and there
12:15 - are some discussion then if I go to the
12:16 - pull request there's like a pull request
12:18 - for adding some tests for more
12:22 - activation functions for there's a
12:24 - really amazing one for over learning
12:26 - decay there's another one for multi
12:28 - layer multi hidden layer support so I
12:30 - got to figure out what to do about this
12:31 - I got a carve out some time to go
12:35 - through these and see what I can merge
12:37 - and then I also kind of want to make a
12:38 - list I'll probably keep this sort of
12:40 - like parallel thing going where I'll let
12:41 - this go with community contributions but
12:44 - some of the community contributions that
12:46 - are really helpful
12:47 - I might try to like implement in my own
12:49 - way with the code that's part of the
12:52 - tutorial series so this is what I'm
12:54 - thinking
12:54 - no promises in Elmo I think that's I'm
12:59 - catching up late to the chat I think
13:01 - there's some JavaScript promises joke
13:04 - going on so why am I saying all this so
13:11 - so this I would love to get to a bit
13:14 - more to
13:14 - day but I don't know if that's realistic
13:17 - and maybe what I need to do is work on
13:20 - this quite a bit outside of the
13:22 - livestream and come back and report on
13:24 - it the next time but I was thinking one
13:27 - thing ideas I would like to have a
13:29 - simple classification example I've done
13:32 - as a video tutorial and so what I'm
13:34 - thinking of doing is using instead of
13:37 - doing the digits I was thinking of using
13:40 - the quick-draw data set to do an amnesty
13:45 - like data set so because I think also
13:48 - something that's really easily forgotten
13:51 - is that the act of collecting and
13:55 - preparing your data in a thoughtful
13:59 - ethical and careful manner of course
14:03 - it's fine to experiment and play and and
14:05 - and and in a creative and exploratory
14:07 - way but this is a project unto itself so
14:11 - I think it's important if we're going to
14:12 - have a tutorial series I
14:14 - it's it's not just like Oh get the
14:17 - sample baked mmm missed digit data set
14:20 - that everybody uses oh that's useful too
14:21 - anyway so this is this is where I'm
14:23 - going oh boy do I want to just do this
14:24 - right now
14:25 - oh all right but I won't also like I
14:31 - feel like it's a mistake for me to use M
14:33 - NIST as my core example I'm gay I hooked
14:38 - that up so that I could get
14:39 - notifications from people who are in
14:42 - this patron slack channel in case like
14:44 - the microphone dies or something for
14:45 - some reason I'm getting all these other
14:46 - got to turn those off eventually I get a
14:49 - good system alright so this is coming
14:52 - this is what I'm gonna do next
14:53 - thank you to Rajiv Shah whose blog this
14:57 - is from July 2017 I'm sure I will follow
15:00 - along to figure this out and then
15:05 - there's so much we could do because we
15:07 - could do clustering so much so many
15:09 - possibilities the quick-draw dataset is
15:11 - a really fun dataset okay
15:13 - and it's relates to creative coding I
15:14 - think more than the digit stuff all
15:17 - right so okay so now
15:26 - camera goes off really gonna install
15:29 - that magic lantern thing sooo nice I
15:31 - promise my promise is pending I promise
15:36 - and spending it's not resolved yet it
15:38 - has not been rejected but it is pending
15:39 - so where did I leave off I left off this
15:45 - morning talking about reduce so I'm
15:49 - gonna do a video about filter when I say
15:51 - video I mean tutorial and that will get
15:53 - edited into a separate video alright
16:00 - where's my marker where's my code so I
16:04 - have my system is terrible but I'm gonna
16:06 - go back to it where I have the like
16:10 - console oh I'm in the wrong key camera
16:12 - of the console up at the top
16:14 - notification coming in five four three
16:18 - two one
16:24 - I am going to come here and I've got
16:30 - mine this is where I left off I looked
16:33 - at the reduced function and looked at
16:36 - how I could use reduce to find the
16:38 - largest value in an array as well as
16:40 - reduced to add all the elements of an
16:42 - array together
16:43 - okay so filter is next
16:57 - let's do filter and sort why not right
16:59 - okay yep I'm love the lookout by the way
17:12 - me I am so me sent me a suggestion I
17:15 - looked into it for a way that I can make
17:17 - coding train branded train whistles
17:20 - because that's that could be a nice like
17:23 - patreon reward or something I don't know
17:27 - you all I'm sure would immediately
17:29 - subscribe to the patreon if you would
17:31 - get a coding train train whistle all
17:37 - right I'm back for another higher-order
17:40 - function with JavaScript arrays video
17:42 - and in this video I will talk about
17:46 - filter filters actually to be honest it
17:49 - might be my favorite one of these it's
17:51 - lovely
17:52 - so let's look at what let's so filter
17:54 - what does the word filter means it's
17:57 - it's called filter for a reason just
17:58 - like you might filter your water and and
18:01 - filter out all the stuff you don't want
18:02 - if you have an array that has some grime
18:05 - and stuff in it you could filter it out
18:08 - so how do you do that it's a higher
18:12 - order function so what that means is it
18:16 - expects as an argument some function and
18:20 - what that function is it's a function
18:22 - that receives as an argument itself an
18:24 - element of the array and based on that
18:28 - element it should return true or false
18:30 - and I always forget this I think it
18:32 - returns true if you want to keep it and
18:34 - false if you don't want to keep it so
18:36 - even though it's filter you would think
18:37 - true I want to filter it out I think
18:39 - it's true I want to keep it we'll have
18:41 - to try and look up and documentation
18:42 - okay and I'm going to do the same thing
18:45 - so this is where we last left off of
18:46 - this reduce stuff she's still here after
18:49 - that thank you
18:51 - and so what I'm gonna do is I'm gonna
18:53 - keep this same little silly array and
18:55 - I'm gonna Simon write a function and I'm
18:57 - gonna say it is you know interesting
19:04 - let's mm-hmm
19:06 - let's call this function is even
19:11 - so what this function is going to do is
19:14 - it's going to take a number and it will
19:16 - return true if it's an even number or
19:18 - false if it's an odd number so it's
19:20 - going to if numb and how do I do this I
19:23 - can use the modulus operator the modulus
19:25 - operator see the coding train video from
19:27 - go 11 about modulus is an operator that
19:29 - gives you the remainder of division so
19:31 - if you divide something by two and get a
19:33 - remainder of zero it's an even number so
19:34 - if nan modulus two equals zero then I
19:38 - want to return true otherwise I want to
19:41 - return false now I always do this
19:43 - because this is the kind of person I
19:44 - yeah I will write it in seven lines of
19:47 - code to make it say exactly what it's
19:49 - doing even if it can be done in one line
19:51 - of code but this is this is a moment
19:52 - where I think it's worth today these
19:54 - videos are a little bit about reducing
19:55 - the amount of typing it's worth saying
19:57 - that I don't need to say if this is true
19:59 - return true if it's true just return the
20:02 - fact that it's true so this evaluates a
20:03 - true or false I'm gonna just return that
20:05 - so I can do this now I should be able to
20:08 - say what's I should be able to say
20:10 - Vale's dot reduce is even so the
20:18 - question is is my array going to have
20:21 - only left in it the even numbers or the
20:25 - odd numbers we could look it up in the
20:27 - documentation I could speculate but we
20:29 - could also just try it now I'm pretty oh
20:31 - this didn't say reduce this should say
20:33 - filter of course I should be filtering
20:35 - based on this function hello and I'm
20:39 - pretty sure let's just double check I'm
20:41 - pretty sure that this is the case where
20:43 - it creates a new array and returns back
20:45 - like I like we saw with the map function
20:47 - so if I save this here and I hit refresh
20:49 - we're say ok so that's the original
20:51 - array so this is not working yet I want
20:53 - to say vows equals the new array so I'm
20:57 - going to overwrite that variable with
20:58 - the new array that's been filtered and
21:00 - I'm gonna hit refresh and there we only
21:02 - have the even ones left so we have the
21:05 - even ones left because this returned
21:09 - true so if it returns true keep the
21:12 - value if it returns false don't keep the
21:14 - value and by the way what I'm going to
21:16 - do with this later in like a particle
21:17 - system example is I have an array of all
21:19 - these particle objects
21:20 - I could just say filter out all the ones
21:22 - that are off the screen
21:23 - our filter all the ones out that alpha
21:25 - has faded out to zero so that's why this
21:28 - filter can become really really useful
21:30 - so let's now shorten this using es6
21:32 - syntax one thing I might want to do is
21:36 - just use this as X right change this to
21:38 - X now I'm gonna get rid of function I'm
21:41 - gonna get rid of the name I'm gonna put
21:44 - the arrow syntax in I'm gonna forget
21:46 - about this and I'm gonna get rid of the
21:50 - return because it's assumed so basically
21:52 - this is what I can do right this is
21:57 - basically I can now write that I do that
21:59 - really quickly because I'm kind of
22:00 - assuming you've watched my previous
22:02 - videos where I step through that more
22:03 - slowly but basically I can say hey
22:05 - filter every value X based on the
22:08 - weather X modulus two equals zero so
22:13 - this should give me exactly the same
22:15 - result again this is the thing this is
22:18 - why I hesitate this is so unlike me I
22:20 - don't just I I would write this in like
22:23 - 10 but there's there's a wondering
22:25 - beauty to this because even though I
22:26 - feel like this is cryptic and a little
22:28 - harder to follow there is a moment I
22:31 - think after you get used to this arrow
22:32 - syntax and write a lot of these
22:35 - functions and I'm comments are going on
22:39 - that I'm gonna look at in a second that
22:41 - you start to get used to this and this
22:42 - this becomes a bit more intuitive and it
22:44 - actually can make the code more readable
22:45 - oh there we go it worked now I can say
22:49 - let's just filter it out for the odd
22:50 - ones equals one now I have the odd ones
22:53 - I could say not this and that would be
22:57 - that's like not the odd ones there's
22:58 - also the even ones and we could see
23:00 - there we go
23:01 - so wonderful I'm gonna take a look at
23:03 - the chat and see that I got some extra
23:04 - notes in there oh yeah okay so um
23:14 - alka in the chat points out that you can
23:16 - filter by truthy and falsy values not
23:20 - just explicitly true or false what does
23:22 - that mean in other words I could filter
23:24 - out let's say I had an array of objects
23:27 - and a few of them were undefined
23:30 - you know we're empty I could filter out
23:32 - any spots where something's undefined so
23:34 - many things in JavaScript can be sort of
23:36 - like
23:37 - as false are true based on its its value
23:41 - like an object exists it's true if it's
23:43 - undefined its false
23:44 - so I could say so this would say like
23:50 - hey I have an array with stuff in oh
23:53 - then this actually oh okay
23:54 - so I could actually just do this right
23:58 - that's what that's what Alka is telling
23:59 - me so I could check like Oh filter out
24:01 - just keep everything that's not
24:03 - undefined right so this if I did this it
24:07 - would give me five four to one because I
24:09 - would filter out the undefined but
24:10 - undefined is like a false e value so I
24:13 - could just filter out the items that
24:16 - like kind of turn into false things and
24:19 - actually this is gonna give me yeah
24:21 - right so this worked as well and I could
24:25 - say not X then I have an array with just
24:28 - undefined okay so I think we've seen I
24:29 - think this has been good I think we've
24:31 - seen filtered filter filter filter the
24:35 - function filter do you have any
24:37 - questions we're not actually in the same
24:40 - room at the same time because I'm
24:41 - recording a video there is a live chat
24:42 - going on let me check if there's any
24:44 - questions
24:55 - oh that's a great example Alka I love
25:03 - that Oh X modulus 2 for example okay
25:07 - okay two wonderful tips that just came
25:14 - in from the chat that I would love to
25:15 - show this is great having a live chat
25:17 - wide for these videos so let's say I
25:20 - wanted to do that eat that even thing
25:21 - again where I'm keeping only the even
25:23 - values I had it like this X modulus two
25:26 - equals zero that's the even ones well
25:28 - that's silly X modulus two evaluates
25:31 - always to zero or one one being true
25:33 - zero being false in a sort of truth me
25:36 - falsity way so I could have actually
25:38 - done this and that's gonna keep the odd
25:41 - ones and if I were to say not I think
25:44 - I'm gonna need parentheses yeah I'm
25:46 - gonna need parentheses around this and
25:50 - now I'm gonna get the even ones so
25:51 - that's lovely then there's a lot of
25:54 - times when you're working with strings
25:57 - that's that I've had this problem
25:58 - actually a ton so let's say I have a
26:01 - this is gonna be useful let's say I have
26:03 - a string it was a dark and stormy night
26:09 - and what I'm doing is I'm saying let
26:12 - words equal s dot split and I'm gonna
26:15 - use a regular well I'm just gonna say
26:16 - split by space and then I'm gonna say
26:19 - console dot log words so you can see uh
26:24 - it was a dark and stormy night
26:26 - now Oh interesting
26:38 - so okay so things things could happen
26:42 - like what if I had two spaces here by
26:44 - accident and I hit refresh look at that
26:47 - because I had two spaces I got an empty
26:49 - string by accident now the truth of the
26:51 - matter is if you watch my videos about
26:52 - regular expressions I can be more
26:55 - thoughtful about the split what I pass
26:59 - into split and use a regular expression
27:00 - for a particular pattern to match but
27:02 - even so like live item you might not
27:05 - know I can break expression as a way of
27:07 - creating a pattern and so what I could
27:08 - do is say anything that's not a word
27:11 - character and what I wanted to see here
27:16 - is whenever I do this I always get
27:18 - things extra empty strings this happened
27:21 - even here so this is something that I do
27:22 - in one of my previous videos this is
27:24 - basically a secret code for saying split
27:27 - by anything that's not a through Z or 0
27:29 - through 9 and that has to do with meta
27:31 - characters and regular expressions but
27:32 - actually I'm always having this problem
27:34 - where I get these extra empty strings so
27:36 - I could always just have a filter now
27:37 - filter by s s length by s dot length so
27:45 - look at this this should say because
27:47 - it's true or false see if this string
27:48 - has a not s dot length right if the
27:52 - string is the length of 0 I should
27:54 - filter it out so now let's do this we
27:58 - can see oh no no that didn't work not
28:03 - maybe I shouldn't use s here let's use X
28:08 - filter X not X dot length Oh No X dot
28:12 - length I want x dot length ah the
28:14 - opposite that was right so I can use s
28:16 - here I just was using s in too many
28:18 - places because it was a string so word
28:20 - word dot length right so I want to use
28:24 - the length to evaluate the word whether
28:26 - it qualifies or not I could of course
28:28 - say like greater than 3 right if I want
28:31 - to just have only the 3 letter words
28:32 - this will get rid of it an A now you can
28:36 - see I only have darkstorm you got rid of
28:37 - was 2 because it's not greater than or
28:39 - equals 2 so you can see how this filter
28:42 - you can chain these kind again I've got
28:44 - these really long lines of code which is
28:46 - very unlike me but you can see I can
28:48 - chain this stuff so I take this string I
28:50 - split it up so I
28:51 - all the words but you know what I
28:52 - actually only want the words that are
28:54 - three or more characters and instead of
28:56 - having to write a loop and an if
28:58 - statement and you splice how I always do
29:00 - it this is a nice really one line of
29:02 - code kind of way of using coulter oh I'm
29:04 - happy about that okay so thanks for
29:08 - watching this video I hope this was
29:10 - helpful to you about filter and I will
29:12 - come back in one more video I might as
29:14 - well I believe I've covered sort
29:15 - somewhere but maybe I'll make a
29:17 - standalone video that's just about the
29:20 - sort function and that'll be the last
29:21 - one that I'll do in terms of these
29:23 - higher-order array functions thank you
29:27 - okay so Tim asked will you merge the
29:37 - pull request on the toy
29:40 - a lot repository I want to I just it's
29:43 - I'm a little overwhelmed by how much how
29:45 - many contributions there were I want to
29:46 - be thoughtful about it I guess I could
29:48 - just kind of like but I usually do with
29:50 - the open source project this I just
29:51 - merged birch merger in March but I've
29:54 - learned that maybe it's helpful to like
29:56 - have a process and be more thoughtful
29:58 - about it so I'm gonna try to do that
30:00 - alright right I don't even need dot
30:03 - length right because an empty string
30:12 - would evaluate to false but what if I if
30:15 - I had the word false in there I could
30:17 - have a problem right look at this it was
30:21 - a dark and stormy false nice night if I
30:26 - do this oh no false meet it how
30:31 - interesting I would have thought this
30:37 - would evaluate to I would have thought
30:43 - quote false in quotes would evaluate to
30:45 - false all right false will be truth e
30:53 - false does not equal false okay well
30:56 - what do I know I don't know any of this
30:58 - stuff
31:00 - maybe merge video again
31:05 - all right sort oh so close I don't
31:08 - really well do sort it's fine because
31:10 - I'm just here I got to do sort
31:24 - okay
31:30 - now one thing I want to do with sword
31:37 - let's use what's a good there's a often
31:41 - I'm finding myself that I want to sort
31:43 - an array of objects that's often buy a
31:46 - certain property of that object so I
31:48 - guess I could just make something up or
31:52 - could I find like a JSON file with some
31:54 - data in it that I could use that I could
31:56 - sort let's think about this yeah word
32:06 - counts actually so you know what let's
32:09 - do the word counting thing that's that's
32:10 - where I covered sort word counting
32:14 - Schiffman sort o so somewhere in here I
32:19 - bet I I do it in this video
32:21 - oh but that's a processing one I think I
32:24 - have a JavaScript one where I do it
32:25 - anyway well we'll do it here this is
32:29 - perfect okay ah wrong thing oh all right
32:42 - okay sort the colors Oh sort the colors
32:46 - of a rainbow I don't know why I'm so
32:56 - standing in front of the code so much
32:58 - today all right if you've actually
33:13 - managed to sit through and watch all of
33:15 - these videos about all of these
33:17 - different functions I'm kind of amazed
33:19 - and it really the truth isn't that the
33:20 - point of what I'm doing is not to like
33:22 - cuz there's a lot more of these array
33:23 - functions is did I say this already in a
33:25 - previous video but is not to go through
33:28 - all these one at a time and explain
33:29 - every single one as useful as that
33:31 - possibly might be in some cases but if
33:34 - you can kind of understand how they work
33:35 - and then figure out how to look up in
33:37 - the reference in the documentation you
33:39 - can look at all the array functions to
33:41 - figure them out for yourself but I'm
33:42 - here let's do one more one more really
33:45 - useful one let's talk about sort so I'm
33:49 - gonna come back over here I'm gonna save
33:52 - I'm gonna come back to this word stuff
33:54 - because we're gonna need that in a
33:54 - second but let's just look at the let's
33:58 - just look at this array of vowels for a
34:00 - second so I'm gonna say console.log
34:03 - Val's
34:04 - and I'm just gonna say Val sort with no
34:08 - function passed in and console dot log
34:10 - Val's so let's see what happens and let
34:13 - me give this the number nine I'm gonna
34:15 - hit refresh now we can see look at that
34:17 - it's sorted it in numerical order from
34:21 - lowest to highest
34:22 - that's ascending order and in fact it
34:25 - didn't make a new array it sorted
34:27 - exactly that array so this is important
34:29 - to realize this is a distinction that
34:31 - we've really got to pay attention to so
34:33 - far in looking at these filter makes a
34:36 - new array reduce well reduce doesn't
34:39 - make an array it reduces things down to
34:40 - a single it could make an array but
34:42 - that's a special case reduce and map
34:45 - make a new array Phil Phil's an existing
34:49 - array and sort sorry filter and map new
34:52 - array Phil and sort act on in existing
34:55 - reduces a special case so that's kind of
34:57 - important distinction between all of
34:59 - these so but how did it know to do that
35:04 - well sort you kind of like would say
35:06 - like oh I sort it should sort by
35:08 - numerical order and if these were words
35:12 - you know a Hello be goodbye you would
35:21 - guess it's gonna sort them in
35:23 - alphabetical order now if this is
35:26 - capital B that shows up first because
35:30 - it's actually going to sort by capital
35:32 - letters first if there was something
35:36 - else that I was gonna look at here I
35:40 - wasn't gonna say capital B yeah if it's
35:45 - also like numbers and letters it's gonna
35:54 - first put the numbers and then in out in
35:56 - numeric order and then the letters in
35:58 - alphabetical order so there are there's
35:59 - a default way that an array will be
36:02 - sorted now let's let's look at this case
36:06 - what if I had just an array of objects
36:08 - so what if my array was actually
36:12 - something like a bunch of XY pairs so
36:21 - this is now an array and I oughta format
36:23 - it for me of two objects each with an x
36:26 - and a y well what if I sort that well it
36:32 - didn't change didn't change the order
36:34 - five six to ten all right well let's be
36:37 - sure about this let's say to ten five
36:43 - six and let's do it again to ten is
36:47 - first well that's there and now after
36:49 - sorting it to ten it's the same order so
36:51 - this is the thing there is a default way
36:55 - of sorting stuff but JavaScript the sort
36:57 - function only knows that default way for
36:59 - certainly kind of obvious things like
37:00 - numbers and strings if you want to sort
37:04 - something yourself you need to write
37:07 - your own
37:08 - comparing function this is why sword is
37:11 - a higher order function because it
37:13 - expects the sort function expects as an
37:18 - argument a function which you could call
37:20 - the compare or the comparator it's not
37:23 - actually a word I just feel like there's
37:25 - all sorts of goofiness in Java with
37:26 - these like long-winded strange words but
37:28 - you need to write a function that
37:29 - compares and what does that function
37:31 - look like so let's come back over here
37:33 - so let's say for this particular case
37:36 - here what I wanted to do is I wanted to
37:39 - sort this by the Y values so I would
37:44 - write a function I'm gonna call it
37:46 - compare and it's going to compare two
37:49 - elements this higher-order function
37:52 - requires two arguments two elements of
37:54 - the array and it's your job to say which
37:57 - one should go before the other and the
37:59 - way that you can tell the way that you
38:03 - can tell the sword function to do that
38:06 - is by returning a positive or negative
38:08 - number and I can never remember which is
38:09 - which but positive maybe means a goes
38:11 - before B negative means B goes before a
38:13 - and zero means they're equivalent or
38:15 - it's the other way around I always just
38:16 - try it both ways and eventually I figure
38:18 - it out so for example I could say return
38:20 - a dot Y minus B dot Y right that makes
38:24 - sense because in this case we're going
38:26 - to have 10 minus 6 is 4 or 6 minus 10 is
38:30 - negative 4 so if I put that compare
38:34 - function right here in Val's and I hit
38:39 - refresh we're going to see that 6 comes
38:43 - before 10 let's change this to B minus a
38:49 - and we're gonna see that 10 comes before
38:54 - 6 I know this is small but can you see
38:56 - that 10 comes before 6 so this and if
38:58 - they're equal but that value is going to
39:00 - be 0 so what other ways can we have fun
39:03 - with this well let's go back to
39:11 - let's go back to this it was a dark and
39:13 - stormy false night it was trying to
39:16 - league that's false let's put this back
39:18 - in here and let's say what I did with
39:21 - filter in the previous video is I
39:23 - filtered out all of the words after I
39:27 - split up this text that were less than
39:29 - three characters and let's just split
39:31 - out let's let's actually well three or
39:34 - less so let's make it two or less so
39:36 - let's just make sure this still works we
39:37 - can see ovale fine I'm gonna gonna
39:40 - comment this out I'm not using that
39:41 - anymore I'm just gonna look at this code
39:44 - and I'm gonna see okay so that's my was
39:47 - dark and stormy night now if I were to
39:49 - just say right before hear words dot
39:52 - sort I would get and dark stormy and
39:57 - dark night stormy was but what if I
40:00 - wanted to sort by the length of the
40:02 - words so I would we need to write a
40:04 - compare function and so I could start
40:06 - doing this with function compare a comma
40:10 - B return but here's the thing I'm trying
40:14 - to use as much as possible this arrow
40:16 - syntax to be able to sort of in line
40:18 - right there have the function that does
40:21 - the compare all in one line in a very
40:23 - condensed way let's try to do that maybe
40:25 - we've done it I've done it enough times
40:26 - now that don't need to write it first as
40:28 - a long-winded function then make an
40:30 - anonymous function then an arrow
40:31 - function let's do it all at once so I'm
40:34 - going to I'm gonna say we're word Ono so
40:39 - this is a comma V try always four up so
40:41 - this is the the the sort that compare
40:44 - function requires two arguments two
40:48 - elements of the array that I'm going to
40:49 - compare I'll keep this a and B sort of
40:52 - variable naming it's totally arbitrary I
40:54 - could call it cat and dog then I want to
40:57 - return the the difference between the
40:59 - lengths if one if one's length is bigger
41:02 - than the other it should be after it so
41:04 - I'm gonna say B and I don't need to say
41:06 - return I'm just gonna say B dot length
41:07 - minus a dot length so this should this
41:10 - should give me now a way of sorting the
41:13 - array where the longer ones appear at
41:16 - the end and let's see I probably got
41:17 - this backwards I always get it backwards
41:20 - I got it backwards of course where the
41:23 - longer ones are at the beginning
41:24 - so you know I could have figured that
41:26 - out but in the end I could just say a
41:28 - minus B and then there we go was and
41:33 - dark stormy so you can see three letter
41:34 - three letter for letter five letter five
41:36 - letter so this is the way that you can
41:38 - sort you can sort custom any list of any
41:42 - array of stuff based on however you want
41:45 - to compare two elements of that array
41:47 - all right now I'm trying to think if
41:53 - there's anything else I have to say I
41:55 - think that's it so we were done we've
41:56 - gotten through all this stuff what I
41:58 - want to do now is I want to look at
42:02 - taking a lot of these concepts into a
42:04 - kind of creative classic creative coding
42:06 - scenario a particle system and using a
42:09 - higher-order function to write a bunch
42:12 - of ways of managing so do a bunch of
42:14 - things to manage that array of particles
42:16 - and I'll do that in the next video which
42:18 - you might may or may not choose to watch
42:19 - thanks very much okay okay I should be
42:39 - back I didn't check the sound or
42:41 - anything
42:43 - but I think everything's hopefully
42:49 - working let me know if there's any weird
42:50 - glitches in the sound or video but I am
42:55 - back alright sorry about that I don't
42:56 - know why the stream crashes every once
42:58 - in a while but it does so I'm so excited
43:01 - to get out of this weird silly way that
43:06 - I have the screen here and let's get to
43:12 - the putting out lets me find let's see
43:17 - if I can find I want to look at the
43:21 - particle system the particle system
43:29 - coding challenge
43:31 - and I can't remember yeah so this I
43:38 - didn't use maybe it's fine I didn't use
43:42 - P vectors
43:44 - I mean p5 I didn't use create vector for
43:46 - this simple challenge and what I want to
43:49 - do is the filtering and yeah I think
43:56 - it's fine let's keep it simple let's
43:58 - keep it simple so what I'm gonna do this
44:00 - is exciting I'm gonna go to the coding
44:02 - training calm and I'm gonna go to coding
44:04 - challenges and particle systems I'm
44:07 - gonna go here and I'm gonna hit get the
44:08 - code let's see what this gives me oh
44:11 - that's gonna give me the processing one
44:14 - which is fine that's what I did it in no
44:19 - it's JavaScript ok this is the
44:21 - JavaScript one so I'm gonna put this now
44:23 - on the desktop and I am going to go to
44:31 - terminal
44:35 - and I'm going to go to desktop particle
44:42 - system and open it up an atom so here we
44:57 - go so look at this look at this look at
44:59 - this horrific Ness I'm going to so what
45:02 - are the things that I'm gonna do let's
45:04 - first let's just run this so this is the
45:09 - particle system so I can use filter to
45:14 - filter out particles that I no longer
45:16 - need to draw anymore I could use like
45:23 - reduce to find the centroid of all the
45:26 - current particles and draw that as
45:27 - something what else what else what else
45:33 - could I do I mean sort I could do in a
45:37 - weird sort of way to sort the particles
45:38 - by like where they are on the screen but
45:41 - I don't know what I would visually do
45:42 - with that I mean I could I could
45:45 - them a color based on where they are but
45:46 - I also just know their Y position so so
45:51 - what what what other ideas do people
45:54 - have the ideas that I have that are I
45:56 - mean I could use map for something
45:57 - probably
45:58 - so filter I definitely want to use in a
46:00 - four of loop for of loop filter what
46:04 - else Z sorting I was gonna do this Z o z
46:18 - sorting that's a great idea which are on
46:22 - top ah that's a great idea because
46:25 - without the fake depth I can draw I want
46:28 - to draw them in a certain order so what
46:30 - would I but visually what do I want to
46:31 - do like sort them by their color or
46:34 - something yeah I'll do that so I'll give
46:36 - them like a random brightness value and
46:38 - then sort them by that or something like
46:40 - that to draw them in that order that's
46:41 - great okay
46:48 - so just just for the sake of argument
47:06 - right so I could sort them so like and
47:10 - actually I could give them no alpha and
47:16 - I could always draw them so the brighter
47:19 - ones are on the front on front so I'll
47:20 - do make this change later that's a great
47:23 - one okay what else
47:29 - rotate there XZ to make it look like a
47:32 - camera going around them oh that's kind
47:34 - of cool all right so I don't want to get
47:35 - too crazy with it I just want to
47:37 - demonstrate the fact that you could sort
47:38 - them and have like fake depth because of
47:41 - that okay I'm not seeing any other
47:48 - suggestions so I have a sort I have a
47:51 - filter I mean maybe that's enough I
47:54 - could use fill but to start with a bunch
47:58 - but I don't that doesn't really I don't
48:01 - care about using map and reduce I'll do
48:04 - the centroid with reduce why not okay
48:06 - great
48:09 - all sort is also useful for sorting a
48:12 - population by fitness and genetic
48:14 - algorithms yeah okay all right
48:25 - I feel like so one thing I want to do is
48:32 - I think it makes sense for me to put
48:33 - this in a separate file even though I
48:35 - did
48:45 - so I'm gonna make a separate particle
48:46 - jas file because I'm gonna keep using
48:48 - this for the inheritance and
48:51 - polymorphism stuff particle J s and then
48:58 - index.html
48:59 - I need particle J s I don't need the
49:05 - sound library everything's good sketch
49:09 - it now a little simpler oops
49:25 - let's just improve this a little bit
49:27 - okay great just want to give myself some
49:32 - more space in the console there we go
49:36 - all right I think I'm in good shape
49:43 - so this is coding challenge 78 all right
49:58 - okay
50:08 - I could use fill to populate the initial
50:13 - array all right so any people try that
50:15 - too okay hello welcome to a video about
50:25 - higher-order array functions so I just
50:27 - made all bunch of individual videos with
50:28 - kind of some non-realism like made-up
50:31 - scenarios to cover map sort reduce
50:35 - filter and fill and I thought there
50:38 - might be a way of making use of all
50:41 - those functions to improve I don't know
50:43 - if it'll really improved but to change
50:44 - to adapt my coding challenge number 7070
50:49 - eight simple particle system so this is
50:52 - the coding challenge this is the code
50:54 - it's got an array in it I'm doing
50:56 - everything rather manually with a loop
50:58 - what can I do to use these functions so
51:02 - let's let's start with let's start with
51:04 - fill so the first thing I want to do is
51:06 - let's see if I could use fill to start
51:09 - the array with like a hundred particles
51:11 - so I could say new array 100 and then oh
51:20 - so here's the thing so I could say let's
51:22 - say I could obviously I could write a
51:24 - for loop right normally what I would do
51:26 - is I would have a for loop I equals 0 I
51:29 - is less than you know particles dot
51:30 - length or less than three hundred
51:31 - particles index I equals a new particle
51:33 - maybe you've seen that before but let's
51:35 - say particles dot fill now here's the
51:38 - thing this is what I want to do this is
51:42 - not going to work by any stretch of the
51:44 - imagination this is kind of like what I
51:47 - want to do but it will not work I want
51:50 - to make a new particle and I want to
51:51 - fill the whole thing but this is a
51:52 - problem let's just run this and see if
51:55 - we get some errors we're leave that work
51:59 - just fine but let's not add any
52:02 - particles and draw and let's look at the
52:06 - array and it is completely empty so the
52:09 - reason is fill needs to fill an array
52:12 - that has stuff in it already so what I
52:16 - could do
52:27 - yeah yeah oh shoot I'll just give you
52:36 - weird I would have thought no no cuz I
52:42 - have to map I should just start over I'm
52:50 - looking at the chat because I could see
52:52 - get rid of the new keyword right cuz I
52:55 - could I just sort of curious for a
52:58 - second here no no but it's not a yeah no
53:07 - all right what I want to do yeah I
53:14 - thought it would have been 100
53:15 - references to one particle but maybe
53:19 - because I updated it Oh cuz I updated it
53:21 - and it it it moved oh you know what okay
53:28 - okay okay let me start this over because
53:33 - I know what's going on now
53:44 - you start all the way back in the
53:46 - beginning
53:50 - all right so let's see let's start with
53:52 - by saying the oops what happened here
53:56 - let part let's start by saying particles
53:58 - is a new array with a hundred spots now
54:02 - in theory what I kind of want to do is
54:06 - this particles dot fill new particle
54:09 - right I want to just say hey fill all
54:12 - the spots with a new particle and I
54:14 - already told you there's a hundred spots
54:15 - there this is kind of gonna do something
54:17 - interesting
54:18 - I'm gonna actually just to demonstrate I
54:20 - mean I'm gonna take out adding particles
54:22 - and draw and I'm gonna run this real
54:24 - quick and see today you see something
54:25 - there real fast
54:26 - look at that real fast what was that
54:28 - well actually what it did is it made a
54:30 - new particle and it put that new
54:32 - particle in every spot in the array but
54:34 - it's all pointing to the same particle
54:36 - object I need a different particle
54:38 - object in every spot so in this case
54:40 - I've actually really got to use the map
54:42 - function so I can fill it I can fill the
54:45 - array with like emptiness and then use
54:47 - the map function to create a new
54:49 - particle for each and every spot so what
54:52 - I can do here is I can just say fill dot
54:55 - map and then each element I'll call it P
55:00 - should be a new particle so this now
55:06 - should give me whoops what did I get
55:16 - wrong here
55:16 - particles dot film at P is a new
55:19 - particle
55:26 - that looks right to me
55:36 - hopefully there's 100 undefined spots
55:49 - Phil Oh Phil requires an R no yeah that
56:02 - didn't work either
56:10 - no no no oh it's making a new array oh
56:15 - it's making a new array map returns a
56:19 - new array ah why didn't this work uh
56:30 - okay so here's the problem I forgot I
56:35 - know maybe this isn't the greatest thing
56:36 - to do because map requires a new array
56:38 - so this is all sort of silly that I'm
56:40 - doing here so it would make more sense
56:42 - for me to say this because why make a
56:46 - new array twice so what I want to do is
56:49 - make a new array fill with nothingness I
56:52 - could put null in here and then map oh I
56:55 - don't like where this and then map to
56:58 - new particles I hate this yeah that
57:01 - worked I got a little burst of 100
57:02 - particles can I take out this null yes
57:06 - so I don't know do we like this this is
57:10 - almost ridiculous I don't know if I
57:11 - really need this but it works I have a
57:13 - particles which is a hundred or a
57:16 - hundred a of a hundred particles and
57:19 - each each element is a new particle
57:21 - object and you can kind of see that one
57:23 - line of code great okay so we used this
57:26 - video we now use to fill oh and we use
57:29 - map oh how lucky for me and again I've
57:32 - really got to pay attention to what just
57:35 - acts on the current array what makes a
57:37 - new array alright so what can I use next
57:40 - let's go ahead and use filter I'm going
57:44 - to show you something interesting about
57:45 - filters so if you've looked if you've
57:47 - gone through this count if you watch
57:48 - this challenge and looked at this code
57:49 - look what I'm doing here I have this
57:51 - very awkward loop that loops to the
57:54 - array backwards of using the index I
57:57 - access each element of the array update
57:59 - I show I check this finished function if
58:01 - that finish function returns true I use
58:03 - the splice function to remove it out of
58:05 - the array so I can really improve this
58:08 - let me add this back in where it adds
58:10 - five new elements to the array and maybe
58:12 - there's a way I can do that with one of
58:14 - these higher-order functions there we go
58:16 - now we can see here's the particle
58:18 - system one thing I could do to improve
58:20 - this is let's just use let's just use
58:23 - the for
58:24 - Loup so for every particle of particles
58:30 - this is a new this is a loop that's part
58:32 - of e a loop structure this part of the
58:34 - JavaScript es6 I have a whole video just
58:36 - about this loop it's saying every single
58:39 - element of the array reference that each
58:41 - element in the variable particle so I
58:44 - can just say here particle dot update
58:47 - particle dot show so that's nice I like
58:51 - that already better than this down here
58:54 - which I'll comment out so this is a nice
58:57 - simple way of iterating through every
58:59 - element and there we go I probably just
59:04 - use two for each loops and this is about
59:06 - higher-order functions so we can see
59:08 - this is the same it now let's look at
59:10 - particles dot length 1975 2000 190 it's
59:17 - not deleting any of the particles as
59:19 - they fade out so how can I do that I can
59:23 - say in instead of having to check each
59:26 - one and remember the index and use
59:28 - splice I can now say particles dot
59:31 - filter and what do I want to filter now
59:35 - remember I'm gonna I can write the
59:37 - function to return true or false to tell
59:41 - it whether to keep it or not if you
59:42 - watch my video on filter all in line
59:44 - using the arrow syntax so really what
59:46 - I'm trying to write here is I want to
59:48 - write a function like keep and it
59:51 - receives a particle and I'm going to
59:53 - return P dot is finished right and in
59:58 - ultimately I want to keep it if it's not
60:01 - finished
60:02 - so this is the function that I want to
60:04 - write to filter everything out it
60:06 - returns true if it's not finished so
60:09 - keep it but I can just write this as and
60:13 - not so look at this now and I have to
60:19 - remember on my list filter is one of
60:23 - those ones that returns a new array so
60:26 - this actually isn't going to do anything
60:29 - unless I say particles equals particles
60:32 - dot filter filter them all out based on
60:34 - the is finished property and now
60:37 - okay it's finished is not a function
60:40 - just calling just called it finished
60:43 - okay and there we go now is this really
60:47 - working let's check particles not
60:49 - lengths to order 55 to 55 it makes sense
60:51 - that it's always 255 because its
60:54 - lifespan starts at 255 and goes down by
60:56 - one and I'm adding like five per frame
60:58 - somehow the math works out then it's
60:59 - like nicely 255 that's very interesting
61:02 - all right so look at this now the reason
61:05 - why now these this particle system
61:07 - example is a bit of a simplified version
61:10 - of my nature of code ones I just want to
61:12 - really briefly go to github github.com
61:17 - slash Schiffman slash the nature - code
61:23 - - examples - p5.js so if you want to see
61:27 - more examples that do this and I go into
61:30 - chapter four systems I have a lot of
61:33 - particle system examples here's one of
61:35 - the systems of systems of the particle
61:37 - system class you can see I am now doing
61:39 - this in my examples with some extra
61:42 - comments so this is this is now if you
61:47 - want to see many more examples where I'm
61:49 - kind of using this type of es6 style to
61:52 - you operate on an array of particles you
61:55 - can check out these examples as well
61:56 - okay what else can we add to this let's
61:59 - use what else can we add to this let's
62:08 - ah let's use reduce so let's see if we
62:12 - can use reduce so one one thing that I
62:14 - might want to do with reduce is
62:15 - something that happens in my flocking
62:17 - examples for example is I want to
62:19 - calculate like what's the center what's
62:21 - the average location or the average
62:22 - velocity of everything so let's compute
62:25 - what's known as the centroid which is a
62:29 - term for the average location of a
62:31 - position of a collection of things the
62:33 - center of it so let's think about how I
62:36 - would do this I want and I can get rid
62:41 - of all this now so I want to say
62:44 - particles dot reduce and remember reduce
62:48 - always gets
62:50 - an accumulator and a particle right
62:55 - there's an accumulator and a particle
62:57 - and what I want to do is I want to add
63:00 - up each particles location so there's a
63:05 - bunch of different ways I could do this
63:06 - for example I think it might be simpler
63:08 - right now to just do it with the x and y
63:10 - so first let's just calculate this X
63:13 - I'll call it C X for center X and this
63:17 - is going to be I'm going to call this X
63:20 - so the X is just to have like fewer
63:22 - shorter variable names X is the
63:24 - accumulator
63:25 - P is each particle so what I want to do
63:28 - is say X plus px right I want to add up
63:32 - all the X values of P this is not going
63:35 - to work right because if remember if you
63:38 - watch my reduce video the accumulator
63:40 - has to have an initial value if you
63:42 - don't specify it's the first element of
63:45 - the array well what's the first element
63:47 - of the array it's the particle object so
63:50 - in this case I can't like add the x
63:52 - value I want the I want the first
63:55 - element of the array to be the first
63:56 - particles X value but what would be
63:57 - simpler here would just be to explicitly
64:00 - initialize it at 0 so I can then say
64:02 - just comma 0 and this should give me the
64:05 - center X location right I'm taking all
64:09 - I'm adding up all the X values now I did
64:11 - I need to divide by the length but let's
64:13 - so this should really be this is really
64:14 - some X I'll call it the sum of all the X
64:17 - values this is this would be some Y and
64:19 - I'm going to do this and and just to
64:24 - rename the variables I'm going to do
64:25 - this right and then I should be able to
64:29 - say Center center X equals some X
64:34 - divided by particles dot length and
64:37 - Center Y is some Y divided by particles
64:41 - dot length and let's just draw a nice
64:44 - you know red circle right there and see
64:54 - what this looks like
64:55 - let's see if I got this right there we
64:58 - go you can see that's always the average
65:00 - center of all the particles the centroid
65:03 - of all the particles
65:04 - so again does this what have I done here
65:07 - I could have written a loop I could have
65:09 - said some x equals zero before the loop
65:11 - every element of the loop I say some X
65:13 - plus equal the particle that X so I
65:15 - don't know what if I really have I
65:16 - improved anything but this you make this
65:19 - is a way that you could write it using a
65:21 - higher-order function called reduce now
65:22 - could I do this in one line could I do
65:25 - this without separate x and y values and
65:29 - I can let's look at that so one way I
65:33 - could do that oh you know what though
65:34 - the particles don't have vector objects
65:38 - so I might almost want to leave this as
65:40 - an exercise I'm gonna leave this uh in
65:44 - some way so what I would say is like go
65:45 - to where was that
65:50 - where was that go to this particular
65:54 - example right where I'm actually here
66:00 - each particle if I go to this example in
66:02 - nature of code and I look at the
66:08 - particle object the elements are not or
66:11 - actually p5 vector objects so how would
66:14 - you write this function to add
66:17 - everything up with a p5 vector so let's
66:20 - actually I think we can actually do this
66:21 - here let's do this here okay so let's
66:24 - say I were to say I'm gonna comment this
66:26 - out comment this out I'm gonna say let
66:29 - some I'm gonna say some V which is the
66:33 - vector sum be create vector 0 0 that's
66:39 - the accumulator right that's going to be
66:44 - the end that's the accumulator I'm going
66:45 - to make an empty vector at 0 0 then I'm
66:48 - gonna say I'm gonna call this
66:52 - accumulator V then I'm gonna say let
66:55 - some V equal and we do the same exact
66:58 - thing particles reduce this accumulator
67:05 - which is V which is going to be a vector
67:08 - P then say V dot add because I'm gonna
67:14 - use the p5 vector syntax
67:17 - it's really crazy pxpy so I believe the
67:21 - the p5 vector object has an ad function
67:24 - and I can add to the vector x and
67:26 - y-components
67:27 - directly and then I'm going to give this
67:31 - as the initial value of the accumulator
67:34 - so really what I probably want to do is
67:36 - just put this right here be a little
67:38 - less confusing line of code I can't even
67:44 - fit it on the screen here there we go
67:46 - right I'm reducing let's see if we got
67:49 - this I'm reducing the array I'm gonna
67:51 - accumulate a bunch of vectors with the
67:54 - first vector being an empty vector with
67:56 - zero zero in it and then for each one of
68:01 - those I'm gonna add to it each particles
68:03 - X&Y and then I'm gonna say I know I'm
68:07 - standing in front of the code right now
68:08 - I'm gonna say some V divided equal
68:12 - particles dot length well I can't do
68:15 - that I have to use it's a vector I've
68:16 - used the divide function divided by the
68:19 - total number of particles and then I'm
68:24 - gonna say some V dot X and some V dot Y
68:28 - so let's see let's see how this goes are
68:33 - you actually still watching this video
68:34 - because I'm gone up the deep edge with
68:36 - all these things okay let's go back to
68:39 - my sketch same result so that's working
68:43 - to calculate the centroid so you've seen
68:45 - now I can use filter I can use reduce
68:48 - you know here's let's let's look back at
68:51 - the list filter reduce fill map I still
68:55 - have swords well um this video is just
68:57 - gonna be longer I'm gonna use sort in
68:59 - this video so here's the thing I don't
69:01 - think that the code is necessarily gonna
69:03 - run faster and more efficiently this way
69:05 - and this could be a problem if I have a
69:07 - particle system with thousands hundreds
69:08 - of thousands millions of particles I
69:10 - really want probably then a simple for
69:13 - loop is going to actually execute the
69:15 - fastest but there's something nice about
69:20 - learning how these functions work and
69:22 - sort of seeing how this can be done
69:24 - because you will especially see these in
69:26 - libraries that are manipulate
69:28 - large amounts of data in JavaScript
69:30 - libraries that are kind of using this
69:32 - sort of style of coding so hopefully
69:33 - this is helpful to you let's do sort so
69:35 - I'm gonna let's do some so one thing you
69:37 - could do about sort is you could like
69:39 - why would I want to sort these particles
69:41 - well one thing might be pause for a
69:46 - second why would I want to sort these
70:00 - particles well one reason might be what
70:03 - if your create first one if you're
70:04 - actually in 3d space it's sometimes
70:07 - advantageous to know the Z does the
70:09 - order of things because you might want
70:12 - to draw them in that order related to
70:14 - how the alpha or the blending and
70:15 - various things are working but I'm not
70:16 - in 3d but even in 2d what if I wanted to
70:20 - have some type of layering system where
70:22 - I always wanted certain things to be
70:23 - drawn over other things even if they're
70:25 - out of order in the array because right
70:28 - now I'm only gonna draw things in the
70:30 - order that they are in the array so
70:32 - let's create kind of a fake scenario
70:34 - that will do that so what I'm gonna do
70:36 - is I'm gonna go to the main sketch the
70:40 - particle and I'm gonna add oops no I'm
70:42 - sorry I'm gonna go to particle and I'm
70:44 - gonna add I already did this actually
70:45 - I'm gonna add a color variable which is
70:48 - just a random brightness value between
70:52 - zero and I guess technically this can be
70:54 - random 256 because I can get 0 through
70:56 - 255 and then I'm gonna fill by this
70:59 - color and I'm gonna get rid of the Alpha
71:01 - so they're gonna be no alpha now let's
71:03 - look at this whoops let's go back I'm
71:05 - gonna run this and I'm gonna get rid of
71:07 - the centroid just so we don't have that
71:09 - big red dot for no reason I will
71:13 - obviously leave this in the code go back
71:16 - to here now look at this so there's
71:19 - obviously a layering going on here
71:21 - the layering happens to be just the
71:23 - order that the particles were added but
71:25 - what if what I wanted to do for example
71:27 - was always have the brighter ones appear
71:29 - on top of the darker ones I don't know
71:31 - that will produce any visual value but
71:33 - you could imagine a scenario where
71:34 - you're actually thinking about layers
71:35 - and depth and maybe you create fake Z
71:38 - value
71:39 - variable for each object or something
71:41 - like that so I could sort them by their
71:43 - brightness so let's look at that if I go
71:45 - now back to sketch before I draw them I
71:48 - could say particles dots sort and
71:50 - remember when I sort I need to create a
71:55 - function and again I'm using this arrow
71:56 - syntax just almost automatically now
71:58 - this is this working for you please let
72:00 - me know it's all these videos help you
72:02 - kind of just see it where I get where I
72:04 - start with two elements of the array a
72:05 - or B and now it's up to me to return a
72:08 - value that says which one should be
72:11 - before the other and so I can actually
72:13 - just say a dot color minus B dot color
72:16 - because if you return a positive number
72:20 - a negative number that means positive
72:22 - number means one is before the other a
72:24 - negative number means the others before
72:25 - the other and then zero means they're
72:27 - equal that's how you're telling it to
72:28 - sort so this should be a way of sorting
72:30 - the array and sort actually manipulates
72:33 - the existing array not making a new one
72:35 - so this now if I run this we should see
72:38 - look at that
72:39 - the brighter ones are always on top of
72:42 - the dark ones which is kind of an
72:44 - interesting effect again you know I you
72:49 - could probably invent your own scenario
72:51 - of layering as to why you want to do
72:52 - this but now we have a particle system
72:55 - coding challenge 78 that has map and
72:59 - fill to create an initial set of
73:01 - particles it has sort to sort the way
73:05 - I'm drawing them based on brightness I'm
73:07 - using a four of loop to be able to
73:09 - iterate through all the particles and
73:11 - I'm using filter to filter out whoops
73:22 - and I'm using filter to filter out
73:25 - particles that I no longer need that
73:26 - have faded out as a bonus I think it
73:30 - would be interesting for me just to try
73:34 - to use for each right so I could also
73:38 - say if I really want everything to be a
73:39 - higher-order function I could say
73:41 - particles for each right and then I
73:44 - could say this but I need multiple lines
73:50 - of code
73:50 - so I'm gonna say P dot update all the
73:57 - laws of physics are like exploding
73:59 - around in my head as I'm using for each
74:01 - loop I can't believe I'm doing it so is
74:04 - this right let's just run this hey and
74:06 - let's put the centroid back in there we
74:11 - go so I can't believe I just did this
74:13 - but a for each loop what a for each loop
74:16 - does and says apply this function to
74:19 - every element of the array and my
74:21 - function is to update and show if
74:24 - incidentally I because I have two lines
74:26 - of code I have to write out the full
74:28 - curly brackets but I could do this I
74:30 - don't know what the point of this would
74:32 - be but if I just wanted to write it like
74:38 - this just to be like kind of a crazy
74:40 - person for today I could say update all
74:42 - of them show all of them and sometimes
74:43 - you actually want to get through
74:44 - updating all of them before you draw all
74:46 - of them so this would do that let's see
74:49 - and there we go I have really I'm like
74:51 - am i a function do I qualify as a
74:53 - functional programmer I seriously doubt
74:55 - it but I have gone through and hopefully
74:57 - shown you a bunch of techniques for
74:59 - applying the arrow syntax and functional
75:02 - higher-order functions of JavaScript
75:04 - arrays in this video hopefully you
75:05 - learned something it will improve or
75:07 - help something you're doing in the
75:08 - future please let me know in the
75:09 - comments and thank you for watching
75:19 - Oh chaining yeah chaining use chaining
75:26 - and do this okay that's for another day
75:33 - reading the chat for a second here hey
75:37 - just 340 okay so I really did get
75:43 - through all this guy all this content
75:45 - about functional stuff any more stuff
75:48 - today yeah I wanted to do inheritance
75:50 - and polymorphism oh that's interesting
76:01 - someone is asking me to turn around the
76:04 - layering just to see what that looks
76:06 - like yeah that's also interesting oh
76:16 - yeah that's too crazy for me me I am so
76:21 - many getters and setters oh yeah we'll
76:25 - see I definitely need to cover that at
76:26 - some point
76:37 - no let's think about how to do this I'm
76:44 - gonna erase the whiteboard we're gonna
76:46 - move on to the next topic I think I
76:48 - should just admit then I'm not gonna be
76:51 - doing the neural network stuff today
76:52 - but I should do at least one coding
76:55 - challenge by the way it's interesting to
77:00 - watch my youtube analytics I'd be happy
77:02 - to like share some of that at some point
77:03 - but like so I almost the videos get edit
77:07 - and I try to release one every single
77:08 - day I usually do it sometime between
77:10 - 7:00 a.m. and 12:00 noon eastern time
77:13 - because I'll like remember at some point
77:14 - but if you look so you know the graph of
77:18 - the analytics is always all these spikes
77:19 - of where I released the video each day
77:21 - but there's if I release a coding
77:23 - challenge video like the double pendulum
77:25 - was like three times as high as some of
77:27 - the other stuff interesting to see all
77:31 - right let's erase all this
77:48 - oh I totally forgot to talk about google
77:50 - Summer of Code I usually do that at the
77:52 - beginning because mm-hmm but you know
77:58 - who knows maybe there's a bunch of
77:59 - people watching now I could mention this
78:02 - too let's take a pause for a second for
78:07 - me to mention google Summer of Code so
78:10 - if you are a student you have to read
78:14 - the Google Website in terms of
78:15 - eligibility but if your students your
78:17 - edge of eligible to apply for a google
78:21 - Summer of Code summer of well let me
78:24 - just search summer google Summer of Code
78:29 - okay so this is the google Summer of
78:33 - Code homepage this is a program that I
78:36 - have participated in almost every year
78:38 - and there was one year that I missed
78:39 - when processing was not an organization
78:42 - for google Summer of Code in for the
78:44 - last five or six years if you click here
78:47 - and go to view organizations these are
78:50 - all the these are all the organizations
78:53 - that applied and were accepted by Google
78:55 - to be part of Google Summer of Code and
78:57 - again I'm not an official representative
78:59 - of Google here I'm just telling you
79:01 - about it I am participating through if I
79:05 - keep scrolling down eventually I will
79:07 - find the processing foundation so I am
79:11 - the I am one of the administrators for
79:13 - the processing foundation I think I must
79:18 - have gone past it there it is so the way
79:24 - the google Summer of Code works is if
79:26 - you're a student you can apply to work
79:28 - on one of these open-source projects for
79:30 - this summer you'll be assigned a mentor
79:32 - for example if you apply to processing I
79:34 - will probably be a mentor for a project
79:36 - this summer along with many other people
79:38 - and Google pays you a stipend I believe
79:43 - you know you should really read all the
79:45 - FAQ materials because eligibility and
79:48 - whether you're eligible it's not
79:50 - something the foundation processing
79:51 - foundation of the organization to decide
79:53 - that's something that Google does and
79:55 - how you're paid and what based on where
79:57 - you live and that sort of thing is also
79:58 - all done by goo
79:59 - but if you click on here so I'm going to
80:01 - show you the processing foundation
80:02 - obviously you should look at all these
80:04 - organizations but if you go here you'll
80:06 - see here's the processing foundation
80:07 - creative colon graphic design if you go
80:09 - to learn more you'll get to the
80:11 - processing foundation page which has
80:12 - some more information and then you'll
80:14 - want to click on View ideas list and
80:18 - this will take you to our github page
80:21 - that has a lot of things that we're
80:23 - looking for help with like improving
80:25 - p5.js WebGL testing and updating mobile
80:27 - functionally improving file other method
80:29 - update hello def p5.js website p5 just
80:31 - web editor classroom management system
80:34 - utilize the audio work but exactly
80:36 - there's lots of stuff here for p5 GS
80:38 - then for processing desktop environment
80:40 - analyzation tool so these are all just
80:43 - suggestions also I should mention very
80:46 - clearly that this is a that one of the
80:50 - things we always consider are just
80:51 - libraries for processing or add-ons for
80:53 - p5.js so and if you want to discuss your
80:58 - idea and I've got a you can go to form
81:01 - processing org and go to summer Summer
81:05 - of Code 2018 and then oh my goodness
81:08 - look at all these things that have been
81:09 - posted here already I've got to get
81:11 - reading through these so people have and
81:14 - there's been some comments already so
81:15 - these are this is where you can make a
81:17 - post about your idea and hopefully get
81:18 - some questions answered you can also
81:20 - tweet at me at Schiffman and yeah so if
81:25 - you're interested I encourage you to
81:28 - apply it's a wonderful program and it's
81:30 - super helpful for us as a somebody who
81:32 - works on a Topa sort of volunteer-driven
81:35 - or donor funded open-source project
81:39 - these kind of programs where you get a
81:41 - lot or a large amount of sub help and
81:43 - support over a intense period of time is
81:45 - really does wonders for the project if
81:51 - you want to see what we did last summer
81:54 - if you go to medium.com
81:57 - slash at processing org this is where
82:02 - there we have a bunch of posts about
82:03 - recent things but some one of these is
82:08 - google Summer of Code wrap up processing
82:12 - meat
82:13 - I can find mm yeah so this is a post on
82:18 - medium that that goes over all these are
82:20 - all the google Summer of Code students
82:22 - from last year and all the different
82:24 - projects for processing that they worked
82:26 - on so I encourage you to check this out
82:30 - okay I wanted to mention that so the
82:39 - question now becomes - i editi our
82:49 - rights you never reply to the tweet I
82:51 - actually I do I read all my mentions and
82:53 - I try to reply to all of them sometimes
82:55 - I miss one or two
82:56 - like not attached to my glowing
82:59 - rectangle all day long you know I have
83:01 - to like put it aside for a large
83:03 - portions of the day and time and weeks
83:05 - but I do do to 2048 that you promised us
83:08 - a few weeks ago ah interesting
83:10 - interesting that is not the worst idea
83:13 - I've ever heard I wanted to look look
83:17 - into that a bit more think about it a
83:19 - bit more before I came and did it but
83:23 - but I think I should do all right so I
83:27 - let's um let's think about this what
83:34 - time is it
83:35 - 3:40 so I really only have an hour all
83:40 - right all right wonderful people
83:44 - watching inheritance and polymorphism
83:54 - with particles 2048 a simple spring
84:04 - challenge oh this is what I want to do
84:06 - simple spring-like i spring-like Boynton
84:09 - Springs simulation not not like this
84:14 - springtime the flowers blooming although
84:15 - that would be wonderful to 2048 it's
84:18 - gonna make you so crazy right now if I
84:20 - try
84:20 - but it is kind of it's kind of I do I
84:23 - did it would be good to try to do that I
84:26 - think I should do it in JavaScript
84:27 - though because all I can use all the
84:29 - higher-order array functions that's kind
84:33 - of fun all right let's let's see what
84:38 - you guys think I need a little break
84:40 - actually so I can let you guys let all
84:43 - of you watching excuse me
84:49 - [Music]
84:50 - put your votes in right now yeah I know
84:56 - 24 24 th drove me crazy before and so
84:59 - the reason why I didn't end up releasing
85:01 - that is because I wanted to go back and
85:03 - like think about it again but okay I'm
85:12 - gonna take a short break I'm gonna mute
85:15 - myself and I'll be back
85:27 - [Music]
85:50 - [Music]
86:02 - [Music]
87:00 - [Music]
87:27 - [Music]
87:48 - all right I have come back it is time to
87:59 - relax have some quiet time let's read
88:04 - the last numbers in the book this is the
88:06 - very last page these are these are
88:10 - Gaussian deviates they're like my
88:13 - favorite kind of numbers they're
88:14 - Gaussian and their deviant point three
88:17 - three zero point nine seven six point
88:20 - three three seven negative point zero
88:23 - four three negative 0.476 some other
88:26 - ones were negative before I didn't
88:27 - realize that one point five seven seven
88:29 - negative point seven seven five negative
88:33 - 0.106 0.189 point negative point one to
88:38 - two all right
88:42 - [Music]
88:53 - you can all see the results right I'm
88:55 - gonna vote for the spring challenge
88:57 - that's the easiest for me I think I
89:05 - can't look
89:09 - well I see something that's green with a
89:12 - lot of space in it okay really seriously
89:27 - Oh nobody's interested in this
89:28 - inheritance and polymorphism this is
89:31 - gotta be pretty good I could make a few
89:33 - people happy by doing the spring please
89:42 - [Music]
89:50 - [Music]
89:56 - right we're gonna do this I don't I
90:02 - never bother to really like think
90:04 - through what I did wrong before but I'm
90:05 - gonna let's let's go for it okay we've
90:07 - got we've got it I've got an hour no
90:11 - chance of getting this done in an hour
90:12 - okay p5 G - B 2048 seed each one I'm
90:22 - gonna definitely do this in JavaScript
90:23 - now because the array stuff I think will
90:27 - actually be much easier 400 400
90:32 - I mean it would make sense to use Dom
90:39 - but oh wait wait I've got a secret a
90:56 - secret k week month sent me his code all
91:02 - right well I've lost where I am all
91:05 - right
91:06 - so what do I need here okay so now I
91:13 - need to be where this inheritance of
91:22 - polymorphism will come another I'm kind
91:23 - of to be honest with you I'm very happy
91:25 - to not do the inheritance and
91:26 - polymorphism right now is I'm a little
91:27 - tired of just kind of technical
91:29 - JavaScript stuff um I do need to come
91:32 - back to that because that I think is
91:33 - core core material to be oops to be a
91:44 - part of the tutorials on my channel
91:51 - alright
91:55 - all right let's now go to 2048 and 2048
92:06 - Wikipedia I already erased the
92:17 - whiteboard all right let's think about
92:22 - this what was the problem I ran into
92:24 - before the main problem I know okay
92:31 - the main problem I ran into before
92:35 - why not background 51 asks see creative
92:38 - a good question Oh see the thing is you
92:41 - know when I should be doing 2048 I
92:43 - should be doing it about 9:30 in the
92:45 - morning when I'm like fresh and just had
92:47 - some breakfast and arrived at work doing
92:49 - it at 4:00 p.m. on a Friday after I do
92:52 - live streaming all day is pretty much a
92:54 - terrible idea
92:55 - I will write but the nice thing about
93:01 - doing this is the more of these that I
93:04 - have the more I can build little machine
93:07 - learning systems to play them which I do
93:09 - eventually want to get to why is this oh
93:12 - my the my keying has a little bit of
93:17 - noise like in it today why how can I do
93:22 - here is that better it's a little better
93:26 - I think all right so it would make sense
93:38 - to do this with Dom elements but I'm
93:40 - going to do this with canvas
93:50 - all right where do we go okay
94:07 - oh look what's pulling into the station
94:14 - it's the classic game 2048 that I always
94:17 - try to program and completely fail at so
94:20 - here's another attempt you hopefully
94:22 - haven't seen the previous attempt but
94:23 - there was a livestream where I tried to
94:25 - do this and kind of ran into a lot of
94:26 - problems I'm going to attempt to make
94:28 - the game 2048 if you're not familiar
94:30 - with it check out the link in the
94:32 - description play it this game according
94:35 - to this website was written in
94:37 - JavaScript and CSS during a weekend by
94:40 - Italian web developer Gabriele Shirley
94:43 - it's now an open source software a
94:45 - project under the MIT license I have not
94:46 - looked at the source code I am going to
94:48 - try to make a canvas version of it I
94:50 - think that'll be a little bit easier
94:50 - just to start then using Dom elements
94:54 - and I'm gonna use the p5 library to draw
94:58 - to the canvas so what is the core let's
95:01 - let me first before I get started coding
95:03 - I really very pessimistic about this let
95:07 - me try to talk through my understanding
95:09 - of how the game works
95:10 - and what kind of code stuff I might need
95:13 - all right so the game by definition is
95:18 - played on a four by four grid now again
95:23 - there are obviously variations of this
95:25 - this is not their their predecessors to
95:27 - 2048 of the same game with slightly
95:29 - different designs and flavors and ideas
95:31 - but the core idea of the 2048 game is
95:35 - four by four grid it starts I think with
95:38 - two random spots filled in with either a
95:40 - two or a four and then you can press a
95:44 - key right up left down obviously on a
95:50 - mobile or touch version you can swipe
95:51 - and you send all the values so if I
95:54 - swipe to the right I send all the values
95:57 - this way so the two and the four would
95:59 - end up here then maybe a new value pops
96:02 - in if a two pops in here and I swipe to
96:05 - the right again numbers that are the
96:08 - same will combine so these twos will
96:12 - combine into a four and so let's go back
96:15 - and look at that and we can kind of see
96:17 - let's see that happening here right as I
96:19 - press down
96:21 - nothing happens I press the left
96:23 - everything was the left of four moves to
96:24 - the left at two uh let me move that to
96:26 - up and then let me move that over those
96:29 - two 16s will combine and those two twos
96:31 - will combine and these two twos will
96:32 - combine there we go that can go down so
96:35 - you get the idea so what do I need
96:37 - well actually interestingly enough all I
96:40 - need to figure out is if I have
96:44 - basically four you know I have a matrix
96:46 - a two-dimensional array but it's really
96:49 - just an array of arrays and I did two
96:51 - Betty of it so if I have four if I can
96:54 - figure out how to just condense things
96:56 - to one direction one direction then I
97:01 - don't know any one direction songs
97:03 - otherwise I would started like singing
97:04 - as a joke but I don't actually know the
97:07 - name one direction anyway I'm more of
97:09 - like a 98 degree 98 degrees I don't even
97:12 - remember whatever was in the like 1940s
97:14 - when I was a teenager okay oh yes 2048
97:21 - if I can just get them figure out how to
97:23 - do it in one direction then if the user
97:27 - or the player presses up I could kind of
97:29 - just rotate the whole thing and go in
97:31 - that direction so so let's let's see if
97:33 - we can figure this out I need some kind
97:34 - of structure for doing this let's go to
97:38 - our code and by the way I just did a
97:42 - whole series on JavaScript array
97:44 - functions higher-order functions like
97:46 - map fill all that sort of stuff so I
97:49 - think I can use that right now
97:50 - so what I'm going to do is I'm gonna
97:52 - have I'm gonna have a variable called
97:53 - grid and grid is a new array with four
97:58 - spots in it and what I'm gonna do is in
98:01 - each of those spots I'm going to fill it
98:04 - and map it with another new map map it
98:09 - with zero zero zero zero so I think what
98:15 - this would do right you're looking oh
98:16 - you got lost in my own world there
98:18 - they'd never write code like this but
98:20 - let's try this so I'll explain this in a
98:23 - second let's see what happens here our
98:27 - object array is not a function where's
98:30 - that line number six
98:33 - oh I need to just start that part over I
98:48 - told you this is a bad idea now I'm
98:50 - gonna try to use higher order functions
98:52 - I'm gonna get all lost okay all right so
98:56 - let's start writing some code the first
98:58 - thing I'm gonna do is I'm gonna have a
99:01 - variable called grid and I want that
99:03 - grid to be a two dimensional array
99:05 - really just an array of arrays so I want
99:07 - one two three four arrays and I'm gonna
99:10 - try to use I just made a whole video
99:11 - series about higher order JavaScript
99:14 - functions and array function so let's
99:16 - try to use those so the grid needs to
99:20 - have four rows I'm going to think of
99:23 - those as rows then I can use this
99:28 - function called fill to fill each of
99:31 - those spots and then map and to say each
99:36 - of those spots is going to be an array
99:37 - with four zeros in it so this is a
99:40 - pretty goofy pretty pretty goofy but
99:43 - this should allow me to do I have an
99:49 - error here and I say grid undefined okay
99:53 - so I got close I got for undefined
99:56 - arrays what can i what can I do empty
100:01 - array and then fill it with empty arrays
100:05 - and then have each array map to fill
100:11 - with 0 right with Phil and map I'm like
100:27 - well we fill it with empty arrays then
100:29 - each one would be a new new array an
100:36 - array with four spots filled with zeros
100:39 - I think this might actually work right
100:42 - fill it with Chi just fill it with null
100:45 - though right so I can fill it with
100:47 - oh here's to watch I'm gonna come back
100:50 - to do this ahead grid and the worst I
101:04 - like looking at the chat as if as if I'm
101:07 - gonna be saved by the chat
101:09 - Oh
101:22 - I'm gonna come into this again this is
101:25 - really gonna be like lots of cuz this is
101:28 - you were ready for oh this should work
101:40 - you know I got a better idea
101:43 - everybody relax I'm not doing it that
101:47 - way I thought doing it that way
101:49 - Phil okay all right let me come and
101:54 - write some code I'm going to say I'm
102:00 - gonna have a variable called grid and
102:01 - guess what I'm just gonna hard code it I
102:05 - feel okay with that
102:06 - do you feel okay with that obviously
102:08 - what is it it's gonna start as it needs
102:11 - it's basically this right I need to have
102:14 - four arrays of zeros and let's see if
102:19 - yeah there we go
102:20 - this is that's the book 2048 board I
102:24 - could try to say like new array and fill
102:27 - and math and all that stuff all these
102:29 - like but this is gonna work there we go
102:31 - so now what do I need to do first the
102:35 - first thing that I need to do is for
102:38 - each is unless write a function to do
102:41 - this is add add num add I don't know
102:47 - what's add spot I don't know how to call
102:48 - this
102:48 - add number so what the add number
102:52 - function should do is it should pick a
102:54 - random location that does not already
102:56 - that has a zero and it should add a two
103:00 - or a four there so what I'll do is so
103:08 - first I should check first I need to
103:10 - check is the whole board full of
103:13 - everything that's not is there are there
103:14 - any zero spots so what I want to do okay
103:17 - so let's give
103:24 - so let's make a list of all of the in
103:27 - all the possible spots that I can add so
103:30 - I'm gonna say I'm gonna make an array
103:31 - called
103:32 - options and now what I'm gonna do is how
103:38 - could I use to get the index values out
103:41 - I'm just gonna loop through it so I'm
103:47 - gonna use I and J I kind of have this
103:49 - idea that I'm gonna use all these fancy
103:50 - array functions you're just gonna loop
103:53 - through it I and J and I'm gonna say if
103:57 - grid I J equals 0 this is a valid spot
104:03 - options dot push and I'll just make a
104:09 - little array with I and J I and J in it
104:12 - maybe I'll make an object X I Y J ok so
104:19 - I'm going to put a little object in that
104:21 - array now what I'm going to do is once
104:25 - I'm done I'm going to say let spot equal
104:30 - a random option so if options dot length
104:37 - is greater than 0 then I can pick a spot
104:41 - and then I'm going to say grid spot dot
104:43 - X spot dot Y spot dot y equals and I can
104:57 - I basically want to pick I don't want to
104:59 - pick a 2 or a 4 so I can use a ternary
105:02 - operator whoo I've gone totally nuts
105:06 - today which basically what a ternary
105:08 - operator does is it says what kind of
105:09 - pick a random number and okay hold on
105:15 - I'm gonna pick a random number R is a
105:17 - random number between 0 and 1 and I'm
105:19 - gonna say is are greater than 0.5 if it
105:24 - is give me a 2 otherwise give me a 4 I
105:28 - think and I don't know if this should be
105:31 - in parentheses or not I don't think I
105:32 - need it so this is a nice little way of
105:34 - just giving me based on whether R is
105:37 - than 0.5 give me a two or a four I
105:39 - could've written an if statement but
105:40 - everybody always complains when I don't
105:42 - use the ternary operator so I'm gonna
105:43 - try using it and who knows if I got it
105:45 - right so let's in setup I'm gonna say
105:49 - console dot log table I'm gonna say add
105:52 - number add number and console dot table
105:59 - grid console dot table is a really nice
106:04 - way to display a array in the browser in
106:10 - the end of JavaScript console in the
106:11 - browser so let me do this
106:12 - so a look at that look at that let's do
106:15 - it again
106:17 - 2 & 2 2 & 2 all right so in a way like
106:21 - almost 100 just do this the entire thing
106:24 - in the console and not draw anything
106:26 - because I could just do the whole thing
106:27 - in the console and play the game but I
106:29 - think it's gonna be much easier if I can
106:31 - represent what we're seeing in the
106:32 - console in the canvas so let's put that
106:35 - into draw so here I'm gonna this is my
106:39 - nested loop that I'm going to be using
106:41 - constantly and I am going to first draw
106:47 - a rectangle and I guess though the size
106:50 - is always going to be the width divided
106:52 - by 4 you know I think I can probably for
106:55 - right now just say it's a hundred like I
106:57 - get a hard code a lot of stuff cuz it's
106:58 - 400 by 400 refactor later and so I'm
107:02 - gonna draw a rectangle at I x WJ x w-w-w
107:08 - and I'm gonna say no fill stroke weight
107:14 - to stroke zero and let's make the
107:19 - background 255 and I should see a nice
107:24 - grid now there we go I've got my nice
107:29 - grid now what I should do and this is
107:32 - almost like too big I don't need that
107:34 - much space okay now and I'm gonna move
107:36 - this over a little bit so I'm not
107:37 - staying in front of it so much I am
107:39 - going to now I should also say if grid I
107:44 - J is not equal to 0 I could draw the
107:48 - number there now let's do
107:50 - to use the text function in p5 so I'm
107:52 - gonna say text-align:center text
107:59 - I'm on to draw the value so I should
108:02 - actually just let me get the value the
108:03 - value is grid I J and so I'm going to
108:11 - draw that value at x w- w / - that's
108:17 - kind of like the center J times W minus
108:20 - J divided by 2 W divided by 2
108:23 - what does that do and I'm gonna say text
108:27 - size 64 I don't know fill 0 no stroke
108:35 - this should be rendering it actually I
108:39 - should just put this in its own function
108:40 - just to kind of like get out of here
108:43 - function draw grid and I'll call that in
108:48 - draw so let's see how this goes yeah
108:51 - that's not so horrible I've seen worse
108:54 - so let's - W divided by 4 about oops Oh
109:01 - what happened here J times oh wait oh
109:04 - wait does the text draw from let's see
109:13 - this so I'm seeing a 4 times Oh
109:15 - interestingly I am seeing things in the
109:18 - wrong differently than I'm seeing them
109:20 - here because the way that I'm treating
109:21 - columns and rows and I think I'm drawing
109:24 - stuff above so it actually should be J
109:28 - times W plus W divided by 2 why do I
109:40 - sometimes get one thing text-align
109:44 - text-align:center Center that's what I
109:46 - meant to do thank you
109:47 - text-align:center Center there we go
109:51 - I knew those that's what I wanted to do
109:54 - but why am I sometimes getting only one
109:56 - number maybe I'm not anymore right
110:02 - before I was getting one number I'm not
110:04 - any
110:04 - oh why did I only get one number
110:08 - what's the grid zero two zero zero zero
110:16 - four zero isn't is in three how I'm like
110:23 - hold on let's say I let's actually draw
110:30 - the let's draw the coordinates look at
110:38 - me
110:38 - I have everything shifted over wrong
110:40 - that's clearly the problem so my X
110:44 - location is I times I times W minus plus
110:50 - what am i do / -4 it's a plus I lost my
110:53 - mind
110:53 - oh what a terrible error that's much
110:55 - better sorry you had to sit through that
111:00 - so now it's fine and now I can put the
111:03 - value there there we go so now this
111:06 - should work this is my opening board no
111:09 - matter what poof okay we're getting
111:11 - there
111:12 - 2048 here we come so now what's the deal
111:17 - I'm just gonna say for right now
111:19 - whenever I hit the spacebar
111:21 - I'm gonna send everything to the right
111:28 - so what I need to do okay so let's think
111:32 - about this there's if I have an array of
111:35 - numbers and there's so many different
111:37 - ways you could approach this problem
111:38 - when I'm sure I'm not going to do it in
111:39 - the most efficient or sensible way but
111:42 - the first thing that I would do like
111:44 - let's say let's say this is the row the
111:48 - first thing that I would do is just pack
111:50 - everything to the right so that any
111:56 - empty spots would be left on the left
111:58 - side so let's first do that so that's
112:00 - let's write a function called slide so
112:07 - I'm gonna write a function called slide
112:10 - and it takes a row which is an array and
112:13 - I again I might have to thank you I know
112:17 - I'm in the wrong camera
112:29 - alright okay let's go over here so I'm
112:37 - gonna write a function called slide and
112:40 - I'm gonna give it an argument a row now
112:42 - I know that I probably am mixing up my
112:44 - rows and columns have to figure that out
112:46 - later but I'm going to assume row it's
112:48 - just a single array and what I want to
112:51 - do is I want to look through I'm gonna
112:53 - take that row and I want to filter out I
112:57 - could use filter to I mean it's sort of
113:01 - silly I just want to move everything
113:02 - over if it's not a zero so let's try
113:04 - using let's let's try using some array
113:06 - functions I'm gonna say row equals I'm
113:11 - gonna want to return I'm gonna so I'm
113:14 - gonna we're going to return an array so
113:15 - array equals Rho dot filter so this is
113:23 - actually going to keep everything that
113:25 - is not a zero in the same order this is
113:29 - kind of crazy but filter is a function
113:31 - that takes any value and let me just and
113:34 - that and that because there's a true or
113:36 - false test a map would be interesting
113:44 - here too anyway I'm gonna do this so
113:46 - this should just see then I'm gonna say
113:49 - return array so first I'm just gonna oh
113:53 - no no and then what I need to do is I
113:56 - need to say I need to add two I need to
114:00 - add however many so whatever many their
114:02 - rates are like the missing is all I
114:06 - could just sort new I can't sort it
114:09 - missing equals 4 minus array dot length
114:13 - and I'm just going to I'm gonna say let
114:23 - and then I'm gonna say missing let zeros
114:30 - equal an array of missing size filled
114:36 - with zeros and then I should be able to
114:40 - just say
114:41 - arrey dot put now what how do you put
114:44 - something on the front of the array push
114:46 - would go on the back which maybe is fine
114:50 - because I could be sliding that other
114:52 - way just be sliding the other way so I'm
114:54 - gonna say push the zeros and then return
114:59 - the array let's let me just test this
115:03 - function out right so the idea here let
115:07 - me get rid of this console this console
115:11 - got table stuff where is that yeah I
115:15 - don't need that anymore so let's say I
115:19 - haven't or let's say I want to say slide
115:20 - and my array is zero zero two four okay
115:27 - so push doesn't do that it doesn't push
115:29 - I use can cat maybe can cat where's I
115:34 - slide array can cat zeros know how do I
115:45 - join join concatenate concatenate let's
115:50 - look at the array page Mozilla array
116:00 - concat oh it makes a new array it makes
116:05 - a new array okay so I need to say array
116:08 - equals array can cat zeros okay there we
116:12 - go now let's take a look at this let's
116:15 - get out of here
116:16 - go back to here there we go it slides
116:21 - everything to the left yeah and let's
116:24 - just try some other things slide 4 0 2 4
116:34 - 4 2 yes that's good everything's going
116:36 - that way which is fine I don't care
116:38 - which direction that's fine with me
116:40 - so now I should say every time I press a
116:47 - key I'm just using the spacebar right
116:50 - now if key key equals space what I want
116:55 - to do
116:55 - is loop over loop over the grid and say
117:03 - grid index I equals slide grid index I
117:07 - right so this is sliding them over for
117:11 - each one oh they're going up so that's
117:18 - great so after I do that right each time
117:20 - after each time I play play the game
117:23 - like this is one this is one move so to
117:25 - speak then I should add a number again
117:29 - add another two or a four randomly great
117:36 - this appears to be doing what it's
117:38 - supposed to be doing be nice to have an
117:40 - animation but there is no animation now
117:42 - there's no more room left that's fine
117:43 - okay okay all right so now I need to
117:46 - combine so just like I have this slide
117:49 - function now I need a combined function
117:56 - so assuming that I've slid everything
118:00 - one way or the other what I need to do
118:03 - is if there are two that match starting
118:08 - from the back they should be combined
118:11 - into one number all right I know this is
118:15 - where I ran into a problem before
118:16 - someone's I'm gonna need somebody of
118:17 - watching this live to help me
118:19 - oh if nothing moves no tiles should be
118:22 - added okay okay I gotta get to that
118:25 - later yes so that's a part of the game
118:27 - we don't if if you're done if nothing
118:29 - can move you can't add another tile but
118:31 - I will I will remind me I need to fix
118:33 - that I need to fix that at some point so
118:35 - let's do combine so if I have a row what
118:39 - I want to do can I use reduce filter
118:43 - then I could loop through it for sure so
118:46 - let's let me try doing this very
118:47 - manually right now let me Luke
118:50 - from the back right let me loop from the
118:58 - back all the way down and first I want
119:02 - to say and I actually just want to go to
119:05 - here because I want to say
119:11 - a is the this one right the current one
119:15 - that I'm at like the last one and B is
119:19 - Rho I minus one and if a equals B then
119:29 - Rho I should equal a plus B and Rho I
119:33 - minus 1 should equal zero and then I
119:39 - shouldn't do any more so I'm gonna say
119:40 - break so this is again I'm gonna need to
119:46 - do more but this and this probably way
119:47 - for me to write this shorter but I'm
119:49 - just gonna go from the back and check
119:52 - the last two like what am i doing
119:54 - whoops I'm in the wrong keyboard I'm
119:57 - gonna check so if this is so we fit got
120:02 - I've already slid everything so if it's
120:04 - like this I'm gonna check this one
120:06 - versus this one if they're the same this
120:08 - becomes 0 and this becomes 4 now if this
120:13 - were here I still have to do more I've
120:15 - got a slide again but let's see here now
120:21 - I should be able to now I should say
120:27 - where I want to slide the grid oh and so
120:31 - hold on oh I'm actually operating on the
120:35 - row itself so in this case I don't need
120:41 - to I'm up this is a little bit this is a
120:43 - little awkward I'm making a new array to
120:45 - send back and here I'm operating on that
120:47 - array so this is a bit awkward but I'm
120:48 - just gonna remember that so I'm just
120:51 - gonna write in comments operating on
120:53 - array itself making a new array and so
121:00 - now I'm gonna say after I slide I'm
121:03 - gonna combine so I'm gonna combine let's
121:07 - see if this works okay I forget what I
121:11 - just press spacebar and everything goes
121:13 - up oh boy error error cannot read
121:16 - properties 0 of undefined at add number
121:18 - sketchy-ass line 20
121:22 - sketch day s line 20 if grid o had
121:28 - number oh oh I messed up something Oh
121:32 - because silly me silly me if I am not
121:39 - returning her this is terrible so this
121:41 - one returns a new array this one acts on
121:43 - it oh I got it gotta clean that up later
121:45 - that's not good I don't like that okay
121:47 - now things move up things move up things
121:51 - move up oh those should combine those
121:53 - should combine to be an eight nope nope
121:57 - but those combine to be an eight Oh
121:59 - something is wrong oh I must be looking
122:00 - the wrong direction I must be actually
122:02 - because I'm doing stuff backwards so
122:04 - actually that's fine I'm doing it
122:08 - backwards I could really think about
122:09 - this but I have a feeling that I just
122:15 - wrote the code backwards which is fine I
122:17 - can go backwards let's do this now those
122:24 - should combine to be a four ooh oh no
122:27 - this is all wrong all wrong all wrong
122:30 - all wrong
122:40 - oh just return the array then who cares
122:46 - yeah let me go back to that that's yo
122:54 - this is gonna be a backup moment cuz I
122:59 - instead of doing this so let me actually
123:05 - just say return the row even though it's
123:09 - the same array I can return a reference
123:11 - to itself and that's going to fix it now
123:15 - here's the thing this is I don't think
123:17 - this is working so those two should
123:23 - combine to be a four they're not at the
123:25 - moment and something weird is going on
123:27 - so let me look at my code again I plus
123:31 - one no okay hold on if I'm going through
123:39 - it backwards I started three and I want
123:42 - to look at three and two then I want to
123:44 - look at two
123:55 - mm yeah this is right so hold on okay
124:07 - these move up so hold on okay I need to
124:13 - I don't know why I'm being crazier I
124:15 - need to I need to do some tests here so
124:22 - this is actually my algorithm is correct
124:24 - according to this I think I have not
124:29 - been very thoughtful right my algorithm
124:37 - is doing what I wanted to do the
124:39 - combined algorithm is doing this
124:40 - correctly so why is this not working
124:43 - it's probably because I am drawing this
124:51 - not matching the way that I'm actually
124:54 - thinking of it so how can I think about
124:58 - that like what if am i actually like
125:09 - hold on
125:17 - mmm yeah I'm reading the chat I plus one
125:21 - of that bathroom before a 2048 like this
125:36 - is correct so am I going backwards and
125:42 - what I actually need is your combination
125:51 - is backwards till you set the wrong one
125:53 - to zero
125:57 - really oh because I have it because I'm
125:59 - reversed switch the rows line six
126:04 - everyone's saying that the same thing
126:05 - which I think you're right okay
126:06 - all right hold on let me let me four let
126:10 - me try to make some continuity formats
126:12 - yeah let me check
126:16 - let me let me do something smart here
126:18 - hold on let me do something smart here
126:20 - and check my actual combined function
126:26 - whoops
126:34 - sorry everybody let me do something
126:37 - smart here and try to actually check my
126:41 - combined function like this should give
126:44 - me that's correct that's correct so
126:51 - these are correct so I'm doing something
126:53 - goofy here in the way that I'm rendering
126:54 - it and I think because I have everything
126:56 - flipped thank you to the chat for
126:58 - telling me this I think this should be
127:00 - zero and this should be a plus B let's
127:02 - see if that fixes it okay I hit the
127:04 - spacebar whoops and things move up and
127:08 - things move up and things look oh come
127:10 - on give me something to combine so why
127:14 - is it not combining it's combining in
127:18 - the wrong first combine then slide your
127:25 - combination is backwards still you set
127:28 - the wrong one two zero zero four two two
127:30 - should be zero four four zero
127:42 - I should do a matrix you were right just
127:45 - slide it then combined and slide oh it's
127:51 - working I just need to slide it again no
127:55 - because those these four and four should
127:57 - combine so everything's moving up but it
128:01 - did then that's so weird I'm only
128:08 - checking the adjacent spaces combined
128:10 - combined only if elements are one next
128:12 - to each other I know now this works I
128:18 - just think that I'm do the combined
128:23 - tests in the console again okay
128:26 - combine 0 for 2 - ah right that's why I
128:44 - had it this way originally now combine
128:51 - is that's what I want it to be because
128:54 - these two should combine right and then
128:56 - I do slide again and this comes over
128:58 - right then I want to do slide of 0 4 0 4
129:06 - oh it's going the other way
129:10 - slide goes the other way slide goes the
129:18 - other way combined goes the other way ah
129:20 - ok Mathieu back all the way up
129:35 - yeah okay alright alright let me be
129:45 - tried let me try to be smart about this
129:47 - here and let's try to do some work in
129:49 - the console so if I say combined 0 4 2 2
129:57 - that's right
129:58 - 0 4 2 2 those two get combined now I
130:01 - need to slide that slide zero four zero
130:05 - four and that's lit the other way so I'm
130:11 - combining the opposite way that I'm
130:13 - sliding which is definitely a problem
130:16 - so maybe what I should do is just slide
130:20 - the other way around which would be let
130:28 - me think about this I could just reverse
130:31 - it right but that's probably a bad idea
130:35 - what I should just do is right I could
130:40 - no no no I can just say zeros can cat
130:45 - array right I could just put the zeros
130:50 - on the other side yeah that should do it
130:51 - right so now if I say combine 0 4 2 2 0
130:56 - 4 0 4 then slide 0 0 4 4 ok this seems
131:00 - right now so now hit spacebar 8 yep
131:05 - they've slid down 2 4 2 2 2 4
131:13 - yep yep okay this is working now okay
131:17 - now I'm sure there's going to be lots of
131:19 - scenarios that aren't correct so what I
131:21 - need to do also is after I combine where
131:25 - we need to slide again right because and
131:32 - so really what I what I kind of want is
131:34 - I need a I operate row row equals
131:42 - operate on the row so let me make this
131:44 - one function
131:48 - where I get an array and I say Rho
131:56 - equals slide Rho equals combined Rho
132:00 - equals slide and then return row so I
132:04 - just want to do this in a function I'm
132:06 - in some ways this is kind of silly and
132:08 - what I'm doing here but I just want this
132:10 - to be a separate function so I can call
132:12 - it myself
132:13 - so now up sketched out 48 returned I
132:17 - forgot my R okay so now what I want to
132:21 - do is I want to say operate on 0 0 2 2
132:27 - that should now be 0 0 0 4 operate is
132:32 - not defined I didn't refresh I is not
132:37 - defined Oh silly me
132:42 - these are no longer grid index i these
132:46 - are row okay we're we're moving along
132:49 - here operate all right that's good okay
132:53 - operate that's right
132:57 - now here's what's going to be wrong
132:59 - right this now should be 0 0 4 4 is that
133:06 - correct so I need to do it one more time
133:11 - but I need to be careful because this
133:17 - should not go to 8 so how do I consider
133:21 - that
133:33 - so how do I consider those two as
133:36 - different scenarios I mean certainly
133:39 - right if I just run this again it can
133:44 - only happen twice because there's only
133:45 - four spots but this isn't going to be
133:48 - correct because like this oh I didn't
133:55 - did i refresh this gave me the correct
134:00 - response but this is going to give me
134:04 - the incorrect this should be zero to
134:06 - four
134:07 - this would be zero to four four and I
134:11 - got zero to zero eight because the four
134:13 - and the four combined me I am so me is
134:23 - telling me that this should be zero four
134:27 - zero four I don't think so wouldn't it
134:29 - it would all slide together it should be
134:35 - zero four zero four well that's easier
134:41 - how do I let's look at this game for a
134:45 - second
135:02 - yeah
135:10 - no zero zero zero four okay good sorry
135:21 - okay so this is correct but how do I
135:24 - protect I need to do combine yazi row
135:36 - zero zero four okay so I suppose what I
135:43 - could do is the second time I do combine
135:46 - alright the second time I do combine I
135:49 - could start from the second-to-last spot
135:53 - right just start from the second-to-last
135:55 - spot or do combined twice before sliding
136:01 - that's an interesting idea
136:03 - well this actually do the trick so let's
136:07 - say operate two four two two zero two
136:12 - four four that is correct
136:14 - Oh interesting
136:18 - can anybody let me think of I think that
136:20 - actually worked
136:21 - are there any other scenarios that
136:23 - wouldn't work like operate zero two two
136:29 - four let's try this one this should be
136:36 - zero zero zero four oh that's not right
136:39 - oh is that or is this correct this is
136:42 - this wouldn't work right this should
136:44 - give me zero zero four four right it is
136:47 - zero zero four four so the break so
136:59 - actually am I just being silly and I
137:01 - just need to do combine once but get rid
137:03 - of the break and so let me think about
137:06 - this
137:06 - look it's look at the combine if I get
137:12 - rid of the break ah so I think here's
137:15 - what I could do so let's this is I think
137:18 - this is it oops this is what I think I
137:20 - can do
137:25 - let's say I have this is the case that's
137:29 - a little bit weird
137:30 - I have zero for two - if I do this and
137:43 - now try to combine again and then slide
137:47 - these won't go together but and if I do
137:52 - this then I this should give me zero
138:03 - four zero four and then slide they will
138:06 - go together so I think I'm thinking this
138:08 - through I think that I can actually in
138:12 - you I it get rid of the break and just
138:17 - come back all combined once and call
138:19 - slide again after that's correct that's
138:27 - correct
138:29 - blows another one of my scenarios and
138:33 - that is correct
138:38 - the break is so silly I thought I was
138:40 - being smart by getting out of there but
138:43 - actually I just need to combine
138:44 - everything and then slide everything
138:47 - hahahaha okay wonderful
138:49 - I I think we're just about kind of done
138:52 - right so now I need to oops uh-oh what
138:56 - did I do
138:56 - rose not to find a key pressed okay wait
139:01 - wait I messed something up row o equals
139:05 - operate Oh a little bit of a operate on
139:08 - grid index I so this gets passed in okay
139:15 - hey welcome this isn't what did I do now
139:20 - slide combine slide
139:27 - [Music]
139:31 - wait what just happened oh to be great
139:46 - hold on okay okay hold on hold on let's
139:56 - actually look at it now oh yeah I messed
140:02 - something up
140:03 - where's that line 38 oh look at silly me
140:09 - these are grid index I and down here I'm
140:15 - passing it into row so they're row here
140:17 - very silly thing that I've done here
140:19 - okay so now I hit space yep
140:24 - this to me is the behavior of the game
140:27 - now here's the thing yeah here's the
140:31 - thing
140:31 - I shouldn't be adding numbers if nothing
140:34 - moved so one thing I have to check is if
140:37 - anything moved so one thing that I might
140:40 - do is right here I might create what I
140:47 - what I think I'd like to do is let past
140:51 - equal copy grid so let me make a
140:54 - function copy grid we're past equals
141:04 - this is very silly but I'm just gonna do
141:07 - this past equals the new a new
141:14 - two-dimensional array and then our copy
141:18 - new no no grid extra I'm gonna call it
141:24 - extra extra equals a new copy then I'm
141:27 - just going to four I'm going to use my
141:29 - nested loop which I have somewhere else
141:34 - I'm sure I could just you slice or
141:37 - something but I just don't have it
141:39 - within me right now 2048 at
141:44 - i J equals grid i J okay so I'm just and
141:50 - then I'm going to say return extra so
141:52 - that's just a total copy of the
141:53 - two-dimensional array because
142:09 - sorry spaced out for a second because my
142:11 - phone was buzzing someone's telling me
142:21 - that 2 to 4 2 is wrong
142:31 - that's correct isn't that what it would
142:34 - do the game 2048 it's gonna combine
142:40 - those twos and slide everything over
142:49 - yeah okay
143:03 - where am I looking for I have too much
143:05 - code oh yeah okay oh so so past so past
143:15 - is past is now a copy and now this is
143:19 - the new grid so I can check to see if
143:21 - anything changed so I can say changed
143:27 - equals compare copy and grid okay so I'm
143:31 - gonna write another function this is all
143:33 - very silly but called compare where I
143:36 - have two different matrices and I'm
143:41 - gonna say if a does not equal to be
143:50 - returned something changed return true
143:55 - so true means something change I'm gonna
143:57 - check every spot as soon as something's
143:58 - not equal something moved and then if I
144:01 - get all the way to the end I'll just
144:03 - return false so now I should only add a
144:10 - number if changed now add a number okay
144:15 - here we go oops
144:17 - so p5 doesn't like that I call it
144:19 - something copy so I'm gonna call this
144:22 - copy grid and I'm gonna do this so now I
144:28 - should be able to say whoops OOP cannot
144:38 - read property zero of undefined at
144:40 - compare sketch dot J's line 37 so a and
144:50 - B in compare oh and this is called this
144:56 - should be passed this is why shouldn't
144:59 - use the word copy this is passed that
145:01 - should be passed oh yeah no nothing's
145:06 - moving so I don't get a new number
145:08 - nothing's moving so I don't get a new
145:10 - number got a new number got a new number
145:14 - got a new number got a new number
145:16 - nothing's moving got a number all right
145:21 - so ends part 1 of 2048 where I have the
145:26 - entire game mechanic but only for going
145:28 - in one direction one direction I'm gonna
145:32 - take a short break and have a part two
145:34 - to the 2048 challenge where I deal with
145:36 - the rotation of the matrix I and I hope
145:39 - you enjoy watching that part and then
145:41 - the game will be finished
145:47 - ok what time is it it's 4:50 I don't
145:51 - have a lot of time left people I'm
146:02 - pretty sure this is correct I now have
146:06 - the entire correct game mechanic - the
146:09 - rotation yeah can anybody give me a
146:17 - combination that they think will not
146:22 - work for example that's correct
146:35 - that is correct
146:40 - that is correct two two two two two two
146:47 - four eight two two four eight that is
146:53 - correct
146:53 - so I'm pretty confident four four eight
146:57 - sixteen I think I'm pretty good
147:04 - yep that's correct also
147:08 - - eight eight - all right let's try that
147:11 - one
147:11 - - p8 - that's correct
147:18 - that is correct all right I've got it
147:24 - all right everybody - 0 0 - I'm pretty
147:28 - sure that's gonna worry about mints the
147:29 - last one I'm gonna do that is correct
147:32 - also all right I think we're in good
147:35 - shape here now so
147:47 - I can do this welcome back I'm here
147:56 - trying to this is like the most painful
147:59 - time in my entire life and I can't
148:01 - believe that you're watching this but
148:02 - you are I'm trying to make the game 2048
148:04 - and I have gotten so far as to make the
148:08 - game work but only in what's the One
148:11 - Direction song somebody tell me only in
148:13 - one direction which is down so if I hit
148:15 - the spacebar everything will move down
148:17 - now it would be really nice for you to
148:19 - be able to see an animation to have a
148:21 - sense that what it's really doing and
148:25 - then we haven't seen anything combined
148:27 - yet let's come on get something to
148:28 - combine there we go but you can see that
148:30 - everything's coming down and the numbers
148:31 - are combining when they're equal this is
148:33 - exactly like how the game 2048 plays of
148:36 - course this is much nicer to have a nice
148:38 - animation and different colors and all
148:39 - that sort of stuff but what I need to do
148:42 - is I need to be able to go in any
148:43 - direction so let's at least double check
148:45 - here and keep rest that I can say I
148:47 - think if key equals up arrow let's let
148:56 - me look in I can't remember what the
148:58 - constants are np5 up arrow is something
149:02 - yeah it's 38 so and what if I say
149:07 - console dot log key ah
149:15 - so I think I probably want the key code
149:17 - because the key it's giving me it's not
149:20 - giving me the number I think I want I
149:22 - think I want this yeah so key code is
149:26 - what I want I want key code equal to up
149:28 - arrow and I can use a switch statement
149:31 - I'm not going to down arrow so down is
149:38 - what it's doing already let's just try
149:40 - to get up and down so if key code equals
149:44 - down arrow do nothing to nothing
149:50 - if key code equals up arrow what I need
149:55 - to do is just flip everything right so I
149:59 - can go through and I can
150:01 - a flip grid equals flip grid right
150:07 - I just want to flip the grid so I can
150:10 - write a function called flip for any
150:14 - two-dimensional array then I'm gonna go
150:16 - through all four rows and I'm just going
150:21 - to say grid index I if I say dot reverse
150:26 - on an array does it return in a new
150:29 - array let a equal one two three four one
150:34 - two three four a dot reverse so it
150:40 - actually reverses the array so it
150:42 - operates on that same array so I could
150:44 - say grid index I reverse I can say let
150:54 - flipped equal false flipped equals true
151:00 - so I want to flip it then I want to I'm
151:11 - just gonna let I'm gonna sue Mike only
151:12 - gonna press the arrow keys and then I'm
151:17 - going to flip it again so and I do I
151:27 - wonder I don't need to return it I just
151:28 - need to flip it so I don't need to so
151:30 - I'm gonna flip the grid and then if it
151:34 - was flipped flip it back so this should
151:40 - be now this is just like for up and down
151:42 - this should work for up and down let's
151:45 - see if this works
151:46 - little little crazy thing I've done here
151:48 - down whoops down okay down let's go up
151:53 - up down up down down up down down up
152:05 - down up this is totally working down up
152:09 - down up down and eventually the games
152:13 - going to be over because I don't have
152:14 - anymore
152:15 - okay so that works whoo so now I need
152:19 - else/if key code equals right arrow now
152:26 - I need to rotate the grid grid equals
152:31 - rotate the grid so I need to rotate it
152:35 - let's rotate the grid I think I want a
152:38 - new array I think I want a new so I'm by
152:43 - the way I want a function this is very
152:45 - silly I want to have a function and put
152:46 - it all the way at the top called blank
152:49 - grid and what that does is it just
152:52 - returns this because I need to do this
152:56 - quite a bit just give me a blank one so
152:58 - now I can say grid equals blank grid
153:02 - yeah I love that and then somewhere else
153:04 - where I did the crazy copy thing extra
153:07 - equals blank grid so that's gonna be
153:09 - much nicer because what I want to do
153:11 - when I rotate it and I definitely I need
153:14 - to call it rotate grid and I should
153:16 - probably be consistent here it's a flip
153:18 - grid with my naming flipgrid flip grid
153:25 - and I definitely should break this up
153:26 - into different files and maybe organize
153:27 - my code boy I got a refactor this stuff
153:29 - flipgrid change this to flip grid now
153:32 - I'm going to write one called
153:35 - rotate grid now this shouldn't be too
153:41 - hard I should just do a nice little
153:43 - nested loop and I should get I should
153:50 - create I should create a new grid is a
153:54 - blank grid and then in the new grids I J
154:01 - I take the old grids J I and now so what
154:13 - this would do is now I want to rotate
154:17 - the grid and then I'm going to have to
154:21 - unrotated get I've just rotated a few
154:26 - more times
154:28 - so right so let's think so so I'm gonna
154:30 - have a variable called let rotate equal
154:33 - false rotated so this is rotated equals
154:38 - true then what I'm gonna do if rotated
154:43 - then what should I do
154:45 - I just want to rotate it through a few
154:49 - more times right rotate it once twice
154:52 - one two three only three more times I'll
154:54 - get back right
154:57 - that's brilliant coding right there
155:00 - let's see if this works on this so first
155:02 - of all let's just say I have a let a
155:08 - equal new grid a blank grid whoops okay
155:18 - so a is this and I could say console dot
155:20 - table a so you can see that's what it
155:25 - looks like and I'm gonna say I want it
155:31 - actually let's just do this so what am I
155:34 - looking for at grid so console table
155:39 - grid maybe I shouldn't bother trying
155:44 - this debugging I should just do it then
155:46 - I'm gonna say rotate grid grid and
155:51 - console dot table that
155:58 - I hold on
156:11 - all right um okay hold on let's see what
156:16 - happens not to let you edit that whole
156:19 - part out let's see what happens so I'm
156:22 - gonna hit up whoops ah let me just do
156:27 - the up and the down still clear this
156:29 - what is going on hold on up why
156:42 - oh look Lee's what I was last typing if
156:48 - I had clear just hold on fighting with
156:51 - the computer for no reason all right
156:53 - let's give this a try up down up down
156:56 - those work what did I express eight
156:57 - right arrow okay got an error cannot set
157:00 - property undefined at rotate grid sketch
157:03 - js9 71 rotate grid new grid is a blank
157:10 - grid i J equals grid J oh look at this
157:14 - that's really bad
157:16 - that's really bad J okay let's try this
157:21 - again down up down up right okay got
157:27 - another error cannot read property
157:30 - undefined a copy grid sketch digest line
157:32 - 53 copy grid extra equals blank grid is
157:41 - my blank grid function not working
157:43 - Oh return no that looks good copy grid
157:48 - grid
157:54 - catch line 53
158:05 - so what did I do here hold on a sec care
158:16 - into this
158:23 - can I write property 0 I'm going to
158:27 - sketch the chest line 53 what did I miss
158:37 - here
158:45 - let's look at this ah
158:51 - grid is nothing here where am i calling
158:55 - copy grid where I'm sending it nothing
158:58 - past equals copy grid grid that's the
159:02 - only place ah rotate grid is messing
159:07 - something off rotate grid does not
159:09 - return the new grid there we go return
159:14 - the new grid rotate grid thank you very
159:16 - much ha this is totally working up down
159:28 - up right now I can't go to the left so
159:31 - now I need this is gonna be this is no
159:34 - problem that watch this this is total
159:37 - insanity but else if key code equals
159:42 - left arrow now grid equals rotate grid
159:50 - grid I want to rotate it and then flip
159:59 - flip grid grid equals flip grid grid and
160:05 - you know what I should just always
160:06 - return I should always return a
160:09 - reference like even though like because
160:12 - it's just too confusing to keep track of
160:14 - which functions do which so I'm gonna go
160:16 - back to my flip crit function scrolls
160:22 - girl's girl and just say return grid so
160:27 - now if I'm going to the left I could
160:30 - rotate it then flip it then and grid
160:35 - equals flip and so here not only is it
160:38 - rotated but it's also flipped so then I
160:44 - can flip it back and rotate it three
160:46 - times and I should be good now here's
160:48 - the thing I should only be doing this if
160:52 - I press one of these keys so I'm gonna
160:55 - make a variable called played equals
160:58 - fall
161:02 - and I'm gonna say played equals true and
161:06 - again this can really be refactored oh
161:10 - really
161:11 - I should do with part three of this to
161:12 - refactor this probably but all of all
161:15 - four of these keys I am playing and so
161:19 - now if I have played then I can do all
161:25 - this crazy nonsense if it's changed at a
161:28 - number otherwise console dot log game
161:32 - well it's not game over because I could
161:34 - it's only if I have no moves left so huh
161:37 - I'll get to that a little bit okay let's
161:40 - see what's the chance oh oh yeah I could
161:49 - use else played is true right I can
161:55 - assume that I've played but in all other
162:00 - kids I can at least make this a little
162:02 - better in all other cases right if it's
162:05 - some other key plate is false so I'm
162:09 - gonna assume that I've played and now
162:11 - let's see get down whoops down okay down
162:19 - down is combining to the right to the
162:23 - right to the right to the left to the
162:27 - left up to the right to the right to the
162:31 - left down to the right down whoops I
162:34 - don't know what I just did to the right
162:35 - I I'm pretty sure this is actually
162:39 - working it actually is doing what it's
162:42 - supposed to do
162:44 - and hooray great okay so this is the
162:50 - functionality of the game there's gonna
162:52 - be a part three this is three three
162:54 - parts part three I'll add the score and
162:58 - determine if there's no moves left okay
163:00 - so that's what I need to do and I think
163:03 - that what I can do is maybe I'll it bar
163:06 - three I might refactor a few things I'm
163:08 - getting some good suggestions from the
163:09 - chat okay all right thanks for watching
163:11 - this so far Wow
163:13 - think I might have made 2048 by accident
163:14 - somehow okay that's a transpose not a
163:21 - rotation yeah
163:34 - it's all switch it to transpose then
163:38 - what do I need to do how does the score
163:39 - work in 2048 make the 64 okay let me
163:54 - actually get to a point where I can't
163:55 - make any more moves see if I get an
163:59 - error
164:25 - whoa just happen there
164:35 - yeah the font size is gonna be a problem
164:37 - once they get to 128 I think all right I
164:45 - just want to see can i I want to get
164:47 - stuck I think it's giving me I get a new
164:56 - number every time I move right let me
165:00 - try to play this poorly
165:24 - oh my got 128 yeah I think this is
165:30 - corrected so without the animation it's
165:32 - like really weird can anybody see any
165:38 - mistakes you can't tell what I'm
165:39 - pressing is the problem I want to get
165:44 - stuck but is it should I be able to get
165:51 - you can get stuck before the board fills
165:55 - up that's what I don't understand
165:56 - I seem to only be able to get stuck if
166:00 - [Music]
166:02 - yeah the newest number newest number
166:04 - could be a new color that's a good idea
166:12 - okay every all right so so the two
166:19 - things I need to add let me just play
166:27 - the real game here for a second like
166:30 - poorly no yeah I guess you're only gonna
166:42 - lose when you lose the whole board is
166:44 - filled up right because otherwise I
166:46 - could always move up and down okay so I
166:49 - think I think it's playing correctly
166:51 - yeah game over so let's look at this
166:54 - okay let me find the score
167:07 - the user score starts as Iran is
167:10 - incremented whenever two tiles combined
167:11 - by the value of the new tile okay
167:13 - the game is won when a tile the value
167:16 - 2048 appears on the board when the
167:25 - player has no legal moves there are no
167:27 - empty spaces and no adjacent tiles with
167:29 - the same value okay so this is should be
167:34 - easy to figure out so okay so let's make
167:38 - a list of some things to add in part 3
167:42 - the score is gonna be easy
167:44 - the game being over it shouldn't be too
167:46 - hard
167:48 - adding a fill I think I'm not gonna do
167:50 - the animations because that's not I
167:53 - could come back and do that another day
167:55 - but I'm happy to add the color I need to
168:00 - deal with the how does the real game
168:01 - deal with the font so I need to deal
168:03 - with the font size so the font size
168:05 - should be dynamic okay I am so exhausted
168:13 - time 5:15 I got it goes really soon okay
168:19 - part three of my 2048 coding challenge
168:24 - so what am I trying what do I got here I
168:27 - actually have it's very hard to follow
168:28 - without animations and not maybe I'll
168:30 - come back and add animations in another
168:32 - part but I have the full game mechanic
168:34 - available to play right now so the
168:36 - things that I want to add in this video
168:38 - are number one score number two a test
168:42 - to see if I've run out of moves to say
168:44 - game over and number three I want to be
168:47 - more thoughtful like if I could ever
168:48 - play it well enough to get to 128 you
168:51 - would see that it wouldn't fit so I'm
168:56 - just like randomly making moves right
168:58 - now so I need to deal with the font size
169:00 - to make it more dynamic so let's try to
169:02 - do some of that stuff so according to
169:04 - the game rules I'm going to say let
169:07 - score equal zero
169:09 - whenever you combine two tiles your
169:13 - score goes up by the value of that
169:14 - combined amount so we can say here
169:19 - wherever I have my combined
169:21 - function and again this would be so
169:24 - helpful to organize this so right here
169:28 - whenever I combine if a and B I can say
169:30 - score plus equal a plus B all right and
169:34 - why don't I say row index I just for the
169:37 - sake of so I added those to the score
169:39 - goes up by that much now let me just
169:42 - really really quickly in the body add a
169:45 - paragraph I D score and again I'm not
169:49 - going to be this is a very very early
169:52 - crude way of doing it but I'm just going
169:54 - to in using the p5 Dom library in the
169:58 - draw function I'm going to say sketch
170:01 - I'm going to say select score dot HTML
170:06 - score so now should see there's the
170:10 - score and let's um let's just go and say
170:14 - something really silly like style body
170:20 - text size set where's the font size text
170:24 - size 32 point just so it's a little
170:27 - bigger and then close style that'll CSS
170:35 - this is me adding CSS to the code very
170:38 - poorly cuz it's not the font size of
170:41 - font size no how come I don't know how
170:51 - come I don't know CSS anymore
170:53 - Oh Pete oh there's no coal in here there
171:00 - we go oh look at that let's just do P
171:02 - hold on this is what always happens to
171:06 - me Dom manipulation horror just ignore
171:14 - me just pretend I'm not even here
171:16 - don't watch me okay let's make that
171:21 - score a little bit bigger and I'm just
171:25 - gonna say style just gonna put it in
171:26 - line style here style equals font size
171:32 - 32 point
171:35 - that should do the trick there we go and
171:38 - now okay so now I should have the score
171:43 - I'm pretty sure this is working
171:45 - correctly as it's supposed to so now I
171:47 - have my score all right boy am i doing
171:50 - great so I added a score that's
171:52 - wonderful now I need to add a check to
171:55 - see if I finished playing the game so
171:59 - how do I do that so in the main code and
172:03 - by the way this is this is the other
172:04 - thing that's terrible I don't want to
172:06 - have a draw loop here I should really
172:08 - just be I should be update canvas I
172:13 - should in setup oh look at all this code
172:18 - this is horrific I should say no loop
172:21 - and again I'm gonna need to animate
172:24 - later so I'm gonna need the draw loop
172:26 - back but just for right now
172:28 - in keep rest where I say if the game was
172:33 - played I'm gonna say update canvas so
172:39 - now and I should to it at least once at
172:43 - the beginning update canvas so now at
172:48 - least
172:48 - performance-wise I'm not like spitting
172:51 - the browser sprinting that using the
172:53 - processor over and over again to redraw
172:54 - the same thing okay so now I need to
172:56 - check when I've played I need to right
173:01 - here I need to sue is game over so I'm
173:07 - going to write a function
173:08 - I'll just going to put it on the top
173:09 - right now function is game actually we
173:16 - kind of know here's the thing the game
173:20 - is over when
173:27 - if the board is full and nothing can be
173:32 - combined so actually all I need to do is
173:37 - see if the game is over if there are no
173:46 - if the book
174:00 - the game is over if there are no numbers
174:04 - next to each other that are identical
174:06 - and the board is full so there's no
174:08 - zeros so I can write a function I will
174:11 - write this function is game function is
174:15 - game over and I'm gonna say I'm gonna do
174:19 - a loop I'm gonna get my double loop
174:22 - which I have everywhere and for each
174:25 - spot I'm gonna I'm gonna assume game
174:34 - over is true and I'm gonna for each spot
174:38 - if the grid I J equals zero then the
174:47 - game is not over return false so if
174:51 - there's a zero the game's not over
174:52 - because I can move if grid I J equals
175:03 - grid I J plus 1 so I could check
175:08 - everything to the right and just go 0
175:12 - through 3 and I'm gonna have to check
175:16 - the four for a zero I think if it's
175:21 - equal then something can be combined
175:23 - return false if grid I J equals grid I
175:34 - plus 1j j then also the game is not over
175:40 - so the game is not over and really so
175:46 - the game is not over if there's any
175:48 - zeros or and so I'm gonna check every
175:55 - single spot but I'm only going to check
175:58 - the edges if I is not equal to three and
176:04 - there's two that are the same or if J is
176:08 - not equal to three and they're to the
176:10 - same so this should tell me if I get
176:13 - through
176:13 - every single spot and it's not equal to
176:17 - what's to the right of it or to blow it
176:19 - or it's not a zero then the game is over
176:22 - and so if I get to the end I'm going to
176:25 - say return true I don't actually need
176:27 - this boolean variable at the beginning
176:29 - this is my ridiculous function now to
176:31 - determine if the game is over and where
176:34 - did I check it here so I'm gonna say let
176:37 - game over equals is game over and if
176:43 - game over console dot log game over okay
176:49 - let's see if this works up sketched a
176:56 - test line 13 has an error if J oh I'm
177:01 - missing a curly bracket somewhere I'm an
177:06 - extra parentheses there we go okay here
177:09 - we go let's take this again
177:12 - line 21 I have an extra bracket here now
177:16 - okay let's try to make the game over I'm
177:21 - just gonna rely on my random whatever
177:35 - the game was not over it's got to be
177:39 - over eventually there we go
177:46 - uncut type error cannot read sketch such
177:49 - as line 13 property 0 vinum undefined so
177:52 - I got into a funny place here so I just
177:55 - now the game is over but I got an error
177:58 - when the game ended if J is oh whoops
178:04 - look at this I got to be checking J here
178:06 - and I here I did this in like a weird
178:09 - order I want to do I first and J second
178:11 - so that was a mistake
178:13 - what I should I should build in
178:15 - something to test it without having to
178:17 - like go crazy playing it but you know
178:22 - eventually I get to the game over game
178:27 - over okay it actually tells me the game
178:31 - is over because there are no more moves
178:34 - left okay now we need to let's add a
178:36 - little bit of color and change the font
178:37 - size so where do I where do I draw the
178:42 - text here
178:44 - so text size should be actually a
178:47 - function I'm going to map the value
178:52 - which goes between 0 and 248 and when
178:58 - it's 248 it should be 16 point and when
179:02 - it's 0 it should be 64 so it's bigger
179:07 - maybe it's like 16 point when it's 2048
179:10 - so let's try this why is the font size
179:16 - not changing is it follow its font size
179:21 - not text okay
179:22 - oh and else has to be this no its text
179:25 - size but I got to use the variable
179:33 - is it font size I don't know apparently
179:35 - I don't know P five font size is not a
179:37 - function font size is not a function the
179:43 - value map the value text size how come
179:51 - that's not working
179:58 - what did I do text sighs losing my mind
180:05 - here
180:14 - value goes between zero and 2048 when at
180:17 - zero at 64
180:33 - yeah I know I need to like but it should
180:38 - be slightly different
180:40 - oh it is slightly different it's just so
180:44 - yeah yeah yeah no no that's kind of what
180:47 - I want can I get a bigger number
181:04 - hmm oh I need to choose my scaling is
181:08 - crazy
181:10 - no wonder okay I need to use it's just
181:13 - like it's barely changing as I'm going
181:15 - from zero to 24 okay okay so this was
181:22 - kind of a nice idea but now I'm
181:23 - realizing that basically I really need
181:26 - to shrink it exponentially as it goes
181:29 - down so I really should take like the
181:32 - log of the value maybe I could and then
181:36 - that'll go from zero between the log of
181:39 - zero and 2048 will this do the trick for
181:42 - me to dip logarithmic scale yeah you can
181:49 - see it's getting but ultimately yeah so
181:52 - this is better using logarithmic scales
181:54 - a little bit nonsensical because really
181:56 - I should just I have a better idea
181:58 - like let's get rid of this for a second
182:00 - let's just let's just convert it into a
182:04 - string so this is be making a string
182:08 - from the value and then I want to get
182:14 - the length of that string and then the
182:20 - font size text size should be the I can
182:25 - make an array right sizes equals okay so
182:32 - if it's the if it's one I wanted to be
182:35 - 64 if it's two I want it to be 64 if
182:38 - it's three maybe 32 and if it's for 1024
182:42 - or 248 let's make it 16 so now I just
182:46 - want to say sizes just based on that
182:50 - length so I could just see how long is
182:52 - the string and then pull one of these
182:54 - from the array based on the length is
182:56 - now an index into that array and that
182:57 - should give me up to play it for a
183:02 - little yeah 16 which is 200 this it
183:08 - would be 0 so length plus or minus 1
183:12 - apologies for that
183:14 - so now if I get to 3
183:18 - if oh I have to get to ten you're gonna
183:21 - have to trust me on this this is gonna
183:26 - require a lot of editing so I'll come up
183:28 - back in a minute
183:32 - play this
183:41 - I actually I'm not even paying attention
183:43 - to like how I'm playing it I'm just I've
183:48 - gotta get those 264 there we go
183:59 - 128 okay oh I'm back because I finally
184:04 - got a 128 and you can see the 128 is
184:06 - smaller oh boy you could do so many
184:09 - better ways of doing that okay so now
184:12 - you know obviously I couldn't map a
184:13 - color to the background I could do
184:15 - animations but this is really it I now
184:18 - have essentially the full game I have a
184:20 - mechanism for trying to figure out you
184:23 - know I could map a color to each number
184:26 - easily by having some kind of lookup
184:28 - table but I it's some point maybe I'll
184:30 - come back and try to animate this but
184:31 - please please make your own version of
184:33 - this improve it this is the end of this
184:35 - coding challenge I have made 2048 it's
184:43 - not what it's called
184:44 - goodbye log base 2 is what I wanted to
184:51 - do yeah I know I could just insert the
184:59 - values into the grid would make a lot
185:01 - more sense let's play this for a little
185:02 - bit more game is over I don't know at
185:10 - least I made it whether this can be made
185:12 - into something that people could watch I
185:14 - have no idea but at least now I'm
185:19 - playing it a little better it's actually
185:22 - really hard to do this without the
185:23 - animation the animation really helps you
185:24 - kind of under see the board better but
185:32 - it'll be fun is to have an AI play this
185:37 - which I don't think here we go 128 got
185:40 - 128 faster now should have done
185:46 - polymorphism lerp the background color
185:49 - it'll be much nicer looking yeah
185:53 - yeah yeah colors would be awesome I
185:59 - didn't add color uh I'll just add color
186:10 - for you all here where do I do this fill
186:24 - to lerp color between I don't feel like
186:28 - doing this right now
186:29 - goody I gotta go it's 5:30 I gotta go so
186:32 - this is all I got to today color the new
186:34 - numbers that are coming Oh color the new
186:37 - numbers that were coming no Benjamin I
186:39 - do see your comments
186:40 - how about refactoring the code I would
186:42 - like to do that I'm gonna have to come
186:43 - back explain log base 2 and do color
186:47 - these are all such good suggestions I'm
186:50 - gonna have to come back another time I
186:54 - will publish this code it is a monster
186:58 - and can we get early access to the code
187:02 - yes so what I'm gonna do right now is
187:05 - I'm gonna go to I'm just gonna do this
187:08 - in a ridiculous way that if I had unit
187:13 - tests it would I'm gonna go to coding
187:14 - challenges and I'm just gonna go and
187:17 - grab somebody can quickly pull request
187:20 - renaming this correctly and everything
187:22 - actually and I can say this will be
187:27 - coding challenge if it actually ever
187:28 - makes it to something it'll be coding
187:30 - challenge what 93 what's the last one
187:34 - right now no 94 was double-double
187:38 - perceptron I mean double pendulum on my
187:40 - brain is so dead so to be 94 whoa coding
187:47 - challenge 94 2048 coding challenge 94
187:58 - commit directly to the master branch so
188:02 - the code is now on github
188:09 - yes so we'll see we'll see yeah 5:34 I
188:19 - got to go everybody all right thank you
188:21 - for watching I appreciate you be here
188:24 - with these live streams I don't know
188:27 - what I'm doing anymore I will I would
188:30 - consider doing a part for for this which
188:32 - would adding color and animation so I
188:35 - will think about that math sure I will
188:40 - message you there so while I'm thinking
188:41 - of it I could possibly on Tuesday come
188:45 - and do some cleanup for this so if like
188:47 - we need to do anything of like some
188:49 - intros and outros or like figure out
188:53 - some things to like help make this
188:54 - actually a coding challenge that could
188:55 - be edited then I would be glad to do
188:59 - that
188:59 - so thank you everyone I hope I won't be
189:03 - here next Friday there will be no live
189:04 - stream next Friday I will be working
189:06 - hopefully on that neural network
189:08 - JavaScript repository so stay tuned
189:11 - follow that and oh that's cool a greedy
189:18 - agent one that chooses the move with the
189:19 - most points where the taichi's is random
189:22 - like a weak bond is saying that would be
189:23 - a fun thing to add thank you everybody
189:26 - and yeah make the sizes of hash great
189:29 - suggestions and I will be back next week
189:33 - the code should be there now
189:36 - [Music]
189:45 - yep there it is 94 okay goodbye
189:48 - everybody
189:51 - and when will I do neural networks um I
189:54 - will come back I mean that I have a long
189:56 - list of stuff to do with that topic and
189:58 - I will get to it as soon as I can so
190:00 - thanks for watching and I'll see you in
190:02 - a future live stream

Cleaned transcript:

hello I am back for a second livestream session today this is the coding train on YouTube my name is Dan I had some lunch and fresh I had a lovely sweet greens bowl with some like kale and cabbage nuts delicious I've got some nice warm tea here slowing down with the caffeine and feeling the music and I'm back to talk about emptiness the void there is nothing but now higherorder functions so I had a session this morning if you weren't here you missed it but it obviously was recorded and archived and I started talking about this idea of higherorder functions what that means in JavaScript and then I moved on to looking at higherorder functions that are part of the array class or the rate object in JavaScript and I think I got through map fill and reduce was okay I feel like I started out well in other words I kind of went out and there's some two things I didn't like number one is I did this whole example about passing a function in as a callback I feel like it didn't it wasn't like didn't have any actual realworld practical Mis to it whatsoever so I feel like that example wasn't so great the example about returning a function I think worked better and then also I feel like once we were kind of doing reduce I was off into the weeds of cryptic syntax but that's what I did I so what what's gonna happen this afternoon is I want to talk about filter it's really I guess I could talk about sort also then I want to take some of these array functions and apply them to one of my particle system examples to kind of like rewrite the code with this new functional style way with arrow syntax because that's what my nature of code examples are that's actually how they're written right now if you go to the github repository so I'm going to kind of go through that so that's an 8000 and then oh my goodness I don't know I'm a time for all this I want to talk about inheritance and polymorphism what is that if you're asking yourself that question good then you could stay and watch that and I should do at least one coding challenge maybe I'll just do a simple spring the thing is I want to get back into the neural network stuff there's so much to get to there but I don't know realistically what I'll have time for today so we'll see that's what's coming down the tracks the coding train choo choo chugga chugga choo choo tracks so to speak so here I am boy I hope someone's actually watching I better hope this is working am i streaming yes there's people in the chat ok so now I'm back over here let's see ok before I get started without any of that while I was relaxing having my lunch call I noticed some pull requests come in so let's take a moment to go to rainbow code which is actually now just github.com coding train slash website and there are a lot of pull requests here I need to get back into them but let's look at this one that came in an hour ago my contribution to the fractal tree coding challenge thank you to Niels Webb who is the creator of the coding train website and approved these changes because as I mentioned something I would hopefully off time to implement it myself is unit testing for this repository in particular does somebody's contribution that they're submitting we can see it right here does it break the build system for the website is there a syntax error the system is being built with Jekyll and this is a markdown format special for Jekyll I suppose maybe this is like yeah mole somehow I don't know I don't know what a this stuff is what did I say Gamal was this before I mean this is about what it actually stands for but I like to think of cents for ya markup language ok so thank you to a Rashad and so what I'm going to do is I'm going to merge this live my sound board is working again how far can i zoom in on the merge button I want to be able to do this through like some gesture oh no wait one more click there you go all right so this has been merged so what happens here what is going on if I go to the coding train comm this is the new coding train website you can see here that there's a little note at some point be actually great to have a little big like on air live on air right now those blinking red things on websites is a little probably passe so to speak but it could say it does say tune in live right here and up so now I want to go to coding challenges and I'm gonna look for fractal tree 3d fractal trees which is the one that that was just contributed to I think it was this one so each challenge now has a card with a little thumbnail the number description this will take you directly to YouTube to watch it and this will take you to a page on the website where it looks like the site hasn't built yet so let's make sure which one did this go to this one went to 14 fractal tree and I am on 14 fractal tree ah just one refresh and here we go now we can see that Raja tz contribution is here thank you for that I am going to click on this it uses code pen I love code pen and there we go beautiful work I like how there's like a little bit of first of all couple things let me mention so this is an expansion off of mine for a number of reasons number one is I love the use of the different thicknesses of the branches I love the fact that branching to the left and to the right both have different angles and this lure of lovely addition of leaves these green ellipses that look like they're rotated a nice way towards the end if you know one thing that I uh you know that I think is interesting to look at now it looks to me like this is running at a rather slow framerate so first of all we could say my computer not the best computer in the world it's kind of slow it's it bears some responsibility here but I think that's often a question when working interactive animations is you want to fill the screen with all your stuff that you want to draw and because it's gonna look the most beautiful if you can layer the most leaves but if you can't get up to probably at least 20 24 frames per second it's going to stutter and perhaps that takes you outside of the of the feeling of you know so there's a balance here yet there's a tradeoff do you want perfectly smooth animation or do you want to have as many layers of color and particle leaves things as you want and I would say probably here it's probably worth it with something like this if the idea is to have it feel like it's experiencing physics or in the wind to like reduce the amount of stuff that is being drawn in order to gain a bit and the frame rate so that's and then of course there's always ways of optimizing things and using other environment the canvas is a bit slow of just pure 2d canvas especially with p5 which is a higher level library so there's even some additional slowness there all right so look taking a look at the chat and all right so let's see where now what's going alright now let's go to somewhere just for a moment I'm quite afraid this is like blown my mind what's happened in the last week so you may recall if you've been watching if I even just go to my channel that probably the most active playlist right now with new content is oh I'm not logged in as myself so it looks totally different let's go down to nature of code and neural networks and so here is the neural network playlist and I got basically there's edited versions of everything that I've done in the live stream all the way down to coding challenge number 92 now you might remember that I did a version of M missed digit classification during the live stream in the end I opted not to edit that and post that as a standalone video it was a bit of a mess there's some things in it that there was like a major mistake in it where I forgot to normalize the values of the pixels of the image I was drawing and it also was just there was a lot of me fighting with Dom manipulation which is really outside of the core content of looking at doing classification with a neural network so I might come back to do that again in a more thoughtful way but one thing that I've been but but all of these videos if you get all the way through tenpoint 18 which is right here and you go to the that same website repository and I go again I've got a wreath I've really got to think the organizational structure of this but if I go into courses under nature of code and tenpoint 18 this is the code for the neural network library as I left it neural network yes matrix not yes now if you've been following along I'll just mention again briefly that I am trying to get to the point where I'm going to replace a lot of the internal mechanics of the machine learning system that I built from scratch in a very inefficient way with deep learning is which is a JavaScript library for machine learning that is hardware accelerated this also relates to a project that is happening a research project at ITP right now called ml 5 which is a higherlevel library on top of deep learning is this is not exactly accurate but you could sort of think if you've heard of tensorflow and Charis Charis is a sort of higherlevel library to do machine learning stuff that's built on top of tensorflow ml 5 is a higherlevel JavaScript library built on top of deep learning is I could just click here for a second and go to examples and we can see here here's an example running guess this is a tabby cat this is doing image classification with a pre trained model and you can see that the code is very p5 friendly you're just creating an image with this kitten you call this predict function and you get a callback with results and you see a label and a probability so this is the idea of being able to create some sort of higher level tools to be able to access some of this machine learning except now why am I talking about all this so that's where I'm going and I wish I could just like be here live streaming every day I think I would get further faster but I also have to like research and try stuff out a little bit non livestreaming I'm sort of a full time job which is a wonderful wonderful thing but what I wanted to mention is this code so this is the code that matches exactly with the videos however there's also this repository toy neural network j/s and I put the word toy in there because it wasn't my intention to it wasn't my intention to have this be necessarily something that anyone would use for like real scientific work maybe for some creative exploration or to educational purposes or just to sort of play and experiment with but I've been amazed I am like overwhelmed right now there are currently 19 total requests since last Friday and I just really haven't had the time to review them and fall and I've read every single comment I want to give a shout out to where is this particular is it an issue or a poll let me look into the issues to versatil asan github who added this sort of summary of some of the things I've talked about alike these are some things that I hope to accomplish referencing various pull requests and issues that was not a notification for a life slack channel ok good and then some other things that I might do later and there are some discussion then if I go to the pull request there's like a pull request for adding some tests for more activation functions for there's a really amazing one for over learning decay there's another one for multi layer multi hidden layer support so I got to figure out what to do about this I got a carve out some time to go through these and see what I can merge and then I also kind of want to make a list I'll probably keep this sort of like parallel thing going where I'll let this go with community contributions but some of the community contributions that are really helpful I might try to like implement in my own way with the code that's part of the tutorial series so this is what I'm thinking no promises in Elmo I think that's I'm catching up late to the chat I think there's some JavaScript promises joke going on so why am I saying all this so so this I would love to get to a bit more to day but I don't know if that's realistic and maybe what I need to do is work on this quite a bit outside of the livestream and come back and report on it the next time but I was thinking one thing ideas I would like to have a simple classification example I've done as a video tutorial and so what I'm thinking of doing is using instead of doing the digits I was thinking of using the quickdraw data set to do an amnesty like data set so because I think also something that's really easily forgotten is that the act of collecting and preparing your data in a thoughtful ethical and careful manner of course it's fine to experiment and play and and and and in a creative and exploratory way but this is a project unto itself so I think it's important if we're going to have a tutorial series I it's it's not just like Oh get the sample baked mmm missed digit data set that everybody uses oh that's useful too anyway so this is this is where I'm going oh boy do I want to just do this right now oh all right but I won't also like I feel like it's a mistake for me to use M NIST as my core example I'm gay I hooked that up so that I could get notifications from people who are in this patron slack channel in case like the microphone dies or something for some reason I'm getting all these other got to turn those off eventually I get a good system alright so this is coming this is what I'm gonna do next thank you to Rajiv Shah whose blog this is from July 2017 I'm sure I will follow along to figure this out and then there's so much we could do because we could do clustering so much so many possibilities the quickdraw dataset is a really fun dataset okay and it's relates to creative coding I think more than the digit stuff all right so okay so now camera goes off really gonna install that magic lantern thing sooo nice I promise my promise is pending I promise and spending it's not resolved yet it has not been rejected but it is pending so where did I leave off I left off this morning talking about reduce so I'm gonna do a video about filter when I say video I mean tutorial and that will get edited into a separate video alright where's my marker where's my code so I have my system is terrible but I'm gonna go back to it where I have the like console oh I'm in the wrong key camera of the console up at the top notification coming in five four three two one I am going to come here and I've got mine this is where I left off I looked at the reduced function and looked at how I could use reduce to find the largest value in an array as well as reduced to add all the elements of an array together okay so filter is next let's do filter and sort why not right okay yep I'm love the lookout by the way me I am so me sent me a suggestion I looked into it for a way that I can make coding train branded train whistles because that's that could be a nice like patreon reward or something I don't know you all I'm sure would immediately subscribe to the patreon if you would get a coding train train whistle all right I'm back for another higherorder function with JavaScript arrays video and in this video I will talk about filter filters actually to be honest it might be my favorite one of these it's lovely so let's look at what let's so filter what does the word filter means it's it's called filter for a reason just like you might filter your water and and filter out all the stuff you don't want if you have an array that has some grime and stuff in it you could filter it out so how do you do that it's a higher order function so what that means is it expects as an argument some function and what that function is it's a function that receives as an argument itself an element of the array and based on that element it should return true or false and I always forget this I think it returns true if you want to keep it and false if you don't want to keep it so even though it's filter you would think true I want to filter it out I think it's true I want to keep it we'll have to try and look up and documentation okay and I'm going to do the same thing so this is where we last left off of this reduce stuff she's still here after that thank you and so what I'm gonna do is I'm gonna keep this same little silly array and I'm gonna Simon write a function and I'm gonna say it is you know interesting let's mmhmm let's call this function is even so what this function is going to do is it's going to take a number and it will return true if it's an even number or false if it's an odd number so it's going to if numb and how do I do this I can use the modulus operator the modulus operator see the coding train video from go 11 about modulus is an operator that gives you the remainder of division so if you divide something by two and get a remainder of zero it's an even number so if nan modulus two equals zero then I want to return true otherwise I want to return false now I always do this because this is the kind of person I yeah I will write it in seven lines of code to make it say exactly what it's doing even if it can be done in one line of code but this is this is a moment where I think it's worth today these videos are a little bit about reducing the amount of typing it's worth saying that I don't need to say if this is true return true if it's true just return the fact that it's true so this evaluates a true or false I'm gonna just return that so I can do this now I should be able to say what's I should be able to say Vale's dot reduce is even so the question is is my array going to have only left in it the even numbers or the odd numbers we could look it up in the documentation I could speculate but we could also just try it now I'm pretty oh this didn't say reduce this should say filter of course I should be filtering based on this function hello and I'm pretty sure let's just double check I'm pretty sure that this is the case where it creates a new array and returns back like I like we saw with the map function so if I save this here and I hit refresh we're say ok so that's the original array so this is not working yet I want to say vows equals the new array so I'm going to overwrite that variable with the new array that's been filtered and I'm gonna hit refresh and there we only have the even ones left so we have the even ones left because this returned true so if it returns true keep the value if it returns false don't keep the value and by the way what I'm going to do with this later in like a particle system example is I have an array of all these particle objects I could just say filter out all the ones that are off the screen our filter all the ones out that alpha has faded out to zero so that's why this filter can become really really useful so let's now shorten this using es6 syntax one thing I might want to do is just use this as X right change this to X now I'm gonna get rid of function I'm gonna get rid of the name I'm gonna put the arrow syntax in I'm gonna forget about this and I'm gonna get rid of the return because it's assumed so basically this is what I can do right this is basically I can now write that I do that really quickly because I'm kind of assuming you've watched my previous videos where I step through that more slowly but basically I can say hey filter every value X based on the weather X modulus two equals zero so this should give me exactly the same result again this is the thing this is why I hesitate this is so unlike me I don't just I I would write this in like 10 but there's there's a wondering beauty to this because even though I feel like this is cryptic and a little harder to follow there is a moment I think after you get used to this arrow syntax and write a lot of these functions and I'm comments are going on that I'm gonna look at in a second that you start to get used to this and this this becomes a bit more intuitive and it actually can make the code more readable oh there we go it worked now I can say let's just filter it out for the odd ones equals one now I have the odd ones I could say not this and that would be that's like not the odd ones there's also the even ones and we could see there we go so wonderful I'm gonna take a look at the chat and see that I got some extra notes in there oh yeah okay so um alka in the chat points out that you can filter by truthy and falsy values not just explicitly true or false what does that mean in other words I could filter out let's say I had an array of objects and a few of them were undefined you know we're empty I could filter out any spots where something's undefined so many things in JavaScript can be sort of like as false are true based on its its value like an object exists it's true if it's undefined its false so I could say so this would say like hey I have an array with stuff in oh then this actually oh okay so I could actually just do this right that's what that's what Alka is telling me so I could check like Oh filter out just keep everything that's not undefined right so this if I did this it would give me five four to one because I would filter out the undefined but undefined is like a false e value so I could just filter out the items that like kind of turn into false things and actually this is gonna give me yeah right so this worked as well and I could say not X then I have an array with just undefined okay so I think we've seen I think this has been good I think we've seen filtered filter filter filter the function filter do you have any questions we're not actually in the same room at the same time because I'm recording a video there is a live chat going on let me check if there's any questions oh that's a great example Alka I love that Oh X modulus 2 for example okay okay two wonderful tips that just came in from the chat that I would love to show this is great having a live chat wide for these videos so let's say I wanted to do that eat that even thing again where I'm keeping only the even values I had it like this X modulus two equals zero that's the even ones well that's silly X modulus two evaluates always to zero or one one being true zero being false in a sort of truth me falsity way so I could have actually done this and that's gonna keep the odd ones and if I were to say not I think I'm gonna need parentheses yeah I'm gonna need parentheses around this and now I'm gonna get the even ones so that's lovely then there's a lot of times when you're working with strings that's that I've had this problem actually a ton so let's say I have a this is gonna be useful let's say I have a string it was a dark and stormy night and what I'm doing is I'm saying let words equal s dot split and I'm gonna use a regular well I'm just gonna say split by space and then I'm gonna say console dot log words so you can see uh it was a dark and stormy night now Oh interesting so okay so things things could happen like what if I had two spaces here by accident and I hit refresh look at that because I had two spaces I got an empty string by accident now the truth of the matter is if you watch my videos about regular expressions I can be more thoughtful about the split what I pass into split and use a regular expression for a particular pattern to match but even so like live item you might not know I can break expression as a way of creating a pattern and so what I could do is say anything that's not a word character and what I wanted to see here is whenever I do this I always get things extra empty strings this happened even here so this is something that I do in one of my previous videos this is basically a secret code for saying split by anything that's not a through Z or 0 through 9 and that has to do with meta characters and regular expressions but actually I'm always having this problem where I get these extra empty strings so I could always just have a filter now filter by s s length by s dot length so look at this this should say because it's true or false see if this string has a not s dot length right if the string is the length of 0 I should filter it out so now let's do this we can see oh no no that didn't work not maybe I shouldn't use s here let's use X filter X not X dot length Oh No X dot length I want x dot length ah the opposite that was right so I can use s here I just was using s in too many places because it was a string so word word dot length right so I want to use the length to evaluate the word whether it qualifies or not I could of course say like greater than 3 right if I want to just have only the 3 letter words this will get rid of it an A now you can see I only have darkstorm you got rid of was 2 because it's not greater than or equals 2 so you can see how this filter you can chain these kind again I've got these really long lines of code which is very unlike me but you can see I can chain this stuff so I take this string I split it up so I all the words but you know what I actually only want the words that are three or more characters and instead of having to write a loop and an if statement and you splice how I always do it this is a nice really one line of code kind of way of using coulter oh I'm happy about that okay so thanks for watching this video I hope this was helpful to you about filter and I will come back in one more video I might as well I believe I've covered sort somewhere but maybe I'll make a standalone video that's just about the sort function and that'll be the last one that I'll do in terms of these higherorder array functions thank you okay so Tim asked will you merge the pull request on the toy a lot repository I want to I just it's I'm a little overwhelmed by how much how many contributions there were I want to be thoughtful about it I guess I could just kind of like but I usually do with the open source project this I just merged birch merger in March but I've learned that maybe it's helpful to like have a process and be more thoughtful about it so I'm gonna try to do that alright right I don't even need dot length right because an empty string would evaluate to false but what if I if I had the word false in there I could have a problem right look at this it was a dark and stormy false nice night if I do this oh no false meet it how interesting I would have thought this would evaluate to I would have thought quote false in quotes would evaluate to false all right false will be truth e false does not equal false okay well what do I know I don't know any of this stuff maybe merge video again all right sort oh so close I don't really well do sort it's fine because I'm just here I got to do sort okay now one thing I want to do with sword let's use what's a good there's a often I'm finding myself that I want to sort an array of objects that's often buy a certain property of that object so I guess I could just make something up or could I find like a JSON file with some data in it that I could use that I could sort let's think about this yeah word counts actually so you know what let's do the word counting thing that's that's where I covered sort word counting Schiffman sort o so somewhere in here I bet I I do it in this video oh but that's a processing one I think I have a JavaScript one where I do it anyway well we'll do it here this is perfect okay ah wrong thing oh all right okay sort the colors Oh sort the colors of a rainbow I don't know why I'm so standing in front of the code so much today all right if you've actually managed to sit through and watch all of these videos about all of these different functions I'm kind of amazed and it really the truth isn't that the point of what I'm doing is not to like cuz there's a lot more of these array functions is did I say this already in a previous video but is not to go through all these one at a time and explain every single one as useful as that possibly might be in some cases but if you can kind of understand how they work and then figure out how to look up in the reference in the documentation you can look at all the array functions to figure them out for yourself but I'm here let's do one more one more really useful one let's talk about sort so I'm gonna come back over here I'm gonna save I'm gonna come back to this word stuff because we're gonna need that in a second but let's just look at the let's just look at this array of vowels for a second so I'm gonna say console.log Val's and I'm just gonna say Val sort with no function passed in and console dot log Val's so let's see what happens and let me give this the number nine I'm gonna hit refresh now we can see look at that it's sorted it in numerical order from lowest to highest that's ascending order and in fact it didn't make a new array it sorted exactly that array so this is important to realize this is a distinction that we've really got to pay attention to so far in looking at these filter makes a new array reduce well reduce doesn't make an array it reduces things down to a single it could make an array but that's a special case reduce and map make a new array Phil Phil's an existing array and sort sorry filter and map new array Phil and sort act on in existing reduces a special case so that's kind of important distinction between all of these so but how did it know to do that well sort you kind of like would say like oh I sort it should sort by numerical order and if these were words you know a Hello be goodbye you would guess it's gonna sort them in alphabetical order now if this is capital B that shows up first because it's actually going to sort by capital letters first if there was something else that I was gonna look at here I wasn't gonna say capital B yeah if it's also like numbers and letters it's gonna first put the numbers and then in out in numeric order and then the letters in alphabetical order so there are there's a default way that an array will be sorted now let's let's look at this case what if I had just an array of objects so what if my array was actually something like a bunch of XY pairs so this is now an array and I oughta format it for me of two objects each with an x and a y well what if I sort that well it didn't change didn't change the order five six to ten all right well let's be sure about this let's say to ten five six and let's do it again to ten is first well that's there and now after sorting it to ten it's the same order so this is the thing there is a default way of sorting stuff but JavaScript the sort function only knows that default way for certainly kind of obvious things like numbers and strings if you want to sort something yourself you need to write your own comparing function this is why sword is a higher order function because it expects the sort function expects as an argument a function which you could call the compare or the comparator it's not actually a word I just feel like there's all sorts of goofiness in Java with these like longwinded strange words but you need to write a function that compares and what does that function look like so let's come back over here so let's say for this particular case here what I wanted to do is I wanted to sort this by the Y values so I would write a function I'm gonna call it compare and it's going to compare two elements this higherorder function requires two arguments two elements of the array and it's your job to say which one should go before the other and the way that you can tell the way that you can tell the sword function to do that is by returning a positive or negative number and I can never remember which is which but positive maybe means a goes before B negative means B goes before a and zero means they're equivalent or it's the other way around I always just try it both ways and eventually I figure it out so for example I could say return a dot Y minus B dot Y right that makes sense because in this case we're going to have 10 minus 6 is 4 or 6 minus 10 is negative 4 so if I put that compare function right here in Val's and I hit refresh we're going to see that 6 comes before 10 let's change this to B minus a and we're gonna see that 10 comes before 6 I know this is small but can you see that 10 comes before 6 so this and if they're equal but that value is going to be 0 so what other ways can we have fun with this well let's go back to let's go back to this it was a dark and stormy false night it was trying to league that's false let's put this back in here and let's say what I did with filter in the previous video is I filtered out all of the words after I split up this text that were less than three characters and let's just split out let's let's actually well three or less so let's make it two or less so let's just make sure this still works we can see ovale fine I'm gonna gonna comment this out I'm not using that anymore I'm just gonna look at this code and I'm gonna see okay so that's my was dark and stormy night now if I were to just say right before hear words dot sort I would get and dark stormy and dark night stormy was but what if I wanted to sort by the length of the words so I would we need to write a compare function and so I could start doing this with function compare a comma B return but here's the thing I'm trying to use as much as possible this arrow syntax to be able to sort of in line right there have the function that does the compare all in one line in a very condensed way let's try to do that maybe we've done it I've done it enough times now that don't need to write it first as a longwinded function then make an anonymous function then an arrow function let's do it all at once so I'm going to I'm gonna say we're word Ono so this is a comma V try always four up so this is the the the sort that compare function requires two arguments two elements of the array that I'm going to compare I'll keep this a and B sort of variable naming it's totally arbitrary I could call it cat and dog then I want to return the the difference between the lengths if one if one's length is bigger than the other it should be after it so I'm gonna say B and I don't need to say return I'm just gonna say B dot length minus a dot length so this should this should give me now a way of sorting the array where the longer ones appear at the end and let's see I probably got this backwards I always get it backwards I got it backwards of course where the longer ones are at the beginning so you know I could have figured that out but in the end I could just say a minus B and then there we go was and dark stormy so you can see three letter three letter for letter five letter five letter so this is the way that you can sort you can sort custom any list of any array of stuff based on however you want to compare two elements of that array all right now I'm trying to think if there's anything else I have to say I think that's it so we were done we've gotten through all this stuff what I want to do now is I want to look at taking a lot of these concepts into a kind of creative classic creative coding scenario a particle system and using a higherorder function to write a bunch of ways of managing so do a bunch of things to manage that array of particles and I'll do that in the next video which you might may or may not choose to watch thanks very much okay okay I should be back I didn't check the sound or anything but I think everything's hopefully working let me know if there's any weird glitches in the sound or video but I am back alright sorry about that I don't know why the stream crashes every once in a while but it does so I'm so excited to get out of this weird silly way that I have the screen here and let's get to the putting out lets me find let's see if I can find I want to look at the particle system the particle system coding challenge and I can't remember yeah so this I didn't use maybe it's fine I didn't use P vectors I mean p5 I didn't use create vector for this simple challenge and what I want to do is the filtering and yeah I think it's fine let's keep it simple let's keep it simple so what I'm gonna do this is exciting I'm gonna go to the coding training calm and I'm gonna go to coding challenges and particle systems I'm gonna go here and I'm gonna hit get the code let's see what this gives me oh that's gonna give me the processing one which is fine that's what I did it in no it's JavaScript ok this is the JavaScript one so I'm gonna put this now on the desktop and I am going to go to terminal and I'm going to go to desktop particle system and open it up an atom so here we go so look at this look at this look at this horrific Ness I'm going to so what are the things that I'm gonna do let's first let's just run this so this is the particle system so I can use filter to filter out particles that I no longer need to draw anymore I could use like reduce to find the centroid of all the current particles and draw that as something what else what else what else could I do I mean sort I could do in a weird sort of way to sort the particles by like where they are on the screen but I don't know what I would visually do with that I mean I could I could them a color based on where they are but I also just know their Y position so so what what what other ideas do people have the ideas that I have that are I mean I could use map for something probably so filter I definitely want to use in a four of loop for of loop filter what else Z sorting I was gonna do this Z o z sorting that's a great idea which are on top ah that's a great idea because without the fake depth I can draw I want to draw them in a certain order so what would I but visually what do I want to do like sort them by their color or something yeah I'll do that so I'll give them like a random brightness value and then sort them by that or something like that to draw them in that order that's great okay so just just for the sake of argument right so I could sort them so like and actually I could give them no alpha and I could always draw them so the brighter ones are on the front on front so I'll do make this change later that's a great one okay what else rotate there XZ to make it look like a camera going around them oh that's kind of cool all right so I don't want to get too crazy with it I just want to demonstrate the fact that you could sort them and have like fake depth because of that okay I'm not seeing any other suggestions so I have a sort I have a filter I mean maybe that's enough I could use fill but to start with a bunch but I don't that doesn't really I don't care about using map and reduce I'll do the centroid with reduce why not okay great all sort is also useful for sorting a population by fitness and genetic algorithms yeah okay all right I feel like so one thing I want to do is I think it makes sense for me to put this in a separate file even though I did so I'm gonna make a separate particle jas file because I'm gonna keep using this for the inheritance and polymorphism stuff particle J s and then index.html I need particle J s I don't need the sound library everything's good sketch it now a little simpler oops let's just improve this a little bit okay great just want to give myself some more space in the console there we go all right I think I'm in good shape so this is coding challenge 78 all right okay I could use fill to populate the initial array all right so any people try that too okay hello welcome to a video about higherorder array functions so I just made all bunch of individual videos with kind of some nonrealism like madeup scenarios to cover map sort reduce filter and fill and I thought there might be a way of making use of all those functions to improve I don't know if it'll really improved but to change to adapt my coding challenge number 7070 eight simple particle system so this is the coding challenge this is the code it's got an array in it I'm doing everything rather manually with a loop what can I do to use these functions so let's let's start with let's start with fill so the first thing I want to do is let's see if I could use fill to start the array with like a hundred particles so I could say new array 100 and then oh so here's the thing so I could say let's say I could obviously I could write a for loop right normally what I would do is I would have a for loop I equals 0 I is less than you know particles dot length or less than three hundred particles index I equals a new particle maybe you've seen that before but let's say particles dot fill now here's the thing this is what I want to do this is not going to work by any stretch of the imagination this is kind of like what I want to do but it will not work I want to make a new particle and I want to fill the whole thing but this is a problem let's just run this and see if we get some errors we're leave that work just fine but let's not add any particles and draw and let's look at the array and it is completely empty so the reason is fill needs to fill an array that has stuff in it already so what I could do yeah yeah oh shoot I'll just give you weird I would have thought no no cuz I have to map I should just start over I'm looking at the chat because I could see get rid of the new keyword right cuz I could I just sort of curious for a second here no no but it's not a yeah no all right what I want to do yeah I thought it would have been 100 references to one particle but maybe because I updated it Oh cuz I updated it and it it it moved oh you know what okay okay okay let me start this over because I know what's going on now you start all the way back in the beginning all right so let's see let's start with by saying the oops what happened here let part let's start by saying particles is a new array with a hundred spots now in theory what I kind of want to do is this particles dot fill new particle right I want to just say hey fill all the spots with a new particle and I already told you there's a hundred spots there this is kind of gonna do something interesting I'm gonna actually just to demonstrate I mean I'm gonna take out adding particles and draw and I'm gonna run this real quick and see today you see something there real fast look at that real fast what was that well actually what it did is it made a new particle and it put that new particle in every spot in the array but it's all pointing to the same particle object I need a different particle object in every spot so in this case I've actually really got to use the map function so I can fill it I can fill the array with like emptiness and then use the map function to create a new particle for each and every spot so what I can do here is I can just say fill dot map and then each element I'll call it P should be a new particle so this now should give me whoops what did I get wrong here particles dot film at P is a new particle that looks right to me hopefully there's 100 undefined spots Phil Oh Phil requires an R no yeah that didn't work either no no no oh it's making a new array oh it's making a new array map returns a new array ah why didn't this work uh okay so here's the problem I forgot I know maybe this isn't the greatest thing to do because map requires a new array so this is all sort of silly that I'm doing here so it would make more sense for me to say this because why make a new array twice so what I want to do is make a new array fill with nothingness I could put null in here and then map oh I don't like where this and then map to new particles I hate this yeah that worked I got a little burst of 100 particles can I take out this null yes so I don't know do we like this this is almost ridiculous I don't know if I really need this but it works I have a particles which is a hundred or a hundred a of a hundred particles and each each element is a new particle object and you can kind of see that one line of code great okay so we used this video we now use to fill oh and we use map oh how lucky for me and again I've really got to pay attention to what just acts on the current array what makes a new array alright so what can I use next let's go ahead and use filter I'm going to show you something interesting about filters so if you've looked if you've gone through this count if you watch this challenge and looked at this code look what I'm doing here I have this very awkward loop that loops to the array backwards of using the index I access each element of the array update I show I check this finished function if that finish function returns true I use the splice function to remove it out of the array so I can really improve this let me add this back in where it adds five new elements to the array and maybe there's a way I can do that with one of these higherorder functions there we go now we can see here's the particle system one thing I could do to improve this is let's just use let's just use the for Loup so for every particle of particles this is a new this is a loop that's part of e a loop structure this part of the JavaScript es6 I have a whole video just about this loop it's saying every single element of the array reference that each element in the variable particle so I can just say here particle dot update particle dot show so that's nice I like that already better than this down here which I'll comment out so this is a nice simple way of iterating through every element and there we go I probably just use two for each loops and this is about higherorder functions so we can see this is the same it now let's look at particles dot length 1975 2000 190 it's not deleting any of the particles as they fade out so how can I do that I can say in instead of having to check each one and remember the index and use splice I can now say particles dot filter and what do I want to filter now remember I'm gonna I can write the function to return true or false to tell it whether to keep it or not if you watch my video on filter all in line using the arrow syntax so really what I'm trying to write here is I want to write a function like keep and it receives a particle and I'm going to return P dot is finished right and in ultimately I want to keep it if it's not finished so this is the function that I want to write to filter everything out it returns true if it's not finished so keep it but I can just write this as and not so look at this now and I have to remember on my list filter is one of those ones that returns a new array so this actually isn't going to do anything unless I say particles equals particles dot filter filter them all out based on the is finished property and now okay it's finished is not a function just calling just called it finished okay and there we go now is this really working let's check particles not lengths to order 55 to 55 it makes sense that it's always 255 because its lifespan starts at 255 and goes down by one and I'm adding like five per frame somehow the math works out then it's like nicely 255 that's very interesting all right so look at this now the reason why now these this particle system example is a bit of a simplified version of my nature of code ones I just want to really briefly go to github github.com slash Schiffman slash the nature code examples p5.js so if you want to see more examples that do this and I go into chapter four systems I have a lot of particle system examples here's one of the systems of systems of the particle system class you can see I am now doing this in my examples with some extra comments so this is this is now if you want to see many more examples where I'm kind of using this type of es6 style to you operate on an array of particles you can check out these examples as well okay what else can we add to this let's use what else can we add to this let's ah let's use reduce so let's see if we can use reduce so one one thing that I might want to do with reduce is something that happens in my flocking examples for example is I want to calculate like what's the center what's the average location or the average velocity of everything so let's compute what's known as the centroid which is a term for the average location of a position of a collection of things the center of it so let's think about how I would do this I want and I can get rid of all this now so I want to say particles dot reduce and remember reduce always gets an accumulator and a particle right there's an accumulator and a particle and what I want to do is I want to add up each particles location so there's a bunch of different ways I could do this for example I think it might be simpler right now to just do it with the x and y so first let's just calculate this X I'll call it C X for center X and this is going to be I'm going to call this X so the X is just to have like fewer shorter variable names X is the accumulator P is each particle so what I want to do is say X plus px right I want to add up all the X values of P this is not going to work right because if remember if you watch my reduce video the accumulator has to have an initial value if you don't specify it's the first element of the array well what's the first element of the array it's the particle object so in this case I can't like add the x value I want the I want the first element of the array to be the first particles X value but what would be simpler here would just be to explicitly initialize it at 0 so I can then say just comma 0 and this should give me the center X location right I'm taking all I'm adding up all the X values now I did I need to divide by the length but let's so this should really be this is really some X I'll call it the sum of all the X values this is this would be some Y and I'm going to do this and and just to rename the variables I'm going to do this right and then I should be able to say Center center X equals some X divided by particles dot length and Center Y is some Y divided by particles dot length and let's just draw a nice you know red circle right there and see what this looks like let's see if I got this right there we go you can see that's always the average center of all the particles the centroid of all the particles so again does this what have I done here I could have written a loop I could have said some x equals zero before the loop every element of the loop I say some X plus equal the particle that X so I don't know what if I really have I improved anything but this you make this is a way that you could write it using a higherorder function called reduce now could I do this in one line could I do this without separate x and y values and I can let's look at that so one way I could do that oh you know what though the particles don't have vector objects so I might almost want to leave this as an exercise I'm gonna leave this uh in some way so what I would say is like go to where was that where was that go to this particular example right where I'm actually here each particle if I go to this example in nature of code and I look at the particle object the elements are not or actually p5 vector objects so how would you write this function to add everything up with a p5 vector so let's actually I think we can actually do this here let's do this here okay so let's say I were to say I'm gonna comment this out comment this out I'm gonna say let some I'm gonna say some V which is the vector sum be create vector 0 0 that's the accumulator right that's going to be the end that's the accumulator I'm going to make an empty vector at 0 0 then I'm gonna say I'm gonna call this accumulator V then I'm gonna say let some V equal and we do the same exact thing particles reduce this accumulator which is V which is going to be a vector P then say V dot add because I'm gonna use the p5 vector syntax it's really crazy pxpy so I believe the the p5 vector object has an ad function and I can add to the vector x and ycomponents directly and then I'm going to give this as the initial value of the accumulator so really what I probably want to do is just put this right here be a little less confusing line of code I can't even fit it on the screen here there we go right I'm reducing let's see if we got this I'm reducing the array I'm gonna accumulate a bunch of vectors with the first vector being an empty vector with zero zero in it and then for each one of those I'm gonna add to it each particles X&Y and then I'm gonna say I know I'm standing in front of the code right now I'm gonna say some V divided equal particles dot length well I can't do that I have to use it's a vector I've used the divide function divided by the total number of particles and then I'm gonna say some V dot X and some V dot Y so let's see let's see how this goes are you actually still watching this video because I'm gone up the deep edge with all these things okay let's go back to my sketch same result so that's working to calculate the centroid so you've seen now I can use filter I can use reduce you know here's let's let's look back at the list filter reduce fill map I still have swords well um this video is just gonna be longer I'm gonna use sort in this video so here's the thing I don't think that the code is necessarily gonna run faster and more efficiently this way and this could be a problem if I have a particle system with thousands hundreds of thousands millions of particles I really want probably then a simple for loop is going to actually execute the fastest but there's something nice about learning how these functions work and sort of seeing how this can be done because you will especially see these in libraries that are manipulate large amounts of data in JavaScript libraries that are kind of using this sort of style of coding so hopefully this is helpful to you let's do sort so I'm gonna let's do some so one thing you could do about sort is you could like why would I want to sort these particles well one thing might be pause for a second why would I want to sort these particles well one reason might be what if your create first one if you're actually in 3d space it's sometimes advantageous to know the Z does the order of things because you might want to draw them in that order related to how the alpha or the blending and various things are working but I'm not in 3d but even in 2d what if I wanted to have some type of layering system where I always wanted certain things to be drawn over other things even if they're out of order in the array because right now I'm only gonna draw things in the order that they are in the array so let's create kind of a fake scenario that will do that so what I'm gonna do is I'm gonna go to the main sketch the particle and I'm gonna add oops no I'm sorry I'm gonna go to particle and I'm gonna add I already did this actually I'm gonna add a color variable which is just a random brightness value between zero and I guess technically this can be random 256 because I can get 0 through 255 and then I'm gonna fill by this color and I'm gonna get rid of the Alpha so they're gonna be no alpha now let's look at this whoops let's go back I'm gonna run this and I'm gonna get rid of the centroid just so we don't have that big red dot for no reason I will obviously leave this in the code go back to here now look at this so there's obviously a layering going on here the layering happens to be just the order that the particles were added but what if what I wanted to do for example was always have the brighter ones appear on top of the darker ones I don't know that will produce any visual value but you could imagine a scenario where you're actually thinking about layers and depth and maybe you create fake Z value variable for each object or something like that so I could sort them by their brightness so let's look at that if I go now back to sketch before I draw them I could say particles dots sort and remember when I sort I need to create a function and again I'm using this arrow syntax just almost automatically now this is this working for you please let me know it's all these videos help you kind of just see it where I get where I start with two elements of the array a or B and now it's up to me to return a value that says which one should be before the other and so I can actually just say a dot color minus B dot color because if you return a positive number a negative number that means positive number means one is before the other a negative number means the others before the other and then zero means they're equal that's how you're telling it to sort so this should be a way of sorting the array and sort actually manipulates the existing array not making a new one so this now if I run this we should see look at that the brighter ones are always on top of the dark ones which is kind of an interesting effect again you know I you could probably invent your own scenario of layering as to why you want to do this but now we have a particle system coding challenge 78 that has map and fill to create an initial set of particles it has sort to sort the way I'm drawing them based on brightness I'm using a four of loop to be able to iterate through all the particles and I'm using filter to filter out whoops and I'm using filter to filter out particles that I no longer need that have faded out as a bonus I think it would be interesting for me just to try to use for each right so I could also say if I really want everything to be a higherorder function I could say particles for each right and then I could say this but I need multiple lines of code so I'm gonna say P dot update all the laws of physics are like exploding around in my head as I'm using for each loop I can't believe I'm doing it so is this right let's just run this hey and let's put the centroid back in there we go so I can't believe I just did this but a for each loop what a for each loop does and says apply this function to every element of the array and my function is to update and show if incidentally I because I have two lines of code I have to write out the full curly brackets but I could do this I don't know what the point of this would be but if I just wanted to write it like this just to be like kind of a crazy person for today I could say update all of them show all of them and sometimes you actually want to get through updating all of them before you draw all of them so this would do that let's see and there we go I have really I'm like am i a function do I qualify as a functional programmer I seriously doubt it but I have gone through and hopefully shown you a bunch of techniques for applying the arrow syntax and functional higherorder functions of JavaScript arrays in this video hopefully you learned something it will improve or help something you're doing in the future please let me know in the comments and thank you for watching Oh chaining yeah chaining use chaining and do this okay that's for another day reading the chat for a second here hey just 340 okay so I really did get through all this guy all this content about functional stuff any more stuff today yeah I wanted to do inheritance and polymorphism oh that's interesting someone is asking me to turn around the layering just to see what that looks like yeah that's also interesting oh yeah that's too crazy for me me I am so many getters and setters oh yeah we'll see I definitely need to cover that at some point no let's think about how to do this I'm gonna erase the whiteboard we're gonna move on to the next topic I think I should just admit then I'm not gonna be doing the neural network stuff today but I should do at least one coding challenge by the way it's interesting to watch my youtube analytics I'd be happy to like share some of that at some point but like so I almost the videos get edit and I try to release one every single day I usually do it sometime between 700 a.m. and 1200 noon eastern time because I'll like remember at some point but if you look so you know the graph of the analytics is always all these spikes of where I released the video each day but there's if I release a coding challenge video like the double pendulum was like three times as high as some of the other stuff interesting to see all right let's erase all this oh I totally forgot to talk about google Summer of Code I usually do that at the beginning because mmhmm but you know who knows maybe there's a bunch of people watching now I could mention this too let's take a pause for a second for me to mention google Summer of Code so if you are a student you have to read the Google Website in terms of eligibility but if your students your edge of eligible to apply for a google Summer of Code summer of well let me just search summer google Summer of Code okay so this is the google Summer of Code homepage this is a program that I have participated in almost every year and there was one year that I missed when processing was not an organization for google Summer of Code in for the last five or six years if you click here and go to view organizations these are all the these are all the organizations that applied and were accepted by Google to be part of Google Summer of Code and again I'm not an official representative of Google here I'm just telling you about it I am participating through if I keep scrolling down eventually I will find the processing foundation so I am the I am one of the administrators for the processing foundation I think I must have gone past it there it is so the way the google Summer of Code works is if you're a student you can apply to work on one of these opensource projects for this summer you'll be assigned a mentor for example if you apply to processing I will probably be a mentor for a project this summer along with many other people and Google pays you a stipend I believe you know you should really read all the FAQ materials because eligibility and whether you're eligible it's not something the foundation processing foundation of the organization to decide that's something that Google does and how you're paid and what based on where you live and that sort of thing is also all done by goo but if you click on here so I'm going to show you the processing foundation obviously you should look at all these organizations but if you go here you'll see here's the processing foundation creative colon graphic design if you go to learn more you'll get to the processing foundation page which has some more information and then you'll want to click on View ideas list and this will take you to our github page that has a lot of things that we're looking for help with like improving p5.js WebGL testing and updating mobile functionally improving file other method update hello def p5.js website p5 just web editor classroom management system utilize the audio work but exactly there's lots of stuff here for p5 GS then for processing desktop environment analyzation tool so these are all just suggestions also I should mention very clearly that this is a that one of the things we always consider are just libraries for processing or addons for p5.js so and if you want to discuss your idea and I've got a you can go to form processing org and go to summer Summer of Code 2018 and then oh my goodness look at all these things that have been posted here already I've got to get reading through these so people have and there's been some comments already so these are this is where you can make a post about your idea and hopefully get some questions answered you can also tweet at me at Schiffman and yeah so if you're interested I encourage you to apply it's a wonderful program and it's super helpful for us as a somebody who works on a Topa sort of volunteerdriven or donor funded opensource project these kind of programs where you get a lot or a large amount of sub help and support over a intense period of time is really does wonders for the project if you want to see what we did last summer if you go to medium.com slash at processing org this is where there we have a bunch of posts about recent things but some one of these is google Summer of Code wrap up processing meat I can find mm yeah so this is a post on medium that that goes over all these are all the google Summer of Code students from last year and all the different projects for processing that they worked on so I encourage you to check this out okay I wanted to mention that so the question now becomes i editi our rights you never reply to the tweet I actually I do I read all my mentions and I try to reply to all of them sometimes I miss one or two like not attached to my glowing rectangle all day long you know I have to like put it aside for a large portions of the day and time and weeks but I do do to 2048 that you promised us a few weeks ago ah interesting interesting that is not the worst idea I've ever heard I wanted to look look into that a bit more think about it a bit more before I came and did it but but I think I should do all right so I let's um let's think about this what time is it 340 so I really only have an hour all right all right wonderful people watching inheritance and polymorphism with particles 2048 a simple spring challenge oh this is what I want to do simple springlike i springlike Boynton Springs simulation not not like this springtime the flowers blooming although that would be wonderful to 2048 it's gonna make you so crazy right now if I try but it is kind of it's kind of I do I did it would be good to try to do that I think I should do it in JavaScript though because all I can use all the higherorder array functions that's kind of fun all right let's let's see what you guys think I need a little break actually so I can let you guys let all of you watching excuse me put your votes in right now yeah I know 24 24 th drove me crazy before and so the reason why I didn't end up releasing that is because I wanted to go back and like think about it again but okay I'm gonna take a short break I'm gonna mute myself and I'll be back all right I have come back it is time to relax have some quiet time let's read the last numbers in the book this is the very last page these are these are Gaussian deviates they're like my favorite kind of numbers they're Gaussian and their deviant point three three zero point nine seven six point three three seven negative point zero four three negative 0.476 some other ones were negative before I didn't realize that one point five seven seven negative point seven seven five negative 0.106 0.189 point negative point one to two all right you can all see the results right I'm gonna vote for the spring challenge that's the easiest for me I think I can't look well I see something that's green with a lot of space in it okay really seriously Oh nobody's interested in this inheritance and polymorphism this is gotta be pretty good I could make a few people happy by doing the spring please right we're gonna do this I don't I never bother to really like think through what I did wrong before but I'm gonna let's let's go for it okay we've got we've got it I've got an hour no chance of getting this done in an hour okay p5 G B 2048 seed each one I'm gonna definitely do this in JavaScript now because the array stuff I think will actually be much easier 400 400 I mean it would make sense to use Dom but oh wait wait I've got a secret a secret k week month sent me his code all right well I've lost where I am all right so what do I need here okay so now I need to be where this inheritance of polymorphism will come another I'm kind of to be honest with you I'm very happy to not do the inheritance and polymorphism right now is I'm a little tired of just kind of technical JavaScript stuff um I do need to come back to that because that I think is core core material to be oops to be a part of the tutorials on my channel alright all right let's now go to 2048 and 2048 Wikipedia I already erased the whiteboard all right let's think about this what was the problem I ran into before the main problem I know okay the main problem I ran into before why not background 51 asks see creative a good question Oh see the thing is you know when I should be doing 2048 I should be doing it about 930 in the morning when I'm like fresh and just had some breakfast and arrived at work doing it at 400 p.m. on a Friday after I do live streaming all day is pretty much a terrible idea I will write but the nice thing about doing this is the more of these that I have the more I can build little machine learning systems to play them which I do eventually want to get to why is this oh my the my keying has a little bit of noise like in it today why how can I do here is that better it's a little better I think all right so it would make sense to do this with Dom elements but I'm going to do this with canvas all right where do we go okay oh look what's pulling into the station it's the classic game 2048 that I always try to program and completely fail at so here's another attempt you hopefully haven't seen the previous attempt but there was a livestream where I tried to do this and kind of ran into a lot of problems I'm going to attempt to make the game 2048 if you're not familiar with it check out the link in the description play it this game according to this website was written in JavaScript and CSS during a weekend by Italian web developer Gabriele Shirley it's now an open source software a project under the MIT license I have not looked at the source code I am going to try to make a canvas version of it I think that'll be a little bit easier just to start then using Dom elements and I'm gonna use the p5 library to draw to the canvas so what is the core let's let me first before I get started coding I really very pessimistic about this let me try to talk through my understanding of how the game works and what kind of code stuff I might need all right so the game by definition is played on a four by four grid now again there are obviously variations of this this is not their their predecessors to 2048 of the same game with slightly different designs and flavors and ideas but the core idea of the 2048 game is four by four grid it starts I think with two random spots filled in with either a two or a four and then you can press a key right up left down obviously on a mobile or touch version you can swipe and you send all the values so if I swipe to the right I send all the values this way so the two and the four would end up here then maybe a new value pops in if a two pops in here and I swipe to the right again numbers that are the same will combine so these twos will combine into a four and so let's go back and look at that and we can kind of see let's see that happening here right as I press down nothing happens I press the left everything was the left of four moves to the left at two uh let me move that to up and then let me move that over those two 16s will combine and those two twos will combine and these two twos will combine there we go that can go down so you get the idea so what do I need well actually interestingly enough all I need to figure out is if I have basically four you know I have a matrix a twodimensional array but it's really just an array of arrays and I did two Betty of it so if I have four if I can figure out how to just condense things to one direction one direction then I don't know any one direction songs otherwise I would started like singing as a joke but I don't actually know the name one direction anyway I'm more of like a 98 degree 98 degrees I don't even remember whatever was in the like 1940s when I was a teenager okay oh yes 2048 if I can just get them figure out how to do it in one direction then if the user or the player presses up I could kind of just rotate the whole thing and go in that direction so so let's let's see if we can figure this out I need some kind of structure for doing this let's go to our code and by the way I just did a whole series on JavaScript array functions higherorder functions like map fill all that sort of stuff so I think I can use that right now so what I'm going to do is I'm gonna have I'm gonna have a variable called grid and grid is a new array with four spots in it and what I'm gonna do is in each of those spots I'm going to fill it and map it with another new map map it with zero zero zero zero so I think what this would do right you're looking oh you got lost in my own world there they'd never write code like this but let's try this so I'll explain this in a second let's see what happens here our object array is not a function where's that line number six oh I need to just start that part over I told you this is a bad idea now I'm gonna try to use higher order functions I'm gonna get all lost okay all right so let's start writing some code the first thing I'm gonna do is I'm gonna have a variable called grid and I want that grid to be a two dimensional array really just an array of arrays so I want one two three four arrays and I'm gonna try to use I just made a whole video series about higher order JavaScript functions and array function so let's try to use those so the grid needs to have four rows I'm going to think of those as rows then I can use this function called fill to fill each of those spots and then map and to say each of those spots is going to be an array with four zeros in it so this is a pretty goofy pretty pretty goofy but this should allow me to do I have an error here and I say grid undefined okay so I got close I got for undefined arrays what can i what can I do empty array and then fill it with empty arrays and then have each array map to fill with 0 right with Phil and map I'm like well we fill it with empty arrays then each one would be a new new array an array with four spots filled with zeros I think this might actually work right fill it with Chi just fill it with null though right so I can fill it with oh here's to watch I'm gonna come back to do this ahead grid and the worst I like looking at the chat as if as if I'm gonna be saved by the chat Oh I'm gonna come into this again this is really gonna be like lots of cuz this is you were ready for oh this should work you know I got a better idea everybody relax I'm not doing it that way I thought doing it that way Phil okay all right let me come and write some code I'm going to say I'm gonna have a variable called grid and guess what I'm just gonna hard code it I feel okay with that do you feel okay with that obviously what is it it's gonna start as it needs it's basically this right I need to have four arrays of zeros and let's see if yeah there we go this is that's the book 2048 board I could try to say like new array and fill and math and all that stuff all these like but this is gonna work there we go so now what do I need to do first the first thing that I need to do is for each is unless write a function to do this is add add num add I don't know what's add spot I don't know how to call this add number so what the add number function should do is it should pick a random location that does not already that has a zero and it should add a two or a four there so what I'll do is so first I should check first I need to check is the whole board full of everything that's not is there are there any zero spots so what I want to do okay so let's give so let's make a list of all of the in all the possible spots that I can add so I'm gonna say I'm gonna make an array called options and now what I'm gonna do is how could I use to get the index values out I'm just gonna loop through it so I'm gonna use I and J I kind of have this idea that I'm gonna use all these fancy array functions you're just gonna loop through it I and J and I'm gonna say if grid I J equals 0 this is a valid spot options dot push and I'll just make a little array with I and J I and J in it maybe I'll make an object X I Y J ok so I'm going to put a little object in that array now what I'm going to do is once I'm done I'm going to say let spot equal a random option so if options dot length is greater than 0 then I can pick a spot and then I'm going to say grid spot dot X spot dot Y spot dot y equals and I can I basically want to pick I don't want to pick a 2 or a 4 so I can use a ternary operator whoo I've gone totally nuts today which basically what a ternary operator does is it says what kind of pick a random number and okay hold on I'm gonna pick a random number R is a random number between 0 and 1 and I'm gonna say is are greater than 0.5 if it is give me a 2 otherwise give me a 4 I think and I don't know if this should be in parentheses or not I don't think I need it so this is a nice little way of just giving me based on whether R is than 0.5 give me a two or a four I could've written an if statement but everybody always complains when I don't use the ternary operator so I'm gonna try using it and who knows if I got it right so let's in setup I'm gonna say console dot log table I'm gonna say add number add number and console dot table grid console dot table is a really nice way to display a array in the browser in the end of JavaScript console in the browser so let me do this so a look at that look at that let's do it again 2 & 2 2 & 2 all right so in a way like almost 100 just do this the entire thing in the console and not draw anything because I could just do the whole thing in the console and play the game but I think it's gonna be much easier if I can represent what we're seeing in the console in the canvas so let's put that into draw so here I'm gonna this is my nested loop that I'm going to be using constantly and I am going to first draw a rectangle and I guess though the size is always going to be the width divided by 4 you know I think I can probably for right now just say it's a hundred like I get a hard code a lot of stuff cuz it's 400 by 400 refactor later and so I'm gonna draw a rectangle at I x WJ x www and I'm gonna say no fill stroke weight to stroke zero and let's make the background 255 and I should see a nice grid now there we go I've got my nice grid now what I should do and this is almost like too big I don't need that much space okay now and I'm gonna move this over a little bit so I'm not staying in front of it so much I am going to now I should also say if grid I J is not equal to 0 I could draw the number there now let's do to use the text function in p5 so I'm gonna say textaligncenter text I'm on to draw the value so I should actually just let me get the value the value is grid I J and so I'm going to draw that value at x w w / that's kind of like the center J times W minus J divided by 2 W divided by 2 what does that do and I'm gonna say text size 64 I don't know fill 0 no stroke this should be rendering it actually I should just put this in its own function just to kind of like get out of here function draw grid and I'll call that in draw so let's see how this goes yeah that's not so horrible I've seen worse so let's W divided by 4 about oops Oh what happened here J times oh wait oh wait does the text draw from let's see this so I'm seeing a 4 times Oh interestingly I am seeing things in the wrong differently than I'm seeing them here because the way that I'm treating columns and rows and I think I'm drawing stuff above so it actually should be J times W plus W divided by 2 why do I sometimes get one thing textalign textaligncenter Center that's what I meant to do thank you textaligncenter Center there we go I knew those that's what I wanted to do but why am I sometimes getting only one number maybe I'm not anymore right before I was getting one number I'm not any oh why did I only get one number what's the grid zero two zero zero zero four zero isn't is in three how I'm like hold on let's say I let's actually draw the let's draw the coordinates look at me I have everything shifted over wrong that's clearly the problem so my X location is I times I times W minus plus what am i do / 4 it's a plus I lost my mind oh what a terrible error that's much better sorry you had to sit through that so now it's fine and now I can put the value there there we go so now this should work this is my opening board no matter what poof okay we're getting there 2048 here we come so now what's the deal I'm just gonna say for right now whenever I hit the spacebar I'm gonna send everything to the right so what I need to do okay so let's think about this there's if I have an array of numbers and there's so many different ways you could approach this problem when I'm sure I'm not going to do it in the most efficient or sensible way but the first thing that I would do like let's say let's say this is the row the first thing that I would do is just pack everything to the right so that any empty spots would be left on the left side so let's first do that so that's let's write a function called slide so I'm gonna write a function called slide and it takes a row which is an array and I again I might have to thank you I know I'm in the wrong camera alright okay let's go over here so I'm gonna write a function called slide and I'm gonna give it an argument a row now I know that I probably am mixing up my rows and columns have to figure that out later but I'm going to assume row it's just a single array and what I want to do is I want to look through I'm gonna take that row and I want to filter out I could use filter to I mean it's sort of silly I just want to move everything over if it's not a zero so let's try using let's let's try using some array functions I'm gonna say row equals I'm gonna want to return I'm gonna so I'm gonna we're going to return an array so array equals Rho dot filter so this is actually going to keep everything that is not a zero in the same order this is kind of crazy but filter is a function that takes any value and let me just and that and that because there's a true or false test a map would be interesting here too anyway I'm gonna do this so this should just see then I'm gonna say return array so first I'm just gonna oh no no and then what I need to do is I need to say I need to add two I need to add however many so whatever many their rates are like the missing is all I could just sort new I can't sort it missing equals 4 minus array dot length and I'm just going to I'm gonna say let and then I'm gonna say missing let zeros equal an array of missing size filled with zeros and then I should be able to just say arrey dot put now what how do you put something on the front of the array push would go on the back which maybe is fine because I could be sliding that other way just be sliding the other way so I'm gonna say push the zeros and then return the array let's let me just test this function out right so the idea here let me get rid of this console this console got table stuff where is that yeah I don't need that anymore so let's say I haven't or let's say I want to say slide and my array is zero zero two four okay so push doesn't do that it doesn't push I use can cat maybe can cat where's I slide array can cat zeros know how do I join join concatenate concatenate let's look at the array page Mozilla array concat oh it makes a new array it makes a new array okay so I need to say array equals array can cat zeros okay there we go now let's take a look at this let's get out of here go back to here there we go it slides everything to the left yeah and let's just try some other things slide 4 0 2 4 4 2 yes that's good everything's going that way which is fine I don't care which direction that's fine with me so now I should say every time I press a key I'm just using the spacebar right now if key key equals space what I want to do is loop over loop over the grid and say grid index I equals slide grid index I right so this is sliding them over for each one oh they're going up so that's great so after I do that right each time after each time I play play the game like this is one this is one move so to speak then I should add a number again add another two or a four randomly great this appears to be doing what it's supposed to be doing be nice to have an animation but there is no animation now there's no more room left that's fine okay okay all right so now I need to combine so just like I have this slide function now I need a combined function so assuming that I've slid everything one way or the other what I need to do is if there are two that match starting from the back they should be combined into one number all right I know this is where I ran into a problem before someone's I'm gonna need somebody of watching this live to help me oh if nothing moves no tiles should be added okay okay I gotta get to that later yes so that's a part of the game we don't if if you're done if nothing can move you can't add another tile but I will I will remind me I need to fix that I need to fix that at some point so let's do combine so if I have a row what I want to do can I use reduce filter then I could loop through it for sure so let's let me try doing this very manually right now let me Luke from the back right let me loop from the back all the way down and first I want to say and I actually just want to go to here because I want to say a is the this one right the current one that I'm at like the last one and B is Rho I minus one and if a equals B then Rho I should equal a plus B and Rho I minus 1 should equal zero and then I shouldn't do any more so I'm gonna say break so this is again I'm gonna need to do more but this and this probably way for me to write this shorter but I'm just gonna go from the back and check the last two like what am i doing whoops I'm in the wrong keyboard I'm gonna check so if this is so we fit got I've already slid everything so if it's like this I'm gonna check this one versus this one if they're the same this becomes 0 and this becomes 4 now if this were here I still have to do more I've got a slide again but let's see here now I should be able to now I should say where I want to slide the grid oh and so hold on oh I'm actually operating on the row itself so in this case I don't need to I'm up this is a little bit this is a little awkward I'm making a new array to send back and here I'm operating on that array so this is a bit awkward but I'm just gonna remember that so I'm just gonna write in comments operating on array itself making a new array and so now I'm gonna say after I slide I'm gonna combine so I'm gonna combine let's see if this works okay I forget what I just press spacebar and everything goes up oh boy error error cannot read properties 0 of undefined at add number sketchyass line 20 sketch day s line 20 if grid o had number oh oh I messed up something Oh because silly me silly me if I am not returning her this is terrible so this one returns a new array this one acts on it oh I got it gotta clean that up later that's not good I don't like that okay now things move up things move up things move up oh those should combine those should combine to be an eight nope nope but those combine to be an eight Oh something is wrong oh I must be looking the wrong direction I must be actually because I'm doing stuff backwards so actually that's fine I'm doing it backwards I could really think about this but I have a feeling that I just wrote the code backwards which is fine I can go backwards let's do this now those should combine to be a four ooh oh no this is all wrong all wrong all wrong all wrong oh just return the array then who cares yeah let me go back to that that's yo this is gonna be a backup moment cuz I instead of doing this so let me actually just say return the row even though it's the same array I can return a reference to itself and that's going to fix it now here's the thing this is I don't think this is working so those two should combine to be a four they're not at the moment and something weird is going on so let me look at my code again I plus one no okay hold on if I'm going through it backwards I started three and I want to look at three and two then I want to look at two mm yeah this is right so hold on okay these move up so hold on okay I need to I don't know why I'm being crazier I need to I need to do some tests here so this is actually my algorithm is correct according to this I think I have not been very thoughtful right my algorithm is doing what I wanted to do the combined algorithm is doing this correctly so why is this not working it's probably because I am drawing this not matching the way that I'm actually thinking of it so how can I think about that like what if am i actually like hold on mmm yeah I'm reading the chat I plus one of that bathroom before a 2048 like this is correct so am I going backwards and what I actually need is your combination is backwards till you set the wrong one to zero really oh because I have it because I'm reversed switch the rows line six everyone's saying that the same thing which I think you're right okay all right hold on let me let me four let me try to make some continuity formats yeah let me check let me let me do something smart here hold on let me do something smart here and check my actual combined function whoops sorry everybody let me do something smart here and try to actually check my combined function like this should give me that's correct that's correct so these are correct so I'm doing something goofy here in the way that I'm rendering it and I think because I have everything flipped thank you to the chat for telling me this I think this should be zero and this should be a plus B let's see if that fixes it okay I hit the spacebar whoops and things move up and things move up and things look oh come on give me something to combine so why is it not combining it's combining in the wrong first combine then slide your combination is backwards still you set the wrong one two zero zero four two two should be zero four four zero I should do a matrix you were right just slide it then combined and slide oh it's working I just need to slide it again no because those these four and four should combine so everything's moving up but it did then that's so weird I'm only checking the adjacent spaces combined combined only if elements are one next to each other I know now this works I just think that I'm do the combined tests in the console again okay combine 0 for 2 ah right that's why I had it this way originally now combine is that's what I want it to be because these two should combine right and then I do slide again and this comes over right then I want to do slide of 0 4 0 4 oh it's going the other way slide goes the other way slide goes the other way combined goes the other way ah ok Mathieu back all the way up yeah okay alright alright let me be tried let me try to be smart about this here and let's try to do some work in the console so if I say combined 0 4 2 2 that's right 0 4 2 2 those two get combined now I need to slide that slide zero four zero four and that's lit the other way so I'm combining the opposite way that I'm sliding which is definitely a problem so maybe what I should do is just slide the other way around which would be let me think about this I could just reverse it right but that's probably a bad idea what I should just do is right I could no no no I can just say zeros can cat array right I could just put the zeros on the other side yeah that should do it right so now if I say combine 0 4 2 2 0 4 0 4 then slide 0 0 4 4 ok this seems right now so now hit spacebar 8 yep they've slid down 2 4 2 2 2 4 yep yep okay this is working now okay now I'm sure there's going to be lots of scenarios that aren't correct so what I need to do also is after I combine where we need to slide again right because and so really what I what I kind of want is I need a I operate row row equals operate on the row so let me make this one function where I get an array and I say Rho equals slide Rho equals combined Rho equals slide and then return row so I just want to do this in a function I'm in some ways this is kind of silly and what I'm doing here but I just want this to be a separate function so I can call it myself so now up sketched out 48 returned I forgot my R okay so now what I want to do is I want to say operate on 0 0 2 2 that should now be 0 0 0 4 operate is not defined I didn't refresh I is not defined Oh silly me these are no longer grid index i these are row okay we're we're moving along here operate all right that's good okay operate that's right now here's what's going to be wrong right this now should be 0 0 4 4 is that correct so I need to do it one more time but I need to be careful because this should not go to 8 so how do I consider that so how do I consider those two as different scenarios I mean certainly right if I just run this again it can only happen twice because there's only four spots but this isn't going to be correct because like this oh I didn't did i refresh this gave me the correct response but this is going to give me the incorrect this should be zero to four this would be zero to four four and I got zero to zero eight because the four and the four combined me I am so me is telling me that this should be zero four zero four I don't think so wouldn't it it would all slide together it should be zero four zero four well that's easier how do I let's look at this game for a second yeah no zero zero zero four okay good sorry okay so this is correct but how do I protect I need to do combine yazi row zero zero four okay so I suppose what I could do is the second time I do combine alright the second time I do combine I could start from the secondtolast spot right just start from the secondtolast spot or do combined twice before sliding that's an interesting idea well this actually do the trick so let's say operate two four two two zero two four four that is correct Oh interesting can anybody let me think of I think that actually worked are there any other scenarios that wouldn't work like operate zero two two four let's try this one this should be zero zero zero four oh that's not right oh is that or is this correct this is this wouldn't work right this should give me zero zero four four right it is zero zero four four so the break so actually am I just being silly and I just need to do combine once but get rid of the break and so let me think about this look it's look at the combine if I get rid of the break ah so I think here's what I could do so let's this is I think this is it oops this is what I think I can do let's say I have this is the case that's a little bit weird I have zero for two if I do this and now try to combine again and then slide these won't go together but and if I do this then I this should give me zero four zero four and then slide they will go together so I think I'm thinking this through I think that I can actually in you I it get rid of the break and just come back all combined once and call slide again after that's correct that's correct blows another one of my scenarios and that is correct the break is so silly I thought I was being smart by getting out of there but actually I just need to combine everything and then slide everything hahahaha okay wonderful I I think we're just about kind of done right so now I need to oops uhoh what did I do rose not to find a key pressed okay wait wait I messed something up row o equals operate Oh a little bit of a operate on grid index I so this gets passed in okay hey welcome this isn't what did I do now slide combine slide wait what just happened oh to be great hold on okay okay hold on hold on let's actually look at it now oh yeah I messed something up where's that line 38 oh look at silly me these are grid index I and down here I'm passing it into row so they're row here very silly thing that I've done here okay so now I hit space yep this to me is the behavior of the game now here's the thing yeah here's the thing I shouldn't be adding numbers if nothing moved so one thing I have to check is if anything moved so one thing that I might do is right here I might create what I what I think I'd like to do is let past equal copy grid so let me make a function copy grid we're past equals this is very silly but I'm just gonna do this past equals the new a new twodimensional array and then our copy new no no grid extra I'm gonna call it extra extra equals a new copy then I'm just going to four I'm going to use my nested loop which I have somewhere else I'm sure I could just you slice or something but I just don't have it within me right now 2048 at i J equals grid i J okay so I'm just and then I'm going to say return extra so that's just a total copy of the twodimensional array because sorry spaced out for a second because my phone was buzzing someone's telling me that 2 to 4 2 is wrong that's correct isn't that what it would do the game 2048 it's gonna combine those twos and slide everything over yeah okay where am I looking for I have too much code oh yeah okay oh so so past so past is past is now a copy and now this is the new grid so I can check to see if anything changed so I can say changed equals compare copy and grid okay so I'm gonna write another function this is all very silly but called compare where I have two different matrices and I'm gonna say if a does not equal to be returned something changed return true so true means something change I'm gonna check every spot as soon as something's not equal something moved and then if I get all the way to the end I'll just return false so now I should only add a number if changed now add a number okay here we go oops so p5 doesn't like that I call it something copy so I'm gonna call this copy grid and I'm gonna do this so now I should be able to say whoops OOP cannot read property zero of undefined at compare sketch dot J's line 37 so a and B in compare oh and this is called this should be passed this is why shouldn't use the word copy this is passed that should be passed oh yeah no nothing's moving so I don't get a new number nothing's moving so I don't get a new number got a new number got a new number got a new number got a new number nothing's moving got a number all right so ends part 1 of 2048 where I have the entire game mechanic but only for going in one direction one direction I'm gonna take a short break and have a part two to the 2048 challenge where I deal with the rotation of the matrix I and I hope you enjoy watching that part and then the game will be finished ok what time is it it's 450 I don't have a lot of time left people I'm pretty sure this is correct I now have the entire correct game mechanic the rotation yeah can anybody give me a combination that they think will not work for example that's correct that is correct that is correct two two two two two two four eight two two four eight that is correct so I'm pretty confident four four eight sixteen I think I'm pretty good yep that's correct also eight eight all right let's try that one p8 that's correct that is correct all right I've got it all right everybody 0 0 I'm pretty sure that's gonna worry about mints the last one I'm gonna do that is correct also all right I think we're in good shape here now so I can do this welcome back I'm here trying to this is like the most painful time in my entire life and I can't believe that you're watching this but you are I'm trying to make the game 2048 and I have gotten so far as to make the game work but only in what's the One Direction song somebody tell me only in one direction which is down so if I hit the spacebar everything will move down now it would be really nice for you to be able to see an animation to have a sense that what it's really doing and then we haven't seen anything combined yet let's come on get something to combine there we go but you can see that everything's coming down and the numbers are combining when they're equal this is exactly like how the game 2048 plays of course this is much nicer to have a nice animation and different colors and all that sort of stuff but what I need to do is I need to be able to go in any direction so let's at least double check here and keep rest that I can say I think if key equals up arrow let's let me look in I can't remember what the constants are np5 up arrow is something yeah it's 38 so and what if I say console dot log key ah so I think I probably want the key code because the key it's giving me it's not giving me the number I think I want I think I want this yeah so key code is what I want I want key code equal to up arrow and I can use a switch statement I'm not going to down arrow so down is what it's doing already let's just try to get up and down so if key code equals down arrow do nothing to nothing if key code equals up arrow what I need to do is just flip everything right so I can go through and I can a flip grid equals flip grid right I just want to flip the grid so I can write a function called flip for any twodimensional array then I'm gonna go through all four rows and I'm just going to say grid index I if I say dot reverse on an array does it return in a new array let a equal one two three four one two three four a dot reverse so it actually reverses the array so it operates on that same array so I could say grid index I reverse I can say let flipped equal false flipped equals true so I want to flip it then I want to I'm just gonna let I'm gonna sue Mike only gonna press the arrow keys and then I'm going to flip it again so and I do I wonder I don't need to return it I just need to flip it so I don't need to so I'm gonna flip the grid and then if it was flipped flip it back so this should be now this is just like for up and down this should work for up and down let's see if this works little little crazy thing I've done here down whoops down okay down let's go up up down up down down up down down up down up this is totally working down up down up down and eventually the games going to be over because I don't have anymore okay so that works whoo so now I need else/if key code equals right arrow now I need to rotate the grid grid equals rotate the grid so I need to rotate it let's rotate the grid I think I want a new array I think I want a new so I'm by the way I want a function this is very silly I want to have a function and put it all the way at the top called blank grid and what that does is it just returns this because I need to do this quite a bit just give me a blank one so now I can say grid equals blank grid yeah I love that and then somewhere else where I did the crazy copy thing extra equals blank grid so that's gonna be much nicer because what I want to do when I rotate it and I definitely I need to call it rotate grid and I should probably be consistent here it's a flip grid with my naming flipgrid flip grid and I definitely should break this up into different files and maybe organize my code boy I got a refactor this stuff flipgrid change this to flip grid now I'm going to write one called rotate grid now this shouldn't be too hard I should just do a nice little nested loop and I should get I should create I should create a new grid is a blank grid and then in the new grids I J I take the old grids J I and now so what this would do is now I want to rotate the grid and then I'm going to have to unrotated get I've just rotated a few more times so right so let's think so so I'm gonna have a variable called let rotate equal false rotated so this is rotated equals true then what I'm gonna do if rotated then what should I do I just want to rotate it through a few more times right rotate it once twice one two three only three more times I'll get back right that's brilliant coding right there let's see if this works on this so first of all let's just say I have a let a equal new grid a blank grid whoops okay so a is this and I could say console dot table a so you can see that's what it looks like and I'm gonna say I want it actually let's just do this so what am I looking for at grid so console table grid maybe I shouldn't bother trying this debugging I should just do it then I'm gonna say rotate grid grid and console dot table that I hold on all right um okay hold on let's see what happens not to let you edit that whole part out let's see what happens so I'm gonna hit up whoops ah let me just do the up and the down still clear this what is going on hold on up why oh look Lee's what I was last typing if I had clear just hold on fighting with the computer for no reason all right let's give this a try up down up down those work what did I express eight right arrow okay got an error cannot set property undefined at rotate grid sketch js9 71 rotate grid new grid is a blank grid i J equals grid J oh look at this that's really bad that's really bad J okay let's try this again down up down up right okay got another error cannot read property undefined a copy grid sketch digest line 53 copy grid extra equals blank grid is my blank grid function not working Oh return no that looks good copy grid grid catch line 53 so what did I do here hold on a sec care into this can I write property 0 I'm going to sketch the chest line 53 what did I miss here let's look at this ah grid is nothing here where am i calling copy grid where I'm sending it nothing past equals copy grid grid that's the only place ah rotate grid is messing something off rotate grid does not return the new grid there we go return the new grid rotate grid thank you very much ha this is totally working up down up right now I can't go to the left so now I need this is gonna be this is no problem that watch this this is total insanity but else if key code equals left arrow now grid equals rotate grid grid I want to rotate it and then flip flip grid grid equals flip grid grid and you know what I should just always return I should always return a reference like even though like because it's just too confusing to keep track of which functions do which so I'm gonna go back to my flip crit function scrolls girl's girl and just say return grid so now if I'm going to the left I could rotate it then flip it then and grid equals flip and so here not only is it rotated but it's also flipped so then I can flip it back and rotate it three times and I should be good now here's the thing I should only be doing this if I press one of these keys so I'm gonna make a variable called played equals fall and I'm gonna say played equals true and again this can really be refactored oh really I should do with part three of this to refactor this probably but all of all four of these keys I am playing and so now if I have played then I can do all this crazy nonsense if it's changed at a number otherwise console dot log game well it's not game over because I could it's only if I have no moves left so huh I'll get to that a little bit okay let's see what's the chance oh oh yeah I could use else played is true right I can assume that I've played but in all other kids I can at least make this a little better in all other cases right if it's some other key plate is false so I'm gonna assume that I've played and now let's see get down whoops down okay down down is combining to the right to the right to the right to the left to the left up to the right to the right to the left down to the right down whoops I don't know what I just did to the right I I'm pretty sure this is actually working it actually is doing what it's supposed to do and hooray great okay so this is the functionality of the game there's gonna be a part three this is three three parts part three I'll add the score and determine if there's no moves left okay so that's what I need to do and I think that what I can do is maybe I'll it bar three I might refactor a few things I'm getting some good suggestions from the chat okay all right thanks for watching this so far Wow think I might have made 2048 by accident somehow okay that's a transpose not a rotation yeah it's all switch it to transpose then what do I need to do how does the score work in 2048 make the 64 okay let me actually get to a point where I can't make any more moves see if I get an error whoa just happen there yeah the font size is gonna be a problem once they get to 128 I think all right I just want to see can i I want to get stuck I think it's giving me I get a new number every time I move right let me try to play this poorly oh my got 128 yeah I think this is corrected so without the animation it's like really weird can anybody see any mistakes you can't tell what I'm pressing is the problem I want to get stuck but is it should I be able to get you can get stuck before the board fills up that's what I don't understand I seem to only be able to get stuck if yeah the newest number newest number could be a new color that's a good idea okay every all right so so the two things I need to add let me just play the real game here for a second like poorly no yeah I guess you're only gonna lose when you lose the whole board is filled up right because otherwise I could always move up and down okay so I think I think it's playing correctly yeah game over so let's look at this okay let me find the score the user score starts as Iran is incremented whenever two tiles combined by the value of the new tile okay the game is won when a tile the value 2048 appears on the board when the player has no legal moves there are no empty spaces and no adjacent tiles with the same value okay so this is should be easy to figure out so okay so let's make a list of some things to add in part 3 the score is gonna be easy the game being over it shouldn't be too hard adding a fill I think I'm not gonna do the animations because that's not I could come back and do that another day but I'm happy to add the color I need to deal with the how does the real game deal with the font so I need to deal with the font size so the font size should be dynamic okay I am so exhausted time 515 I got it goes really soon okay part three of my 2048 coding challenge so what am I trying what do I got here I actually have it's very hard to follow without animations and not maybe I'll come back and add animations in another part but I have the full game mechanic available to play right now so the things that I want to add in this video are number one score number two a test to see if I've run out of moves to say game over and number three I want to be more thoughtful like if I could ever play it well enough to get to 128 you would see that it wouldn't fit so I'm just like randomly making moves right now so I need to deal with the font size to make it more dynamic so let's try to do some of that stuff so according to the game rules I'm going to say let score equal zero whenever you combine two tiles your score goes up by the value of that combined amount so we can say here wherever I have my combined function and again this would be so helpful to organize this so right here whenever I combine if a and B I can say score plus equal a plus B all right and why don't I say row index I just for the sake of so I added those to the score goes up by that much now let me just really really quickly in the body add a paragraph I D score and again I'm not going to be this is a very very early crude way of doing it but I'm just going to in using the p5 Dom library in the draw function I'm going to say sketch I'm going to say select score dot HTML score so now should see there's the score and let's um let's just go and say something really silly like style body text size set where's the font size text size 32 point just so it's a little bigger and then close style that'll CSS this is me adding CSS to the code very poorly cuz it's not the font size of font size no how come I don't know how come I don't know CSS anymore Oh Pete oh there's no coal in here there we go oh look at that let's just do P hold on this is what always happens to me Dom manipulation horror just ignore me just pretend I'm not even here don't watch me okay let's make that score a little bit bigger and I'm just gonna say style just gonna put it in line style here style equals font size 32 point that should do the trick there we go and now okay so now I should have the score I'm pretty sure this is working correctly as it's supposed to so now I have my score all right boy am i doing great so I added a score that's wonderful now I need to add a check to see if I finished playing the game so how do I do that so in the main code and by the way this is this is the other thing that's terrible I don't want to have a draw loop here I should really just be I should be update canvas I should in setup oh look at all this code this is horrific I should say no loop and again I'm gonna need to animate later so I'm gonna need the draw loop back but just for right now in keep rest where I say if the game was played I'm gonna say update canvas so now and I should to it at least once at the beginning update canvas so now at least performancewise I'm not like spitting the browser sprinting that using the processor over and over again to redraw the same thing okay so now I need to check when I've played I need to right here I need to sue is game over so I'm going to write a function I'll just going to put it on the top right now function is game actually we kind of know here's the thing the game is over when if the board is full and nothing can be combined so actually all I need to do is see if the game is over if there are no if the book the game is over if there are no numbers next to each other that are identical and the board is full so there's no zeros so I can write a function I will write this function is game function is game over and I'm gonna say I'm gonna do a loop I'm gonna get my double loop which I have everywhere and for each spot I'm gonna I'm gonna assume game over is true and I'm gonna for each spot if the grid I J equals zero then the game is not over return false so if there's a zero the game's not over because I can move if grid I J equals grid I J plus 1 so I could check everything to the right and just go 0 through 3 and I'm gonna have to check the four for a zero I think if it's equal then something can be combined return false if grid I J equals grid I plus 1j j then also the game is not over so the game is not over and really so the game is not over if there's any zeros or and so I'm gonna check every single spot but I'm only going to check the edges if I is not equal to three and there's two that are the same or if J is not equal to three and they're to the same so this should tell me if I get through every single spot and it's not equal to what's to the right of it or to blow it or it's not a zero then the game is over and so if I get to the end I'm going to say return true I don't actually need this boolean variable at the beginning this is my ridiculous function now to determine if the game is over and where did I check it here so I'm gonna say let game over equals is game over and if game over console dot log game over okay let's see if this works up sketched a test line 13 has an error if J oh I'm missing a curly bracket somewhere I'm an extra parentheses there we go okay here we go let's take this again line 21 I have an extra bracket here now okay let's try to make the game over I'm just gonna rely on my random whatever the game was not over it's got to be over eventually there we go uncut type error cannot read sketch such as line 13 property 0 vinum undefined so I got into a funny place here so I just now the game is over but I got an error when the game ended if J is oh whoops look at this I got to be checking J here and I here I did this in like a weird order I want to do I first and J second so that was a mistake what I should I should build in something to test it without having to like go crazy playing it but you know eventually I get to the game over game over okay it actually tells me the game is over because there are no more moves left okay now we need to let's add a little bit of color and change the font size so where do I where do I draw the text here so text size should be actually a function I'm going to map the value which goes between 0 and 248 and when it's 248 it should be 16 point and when it's 0 it should be 64 so it's bigger maybe it's like 16 point when it's 2048 so let's try this why is the font size not changing is it follow its font size not text okay oh and else has to be this no its text size but I got to use the variable is it font size I don't know apparently I don't know P five font size is not a function font size is not a function the value map the value text size how come that's not working what did I do text sighs losing my mind here value goes between zero and 2048 when at zero at 64 yeah I know I need to like but it should be slightly different oh it is slightly different it's just so yeah yeah yeah no no that's kind of what I want can I get a bigger number hmm oh I need to choose my scaling is crazy no wonder okay I need to use it's just like it's barely changing as I'm going from zero to 24 okay okay so this was kind of a nice idea but now I'm realizing that basically I really need to shrink it exponentially as it goes down so I really should take like the log of the value maybe I could and then that'll go from zero between the log of zero and 2048 will this do the trick for me to dip logarithmic scale yeah you can see it's getting but ultimately yeah so this is better using logarithmic scales a little bit nonsensical because really I should just I have a better idea like let's get rid of this for a second let's just let's just convert it into a string so this is be making a string from the value and then I want to get the length of that string and then the font size text size should be the I can make an array right sizes equals okay so if it's the if it's one I wanted to be 64 if it's two I want it to be 64 if it's three maybe 32 and if it's for 1024 or 248 let's make it 16 so now I just want to say sizes just based on that length so I could just see how long is the string and then pull one of these from the array based on the length is now an index into that array and that should give me up to play it for a little yeah 16 which is 200 this it would be 0 so length plus or minus 1 apologies for that so now if I get to 3 if oh I have to get to ten you're gonna have to trust me on this this is gonna require a lot of editing so I'll come up back in a minute play this I actually I'm not even paying attention to like how I'm playing it I'm just I've gotta get those 264 there we go 128 okay oh I'm back because I finally got a 128 and you can see the 128 is smaller oh boy you could do so many better ways of doing that okay so now you know obviously I couldn't map a color to the background I could do animations but this is really it I now have essentially the full game I have a mechanism for trying to figure out you know I could map a color to each number easily by having some kind of lookup table but I it's some point maybe I'll come back and try to animate this but please please make your own version of this improve it this is the end of this coding challenge I have made 2048 it's not what it's called goodbye log base 2 is what I wanted to do yeah I know I could just insert the values into the grid would make a lot more sense let's play this for a little bit more game is over I don't know at least I made it whether this can be made into something that people could watch I have no idea but at least now I'm playing it a little better it's actually really hard to do this without the animation the animation really helps you kind of under see the board better but it'll be fun is to have an AI play this which I don't think here we go 128 got 128 faster now should have done polymorphism lerp the background color it'll be much nicer looking yeah yeah yeah colors would be awesome I didn't add color uh I'll just add color for you all here where do I do this fill to lerp color between I don't feel like doing this right now goody I gotta go it's 530 I gotta go so this is all I got to today color the new numbers that are coming Oh color the new numbers that were coming no Benjamin I do see your comments how about refactoring the code I would like to do that I'm gonna have to come back explain log base 2 and do color these are all such good suggestions I'm gonna have to come back another time I will publish this code it is a monster and can we get early access to the code yes so what I'm gonna do right now is I'm gonna go to I'm just gonna do this in a ridiculous way that if I had unit tests it would I'm gonna go to coding challenges and I'm just gonna go and grab somebody can quickly pull request renaming this correctly and everything actually and I can say this will be coding challenge if it actually ever makes it to something it'll be coding challenge what 93 what's the last one right now no 94 was doubledouble perceptron I mean double pendulum on my brain is so dead so to be 94 whoa coding challenge 94 2048 coding challenge 94 commit directly to the master branch so the code is now on github yes so we'll see we'll see yeah 534 I got to go everybody all right thank you for watching I appreciate you be here with these live streams I don't know what I'm doing anymore I will I would consider doing a part for for this which would adding color and animation so I will think about that math sure I will message you there so while I'm thinking of it I could possibly on Tuesday come and do some cleanup for this so if like we need to do anything of like some intros and outros or like figure out some things to like help make this actually a coding challenge that could be edited then I would be glad to do that so thank you everyone I hope I won't be here next Friday there will be no live stream next Friday I will be working hopefully on that neural network JavaScript repository so stay tuned follow that and oh that's cool a greedy agent one that chooses the move with the most points where the taichi's is random like a weak bond is saying that would be a fun thing to add thank you everybody and yeah make the sizes of hash great suggestions and I will be back next week the code should be there now yep there it is 94 okay goodbye everybody and when will I do neural networks um I will come back I mean that I have a long list of stuff to do with that topic and I will get to it as soon as I can so thanks for watching and I'll see you in a future live stream
