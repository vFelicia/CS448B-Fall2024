With timestamps:

00:00 - hello welcome to another video which is
00:06 - part 2 of my linear regression tutorial
00:10 - and in this video I am going to take
00:12 - this beautiful blank canvas that is the
00:15 - web browser and make linear regression
00:18 - happen in it before I begin coding I
00:21 - just wanted to mention if you just
00:22 - jumped into this video I walk through a
00:25 - full explanation of what linear
00:26 - regression is and the formula that I'm
00:28 - about to use in the previous video so
00:31 - check this video's description to link
00:32 - to that prettiest previous video
00:33 - otherwise keep watching them and get
00:35 - started coding so first thing that I
00:37 - need is I need to boy this is always
00:40 - more complicated than you think could be
00:43 - so simple okay I did some thinking there
00:46 - for a second and we have to do a little
00:49 - more thinking if you see the wheels
00:58 - turning actually I was just kind of
01:00 - overdoing it there like I was thinking
01:03 - about you know locating for dinner ok so
01:06 - here's the thing that happens a lot in a
01:09 - machine learning and computer graphics
01:12 - this thing that I've drawn over here is
01:15 - sort of as an arbitrary scale there's a
01:18 - temperature which I botched by doing it
01:20 - in Fahrenheit which is like the worst
01:21 - measuring system ever I don't want to be
01:23 - insulting it just you know and
01:25 - Fahrenheit you're wonderful too you have
01:28 - many good qualities
01:29 - just like Celsius I love all my
01:31 - temperature systems anyway um but let's
01:36 - say I wanted to actually graph this data
01:38 - you know what do I have I have a canvas
01:40 - that I'm going to draw in the web
01:42 - browser which you know has like 0 to 600
01:45 - pixels and 0 to 400 pixels 0 zeros in
01:48 - the top left it points down it points to
01:49 - the right I think I need to nap my pixel
01:52 - space so what I mean by that is I want
01:55 - to have my pixel space represent 0 0
02:00 - being in the bottom left and I want the
02:03 - x-axis to be kind of go from 0 to 1 and
02:05 - the y axis go from 0 to 1 so I need to
02:07 - have kind of scale a data scale and then
02:11 - the
02:11 - a graphic scale and I'm sort of making
02:13 - this up so it can be anything but when
02:15 - you go and apply this with real data you
02:17 - need some way of mapping from your data
02:18 - to pixels if you want to graph it you
02:21 - know a lot of systems for doing data
02:24 - visualization if you're using R or d3
02:26 - you know or some Python graphics I'm
02:28 - going to do this for you automatically
02:30 - but we're in JavaScript land we're gonna
02:31 - use p5 or and do the math ourselves okay
02:35 - okay so so I'm going to first Lebanon so
02:40 - I'm going to make a canvas and I'm going
02:44 - to make a canvas that's 400 by 400 and
02:46 - I'm going to draw the background with a
02:49 - gray value of 51 okay wow that's a giant
02:52 - canvas okay that's better so I'm gonna
02:56 - make it a square just to make things
02:57 - simpler right now and then what I'm
03:00 - going to do is I'm going to say
03:04 - mousepressed and whatever I press the
03:09 - mouse I'm going to create a new data
03:12 - point so I'm going to say x equals map
03:14 - mouse X which goes between 0 and width
03:17 - to a value between 0 and 1 so this is me
03:21 - mapping the x values between 0 and width
03:23 - to 0 and 1 because the pretend data if
03:26 - this were real data I'd want to know
03:27 - what the actual range weather would be
03:28 - getting it from mouse click but I'm
03:30 - going to save our y equals map mouse Y
03:33 - from 0 to height now however I'm going
03:35 - to say from 1 to 0 because I want to
03:39 - have the bottom of the window be 0 right
03:42 - if I come over here this is 0 0 right
03:45 - over here so that's height which is 0 0
03:48 - is 1 ok so then what I'm going to do is
03:54 - I'm going to say var data equals creed
03:57 - I'm going to use the p5 vector object
03:59 - just to store both of these things and
04:01 - I'm going to say point call this a point
04:03 - and I'm going to make an array called
04:06 - data and I am going to say data dot push
04:10 - point so what I've done here is every
04:14 - time I click I create a data point based
04:17 - on where the mouse is
04:18 - so what do I want to do in the draw
04:20 - function you know it's a little
04:24 - unnecessary to have an animation loop
04:25 - here because I could potentially only
04:27 - redraw but whenever I have a new piece
04:29 - of data what I'm going to do here is I'm
04:31 - going to I'm going to iterate over all
04:37 - of the data so VAR I equals 0 I is less
04:40 - than data length I plus plus and now
04:46 - what I need to do is do the reverse
04:48 - mapping so when I put the data into that
04:50 - array
04:51 - I want to map it to the appropriate
04:54 - range and when I get it out and you can
04:56 - map it back to the pixel range so I'm
04:58 - going to say VAR x equals map data index
05:01 - X which has a range between 0 and 1 to
05:04 - between 0 and width and I'm going to do
05:06 - the same thing for y map data dot Y
05:11 - which has a range between 0 and 1 and
05:13 - map that to arranged from height down to
05:17 - 0 if you're if you haven't seen this map
05:19 - function before I have a whole video
05:20 - just on what is map so you could go
05:23 - child link to that in the description as
05:25 - well then I'm going to draw an ellipse
05:27 - at X comma Y that's you know 8 pixels by
05:31 - 8 pixels I'm going to say fill 255 and
05:34 - Stroke 255 and now what we should see
05:37 - here is just the visuals that I want
05:39 - which is wherever I click I get a point
05:43 - so you know this would be a lot simpler
05:47 - without that mapping but the mapping is
05:49 - going to be useful for us as we start to
05:51 - try to compute the formula for the line
05:54 - with the least squares criteria all
05:57 - right so what's the next thing that I
05:58 - need to do we need to calculate M and B
06:00 - so when should we do that so let's make
06:04 - a global variable and let's call it I
06:07 - think I could call it M equals 0 and VAR
06:11 - b equals 0 and let's actually make m
06:14 - equal 1 so let's see if we have an admin
06:18 - of b write the formula for a line is y
06:21 - ok so let's let's uh um what are we
06:27 - going to do okay I got it I got it I got
06:30 - okay so here's the thing I want to draw
06:32 - that line so how am I going to do that
06:35 - well I could just take the x value here
06:38 - and then the x value at the end
06:41 - calculate the corresponding Y values for
06:43 - both of those points and then draw a
06:44 - line between them so let's do that
06:46 - so let's write a function called draw
06:51 - line and what I'm going to do is I'm
06:54 - going to say var X min equals zero bar Y
06:59 - min sorry X max equals one then I'm
07:05 - going to say Y min equals M times X min
07:09 - plus B and Y max you know this is really
07:15 - just like x1 x2 y1 y2 you like I'm
07:21 - really trying to get two points x1 y1
07:23 - and x2 y2 so in fact this would make
07:29 - more sense to write it this way y1
07:32 - equals M times x1 plus B and y2 equals M
07:39 - times x2 plus B and now all I need to do
07:42 - is say stroke 255 well I could make it a
07:46 - different color just like I had two
07:47 - different colors market Curtis and I
07:50 - could say line x1 y1 x2 y2 only I can't
07:55 - write what's the problem I calculated
07:58 - this line with my units my scale my
08:02 - mapping of the data of having this range
08:04 - between 0 and 1 and so I need to unmask
08:08 - it to the pixel stuff so this is a
08:10 - little bit awkward but let's just do it
08:12 - this way let's say X 1 equals map X 1
08:16 - which has a range between 0 1 2 between
08:18 - 0 and width and by the way I could just
08:22 - multiply it by width but I'm keeping the
08:24 - map function in here because you might
08:26 - have a very different scale Y y1 is the
08:31 - same thing but go from height down to 0
08:35 - and then we're going to do the same
08:36 - thing for x2 and y2 are you asleep yet
08:44 - and now we're going to draw so we're
08:45 - going to calculate those values map them
08:47 - to pixels and then draw the line and so
08:50 - let's uh in the draw function
08:53 - let's have draw a line so now oops
08:58 - uh I have an error line 50 looks like I
09:03 - guess I have an extra bracket somehow
09:05 - whoops y2 is not defined to draw a line
09:09 - what did I mess up here okay this should
09:12 - be y2 thank you very much yeah so you
09:15 - can see there's the line so I mean
09:18 - that's what the line is always going to
09:19 - be so now I know that if I have the N
09:22 - and the B for the formula for a line I
09:25 - can visually represent that line now all
09:28 - I need to do is use this formula here to
09:35 - calculate N and B based on the actual x
09:37 - and y values let's do that okay so let's
09:42 - remind ourselves so let's do let's write
09:45 - a function and let's call it linear
09:48 - regression I want to talk about where
09:50 - the term regression comes from French
09:53 - thing regression to the mean you can
09:56 - look it up ok so what are we going to do
09:59 - okay so if we look at the formula and
10:01 - this I went through all of this from the
10:04 - previous in the previous video where I
10:07 - talked about this formula something that
10:08 - I really need is X bar and y bar and X
10:12 - bar is the mean or the average of all
10:14 - the X values and Y bar is the mean of
10:17 - all the Y values so adding them all up
10:19 - together dividing by the total number so
10:21 - I might as well add those up I mean get
10:24 - a calculate those first so the first
10:26 - thing I want to do is say X sum equals 0
10:29 - and we're going to go through all of the
10:33 - data I'm going to iterate over all the
10:35 - data Y sum equals 0 we're going to say X
10:41 - sum plus equals data index I dot X Y sum
10:49 - plus equals data in there so we're
10:51 - adding up all of the excise and all the
10:54 - Y values and then we're going to say X
10:57 - mean equals x sum divided by data
11:01 - lengths and the same thing for the Y
11:04 - mean so this is 4 this is the average so
11:07 - we now have the average of all the X
11:09 - values and the average of all the Y
11:11 - values now what we need to do is we need
11:14 - to calculate the numerator and the
11:17 - denominator let's do the numerator first
11:21 - so the numerator is so first I need to
11:25 - I'm gonna have to sum up some stuff here
11:28 - so what am I definitely need to loop
11:31 - through all the data but we can doing a
11:33 - lot of looping through all the data so
11:35 - I'm gonna say numerator equals 0 so the
11:38 - numerator is going to add up all
11:40 - together each data points X minus X mean
11:46 - times each data point and you know what
11:52 - I'm going to do I'm going to just use
11:54 - some extra variables here which I think
11:58 - will make things a little cleaner just
12:02 - we can look at the formula this is now
12:04 - the numerator right this is exactly this
12:11 - is in code right here exactly what's
12:14 - written in the formula here it's adding
12:17 - up all of the X's minus the average of
12:20 - X's and all the Y's - so amount of Y
12:23 - multiplied together ok so we've got that
12:27 - and now all we need to do is we also we
12:30 - label to the denominator at the same
12:32 - time why not write denominator can I say
12:36 - de n for that we're going to add up the
12:40 - denominator is X - x mean times X - x
12:46 - mean it's just that added up squared and
12:49 - then M equals Oh M equals a numerator
12:58 - divided by denominator looks denominator
13:02 - so let's think about this could we have
13:05 - an issue where the denominator is 0 you
13:10 - know it's going to have a wish
13:11 - protect against it if like if all the
13:13 - x-values were the same then the average
13:15 - would be that value and then the
13:17 - difference between all the values and
13:18 - the average would be zero but let's not
13:20 - worry about that too much right now okay
13:23 - now okay now once we've done that we can
13:25 - now say B equals y means minus M times X
13:32 - B right is that right B equals y me
13:38 - minus M times X mean which we get
13:40 - because y equals MX plus B so now that
13:44 - we have that we've got everything so I
13:47 - should be able to we're going to have a
13:49 - problem this is actually going to happen
13:50 - instantly so if there's this is only
13:53 - worth doing if there's more than one
13:56 - data point so I think we should say here
14:00 - in so where is in draw we're going to
14:06 - say if data length is greater than one
14:10 - then calculate the linear regression and
14:18 - draw the line all right let's give this
14:21 - a try Hey look at Matt that was amazing
14:28 - nothing ever works in the first try this
14:34 - kind of makes sense right you can see I
14:36 - can add a bunch of points and it's
14:38 - always fitting that line to the points
14:41 - this is linear regression interactive
14:44 - linear regression in the browser it's
14:46 - probably not anything I hear should be
14:47 - too excited about but it's making me
14:49 - happy right now okay so this this video
14:52 - is really complete we see that I have
14:54 - this linear regression that's calculated
14:56 - now here's I think what can you do with
14:58 - this so first of all you might think of
15:00 - some more interesting interactive ways
15:02 - of playing with the data whether it's
15:04 - being able to click and move these
15:05 - points around drag and drop randomize
15:08 - all the points I'm sure you could come
15:10 - up with some more interactive
15:11 - possibilities but one thing that I think
15:13 - is really important to talk about is
15:15 - whether it actually makes sense to use
15:19 - linear regression a linear regression
15:21 - model
15:22 - your data okay so let's think about a
15:25 - scenario where you wouldn't worry where
15:29 - you wouldn't all right hair I am where
15:31 - you wouldn't want to use linear
15:33 - regression so what if your data happened
15:36 - to kind of look like this so I could fit
15:40 - this present get better as a multicolor
15:43 - I could fit this with a line and I might
15:45 - still get even like the same sort of
15:47 - line but actually if we really looked at
15:50 - this data I could see that hi you know
15:52 - what this data I could fit a curve to
15:55 - this data I could fit something like y
15:57 - equals n x squared plus B or even plus
16:02 - you know M 0 x squared plus M one times
16:06 - X plus B and I'm probably using the
16:08 - wrong I should I should start using this
16:12 - is b0 b1 b2 right so if you can I could
16:16 - essentially create a polynomial formula
16:18 - a formula that has not just X but x
16:22 - squared and maybe X cubed or X to the
16:24 - fourth power and I'm actually going to
16:25 - look at that in a future video so I will
16:29 - do a video where I do polynomial
16:30 - regression I'm just going to use a
16:31 - JavaScript library that has it built
16:32 - into it so just to sort of demonstrate
16:34 - the idea but this is something that I
16:36 - might want to do and what's interesting
16:38 - about linear regression and this this
16:40 - has been demonstrated there's a
16:42 - well-known famous data set called Aman's
16:46 - combs quartet where let's look I'm going
16:48 - to look at these four graphs each one of
16:52 - these has the same exact linear
16:54 - regression line right you can see that
16:57 - with this data the line is the same but
16:59 - that's it does this line really make
17:02 - sense so this one it kind of does right
17:04 - you can see that it's a nice
17:06 - approximation of the data with this one
17:08 - it does but you can see it's kind of off
17:09 - because there's just an anomaly and
17:11 - maybe we should build something into our
17:13 - model to account for that anomaly or
17:15 - this one over here even the linear
17:17 - regression have that same line it's
17:19 - actually we could figure out that we
17:21 - could use a polynomial function to
17:23 - estimate that in here we got some kind
17:25 - of like crazy nonsense wary of all the
17:26 - same x-value so this is an important
17:29 - thing to realize that linear regression
17:30 - is not
17:31 - kind of magic it's not a recipe for all
17:33 - data is for all inputs and outputs but
17:37 - it is a simple model that will work for
17:39 - a lot of data data that is linear one
17:43 - way to evaluate whether or not the
17:47 - linear model is useful for your data set
17:50 - is to look at something called the
17:52 - residuals and a coding train viewer
17:57 - extraordinaire Kaede week mon you can go
18:00 - to k week bond github k weekend github
18:03 - i'll include a link to this in the video
18:05 - description created a much more
18:06 - sophisticated demonstration this is the
18:08 - same exact idea i can move these points
18:11 - around and I can kind of an randomize
18:15 - them and I can see the same linear
18:17 - regression but what this is showing is a
18:19 - residual plot the residual plot shows
18:23 - the magnitude of the difference from the
18:26 - line to the data point for each and
18:28 - every data point and if and we can
18:31 - actually up that the ants comb data is
18:34 - built into this and you can see this
18:35 - makes sense if you have a kind of random
18:38 - residual plot that's a good sign if you
18:41 - have a highly pattern residual plot then
18:44 - it's most likely that some other model
18:46 - could be useful for your regression so
18:48 - something you might consider doing as an
18:50 - exercise is researching more about
18:53 - different data sets trying to implement
18:55 - me you could find K weak ones code on
18:57 - github as well but try to make your own
18:59 - residual plot from my scatter plot code
19:03 - and one of the types of interactive
19:06 - features for importing or using
19:07 - different data sets whether they're
19:09 - colorful and creative ways can you
19:11 - explore visualizing the process of
19:13 - linear regression ok so thanks for
19:16 - watching this video I'm going to do a
19:17 - couple more videos on this topic number
19:19 - I'm going to look at polynomial
19:22 - regression with a JavaScript library and
19:24 - then I'm going to use a different
19:26 - technique to calculate only regression
19:29 - known as gradient descent and the main
19:31 - reason I want to do that is gradient
19:33 - descent as opposed to this least squares
19:36 - methodology I used here is a fundamental
19:39 - method for neural
19:40 - work based learning for learning method
19:43 - for neural network based systems so
19:45 - we're going to do that for linear
19:46 - regression which will set us up well for
19:48 - neural network stuff later
19:54 - [Music]

Cleaned transcript:

hello welcome to another video which is part 2 of my linear regression tutorial and in this video I am going to take this beautiful blank canvas that is the web browser and make linear regression happen in it before I begin coding I just wanted to mention if you just jumped into this video I walk through a full explanation of what linear regression is and the formula that I'm about to use in the previous video so check this video's description to link to that prettiest previous video otherwise keep watching them and get started coding so first thing that I need is I need to boy this is always more complicated than you think could be so simple okay I did some thinking there for a second and we have to do a little more thinking if you see the wheels turning actually I was just kind of overdoing it there like I was thinking about you know locating for dinner ok so here's the thing that happens a lot in a machine learning and computer graphics this thing that I've drawn over here is sort of as an arbitrary scale there's a temperature which I botched by doing it in Fahrenheit which is like the worst measuring system ever I don't want to be insulting it just you know and Fahrenheit you're wonderful too you have many good qualities just like Celsius I love all my temperature systems anyway um but let's say I wanted to actually graph this data you know what do I have I have a canvas that I'm going to draw in the web browser which you know has like 0 to 600 pixels and 0 to 400 pixels 0 zeros in the top left it points down it points to the right I think I need to nap my pixel space so what I mean by that is I want to have my pixel space represent 0 0 being in the bottom left and I want the xaxis to be kind of go from 0 to 1 and the y axis go from 0 to 1 so I need to have kind of scale a data scale and then the a graphic scale and I'm sort of making this up so it can be anything but when you go and apply this with real data you need some way of mapping from your data to pixels if you want to graph it you know a lot of systems for doing data visualization if you're using R or d3 you know or some Python graphics I'm going to do this for you automatically but we're in JavaScript land we're gonna use p5 or and do the math ourselves okay okay so so I'm going to first Lebanon so I'm going to make a canvas and I'm going to make a canvas that's 400 by 400 and I'm going to draw the background with a gray value of 51 okay wow that's a giant canvas okay that's better so I'm gonna make it a square just to make things simpler right now and then what I'm going to do is I'm going to say mousepressed and whatever I press the mouse I'm going to create a new data point so I'm going to say x equals map mouse X which goes between 0 and width to a value between 0 and 1 so this is me mapping the x values between 0 and width to 0 and 1 because the pretend data if this were real data I'd want to know what the actual range weather would be getting it from mouse click but I'm going to save our y equals map mouse Y from 0 to height now however I'm going to say from 1 to 0 because I want to have the bottom of the window be 0 right if I come over here this is 0 0 right over here so that's height which is 0 0 is 1 ok so then what I'm going to do is I'm going to say var data equals creed I'm going to use the p5 vector object just to store both of these things and I'm going to say point call this a point and I'm going to make an array called data and I am going to say data dot push point so what I've done here is every time I click I create a data point based on where the mouse is so what do I want to do in the draw function you know it's a little unnecessary to have an animation loop here because I could potentially only redraw but whenever I have a new piece of data what I'm going to do here is I'm going to I'm going to iterate over all of the data so VAR I equals 0 I is less than data length I plus plus and now what I need to do is do the reverse mapping so when I put the data into that array I want to map it to the appropriate range and when I get it out and you can map it back to the pixel range so I'm going to say VAR x equals map data index X which has a range between 0 and 1 to between 0 and width and I'm going to do the same thing for y map data dot Y which has a range between 0 and 1 and map that to arranged from height down to 0 if you're if you haven't seen this map function before I have a whole video just on what is map so you could go child link to that in the description as well then I'm going to draw an ellipse at X comma Y that's you know 8 pixels by 8 pixels I'm going to say fill 255 and Stroke 255 and now what we should see here is just the visuals that I want which is wherever I click I get a point so you know this would be a lot simpler without that mapping but the mapping is going to be useful for us as we start to try to compute the formula for the line with the least squares criteria all right so what's the next thing that I need to do we need to calculate M and B so when should we do that so let's make a global variable and let's call it I think I could call it M equals 0 and VAR b equals 0 and let's actually make m equal 1 so let's see if we have an admin of b write the formula for a line is y ok so let's let's uh um what are we going to do okay I got it I got it I got okay so here's the thing I want to draw that line so how am I going to do that well I could just take the x value here and then the x value at the end calculate the corresponding Y values for both of those points and then draw a line between them so let's do that so let's write a function called draw line and what I'm going to do is I'm going to say var X min equals zero bar Y min sorry X max equals one then I'm going to say Y min equals M times X min plus B and Y max you know this is really just like x1 x2 y1 y2 you like I'm really trying to get two points x1 y1 and x2 y2 so in fact this would make more sense to write it this way y1 equals M times x1 plus B and y2 equals M times x2 plus B and now all I need to do is say stroke 255 well I could make it a different color just like I had two different colors market Curtis and I could say line x1 y1 x2 y2 only I can't write what's the problem I calculated this line with my units my scale my mapping of the data of having this range between 0 and 1 and so I need to unmask it to the pixel stuff so this is a little bit awkward but let's just do it this way let's say X 1 equals map X 1 which has a range between 0 1 2 between 0 and width and by the way I could just multiply it by width but I'm keeping the map function in here because you might have a very different scale Y y1 is the same thing but go from height down to 0 and then we're going to do the same thing for x2 and y2 are you asleep yet and now we're going to draw so we're going to calculate those values map them to pixels and then draw the line and so let's uh in the draw function let's have draw a line so now oops uh I have an error line 50 looks like I guess I have an extra bracket somehow whoops y2 is not defined to draw a line what did I mess up here okay this should be y2 thank you very much yeah so you can see there's the line so I mean that's what the line is always going to be so now I know that if I have the N and the B for the formula for a line I can visually represent that line now all I need to do is use this formula here to calculate N and B based on the actual x and y values let's do that okay so let's remind ourselves so let's do let's write a function and let's call it linear regression I want to talk about where the term regression comes from French thing regression to the mean you can look it up ok so what are we going to do okay so if we look at the formula and this I went through all of this from the previous in the previous video where I talked about this formula something that I really need is X bar and y bar and X bar is the mean or the average of all the X values and Y bar is the mean of all the Y values so adding them all up together dividing by the total number so I might as well add those up I mean get a calculate those first so the first thing I want to do is say X sum equals 0 and we're going to go through all of the data I'm going to iterate over all the data Y sum equals 0 we're going to say X sum plus equals data index I dot X Y sum plus equals data in there so we're adding up all of the excise and all the Y values and then we're going to say X mean equals x sum divided by data lengths and the same thing for the Y mean so this is 4 this is the average so we now have the average of all the X values and the average of all the Y values now what we need to do is we need to calculate the numerator and the denominator let's do the numerator first so the numerator is so first I need to I'm gonna have to sum up some stuff here so what am I definitely need to loop through all the data but we can doing a lot of looping through all the data so I'm gonna say numerator equals 0 so the numerator is going to add up all together each data points X minus X mean times each data point and you know what I'm going to do I'm going to just use some extra variables here which I think will make things a little cleaner just we can look at the formula this is now the numerator right this is exactly this is in code right here exactly what's written in the formula here it's adding up all of the X's minus the average of X's and all the Y's so amount of Y multiplied together ok so we've got that and now all we need to do is we also we label to the denominator at the same time why not write denominator can I say de n for that we're going to add up the denominator is X x mean times X x mean it's just that added up squared and then M equals Oh M equals a numerator divided by denominator looks denominator so let's think about this could we have an issue where the denominator is 0 you know it's going to have a wish protect against it if like if all the xvalues were the same then the average would be that value and then the difference between all the values and the average would be zero but let's not worry about that too much right now okay now okay now once we've done that we can now say B equals y means minus M times X B right is that right B equals y me minus M times X mean which we get because y equals MX plus B so now that we have that we've got everything so I should be able to we're going to have a problem this is actually going to happen instantly so if there's this is only worth doing if there's more than one data point so I think we should say here in so where is in draw we're going to say if data length is greater than one then calculate the linear regression and draw the line all right let's give this a try Hey look at Matt that was amazing nothing ever works in the first try this kind of makes sense right you can see I can add a bunch of points and it's always fitting that line to the points this is linear regression interactive linear regression in the browser it's probably not anything I hear should be too excited about but it's making me happy right now okay so this this video is really complete we see that I have this linear regression that's calculated now here's I think what can you do with this so first of all you might think of some more interesting interactive ways of playing with the data whether it's being able to click and move these points around drag and drop randomize all the points I'm sure you could come up with some more interactive possibilities but one thing that I think is really important to talk about is whether it actually makes sense to use linear regression a linear regression model your data okay so let's think about a scenario where you wouldn't worry where you wouldn't all right hair I am where you wouldn't want to use linear regression so what if your data happened to kind of look like this so I could fit this present get better as a multicolor I could fit this with a line and I might still get even like the same sort of line but actually if we really looked at this data I could see that hi you know what this data I could fit a curve to this data I could fit something like y equals n x squared plus B or even plus you know M 0 x squared plus M one times X plus B and I'm probably using the wrong I should I should start using this is b0 b1 b2 right so if you can I could essentially create a polynomial formula a formula that has not just X but x squared and maybe X cubed or X to the fourth power and I'm actually going to look at that in a future video so I will do a video where I do polynomial regression I'm just going to use a JavaScript library that has it built into it so just to sort of demonstrate the idea but this is something that I might want to do and what's interesting about linear regression and this this has been demonstrated there's a wellknown famous data set called Aman's combs quartet where let's look I'm going to look at these four graphs each one of these has the same exact linear regression line right you can see that with this data the line is the same but that's it does this line really make sense so this one it kind of does right you can see that it's a nice approximation of the data with this one it does but you can see it's kind of off because there's just an anomaly and maybe we should build something into our model to account for that anomaly or this one over here even the linear regression have that same line it's actually we could figure out that we could use a polynomial function to estimate that in here we got some kind of like crazy nonsense wary of all the same xvalue so this is an important thing to realize that linear regression is not kind of magic it's not a recipe for all data is for all inputs and outputs but it is a simple model that will work for a lot of data data that is linear one way to evaluate whether or not the linear model is useful for your data set is to look at something called the residuals and a coding train viewer extraordinaire Kaede week mon you can go to k week bond github k weekend github i'll include a link to this in the video description created a much more sophisticated demonstration this is the same exact idea i can move these points around and I can kind of an randomize them and I can see the same linear regression but what this is showing is a residual plot the residual plot shows the magnitude of the difference from the line to the data point for each and every data point and if and we can actually up that the ants comb data is built into this and you can see this makes sense if you have a kind of random residual plot that's a good sign if you have a highly pattern residual plot then it's most likely that some other model could be useful for your regression so something you might consider doing as an exercise is researching more about different data sets trying to implement me you could find K weak ones code on github as well but try to make your own residual plot from my scatter plot code and one of the types of interactive features for importing or using different data sets whether they're colorful and creative ways can you explore visualizing the process of linear regression ok so thanks for watching this video I'm going to do a couple more videos on this topic number I'm going to look at polynomial regression with a JavaScript library and then I'm going to use a different technique to calculate only regression known as gradient descent and the main reason I want to do that is gradient descent as opposed to this least squares methodology I used here is a fundamental method for neural work based learning for learning method for neural network based systems so we're going to do that for linear regression which will set us up well for neural network stuff later
