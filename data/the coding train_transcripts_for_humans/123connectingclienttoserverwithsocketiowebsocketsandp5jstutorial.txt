With timestamps:

00:01 - part three of making a collaborative
00:04 - drawing canvas thing in the browser with
00:06 - p5js node and sockets so where we last
00:08 - left off was we had a node server
00:11 - working with oops not this code we had a
00:14 - node server using Express to host a
00:16 - directory and in that directory was a
00:18 - p5js sketch the thing that I need to add
00:21 - is now that socket connection between
00:24 - the sketch and the server so that if I
00:26 - have another sketch I can have messages
00:28 - going between the the from one client to
00:31 - the server to the other client so let's
00:32 - see how we get that working so the first
00:34 - thing I need to do is add the socket.io
00:37 - package to my uh Whatchamacallit node
00:42 - package application thingy so if I go
00:45 - back to
00:46 - terminal I want to say npm install
00:51 - socket.io
00:52 - ddave that's going to install
00:55 - socket.io install install install and
00:58 - you should see now here in package.json
01:01 - we now have added socket.io as a
01:05 - dependency for this particular node
01:07 - application so now that that's there and
01:10 - I go back to my server I can now start
01:12 - doing stuff with sockets so the first
01:14 - thing I want to do is say uh socket
01:18 - equals requir socket.io so this is like
01:21 - an import statement in the same way that
01:23 - I wanted to use express Express equals
01:25 - require Express I now I want to say
01:27 - socket socket equals requir socket.io
01:30 - now what I want to do though actually is
01:32 - open a create an actual socket that's
01:36 - part of this server so the server that's
01:38 - listening on Port 3000 that's in the
01:41 - variable server now I have access to
01:43 - this socket Library which socket is of
01:45 - course a function and so I'm going to
01:47 - call this variable IO it's going to be
01:49 - the thing that's going to keep track of
01:52 - inputs and outputs messages in and out
01:54 - and I want to say socket I'm going to
01:57 - call the socket function and give it the
01:59 - ser as an argument so I've imported the
02:02 - library and the library exists is just
02:03 - like a big function I call that function
02:06 - with the server that's listing on Port
02:07 - 3000 and I've got that in a variable now
02:11 - once I have that I want to start dealing
02:14 - with certain events and the main event
02:16 - the first event that I just want to deal
02:18 - with is if I have a new connection so I
02:22 - think what I do is I say
02:25 - IO
02:27 - Doon connection so sockets work based on
02:32 - different types you have to write the
02:34 - idea here is that there's this socket
02:36 - that's a connection and in J the way
02:39 - that everything in JavaScript always
02:40 - works is like there's an event and this
02:42 - code is the stuff that happens when this
02:44 - event is triggered events for sockets
02:46 - are like hey I'm connected to you so
02:49 - that's an event another event is hey
02:50 - here's a message another event is oh I'm
02:53 - disconnected now so these are all the
02:55 - events the first event I want to deal
02:56 - with is just a new connection event and
02:59 - I want to have a function to handle that
03:01 - event and of course I could put an
03:03 - anonymous function just inside right
03:04 - here but I'm going to try to make things
03:06 - a little simple and explicit and I'm
03:07 - going to say new
03:10 - connection and so that means and this is
03:12 - wrong I'm g go look up in my answer key
03:16 - io. sockets Doon I knew I was missing
03:18 - something so I need to this is the
03:21 - Syntax for that I have my and did I get
03:23 - the other stuff
03:25 - right yes I did okay uh so what I I need
03:28 - to say IO which is the object now the
03:31 - whole input output object that's created
03:32 - by that socket function I want to go
03:34 - inside that object to this thing called
03:36 - sockets call the function on to set up a
03:38 - connection event and I'm now going to
03:40 - say function new
03:44 - connection and what is the thing that is
03:47 - exists when there's a new connection a
03:50 - socket so an argument is placed in that
03:53 - function and I could say something like
03:55 - you know
03:57 - console.log socket let me run this
04:00 - server
04:04 - now I am running the server my socket
04:06 - server is running okay the socket server
04:09 - is running I'm now going to go into the
04:11 - browser here we go into the
04:14 - browser I'm going to refresh this page
04:17 - GNA connect with a
04:19 - socket I don't see anything so here's
04:22 - the thing I can set up a socket server
04:24 - all I want to wait for connections but
04:26 - I've also got to write the code in the
04:28 - client to connect to the the server like
04:31 - let's go back and look at my client
04:33 - code
04:35 - uh I don't see anything in here about
04:37 - connecting to a socket so here's the
04:39 - thing that I need to do I need to also
04:42 - have a reference to the sockets library
04:44 - in the client what libraries is so
04:48 - socket so let's let's this is this I'm
04:51 - already confused and I and I I
04:52 - supposedly know what I'm doing which I
04:54 - don't really but you know whatever um so
04:56 - I can look at socket.io go to the
04:58 - socket.io website come on internet don't
05:00 - fail me now um and you can see socket
05:03 - 1.0 is here and I can go down and uh
05:06 - there was something that I was going to
05:07 - look I could go to download ah so here
05:10 - right so there is both a socket.io
05:13 - server and a socket.io
05:16 - clients this is what I need I need the
05:18 - socket.io server to run here I've
05:20 - already written the code for that now I
05:22 - need socket.io to run on the client so I
05:25 - need to add that to my client code and
05:28 - one thing that you'll notice here is a
05:30 - quick way to do that is actually just to
05:32 - copy this line here which is referencing
05:35 - the s.i. JS Library uh via a CDN a
05:40 - Content delivery Network so I could
05:41 - download the file and put it in my
05:42 - libraries folder but this is going to be
05:44 - a little bit
05:45 - simpler so I'm going to do that and then
05:49 - I'm going to go to my index.html file
05:53 - right this is where I'm referencing
05:55 - libraries excuse me P5 libraries P.D
05:58 - libraries P5 sound let me now add
06:01 - another line of code here that just
06:03 - references socket.io so now I'm
06:06 - referencing that socket
06:08 - Library I can once again hit
06:11 - refresh let's open up the browser
06:13 - console nothing there nothing there
06:16 - right I've got the library but now I
06:18 - need to write some actual code H it's so
06:20 - sad when you just like can't
06:23 - remember what the code is to write good
06:26 - thing I already have the example
06:27 - prepared so I'm going to go to my .js
06:30 - I'm going to go to the one that I did uh
06:32 - earlier and I know that I need the thing
06:34 - that I
06:35 - need is to create a variable called
06:38 - socket and then in setup I want to say
06:41 - socket equals socket.io doc connect and
06:45 - then what do I want to connect
06:50 - to oh
06:52 - hey uh oops back after a mistake that I
06:55 - couldn't see which is now quite obvious
06:57 - to me for some reason I wrote local
06:58 - host.com here there should be no Local
07:01 - Host is the full name of my local
07:04 - computer I could also write by the way
07:07 - uh the the 127.0.0.1 which is a special
07:11 - reserved IP address for a local computer
07:13 - but I'm going to keep that as Local Host
07:15 - so once I now am connecting in my client
07:18 - I should be able to hit refresh here and
07:22 - go here and you say oh all this stuff
07:23 - spit out now so here's the thing what
07:25 - did I do in the code I if in the server
07:28 - code I said right here in a new
07:30 - connection console.log the socket object
07:33 - the socket object has a ton of metadata
07:36 - associated with it uh you know the IP
07:38 - address and all sorts of information
07:40 - about uh what's been what's connecting
07:42 - one thing that I'll do here is just we
07:44 - could evaluate look at all that stuff
07:45 - but that's a sort of for another day
07:47 - perhaps I'm going to say
07:49 - socket. and I'm going to say new
07:51 - connection socket. ID so this is a nice
07:55 - way uh every single new connection to a
07:58 - web server
08:00 - new Saka connection to the server gets
08:02 - automatically assigned an ID number for
08:04 - tracking it over time that might be
08:06 - something you make use of so I'm going
08:07 - to put that in here I'm going to run I'm
08:10 - going to uh oops I'm going to run the
08:11 - server again I'm going to go back to the
08:14 - browser I'm going to hit refresh and we
08:16 - should see new connection I don't know
08:18 - why I got two new connections I probably
08:20 - by accident still had it open but um
08:23 - then I can go open up another browser
08:25 - window and another browser window and
08:27 - another browser window and you can see
08:29 - all of these connections are coming in
08:31 - so all of those instances are all
08:33 - connected to the server all with a
08:35 - socket connection so we are in good
08:37 - shape now we
08:40 - have added the
08:43 - socket.io library to both the client and
08:46 - the server let's review that for a
08:48 - second in the server we need to require
08:51 - socket.io connect it to this particular
08:53 - web server and write a function to
08:55 - handle new Connections in the client we
08:58 - need to make make sure we've sorry
09:01 - imported socket.io JS in the HTML file
09:05 - and we also need to make sure that we
09:08 - create a open a connection to the server
09:11 - that has the socket server on it so that
09:14 - sort of concludes the add sockets to
09:17 - your thing and the next thing that we
09:19 - need to do the very last piece is we
09:21 - want to add code from this client to
09:24 - send a message to the server we want to
09:26 - add code to the server to receive that
09:28 - message and send it out to all other
09:30 - clients and that's what I'll do in the
09:32 - next video

Cleaned transcript:

part three of making a collaborative drawing canvas thing in the browser with p5js node and sockets so where we last left off was we had a node server working with oops not this code we had a node server using Express to host a directory and in that directory was a p5js sketch the thing that I need to add is now that socket connection between the sketch and the server so that if I have another sketch I can have messages going between the the from one client to the server to the other client so let's see how we get that working so the first thing I need to do is add the socket.io package to my uh Whatchamacallit node package application thingy so if I go back to terminal I want to say npm install socket.io ddave that's going to install socket.io install install install and you should see now here in package.json we now have added socket.io as a dependency for this particular node application so now that that's there and I go back to my server I can now start doing stuff with sockets so the first thing I want to do is say uh socket equals requir socket.io so this is like an import statement in the same way that I wanted to use express Express equals require Express I now I want to say socket socket equals requir socket.io now what I want to do though actually is open a create an actual socket that's part of this server so the server that's listening on Port 3000 that's in the variable server now I have access to this socket Library which socket is of course a function and so I'm going to call this variable IO it's going to be the thing that's going to keep track of inputs and outputs messages in and out and I want to say socket I'm going to call the socket function and give it the ser as an argument so I've imported the library and the library exists is just like a big function I call that function with the server that's listing on Port 3000 and I've got that in a variable now once I have that I want to start dealing with certain events and the main event the first event that I just want to deal with is if I have a new connection so I think what I do is I say IO Doon connection so sockets work based on different types you have to write the idea here is that there's this socket that's a connection and in J the way that everything in JavaScript always works is like there's an event and this code is the stuff that happens when this event is triggered events for sockets are like hey I'm connected to you so that's an event another event is hey here's a message another event is oh I'm disconnected now so these are all the events the first event I want to deal with is just a new connection event and I want to have a function to handle that event and of course I could put an anonymous function just inside right here but I'm going to try to make things a little simple and explicit and I'm going to say new connection and so that means and this is wrong I'm g go look up in my answer key io. sockets Doon I knew I was missing something so I need to this is the Syntax for that I have my and did I get the other stuff right yes I did okay uh so what I I need to say IO which is the object now the whole input output object that's created by that socket function I want to go inside that object to this thing called sockets call the function on to set up a connection event and I'm now going to say function new connection and what is the thing that is exists when there's a new connection a socket so an argument is placed in that function and I could say something like you know console.log socket let me run this server now I am running the server my socket server is running okay the socket server is running I'm now going to go into the browser here we go into the browser I'm going to refresh this page GNA connect with a socket I don't see anything so here's the thing I can set up a socket server all I want to wait for connections but I've also got to write the code in the client to connect to the the server like let's go back and look at my client code uh I don't see anything in here about connecting to a socket so here's the thing that I need to do I need to also have a reference to the sockets library in the client what libraries is so socket so let's let's this is this I'm already confused and I and I I supposedly know what I'm doing which I don't really but you know whatever um so I can look at socket.io go to the socket.io website come on internet don't fail me now um and you can see socket 1.0 is here and I can go down and uh there was something that I was going to look I could go to download ah so here right so there is both a socket.io server and a socket.io clients this is what I need I need the socket.io server to run here I've already written the code for that now I need socket.io to run on the client so I need to add that to my client code and one thing that you'll notice here is a quick way to do that is actually just to copy this line here which is referencing the s.i. JS Library uh via a CDN a Content delivery Network so I could download the file and put it in my libraries folder but this is going to be a little bit simpler so I'm going to do that and then I'm going to go to my index.html file right this is where I'm referencing libraries excuse me P5 libraries P.D libraries P5 sound let me now add another line of code here that just references socket.io so now I'm referencing that socket Library I can once again hit refresh let's open up the browser console nothing there nothing there right I've got the library but now I need to write some actual code H it's so sad when you just like can't remember what the code is to write good thing I already have the example prepared so I'm going to go to my .js I'm going to go to the one that I did uh earlier and I know that I need the thing that I need is to create a variable called socket and then in setup I want to say socket equals socket.io doc connect and then what do I want to connect to oh hey uh oops back after a mistake that I couldn't see which is now quite obvious to me for some reason I wrote local host.com here there should be no Local Host is the full name of my local computer I could also write by the way uh the the 127.0.0.1 which is a special reserved IP address for a local computer but I'm going to keep that as Local Host so once I now am connecting in my client I should be able to hit refresh here and go here and you say oh all this stuff spit out now so here's the thing what did I do in the code I if in the server code I said right here in a new connection console.log the socket object the socket object has a ton of metadata associated with it uh you know the IP address and all sorts of information about uh what's been what's connecting one thing that I'll do here is just we could evaluate look at all that stuff but that's a sort of for another day perhaps I'm going to say socket. and I'm going to say new connection socket. ID so this is a nice way uh every single new connection to a web server new Saka connection to the server gets automatically assigned an ID number for tracking it over time that might be something you make use of so I'm going to put that in here I'm going to run I'm going to uh oops I'm going to run the server again I'm going to go back to the browser I'm going to hit refresh and we should see new connection I don't know why I got two new connections I probably by accident still had it open but um then I can go open up another browser window and another browser window and another browser window and you can see all of these connections are coming in so all of those instances are all connected to the server all with a socket connection so we are in good shape now we have added the socket.io library to both the client and the server let's review that for a second in the server we need to require socket.io connect it to this particular web server and write a function to handle new Connections in the client we need to make make sure we've sorry imported socket.io JS in the HTML file and we also need to make sure that we create a open a connection to the server that has the socket server on it so that sort of concludes the add sockets to your thing and the next thing that we need to do the very last piece is we want to add code from this client to send a message to the server we want to add code to the server to receive that message and send it out to all other clients and that's what I'll do in the next video
