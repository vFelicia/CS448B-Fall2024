With timestamps:

00:00 - - Hello, welcome part three of
my GitHub for Poets tutorial.
00:04 - Serious, if anything
this might be the most
00:07 - important one for you to
watch, or the most exciting
00:09 - or perhaps, hopefully,
maybe, if I can make it so,
00:12 - the most interesting one to watch.
00:13 - So what I have here is a poem.
00:15 - It is in a GitHub repository.
00:18 - I created an account called RainbowCoder,
00:20 - and what I'm going to
show you in this video
00:22 - is how you, as someone who is not me,
00:25 - could contribute to my repository.
00:27 - Now this usually happens
in the case of source code
00:29 - 'cause you want to fix a
bug or suggest a change
00:32 - but we're going to sort
of not look at source code
00:34 - to make things a little simpler,
00:35 - so you might think of another line
00:36 - you want to add to this
poem, that sort of thing.
00:39 - So how do you do that?
00:40 - So there's two concepts
first that I want to add
00:42 - to our list of git concepts before I start
00:45 - typing stuff in here in the browser.
00:47 - I'm going to come over here.
00:48 - These are all the concepts
I've covered so far
00:50 - in the previous two videos and I'm going
00:52 - to add two things to our list here.
00:54 - I'm going to add fork,
00:58 - and I'm going to add pull request.
01:02 - So these are the two new concepts
01:04 - that I'm covering in this video.
01:05 - Now, what does it mean
to fork a repository?
01:08 - So let's say this little circle here
01:10 - with the word repo in it
represents a particular repository.
01:14 - And you've been making
changes along that repository,
01:17 - add a diagram like this, a
bunch of different commits
01:19 - and then also perhaps
you had some branches
01:21 - where you tried some other things out
01:23 - and you merged those branches
in, that sort of thing.
01:27 - This repository is sitting
01:32 - on GitHub in my account,
01:35 - Rainbow Coder.
01:39 - What if you love this repository so much
01:41 - you want to take an entire
duplicate instance of it
01:44 - and have it live in your account
01:46 - so you can work on it
separately with the same stuff
01:49 - but not be monkeying around with mine,
01:52 - not have to have privileges
or permissions to make changes
01:54 - here but also by accident
not mess something up,
01:57 - if you weren't sure about
what you were doing just yet.
01:59 - This is what it means
to fork a repository.
02:03 - Forking a repository
is essentially like...
02:06 - I was almost going to use the word clone
02:08 - but I don't want to use the word clone
02:08 - because that's a specific
GitHub term that I'm going to
02:10 - add to this list for
later, but it's like taking
02:13 - an entire other instance of the repo
02:16 - and just having it under your account.
02:17 - So I have another GitHub
account which is my name one
02:19 - called shiffman, and
what I'm going to do is
02:21 - I'm going to pretend to be both
Rainbow Coder and Shiffman.
02:25 - I guess I don't have to
pretend to be Shiffman
02:26 - because that who I am, maybe.
02:28 - Anyway, this is all getting
a little bit strange.
02:31 - So I'm going to fork it and
then I will have in my account,
02:36 - my GitHub account, an exact replica,
02:40 - I'm going to get this right,
of this entire repository
02:42 - and its whole history.
02:44 - So that if I decide to do some stuff,
02:46 - I can make as many branches
and do various things
02:49 - that I want without affecting
the original core version.
02:53 - That's forking.
02:54 - Now, that's what it means to fork.
02:57 - Now, what does pull request mean?
02:58 - Pull request means, let's say
that this particular branch
03:01 - that I've been working on, I just love it.
03:04 - I have come up, with the
most elegant, poignant,
03:08 - meaningful, set of verse... ever,
03:12 - and I want to
03:13 - contribute it back to
the original repository.
03:16 - That would be a pull request,
now, what am I doing?
03:19 - I'm essentially sending
this code to this repository
03:23 - as a pull request, and it's
up to RainbowCoder, to accept
03:29 - or reject that pull request.
03:31 - The reason why it's called
a pull request in GitHub,
03:35 - this is so extreme, but let's
say I want to send something
03:38 - this direction, that's going to be a push.
03:41 - If I want to get something
the other direction, pull,
03:45 - that's going to be a pull.
03:46 - So, sending out is pushing,
ah, coming in is pulling.
03:51 - So, really, I as Shiffman, want
to push my stuff over here,
03:54 - but I can't because I
don't have permission here,
03:57 - so I'm saying, would you
please, RainbowCoder, pull
04:00 - my changes, that's a pull request, okay?
04:03 - So these are the concepts, lets
go and actually do it here,
04:07 - and if you are watching this
live, or if you're watching
04:08 - the archive version of
this video, please make
04:10 - a pull request, we're going
to invent the world's greatest
04:13 - collaborative poem about
rainbows and since today
04:16 - is Earth Day, I don't
know what it will be when
04:17 - you are watching this, but
maybe add some stuff about
04:19 - the earth in there too.
04:21 - Okay, back over here, now, here it is.
04:23 - So, I am logged in here, as
RainbowCoder, and what I've done
04:29 - already, in a separate browser window,
04:33 - is I am at this exact
04:35 - URL of this particular
repository, but I am logged in,
04:41 - as Shiffman, and you can see
here, my little smiling icon
04:44 - is up there, and I'm looking
at the RainbowCoder's account
04:51 - and the Rainbow Poem repository.
04:53 - So, the truth of the matter
is, all of this stuff, I could
04:57 - fork and then make a pull
request, and do all that,
05:00 - but there's actually a
really quick and simple way
05:02 - to do this, because GitHub
will kind of take care
05:05 - of everything for you, and I'm
going to show you that first.
05:07 - Because, you could say we
can go to the poem, and like,
05:10 - look, there's the edit
button and look what it says,
05:14 - fork this project and edit the file.
05:16 - So, GitHub already knows that
you don't have permission
05:19 - to edit the file directly, so
it assumes if you're trying
05:21 - to edit it, that you're going
to fork, you want to fork
05:24 - the entire project.
05:25 - So if I actually just click
edit, it's going to automatically
05:28 - create that fork for me.
05:29 - Another way I could create the
fork, is to click this button
05:33 - up here, you can't really
see that, this button up here
05:35 - in the top right corner, fork.
05:37 - So I don't know which one I
really want to do right now,
05:38 - flip a coin, spin a wheel,
let's start with the, let's do,
05:42 - let's fork it, let's do the fork.
05:44 - C'mon, let's be, let's
be, bold, today, okay.
05:49 - So I'm going to click this fork
button right now, here it goes.
05:52 - Oh, look at this, so one thing
you'll notice, by the way,
05:55 - that I, as a GitHub user
belong to a bunch of different
05:58 - organizations, and the
organizations have different
06:00 - accounts, interesting to note
this, you, if you just signed
06:03 - up, probably won't have
this happen to you,
06:05 - but I'm going to fork it
to my Shiffman account.
06:08 - You can see it's forking, it.
06:10 - It should only take a few
seconds, c'mon GitHub do the fork
06:13 - dance.
06:15 - Okay, it finished, so I
don't have to dance anymore.
06:18 - So now you can see, look at this.
06:20 - I now, have an entire duplicate
version of this repository
06:24 - under my account, and it even
says where I forked it from.
06:28 - This all makes sense, right?
06:29 - So now what I want to do is go
back to poem, and you can see
06:32 - I am working in it, and
I can just hit edit now.
06:35 - So I can edit this, and let's, um, Earth,
06:42 - by the way, everybody, when
you're doing your forks and pull
06:44 - requests, please correct,
get rid of my original poem.
06:47 - Nothing about it was any good.
06:49 - Earth day is a day, oh,
wait, okay, oh let's just say
06:57 - I dunno, recycle, hahaha,
recycle is okay, I panicked,
07:02 - I didn't know what to put about earth day.
07:04 - So I'm adding a line, recycle,
and then I'm going to now,
07:07 - go down here, and look at this.
07:09 - So, I can commit directly
to the master branch.
07:14 - Now, note, because I'm working
in a fork, I'm committing
07:17 - to this master branch, in my
forked version of the repo,
07:20 - not the RainbowCoder one.
07:24 - But sometimes it's kind of good
practice, if I'm ultimately
07:26 - going to propose a change to
somebody else with a pull request,
07:29 - to maybe create a new branch.
07:31 - So let's do that and
let's call this branch
07:33 - shiffman recycle, and I'm
going to say, adding recycle.
07:39 - Recycle!
07:42 - I'm doing a terrible disservice
to the world, by not putting
07:45 - in excellent thoughtful commit
comments, but you should
07:49 - be a lot more thoughtful about that.
07:51 - And then I'm just going
to do propose file change.
07:56 - Now, interestingly enough, oh whoah!
08:00 - This is so, um, aaahhhhh, tst tst tst tst
08:05 - I did this in an overly
complicated way by making
08:07 - a separate branch, but it's
fine, because, what I'm doing
08:11 - here is, what it wants me
to do, is automatically,
08:16 - it's fine, I got to restart
this video, it's fine,
08:18 - let's keep going, this is
so crazy, but it's fine,
08:21 - this is normal and we should
run into these types of things,
08:24 - and figure them out.
08:25 - So, because I created a
separate branch, GitHub
08:28 - is sort of, automatically
detecting that maybe I want to
08:30 - propose to merge it back in here.
08:33 - And you know, from there
I might do a pull request.
08:36 - Let's actually, let me go
backwards, and I'm not going to
08:39 - do this extra step of the
extra branch, I'm just going to
08:41 - edit master directly and then
do a pull request from there,
08:44 - which might be a little
bit simpler and somebody
08:46 - on the internet is probably going
to yell at me, that I'm doing
08:48 - things incorrectly, and
then I'll make another video
08:50 - to correct them.
08:51 - Okay, so, what I'm actually
going to do, even though I said
08:57 - something different, is
click merge pull request,
09:00 - and confirm merge, and so now
you can see, my particular,
09:05 - oops, my particular
version of the repository.
09:12 - I was doing so well,
09:13 - now has the recycle in it.
09:17 - So, what I just did there
was an extra step of making
09:19 - an extra branch, was
rather unnecessary, because
09:21 - I could've just edited master
directly, because I'm only
09:24 - working within my version
of the repository.
09:26 - Let me get to the important
point now, hopefully I didn't
09:28 - waste too much of your time.
09:29 - What happens now, if I,
09:34 - go to here.
09:35 - Now look at this.
09:36 - I, there is an option right
here now, I'm in Shiffman's
09:41 - rainbow poem.
09:42 - I can say new pull request,
and what that's going to do,
09:45 - is say to the, when I click new
pull requests, it's going to
09:50 - tell the original repository,
RainbowCoder, that I have now
09:54 - a pull request.
09:56 - I'm going to create a pull
request, with this commit, adding
09:58 - recycle, I'm going to
create that pull request.
10:00 - I'm going to say, hey, I added
recycle, please, this, I am
10:08 - really thinking about the
earth and how much I love
10:14 - rainbows, today.
10:16 - So I'm going to create this
pull request, and now, there's
10:21 - nothing left for me to
do, I just sit and wait.
10:24 - I wait with baited breathe,
and anticipation, hoping
10:27 - that my pull requests gets
accepted, and yet, even if your
10:30 - pull request doesn't get
accepted, you have done a good
10:32 - thing on the internet
today, by learning about
10:35 - and submitting a pull request,
not all pull requests get
10:37 - accepted, but just the act
of doing one, is a positive
10:40 - thing to do in the world.
10:43 - So, now I can go to the
window, I can go back now,
10:44 - as the RainbowCoder, I can
go back to this original
10:49 - repository, and I can
click, I can select now.
10:52 - This is if somebody, now
pretend you're, somebody gives
10:54 - you a pull request, I can
go here, to pull requests,
10:57 - and I can see, does somebody
actually added another pull
11:00 - request here, already, I'm going
to merge that one in perhaps
11:03 - a little bit later.
11:04 - I'm going to look at this
one, I can see, like, ah ha,
11:07 - what was changed, this is
the thing that was changed.
11:11 - I can look at it and say,
blue, green , indigo, recycle,
11:14 - unicorn, yellow, you know,
maybe I would have put recycle
11:17 - after unicorn, but, pretty good.
11:19 - So, I'm going to, because
this video now has gotten
11:23 - way too long, I'm going to go
back to here, and at first I'm
11:26 - going to write, thank you
so much, I love this change,
11:31 - and I'm going to hit commit, and
I'm going to do it, I'm going to
11:36 - do merge pull request, and we
have now started, even though
11:39 - it's just me doing the pull
requests, the first, the worlds
11:42 - first, this might not be
true, but the worlds first
11:44 - collaborative GitHub poem
about rainbows on poem in your
11:50 - pocket day, or the day after
poem in your pocket day.
11:53 - Okay, so this is the end of part three.
11:56 - I encourage you, to go online,
try to make a pull request
11:59 - to my repository, the link
to the repository will
12:01 - be in the videos description.
12:03 - Find another repository,
if you know about code, fix
12:06 - somebody's bug, in
somebody else's repository,
12:08 - add something, go and make a
pull request on the internet
12:11 - on GitHub today and see how
that goes, and in part four,
12:15 - I'm going to do something more
with GitHub, look for part four,
12:18 - I forgot what it is, but
I'm going to keep going
12:20 - with this stuff.
12:20 - Okay, see ya soon, goodbye.

Cleaned transcript:

Hello, welcome part three of my GitHub for Poets tutorial. Serious, if anything this might be the most important one for you to watch, or the most exciting or perhaps, hopefully, maybe, if I can make it so, the most interesting one to watch. So what I have here is a poem. It is in a GitHub repository. I created an account called RainbowCoder, and what I'm going to show you in this video is how you, as someone who is not me, could contribute to my repository. Now this usually happens in the case of source code 'cause you want to fix a bug or suggest a change but we're going to sort of not look at source code to make things a little simpler, so you might think of another line you want to add to this poem, that sort of thing. So how do you do that? So there's two concepts first that I want to add to our list of git concepts before I start typing stuff in here in the browser. I'm going to come over here. These are all the concepts I've covered so far in the previous two videos and I'm going to add two things to our list here. I'm going to add fork, and I'm going to add pull request. So these are the two new concepts that I'm covering in this video. Now, what does it mean to fork a repository? So let's say this little circle here with the word repo in it represents a particular repository. And you've been making changes along that repository, add a diagram like this, a bunch of different commits and then also perhaps you had some branches where you tried some other things out and you merged those branches in, that sort of thing. This repository is sitting on GitHub in my account, Rainbow Coder. What if you love this repository so much you want to take an entire duplicate instance of it and have it live in your account so you can work on it separately with the same stuff but not be monkeying around with mine, not have to have privileges or permissions to make changes here but also by accident not mess something up, if you weren't sure about what you were doing just yet. This is what it means to fork a repository. Forking a repository is essentially like... I was almost going to use the word clone but I don't want to use the word clone because that's a specific GitHub term that I'm going to add to this list for later, but it's like taking an entire other instance of the repo and just having it under your account. So I have another GitHub account which is my name one called shiffman, and what I'm going to do is I'm going to pretend to be both Rainbow Coder and Shiffman. I guess I don't have to pretend to be Shiffman because that who I am, maybe. Anyway, this is all getting a little bit strange. So I'm going to fork it and then I will have in my account, my GitHub account, an exact replica, I'm going to get this right, of this entire repository and its whole history. So that if I decide to do some stuff, I can make as many branches and do various things that I want without affecting the original core version. That's forking. Now, that's what it means to fork. Now, what does pull request mean? Pull request means, let's say that this particular branch that I've been working on, I just love it. I have come up, with the most elegant, poignant, meaningful, set of verse... ever, and I want to contribute it back to the original repository. That would be a pull request, now, what am I doing? I'm essentially sending this code to this repository as a pull request, and it's up to RainbowCoder, to accept or reject that pull request. The reason why it's called a pull request in GitHub, this is so extreme, but let's say I want to send something this direction, that's going to be a push. If I want to get something the other direction, pull, that's going to be a pull. So, sending out is pushing, ah, coming in is pulling. So, really, I as Shiffman, want to push my stuff over here, but I can't because I don't have permission here, so I'm saying, would you please, RainbowCoder, pull my changes, that's a pull request, okay? So these are the concepts, lets go and actually do it here, and if you are watching this live, or if you're watching the archive version of this video, please make a pull request, we're going to invent the world's greatest collaborative poem about rainbows and since today is Earth Day, I don't know what it will be when you are watching this, but maybe add some stuff about the earth in there too. Okay, back over here, now, here it is. So, I am logged in here, as RainbowCoder, and what I've done already, in a separate browser window, is I am at this exact URL of this particular repository, but I am logged in, as Shiffman, and you can see here, my little smiling icon is up there, and I'm looking at the RainbowCoder's account and the Rainbow Poem repository. So, the truth of the matter is, all of this stuff, I could fork and then make a pull request, and do all that, but there's actually a really quick and simple way to do this, because GitHub will kind of take care of everything for you, and I'm going to show you that first. Because, you could say we can go to the poem, and like, look, there's the edit button and look what it says, fork this project and edit the file. So, GitHub already knows that you don't have permission to edit the file directly, so it assumes if you're trying to edit it, that you're going to fork, you want to fork the entire project. So if I actually just click edit, it's going to automatically create that fork for me. Another way I could create the fork, is to click this button up here, you can't really see that, this button up here in the top right corner, fork. So I don't know which one I really want to do right now, flip a coin, spin a wheel, let's start with the, let's do, let's fork it, let's do the fork. C'mon, let's be, let's be, bold, today, okay. So I'm going to click this fork button right now, here it goes. Oh, look at this, so one thing you'll notice, by the way, that I, as a GitHub user belong to a bunch of different organizations, and the organizations have different accounts, interesting to note this, you, if you just signed up, probably won't have this happen to you, but I'm going to fork it to my Shiffman account. You can see it's forking, it. It should only take a few seconds, c'mon GitHub do the fork dance. Okay, it finished, so I don't have to dance anymore. So now you can see, look at this. I now, have an entire duplicate version of this repository under my account, and it even says where I forked it from. This all makes sense, right? So now what I want to do is go back to poem, and you can see I am working in it, and I can just hit edit now. So I can edit this, and let's, um, Earth, by the way, everybody, when you're doing your forks and pull requests, please correct, get rid of my original poem. Nothing about it was any good. Earth day is a day, oh, wait, okay, oh let's just say I dunno, recycle, hahaha, recycle is okay, I panicked, I didn't know what to put about earth day. So I'm adding a line, recycle, and then I'm going to now, go down here, and look at this. So, I can commit directly to the master branch. Now, note, because I'm working in a fork, I'm committing to this master branch, in my forked version of the repo, not the RainbowCoder one. But sometimes it's kind of good practice, if I'm ultimately going to propose a change to somebody else with a pull request, to maybe create a new branch. So let's do that and let's call this branch shiffman recycle, and I'm going to say, adding recycle. Recycle! I'm doing a terrible disservice to the world, by not putting in excellent thoughtful commit comments, but you should be a lot more thoughtful about that. And then I'm just going to do propose file change. Now, interestingly enough, oh whoah! This is so, um, aaahhhhh, tst tst tst tst I did this in an overly complicated way by making a separate branch, but it's fine, because, what I'm doing here is, what it wants me to do, is automatically, it's fine, I got to restart this video, it's fine, let's keep going, this is so crazy, but it's fine, this is normal and we should run into these types of things, and figure them out. So, because I created a separate branch, GitHub is sort of, automatically detecting that maybe I want to propose to merge it back in here. And you know, from there I might do a pull request. Let's actually, let me go backwards, and I'm not going to do this extra step of the extra branch, I'm just going to edit master directly and then do a pull request from there, which might be a little bit simpler and somebody on the internet is probably going to yell at me, that I'm doing things incorrectly, and then I'll make another video to correct them. Okay, so, what I'm actually going to do, even though I said something different, is click merge pull request, and confirm merge, and so now you can see, my particular, oops, my particular version of the repository. I was doing so well, now has the recycle in it. So, what I just did there was an extra step of making an extra branch, was rather unnecessary, because I could've just edited master directly, because I'm only working within my version of the repository. Let me get to the important point now, hopefully I didn't waste too much of your time. What happens now, if I, go to here. Now look at this. I, there is an option right here now, I'm in Shiffman's rainbow poem. I can say new pull request, and what that's going to do, is say to the, when I click new pull requests, it's going to tell the original repository, RainbowCoder, that I have now a pull request. I'm going to create a pull request, with this commit, adding recycle, I'm going to create that pull request. I'm going to say, hey, I added recycle, please, this, I am really thinking about the earth and how much I love rainbows, today. So I'm going to create this pull request, and now, there's nothing left for me to do, I just sit and wait. I wait with baited breathe, and anticipation, hoping that my pull requests gets accepted, and yet, even if your pull request doesn't get accepted, you have done a good thing on the internet today, by learning about and submitting a pull request, not all pull requests get accepted, but just the act of doing one, is a positive thing to do in the world. So, now I can go to the window, I can go back now, as the RainbowCoder, I can go back to this original repository, and I can click, I can select now. This is if somebody, now pretend you're, somebody gives you a pull request, I can go here, to pull requests, and I can see, does somebody actually added another pull request here, already, I'm going to merge that one in perhaps a little bit later. I'm going to look at this one, I can see, like, ah ha, what was changed, this is the thing that was changed. I can look at it and say, blue, green , indigo, recycle, unicorn, yellow, you know, maybe I would have put recycle after unicorn, but, pretty good. So, I'm going to, because this video now has gotten way too long, I'm going to go back to here, and at first I'm going to write, thank you so much, I love this change, and I'm going to hit commit, and I'm going to do it, I'm going to do merge pull request, and we have now started, even though it's just me doing the pull requests, the first, the worlds first, this might not be true, but the worlds first collaborative GitHub poem about rainbows on poem in your pocket day, or the day after poem in your pocket day. Okay, so this is the end of part three. I encourage you, to go online, try to make a pull request to my repository, the link to the repository will be in the videos description. Find another repository, if you know about code, fix somebody's bug, in somebody else's repository, add something, go and make a pull request on the internet on GitHub today and see how that goes, and in part four, I'm going to do something more with GitHub, look for part four, I forgot what it is, but I'm going to keep going with this stuff. Okay, see ya soon, goodbye.
