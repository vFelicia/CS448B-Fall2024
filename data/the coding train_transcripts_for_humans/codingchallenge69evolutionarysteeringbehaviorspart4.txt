With timestamps:

00:00 - hello welcome back to part four of my
00:02 - evolutionary steering something food and
00:04 - poison system thingy now guess what this
00:08 - creature here has violated the laws of
00:10 - my universe and in the chat I don't
00:12 - remember who it was I can give credit to
00:14 - somebody pointed it out Thank You
00:16 - somebody with a youtube name I apologize
00:20 - keep better track of that somebody will
00:22 - tell me who was the first point that's
00:23 - out now
00:24 - it's violating the laws of the universe
00:25 - you can just wander across a piece of
00:27 - poison and not even eat it now why is
00:29 - that there's a couple reasons why
00:33 - literally one reason why but look at
00:35 - this remember I was like oh I'm going to
00:36 - let them have a perception radius all
00:38 - the way down to zero well what if it's
00:42 - perception radius was like point zero
00:44 - zero zero zero zero one or even one zero
00:46 - then it can never even see the poison
00:49 - and it actually will only eat the poison
00:53 - if it can see it now there's one thing
00:54 - my perception radius my desire was that
00:57 - for that perception radius to only be
01:00 - that something that it occurs to either
01:02 - be attracted or repelled to it but if it
01:04 - wanders across the poison by accident it
01:07 - should still eat it and same for the
01:08 - food honestly you should get to eat the
01:10 - food whether to perceive it or not so
01:11 - one thing I should really do here I mean
01:17 - I really should have this checking to
01:19 - eat be a separate check I mean I do have
01:21 - this distance here so I could check it
01:23 - whether it's like the closest or not
01:25 - like I really should just check it here
01:26 - should eat it whether it's attracted or
01:28 - not let's do that so I'm going to just
01:33 - take this there's a lot I could also
01:37 - just make a minimum perception radius
01:38 - but I feel like doing it this other way
01:40 - for some reason like I'm just going to
01:43 - check right here like hey right before I
01:46 - check if it's something it should be
01:47 - attracted to because eating and being
01:48 - attracted to or different things like I
01:50 - cannot be attracted to it but I can walk
01:51 - across it and I've eaten it I suppose in
01:54 - this the way that I'm thinking about
01:56 - this world so I'm going to say if the
01:58 - distance is less than five I'm going to
02:02 - eat that thing and it doesn't even
02:04 - matter if there's like three in a row
02:05 - I'm just going to eat it whether I'm
02:06 - attracted to it or not so I'm going to
02:09 - do that and then also I really should be
02:11 - more thoughtful about this number
02:13 - you know what would make sense is this a
02:16 - look at at its maximum speed is five but
02:19 - this actually makes sense because if it
02:21 - can go Matt five pixels at a time
02:23 - anytime it's within that maximum speed
02:26 - it's not going to be able jump over it
02:27 - so I'm going to use that just in case I
02:29 - change the maximum speed later I'm going
02:31 - to just change that to this max speed
02:33 - and then I've got that same problem if
02:36 - I'm removing stuff while I'm iterating
02:38 - through it
02:39 - I should really iterate through that
02:40 - list backwards so I'm going to put this
02:42 - here length minus one I'm going to say
02:45 - go all the way down to zero and instead
02:48 - of going up while iterating - now let's
02:50 - just see if everything works - say ah
02:52 - error so what did I do
02:56 - cannot read property copy of undefined
02:59 - seek line 81 so this is a problem maybe
03:04 - what I should do so if it eats it and
03:08 - that happened to be the closest one it's
03:10 - not there anymore so it also if it's
03:15 - eating it it doesn't count if something
03:17 - that's attracted to any more okay so it
03:22 - can't eat something and also be
03:24 - attracted to it so again probably this
03:26 - could be refactored yet again but uh
03:28 - still problem okay
03:31 - so part four was supposed to be about
03:33 - the evolutionary stuff but now I'm just
03:35 - debugging problems I realize this is not
03:37 - going to work oh boy you know got a
03:39 - really watch out for I it's actually
03:41 - start part four over no I'm going on
03:45 - here this is what's happening you're
03:47 - watching this you're still here this is
03:48 - no good because remember I'm saving
03:50 - something that's the closest and then
03:52 - I'm going backwards through the array if
03:54 - I take something out stuff moves around
03:56 - the array and I save the closest index
03:58 - which is no longer the index anymore
03:59 - here's the thing though I don't need to
04:02 - I can fix this I don't need to delete it
04:05 - down here so I don't need to save the
04:08 - closest index what I want to do is
04:10 - actually save that closest location so
04:15 - closest is actually list index I so I
04:19 - need I needed to save the I because of
04:21 - removing it later but now that I'm
04:23 - removing it here I just want to save
04:24 - that particular location doesn't matter
04:25 - if you're a shifts around
04:26 - and now I can just seek the closest I'm
04:30 - pretty sure now Oh
04:35 - if closest is not know right now use the
04:39 - check not if the index is valid but if
04:41 - it's not no there we go
04:43 - so now I should not I should no longer
04:46 - be able to have something that violates
04:49 - the laws of the universe everything
04:50 - should eat the food and the poison
04:52 - whether it's seeking it or not and this
04:54 - one you can see I died so like I made it
04:56 - kind of hard for them and we might need
04:59 - to make it easier but i am i hoping my
05:02 - hope is that there's actually a kind of
05:05 - optimal and this one looks pretty good
05:07 - there's an optimal one that it's going
05:10 - to need to really be able to see the
05:13 - food better that's not optimal because
05:14 - it needs a bigger radius of food anyway
05:16 - so let's add the evolution it's time for
05:19 - evolution did I just really do that in
05:22 - my video I guess I did okay here we go
05:27 - so so okay first of all if you've
05:31 - watched any other genetic algorithm
05:32 - videos you will note that there is a
05:35 - process to a genetic algorithm in the
05:36 - traditional sense that process is create
05:39 - the initial population evaluate the
05:41 - population for fitness apply crossover
05:45 - and mutation to create a new population
05:46 - now run it again but if you watch
05:49 - through all of my videos towards the end
05:51 - and I'll link to this also in the
05:53 - description I discuss another way of
05:56 - thinking about an evolutionary system
05:57 - which is a more continuous system right
06:00 - there is no fitness function these
06:02 - agents these elements these creatures
06:04 - just have a random chance while they
06:06 - live to reproduce so the longer they
06:09 - live the more likely they are to
06:10 - reproduce and so things that live longer
06:14 - that gather more health and resources
06:16 - will have more chances of reproducing
06:18 - and hopefully over time the things that
06:23 - aren't so great are going to die out
06:24 - because they won't have a chance to
06:25 - reproduce so something that more mirrors
06:27 - the way that an evolutionary process
06:28 - might happen in the natural world okay
06:32 - so let's add that so the first thing
06:33 - that I need to do is I need to add a
06:35 - function and I'm going to call it I
06:37 - don't know if I should call it clone
06:39 - because is that like a
06:40 - that seems to be like some kind of
06:41 - JavaScript actual word so I could call
06:44 - it copy which is also some sort of key
06:46 - word I'm going to say clone clone me I'm
06:53 - going to make a function called clone me
06:54 - oh did it just not turn blue because I'd
06:58 - gotten rid of it yet okay that's fine
06:59 - I'm gonna take a function call clone and
07:01 - what that does is it returns a new
07:07 - vehicle at my location with my DNA so
07:19 - the idea is that there's a function that
07:20 - creates a new vehicle it doesn't have to
07:23 - be at the same location but that makes
07:24 - sense the idea that suddenly I'm just
07:25 - going to copy myself and by copying
07:28 - myself I need to copy my DNA so here's
07:32 - the thing there's a lot of one thing
07:33 - that you might think about is like oh
07:34 - maybe there's some scenario where they
07:36 - there's two and they actually have to be
07:38 - next to each other and then the DNA gets
07:41 - used as cross over to like combine the
07:43 - DNA to make a new vehicle but I'm going
07:46 - to just do this simply by having just a
07:47 - copy but that would be an interesting
07:48 - thing for you to try and then maybe they
07:50 - have to evolve some kind of attraction
07:52 - force where in addition to eating the
07:53 - food and avoiding the poison they also
07:55 - have to be attracted to each other so
07:56 - that they can manage to copy themselves
07:59 - so but I'm just going to write this
08:00 - function called clone and what I'm going
08:03 - to do right now is I'm going to say for
08:10 - every single vehicle and you know what
08:11 - I'm going to do I'm going to say if
08:15 - random I'm going to build this into the
08:17 - function maybe every frame they just
08:19 - have a 1% chance of returning a copy of
08:22 - themselves otherwise I return nothing no
08:28 - and a JavaScript function by defaults
08:30 - going to return undefined probably so I
08:32 - would just want to say just want to do
08:33 - this like 1% of the time so what I'm
08:36 - going to do here is I'm going to say var
08:43 - I'm going to call it child or copy child
08:46 - I'll just call it new vehicle equals
08:49 - vehicles index I clone
08:54 - if new vehicle is not equal to null then
08:59 - vehicles dot push new vehicle money this
09:04 - evolutionary aspect is like the simplest
09:05 - artifice and boy I mean there's some
09:08 - more pieces that I haven't done yet
09:09 - so this idea of every so often one out
09:13 - of a hundred frames if it lives four
09:15 - hundred frames there's a good chance
09:16 - that at least one of those it'll make a
09:18 - copy of itself and then it will add that
09:25 - to be right and luckily I got it oh this
09:29 - is a problem look at this vehicles no no
09:31 - no that's okay because I starts with
09:33 - that so there really could be an issue
09:35 - where if I'm adding to an array one
09:37 - iterating through it it's never going to
09:39 - get to the end but because I've already
09:41 - going through backwards I can add stuff
09:43 - to the end and just still go down to
09:44 - zero and I'll be fine
09:45 - so okay so I think I'm not going to get
09:47 - stuck at some infinite loop here let's
09:49 - now try running this so we should see
09:53 - let's make it really happen really often
09:54 - just so we can see that there's these
09:57 - new vehicles 10% of the time we should
10:00 - be overwhelmed right we're overwhelmed
10:02 - with stuff so that's clearly absurd and
10:04 - I'm going to crash the computer so 1% of
10:08 - the time it might be too often as well
10:10 - but let's leave that for right now 1% of
10:13 - the time kind of want to add a piece of
10:15 - food ooh what happened there cannot Oh
10:21 - so why I think that happens look at this
10:29 - so it's possible right now for a vehicle
10:32 - to die and then clone itself so I can
10:36 - put this just before I check for or I
10:38 - could say like maybe it's about the diet
10:39 - it's not allowed to like show I should
10:41 - let it like have one last shot let's let
10:44 - it have one last shot to clone itself
10:47 - okay so as long as I clone before I
10:49 - delete it we should be okay okay so now
10:53 - you can see this stuff now here's the
10:55 - thing actually copying its DNA so I
10:59 - could write this function as much as I
11:02 - want
11:02 - that's called clone and I could pass in
11:07 - DNA - supposedly copy but my constructor
11:11 - does not have an argument so I need to
11:17 - add a third argument called DNA and what
11:20 - I want to do is if write what I want to
11:24 - do is if DNA exists is not is not
11:28 - undefined I think that's okay if it's
11:31 - just a it'll be any array is going to be
11:36 - defined it's going to return true right
11:38 - so but maybe what I'll do just to be now
11:42 - that's fine if DNA I'm just gonna say if
11:44 - DNA is equal to undefined so if I didn't
11:49 - pass in that argument then make the DNA
11:52 - randomly right this is what I should do
11:54 - otherwise otherwise this DNA now I don't
12:00 - want to say DNA I could do this but this
12:04 - is a bit of a problem because what I
12:07 - actually want to do I might want to
12:08 - adjust and one have like a little chance
12:09 - of mutation so what I want to do is I
12:12 - want to say this DNA index so no matter
12:16 - what I always want to make it an array
12:17 - and then I want to say disdain and I
12:23 - really should do this in a loop but I'm
12:25 - not going to for a very silly reason in
12:27 - a second so in there's only four
12:29 - properties so I'm going to just do these
12:31 - manually Tara I can't even look at this
12:33 - there we go
12:35 - very very weird feeling in my stomach
12:37 - very uncomfortable I think this without
12:40 - a loop but here we go now I should be
12:42 - copying the DNA oh boy boy they really
12:45 - like to make copies of themselves so I
12:47 - also think that this needs to be much
12:50 - less often let's make this much less
12:52 - often phone is ringing again okay a
12:58 - bunch died out now one looks like it's
13:00 - going to do pretty well copy yourself
13:01 - come on get that food make a copy of
13:03 - yourself come on you can do it they
13:06 - could copy of yourself because that's
13:08 - like one every a thousand frames
13:10 - that's way too little I kind of want to
13:13 - get lucky and like have a do it and have
13:15 - it
13:15 - a copy of itself but this one look at
13:18 - this off of all their did okay so we can
13:20 - see it works you can see that one that
13:21 - copies up now it died immediately
13:23 - because they were both right there and
13:26 - they like consumed themselves so yeah
13:30 - it's a little bit of an issue there one
13:32 - thing that I think would be really
13:33 - helpful I've done this with these kind
13:35 - of systems before is to add this idea of
13:40 - if one dies I'm going to create a piece
13:46 - of food right where it dies so let's
13:50 - create a piece of food at x equals
13:54 - vehicle's index position dot X so let's
14:00 - get the XY of that vehicle and let's
14:03 - create a piece of food there this is
14:04 - really going to help because this is
14:08 - really going to help because that way if
14:10 - there's like a bunch then like a whole
14:12 - bunch died there's a lot of food for the
14:13 - one that survives so let's add that and
14:16 - let's be hopeful that we get something
14:18 - good now here's the thing one of the key
14:21 - principles of evolutionary system is
14:23 - variation I'm really not getting that
14:26 - much variety to start with so one thing
14:29 - that I might do there's two things I
14:31 - really do add to this to have more
14:32 - variety one is that let's make how many
14:36 - vehicles do I make I make ten so let's
14:38 - make 50 to start with and you can see
14:40 - that's kind of too many and also that
14:43 - reproduction amount was like way too
14:45 - little so let's not make it point one
14:48 - but let's make it point zero five so
14:51 - there's a lot of them now so you can see
14:53 - like a whole bunch to hide all at once
14:55 - and left some food so let's see kind of
14:57 - like who survives so I'm gonna let this
14:59 - run for a little bit and see how it goes
15:03 - now it's really not there's not a lot of
15:06 - food so I don't know if I need to add
15:09 - which is fine because they're really
15:10 - copying themselves a lot so they're
15:12 - gonna die this one's good this one
15:14 - should be able to like kind of pick up a
15:17 - bunch of a lot of food now and then
15:18 - there's more food getting at it's going
15:19 - to die
15:20 - so anyway so you can see here there's a
15:23 - lot of stuff to tweak and I got to stop
15:25 - myself from tweaking and tweaking and
15:27 - tweaking alright so I have
15:29 - one last thing to add one thing that
15:32 - doesn't have there is no mutation right
15:34 - now and mutation is a key aspect of an
15:37 - evolutionary system because what if the
15:40 - initial population doesn't have the
15:43 - right amount of variety and or enough
15:46 - variety the optimal thing that we're
15:49 - searching for is not there in the
15:51 - initial population so as these elements
15:54 - clone themselves if they adjust their
15:57 - properties a little bit we can introduce
15:59 - additional variation now there's a lot
16:01 - of ways I could do this number one is I
16:03 - could just randomly pick new weights a
16:06 - steering weight and randomly pick new
16:09 - perception radii if raising the plural
16:12 - of raises but what I'm going to do just
16:14 - to demonstrate and I've done that and
16:16 - that happens in some of my other videos
16:17 - but in this one what I'm going to
16:19 - demonstrate is like just adjusting those
16:21 - values a little bit because I think
16:22 - that'll be interesting to see so and I'm
16:25 - going to do this in kind of a very
16:27 - inefficient silly way and I can leave it
16:29 - as an exercise for you guys to write the
16:32 - code in a nicer way but for example I'm
16:35 - going to say oh I mean I could mmm I
16:40 - hate what I've done here so one thing I
16:43 - would be better would be to have all of
16:45 - these have a normalized range like if
16:49 - all of these values were always between
16:50 - zero and one I could just tweak all of
16:52 - these randomly the same way but because
16:54 - do you have a different range than this
16:56 - but I'm going to do this in a very
16:57 - long-winded way and you guys can imagine
17:00 - and I'll refactor this code another time
17:01 - in another video or just in a different
17:03 - example or you can do this as your own
17:05 - exercise but I'm going to say if random
17:07 - one is less than and let's make a global
17:09 - variable I'm going to call it mr for
17:12 - mutation rate and I'm gonna say there's
17:13 - a 1% mutation rate which is probably too
17:16 - low but if random one is less than the
17:20 - mutation rate then this DNA 0 adjust it
17:27 - by some tiny small amount move between
17:33 - negative point 1 and point 1 now I'm
17:37 - going to do that for this one for the
17:41 - second weight
17:42 - during wait and then I'm going to do the
17:44 - same thing for these last two things but
17:48 - the range I might want to adjust it is
17:49 - between negative 10 and 10 maybe I'm
17:54 - going to and I probably should cap it so
17:55 - it can't go below zero but whatever good
17:59 - enough for right now so I'm going to
18:02 - this I don't there's so many things
18:03 - about this that I don't like but it's
18:05 - good enough for right now I could
18:07 - rewrite this into a nice reusable
18:08 - function where I pass in the mutation
18:10 - rate and the amount of change I'll leave
18:13 - that as exercise for you so this now
18:14 - randomly they should be adjusted okay
18:17 - here we go
18:17 - now let's run this let's see how it
18:20 - behaves so we're just let this run for a
18:22 - little bit we're gonna do some deep
18:23 - breathing didn't you do to do I'm back
18:27 - from the past to the future speaking in
18:29 - a falsetto everything died out so this
18:32 - is this is the sad truth of this as much
18:35 - as I have this idea of like you know
18:36 - artificial general intelligence they're
18:38 - going to sort of like learn how to do it
18:40 - so much of this right now is a top-down
18:42 - design system and getting this to behave
18:46 - in a way that's going to be interesting
18:47 - is really adjusting and fine-tuning that
18:49 - system and you may I'm going to publish
18:51 - this code and the things that I would
18:53 - like you to think about doing is you
18:55 - might be able to adjust create a whole
18:58 - interface with sliders to adjust like
19:00 - the rate of how food is added how poison
19:01 - is added adjust the different ranges are
19:03 - just how much the health goes down let
19:05 - me try to at least get this to behave a
19:06 - little bit better one thing I'm going to
19:09 - do is I'm going to add food at a much
19:12 - higher rate which will make it easier
19:16 - I'm going to have the and also have the
19:21 - nutritional value of the food be a bit
19:26 - higher and so I'm going to make that
19:31 - point 3 and I'm going to actually make
19:33 - the poison really bad seven five okay so
19:39 - I'm gonna make a poison little worse and
19:42 - it's kind of bothering me how big those
19:44 - dots are which is so unnecessary but I'm
19:48 - going to draw them a little bit smaller
19:49 - I don't know why it's like designs
19:52 - clearly not my forte but let's let's let
19:54 - this run and also I could add something
19:55 - where I could click the mouse
19:56 - often add new vehicles but let's see
19:59 - what we get over time here there should
20:02 - be a lot of food you can see you know
20:05 - there's gonna there's some element of
20:06 - balance here if there's too many good
20:08 - things they're going to eat all the food
20:09 - but you can see what's left right
20:11 - there's a bunch let me travel to the
20:16 - future again
20:17 - doo doo doo doo doo doo doo doo doo doo
20:19 - doo doo doo I'm back with that one more
20:21 - feature where I could say just in the
20:25 - main sketch I'm going to say where as
20:29 - where the vehicles here I'm going to add
20:32 - the mouse drag function and I'm going to
20:38 - make it so that whenever I drag the
20:41 - mouse I'm adding new vehicles at Mouse X
20:45 - and mouse Y so I can run the sketch in
20:47 - hopes and whoops vehicles I get I just
20:51 - say vehicles dot push ok so I'm going to
21:01 - let this run for a bit hello from the
21:04 - future so I made some tweaks to various
21:06 - variables in the same like how much is
21:07 - the help increase and you can see now
21:09 - something rather optimal has kind of
21:11 - appeared which is what I had suspected
21:13 - all along and said which is that you can
21:15 - see here's a whole bunch of vehicles
21:17 - with a strong attraction to food not
21:20 - being so attracted a strong repulsion to
21:23 - poison and being able to see food much
21:25 - farther than be able to see poison you
21:27 - can see this is just propagated and
21:28 - they're just kind of eating up all the
21:30 - food now at some point they're bunch of
21:32 - those are going to die out but when they
21:34 - die they add more food so I think we
21:35 - have arrived now here's the thing a lot
21:37 - of stuff that I didn't do one thing is
21:39 - this would be much nicer to look at and
21:41 - I'm going to if I just made a little
21:42 - checkbox that I could check here and
21:44 - then I don't see the debugging
21:46 - information cuz I really don't watching
21:47 - the debugging information is just for me
21:49 - to have a sense of what's going on and I
21:50 - can barely understand where the food is
21:52 - and what the vehicles are doing so it
21:54 - would be nicer to look at it we've got
21:55 - add that after this video is over and
21:58 - have it as part of the code then of
22:01 - course there's all sorts of interesting
22:02 - possibilities here what are other things
22:04 - you could add to the system
22:06 - what are
22:08 - somebody suggested having the
22:10 - probability of reproduction be related
22:12 - to actually their health value so that
22:14 - if they're really healthy they're more
22:15 - likely to reproduce then if they're
22:17 - quite close to having a health of zero
22:19 - so I'm sharing that lots of creative
22:20 - ideas and at an interface to play with
22:26 - different parameters design is in a
22:27 - different way make this into a game
22:30 - somehow somebody suggested oh well the
22:32 - user to save them by adding food who's
22:34 - all sorts of possibilities here so I
22:36 - hope you enjoyed this really long four
22:38 - part coding challenge I hope that you
22:40 - make something creative with this
22:42 - evolutionary system expand on it I would
22:44 - love to share results of things that you
22:46 - guys make in future live streams or
22:49 - videos and so thanks for watching stay
22:52 - in touch leave a comment I'll be back
22:54 - more videos of lessons okay good bye
23:02 - you

Cleaned transcript:

hello welcome back to part four of my evolutionary steering something food and poison system thingy now guess what this creature here has violated the laws of my universe and in the chat I don't remember who it was I can give credit to somebody pointed it out Thank You somebody with a youtube name I apologize keep better track of that somebody will tell me who was the first point that's out now it's violating the laws of the universe you can just wander across a piece of poison and not even eat it now why is that there's a couple reasons why literally one reason why but look at this remember I was like oh I'm going to let them have a perception radius all the way down to zero well what if it's perception radius was like point zero zero zero zero zero one or even one zero then it can never even see the poison and it actually will only eat the poison if it can see it now there's one thing my perception radius my desire was that for that perception radius to only be that something that it occurs to either be attracted or repelled to it but if it wanders across the poison by accident it should still eat it and same for the food honestly you should get to eat the food whether to perceive it or not so one thing I should really do here I mean I really should have this checking to eat be a separate check I mean I do have this distance here so I could check it whether it's like the closest or not like I really should just check it here should eat it whether it's attracted or not let's do that so I'm going to just take this there's a lot I could also just make a minimum perception radius but I feel like doing it this other way for some reason like I'm just going to check right here like hey right before I check if it's something it should be attracted to because eating and being attracted to or different things like I cannot be attracted to it but I can walk across it and I've eaten it I suppose in this the way that I'm thinking about this world so I'm going to say if the distance is less than five I'm going to eat that thing and it doesn't even matter if there's like three in a row I'm just going to eat it whether I'm attracted to it or not so I'm going to do that and then also I really should be more thoughtful about this number you know what would make sense is this a look at at its maximum speed is five but this actually makes sense because if it can go Matt five pixels at a time anytime it's within that maximum speed it's not going to be able jump over it so I'm going to use that just in case I change the maximum speed later I'm going to just change that to this max speed and then I've got that same problem if I'm removing stuff while I'm iterating through it I should really iterate through that list backwards so I'm going to put this here length minus one I'm going to say go all the way down to zero and instead of going up while iterating now let's just see if everything works say ah error so what did I do cannot read property copy of undefined seek line 81 so this is a problem maybe what I should do so if it eats it and that happened to be the closest one it's not there anymore so it also if it's eating it it doesn't count if something that's attracted to any more okay so it can't eat something and also be attracted to it so again probably this could be refactored yet again but uh still problem okay so part four was supposed to be about the evolutionary stuff but now I'm just debugging problems I realize this is not going to work oh boy you know got a really watch out for I it's actually start part four over no I'm going on here this is what's happening you're watching this you're still here this is no good because remember I'm saving something that's the closest and then I'm going backwards through the array if I take something out stuff moves around the array and I save the closest index which is no longer the index anymore here's the thing though I don't need to I can fix this I don't need to delete it down here so I don't need to save the closest index what I want to do is actually save that closest location so closest is actually list index I so I need I needed to save the I because of removing it later but now that I'm removing it here I just want to save that particular location doesn't matter if you're a shifts around and now I can just seek the closest I'm pretty sure now Oh if closest is not know right now use the check not if the index is valid but if it's not no there we go so now I should not I should no longer be able to have something that violates the laws of the universe everything should eat the food and the poison whether it's seeking it or not and this one you can see I died so like I made it kind of hard for them and we might need to make it easier but i am i hoping my hope is that there's actually a kind of optimal and this one looks pretty good there's an optimal one that it's going to need to really be able to see the food better that's not optimal because it needs a bigger radius of food anyway so let's add the evolution it's time for evolution did I just really do that in my video I guess I did okay here we go so so okay first of all if you've watched any other genetic algorithm videos you will note that there is a process to a genetic algorithm in the traditional sense that process is create the initial population evaluate the population for fitness apply crossover and mutation to create a new population now run it again but if you watch through all of my videos towards the end and I'll link to this also in the description I discuss another way of thinking about an evolutionary system which is a more continuous system right there is no fitness function these agents these elements these creatures just have a random chance while they live to reproduce so the longer they live the more likely they are to reproduce and so things that live longer that gather more health and resources will have more chances of reproducing and hopefully over time the things that aren't so great are going to die out because they won't have a chance to reproduce so something that more mirrors the way that an evolutionary process might happen in the natural world okay so let's add that so the first thing that I need to do is I need to add a function and I'm going to call it I don't know if I should call it clone because is that like a that seems to be like some kind of JavaScript actual word so I could call it copy which is also some sort of key word I'm going to say clone clone me I'm going to make a function called clone me oh did it just not turn blue because I'd gotten rid of it yet okay that's fine I'm gonna take a function call clone and what that does is it returns a new vehicle at my location with my DNA so the idea is that there's a function that creates a new vehicle it doesn't have to be at the same location but that makes sense the idea that suddenly I'm just going to copy myself and by copying myself I need to copy my DNA so here's the thing there's a lot of one thing that you might think about is like oh maybe there's some scenario where they there's two and they actually have to be next to each other and then the DNA gets used as cross over to like combine the DNA to make a new vehicle but I'm going to just do this simply by having just a copy but that would be an interesting thing for you to try and then maybe they have to evolve some kind of attraction force where in addition to eating the food and avoiding the poison they also have to be attracted to each other so that they can manage to copy themselves so but I'm just going to write this function called clone and what I'm going to do right now is I'm going to say for every single vehicle and you know what I'm going to do I'm going to say if random I'm going to build this into the function maybe every frame they just have a 1% chance of returning a copy of themselves otherwise I return nothing no and a JavaScript function by defaults going to return undefined probably so I would just want to say just want to do this like 1% of the time so what I'm going to do here is I'm going to say var I'm going to call it child or copy child I'll just call it new vehicle equals vehicles index I clone if new vehicle is not equal to null then vehicles dot push new vehicle money this evolutionary aspect is like the simplest artifice and boy I mean there's some more pieces that I haven't done yet so this idea of every so often one out of a hundred frames if it lives four hundred frames there's a good chance that at least one of those it'll make a copy of itself and then it will add that to be right and luckily I got it oh this is a problem look at this vehicles no no no that's okay because I starts with that so there really could be an issue where if I'm adding to an array one iterating through it it's never going to get to the end but because I've already going through backwards I can add stuff to the end and just still go down to zero and I'll be fine so okay so I think I'm not going to get stuck at some infinite loop here let's now try running this so we should see let's make it really happen really often just so we can see that there's these new vehicles 10% of the time we should be overwhelmed right we're overwhelmed with stuff so that's clearly absurd and I'm going to crash the computer so 1% of the time it might be too often as well but let's leave that for right now 1% of the time kind of want to add a piece of food ooh what happened there cannot Oh so why I think that happens look at this so it's possible right now for a vehicle to die and then clone itself so I can put this just before I check for or I could say like maybe it's about the diet it's not allowed to like show I should let it like have one last shot let's let it have one last shot to clone itself okay so as long as I clone before I delete it we should be okay okay so now you can see this stuff now here's the thing actually copying its DNA so I could write this function as much as I want that's called clone and I could pass in DNA supposedly copy but my constructor does not have an argument so I need to add a third argument called DNA and what I want to do is if write what I want to do is if DNA exists is not is not undefined I think that's okay if it's just a it'll be any array is going to be defined it's going to return true right so but maybe what I'll do just to be now that's fine if DNA I'm just gonna say if DNA is equal to undefined so if I didn't pass in that argument then make the DNA randomly right this is what I should do otherwise otherwise this DNA now I don't want to say DNA I could do this but this is a bit of a problem because what I actually want to do I might want to adjust and one have like a little chance of mutation so what I want to do is I want to say this DNA index so no matter what I always want to make it an array and then I want to say disdain and I really should do this in a loop but I'm not going to for a very silly reason in a second so in there's only four properties so I'm going to just do these manually Tara I can't even look at this there we go very very weird feeling in my stomach very uncomfortable I think this without a loop but here we go now I should be copying the DNA oh boy boy they really like to make copies of themselves so I also think that this needs to be much less often let's make this much less often phone is ringing again okay a bunch died out now one looks like it's going to do pretty well copy yourself come on get that food make a copy of yourself come on you can do it they could copy of yourself because that's like one every a thousand frames that's way too little I kind of want to get lucky and like have a do it and have it a copy of itself but this one look at this off of all their did okay so we can see it works you can see that one that copies up now it died immediately because they were both right there and they like consumed themselves so yeah it's a little bit of an issue there one thing that I think would be really helpful I've done this with these kind of systems before is to add this idea of if one dies I'm going to create a piece of food right where it dies so let's create a piece of food at x equals vehicle's index position dot X so let's get the XY of that vehicle and let's create a piece of food there this is really going to help because this is really going to help because that way if there's like a bunch then like a whole bunch died there's a lot of food for the one that survives so let's add that and let's be hopeful that we get something good now here's the thing one of the key principles of evolutionary system is variation I'm really not getting that much variety to start with so one thing that I might do there's two things I really do add to this to have more variety one is that let's make how many vehicles do I make I make ten so let's make 50 to start with and you can see that's kind of too many and also that reproduction amount was like way too little so let's not make it point one but let's make it point zero five so there's a lot of them now so you can see like a whole bunch to hide all at once and left some food so let's see kind of like who survives so I'm gonna let this run for a little bit and see how it goes now it's really not there's not a lot of food so I don't know if I need to add which is fine because they're really copying themselves a lot so they're gonna die this one's good this one should be able to like kind of pick up a bunch of a lot of food now and then there's more food getting at it's going to die so anyway so you can see here there's a lot of stuff to tweak and I got to stop myself from tweaking and tweaking and tweaking alright so I have one last thing to add one thing that doesn't have there is no mutation right now and mutation is a key aspect of an evolutionary system because what if the initial population doesn't have the right amount of variety and or enough variety the optimal thing that we're searching for is not there in the initial population so as these elements clone themselves if they adjust their properties a little bit we can introduce additional variation now there's a lot of ways I could do this number one is I could just randomly pick new weights a steering weight and randomly pick new perception radii if raising the plural of raises but what I'm going to do just to demonstrate and I've done that and that happens in some of my other videos but in this one what I'm going to demonstrate is like just adjusting those values a little bit because I think that'll be interesting to see so and I'm going to do this in kind of a very inefficient silly way and I can leave it as an exercise for you guys to write the code in a nicer way but for example I'm going to say oh I mean I could mmm I hate what I've done here so one thing I would be better would be to have all of these have a normalized range like if all of these values were always between zero and one I could just tweak all of these randomly the same way but because do you have a different range than this but I'm going to do this in a very longwinded way and you guys can imagine and I'll refactor this code another time in another video or just in a different example or you can do this as your own exercise but I'm going to say if random one is less than and let's make a global variable I'm going to call it mr for mutation rate and I'm gonna say there's a 1% mutation rate which is probably too low but if random one is less than the mutation rate then this DNA 0 adjust it by some tiny small amount move between negative point 1 and point 1 now I'm going to do that for this one for the second weight during wait and then I'm going to do the same thing for these last two things but the range I might want to adjust it is between negative 10 and 10 maybe I'm going to and I probably should cap it so it can't go below zero but whatever good enough for right now so I'm going to this I don't there's so many things about this that I don't like but it's good enough for right now I could rewrite this into a nice reusable function where I pass in the mutation rate and the amount of change I'll leave that as exercise for you so this now randomly they should be adjusted okay here we go now let's run this let's see how it behaves so we're just let this run for a little bit we're gonna do some deep breathing didn't you do to do I'm back from the past to the future speaking in a falsetto everything died out so this is this is the sad truth of this as much as I have this idea of like you know artificial general intelligence they're going to sort of like learn how to do it so much of this right now is a topdown design system and getting this to behave in a way that's going to be interesting is really adjusting and finetuning that system and you may I'm going to publish this code and the things that I would like you to think about doing is you might be able to adjust create a whole interface with sliders to adjust like the rate of how food is added how poison is added adjust the different ranges are just how much the health goes down let me try to at least get this to behave a little bit better one thing I'm going to do is I'm going to add food at a much higher rate which will make it easier I'm going to have the and also have the nutritional value of the food be a bit higher and so I'm going to make that point 3 and I'm going to actually make the poison really bad seven five okay so I'm gonna make a poison little worse and it's kind of bothering me how big those dots are which is so unnecessary but I'm going to draw them a little bit smaller I don't know why it's like designs clearly not my forte but let's let's let this run and also I could add something where I could click the mouse often add new vehicles but let's see what we get over time here there should be a lot of food you can see you know there's gonna there's some element of balance here if there's too many good things they're going to eat all the food but you can see what's left right there's a bunch let me travel to the future again doo doo doo doo doo doo doo doo doo doo doo doo doo I'm back with that one more feature where I could say just in the main sketch I'm going to say where as where the vehicles here I'm going to add the mouse drag function and I'm going to make it so that whenever I drag the mouse I'm adding new vehicles at Mouse X and mouse Y so I can run the sketch in hopes and whoops vehicles I get I just say vehicles dot push ok so I'm going to let this run for a bit hello from the future so I made some tweaks to various variables in the same like how much is the help increase and you can see now something rather optimal has kind of appeared which is what I had suspected all along and said which is that you can see here's a whole bunch of vehicles with a strong attraction to food not being so attracted a strong repulsion to poison and being able to see food much farther than be able to see poison you can see this is just propagated and they're just kind of eating up all the food now at some point they're bunch of those are going to die out but when they die they add more food so I think we have arrived now here's the thing a lot of stuff that I didn't do one thing is this would be much nicer to look at and I'm going to if I just made a little checkbox that I could check here and then I don't see the debugging information cuz I really don't watching the debugging information is just for me to have a sense of what's going on and I can barely understand where the food is and what the vehicles are doing so it would be nicer to look at it we've got add that after this video is over and have it as part of the code then of course there's all sorts of interesting possibilities here what are other things you could add to the system what are somebody suggested having the probability of reproduction be related to actually their health value so that if they're really healthy they're more likely to reproduce then if they're quite close to having a health of zero so I'm sharing that lots of creative ideas and at an interface to play with different parameters design is in a different way make this into a game somehow somebody suggested oh well the user to save them by adding food who's all sorts of possibilities here so I hope you enjoyed this really long four part coding challenge I hope that you make something creative with this evolutionary system expand on it I would love to share results of things that you guys make in future live streams or videos and so thanks for watching stay in touch leave a comment I'll be back more videos of lessons okay good bye you
