With timestamps:

00:00 - (whistle blows)
00:01 - - That's right, this is
actually a third video
00:04 - about the differences
between p5.js and Processing,
00:07 - and in this video,
00:08 - I'm going to make a list of pros and cons.
00:10 - I have to admit,
00:11 - the list is going to be
kind of a complete mess,
00:13 - a terrible diagram.
00:14 - Maybe somebody on the internet will make
00:16 - some kind of group-editable
document diagram thing
00:20 - that looks much more beautiful
00:21 - that we can all share
and enjoy and look at.
00:23 - But in any case, I'm going
to go through pros and cons
00:26 - and features of these environments and
00:28 - where it might make sense
to pick one over the other.
00:31 - And that sort of thing.
00:32 - And there's no hard and fast rules here.
00:33 - I'm going to do my best,
00:35 - and I'll also, going to answer
some questions from the chat.
00:37 - So, I'll see maybe at
the end of this video,
00:39 - maybe I'll see you in the middle,
00:40 - maybe I don't actually see anybody,
00:41 - 'cause I'm just looking at a camera.
00:43 - But, you're a real person.
00:45 - Thanks for watching.
00:46 - (whistle blows)
00:47 - So question number one
that came from the chat is,
00:48 - "What about auto completion?
00:50 - Does Processing or p5
have auto completion?"
00:52 - Well first thing I should say is p5,
00:54 - in the sense that I've shown
you as find your own editor,
00:57 - it's really about does the
editor that you're using
00:59 - have a plug-in or feature
that does auto-completion.
01:01 - And what is auto-completion?
01:02 - Auto-completion is when you're
typing ellipse or background,
01:06 - and the editor itself
gives you a suggestion
01:08 - to fill that in for you.
01:09 - And Processing three does
actually have this as a feature.
01:13 - So if I go to the preferences,
01:15 - we can see here that code
completion with control space.
01:20 - So if I were to enable this,
I could get code completion.
01:23 - And let me give that a try right now.
01:25 - So I'm going to check this,
01:26 - and we'll see if I have
to restart Processing,
01:28 - which I don't think I need to do.
01:29 - So, I could say something like f-i,
01:33 - and then say control space,
01:34 - and you can see now,
I'm getting suggestions
01:37 - of do I want to type in
fill, filter, or finish.
01:40 - And I want to do fill.
01:42 - If I type it in, and it
actually would give me
01:44 - commas there if it had multiple arguments.
01:46 - And I can say I want
to make it some color,
01:50 - and I could run it
again, and we could see,
01:53 - there we go, now I have it green.
01:54 - So there is code completion in Processing,
01:57 - but p5, when we publish a web editor
02:01 - we could discuss does it
have it, doesn't it have it.
02:04 - But this is a feature that is
part of the Processing editor.
02:06 - Question from Potato Kaboom,
02:07 - is asking about Eclipse and Processing.
02:09 - One thing that you can do, you
can make processing sketches,
02:13 - and use the processing libraries
02:14 - outside of the processing editor.
02:16 - And you can do that with
any Java editor like,
02:18 - IntelliJ, or Eclipse, or
NetBeans is one I think.
02:23 - I happen to use Eclipse quite a bit,
02:24 - and I do intend to make
a video to show you
02:26 - how to make processing
sketches in Eclipse,
02:28 - and we'll get to that soon
as part of this series
02:30 - about these different environments.
02:32 - HNG, HNGSKJ, in that chat writes,
02:36 - "What about shaders?"
02:37 - So shaders are really,
a shader is a program,
02:42 - GLSL, Graphics Language
Shader Language, GS-
02:47 - I think I got that right.
02:48 - Whatever.
02:49 - (laughs) This is something
that is part of WEBGL.
02:51 - So, Processing as part
of the p3 rendering mode,
02:55 - natively has a way to load shaders,
02:58 - and change properties in shaders,
02:59 - maybe I'll open up one of the examples.
03:01 - P5 shader support in WEBGL is coming soon.
03:04 - It's a feature that's in
development, if your a shader or
03:07 - WEBGL expert and want
to contribute to that,
03:09 - jump on to the p5 GitHub
and you can try to
03:12 - search in the issues for WEGBL,
03:13 - and you'll probably find where that is.
03:15 - So let me at least briefly
just show you here,
03:17 - if I go to file, examples
in Processing and
03:21 - I go under Shaders here, under topics.
03:27 - I could pick one, I don't
know what's a good one,
03:30 - let's try GlossyFishEye,
that sounds like fun.
03:34 - So if I run this particular example,
03:35 - you can see that there are these PShader,
03:37 - I'm standing in front of it,
I know, these Pshader objects,
03:41 - and you could see what this-
03:44 - every time I click, I guess
it changes some properties.
03:46 - And so this is using a shader.
03:48 - Shaders itself are beyond the
scope of this particular video
03:50 - but I certainly would love to come
03:51 - and do some tutorials about shaders
03:53 - or have a guest do that
at some point soon.
03:55 - Turkey in the chat asks about Mobile.
03:58 - I completely forgot to add that here.
04:02 - Here is something we can
really put in both columns.
04:05 - But the wonderful thing about working
04:07 - in a browser based environment
04:09 - is you've got Mobile essentially for free.
04:11 - Because what you program
to run on a browser,
04:13 - on a desktop computer,
04:15 - can run on a browser on a mobile device.
04:18 - So p5 sketches will just
work in both places.
04:21 - That said, there are certain kinds
04:23 - of features and functionality
that you might want
04:25 - that are different for
a mobile environment.
04:27 - And p5 is part of the
library, has a ray to track
04:31 - multi-finger touch events.
04:33 - It has variables to keep track
04:35 - of the phone's acceleration and rotation.
04:38 - So there are a lot of features
04:39 - of p5 itself that allow you access.
04:42 - Now you might want to ask though,
04:43 - "Can I actually make an app?"
04:45 - Like, yes I know I could
send people a URL...
04:48 - P5 doesn't have any
features for you to do that,
04:50 - but there are systems.
04:53 - I think the probably the most commonly
04:55 - used one is something called Cordova.
04:58 - Cordova is a framework that
allows you to take a webpage
05:01 - and turn it into a native application.
05:04 - And that actually will
allow you more access
05:06 - to certain hardware things on the phone
05:08 - that you wouldn't be able to just
05:09 - through the browser itself.
05:11 - Processing, because it's built
05:13 - on top of the Java programming language,
05:15 - you can actually make
processing sketches in Android.
05:19 - There is something called,
Processing Android.
05:21 - I believe if you go to
android.processing.org.
05:24 - You can add that as a mode to processing.
05:27 - There are tutorials there,
so you can build with
05:28 - processing native Android applications.
05:30 - This is not something I personally have
05:32 - a lot of experience
with, but it is out there
05:34 - and I know it's project that always
05:34 - needs help with maintaining.
05:37 - Android's always changing, so
if you're interested in that
05:39 - and want to contribute to
that, that's great too.
05:41 - Fun Electronics Videos in the chat asks,
05:44 - "What about exporting?"
05:45 - And boy, this is another
really big thing that I missed
05:48 - from this list and I don't
really have a lot of room left.
05:51 - So, I'm just going to write
it right here in the middle.
05:53 - Exporting.
05:55 - Exporting.
05:57 - So one thing that's really
good in terms of Processing,
06:00 - is if, oh, I'm not in the frame.
06:02 - (chuckles)
06:03 - One thing that's really
good about Processing
06:05 - is if you want to make
something that your exporting
06:09 - to another environment.
06:11 - For example, what if you want to render
06:12 - a high resolution PDF that you can print
06:15 - to a giant poster.
06:17 - What if you want to export
out and render a movie file
06:20 - that you import into After
Effects for an animation?
06:24 - What if you want to make
a stand alone application
06:26 - that someone can double click and run?
06:28 - So there are a lot of
ways to essentially export
06:31 - out your content from Processing
to other environments.
06:35 - This is a bit harder to...
06:36 - Oh I'm in the p5 side,
I wrote this totally
06:38 - in the wrong place.
06:39 - That's supposed to be over here.
06:43 - This diagram is a mess.
06:45 - P5, it's a little trickier to do that.
06:48 - There's functions that
exist in both, like Save.
06:51 - Which allow you to save
what you drew as a image
06:55 - and in p5 there's a
function that allows you
06:57 - to save what you draw as an image.
06:59 - But, unlike file management,
07:01 - this also goes in this category.
07:02 - File management, loading
files, if you have a directory
07:05 - of a thousand images,
Processing very easily can just
07:09 - open up the directory,
read all the files in it
07:11 - no matter what their name,
stick them in an array,
07:13 - load them all.
07:14 - P5, as a browser based
thing, doesn't have access
07:17 - to your hard drive.
07:19 - So you have to, kind of have images preset
07:22 - in a certain way, so to speak.
07:23 - They can be part of the sketch,
07:24 - this is a longer conversation here.
07:27 - But working with file systems
is certainly a bit easier
07:29 - to do in Processing and p5
you'll need a server side
07:32 - framework like Node or
something to go along with it,
07:35 - to have that piece of that puzzle there.
07:37 - And you can save files
out, save JSUM, save image,
07:41 - but all that's a little tricker.
07:42 - A browser will just trigger
an automatic download
07:44 - to the downloads folder.
07:46 - So it's a little tricker to
manage all that sort of stuff,
07:48 - but it's certainly possible.
07:49 - I should mention that also
Processing has a lot of features
07:52 - and libraries for exporting 3-D models.
07:57 - So, if want you want to do
is generate algorithmically
07:59 - some three dimensional
form to 3-D printed,
08:02 - that sort of thing, you can do that,
08:04 - you can save STL files natively,
08:08 - and I believe there are
libraries for doing OBJs
08:09 - and that sort of thing.
08:10 - And I have to look into
that and do a separate video
08:11 - about that.
08:12 - That's certainly another aspect of this.
08:15 - Also that came up in the
chat is Sound and Video.
08:18 - Which I don't need to write here,
08:19 - but both of these environments
actually have sound libraries
08:22 - and ways of capturing
live and recorded video.
08:25 - I think there are probably
pros and cons in each.
08:28 - Certainly, what's kind of
amazing, what you can do
08:30 - with web audio these days
in the p5 sound libraries
08:32 - written on top of that,
08:33 - and there's also a
Processing sound library.
08:35 - If you're interested in that,
maybe there's a separate
08:37 - whole video or discussion about that.
08:39 - But both of them have,
both Processing and p5 have
08:42 - libraries where you can
get access to a live camera
08:46 - or the microphone, or play sound files,
08:50 - generate sounds, synthesize
sounds, that sort of thing.
08:52 - And I have a bunch of
tutorials for p5, at least,
08:54 - about sound.
08:55 - So, thanks for watching this set of videos
08:57 - about Processing and p5 and
the differences between them.
09:01 - I didn't really get to
talk about Python at all,
09:03 - but certainly if you're
interested in number crunching
09:05 - and data science, natural
language processing,
09:07 - Python is a wonderful
language to explore as well.
09:10 - And maybe someday I'll have some guests
09:11 - on this video channel.
09:12 - I'm sure you're going to
have follow up questions.
09:15 - You can, I don't know where
the best place to compile
09:17 - them is, maybe on that
GitHub issue that I posted
09:20 - in that chat, you can ask
follow up questions there
09:21 - and I can come back and answer those
09:23 - on a live stream someday.
09:24 - So, thanks for watching this
video and I will see you
09:26 - in the next one.
09:28 - (whistle toots)
09:29 - (upbeat music)

Cleaned transcript:

(whistle blows) That's right, this is actually a third video about the differences between p5.js and Processing, and in this video, I'm going to make a list of pros and cons. I have to admit, the list is going to be kind of a complete mess, a terrible diagram. Maybe somebody on the internet will make some kind of groupeditable document diagram thing that looks much more beautiful that we can all share and enjoy and look at. But in any case, I'm going to go through pros and cons and features of these environments and where it might make sense to pick one over the other. And that sort of thing. And there's no hard and fast rules here. I'm going to do my best, and I'll also, going to answer some questions from the chat. So, I'll see maybe at the end of this video, maybe I'll see you in the middle, maybe I don't actually see anybody, 'cause I'm just looking at a camera. But, you're a real person. Thanks for watching. (whistle blows) So question number one that came from the chat is, "What about auto completion? Does Processing or p5 have auto completion?" Well first thing I should say is p5, in the sense that I've shown you as find your own editor, it's really about does the editor that you're using have a plugin or feature that does autocompletion. And what is autocompletion? Autocompletion is when you're typing ellipse or background, and the editor itself gives you a suggestion to fill that in for you. And Processing three does actually have this as a feature. So if I go to the preferences, we can see here that code completion with control space. So if I were to enable this, I could get code completion. And let me give that a try right now. So I'm going to check this, and we'll see if I have to restart Processing, which I don't think I need to do. So, I could say something like fi, and then say control space, and you can see now, I'm getting suggestions of do I want to type in fill, filter, or finish. And I want to do fill. If I type it in, and it actually would give me commas there if it had multiple arguments. And I can say I want to make it some color, and I could run it again, and we could see, there we go, now I have it green. So there is code completion in Processing, but p5, when we publish a web editor we could discuss does it have it, doesn't it have it. But this is a feature that is part of the Processing editor. Question from Potato Kaboom, is asking about Eclipse and Processing. One thing that you can do, you can make processing sketches, and use the processing libraries outside of the processing editor. And you can do that with any Java editor like, IntelliJ, or Eclipse, or NetBeans is one I think. I happen to use Eclipse quite a bit, and I do intend to make a video to show you how to make processing sketches in Eclipse, and we'll get to that soon as part of this series about these different environments. HNG, HNGSKJ, in that chat writes, "What about shaders?" So shaders are really, a shader is a program, GLSL, Graphics Language Shader Language, GS I think I got that right. Whatever. (laughs) This is something that is part of WEBGL. So, Processing as part of the p3 rendering mode, natively has a way to load shaders, and change properties in shaders, maybe I'll open up one of the examples. P5 shader support in WEBGL is coming soon. It's a feature that's in development, if your a shader or WEBGL expert and want to contribute to that, jump on to the p5 GitHub and you can try to search in the issues for WEGBL, and you'll probably find where that is. So let me at least briefly just show you here, if I go to file, examples in Processing and I go under Shaders here, under topics. I could pick one, I don't know what's a good one, let's try GlossyFishEye, that sounds like fun. So if I run this particular example, you can see that there are these PShader, I'm standing in front of it, I know, these Pshader objects, and you could see what this every time I click, I guess it changes some properties. And so this is using a shader. Shaders itself are beyond the scope of this particular video but I certainly would love to come and do some tutorials about shaders or have a guest do that at some point soon. Turkey in the chat asks about Mobile. I completely forgot to add that here. Here is something we can really put in both columns. But the wonderful thing about working in a browser based environment is you've got Mobile essentially for free. Because what you program to run on a browser, on a desktop computer, can run on a browser on a mobile device. So p5 sketches will just work in both places. That said, there are certain kinds of features and functionality that you might want that are different for a mobile environment. And p5 is part of the library, has a ray to track multifinger touch events. It has variables to keep track of the phone's acceleration and rotation. So there are a lot of features of p5 itself that allow you access. Now you might want to ask though, "Can I actually make an app?" Like, yes I know I could send people a URL... P5 doesn't have any features for you to do that, but there are systems. I think the probably the most commonly used one is something called Cordova. Cordova is a framework that allows you to take a webpage and turn it into a native application. And that actually will allow you more access to certain hardware things on the phone that you wouldn't be able to just through the browser itself. Processing, because it's built on top of the Java programming language, you can actually make processing sketches in Android. There is something called, Processing Android. I believe if you go to android.processing.org. You can add that as a mode to processing. There are tutorials there, so you can build with processing native Android applications. This is not something I personally have a lot of experience with, but it is out there and I know it's project that always needs help with maintaining. Android's always changing, so if you're interested in that and want to contribute to that, that's great too. Fun Electronics Videos in the chat asks, "What about exporting?" And boy, this is another really big thing that I missed from this list and I don't really have a lot of room left. So, I'm just going to write it right here in the middle. Exporting. Exporting. So one thing that's really good in terms of Processing, is if, oh, I'm not in the frame. (chuckles) One thing that's really good about Processing is if you want to make something that your exporting to another environment. For example, what if you want to render a high resolution PDF that you can print to a giant poster. What if you want to export out and render a movie file that you import into After Effects for an animation? What if you want to make a stand alone application that someone can double click and run? So there are a lot of ways to essentially export out your content from Processing to other environments. This is a bit harder to... Oh I'm in the p5 side, I wrote this totally in the wrong place. That's supposed to be over here. This diagram is a mess. P5, it's a little trickier to do that. There's functions that exist in both, like Save. Which allow you to save what you drew as a image and in p5 there's a function that allows you to save what you draw as an image. But, unlike file management, this also goes in this category. File management, loading files, if you have a directory of a thousand images, Processing very easily can just open up the directory, read all the files in it no matter what their name, stick them in an array, load them all. P5, as a browser based thing, doesn't have access to your hard drive. So you have to, kind of have images preset in a certain way, so to speak. They can be part of the sketch, this is a longer conversation here. But working with file systems is certainly a bit easier to do in Processing and p5 you'll need a server side framework like Node or something to go along with it, to have that piece of that puzzle there. And you can save files out, save JSUM, save image, but all that's a little tricker. A browser will just trigger an automatic download to the downloads folder. So it's a little tricker to manage all that sort of stuff, but it's certainly possible. I should mention that also Processing has a lot of features and libraries for exporting 3D models. So, if want you want to do is generate algorithmically some three dimensional form to 3D printed, that sort of thing, you can do that, you can save STL files natively, and I believe there are libraries for doing OBJs and that sort of thing. And I have to look into that and do a separate video about that. That's certainly another aspect of this. Also that came up in the chat is Sound and Video. Which I don't need to write here, but both of these environments actually have sound libraries and ways of capturing live and recorded video. I think there are probably pros and cons in each. Certainly, what's kind of amazing, what you can do with web audio these days in the p5 sound libraries written on top of that, and there's also a Processing sound library. If you're interested in that, maybe there's a separate whole video or discussion about that. But both of them have, both Processing and p5 have libraries where you can get access to a live camera or the microphone, or play sound files, generate sounds, synthesize sounds, that sort of thing. And I have a bunch of tutorials for p5, at least, about sound. So, thanks for watching this set of videos about Processing and p5 and the differences between them. I didn't really get to talk about Python at all, but certainly if you're interested in number crunching and data science, natural language processing, Python is a wonderful language to explore as well. And maybe someday I'll have some guests on this video channel. I'm sure you're going to have follow up questions. You can, I don't know where the best place to compile them is, maybe on that GitHub issue that I posted in that chat, you can ask follow up questions there and I can come back and answer those on a live stream someday. So, thanks for watching this video and I will see you in the next one. (whistle toots) (upbeat music)
