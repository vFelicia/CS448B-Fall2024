With timestamps:

00:00 - welcome back here we are again another
00:02 - video sine
00:03 - cosine waves oscillation this is where i
00:06 - left off
00:06 - i'm graphing the sine function in p5.js
00:09 - with a lot of dots
00:10 - oscillating up and down i want to get to
00:12 - the point where i can have an additive
00:14 - wave like sum a bunch of different waves
00:16 - together
00:16 - to get a more a more variable pattern
00:20 - to do that i think i really first want
00:22 - to take this example
00:23 - and make it object oriented i want to
00:26 - define the idea of a wave class
00:30 - and the wave class itself would have
00:32 - just three properties amplitude
00:34 - period and phase
00:38 - meaning whatever these values are would
00:40 - translate into a wave that maybe looks
00:42 - like this
00:44 - or one that looks like this and then the
00:47 - idea being if i could add them together
00:49 - i might get something that looks
00:52 - something like this
00:53 - not drawn precisely there is another
00:55 - aspect here that i think i need to take
00:57 - a minute to look at
00:58 - i've been really informal mostly about
01:01 - the way i'm sort of thinking about
01:02 - period or frequency
01:05 - i've just had this idea of an angle and
01:07 - then we'll increment the angle by some
01:09 - amount
01:11 - if that number is really small the
01:13 - oscillation's going to be slow
01:15 - if that number's really high it's going
01:16 - to be fast you know
01:18 - that's a longer period lower period it
01:20 - doesn't have to be exact about it i just
01:22 - want things to be able to dial things up
01:23 - and dial things down
01:25 - however if i want to think about the
01:27 - fact that i have some
01:29 - a canvas and i have this x
01:32 - axis what if i want to just take any
01:36 - given point along the x-axis
01:38 - and get the corresponding y value
01:41 - knowing what the amplitude period and
01:43 - phase are
01:44 - so there is actually a very specific
01:46 - formula that i can use
01:47 - that ties directly to amplitude and
01:50 - phase and
01:50 - maybe i should have started with this
01:52 - but i think going through this will
01:53 - really allow
01:54 - us to sink our teeth into uh waves and
01:57 - and hopefully unlock a lot of creative
01:58 - possibilities for you that you might
01:59 - make following um
02:00 - these sets of examples so um let's
02:03 - consider
02:04 - a specific scenario so i have a p5
02:05 - canvas we'll say that the width is 600
02:08 - and i want the period to be of the
02:10 - particular wave that i'm going to create
02:12 - to be uh 600 i want the full pattern to
02:15 - exist
02:16 - from the full width the one cycle
02:18 - through the wave to be the width of the
02:19 - canvas
02:20 - let's say i want the amplitude to be 100
02:23 - maybe the height of this canvas is 200
02:25 - so you know 0 is up here 200 is here so
02:28 - we've got an amplitude of 100
02:30 - in both directions so y
02:35 - for any given x
02:38 - is going to be sine
02:41 - of something the easy part here is
02:44 - probably
02:44 - times times amplitude
02:48 - and actually i know i know for a fact
02:50 - that i'm going to need a lot of space
02:52 - in between these parentheses so i'm
02:54 - going to redraw the way i'm doing that
02:59 - whatever comes out of the sine function
03:01 - is always going to be a value between
03:02 - negative 1 and 1.
03:04 - so whatever the amplitude is all i need
03:06 - to do is take this
03:07 - negative 1 in one range and multiply it
03:10 - by that amplitude
03:11 - that's going to stretch it out of course
03:12 - i could use the map function
03:14 - but you know just doing demonstrating a
03:16 - few different ways
03:17 - of doing the same thing now this
03:19 - particular scenario
03:21 - the period is 600 meaning i want to see
03:24 - one full cycle of the wave all the way
03:26 - from pixel 0
03:27 - to pure pixel 600. basically the x value
03:31 - that i'm graphing here is some
03:33 - part of the way along through the full
03:35 - period and the full period manifests
03:37 - itself
03:38 - between 0 and 2 pi so the formula for
03:41 - that let me just write it out i'm going
03:42 - to basically say
03:43 - i'm going to write it out using p5
03:44 - constants 2 pi
03:46 - times this is a times here x divided by
03:51 - period this is getting me to say like
03:53 - think about if x is 0
03:55 - 0 divided by 600 is 0 sine of 0.
03:58 - if x is 600 600 divided by 600 is 1 so
04:02 - i'm taking sine of 2 pi
04:04 - so this allows me to and given any x
04:08 - find the particular y value
04:11 - of the function given a with a given
04:14 - period
04:14 - and then multiplying the result of that
04:16 - by the amplitude now the phase i didn't
04:18 - include here
04:18 - the phase is just a little bit of an
04:20 - offset
04:22 - if i wanted the wave to start here
04:25 - this is maybe the equivalent of like pi
04:27 - divided by two
04:29 - right if the full width is two pi i
04:32 - wanted that
04:32 - to be where zero the zero value then i
04:36 - just need to
04:36 - shift everything over so that's actually
04:38 - really easy cause i can just
04:40 - add that in here phase
04:43 - plus let's see if i can write this out
04:46 - with
04:46 - with enough space
04:51 - there this is the full formula let's see
04:54 - if we can go back now to this code
04:56 - and rewrite the exact same thing but
04:59 - with uh an object that a class
05:02 - wave with an amplitude period and phase
05:05 - all right i've taken the liberty of
05:07 - creating a sketch that has a wave class
05:09 - in it with three properties
05:11 - amplitude period and phase
05:15 - so i'm going to make one wave with an
05:18 - amplitude of 200
05:20 - a period of 600 measured in pixels
05:23 - and no phase no offset now i should be
05:26 - able to write a loop
05:27 - to look at every x position from left to
05:29 - right
05:32 - i'll space each one out by 10 pixels i
05:34 - then want to get the y
05:36 - position by saying wave dot aha
05:39 - i need another function so what should
05:41 - this function be called
05:43 - now i'm tempted to call this function f
05:47 - and basically it's going to return the
05:48 - result this is but this is very like a
05:50 - very
05:51 - mathy way of doing it i think i'll just
05:53 - call this calculate right now
05:55 - so i'm going to call this calculate so
05:57 - i'm going to say y equals wave
05:59 - dot calculate the y value according to
06:02 - the x value
06:03 - and what will that be well now i've just
06:07 - got to go ahead
06:08 - and use that formula i'm just on up
06:10 - there that formula that i have over here
06:12 - right i want to say return
06:15 - sign of this dot phase x
06:19 - divided by this dot period times this
06:22 - dot amplitude
06:24 - okay so take a look at this this is
06:25 - exactly the formula i worked out on the
06:28 - board
06:28 - over there now i should be able to just
06:31 - draw
06:32 - a circle at that x position that i'm in
06:35 - the loop and the y position that i
06:36 - calculated
06:38 - let's see what i get something well
06:41 - first of all i should make these
06:42 - size 10 since that's the space and then
06:45 - this isn't exactly right
06:46 - what is wrong here oh i i forgot a
06:50 - really crucial element here right
06:52 - i'm trying to figure out where is x
06:54 - along the path
06:56 - so to speak of that full period and then
06:58 - i need to multiply that by 2 pi
07:00 - because 2 pi is the angle that goes into
07:04 - the sine function that gets me
07:05 - all the way through the cycle of the
07:07 - wave so if this has to be even longer
07:10 - this needs to say 2 pi times
07:13 - x and there we go now it's in the wrong
07:16 - place
07:17 - this is because in some of my previous
07:18 - examples i had translated the origin to
07:20 - the center
07:21 - i think i can skip doing that here and
07:23 - just add some offsets here
07:25 - so for example i know this should be
07:27 - plus height divided by 2 i should just
07:28 - move all the y
07:30 - values down a bit and we can see there
07:32 - we go i've got essentially what i had
07:34 - duplicated now from the previous example
07:36 - but i have it as an object
07:38 - which is really quite powerful because
07:40 - now i can start doing things like oh
07:42 - let me change the period to 300.
07:46 - let me change the amplitude to 50.
07:50 - let me make the offset 10
07:53 - right so all of these properties change
07:56 - the way
07:56 - the wave is visualized and ultimately
07:59 - maybe i actually would want to take this
08:01 - loop which is drawing it and make that a
08:03 - function inside the object itself so
08:05 - maybe
08:06 - a wave can render itself but i'm going
08:08 - to do something a little bit different
08:09 - here
08:09 - because i want to take multiple waves
08:12 - and add them together
08:13 - so let's turn waves into an array
08:17 - i'm going to start with arbitrarily just
08:19 - five different waves
08:21 - and i'm going to make them all random a
08:24 - random amplitude between 20 and 80.
08:26 - and a random period
08:29 - between 100 and 600 and
08:33 - a random offset between zero
08:36 - and two pi
08:40 - now that i have it as an array let's see
08:42 - if i can draw all of them and i'm going
08:43 - to use
08:44 - an enhanced for loop i'm just going to
08:45 - say let wave of waves
08:48 - and this will do exactly this for all of
08:49 - them
08:51 - so you can see there are all the waves
08:54 - and
08:54 - i'm going to say no stroke every time i
08:57 - run it
08:58 - i get a dif uh several different wave
09:00 - patterns it's sort of interesting to see
09:01 - them all just overlaid on each other
09:03 - what i was intending to do was say let
09:06 - y to add them together would say let y
09:09 - equal zero and then
09:13 - y plus equal
09:17 - whatever that way's value is and then
09:20 - draw
09:21 - the results here so this is now every
09:24 - time i run this
09:25 - this is five random waves added
09:28 - together and you can see this is
09:29 - starting to look quite a bit more
09:32 - like this example here the only
09:33 - difference is this is not
09:35 - in motion so how would i get this to be
09:37 - in motion
09:38 - that's a good one there's a few
09:40 - different ways i could probably approach
09:41 - this but for me
09:42 - they think the variable for me to play
09:44 - with to tinker with is that
09:46 - phase of each wave because right now i'm
09:49 - not panning
09:50 - across the wave i'm not seeing anything
09:52 - oscillate up and down
09:53 - because i'm looking at all the waves
09:55 - with a fixed phase they're all starting
09:57 - and stopping
09:58 - at the same place in the canvas earlier
10:01 - when i was working on this i made a very
10:02 - big mistake
10:03 - and updated the phase in here but i
10:05 - don't want to do that because
10:06 - this is happening remember for every x
10:09 - location so many many times
10:10 - i need a separate for loop that i'll
10:12 - just do afterwards
10:15 - and here i can update the phase and
10:16 - again maybe this should be a function in
10:18 - the wave class itself
10:20 - but i'm just going to very slowly just
10:23 - say phase
10:24 - plus equals 0.1 and now we can see
10:27 - there we go so now i've got essentially
10:30 - that example from before
10:32 - i kind of want to draw these a little
10:33 - bit bigger to have a little bit more
10:34 - overlapping
10:36 - i could use alpha i could start to
10:37 - connect them and color but you get the
10:39 - idea
10:39 - thanks to some folks who are tuning in
10:41 - during my while i'm recording this video
10:43 - i've got two excellent suggestions
10:44 - one is a probably a better way to name
10:47 - this function
10:48 - is with evaluate so i'm going to say
10:51 - evaluate
10:52 - and just change that here and then
10:54 - really this i agree this is really
10:56 - bothering me
10:56 - i'm going to add a function called
10:58 - update where the phase
11:00 - changes by some arbitrary amount and you
11:02 - can see this is just setting me up for
11:03 - success
11:04 - later where there might be more things
11:06 - that i want to do
11:07 - to update the wave more logic a variable
11:10 - behind what it increments by
11:12 - so i think you know the less that the
11:14 - wave itself is manipulated
11:16 - out here in the draw loop the more that
11:18 - functions are added to do that the
11:20 - better
11:20 - okay so this really wraps up this
11:22 - example i think it's quite close to what
11:24 - i had that what i demonstrated when i
11:26 - started this
11:26 - set of videos um and i think there's
11:28 - some a lot of creative possibilities how
11:30 - can you visualize this
11:31 - using color uh playing with you know how
11:34 - you orient this wave pattern
11:36 - um how you interact with it there's lots
11:38 - of possible things that i think you can
11:40 - explore
11:40 - and i hope you try to do those things
11:43 - but
11:43 - there's still a couple more videos that
11:45 - i want to make i'm going to make those
11:47 - as
11:47 - coding challenge videos in that they're
11:49 - going to be little sort of mini projects
11:51 - they'll be case studies in techniques
11:54 - that really build on top of
11:56 - all this trigonometry and oscillating
11:57 - motion stuff so i want to look at coding
11:59 - a pendulum simulation
12:01 - as well as coding a spring force a
12:03 - bouncing spring simulation
12:05 - and both of those will really be videos
12:07 - that i think take
12:08 - all of the concepts from chapters one
12:10 - and two vectors and forces
12:12 - and kind of combine those with the
12:14 - techniques that build up that that
12:15 - require angles and trigonometry
12:17 - here in these chapter three videos so
12:19 - they'll appear in this playlist if you
12:20 - happen to be in the nature of code
12:21 - playlist they'll also be standalone
12:23 - videos that you can find
12:24 - elsewhere but this might be a moment you
12:26 - know if you want to sort of wrap
12:27 - up and stop chapter three and explore
12:30 - your own exercise your own creative
12:31 - visualization
12:32 - of wave patterns and oscillating motion
12:34 - thanks i hope you enjoyed these i can't
12:36 - see
12:36 - to see what kind of beautiful patterns
12:38 - people make i'll include some
12:39 - links in this video's description to
12:41 - some creative other projects that make
12:43 - use of this kind of
12:44 - oscillating motion and i will see you in
12:46 - a
12:47 - future in chapter four or in the coding
12:49 - challenges or somewhere
12:50 - uh goodbye
12:56 - [Music]

Cleaned transcript:

welcome back here we are again another video sine cosine waves oscillation this is where i left off i'm graphing the sine function in p5.js with a lot of dots oscillating up and down i want to get to the point where i can have an additive wave like sum a bunch of different waves together to get a more a more variable pattern to do that i think i really first want to take this example and make it object oriented i want to define the idea of a wave class and the wave class itself would have just three properties amplitude period and phase meaning whatever these values are would translate into a wave that maybe looks like this or one that looks like this and then the idea being if i could add them together i might get something that looks something like this not drawn precisely there is another aspect here that i think i need to take a minute to look at i've been really informal mostly about the way i'm sort of thinking about period or frequency i've just had this idea of an angle and then we'll increment the angle by some amount if that number is really small the oscillation's going to be slow if that number's really high it's going to be fast you know that's a longer period lower period it doesn't have to be exact about it i just want things to be able to dial things up and dial things down however if i want to think about the fact that i have some a canvas and i have this x axis what if i want to just take any given point along the xaxis and get the corresponding y value knowing what the amplitude period and phase are so there is actually a very specific formula that i can use that ties directly to amplitude and phase and maybe i should have started with this but i think going through this will really allow us to sink our teeth into uh waves and and hopefully unlock a lot of creative possibilities for you that you might make following um these sets of examples so um let's consider a specific scenario so i have a p5 canvas we'll say that the width is 600 and i want the period to be of the particular wave that i'm going to create to be uh 600 i want the full pattern to exist from the full width the one cycle through the wave to be the width of the canvas let's say i want the amplitude to be 100 maybe the height of this canvas is 200 so you know 0 is up here 200 is here so we've got an amplitude of 100 in both directions so y for any given x is going to be sine of something the easy part here is probably times times amplitude and actually i know i know for a fact that i'm going to need a lot of space in between these parentheses so i'm going to redraw the way i'm doing that whatever comes out of the sine function is always going to be a value between negative 1 and 1. so whatever the amplitude is all i need to do is take this negative 1 in one range and multiply it by that amplitude that's going to stretch it out of course i could use the map function but you know just doing demonstrating a few different ways of doing the same thing now this particular scenario the period is 600 meaning i want to see one full cycle of the wave all the way from pixel 0 to pure pixel 600. basically the x value that i'm graphing here is some part of the way along through the full period and the full period manifests itself between 0 and 2 pi so the formula for that let me just write it out i'm going to basically say i'm going to write it out using p5 constants 2 pi times this is a times here x divided by period this is getting me to say like think about if x is 0 0 divided by 600 is 0 sine of 0. if x is 600 600 divided by 600 is 1 so i'm taking sine of 2 pi so this allows me to and given any x find the particular y value of the function given a with a given period and then multiplying the result of that by the amplitude now the phase i didn't include here the phase is just a little bit of an offset if i wanted the wave to start here this is maybe the equivalent of like pi divided by two right if the full width is two pi i wanted that to be where zero the zero value then i just need to shift everything over so that's actually really easy cause i can just add that in here phase plus let's see if i can write this out with with enough space there this is the full formula let's see if we can go back now to this code and rewrite the exact same thing but with uh an object that a class wave with an amplitude period and phase all right i've taken the liberty of creating a sketch that has a wave class in it with three properties amplitude period and phase so i'm going to make one wave with an amplitude of 200 a period of 600 measured in pixels and no phase no offset now i should be able to write a loop to look at every x position from left to right i'll space each one out by 10 pixels i then want to get the y position by saying wave dot aha i need another function so what should this function be called now i'm tempted to call this function f and basically it's going to return the result this is but this is very like a very mathy way of doing it i think i'll just call this calculate right now so i'm going to call this calculate so i'm going to say y equals wave dot calculate the y value according to the x value and what will that be well now i've just got to go ahead and use that formula i'm just on up there that formula that i have over here right i want to say return sign of this dot phase x divided by this dot period times this dot amplitude okay so take a look at this this is exactly the formula i worked out on the board over there now i should be able to just draw a circle at that x position that i'm in the loop and the y position that i calculated let's see what i get something well first of all i should make these size 10 since that's the space and then this isn't exactly right what is wrong here oh i i forgot a really crucial element here right i'm trying to figure out where is x along the path so to speak of that full period and then i need to multiply that by 2 pi because 2 pi is the angle that goes into the sine function that gets me all the way through the cycle of the wave so if this has to be even longer this needs to say 2 pi times x and there we go now it's in the wrong place this is because in some of my previous examples i had translated the origin to the center i think i can skip doing that here and just add some offsets here so for example i know this should be plus height divided by 2 i should just move all the y values down a bit and we can see there we go i've got essentially what i had duplicated now from the previous example but i have it as an object which is really quite powerful because now i can start doing things like oh let me change the period to 300. let me change the amplitude to 50. let me make the offset 10 right so all of these properties change the way the wave is visualized and ultimately maybe i actually would want to take this loop which is drawing it and make that a function inside the object itself so maybe a wave can render itself but i'm going to do something a little bit different here because i want to take multiple waves and add them together so let's turn waves into an array i'm going to start with arbitrarily just five different waves and i'm going to make them all random a random amplitude between 20 and 80. and a random period between 100 and 600 and a random offset between zero and two pi now that i have it as an array let's see if i can draw all of them and i'm going to use an enhanced for loop i'm just going to say let wave of waves and this will do exactly this for all of them so you can see there are all the waves and i'm going to say no stroke every time i run it i get a dif uh several different wave patterns it's sort of interesting to see them all just overlaid on each other what i was intending to do was say let y to add them together would say let y equal zero and then y plus equal whatever that way's value is and then draw the results here so this is now every time i run this this is five random waves added together and you can see this is starting to look quite a bit more like this example here the only difference is this is not in motion so how would i get this to be in motion that's a good one there's a few different ways i could probably approach this but for me they think the variable for me to play with to tinker with is that phase of each wave because right now i'm not panning across the wave i'm not seeing anything oscillate up and down because i'm looking at all the waves with a fixed phase they're all starting and stopping at the same place in the canvas earlier when i was working on this i made a very big mistake and updated the phase in here but i don't want to do that because this is happening remember for every x location so many many times i need a separate for loop that i'll just do afterwards and here i can update the phase and again maybe this should be a function in the wave class itself but i'm just going to very slowly just say phase plus equals 0.1 and now we can see there we go so now i've got essentially that example from before i kind of want to draw these a little bit bigger to have a little bit more overlapping i could use alpha i could start to connect them and color but you get the idea thanks to some folks who are tuning in during my while i'm recording this video i've got two excellent suggestions one is a probably a better way to name this function is with evaluate so i'm going to say evaluate and just change that here and then really this i agree this is really bothering me i'm going to add a function called update where the phase changes by some arbitrary amount and you can see this is just setting me up for success later where there might be more things that i want to do to update the wave more logic a variable behind what it increments by so i think you know the less that the wave itself is manipulated out here in the draw loop the more that functions are added to do that the better okay so this really wraps up this example i think it's quite close to what i had that what i demonstrated when i started this set of videos um and i think there's some a lot of creative possibilities how can you visualize this using color uh playing with you know how you orient this wave pattern um how you interact with it there's lots of possible things that i think you can explore and i hope you try to do those things but there's still a couple more videos that i want to make i'm going to make those as coding challenge videos in that they're going to be little sort of mini projects they'll be case studies in techniques that really build on top of all this trigonometry and oscillating motion stuff so i want to look at coding a pendulum simulation as well as coding a spring force a bouncing spring simulation and both of those will really be videos that i think take all of the concepts from chapters one and two vectors and forces and kind of combine those with the techniques that build up that that require angles and trigonometry here in these chapter three videos so they'll appear in this playlist if you happen to be in the nature of code playlist they'll also be standalone videos that you can find elsewhere but this might be a moment you know if you want to sort of wrap up and stop chapter three and explore your own exercise your own creative visualization of wave patterns and oscillating motion thanks i hope you enjoyed these i can't see to see what kind of beautiful patterns people make i'll include some links in this video's description to some creative other projects that make use of this kind of oscillating motion and i will see you in a future in chapter four or in the coding challenges or somewhere uh goodbye
