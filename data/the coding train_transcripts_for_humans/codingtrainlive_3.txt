With timestamps:

00:08 - [Music]
00:28 - do
00:33 - [Music]
00:42 - so
00:45 - [Music]
00:56 - do
00:59 - [Music]
01:18 - [Music]
01:38 - do
01:42 - [Music]
01:52 - do
01:53 - [Music]
02:48 - do
02:52 - [Music]
03:16 - do
03:19 - [Music]
03:30 - do
03:35 - [Music]
04:10 - [Music]
04:13 - check one two audio check
04:17 - uh let me know how i sound especially in
04:20 - relation to the music behind me
04:22 - and um i will
04:25 - [Music]
04:26 - see you all with my face and my voice
04:29 - in about two minutes
04:42 - [Music]
04:54 - so
04:58 - [Music]
05:42 - [Music]
05:50 - me
05:53 - [Music]
06:04 - do
06:09 - [Music]
06:46 - oh one more minute please everybody okay
06:49 - i'll be here in one minute
07:03 - [Music]
07:28 - do
07:32 - [Music]
07:36 - hello everyone and welcome to a saturday
07:39 - afternoon
07:41 - episode of the coding train live coming
07:44 - to you live here from brooklyn sorry for
07:45 - that little glitch
07:47 - i've had to take an extra round of this
07:49 - one-minute song that's having a little
07:51 - difficulty
07:52 - getting some things set up here so i am
07:54 - thrilled to be here with you today
07:56 - if this is your first time watching
07:59 - welcome um one of the things that i like
08:01 - to do
08:02 - is offer a little prompt to hear from
08:04 - folks in the chat
08:06 - nothing too extraordinary today is my
08:08 - prompt i would like to know
08:09 - what did you have for breakfast today so
08:12 - i know it might be
08:13 - it's 1 p.m um where i am in the eastern
08:16 - time zone
08:16 - but it could be any time of day for you
08:18 - wherever you're watching from so maybe
08:20 - you had breakfast earlier today maybe
08:21 - you're about to have breakfast
08:23 - what are you having for breakfast today
08:25 - let me know it's fun to see the flurry
08:27 - of activity in the chat gives me a sense
08:29 - of who's watching where everybody's from
08:31 - and what kinds of things
08:32 - i should think about eating for
08:33 - breakfast in the future
08:35 - all right so um before i forget i have i
08:38 - guess i you know i'm not
08:39 - once uh you know in case you think that
08:41 - i'm organized and have any sort of plan
08:43 - not really but before i start rambling
08:47 - too much and forget
08:48 - and i'm not sure what is going on i have
08:50 - like a little i just had a cookie
08:52 - that's a little snack and there's a
08:53 - little piece caught in my mouth i see
08:56 - eggs and bacon and a bagel corn flakes a
08:58 - cup of coffee
08:59 - cake and coffee bread toast
09:03 - i saw something what i'm always curious
09:05 - about is
09:07 - uh aki and salt fish with fried dumpling
09:10 - dumplings says shaquille where are you
09:13 - from where you had that i
09:15 - am fascinated and by savory breakfasts
09:18 - and places and cultures around the world
09:20 - where
09:20 - you eat what is commonly thought of in
09:24 - my world as a lunch or a dinner kind of
09:26 - food but for breakfast
09:27 - a dosa with tea
09:30 - last night pizza microwaved pancakes
09:33 - by the way i am not the best cook chef
09:36 - baker
09:37 - maker of food items in the world but i
09:39 - do have a speciality
09:41 - pancakes my children can attest that my
09:44 - pancakes are excellent
09:46 - i like to make them with a whoa already
09:51 - welcome to mike
09:56 - you have just joined the coding train
10:00 - what have you won with your membership
10:03 - of the coding train
10:04 - well my everlasting undying gratitude
10:09 - the fact that your name pops up in green
10:11 - on my screen over here and i can see it
10:14 - mike are you even watching right now
10:15 - what did you have for breakfast but
10:18 - we must find you a random number now
10:21 - there is an interesting question here
10:23 - which is last time i live stream i had a
10:27 - lot of plans
10:28 - for this discord bot that was going to
10:30 - help assign
10:32 - random numbers and uh
10:35 - create random walk patterns and all
10:37 - sorts of things i have no idea if i have
10:38 - any of that
10:39 - i certainly didn't do any work on it
10:41 - lots of other things are going on
10:43 - so i will just return to my book
10:46 - and boy you know i had a life-changing
10:48 - moment last week on the live stream
10:51 - where i learned something about this
10:53 - book
10:54 - which says a million random digits now i
10:58 - might say that this book was misleading
11:01 - me but it was not it in fact
11:02 - it was quite clear it's written right
11:05 - here
11:06 - a million random digit what is a digit
11:09 - after all
11:10 - then one single number a character
11:14 - a single character that represents a
11:17 - digit
11:18 - zero one two three four five six seven
11:20 - eight or nine
11:21 - so i foolishly
11:24 - read this in my mind always as a million
11:27 - random numbers now
11:29 - you could also say that there are there
11:30 - are a million random numbers in this
11:32 - book
11:33 - but i always thought of each random
11:35 - number and let me see if you can see
11:37 - this
11:37 - i don't know uh it's divided if you look
11:39 - at any given page
11:42 - as in groups of five digits
11:45 - meaning a five digit number or a number
11:47 - between zero and ninety nine thousand
11:49 - nine hundred
11:50 - and ninety nine but there are only two
11:54 - hundred thousand of those
11:55 - because there are 1 million digits 1
11:58 - million divided by 5 is 200 000.
12:00 - so i have something new in my thinking
12:04 - you know as
12:04 - my uh desire is to give out
12:08 - in this world one million
12:11 - a random number for everybody that's my
12:14 - dream in life it's for everybody in the
12:16 - world to have a random number
12:18 - i don't know that's that's kind of like
12:20 - i think there's a problem with that
12:21 - because really people should have names
12:24 - and they should have names that feel
12:25 - meaningful to them that you feel a
12:26 - certain
12:27 - sense of when you're called by that name
12:29 - there's an intimacy a friendship
12:31 - there and i don't know i think maybe the
12:33 - whole idea of everybody having a number
12:35 - is problematic
12:37 - so take that out take that aside i love
12:39 - random numbers
12:40 - and that's a fun little thing we do here
12:42 - when somebody joins
12:43 - i give them a random number it's a gap a
12:45 - little friendly gift it's like a random
12:46 - number with a heart
12:47 - from me to you um and i sort of flip
12:50 - through the pages and
12:52 - ultimately though i'm giving you an
12:53 - index into this book because
12:55 - then you will have your own
12:56 - pseudo-random number sequence of all the
12:58 - other numbers that follow
12:59 - which you could generate an algorithmic
13:01 - pattern that is the same
13:02 - every time with that pseudo-random
13:04 - number sequence
13:07 - so mike welcome to passengers your
13:09 - random number is
13:11 - uh on page 141 it is
13:14 - row 7020 and it is column
13:18 - zero one two three and the number here
13:22 - and i
13:23 - no longer i'm gonna think of these as
13:25 - numbers but as
13:26 - sequences of digits your five digit
13:28 - number is nine two three eight
13:30 - zero ultimately i i
13:34 - spent a lot of time doing a lot of math
13:36 - trying to figure out how long it would
13:37 - take me to read this entire book
13:39 - and i'm starting to think that that
13:40 - might be a bit more realistic than i
13:42 - thought
13:43 - like could i do a live stream right if
13:46 - there's just a million
13:47 - digits and i can read them like this
13:50 - eight zero zero four three how many can
13:51 - i read in one minute
13:52 - ready somebody set it up hold on i'm
13:54 - gonna set a timer here
13:56 - i'm gonna set a timer this is what this
13:58 - is by the way the thing that i was
14:00 - trying not to forget
14:02 - was to thank the sponsor of this live
14:04 - stream curiosity stream i'll do that in
14:06 - a minute
14:07 - but i'm on a little tangent here i can't
14:09 - get off can't get off this
14:10 - random number reading calculus train
14:13 - uh where is my stopwatch uh
14:17 - timer all right we're gonna start at one
14:21 - minute
14:23 - i'm gonna start at the very beginning
14:24 - i'm gonna try to read it should i try to
14:26 - read it faster i'm gonna read it at a
14:27 - regular pace
14:28 - because i think if i'm going to do this
14:30 - whole book as a full live stream
14:32 - you know when i hit 1 million
14:33 - subscribers oops
14:37 - what about if i hit when i hit one point
14:39 - i already hit that also oh well
14:42 - uh um uh here we go
14:45 - ready and one minute timer
14:48 - go one zero zero nine seven three two
14:51 - five three three seven six five two zero
14:53 - one three five eight six
14:55 - three four six seven three five four
14:58 - eight seven six eight zero nine five
15:00 - nine zero nine one one seven three nine
15:02 - two nine two seven four nine four five
15:04 - three seven five four two zero four
15:06 - eight zero five
15:07 - six four eight nine four seven four two
15:09 - nine six two eight
15:11 - two sorry two four eight zero five two
15:13 - four zero three seven
15:14 - two zero six three six one zero four
15:17 - zero two zero zero eight two two
15:19 - nine one six six five zero eight four
15:21 - two two six eight nine
15:23 - five three one nine six four five zero
15:25 - nine three zero three
15:26 - two three two zero nine zero two five
15:28 - six zero one five nine five
15:30 - three three four seven six four three
15:32 - five zero eight zero three three six
15:34 - zero six nine nine zero one nine zero
15:37 - two
15:38 - zero two five two nine zero nine three
15:40 - seven six seven zero seven one five
15:42 - three eight three one one three one one
15:44 - six five eight eight six seven six
15:46 - seven four three stein seven zero four
15:48 - four three six
15:49 - two seven
15:57 - [Music]
16:01 - how long does this go on for it's called
16:03 - by the seaside
16:08 - i didn't repeat so that's amazing okay
16:10 - all right everybody
16:12 - stop i've completely forgotten where i
16:15 - got to
16:16 - could anybody please in the chat
16:20 - um tell me what numb what was the last
16:23 - sequence of numbers i read i have no
16:26 - idea
16:27 - like i have literally zero idea
16:31 - while i'm waiting for you to tell me i'm
16:33 - gonna take a moment
16:35 - a spoiler alert for today is a topic to
16:38 - thank
16:39 - today's sponsor
16:43 - curiosity stream launched by media
16:46 - visionary john hendricks
16:48 - who founded the discovery channel
16:50 - curiosity stream is the award-winning
16:52 - destination for documentary films and tv
16:54 - shows covering every topic
16:55 - from space exploration space exploration
16:58 - to adventure to the secret lives of wild
17:00 - animals and actually
17:01 - abe thank you to cody drain viewer abe
17:03 - who recommended two
17:05 - things for me to watch i've been making
17:06 - my way through hannah fry dr hannah
17:08 - fry's
17:09 - series about maths and data um man's
17:12 - first friend i have a dog gloria pickle
17:15 - whom i love very much and there's a
17:16 - whole documentary film
17:18 - about dogs all around the world in
17:20 - different cultures and the history of
17:22 - dogs
17:22 - and humans together um so if you're
17:24 - interested you can
17:25 - sign up in the link that's in the chat
17:28 - and in the description and on the screen
17:30 - and you'll get a 26 discount on the
17:33 - annual hd plan
17:35 - by the way guess what that's 14.79
17:40 - for the entire year um and also get
17:43 - access
17:44 - oh this is kind of like i'm burying the
17:46 - lead here you get access to the video
17:47 - streaming service nebula
17:48 - which is a streaming service that i'm a
17:50 - part of along with many other youtube
17:52 - creators
17:53 - there's originals on there there's
17:54 - nebula plus content find a lot of other
17:56 - youtube channels
17:57 - not to be aware existed and watch them
17:59 - on nebula when you sign up for curiosity
18:01 - stream using the link on the screen in
18:03 - the chat
18:03 - so um again the nebula itself i think is
18:06 - i forgot what the price is but it's some
18:08 - amount of money per month and you just
18:10 - get that
18:10 - for free along with the along with your
18:12 - actual stream all right did somebody
18:14 - tell me what number i was on
18:16 - uh zero four four three six two seven
18:19 - okay
18:20 - let me find that they find that
18:24 - anybody have a magnifying glass for me
18:26 - oh my vision these by the way are
18:27 - progressive lenses
18:29 - and i was so thrown off by the way the
18:31 - world
18:32 - looked when i first got them now i'm
18:33 - totally used to them but i think i need
18:34 - them to be
18:36 - dialed up a little bit because i'm
18:37 - trouble reading again all right
18:39 - uh zero four four three six two seven
18:42 - where could that be
18:44 - zero four four oh this is the worst
18:48 - [Music]
18:49 - please hold
18:51 - [Music]
18:55 - oh i found it zero four four three six
18:58 - two three six two seven okay i found it
19:02 - that didn't seem like i made it so i
19:03 - read one two three four
19:06 - one two three four five six seven eight
19:08 - nine ten
19:09 - fifty digits a hundred digits let's just
19:12 - round it up
19:13 - a hundred hundred fifty let's just say i
19:15 - read 200 digits in one minute
19:18 - does that seem reasonable uh
19:21 - 10 10 20 30 40 of these
19:24 - uh groups of five times five is 200.
19:29 - so one minute if it takes me to read 200
19:33 - digits one million
19:37 - digits divided by 200
19:41 - is 5 000 minutes which is about 83
19:45 - hours all right
19:48 - i still don't think it's very much more
19:50 - realistic than when i thought it was
19:52 - a million five digit numbers but 83
19:56 - hours is still
19:57 - like three and a half days
20:00 - i don't know i don't know um
20:03 - maybe somebody can just check fact check
20:06 - my math there
20:07 - let me i got to move some things around
20:10 - uh oh boy i've got a thing going on over
20:13 - here
20:14 - a thing going on over here i'm not in
20:17 - the right place
20:20 - um okay uh clear
20:24 - local chat all right so what have we got
20:27 - in store
20:28 - for you today so first i'd like to do
20:30 - some kind of like
20:31 - updates i mean it's not really breaking
20:33 - news but i'll play my breaking news
20:37 - [Music]
20:43 - so um coding train what's happening on
20:47 - the coding train
20:49 - um first of all if uh i'm live
20:52 - right now uh yesterday i released
20:55 - a guest conductor video with uh lily
20:59 - james from the twirling tech goddess uh
21:01 - it's a really wonderful youtube channel
21:04 - let me just see if i can just go over
21:07 - and look at the full channel for a
21:09 - moment
21:10 - um and you'll see that lily does a lot
21:13 - of work
21:14 - with 3d printing and fashion hardware
21:17 - like i'm always looking for guests to
21:20 - feature videos
21:21 - um on topics that i don't really touch
21:24 - on lily has a really fun
21:25 - unique personality she has a twirl test
21:29 - for her technology
21:30 - um has a lot of energy and enthusiasm uh
21:34 - a a nice set of subscribers here on
21:36 - youtube but could um
21:37 - could use a little coding train boost so
21:39 - if you have a chance to check out lily's
21:41 - channel and subscribe
21:42 - i'm a big fan and i think it would be
21:44 - great to show her a little bit of love
21:46 - so um and john is suggesting in the chat
21:50 - record yourself saying zero to nine and
21:52 - build code that plays your audio
21:54 - yes so that would definitely be a great
21:56 - project for a live stream someday
21:58 - i'm having a bit of an issue which leads
22:01 - me to
22:02 - kind of the topic for today which is
22:04 - that i need to move this out of my way
22:06 - oh my goodness i have so many things in
22:07 - weird places
22:09 - sorry i'm kind of i hate to say this
22:11 - because i probably shouldn't
22:13 - alert you to this fact but i'm trying to
22:16 - sign up for something related to
22:17 - something i want to get for my kids i'm
22:19 - in like an online queue kind of thing
22:21 - and so i might have to take just like a
22:24 - one minute
22:25 - to like get something real quick over
22:27 - here uh
22:29 - when it's my turn so if i'm a little bit
22:31 - distracted today please
22:33 - uh bear with me um
22:36 - and boy
22:40 - whose name is very aptly named who's
22:43 - youtube username boy which maybe is your
22:45 - real name i'm not sure loves the boyd's
22:47 - coding challenge and
22:49 - that's what i'm doing prothomesh says i
22:52 - am here what did i miss
22:54 - where's my absolutely nothing
22:58 - sound drop absolutely nothing sing it
23:01 - again now
23:02 - um just me talking trying to count
23:06 - up to a million with random numbers and
23:08 - doing some useless stuff
23:10 - um but um one of the things that is you
23:13 - know i have
23:14 - i suffer from having trying to do too
23:16 - many things at once with the coding
23:18 - train
23:19 - uh have sort of a fun coding live
23:22 - show which is what i'm doing now which
23:24 - is really just me rambling because i
23:25 - don't have time to prepare
23:27 - and do segments or have lots of things
23:29 - organized for it
23:30 - i use the videos for actual curriculum
23:34 - that i am teaching in courses at nyu
23:37 - that's really where
23:38 - all almost all of my focus is right now
23:40 - in teaching the course the nature of
23:42 - code at nyu
23:43 - for a group of 31 students and so
23:47 - i am refreshing and redoing all of the
23:49 - videos
23:50 - probably a better place for me to look
23:52 - at it is here and you'll notice
23:54 - that it stops with chapter three and you
23:57 - might be wondering
23:59 - how are you possibly getting through a
24:01 - semester only having the content up
24:03 - until chapter three
24:04 - well good news for you cody trade
24:06 - viewers
24:07 - i have already finished the videos for
24:09 - chapter four
24:10 - and my students are watching them now in
24:12 - fact if you are a coding trained member
24:14 - i might have shared
24:15 - with you some sneak peeks of them but
24:17 - i'm still working on the descriptions
24:19 - and the code and the thumbnails
24:21 - so those will appear uh hopefully
24:22 - they'll come out like boom boom one per
24:24 - day
24:25 - um this week i'm hoping because i should
24:27 - be able to finish those up
24:29 - with all the folks that are helping me
24:31 - uh with that thank you to matia
24:33 - and violet and psy and kobe i don't like
24:36 - naming random people who are helping
24:37 - with coding trade things now realizing
24:38 - i'm gonna forget somebody
24:40 - um so stay tuned and i have begun the
24:43 - process
24:44 - of recording the videos for chapter six
24:48 - autonomous agents and i have already
24:50 - recorded but they have not been edited
24:51 - and put together
24:52 - the first two videos for this chapter so
24:54 - i'm getting a little bit ahead
24:55 - um i do another news item here and i'm
24:59 - totally remiss in remembering to think
25:01 - about this since last week
25:03 - but i really i really it's important to
25:05 - me to do at le
25:06 - a video for pi day which um what's
25:09 - today's date
25:10 - i can't figure out what today's date is
25:11 - the 6th of march
25:14 - it's soon it's 8 days away is that next
25:18 - thursday
25:19 - next friday i'm not really sure no next
25:20 - saturday is the 20th
25:22 - no that's the third no i've got more
25:23 - time than i think
25:26 - it's a sunday right sunday would be pi
25:29 - day oh maybe i could just no i can't do
25:31 - a live stream next weekend i uh maybe i
25:33 - could
25:33 - i don't know what i'm going to do but i
25:36 - would like to record a video about pi
25:37 - day
25:38 - and i've got a couple suggestions here
25:41 - oh oh
25:42 - wait a sec what happened here oh hold on
25:45 - hold on please hold
25:46 - please hold intermission for just two
25:48 - minutes okay everybody i'll be right
25:50 - back oh but but uh put your ideas for pi
25:54 - day in the chat or what you ate for
25:56 - breakfast because i kind of missed a lot
25:57 - of those i'll be right back i swear
25:59 - this is going to be less than less than
26:00 - a minute
26:11 - [Music]
26:27 - [Music]
26:36 - so
26:38 - [Music]
26:40 - that was i'm back see how fast that was
26:43 - you didn't miss anything
26:45 - i lose all my viewers
26:49 - um all right so
26:52 - i'm looking over here so um i'm not
26:54 - going to spend any time on this i'm kind
26:56 - of
26:57 - into this co-factors random number idea
27:00 - oh
27:01 - i can't remember whether i thought of
27:03 - this but simon gave me some or whether
27:05 - simon's on a bit or who thought of it
27:06 - simon definitely gave me some good
27:07 - advice about this ah the pendulum yes
27:10 - i'm really into the idea of creating a
27:12 - pendulum and then using computer vision
27:14 - to track the amount of time it takes
27:16 - let's just look at the suggestion
27:17 - directly
27:18 - measure out a physical 2.45 meter long
27:22 - pendulum
27:22 - then use computer vision to calculate
27:24 - where it is it should take around pi
27:26 - seconds to complete one cycle all right
27:28 - i have to admit something
27:30 - i am kind of um
27:33 - very well how should i put this um
27:35 - kindly
27:36 - i'm a klutz i'm very inept
27:40 - when it comes to mechanical things
27:43 - whether it's
27:44 - mechanic hardware uh
27:48 - tools crafts i'm just terrible at all of
27:52 - that stuff
27:53 - so it might seem ridiculous but the
27:56 - prospect of actually making this
27:58 - pendulum
27:58 - is quite daunting for me i don't even
28:01 - know where to
28:02 - start like do i just need string how do
28:04 - i tie the string to the thing the bob at
28:06 - the bottom what should i get for the bob
28:08 - so i welcome your suggestions for what
28:12 - kinds of materials i need
28:14 - a youtube video that has a nice tutorial
28:17 - for how to make the pendulum
28:19 - i don't know any suggestions please put
28:21 - them in this
28:22 - github issue that was started by simon
28:25 - all right i don't want to spend too long
28:26 - on this i hope
28:27 - that you know sometime early next week
28:30 - monday or tuesday maybe
28:31 - i can record a video and then have it
28:33 - out on pi day
28:35 - we'll see we'll see i've got a lot to do
28:37 - i've gotta
28:38 - gotta keep up with the videos for this
28:40 - course so one of the things that i
28:42 - the the primary thing that i want to use
28:44 - today's live stream for
28:46 - is to work out some steering force
28:50 - example code that i have not yet
28:53 - included in the nature of code book
28:55 - whether i would use that as an exercise
28:57 - solution
28:58 - or another additional video tutorial i'm
29:01 - not sure
29:02 - but this is a nice opportunity for me to
29:06 - expand the material that i have
29:09 - so if i were to go to
29:12 - i think the
29:15 - nature of code examples p5js
29:21 - and go into chapter six i would see that
29:24 - i have
29:24 - these steering behaviors uh crowd path
29:28 - following let me leave that one aside
29:29 - for a second because that's
29:30 - an exercise there's no tutorial or
29:33 - uh part of the book on that seek
29:36 - arrive stay within walls which is one
29:39 - that i've made up
29:40 - it's not on the craig reynolds uh in the
29:43 - original steering force's paper which i
29:45 - will um uh bring up in a second
29:48 - flow field path following separation
29:51 - separation and seek
29:52 - and then the ultimate example of
29:55 - everything put together the flocking
29:56 - system and i have covered a lot of this
29:58 - in coding challenges and in older
30:00 - processing java video video tutorials
30:02 - i'm rebooting
30:03 - all of that right now very excited about
30:06 - it
30:06 - i am householding
30:10 - i wonder who this guy i'm just like i
30:12 - probably i know i'm not gonna look
30:13 - it's just funny like householding i
30:16 - think
30:16 - is maybe uh what what's meant here with
30:19 - maybe i put that in there is
30:20 - housekeeping
30:21 - um uh uh but thank you to alan wolves
30:25 - for your wonderful
30:26 - um pull request that was accepted here
30:29 - um
30:29 - maybe there's a nice translation from
30:31 - the perhaps french where that makes more
30:33 - sense all right um
30:35 - ah so uh let me not
30:38 - spend any more time and
30:41 - uh chris is pointing out would be tricky
30:44 - to hang a two
30:46 - uh 0.45 meter pendulum so i could
30:49 - probably do a shorter one in this and
30:51 - then do
30:52 - time multiple right if it's half of it
30:55 - wouldn't i want would i
30:56 - time like two uh period two cycles
31:00 - um anyway i will i will work that out
31:03 - somebody will suggest for me
31:05 - yeah shorter would be great um
31:08 - and what am i doing here
31:16 - ah steering behaviors yeah okay so this
31:19 - if you have uh
31:20 - where to start
31:29 - here we are this is where i want to
31:30 - start if you are not familiar with this
31:32 - work
31:33 - and you like the kinds of things that i
31:35 - explore on the coding train
31:37 - you're missing out you know maybe not
31:40 - everybody in the world is missing out on
31:41 - this
31:42 - but you're a viewer here of the coding
31:43 - train you know if you are a beginner to
31:45 - code if you've found this channel and
31:47 - are watching because you're just
31:48 - starting on your coding journey
31:50 - some of the elements described some of
31:52 - the code required
31:54 - for the implementation of this is pretty
31:56 - sophisticated and so you might
31:58 - hold off to return to it later but the
32:01 - concepts here i think are quite
32:02 - accessible and understandable
32:04 - um and it's sort of like a core the
32:06 - principles described in this
32:07 - uh paper which is from the game
32:09 - developers conference
32:11 - 1999 i would like to know right now this
32:14 - is where i really need to finish that
32:15 - stupid live poll thing because i could
32:18 - just throw it up right now
32:19 - how many of my viewers or the viewers
32:22 - right now of this live stream
32:24 - were born in 1999. i was definitely
32:27 - alive then in fact i probably i hadn't
32:30 - started to learn to code really in 1999
32:33 - um i started actually i started to learn
32:35 - to code about 2001 but i learned quite
32:38 - late i
32:38 - i can't do the math but um i was born in
32:41 - 1973 so you do the math i graduate this
32:44 - is
32:44 - this paper came out after i graduated
32:46 - from college and i'm assuming a lot of
32:48 - you were not yet born
32:49 - um it's an incredible paper um
32:52 - and um it forms the basis for
32:56 - so much that you see today in
32:59 - um in computer graphics
33:03 - in animation in games in hollywood
33:05 - cinema
33:06 - if that's the right way to say it um um
33:09 - it's just it's so foundational and
33:11 - probably and it's also a big source of
33:12 - information for many
33:14 - creative coding artists um casey reese
33:17 - one of the creators of processing to
33:18 - name one i don't know i got a piece of
33:20 - hair
33:20 - somewhere on me
33:24 - oh this beard i did not have a beard in
33:26 - 1999 i was a fresh-faced
33:28 - youth back then oh it was a different
33:31 - time
33:31 - [Music]
33:34 - all right 1991
33:38 - 2000 1990 1990 1988. all right we've got
33:42 - somebody who started coding in 1988 mwah
33:47 - what were you coding on in 1988 and um
33:50 - i can't read your name because it
33:51 - doesn't use my my knowledge of other
33:54 - non-uh english language character sets
33:57 - is very small ah sad sanko is older than
34:01 - me
34:02 - um danielle was 17.
34:06 - um i'm lovely i love reading the chat
34:09 - this is fun
34:10 - really fun for me to see i always like
34:12 - to um
34:13 - to try to understand the viewership and
34:16 - i'm always
34:17 - surprised and really pleasantly
34:19 - surprised at how
34:20 - young and again i hear from everybody i
34:23 - hear from people who are
34:25 - um older and retired and learning to
34:28 - code or had a long career of coding who
34:30 - are enjoying some of the stuff that i'm
34:32 - doing
34:32 - and provide helpful feedback i hear from
34:35 - people who are very young and they're
34:37 - you know teens who are learning to code
34:39 - but the bulk of the viewership is of
34:41 - that sort of high school college early
34:43 - 20s age
34:44 - at least according to youtube analytics
34:46 - which i always find fascinating because
34:48 - i feel more and more like an old
34:52 - i was trying to put this in
34:56 - a gracious way but just like an old i
35:00 - guess
35:02 - all right somebody mentioned something
35:04 - to me yesterday
35:06 - which was some kind of social media
35:10 - online thing and i had no idea what it
35:12 - was
35:13 - none whatsoever i can't even pull it up
35:15 - i was in a twitter space
35:16 - with scott hanselman who you should
35:18 - check out scott hanselman's youtube
35:20 - channel
35:20 - i kind of been a little bit obsessed
35:21 - with the clubhouse app uh if anybody
35:24 - wants to connect on there you can follow
35:25 - me on clubhouse
35:29 - ah okay this is this is cool to uh
35:32 - really read
35:33 - uh started coding on a zx spectrum
35:36 - um i'm gonna have to go back and read
35:39 - all these chat messages
35:40 - um this is amazing this is amazing apple
35:43 - 2
35:44 - euro plus of my dad's in the late 70s so
35:47 - the first computer that i ever wrote any
35:49 - code on
35:50 - was an apple 2 plus uh you know
35:53 - if anybody's a fan of the tv show
35:55 - stranger things i think the kids in that
35:57 - show
35:58 - are like 10 years old in 1983
36:01 - approximately that's
36:02 - that's exactly that that show speaks to
36:04 - me so
36:06 - like i get all the feelings watching
36:09 - that show
36:09 - i'm you know i probably had a different
36:12 - i'm not saying i was like those kids or
36:14 - certainly i didn't experience the
36:15 - supernatural in their way
36:17 - but dungeons and dragons ghostbusters
36:20 - all of that stuff um
36:21 - walkie-talkies bicycle riding all that
36:23 - stuff is uh really speaks to me
36:25 - but um i i i think i've talked about
36:28 - this before but i did a science project
36:29 - in elementary school
36:30 - where i tried to like do something about
36:32 - perception i think i wrote some code in
36:34 - basic
36:36 - to blink a light on the screen and then
36:39 - or like blink characters really fast and
36:41 - then ask
36:42 - the viewer if they could write them down
36:44 - and remember them i have to go back and
36:45 - find that so
36:46 - i think that two plus is still in the
36:48 - attic uh
36:50 - where my parents live in baltimore i'm
36:52 - gonna have to let's find that someday
36:54 - oh i'm so into computer history and
36:56 - computer graphics history it's a little
36:58 - bit i'm off i'm off i gotta do this i
36:59 - gotta work on these examples keep me on
37:01 - track people
37:02 - keep me on track keep me on
37:05 - track okay um ashika saying please bring
37:08 - back
37:08 - cabana and our coding challenges i hear
37:11 - you i really hear you i
37:13 - this is basically the most common
37:15 - feedback i get
37:16 - i miss the coding challenges i miss the
37:18 - i don't know people actually say they
37:19 - miss the cabana
37:20 - but just those like coding challenge
37:22 - videos um i
37:24 - i will try to get back into more project
37:26 - oriented
37:27 - things like that um so stay tuned but
37:31 - i'm
37:31 - unfortunately or fortunately or
37:33 - unfortunately um this is not this this
37:35 - is my like hobby
37:36 - in many ways the coding train i'm going
37:38 - off i'm talking to
37:40 - and uh i do have a lot of like
37:41 - responsibilities to my students
37:43 - and the tutorial videos end up taking
37:46 - precedence
37:47 - um because of that okay um
37:52 - so back to this paper um
37:56 - all right so voila this is what i was
37:58 - looking for this particular list
38:00 - so if anybody wants to take notes here
38:02 - and share this with me afterwards
38:04 - super would appreciate it i'm sure simon
38:06 - is already on it
38:07 - but this is the list of all of the
38:09 - behaviors divided into individual
38:11 - behaviors
38:12 - and combined behaviors so i would like
38:15 - to my
38:16 - personal goal is to have a p5.js and
38:19 - processing example for every one of
38:21 - these
38:21 - and i have seek and i have flee and i
38:24 - have wander and i have
38:25 - arrival i have path following i have
38:28 - flow field following
38:29 - i have crowd path following i have
38:31 - flocking so
38:33 - i don't have pursue and evade that would
38:36 - be an easy one for me to do today but i
38:38 - think i might like to
38:40 - try for something a little bit more
38:41 - ambitious i do not have obstacle
38:43 - avoidance and containment which have
38:44 - some similarities to them
38:46 - um i do not have wall following i do not
38:49 - have leader following i do not have
38:51 - unaligned collision avoidance and i
38:52 - don't have
38:54 - what is my favorite
38:57 - steering behavior of all time
39:05 - queuing at a doorway it's like the
39:08 - greatest
39:09 - favor you guys see it and here's the
39:10 - thing that brings me immense
39:12 - sadness right now ordinarily
39:15 - i would be able to just click on any of
39:16 - these like queuing
39:18 - and i would see the animation happening
39:21 - right here
39:22 - in fact i think if you go to uh and
39:25 - and i apologize but this is this is this
39:28 - is who i
39:28 - am i can't help it i'm going to go all
39:31 - the way to the old videos that are from
39:35 - i actually don't know when i recorded
39:36 - these i uploaded them to youtube in 2015
39:39 - but i kind of think that a lot of these
39:40 - were recorded in 2012
39:42 - but if i go through into this video here
39:46 - at some point i bring up the webpage
39:52 - and it's coming there it is
39:56 - so this by the way look look it's young
39:59 - look at young me there with like weird
40:01 - bad white balancing and
40:03 - very red face but like compare the
40:06 - amount of gray hair
40:08 - the bald spot to there glasses are
40:11 - pretty much the same
40:12 - but i think this might be from almost 10
40:14 - years ago
40:15 - i i don't know if anybody could i wonder
40:17 - if you could somebody could watch
40:18 - through these videos and if like
40:20 - the time pops up somewhere or the date
40:23 - because i'm pretty sure this is just
40:25 - when i happened
40:27 - i definitely recorded these before the
40:30 - year 2015.
40:31 - i was not even yeah anyway that's this i
40:34 - would love somebody to investigate that
40:35 - for me
40:36 - but um here you can see the queuing
40:39 - behavior
40:40 - playing out and i can make this full
40:41 - screen um
40:44 - and so i love this steering behavior and
40:46 - um these are
40:47 - these were all created by craig reynolds
40:49 - as
40:51 - um java applets
40:54 - the code i believe is closed source
40:57 - don't quote me on this i could be wrong
40:59 - but if i understand it correctly craig
41:02 - reynolds was working on these behaviors
41:04 - while working at sony entertainment
41:06 - so all of the algorithms and the
41:09 - descriptions of those algorithms are all
41:12 - very well defined in the paper
41:17 - that i'm about to click on here
41:18 - explained in great detail
41:21 - but the code was closed source but
41:24 - many there's many implementations of
41:26 - them i'm not certainly not the first to
41:28 - implement them i might be
41:29 - sort of more visible now in terms of
41:31 - having this youtube presence but there's
41:33 - an open steer library from c
41:35 - plus lots of other examples of people
41:37 - implementing these behaviors
41:39 - um so i'm
41:42 - really saddened by the fact that the
41:45 - so a year ago because the year goes the
41:48 - last time i looked at this
41:49 - i was able to get these to run as java
41:51 - applets on the page
41:53 - first i would see an error and then i
41:55 - would go through and change i think i
41:57 - ended up using firefox or a different
41:58 - browser
41:59 - to make sure java was running and the
42:01 - plug-in and change the
42:03 - uh settings but i think i don't know if
42:06 - this is related to
42:07 - flash being completely disabled
42:10 - but i don't know whether it's that the
42:12 - the actual applet files have been
42:14 - removed from the server
42:15 - or that the browser won't even bother to
42:17 - try anymore but
42:18 - i it's very important to me that this
42:20 - work is preserved
42:23 - so one of the things that i would really
42:24 - like to do
42:26 - and i would love help with this is to at
42:29 - a minimum
42:30 - download all the jar files maybe i could
42:33 - just investigate this really quickly
42:35 - let me and i will get i've been in touch
42:37 - with craig reynolds before
42:38 - uh doorway.class so this is really the
42:41 - question
42:42 - if this is the compiled java code
42:46 - so you know there's all sorts of
42:47 - decompilers we could use i'm not so
42:49 - interested in that
42:50 - i don't need the code to be decompiled
42:52 - and published if it's not meant to be
42:54 - published
42:54 - i would just like the this applet to
42:58 - have a place to be run and people could
43:00 - watch it and look at it
43:01 - so let me see if this will download did
43:03 - it
43:04 - no so like it would be right here in the
43:08 - same directory right
43:09 - so i think it's been removed
43:13 - torway.class that's not going to get
43:15 - anything so if somebody could help me
43:17 - try to find these and you know i i can
43:20 - try to get in touch with craig reynolds
43:22 - uh i believe he's on some social media
43:24 - platforms
43:25 - and maybe he'd be willing to share them
43:26 - i would like to build a website
43:28 - maybe just capture them as screen
43:30 - recordings and then build a website
43:32 - where people could watch them
43:33 - um you know i i think that
43:37 - early work that no longer runs in
43:39 - current systems it's really important to
43:41 - preserve that work
43:42 - um in that history um so
43:46 - um so yeah if anybody wants to help with
43:49 - that
43:49 - um hit me up on the coding train discord
43:52 - on twitter at shiffman
43:54 - you could say it in the chat now but i
43:56 - might miss i most likely will
43:58 - um uh miss your message
44:02 - oh you know it's because i'm in the view
44:03 - source okay great who's who just said
44:05 - that remove view source
44:07 - thank you i would uh remove view source
44:12 - yes have you ever seen anybody so
44:15 - excited to download
44:16 - an old java class file from over 20
44:19 - years ago
44:20 - okay so i
44:24 - have this oh boy i shouldn't go down
44:26 - this rabbit hole
44:27 - i have this class file how could i run
44:30 - it
44:33 - i'm trying to think
44:37 - it's meant to be run as an applet within
44:39 - a browser
44:40 - i mean there's no way that just like um
44:45 - it's not going to create a window
44:46 - instance for it if i
44:50 - like part of me wants to like do this
44:53 - oh you can't see what i'm doing
44:54 - apologies
44:59 - uh am i in downloads
45:05 - okay wait i have a java runtime
45:08 - installed
45:09 - but this won't work it has to be a jar
45:11 - file that will open a window
45:13 - um java applet doorway.class all right
45:17 - hold on hold on i have a jdk installed
45:20 - what's going on
45:21 - is it because i'm on a user account it
45:23 - must be because i
45:24 - the my this is my like work laptop that
45:27 - i do everything on
45:28 - but i log into a completely different
45:29 - user while i'm live streaming so that i
45:31 - don't
45:32 - you know i do this anyway i'm not that
45:34 - well set up but i'm constantly
45:37 - um sharing um you know
45:40 - api keys and things like that uh what
45:42 - was it java
45:44 - dash applet
45:53 - wait what was it
45:56 - eclipse i could try using eclipse
46:01 - java dash applet that didn't work for me
46:03 - all right i i think
46:04 - maybe this is going to send me down too
46:07 - much of a tangent right now
46:09 - um i will investigate this further on my
46:11 - own and take suggestions
46:14 - um and like make sure i have
46:17 - the right jdk and all of that installed
46:20 - um but i don't want to
46:23 - um take up all of your time as
46:26 - interesting as it might be
46:28 - for all 405 of you watching i think
46:31 - probably it's more useful for me to go
46:33 - now to the different to the code stuff
46:35 - that i want to do
46:37 - and just so you know i'm going to be
46:38 - here till about 3 p.m eastern which is
46:41 - an hour and 15 more
46:42 - minutes i'm gonna take a break in about
46:43 - 15 minutes i'm trying to be much more
46:46 - uh strict about my live streaming time
46:49 - usually
46:50 - my kids are doing an online baking class
46:53 - but there is no baking class today
46:56 - and usually that would mean they're just
46:57 - downstairs playing minecraft or roblox
46:59 - but they're actually outside taking a
47:01 - walk
47:03 - not on their own they're with another
47:04 - adult who happens to be
47:07 - my spouse um but
47:10 - i would like to go and join them
47:11 - hopefully they'll still be out in an
47:13 - hour um
47:13 - and so uh to be honest i would have not
47:16 - live streamed if i knew that was the
47:18 - plan so i could go and do that with them
47:20 - but i'm very glad to be here with you
47:22 - right now and i'm thankful to the
47:23 - curiosity stream for sponsoring this
47:25 - because it really helps me um have all
47:28 - of
47:29 - be able to do do so much to be able to
47:31 - be here and live stream okay
47:32 - please answer chat questions i try i
47:35 - really try
47:40 - [Laughter]
47:43 - uh profit mesh says um let's see if this
47:47 - still works
47:48 - i went and took a shower since i last
47:50 - messaged what did i admit
47:52 - you just want me to do once again
47:58 - absolutely nothing huh sing it again now
48:03 - okay thank you thank you thank you
48:06 - thank you that's been my live stream for
48:08 - today see you all next time on the
48:10 - coding train
48:11 - [Music]
48:14 - um all right let's let's close a bunch
48:18 - of this stuff
48:19 - okay i don't need all this open
48:25 - all right so
48:30 - i think that i would okay let me
48:33 - bear with me uh log in here
48:36 - coding train so the most recent video
48:40 - tutorial that i have recorded that is
48:41 - not
48:42 - it is still a week or two away from
48:43 - coming out um
48:45 - is just a video that goes through the
48:48 - foundational
48:50 - example of a steering behavior and that
48:53 - behavior
48:54 - is the seek behavior so you can see this
48:58 - little triangle thingy is trying to seek
49:01 - this target as i move it around and
49:03 - there are some parameters i can play
49:05 - with
49:05 - like a maximum speed and a maximum force
49:09 - to change its ability to steer so
49:13 - this is where i want to start with the
49:15 - idea of having a vehicle
49:18 - that calculates a steering force
49:21 - based on a principle of determining a
49:23 - desired velocity
49:26 - taking the difference between its
49:28 - desired velocity
49:30 - and its actual velocity and applying
49:32 - that as a force
49:33 - i would love to talk through all of that
49:35 - right now but i'm
49:36 - that is the that that is what i did in
49:39 - what will be a 10 to 15 minute video
49:40 - that will come out later
49:42 - and i have also talked through all of
49:44 - this i believe in two
49:45 - uh previous videos if this topic
49:47 - interests you
49:48 - steering uh steering coding challenge
49:52 - coding train so um
49:56 - coding challenge number 59 uh steering
49:59 - behaviors i kind of went all through all
50:01 - this in a coding challenge this was done
50:03 - quite a while ago
50:05 - and then also i have done flocking
50:10 - and i've done evolving steering
50:12 - behaviors i've done a lot of stuff with
50:13 - steering behaviors but i'm redoing
50:15 - the sort of like core foundational
50:17 - videos um
50:21 - and there we go coding challenge 124
50:24 - uh the flocking simulation so those
50:26 - would be ones if you know you want to
50:28 - do uh okay and i meant
50:31 - i have a coding trade answers your
50:32 - questions for 15 minutes
50:34 - um yes um that is a good suggestion i
50:38 - try to do that sometimes like at the end
50:40 - of every live stream
50:41 - but i do a terrible job of doing that
50:43 - because i'm usually like trying to rush
50:44 - to finish something and i only leave
50:45 - like two minutes and i don't do a good
50:46 - job
50:47 - so um that that note is taken
50:51 - and actually that's what i was sort of
50:52 - thinking that maybe i could use discord
50:54 - or clubhouse for do a little bit more q
50:56 - a stuff
50:58 - okay um
51:02 - yeah and prathamesh is asking about a
51:04 - friction-like force that slows the boy
51:06 - down it's funny you should ask
51:08 - that's the next video after seek i look
51:10 - at an arrived behavior
51:11 - and it's not about a friction force that
51:13 - slows it down it's about
51:15 - rethinking what is the desired velocity
51:18 - in the case of pure seeking the desired
51:21 - velocity is always to go
51:22 - as fast as possible toward the target
51:24 - regardless of how far away from the
51:26 - target you are
51:27 - but an arrival steering behavior would
51:30 - take account that distance
51:32 - and map the magnitude of the desired
51:34 - velocity to that distance
51:35 - so the desire you want you still want to
51:37 - go towards the target but slower and
51:39 - slower and slower the closer you
51:41 - are with a z you know a velocity of zero
51:44 - if you are actually
51:45 - exactly on the target okay um so
51:48 - i think what i would like to do by my uh
51:51 - white whale so to speak
51:53 - in steering behaviors it's really
51:54 - queuing at the doorway
51:56 - but i don't that's too much um i have
51:58 - never
51:59 - um implemented obstacle avoidance and
52:02 - simon
52:03 - has been trying to talk me into doing
52:05 - containment instead
52:07 - um but um
52:10 - i kind of you know i'm i'm a little bit
52:13 - obsessive
52:14 - and um i don't know why i can't seem to
52:17 - manage to keep all of these pages open
52:20 - and obstacle avoidance comes first so in
52:23 - my mind i need to do it first
52:25 - um and so let's let's just
52:29 - if y'all uh if you'll allow me for a
52:32 - moment
52:32 - i would like to just read this paragraph
52:36 - to see if i can understand it
52:39 - and i will put some quiet soothing music
52:42 - behind me while i read it
52:44 - not that music in this demonstration
52:49 - the green vehicle i don't see the
52:51 - demonstration avoids the gray obstacles
52:54 - the vehicle tries to remain outside of
52:56 - the gray circles while keeping close to
52:58 - its
52:58 - speed limit the vehicle wraps around the
53:00 - window boundaries
53:02 - this steering behavior anticipates the
53:03 - vehicle's future path as indicated by
53:05 - the white box
53:06 - the length of the box is a constant time
53:08 - multiplied by the current velocity of
53:10 - the vehicle
53:11 - any obstacle that intersects this box is
53:13 - a potential collision thread
53:15 - the nearest such threat is chosen for
53:17 - avoidance and is marked with a green
53:18 - boundary
53:19 - to avoid an obstacle a lateral steering
53:22 - force is applied opposite to the
53:23 - obstacle center
53:25 - in addition a breaking deceleration
53:28 - force is applied
53:29 - these forces vary with urgency the
53:31 - distance from the tip of the white box
53:33 - to the
53:33 - potential collision steering varies
53:35 - linearly breaking varies
53:37 - quadratically
53:41 - if avoidance fails and the vehicle
53:43 - overlaps an obstacle the color of the
53:44 - obstacle changes to red
53:46 - with these parameters and this crowded
53:47 - environment collisions occur about once
53:49 - every 800 simulation steps
53:51 - and then different colors are assigned
53:54 - to the
53:57 - unfortunately this might be enough for
54:00 - me to start
54:00 - coding this if i had this java applet
54:03 - running
54:04 - but i think i want to go over to the
54:05 - paper instead
54:08 - and that didn't take me there
54:12 - and um look for
54:16 - obstacle and hopefully there's going to
54:18 - be a diagram
54:22 - there we go this is what i'm looking for
54:28 - i don't know i'm so like terrified that
54:31 - i'm starting with this
54:32 - okay now
54:35 - i'm hearing some ding-dings in my ear
54:37 - from being tagged on discord
54:40 - so uh i'm checking the keeping eye on
54:42 - the chat please try to reserve
54:44 - tagging me on discord for emergency
54:46 - level
54:47 - uh notifications okay um
54:53 - obstacle avoidance
54:56 - obstacle avoidance behavior gives the
54:59 - character
55:00 - um gives the okay okay so let's look at
55:02 - this
55:03 - the ability to maneuver in a cluttered
55:05 - environment by dodging around obstacles
55:07 - there is an important distinction
55:08 - between obstacle avoidance and flea
55:10 - behavior
55:15 - got it got it i started reading this to
55:17 - myself
55:18 - i got flea will always cause the
55:19 - character to steer away from a given
55:21 - location
55:22 - whereas obstacle avoidance takes action
55:24 - only when a nearby obstacle lies
55:26 - directly in front of the character so
55:27 - this is good
55:29 - for example if a car was driving
55:31 - parallel to a wall obstacle voice would
55:33 - take no corrective steering action but
55:34 - flee would attempt to run away from the
55:35 - ball
55:36 - so um just so i don't spend forever just
55:38 - reading through this let's take some
55:40 - basic steps here
55:41 - let's add the idea of an obstacle class
55:45 - to the world so i'm going to duplicate
55:47 - this code
55:48 - this is going to be five point x
55:50 - obstacle
55:52 - avoidance and one of the things i like
55:54 - to do while i'm streaming and let me
55:56 - just click over here for a second
55:58 - um is in the discord itself um
56:02 - i will uh paste a link under this
56:06 - live category a schedule is where i
56:09 - in theory post updates about my live
56:10 - streaming schedule uh
56:12 - links is where if i want to share
56:13 - something with you while i'm streaming
56:15 - i'll put it in there
56:16 - so i will paste a link now to this base
56:19 - code
56:20 - in case anyone wants to follow along
56:22 - this will continually update unless i
56:24 - duplicate and make a new version
56:25 - so we'll also be the same link when i
56:26 - finish but if you wanted to get that
56:28 - right now that's what i'm starting with
56:32 - all right back to here so i would like
56:35 - to add another
56:36 - file call it obstacle.js
56:43 - um and
56:47 - uh what does an obstacle class
56:50 - have well it has a position and a size
56:54 - it doesn't move it doesn't need any
56:55 - physics
56:56 - so i'm going to give it an x y and a
56:58 - radius because it'll be a circular
56:59 - obstacle
57:00 - i mean we could consider what does it
57:02 - mean to use non-round obstacles but
57:04 - that seems too hard but i am going to
57:06 - keep that in a vector
57:07 - so i'm going to say this dot pause
57:09 - equals create vector x
57:10 - y and this dot r equals r and then let's
57:14 - just have a function called
57:15 - show which i draw it as a circle how's
57:18 - this font size by the way i think it's a
57:19 - little bit smaller than what i usually
57:21 - have
57:21 - no i don't know let me know if it's hard
57:23 - for anybody to see it
57:25 - uh this dot x this dot y and simon is
57:27 - telling me that obstacles are always
57:29 - circles
57:30 - in this particular algorithm that's good
57:32 - to know
57:33 - this dot r times two um
57:36 - and let's give it a kind of grayish
57:39 - color
57:40 - with a white outline
57:44 - um that's a little bit thicker and
57:47 - i think what i'd like to do to be honest
57:49 - is hard code
57:51 - a couple obstacles into the world
57:54 - um because i obviously i want to run
57:57 - this
57:58 - many many times and always have random
58:00 - obstacles but it might be useful for me
58:02 - to
58:03 - very intentionally position obstacles
58:06 - to be able to test and debug what it is
58:08 - i'm doing so let's make
58:11 - right now i'm just going to make one
58:12 - obstacle to be perfectly honest i'm
58:14 - going to put it
58:14 - at um
58:18 - my window is 400 by 400 let's put it at
58:22 - 300 comma 200 and let's make the radius
58:25 - uh 50 and then
58:28 - i will have four let obstacle of
58:31 - obstacles
58:33 - obstacle dot show so hopefully now
58:37 - obstacle of obstacles by the way
58:40 - obstacle is one of those words
58:42 - that when you start to stare at it it
58:43 - totally looks like it's spelled wrong
58:46 - that can't possibly be how obstacle is
58:48 - spelled look at obstacles
58:50 - put the s on there it's like what is
58:52 - that word
58:56 - okay let's try
58:59 - obstacle is not defined so i forgot an
59:02 - essential step here
59:03 - which is to add it to the index.html
59:07 - file
59:11 - oh it's because i did spell it wrong
59:13 - [Laughter]
59:15 - no wonder it looks completely insane
59:18 - because i did spell it wrong
59:22 - uh how come i don't see that obstacle
59:32 - oh this dot pause dot x it's a vector
59:37 - you know there's a new thing that i
59:38 - really liked doing and i um
59:40 - that is in the particle system videos i
59:43 - really like just
59:44 - extending a p5.vector and i know
59:47 - uh you know i really have trouble
59:50 - figuring out what the right balance
59:52 - between showing
59:54 - uh next steps and further
59:58 - additions to the sort of foundational
60:00 - ways that i build the examples
60:02 - and i hesitate to do this because it's
60:03 - going to throw people off
60:05 - but um if you're following along with
60:06 - the nature of code good good news
60:09 - i'm going to go through why i do this in
60:10 - quite a bit of detail in an entire video
60:13 - but i can actually have my obstacle
60:15 - extend p5 vector
60:17 - meaning i don't need to create a
60:19 - separate p5 vector that's a property of
60:21 - the obstacle because it is a vector
60:22 - already itself
60:24 - then this is this is the principle of
60:25 - inheritance whoops
60:27 - then i can actually say super x
60:31 - y which means just super is a word that
60:34 - like a parent class is a super class
60:36 - so i'm saying create a new vector
60:39 - because my parents is p5 vector with
60:40 - that
60:41 - x y add this concept of r
60:44 - and then i can just have this dot x and
60:47 - this dot y
60:48 - here um you know maybe i should do that
60:50 - also
60:51 - you know if i'm doing it there i should
60:52 - do it with the vehicle but anyway i just
60:54 - wanted to point that out for a second
60:55 - all right
60:56 - great we've got an obstacle i want to
60:58 - get rid of the seek
60:59 - behavior so i don't need this target
61:01 - anymore for this example
61:05 - um and i don't need to call seek
61:08 - let's run this let's put the particles
61:12 - initial
61:12 - the vehicle's initial location at 50
61:15 - comma 200
61:18 - amazing let's give it an initial
61:20 - velocity
61:22 - um and i'm just gonna do that manually
61:24 - here velocity set one comma zero
61:29 - there we go so now i've got a set up
61:32 - here
61:32 - where if i do everything correctly and i
61:35 - think i might like
61:36 - the obstacles to be drawn first
61:41 - what did i do wrong here
61:44 - come on auto format did i mess something
61:47 - up here
61:48 - i don't know i don't know what's going
61:49 - on um
61:51 - oh whoops what the
61:57 - tidy code okay i don't know what i was
62:00 - doing the wrong key command for tidying
62:02 - i guess
62:02 - um very important stuff so now i've got
62:05 - this setup
62:06 - you know i'm doing the i'm doing the
62:08 - easy part first
62:10 - right uh the hard part is obviously
62:12 - going to be i need to write some code
62:14 - that's like
62:16 - vehicle dot avoid obstacles
62:23 - and maybe right now let me just
62:26 - write the function as if there's only
62:29 - ever one obstacle
62:30 - this i think could be an easier way to
62:32 - kind of um
62:33 - work this out all right and simon has
62:36 - given me some nice tips in the discord
62:38 - with the steps of the algorithm
62:40 - but i'm going to pull them from the
62:41 - paper um
62:45 - so i need to define this rectangular
62:48 - area
62:49 - in front of the vehicle
62:53 - well i know how i would do this just
62:55 - from a drawing standpoint
62:57 - that's an easy thing for me to do and i
63:01 - suppose i might as well
63:02 - layer that in as sort of like a debug
63:04 - draw kind of thing
63:06 - for example if i were to say
63:09 - a rectangle uh 0
63:13 - 0 this dot r
63:16 - times 8 for this dot r on
63:19 - which is the size of the triangle um
63:23 - i'm going to write a function called
63:24 - avoid it takes an obstacle
63:28 - but it's empty right there's that
63:31 - uh and i want to say um
63:36 - no stroke no no fill
63:41 - and then where is that rectangle exactly
63:44 - it's at
63:44 - negative this dot r
63:48 - and negative this dot r divided by two
63:51 - there we go so sort of
63:55 - problem solved in that i'm able to
63:57 - visualize
63:58 - that rectangle and even if the particle
64:02 - weren't
64:03 - moving straight you know that rectangle
64:05 - is going to be
64:06 - rotated but i don't think that's really
64:09 - the work here
64:10 - because the work is defining the
64:12 - boundaries of that rectangle and whether
64:13 - it intersects the circle
64:15 - i feel like that's going to be very hard
64:17 - is it time for my break yet
64:19 - almost yeah it is actually let's see if
64:22 - i get a little bit
64:25 - oh further um
64:29 - okay uh just keep in mind
64:32 - obstacle avoidance not necessarily
64:34 - collision detection
64:36 - um the gmacle construction i've been
64:40 - also pursuing opinions concern
64:45 - uh cylinder lies along the character's
64:47 - forward axis
64:49 - so they're talking about 3d which i
64:51 - don't care about
64:54 - oh this is very hard to read
64:57 - to myself i should just read it out loud
65:00 - [Music]
65:05 - the implementation of obstacle avoidance
65:06 - behavior described here will make a
65:07 - simplifying assumption that both
65:08 - character and obstacle can be reasonably
65:10 - approximated as spheres
65:11 - okay so this is actually i guess
65:15 - craig reynolds is describing all these
65:17 - behaviors in a 3d space
65:19 - and then we're looking at a slice of it
65:21 - so when he
65:22 - in writes that this is a cylinder we're
65:25 - actually just seeing the sort of top
65:27 - view of it but i'm thinking of it as a
65:28 - rectangle
65:29 - so i think i have to just reply i'm
65:31 - going to do this in 2d don't get me
65:32 - wrong
65:34 - um
65:36 - but i think i have that's why i was
65:38 - being that's why i was confused i'm
65:39 - reading this
65:43 - convenient to consider the geometrical
65:44 - situation from the character's local
65:46 - coordinate system
65:48 - the goal of the behavior is to keep an
65:50 - imaginary cylinder of free space
65:52 - in front of the character ah the
65:54 - cylinder lies along the character's
65:56 - forward axis and has a diameter equal to
65:58 - the character's bounding sphere
66:00 - and extends from the character's center
66:02 - for a distance based on the character's
66:04 - speed and agility
66:06 - okay so i'm gonna consider those
66:10 - the agility fixed but i could adjust
66:15 - that for speed right now because
66:19 - like ultimately if there is some
66:21 - distance
66:23 - like seeing distance i might call it
66:26 - which is
66:27 - the magnitude
66:30 - the magnitude of the velocity times you
66:33 - know a factor of
66:34 - 20
66:38 - and i use that as the seeing distance
66:43 - and i suppose this width could be
66:45 - related to its
66:46 - agility but i'm not going to worry about
66:48 - that right now
66:50 - what is going on with my auto format
66:53 - shift tab
66:54 - is not working for me and it's making me
66:56 - crazy oh it changed command
67:00 - shift f it used to be shift tab i'm
67:03 - gonna have to relearn another
67:04 - no command command shift f there we go
67:10 - by the way something that bothers me and
67:12 - i i can't remember if i already filed
67:13 - this as an issue or not
67:15 - but um the web editor will change the
67:17 - scroll of your code when you auto format
67:19 - and it drives me crazy if anyone's to
67:21 - check
67:21 - if there is an issue um already
67:25 - um um um
67:28 - filed for the p5 web editor related to
67:30 - that okay maybe nobody else cares
67:32 - so let's just see this all right so
67:34 - let's make seeing distance times
67:37 - 100 okay actually i'm gonna make it it's
67:40 - moving kind of slowly right now so let's
67:42 - do that
67:43 - and then actually i should really put
67:44 - that seek back in
67:46 - because if i were to just put that seek
67:48 - back in
67:49 - then i could see it change as it does
67:51 - different things
67:52 - so a vehicle just is temporarily vehicle
67:57 - seek create vector
68:00 - mouse x that's why
68:05 - [Music]
68:08 - so you can see as it slows down that
68:11 - amount that it looks out in front
68:13 - changes again i'm just visualizing the
68:15 - elements of the algorithm right now
68:17 - without actually worrying about
68:18 - implementing them and i really need to
68:20 - take a break
68:21 - but uh where was i
68:25 - okay by localizing the center of each
68:29 - spherical obstacle the test
68:31 - for non-intersection with the cylinder
68:33 - is very fast
68:36 - the local obstacle center is projected
68:38 - onto the side
68:39 - up plane by setting its forward
68:42 - coordinate to zero
68:44 - if the 2d distance from that point to
68:46 - the local origin
68:48 - is greater than the sum of the radii oh
68:51 - so i can do one of those like a normal
68:53 - things oh i really need a diagramming so
68:55 - i'm going to take a break and during my
68:57 - break i'm going to set up this um
69:00 - document character because i feel like
69:01 - character document camera
69:03 - because i feel like i need to draw a
69:05 - diagram so
69:06 - um give me a second here oh before i
69:08 - take a break though i would like to
69:11 - take a moment to thank today's
69:14 - sponsor curiosity stream
69:18 - and coming up over here
69:21 - ah so let me start um by and uh this is
69:25 - the fun thing that i like to do which is
69:26 - that i have a wonderful 30 second spot
69:28 - from curiosity stream that i will play
69:31 - um
69:31 - but i like to read the narration for it
69:33 - myself oh sometimes youtube copyright
69:35 - strikes it
69:36 - and so um and people seem to enjoy this
69:39 - more anyway
69:40 - so i'm gonna go to that uh right now
69:44 - from the founder of the discovery
69:46 - channel comes a new
69:47 - independent streaming service curiosity
69:51 - stream
69:54 - home of groundbreaking documentaries
69:57 - [Music]
69:58 - and award-winning original series
70:03 - follow your curiosity
70:10 - this is curiosity stream
70:13 - all right how'd i do this time i feel
70:15 - like i did better last time but
70:17 - um so you i mentioned this at the top of
70:19 - today's live stream and you've heard me
70:21 - talk about this before
70:22 - i am part of an educational group of
70:24 - creators who have
70:25 - teamed up to build a platform where
70:27 - creators don't have to worry about
70:28 - demonetization
70:29 - or the youtube algorithm it's called
70:32 - nebula
70:32 - and we're partnering with curiosity
70:34 - stream so nebula has ad-free content
70:37 - and experiments with different kinds of
70:38 - formats so let me go over to
70:40 - watchnebula.com
70:41 - and you so you could start your free
70:44 - trial
70:45 - or you could pay five dollars per month
70:47 - or guess what don't definitely don't pay
70:49 - the five dollars a month i mean maybe
70:50 - you could if you want
70:51 - but the whole point of this is that
70:52 - you're gonna get nebula for free if you
70:54 - buy the annual
70:55 - uh bundle with curiosity stream which by
70:58 - the way much less than five dollars per
71:00 - month in fact
71:01 - it's 14.79 after the 26
71:04 - discount that you'll get from
71:06 - curiositystream.comcodingtrain
71:07 - um and so um you you if you scroll
71:10 - through
71:10 - kind of like the kinds of things that
71:12 - are on nebula you're
71:14 - probably going to find all of your
71:16 - favorite
71:17 - creators that you already watch on
71:19 - youtube and
71:20 - um i'm just scrolling through to show
71:23 - you a few here
71:24 - shout them out in the chat i've been
71:26 - like really uh interested in following
71:27 - renee richie's work recently
71:29 - um there's a lot of video essays um on
71:33 - sort of movie making and filmmaking
71:35 - illegal eagle uh to sort of learn about
71:37 - the law
71:38 - amazing stuff you're here real science
71:39 - engineering is amazing
71:42 - uh or this is the real science channel
71:44 - lots of amazing stuff here
71:46 - um definitely check out nebula there's
71:48 - never originals
71:49 - um as well like tom scott's money so
71:53 - what does this have to do with curiosity
71:54 - stream so curiosity stream loves
71:56 - educational creators
71:57 - like those that participate in nebula um
72:01 - and they uh they want to support more
72:03 - educational content so nebulous worked
72:04 - out a deal if you sign up with that
72:06 - coding train link
72:07 - not only do you get access to curiosity
72:09 - stream but you also get nebula for free
72:11 - and by the way this is not a trial
72:12 - you will have nebula for free as long as
72:14 - you're a curiosity stream member
72:15 - so for a limited time curiosity stream
72:17 - is offering 26
72:19 - off their annual plan that's less than
72:21 - 15 per year
72:22 - for both curiosity stream and nebula so
72:25 - i'm going to go here
72:26 - just to show you how to do this
72:30 - curiositystream.com
72:32 - codingtrain and it should pop up here
72:35 - that you can use oh you can't see that
72:37 - right now
72:38 - i'll remove the banner use the code
72:39 - coding train for 26
72:41 - off um you can also go i wanted to go to
72:44 - um i'm not logged into my account um
72:49 - but i can go to the click here to get a
72:51 - sneak peek of the library
72:53 - so this is the one that i was um just
72:55 - telling you about that um abe turned me
72:57 - on to
72:57 - which is called man's first friend a
73:00 - wonderful
73:01 - um documentary about um
73:04 - the history of dogs within uh different
73:07 - cultures around the world
73:09 - um and i i didn't abby recommended for
73:11 - you recently so i only watched a little
73:13 - bit of it but i'm like oh as soon as i
73:14 - have some time to just
73:15 - settle back and get on my couch and
73:17 - relax i'm definitely checking that out
73:19 - i had not don't know what this one is
73:20 - secrets of the solar system but so many
73:22 - science
73:23 - uh music math um
73:27 - history documentaries here i've been
73:29 - talking about um
73:30 - i think if i go look for the search
73:33 - it'll pop up let me try to find that
73:36 - um
73:39 - or maybe if i let's let's click on um
73:43 - uh history and let me go to search
73:46 - and let me go to hannah fry
73:50 - uh yeah so this is the one that i've
73:51 - been like super obsessed with magic
73:53 - numbers the joy of data
73:54 - and the joy of winning i don't know what
73:56 - this one popped up but maybe hannah fry
73:58 - is a guest
73:59 - in this one as well but dr hannah fry is
74:01 - amazing i'm a huge fan
74:02 - shout out to uh dr hannah fry and i i
74:06 - would definitely recommend these uh
74:07 - particular you know if you're in if you
74:08 - like the coding grade stuff you'll like
74:10 - those
74:10 - as well all right so um you know
74:13 - you're sign up you'll be soothed by
74:15 - dayton david attenborough's voice you
74:17 - can watch chris
74:18 - hadfield in the space station tom scott
74:20 - on nebula torture your favorite
74:22 - youtubers
74:22 - uh click the link to get both curiosity
74:24 - stream and nebula for 26
74:26 - off it's a great way to support
74:27 - educational content my content
74:30 - and again that's the entire year 14.79
74:33 - um i'll put it up right here one more
74:36 - time oops that's
74:37 - the wrong thing um and then i gotta
74:40 - press this button that's also the wrong
74:42 - thing i can never press the right
74:43 - buttons
74:44 - uh there it is um and i'm gonna take a
74:47 - short
74:48 - two or three minute break i'm gonna set
74:49 - up this document camera so i can diagram
74:51 - figuring out this uh the math for the
74:54 - obstacle avoidance and i will be
74:55 - right back
75:10 - [Music]
75:24 - [Music]
76:08 - [Music]
77:05 - [Applause]
77:07 - [Music]
77:28 - do
77:35 - [Music]
77:56 - do
78:03 - [Music]
78:24 - do
78:27 - [Music]
79:02 - [Music]
79:17 - [Music]
79:20 - do
79:23 - [Music]
79:34 - do
79:36 - [Music]
79:48 - do
79:51 - [Music]
80:23 - i'm here i swear i'm here i'm trying to
80:25 - set up this camera
80:27 - i guess i can uh let's say i plugged it
80:28 - in i've got it in position but i don't
80:30 - know if it's working yet
80:32 - let me turn off studio mode go to me
80:35 - here and uh let's see what
80:39 - happens i can close this boy i thought i
80:42 - could do this in five minutes with
80:44 - no problem i connected a microphone
80:47 - no i don't it's still this microphone
80:49 - though right
80:50 - yeah okay um let's see
80:53 - um don't know what's going to happen i
80:56 - probably should preview this
80:58 - before i turn it on uh hello there's me
81:02 - in my green screen
81:04 - nope nope not that one this one
81:08 - there we go oh look there's my hand
81:12 - oh it's crunchy bass okay um
81:16 - okay uh let's see here uh
81:21 - that's probably better um and then
81:26 - let's crop this off
81:29 - and crop this off
81:32 - a little bit over here and let's move it
81:36 - below a few things
81:40 - um and we don't need the banner here
81:42 - right now
81:44 - so that'll do um
81:47 - if i use i have a pencil will you be
81:49 - able to see that oh let me turn the
81:50 - light on
81:54 - how come that light doesn't go on if
81:57 - it's not getting enough power
81:59 - well that's not the light that's the oh
82:01 - that's not the light
82:03 - there we go is that better
82:10 - whoa oh no it's doing the thing again
82:14 - why does it do that that's why i forgot
82:16 - why i wasn't using this
82:17 - this i think why did i unplug this thing
82:19 - and don't have it set up anymore
82:21 - because it like doesn't work
82:25 - hold on everyone let's see if i can get
82:27 - it to
82:29 - uh let's see if i can get it to work
82:34 - okay there we go
82:39 - why it's not focusing
82:49 - should like auto focus better than that
82:53 - yeah austin is saying that i need a
82:55 - drawing tablet i don't know why i'm so
82:57 - opposed to the idea of using a drawing
82:59 - tablet
82:59 - i think i've just had too many bad
83:01 - experiences with weird latency and i
83:02 - think all that stuff has been sort of
83:04 - worked out probably with
83:06 - you know newer tablets and apple pencil
83:09 - and all that stuff
83:10 - um i'm not in the space where i have the
83:14 - whiteboard which is why
83:16 - um i just don't understand
83:20 - why
83:26 - oh i forgot that as soon as i move it
83:28 - around all right
83:30 - this is so sad this is pathetic
83:34 - welcome to the coding train where you
83:36 - watch a person who's really ill prepared
83:39 - to live stream i'm gonna try this
83:42 - one more time
83:58 - all right am i back by the way
84:00 - restarting the computer seems to have
84:02 - um
84:07 - seems to have um kind of resolved this
84:11 - issue
84:12 - like look how beautifully clear this is
84:14 - right now so
84:16 - maybe i just needed to restart uh so
84:18 - thanks for your patience i do not have
84:20 - the chat
84:21 - open right now so i cannot see your chat
84:23 - messages
84:25 - let me take a minute to do that
84:29 - if you will bear with me restore pages
84:33 - what's the chance oh that's beautiful
84:35 - okay i am back my pages are restored
84:39 - and we're back as if nothing happened
84:43 - all right back to this
84:46 - uh diagram
84:47 - [Music]
84:49 - which i will now move over to here
84:54 - so that you can kind of see it let me
84:56 - hold on
85:01 - move this over give myself a little bit
85:04 - more room
85:08 - to do that okay um
85:13 - all right so now
85:20 - the idea is that i have
85:25 - a circle
85:34 - it has some radius r i have a vehicle
85:40 - which has some velocity and i've
85:42 - projected out
85:44 - some sort of area in front of it
85:50 - so i think what i need to do is consider
85:52 - this a line
85:55 - and i need to get the normal from the
85:57 - center of the circle here
86:02 - and if this point is closer than
86:06 - whatever this distance is
86:08 - and um
86:11 - within in this distance is
86:15 - minus
86:18 - um and this distance is less than the
86:20 - radius
86:22 - then i'm in danger of running into
86:26 - the obstacle sorry
86:30 - so in other words i need to use this
86:32 - concept of
86:34 - look at my lots of other pages are full
86:36 - of stuff
86:37 - i need to use the concept of scalar
86:39 - projection
86:40 - which is that if i have a vector
86:46 - and then i have a point
86:51 - how do i find from that point
86:54 - the normal to that vector and i have
86:57 - done this
86:59 - um oh and you can't really see that i
87:01 - have done this in
87:03 - um i do exactly this in the pathfinding
87:07 - example
87:12 - and what i'm getting
87:16 - okay um now
87:21 - let me do i have a button to open and
87:24 - close
87:25 - the overhead camera i'm just gonna do it
87:26 - manually okay uh
87:33 - about a sec here
87:44 - okay
87:47 - all right let's work on this
87:50 - idea of um the scalar projection idea
87:55 - okay
87:56 - sorry i'm i'm i'm a little flummoxed
87:58 - here okay
88:00 - i don't know if all that work was worth
88:02 - it just for me to draw that little
88:04 - diagram
88:04 - but if i go to the nature of code
88:09 - i work this idea out here for path
88:11 - following
88:12 - so if my vehicle is here and like
88:15 - um i oh but oh i'm doing this is
88:19 - slightly different
88:20 - um yeah this is the path of the okay
88:23 - so i'm doing this in a slightly
88:25 - different way but
88:27 - it's the sort of same idea uh
88:30 - okay so
88:32 - [Music]
88:36 - i'm thinking through this
88:41 - so let me try to actually um let me try
88:43 - to do this without the
88:45 - without the um
88:48 - vehicle moving for a second
88:51 - okay there we go so i don't want the
88:54 - vehicle to move
88:56 - so let me take out this seek
89:01 - and let me have the vehicle
89:05 - not call update
89:10 - there we go and let me
89:14 - set its velocity
89:18 - to
89:19 - [Music]
89:23 - something like this and something like
89:26 - this
89:28 - that's a little bit extreme
89:38 - okay so this looks good like i feel like
89:41 - and actually i kind of want to just
89:46 - all right so basically what i want to do
89:49 - is i want to find
89:51 - this you know this
89:54 - point but if this is the
89:57 - take the bottom of this rectangle
89:59 - consider it a line i want to find
90:01 - where the center of the circle connects
90:04 - to that line and i've done this before
90:07 - but i'm having kind of trouble thinking
90:09 - of how to do this
90:11 - and and simon is reminding me that i
90:13 - have get normal point
90:14 - as in the path following get normal
90:18 - point
90:20 - so this is that function let me just
90:21 - grab it
90:23 - it's written within processing code way
90:26 - um but let's put that into
90:30 - uh i need to be in the
90:34 - vehicle class
90:40 - in avoid obstacle
90:43 - so let me just paste this generic
90:45 - function here
90:47 - and it is a function to get a normal
90:49 - point
90:50 - to have a a position
90:55 - what's this and then oh and then the
90:58 - what's a
90:58 - and b oh the line between two points
91:02 - okay a and b
91:07 - and
91:13 - just translating this to p5
91:16 - sorry i will get back to explaining what
91:18 - i'm doing in a moment
91:21 - uh i i just want to get this code in
91:25 - here
91:29 - uh and this is
91:35 - uh there
91:40 - all right so does this is now my get
91:42 - normal point
91:43 - function and
91:47 - let's bring the avoid obstacle function
91:50 - all the way up to here
91:52 - just so i can kind of see it closer to
91:55 - this
91:56 - so what are the the point is the center
91:58 - of the circle
92:00 - so get normal point
92:04 - is um
92:08 - so the position is the obstacle
92:11 - is the obstacle and i'm going to be
92:14 - writing extra code right now that i
92:16 - don't necessarily need
92:19 - so i need so just to be clear if i go
92:21 - back to my diagram
92:24 - i'll explain what i'm doing here which
92:26 - is that
92:28 - um this is now
92:32 - that position that i'm talking about in
92:34 - the code that's this
92:35 - like imagine that's the center of this
92:39 - obstacle
92:40 - then the vehicle i have point a
92:44 - and i have point b this is point a
92:47 - i realize you can't see it because i'm
92:49 - doing like the worst job
92:50 - ever and then over here you can't see
92:54 - that
92:55 - is a point b and my function that i've
92:58 - written previously
93:00 - if i give two points i get this vector
93:04 - and then if i give it a position i get
93:08 - this normal point now i don't actually
93:10 - need to do these two points
93:12 - because ultimately i already have the
93:13 - vector in the velocity
93:15 - but i think just to like get it working
93:17 - let me
93:18 - um let me do it this way first
93:23 - so i have to move that away and so now
93:26 - a is this dot position
93:30 - and then b is this
93:34 - uh a uh p5 vector dot add
93:38 - a and then i need to add the velocity to
93:42 - it
93:43 - so like seeing distance should be
93:46 - um maybe i need to make that
93:53 - um so i should call this seeing factor
94:01 - uh and that's 50 because ultimately and
94:04 - again this is totally silly that i'm
94:06 - doing this but i'm going to do it anyway
94:09 - add a
94:12 - plus
94:16 - um i'm gonna copy the velocity and
94:20 - multiply it
94:22 - multiply it by uh the seeing factor
94:27 - i think again i think i'm doing way too
94:28 - much extra stuff here
94:30 - but i just want to understand all the
94:31 - pieces so i want
94:33 - once again this is a then i want to get
94:36 - b
94:36 - and then i have pause and i want to see
94:38 - that it just gives me
94:40 - a point here so add that and then
94:44 - the normal should be get normal point
94:47 - pause a b is that the way that i define
94:50 - this function pause a b
94:53 - and then
94:57 - um and then let's draw
95:00 - fill 0 255 0
95:04 - ellipse normal dot x
95:07 - normal dot y 16. we'll make that a
95:10 - circle
95:11 - okay so let's see what this gets me
95:16 - p is not defined where line
95:19 - two ah called this pause
95:26 - all right that's promising seeing
95:29 - distance is not defined line 66
95:34 - uh so seeing factor
95:38 - yeah so um
95:52 - i'm gonna put that back in i mean i'm
95:53 - doing a lot of redundancies here
95:57 - um
96:05 - come on why am i not seeing this
96:08 - rectangle
96:11 - oh multiply
96:14 - what ah
96:18 - oh my goodness i've lost my mind here
96:20 - i've forgotten what it is i'm even doing
96:24 - there we go okay so
96:27 - that's the point and i think it would be
96:30 - useful for me first of all i meant for
96:31 - that to be red
96:34 - i don't know why i meant for that to be
96:36 - read
96:37 - um make it a little smaller and then
96:39 - draw i would like to draw a line
96:42 - from normal.x normal.y to
96:47 - pause that x pause that y
96:51 - okay and no stroke
97:01 - stroke 255.
97:06 - and that line this is so silly but i
97:09 - can't stop
97:10 - there we go so this is the idea
97:15 - now i've made this look kind of weird
97:17 - because
97:18 - this uh dot is like i positioned this
97:21 - perfectly
97:22 - but let me actually go now and
97:25 - have the the circle the the vehicle move
97:28 - around
97:31 - uh like i'm gonna add back in the
97:33 - seeking
97:39 - oh and the update
97:42 - right like no matter where i am
97:46 - i'm always getting a normal
97:53 - and when that normal is inside that
97:55 - circle
97:56 - i'm going to hit the obstacle the normal
97:59 - is even
98:00 - is even behind right because it's just
98:03 - taking that
98:04 - line so i can check all right all right
98:06 - this is good now
98:07 - let me see if i can reduce what i'm
98:10 - doing here
98:11 - in the vehicle like i actually don't
98:14 - need
98:15 - a and b because i could just start with
98:19 - a vector
98:21 - and that's this
98:24 - and then why do i even need to normalize
98:28 - it do i
98:30 - um oh yeah i do okay and then i can
98:34 - normalize it
98:37 - so this could be then get normal point
98:42 - position in this dot velocity
98:47 - copy and i don't need
98:50 - the velocity or a and b like that should
98:53 - work
98:53 - as well a is not defined
98:58 - oh oh i need this vector though
99:02 - um oh i do need a
99:07 - which is
99:16 - which was what the um the vehicle's
99:24 - position
99:27 - right um i don't have a lot of space for
99:29 - my code here i don't like the way that
99:30 - i'm doing this but
99:33 - um these are the three things i need
99:37 - all right get the normal point
99:41 - um with the position oh no no
99:46 - oh yeah the obstacle yeah so i don't
99:49 - need a separate variable here
99:51 - i might not need to copy all these
99:53 - vectors
99:57 - so the idea is that get the normal point
100:00 - i have
100:01 - the vehicle's position the obstacle's
100:03 - position and the vehicle's velocity
100:07 - a b is not defined
100:11 - because that's
100:15 - oh i'm so confused now
100:26 - that's v oh
100:29 - was it this and i wasn't paying
100:34 - attention
100:40 - i'm so confused
100:47 - i'm so confused
100:52 - um
100:57 - i gotta get my normal point function
100:58 - back
101:01 - uh i have i have really screwed this up
101:04 - i had it working and i uh i tried to
101:07 - simplify it and i lost
101:08 - my thread and using somebody i think is
101:11 - is noting that using the um
101:16 - uh using a and b as variable names is
101:18 - making things worse
101:19 - okay hold on everybody relax
101:23 - i've got this i've got this
101:27 - uh agents path following let's go to
101:32 - this one
101:33 - uh yeah vehicle
101:38 - do i have get normal point let me grab
101:40 - this one
101:47 - so basically i had position
101:50 - a i don't need b anymore instead of b
101:54 - i just i have that vector so a
101:57 - p is still p minus a
102:02 - and then v is now this a b
102:12 - so v dot normalize
102:16 - v dot multiply ap dot v okay
102:21 - yeah point a add
102:26 - v okay
102:29 - where is pause is not defined
102:37 - line 36
102:50 - there we go okay so i've got that back i
102:54 - mean it's sort of the same
102:56 - and do i need copies of all these
102:58 - vectors because the velocity gets
103:00 - normalized
103:02 - p just gets used here so that doesn't
103:05 - need to be copied but i'm going to leave
103:06 - it as is
103:07 - okay okay
103:10 - okay so now i want to know
103:14 - if it's going to hit the obstacle or not
103:19 - so there's a few different ways i could
103:20 - do that
103:22 - one is if it's going to hit the obstacle
103:26 - if that point the distance between that
103:29 - point
103:29 - and the circle
103:34 - right so if i take the distance
103:39 - uh p5 dot vector
103:43 - distance between the normal and the
103:45 - obstacle
103:47 - if d is less than the obstacle's radius
103:52 - and i i know i need some kind of like
103:54 - agility buffer but i'm just going to
103:56 - leave that right now
103:57 - then
104:04 - then let's make this much larger and
104:07 - let's fill it red
104:12 - otherwise make it green
104:16 - so let's see if now it should turn red
104:21 - where do i have obstacle um should turn
104:24 - red
104:25 - yeah anytime it's within the circle it's
104:28 - going to be red
104:30 - now also beyond just being
104:35 - and i really feel like i need a much
104:36 - larger space to work with than 400 by
104:38 - 400 pixels
104:40 - so let me make this
104:44 - um and uh
104:48 - okay
104:52 - all right
104:55 - okay great
104:58 - now uh that's good okay so if
105:02 - i want to consider the sort of buffer
105:04 - the size
105:05 - um thank you for simon who's giving me
105:07 - the suggestion in the chat
105:09 - i can fix that as
105:14 - uh the if that's less than the radius of
105:17 - the obstacle
105:17 - minus the extra buffer of
105:21 - the um of the actual
105:24 - size of the um triangle itself
105:29 - and i guess that's half of that radius
105:31 - but i don't know that i need to worry
105:33 - about that right now
105:34 - i can i can figure that out later okay
105:37 - let me give myself a little bit more
105:38 - room here
105:39 - there we go um okay
105:42 - now the other issue is
105:46 - let me get my diagramming back this is
105:48 - so
105:49 - not the way i like to do things but
105:52 - actually let me just raise this up a
105:53 - little bit and hopefully it's not gonna
105:55 - uh it did the thing it did the thing
105:59 - don't touch the camera shift men
106:01 - hopefully this whole stream doesn't
106:02 - crash
106:03 - apologies in advance if it does
106:07 - uh switching camera
106:10 - switching back
106:14 - come on oh boy
106:17 - oh boy oh this overhead camera is the
106:20 - worst i'm just
106:21 - gonna get rid of it
106:24 - i'm just going to get rid of it
106:30 - there it is all frozen and not in focus
106:37 - and ass is saying shouldn't you fix it
106:39 - so it doesn't detect a potential
106:40 - collision when it's moving away
106:41 - exactly that's what i want to do right
106:43 - now
106:44 - um so but uh i was going to try to
106:47 - explain how it's going to do that with
106:49 - the diagram
106:50 - but that's just a fail i'm going to give
106:51 - up on the diagram
106:53 - everybody so i need to use the diagram
106:57 - for myself
106:58 - i can show it to you this way so
107:00 - basically
107:01 - let me create the scenario
107:04 - where if it's moving in the other
107:06 - direction
107:09 - yeah basically
107:13 - why it might be useful for me to have
107:15 - those two points
107:17 - is i need to check to make sure that
107:19 - other point is actually in that line
107:21 - segment
107:22 - i do this in the past following as well
107:27 - right it needs to be
107:30 - that point it also it shouldn't be like
107:33 - it shouldn't be read even here
107:36 - like hold on let me um
107:39 - turn off the seeking
107:44 - and go to the particle and have its
107:48 - initial velocity
107:51 - be once again one comma zero
107:56 - it should not be red right now it should
107:58 - not be red
107:59 - until that rectangle reaches
108:03 - so also that point should be within
108:06 - the rectangle so how do i do that the
108:09 - normal point oh i know
108:10 - it's just got to be less than the seeing
108:11 - distance ah okay
108:13 - but also to be in the right direction
108:15 - all right okay a couple things so
108:17 - uh particle um in a void so
108:21 - if it is there
108:24 - and
108:27 - um the okay so what is d1 oh i'm doing a
108:31 - terrible see this is why i have to work
108:32 - stuff out
108:34 - i mean maybe there's a way for me to be
108:36 - thoughtful about my variable naming
108:37 - while i'm working it out
108:39 - but d1 is the distance between
108:42 - the obstacle and that point
108:45 - d2 is the distance between the normal
108:50 - and this and this position
108:54 - so i i'm just for simplifying i'm going
108:56 - to take that out again
108:58 - and d2 is
109:02 - less than seeing distance
109:06 - this is driving me crazy that seeing
109:08 - distance is just
109:09 - the velocity's magnitude i'm gonna have
109:11 - this be a fixed variable
109:13 - for right now okay i'm going to make it
109:16 - not
109:16 - scale it's going to be much simpler for
109:18 - everybody
109:23 - so i'm not going to worry about scaling
109:26 - it
109:28 - according to the magnitude i can worry
109:30 - about that later just to simplify things
109:34 - um basically it needs to both
109:38 - be within the circle that normal point
109:40 - needs to be within the
109:42 - circle and not too close to the vehicle
109:43 - oh having a whiteboard would be so great
109:45 - seeing distance does not define line 79.
109:52 - so as soon as that rectangle touches the
109:55 - circle it should turn red
109:59 - oh weird
110:02 - uh it did but it seemed to be like late
110:09 - i wonder if this is a function of it
110:10 - being like perfectly aligned with the
110:12 - center
110:14 - um
110:17 - like let me just for a second here go to
110:20 - obstacle
110:21 - um no sketch make this obstacle much
110:25 - bigger
110:27 - and a bit further down
110:36 - why why i'm getting the wrong distance
110:38 - clearly i'm getting the wrong distance
110:46 - normal and this dot pause
110:50 - that's the right distance
110:59 - and i'm drawing oh i am offsetting it
111:03 - back
111:04 - by negative this dot r so the seeing
111:07 - distance is actually
111:10 - um offset to the back not the center
111:14 - it's because of the triangle
111:17 - oh that's kind of silly let me not
111:19 - offset it back just for a second
111:21 - is that enough to like get it off that
111:23 - much
111:25 - yeah no it should actually be earlier
111:28 - then
111:31 - oh oh no no
111:37 - i'm not thinking about the edge
111:40 - what am i doing i need to project that
111:43 - out to the edge
111:46 - oh this is weird
111:58 - i'm reading the chat right now
112:01 - [Music]
112:03 - okay
112:07 - so actually what i want to do is just
112:09 - check
112:13 - that i think i'm going to check
112:14 - something completely different
112:16 - for example i want to check the distance
112:20 - between
112:22 - [Music]
112:27 - the uh the position
112:32 - plus okay
112:36 - so if i have an endpoint which is
112:39 - uh this dot pause dot copy
112:44 - uh dot add ah this vector math stuff is
112:47 - kind of crazy
112:48 - um do i have a copy of the velocity
112:52 - no no never mind this is silly what i'm
112:54 - doing uh p5 dot vector dot add this dot
112:57 - pause
112:59 - [Music]
113:01 - this dot velocity dot copy set
113:04 - mag seeing distance
113:12 - uh is that actually right add i want to
113:15 - add the position
113:17 - and the velocity with its magnitude
113:20 - set to the seeing distance
113:23 - and then the d2 is the distance between
113:28 - the end and the obstacle
113:31 - and as long as that is also less than
113:34 - obstacle.r
113:37 - right is this this would let me know
113:40 - where
113:40 - the end seeing distance is not defined
113:43 - this dot seeing distance right this will
113:47 - let me know if the end
113:48 - is within the circle yeah
113:52 - okay so if it's along the path to the
113:55 - circle and the end is sitting there all
113:57 - right so that's kind of right
113:59 - i think um let's turn its velocity a
114:03 - little bit
114:05 - just to see like what if i set it to 3
114:08 - common negative 1.
114:11 - it's never going to do that and then if
114:13 - i do it negative 0.5
114:17 - yeah okay i think i'm in pretty good
114:19 - shape here
114:20 - oh but what if it's going in the other
114:22 - direction
114:26 - so the question is if it's going in the
114:28 - other direction
114:30 - it can't be negative
114:34 - how will i account for that here
114:38 - i could use a suggestion hold on i have
114:40 - to check my messages
114:42 - oh okay
114:52 - um
114:57 - ah i see somebody running the applet
114:59 - that's exciting
115:02 - okay uh
115:05 - okay so now
115:08 - there's like one little piece to this
115:10 - which is that
115:13 - if it is going in the opposite direction
115:15 - so let me determine let me
115:17 - alt create a scenario where it's doing
115:19 - that
115:23 - um so it's
115:26 - initial position what if i make its
115:28 - initial position
115:34 - um
115:37 - like over to the side
115:42 - and then have it going the other way
115:59 - okay hold on a sec uh
116:02 - how do i test for this
116:07 - um let me have the obstacle
116:14 - and have a vehicle further up
116:19 - is it
116:23 - i guess it's just gonna work because
116:25 - that
116:26 - distance is too far okay it knows it
116:28 - knows
116:31 - it's a little uh i don't need to add
116:32 - anything
116:34 - it's a little messed up that when the
116:36 - edge
116:38 - goes out but hopefully it's never going
116:40 - inside the thing in the first place
116:42 - okay so there's some
116:45 - some massaging that needs to happen here
116:47 - but i think i mostly have
116:49 - the right idea and i should be able to
116:52 - if i steer it around
116:54 - right we should see and let me give it a
116:58 - much bigger seeing distance
117:00 - just to uh and make the obstacle a
117:02 - little bit smaller
117:05 - um
117:09 - which should help me
117:13 - oh no why
117:16 - what happened i mean
117:20 - oh because what if the seeing distance
117:22 - is on the other side of it
117:33 - so it's not actually it's anywhere
117:35 - within that
117:37 - but that seems like a fine-tuning thing
117:42 - uh how do there's gotta be an easy way
117:45 - to resolve that though right
117:49 - because otherwise
117:53 - otherwise it's mostly the right idea
117:55 - okay i'm going to move on
118:03 - yeah that's a good correction that i am
118:05 - getting uh in the
118:06 - chat here okay um
118:09 - why not check intersection of the circle
118:11 - with the current velocity vector yes
118:12 - that's what i want to do
118:14 - oh like cast array oh that's what i
118:16 - should do
118:18 - and then just check if wherever it
118:21 - intersects
118:22 - is less than oh yeah that's that's much
118:24 - better so let me just put a to do in
118:26 - here because i want to kind of move on
118:29 - i didn't necessarily expect to finish
118:30 - this i did expect to get a little bit
118:31 - further
118:32 - so to do uh look
118:36 - at casting ray for
118:39 - vector plus circle intersection uh
118:49 - i mean wouldn't that just save me a lot
118:53 - of trouble in the first place
118:55 - do i even need that normal thing i'm so
118:57 - confused
118:59 - um okay
119:05 - um okay rectangle circle collision
119:08 - detection right i could also use a
119:09 - collision detection library
119:11 - as fun planet is suggesting but i am
119:13 - trying to avoid that
119:15 - let's just go back to the uh description
119:17 - and i want to at least introduce the
119:19 - steering behavior
119:28 - okay
119:30 - by localizing the center of each
119:31 - spherical obstacle the test for
119:33 - non-intersection of the cylinder is very
119:34 - fast
119:35 - i'm by the way i should have kept
119:36 - reading because i think it's giving me
119:38 - some better
119:39 - way of doing this if the 2d distance
119:41 - from the point is the greater than sum
119:42 - of the radii but
119:44 - on the character then there's no
119:45 - potential collision yeah
119:47 - i i think i could have definitely done
119:48 - this a different way i realized i went
119:50 - down
119:50 - a a a kind of strange path
119:55 - similar obstacles which are fully behind
119:57 - the character or fully ahead of the
119:58 - cylinder can be rejected
119:59 - or can be quickly rejected for any
120:01 - remaining obstacles a line sphere
120:03 - intersection calculator oh yeah
120:05 - line circle intersection calculation so
120:07 - that's what i should be doing
120:09 - like yeah
120:14 - like this is enough
120:18 - so uh this actually
120:24 - right i'm gonna leave this in here but i
120:26 - should do this and this should this
120:27 - should be a line circle intersection
120:30 - um and now
120:33 - okay steering to avoid this obstacle is
120:36 - computed by negating the lateral
120:38 - side up projection of the obstacle
120:40 - center what the hell does that mean
120:43 - negating the lateral side up projection
120:47 - in figure 7 obstacle a
120:51 - does that mean like have a steering
120:54 - force that points in this direction
121:06 - obstacle okay you don't know where i
121:11 - i lost where that is i'm like lost that
121:20 - spot
121:25 - there it is i couldn't find the tech
121:28 - this like big wide block of text is very
121:30 - hard for me to read
121:32 - this intersects the forward axis near
121:34 - the character steering to avoid this is
121:38 - obstacles b and c do but b is selected
121:40 - for avoidance and it's correct of
121:41 - steering us to the characters left
121:44 - the value returned from the obstacle
121:45 - void the steering value to avoid the
121:46 - most threatening obstacle or if no a
121:48 - special value null of the zero vector
121:50 - so is it literally as simple as just
121:53 - doing a
121:54 - uh a vector that is perpendicular to its
121:58 - velocity
121:59 - in the like just steer away and
122:02 - is it that simple because then
122:07 - it would be a matter of
122:13 - um like so this is like if it's red
122:17 - then this is like
122:21 - apply the steering force
122:27 - and so that force would be
122:31 - copy of the velocity and then velocity
122:34 - like i could rotate it by 90 degrees but
122:37 - how do i know which way to rotate it
122:39 - well i want its direction to be the same
122:43 - direction as
122:44 - okay so actually this is simpler
122:47 - p5 vector subtract
122:51 - the uh that end point
122:58 - from the
123:00 - um
123:05 - the endpoint minus the obstacle
123:09 - that's a vector pointing out yes force
123:13 - dot
123:13 - set mag do i have a maximum force
123:17 - yes max force
123:21 - and then this dot apply force force
123:25 - so let me get rid of the seek
123:29 - let me also add an edges
123:35 - and i will
123:39 - or i could seek so simon is saying it's
123:42 - a flea behavior
123:43 - so i could flee the nearest intersecting
123:45 - circle yeah i think that's not it's not
123:48 - actually what i want to do though
123:49 - because i don't want to turn around
123:51 - a flea behavior would cause me to turn
123:53 - around and
123:54 - run in the opposite direction from the
123:56 - circle and what i just want to do is
123:57 - just steer away until i'm not going to
123:59 - hit it anymore
124:01 - um so i am going to
124:05 - say vehicle edges i also want to i need
124:08 - to wrap the edges
124:10 - so to add an edges function
124:15 - if this dot pause dot x is greater than
124:18 - width
124:18 - this dot pause dot x equals zero
124:21 - uh else pause dot x is less than zero
124:25 - and i should be taking r into account
124:28 - but i'm not bothering to
124:31 - let me do that with the y
124:37 - and this by the way i've got to finish
124:38 - it wrap up here
124:40 - so i'm hoping this kind of works for
124:41 - just avoiding the one obstacle and then
124:43 - i'm gonna
124:44 - clean up this code work on it some more
124:46 - try to write up an explanation think
124:48 - about making a video on it
124:49 - uh but um and all that jazz okay
124:55 - so ah max force is not defined well that
124:59 - was good
125:00 - where did i line 50
125:12 - all right
125:21 - so not a lot to see here because
125:25 - it's like super overpowered in terms of
125:27 - its steering and i'm not taking into
125:28 - account
125:29 - the uh the size of that rectangle so let
125:32 - me do that
125:33 - so i i kind of want to have
125:37 - an agility so if it's
125:40 - less if d1 is less than no
125:46 - d1 is the distance between the normal
125:50 - and the obstacle um and so if d1
125:56 - uh plus the or minus if d1
126:05 - uh
126:05 - [Music]
126:08 - my brain is hurting i need to use my
126:10 - paper sorry everybody
126:12 - um
126:15 - so this distance is less than this
126:18 - distance
126:19 - and if i take off that obstacle yeah if
126:22 - i take off that as well
126:24 - um that'll give me a more
126:27 - it should steer further oh no
126:30 - didn't i rerun this alright hold on let
126:33 - me
126:33 - let me put things back
126:40 - like hold on i just want to see
126:41 - something what if i make this really big
126:49 - [Music]
126:56 - why
127:02 - okay um
127:10 - so i'm confused why i'm not getting the
127:13 - oh oh it's plus plus plus
127:19 - right no no it's definitely minus
127:24 - it's just such a tiny amount that i'm
127:25 - not noticing it
127:32 - oh is this am i suffering from the thing
127:34 - being too far out past it then
127:41 - i think i am it stops steering when
127:44 - so i'm gonna have to make some
127:45 - improvements to this but i've got the
127:47 - basic idea
127:52 - of my one obstacle so yeah so
127:56 - let's uh it's not very exciting to look
127:58 - at because it's just kind of avoiding
128:03 - the one but i want to do a couple things
128:06 - one is just to like have this demo a
128:09 - little bit
128:09 - in a little nicer shape here um
128:12 - and i want to go to sketch.js
128:17 - and i want the vehicle to do this
128:21 - and i want it to start at 0 comma 150
128:28 - 200 i want the seeing distance to be
128:32 - much smaller
128:33 - it should actually be scaled according
128:35 - to its velocity
128:37 - um let's make it 100 okay
128:40 - okay so let's see what happens here
128:44 - that's good that's what i wanted to see
128:47 - i definitely need it to move faster if
128:49 - i'm gonna
128:51 - like be able to sort of see how this
129:02 - works
129:15 - because i would love to introduce
129:17 - obstacle avoidance into the flocking
129:19 - system
129:19 - it'll be really cool to see that
129:23 - okay so this is doing what i wanted to
129:26 - do
129:27 - um farooq is saying check the diagram on
129:30 - the page you will see
129:30 - two blue tangents steer until the
129:33 - direction of the motion has tangents on
129:35 - one side
129:37 - so i'm gonna be setting this aside now
129:39 - i'm gonna be saving i'm gonna
129:42 - save this and uh
129:45 - i am going to accept all new versions of
129:48 - this
129:49 - that correct my errors and clean things
129:51 - up i'm gonna have to
129:52 - i definitely need to work on this more
129:53 - on my own like
129:55 - this is not super interesting to watch
129:57 - without multiple obstacles
129:59 - uh without multiple vehicles but i think
130:02 - this is
130:04 - um kind of as far as i'm gonna be able
130:06 - to get with this project
130:08 - today um um
130:11 - i'm gonna i think my kids are still out
130:13 - on a walk
130:15 - in the park and i want to go meet them
130:18 - so i'm going to play my goodbye song
130:21 - where i will
130:22 - uh so stay tuned don't worry this is
130:24 - just oh i don't have my music hooked up
130:29 - what is going on here
130:34 - uh hold on a sec i'm gonna fix this
130:39 - because i forgot that i restarted my
130:41 - computer
130:44 - oh you are hearing the sound i'm just
130:46 - not hearing the sound
130:49 - is it super loud
130:57 - [Music]
131:02 - okay great um thanks for everybody for
131:06 - um tuning in today
131:11 - it's very loud in my ear maybe that
131:14 - means it's too loud in your ear
131:15 - um i
131:19 - um uh simon thank you for all your
131:21 - feedback i'm gonna work on correcting
131:23 - this later
131:25 - so this is part this is going to be
131:27 - incorporated
131:28 - into uh chapter six of the nature of
131:31 - code if you're kind of joined late
131:33 - wondering what i was doing
131:34 - chapter six of the nature of code goes
131:37 - through
131:38 - all of these different steering
131:40 - behaviors as implemented
131:42 - in p5.js and i never have attempted to
131:45 - implement the obstacle avoidance one
131:48 - really ultimately the reason why i'm
131:49 - doing this is um
131:52 - i really want to implement obstacle
131:54 - avoidance along with
131:58 - uh i just don't know how to get this to
132:01 - run
132:02 - immediately but i guess i'll just stick
132:03 - with this um
132:11 - hopefully this example is gonna pop up
132:13 - and run in a second
132:14 - yeah so i would like to introduce
132:17 - obstacle avoidance into this flocking
132:19 - system because i think it would be
132:20 - really cool to see them like flock
132:22 - around the obstacles
132:23 - but i'm far far far away from that right
132:26 - now
132:27 - so i've got about a minute left to
132:29 - answer any
132:30 - questions i can't remember who it was to
132:33 - suggest that i do
132:34 - more q a stuff and i do a very poor job
132:36 - of just trying to catch a few questions
132:38 - at the end
132:39 - um and thank you to everyone who's been
132:41 - helping i see that joseph
132:43 - um in the coding train discord has
132:45 - gotten me
132:46 - craig reynolds applets running working
132:49 - i'd love to know how you did that maybe
132:50 - we can collaborate on
132:51 - a little web page that just has
132:55 - like that captures each one of those
132:57 - demos running for like 30 seconds
132:59 - and puts it in a little like gif
133:01 - animation um
133:02 - because i would like to go to refer to
133:04 - those often when so
133:06 - i should mention let me pause here so
133:09 - it's actually going to be a little while
133:10 - until i'm back in live streaming
133:12 - many many videos are going to be
133:14 - continuously coming out on the coding
133:15 - train
133:16 - i've actually also been redoing the
133:18 - beginner learn to code p5 videos
133:20 - so if you happen to be here you probably
133:22 - aren't here right now if you're like a
133:24 - totally new coder new new viewer to the
133:27 - channel might be a new viewer to the
133:28 - channel but if you're a new viewer and
133:29 - you've never programmed before
133:31 - please come back it'll it'll stay but
133:34 - also come back
133:35 - because um the code playlist
133:39 - which is this one i have
133:42 - now new versions of all of these two
133:45 - point x videos
133:47 - which are about variables in the random
133:50 - function in p5
133:51 - these are all from many several years
133:53 - ago so i have new updated versions of
133:55 - those those will be coming out
133:56 - i have all of chapter four coming out i
133:59 - have all
133:59 - i have to make and have all of chapter
134:01 - six to come out
134:03 - so all this is gonna be coming out in
134:04 - the next month but i won't be having any
134:05 - live streams
134:07 - from now until after april 10th
134:10 - with one exception on march 19th i am
134:12 - having a guest
134:13 - who does um live coding performances
134:16 - come and talk about that practice
134:18 - of um live coding um um so
134:22 - stay tuned sign up for the discord
134:24 - follow me on twitter shiffman
134:26 - subscribe to the channel and click the
134:28 - bell stuff
134:29 - if you want to like get notifications of
134:31 - when that next live stream about live
134:33 - coding performance is coming
134:35 - um but um yeah and and stay tuned for
134:39 - all the new stuff what else do i have to
134:40 - say
134:41 - um yeah dabbing bear writes i just tried
134:44 - to play the video at 2x speed like i
134:46 - usually do and didn't realize it was a
134:47 - stream
134:51 - i love it please watch my videos at 2x i
134:54 - don't know how they're tolerable
134:55 - unless they're at 2x
134:57 - [Laughter]
134:59 - um and so i'm going to go i've got to
135:01 - run thank you i'm sorry that these
135:03 - streams like don't wrap
135:04 - up in like a sort of thoughtful like end
135:06 - of the show kind of way
135:08 - just kind of like jump off but that's
135:10 - unfortunately what i have to do today
135:11 - i'm going to be working on
135:12 - this particular example more and seeing
135:14 - you all in future videos on the coding
135:16 - train
135:17 - i would love to hear any feedback from
135:19 - you just a little
135:20 - another last little plug if you've
135:23 - worked on anything related to any
135:25 - videos in the coding train like for
135:27 - example i noticed somebody on twitter
135:28 - shared with me
135:29 - a spring um please a spring project they
135:33 - made based on this
135:35 - please add them to the website i'm
135:37 - really trying to fill out the website
135:38 - with lots of community contributions
135:40 - i've got new ideas for how those are all
135:41 - going to be organized and featured
135:43 - coming soon thank you austin for posting
135:45 - the link to curiositystream
135:47 - it's very appreciated you can sign up
135:49 - again at curiositystream.com
135:51 - codingtrain for 26 discount off the
135:54 - entire year
135:54 - it's 14.79 cents for the entire year and
135:57 - you get
135:58 - nebula for free okay um
136:02 - see you all and on the next time on
136:05 - the coding train as always i always
136:07 - forget that this stop this stop
136:08 - it stop this stop i'm gonna do this stop
136:11 - this stop i'm gonna do this this stop
136:12 - this stop this stop
136:14 - i'm gonna do this stop stop i just
136:16 - stopped
136:18 - [Music]
136:30 - this dot
136:44 - stop
136:48 - [Music]
136:55 - this dot
137:00 - [Music]
137:10 - this dot song never forget this dot
137:16 - [Music]
137:24 - i'm gonna say once again here
137:27 - [Music]
137:40 - song
137:46 - [Music]
137:56 - autotune and the internet will fix that
137:58 - for me
137:59 - [Music]
138:03 - see it with me it's the polaroid song
138:11 - [Music]
138:22 - it's
138:28 - unicorns and rainbows and cupcakes what
138:31 - else
138:31 - is there yes kittens
138:35 - thank you very much kittens and rainbows
138:37 - and cupcakes notice
138:38 - that look what i get i'm really losing
138:41 - my mind
138:42 - okay let's do it
138:52 - [Music]
139:21 - the kids
139:36 - [Music]
139:47 - [Music]
139:58 - i feel just sort of like a nice feeling
140:01 - of relaxation
140:03 - everything's gonna be okay today dream
140:05 - is not broken it has not frozen this is
140:07 - a this is a wonderful thing
140:10 - okay we're gonna do it i'm really
140:12 - getting to something i need my sound
140:14 - effect
140:17 - [Music]
140:26 - what else is there unicorn
140:30 - [Music]
140:34 - that was invalid syntax i forgot uh
140:36 - there was one other
140:37 - thing here that i think is important
140:39 - that i will use continuously
140:41 - over and over again all sorts of text
140:44 - generation
140:45 - analysis things that i will use
140:48 - continuously
140:49 - over and over again first thing i need
140:51 - to do
140:52 - is yes
140:58 - [Music]
141:07 - i usually often turn my camera back on
141:09 - at the end here a little dance but i've
141:11 - already
141:12 - unplugged it so see you all next time
141:17 - uh have a wonderful day um i'm gonna go
141:19 - spend some time outside if you're able
141:21 - to i highly suggest you do as well
141:22 - uh stay in touch and until next time you

Cleaned transcript:

do so do do do do do do check one two audio check uh let me know how i sound especially in relation to the music behind me and um i will see you all with my face and my voice in about two minutes so me do oh one more minute please everybody okay i'll be here in one minute do hello everyone and welcome to a saturday afternoon episode of the coding train live coming to you live here from brooklyn sorry for that little glitch i've had to take an extra round of this oneminute song that's having a little difficulty getting some things set up here so i am thrilled to be here with you today if this is your first time watching welcome um one of the things that i like to do is offer a little prompt to hear from folks in the chat nothing too extraordinary today is my prompt i would like to know what did you have for breakfast today so i know it might be it's 1 p.m um where i am in the eastern time zone but it could be any time of day for you wherever you're watching from so maybe you had breakfast earlier today maybe you're about to have breakfast what are you having for breakfast today let me know it's fun to see the flurry of activity in the chat gives me a sense of who's watching where everybody's from and what kinds of things i should think about eating for breakfast in the future all right so um before i forget i have i guess i you know i'm not once uh you know in case you think that i'm organized and have any sort of plan not really but before i start rambling too much and forget and i'm not sure what is going on i have like a little i just had a cookie that's a little snack and there's a little piece caught in my mouth i see eggs and bacon and a bagel corn flakes a cup of coffee cake and coffee bread toast i saw something what i'm always curious about is uh aki and salt fish with fried dumpling dumplings says shaquille where are you from where you had that i am fascinated and by savory breakfasts and places and cultures around the world where you eat what is commonly thought of in my world as a lunch or a dinner kind of food but for breakfast a dosa with tea last night pizza microwaved pancakes by the way i am not the best cook chef baker maker of food items in the world but i do have a speciality pancakes my children can attest that my pancakes are excellent i like to make them with a whoa already welcome to mike you have just joined the coding train what have you won with your membership of the coding train well my everlasting undying gratitude the fact that your name pops up in green on my screen over here and i can see it mike are you even watching right now what did you have for breakfast but we must find you a random number now there is an interesting question here which is last time i live stream i had a lot of plans for this discord bot that was going to help assign random numbers and uh create random walk patterns and all sorts of things i have no idea if i have any of that i certainly didn't do any work on it lots of other things are going on so i will just return to my book and boy you know i had a lifechanging moment last week on the live stream where i learned something about this book which says a million random digits now i might say that this book was misleading me but it was not it in fact it was quite clear it's written right here a million random digit what is a digit after all then one single number a character a single character that represents a digit zero one two three four five six seven eight or nine so i foolishly read this in my mind always as a million random numbers now you could also say that there are there are a million random numbers in this book but i always thought of each random number and let me see if you can see this i don't know uh it's divided if you look at any given page as in groups of five digits meaning a five digit number or a number between zero and ninety nine thousand nine hundred and ninety nine but there are only two hundred thousand of those because there are 1 million digits 1 million divided by 5 is 200 000. so i have something new in my thinking you know as my uh desire is to give out in this world one million a random number for everybody that's my dream in life it's for everybody in the world to have a random number i don't know that's that's kind of like i think there's a problem with that because really people should have names and they should have names that feel meaningful to them that you feel a certain sense of when you're called by that name there's an intimacy a friendship there and i don't know i think maybe the whole idea of everybody having a number is problematic so take that out take that aside i love random numbers and that's a fun little thing we do here when somebody joins i give them a random number it's a gap a little friendly gift it's like a random number with a heart from me to you um and i sort of flip through the pages and ultimately though i'm giving you an index into this book because then you will have your own pseudorandom number sequence of all the other numbers that follow which you could generate an algorithmic pattern that is the same every time with that pseudorandom number sequence so mike welcome to passengers your random number is uh on page 141 it is row 7020 and it is column zero one two three and the number here and i no longer i'm gonna think of these as numbers but as sequences of digits your five digit number is nine two three eight zero ultimately i i spent a lot of time doing a lot of math trying to figure out how long it would take me to read this entire book and i'm starting to think that that might be a bit more realistic than i thought like could i do a live stream right if there's just a million digits and i can read them like this eight zero zero four three how many can i read in one minute ready somebody set it up hold on i'm gonna set a timer here i'm gonna set a timer this is what this is by the way the thing that i was trying not to forget was to thank the sponsor of this live stream curiosity stream i'll do that in a minute but i'm on a little tangent here i can't get off can't get off this random number reading calculus train uh where is my stopwatch uh timer all right we're gonna start at one minute i'm gonna start at the very beginning i'm gonna try to read it should i try to read it faster i'm gonna read it at a regular pace because i think if i'm going to do this whole book as a full live stream you know when i hit 1 million subscribers oops what about if i hit when i hit one point i already hit that also oh well uh um uh here we go ready and one minute timer go one zero zero nine seven three two five three three seven six five two zero one three five eight six three four six seven three five four eight seven six eight zero nine five nine zero nine one one seven three nine two nine two seven four nine four five three seven five four two zero four eight zero five six four eight nine four seven four two nine six two eight two sorry two four eight zero five two four zero three seven two zero six three six one zero four zero two zero zero eight two two nine one six six five zero eight four two two six eight nine five three one nine six four five zero nine three zero three two three two zero nine zero two five six zero one five nine five three three four seven six four three five zero eight zero three three six zero six nine nine zero one nine zero two zero two five two nine zero nine three seven six seven zero seven one five three eight three one one three one one six five eight eight six seven six seven four three stein seven zero four four three six two seven how long does this go on for it's called by the seaside i didn't repeat so that's amazing okay all right everybody stop i've completely forgotten where i got to could anybody please in the chat um tell me what numb what was the last sequence of numbers i read i have no idea like i have literally zero idea while i'm waiting for you to tell me i'm gonna take a moment a spoiler alert for today is a topic to thank today's sponsor curiosity stream launched by media visionary john hendricks who founded the discovery channel curiosity stream is the awardwinning destination for documentary films and tv shows covering every topic from space exploration space exploration to adventure to the secret lives of wild animals and actually abe thank you to cody drain viewer abe who recommended two things for me to watch i've been making my way through hannah fry dr hannah fry's series about maths and data um man's first friend i have a dog gloria pickle whom i love very much and there's a whole documentary film about dogs all around the world in different cultures and the history of dogs and humans together um so if you're interested you can sign up in the link that's in the chat and in the description and on the screen and you'll get a 26 discount on the annual hd plan by the way guess what that's 14.79 for the entire year um and also get access oh this is kind of like i'm burying the lead here you get access to the video streaming service nebula which is a streaming service that i'm a part of along with many other youtube creators there's originals on there there's nebula plus content find a lot of other youtube channels not to be aware existed and watch them on nebula when you sign up for curiosity stream using the link on the screen in the chat so um again the nebula itself i think is i forgot what the price is but it's some amount of money per month and you just get that for free along with the along with your actual stream all right did somebody tell me what number i was on uh zero four four three six two seven okay let me find that they find that anybody have a magnifying glass for me oh my vision these by the way are progressive lenses and i was so thrown off by the way the world looked when i first got them now i'm totally used to them but i think i need them to be dialed up a little bit because i'm trouble reading again all right uh zero four four three six two seven where could that be zero four four oh this is the worst please hold oh i found it zero four four three six two three six two seven okay i found it that didn't seem like i made it so i read one two three four one two three four five six seven eight nine ten fifty digits a hundred digits let's just round it up a hundred hundred fifty let's just say i read 200 digits in one minute does that seem reasonable uh 10 10 20 30 40 of these uh groups of five times five is 200. so one minute if it takes me to read 200 digits one million digits divided by 200 is 5 000 minutes which is about 83 hours all right i still don't think it's very much more realistic than when i thought it was a million five digit numbers but 83 hours is still like three and a half days i don't know i don't know um maybe somebody can just check fact check my math there let me i got to move some things around uh oh boy i've got a thing going on over here a thing going on over here i'm not in the right place um okay uh clear local chat all right so what have we got in store for you today so first i'd like to do some kind of like updates i mean it's not really breaking news but i'll play my breaking news so um coding train what's happening on the coding train um first of all if uh i'm live right now uh yesterday i released a guest conductor video with uh lily james from the twirling tech goddess uh it's a really wonderful youtube channel let me just see if i can just go over and look at the full channel for a moment um and you'll see that lily does a lot of work with 3d printing and fashion hardware like i'm always looking for guests to feature videos um on topics that i don't really touch on lily has a really fun unique personality she has a twirl test for her technology um has a lot of energy and enthusiasm uh a a nice set of subscribers here on youtube but could um could use a little coding train boost so if you have a chance to check out lily's channel and subscribe i'm a big fan and i think it would be great to show her a little bit of love so um and john is suggesting in the chat record yourself saying zero to nine and build code that plays your audio yes so that would definitely be a great project for a live stream someday i'm having a bit of an issue which leads me to kind of the topic for today which is that i need to move this out of my way oh my goodness i have so many things in weird places sorry i'm kind of i hate to say this because i probably shouldn't alert you to this fact but i'm trying to sign up for something related to something i want to get for my kids i'm in like an online queue kind of thing and so i might have to take just like a one minute to like get something real quick over here uh when it's my turn so if i'm a little bit distracted today please uh bear with me um and boy whose name is very aptly named who's youtube username boy which maybe is your real name i'm not sure loves the boyd's coding challenge and that's what i'm doing prothomesh says i am here what did i miss where's my absolutely nothing sound drop absolutely nothing sing it again now um just me talking trying to count up to a million with random numbers and doing some useless stuff um but um one of the things that is you know i have i suffer from having trying to do too many things at once with the coding train uh have sort of a fun coding live show which is what i'm doing now which is really just me rambling because i don't have time to prepare and do segments or have lots of things organized for it i use the videos for actual curriculum that i am teaching in courses at nyu that's really where all almost all of my focus is right now in teaching the course the nature of code at nyu for a group of 31 students and so i am refreshing and redoing all of the videos probably a better place for me to look at it is here and you'll notice that it stops with chapter three and you might be wondering how are you possibly getting through a semester only having the content up until chapter three well good news for you cody trade viewers i have already finished the videos for chapter four and my students are watching them now in fact if you are a coding trained member i might have shared with you some sneak peeks of them but i'm still working on the descriptions and the code and the thumbnails so those will appear uh hopefully they'll come out like boom boom one per day um this week i'm hoping because i should be able to finish those up with all the folks that are helping me uh with that thank you to matia and violet and psy and kobe i don't like naming random people who are helping with coding trade things now realizing i'm gonna forget somebody um so stay tuned and i have begun the process of recording the videos for chapter six autonomous agents and i have already recorded but they have not been edited and put together the first two videos for this chapter so i'm getting a little bit ahead um i do another news item here and i'm totally remiss in remembering to think about this since last week but i really i really it's important to me to do at le a video for pi day which um what's today's date i can't figure out what today's date is the 6th of march it's soon it's 8 days away is that next thursday next friday i'm not really sure no next saturday is the 20th no that's the third no i've got more time than i think it's a sunday right sunday would be pi day oh maybe i could just no i can't do a live stream next weekend i uh maybe i could i don't know what i'm going to do but i would like to record a video about pi day and i've got a couple suggestions here oh oh wait a sec what happened here oh hold on hold on please hold please hold intermission for just two minutes okay everybody i'll be right back oh but but uh put your ideas for pi day in the chat or what you ate for breakfast because i kind of missed a lot of those i'll be right back i swear this is going to be less than less than a minute so that was i'm back see how fast that was you didn't miss anything i lose all my viewers um all right so i'm looking over here so um i'm not going to spend any time on this i'm kind of into this cofactors random number idea oh i can't remember whether i thought of this but simon gave me some or whether simon's on a bit or who thought of it simon definitely gave me some good advice about this ah the pendulum yes i'm really into the idea of creating a pendulum and then using computer vision to track the amount of time it takes let's just look at the suggestion directly measure out a physical 2.45 meter long pendulum then use computer vision to calculate where it is it should take around pi seconds to complete one cycle all right i have to admit something i am kind of um very well how should i put this um kindly i'm a klutz i'm very inept when it comes to mechanical things whether it's mechanic hardware uh tools crafts i'm just terrible at all of that stuff so it might seem ridiculous but the prospect of actually making this pendulum is quite daunting for me i don't even know where to start like do i just need string how do i tie the string to the thing the bob at the bottom what should i get for the bob so i welcome your suggestions for what kinds of materials i need a youtube video that has a nice tutorial for how to make the pendulum i don't know any suggestions please put them in this github issue that was started by simon all right i don't want to spend too long on this i hope that you know sometime early next week monday or tuesday maybe i can record a video and then have it out on pi day we'll see we'll see i've got a lot to do i've gotta gotta keep up with the videos for this course so one of the things that i the the primary thing that i want to use today's live stream for is to work out some steering force example code that i have not yet included in the nature of code book whether i would use that as an exercise solution or another additional video tutorial i'm not sure but this is a nice opportunity for me to expand the material that i have so if i were to go to i think the nature of code examples p5js and go into chapter six i would see that i have these steering behaviors uh crowd path following let me leave that one aside for a second because that's an exercise there's no tutorial or uh part of the book on that seek arrive stay within walls which is one that i've made up it's not on the craig reynolds uh in the original steering force's paper which i will um uh bring up in a second flow field path following separation separation and seek and then the ultimate example of everything put together the flocking system and i have covered a lot of this in coding challenges and in older processing java video video tutorials i'm rebooting all of that right now very excited about it i am householding i wonder who this guy i'm just like i probably i know i'm not gonna look it's just funny like householding i think is maybe uh what what's meant here with maybe i put that in there is housekeeping um uh uh but thank you to alan wolves for your wonderful um pull request that was accepted here um maybe there's a nice translation from the perhaps french where that makes more sense all right um ah so uh let me not spend any more time and uh chris is pointing out would be tricky to hang a two uh 0.45 meter pendulum so i could probably do a shorter one in this and then do time multiple right if it's half of it wouldn't i want would i time like two uh period two cycles um anyway i will i will work that out somebody will suggest for me yeah shorter would be great um and what am i doing here ah steering behaviors yeah okay so this if you have uh where to start here we are this is where i want to start if you are not familiar with this work and you like the kinds of things that i explore on the coding train you're missing out you know maybe not everybody in the world is missing out on this but you're a viewer here of the coding train you know if you are a beginner to code if you've found this channel and are watching because you're just starting on your coding journey some of the elements described some of the code required for the implementation of this is pretty sophisticated and so you might hold off to return to it later but the concepts here i think are quite accessible and understandable um and it's sort of like a core the principles described in this uh paper which is from the game developers conference 1999 i would like to know right now this is where i really need to finish that stupid live poll thing because i could just throw it up right now how many of my viewers or the viewers right now of this live stream were born in 1999. i was definitely alive then in fact i probably i hadn't started to learn to code really in 1999 um i started actually i started to learn to code about 2001 but i learned quite late i i can't do the math but um i was born in 1973 so you do the math i graduate this is this paper came out after i graduated from college and i'm assuming a lot of you were not yet born um it's an incredible paper um and um it forms the basis for so much that you see today in um in computer graphics in animation in games in hollywood cinema if that's the right way to say it um um it's just it's so foundational and probably and it's also a big source of information for many creative coding artists um casey reese one of the creators of processing to name one i don't know i got a piece of hair somewhere on me oh this beard i did not have a beard in 1999 i was a freshfaced youth back then oh it was a different time all right 1991 2000 1990 1990 1988. all right we've got somebody who started coding in 1988 mwah what were you coding on in 1988 and um i can't read your name because it doesn't use my my knowledge of other nonuh english language character sets is very small ah sad sanko is older than me um danielle was 17. um i'm lovely i love reading the chat this is fun really fun for me to see i always like to um to try to understand the viewership and i'm always surprised and really pleasantly surprised at how young and again i hear from everybody i hear from people who are um older and retired and learning to code or had a long career of coding who are enjoying some of the stuff that i'm doing and provide helpful feedback i hear from people who are very young and they're you know teens who are learning to code but the bulk of the viewership is of that sort of high school college early 20s age at least according to youtube analytics which i always find fascinating because i feel more and more like an old i was trying to put this in a gracious way but just like an old i guess all right somebody mentioned something to me yesterday which was some kind of social media online thing and i had no idea what it was none whatsoever i can't even pull it up i was in a twitter space with scott hanselman who you should check out scott hanselman's youtube channel i kind of been a little bit obsessed with the clubhouse app uh if anybody wants to connect on there you can follow me on clubhouse ah okay this is this is cool to uh really read uh started coding on a zx spectrum um i'm gonna have to go back and read all these chat messages um this is amazing this is amazing apple 2 euro plus of my dad's in the late 70s so the first computer that i ever wrote any code on was an apple 2 plus uh you know if anybody's a fan of the tv show stranger things i think the kids in that show are like 10 years old in 1983 approximately that's that's exactly that that show speaks to me so like i get all the feelings watching that show i'm you know i probably had a different i'm not saying i was like those kids or certainly i didn't experience the supernatural in their way but dungeons and dragons ghostbusters all of that stuff um walkietalkies bicycle riding all that stuff is uh really speaks to me but um i i i think i've talked about this before but i did a science project in elementary school where i tried to like do something about perception i think i wrote some code in basic to blink a light on the screen and then or like blink characters really fast and then ask the viewer if they could write them down and remember them i have to go back and find that so i think that two plus is still in the attic uh where my parents live in baltimore i'm gonna have to let's find that someday oh i'm so into computer history and computer graphics history it's a little bit i'm off i'm off i gotta do this i gotta work on these examples keep me on track people keep me on track keep me on track okay um ashika saying please bring back cabana and our coding challenges i hear you i really hear you i this is basically the most common feedback i get i miss the coding challenges i miss the i don't know people actually say they miss the cabana but just those like coding challenge videos um i i will try to get back into more project oriented things like that um so stay tuned but i'm unfortunately or fortunately or unfortunately um this is not this this is my like hobby in many ways the coding train i'm going off i'm talking to and uh i do have a lot of like responsibilities to my students and the tutorial videos end up taking precedence um because of that okay um so back to this paper um all right so voila this is what i was looking for this particular list so if anybody wants to take notes here and share this with me afterwards super would appreciate it i'm sure simon is already on it but this is the list of all of the behaviors divided into individual behaviors and combined behaviors so i would like to my personal goal is to have a p5.js and processing example for every one of these and i have seek and i have flee and i have wander and i have arrival i have path following i have flow field following i have crowd path following i have flocking so i don't have pursue and evade that would be an easy one for me to do today but i think i might like to try for something a little bit more ambitious i do not have obstacle avoidance and containment which have some similarities to them um i do not have wall following i do not have leader following i do not have unaligned collision avoidance and i don't have what is my favorite steering behavior of all time queuing at a doorway it's like the greatest favor you guys see it and here's the thing that brings me immense sadness right now ordinarily i would be able to just click on any of these like queuing and i would see the animation happening right here in fact i think if you go to uh and and i apologize but this is this is this is who i am i can't help it i'm going to go all the way to the old videos that are from i actually don't know when i recorded these i uploaded them to youtube in 2015 but i kind of think that a lot of these were recorded in 2012 but if i go through into this video here at some point i bring up the webpage and it's coming there it is so this by the way look look it's young look at young me there with like weird bad white balancing and very red face but like compare the amount of gray hair the bald spot to there glasses are pretty much the same but i think this might be from almost 10 years ago i i don't know if anybody could i wonder if you could somebody could watch through these videos and if like the time pops up somewhere or the date because i'm pretty sure this is just when i happened i definitely recorded these before the year 2015. i was not even yeah anyway that's this i would love somebody to investigate that for me but um here you can see the queuing behavior playing out and i can make this full screen um and so i love this steering behavior and um these are these were all created by craig reynolds as um java applets the code i believe is closed source don't quote me on this i could be wrong but if i understand it correctly craig reynolds was working on these behaviors while working at sony entertainment so all of the algorithms and the descriptions of those algorithms are all very well defined in the paper that i'm about to click on here explained in great detail but the code was closed source but many there's many implementations of them i'm not certainly not the first to implement them i might be sort of more visible now in terms of having this youtube presence but there's an open steer library from c plus lots of other examples of people implementing these behaviors um so i'm really saddened by the fact that the so a year ago because the year goes the last time i looked at this i was able to get these to run as java applets on the page first i would see an error and then i would go through and change i think i ended up using firefox or a different browser to make sure java was running and the plugin and change the uh settings but i think i don't know if this is related to flash being completely disabled but i don't know whether it's that the the actual applet files have been removed from the server or that the browser won't even bother to try anymore but i it's very important to me that this work is preserved so one of the things that i would really like to do and i would love help with this is to at a minimum download all the jar files maybe i could just investigate this really quickly let me and i will get i've been in touch with craig reynolds before uh doorway.class so this is really the question if this is the compiled java code so you know there's all sorts of decompilers we could use i'm not so interested in that i don't need the code to be decompiled and published if it's not meant to be published i would just like the this applet to have a place to be run and people could watch it and look at it so let me see if this will download did it no so like it would be right here in the same directory right so i think it's been removed torway.class that's not going to get anything so if somebody could help me try to find these and you know i i can try to get in touch with craig reynolds uh i believe he's on some social media platforms and maybe he'd be willing to share them i would like to build a website maybe just capture them as screen recordings and then build a website where people could watch them um you know i i think that early work that no longer runs in current systems it's really important to preserve that work um in that history um so um so yeah if anybody wants to help with that um hit me up on the coding train discord on twitter at shiffman you could say it in the chat now but i might miss i most likely will um uh miss your message oh you know it's because i'm in the view source okay great who's who just said that remove view source thank you i would uh remove view source yes have you ever seen anybody so excited to download an old java class file from over 20 years ago okay so i have this oh boy i shouldn't go down this rabbit hole i have this class file how could i run it i'm trying to think it's meant to be run as an applet within a browser i mean there's no way that just like um it's not going to create a window instance for it if i like part of me wants to like do this oh you can't see what i'm doing apologies uh am i in downloads okay wait i have a java runtime installed but this won't work it has to be a jar file that will open a window um java applet doorway.class all right hold on hold on i have a jdk installed what's going on is it because i'm on a user account it must be because i the my this is my like work laptop that i do everything on but i log into a completely different user while i'm live streaming so that i don't you know i do this anyway i'm not that well set up but i'm constantly um sharing um you know api keys and things like that uh what was it java dash applet wait what was it eclipse i could try using eclipse java dash applet that didn't work for me all right i i think maybe this is going to send me down too much of a tangent right now um i will investigate this further on my own and take suggestions um and like make sure i have the right jdk and all of that installed um but i don't want to um take up all of your time as interesting as it might be for all 405 of you watching i think probably it's more useful for me to go now to the different to the code stuff that i want to do and just so you know i'm going to be here till about 3 p.m eastern which is an hour and 15 more minutes i'm gonna take a break in about 15 minutes i'm trying to be much more uh strict about my live streaming time usually my kids are doing an online baking class but there is no baking class today and usually that would mean they're just downstairs playing minecraft or roblox but they're actually outside taking a walk not on their own they're with another adult who happens to be my spouse um but i would like to go and join them hopefully they'll still be out in an hour um and so uh to be honest i would have not live streamed if i knew that was the plan so i could go and do that with them but i'm very glad to be here with you right now and i'm thankful to the curiosity stream for sponsoring this because it really helps me um have all of be able to do do so much to be able to be here and live stream okay please answer chat questions i try i really try [Laughter] uh profit mesh says um let's see if this still works i went and took a shower since i last messaged what did i admit you just want me to do once again absolutely nothing huh sing it again now okay thank you thank you thank you thank you that's been my live stream for today see you all next time on the coding train um all right let's let's close a bunch of this stuff okay i don't need all this open all right so i think that i would okay let me bear with me uh log in here coding train so the most recent video tutorial that i have recorded that is not it is still a week or two away from coming out um is just a video that goes through the foundational example of a steering behavior and that behavior is the seek behavior so you can see this little triangle thingy is trying to seek this target as i move it around and there are some parameters i can play with like a maximum speed and a maximum force to change its ability to steer so this is where i want to start with the idea of having a vehicle that calculates a steering force based on a principle of determining a desired velocity taking the difference between its desired velocity and its actual velocity and applying that as a force i would love to talk through all of that right now but i'm that is the that that is what i did in what will be a 10 to 15 minute video that will come out later and i have also talked through all of this i believe in two uh previous videos if this topic interests you steering uh steering coding challenge coding train so um coding challenge number 59 uh steering behaviors i kind of went all through all this in a coding challenge this was done quite a while ago and then also i have done flocking and i've done evolving steering behaviors i've done a lot of stuff with steering behaviors but i'm redoing the sort of like core foundational videos um and there we go coding challenge 124 uh the flocking simulation so those would be ones if you know you want to do uh okay and i meant i have a coding trade answers your questions for 15 minutes um yes um that is a good suggestion i try to do that sometimes like at the end of every live stream but i do a terrible job of doing that because i'm usually like trying to rush to finish something and i only leave like two minutes and i don't do a good job so um that that note is taken and actually that's what i was sort of thinking that maybe i could use discord or clubhouse for do a little bit more q a stuff okay um yeah and prathamesh is asking about a frictionlike force that slows the boy down it's funny you should ask that's the next video after seek i look at an arrived behavior and it's not about a friction force that slows it down it's about rethinking what is the desired velocity in the case of pure seeking the desired velocity is always to go as fast as possible toward the target regardless of how far away from the target you are but an arrival steering behavior would take account that distance and map the magnitude of the desired velocity to that distance so the desire you want you still want to go towards the target but slower and slower and slower the closer you are with a z you know a velocity of zero if you are actually exactly on the target okay um so i think what i would like to do by my uh white whale so to speak in steering behaviors it's really queuing at the doorway but i don't that's too much um i have never um implemented obstacle avoidance and simon has been trying to talk me into doing containment instead um but um i kind of you know i'm i'm a little bit obsessive and um i don't know why i can't seem to manage to keep all of these pages open and obstacle avoidance comes first so in my mind i need to do it first um and so let's let's just if y'all uh if you'll allow me for a moment i would like to just read this paragraph to see if i can understand it and i will put some quiet soothing music behind me while i read it not that music in this demonstration the green vehicle i don't see the demonstration avoids the gray obstacles the vehicle tries to remain outside of the gray circles while keeping close to its speed limit the vehicle wraps around the window boundaries this steering behavior anticipates the vehicle's future path as indicated by the white box the length of the box is a constant time multiplied by the current velocity of the vehicle any obstacle that intersects this box is a potential collision thread the nearest such threat is chosen for avoidance and is marked with a green boundary to avoid an obstacle a lateral steering force is applied opposite to the obstacle center in addition a breaking deceleration force is applied these forces vary with urgency the distance from the tip of the white box to the potential collision steering varies linearly breaking varies quadratically if avoidance fails and the vehicle overlaps an obstacle the color of the obstacle changes to red with these parameters and this crowded environment collisions occur about once every 800 simulation steps and then different colors are assigned to the unfortunately this might be enough for me to start coding this if i had this java applet running but i think i want to go over to the paper instead and that didn't take me there and um look for obstacle and hopefully there's going to be a diagram there we go this is what i'm looking for i don't know i'm so like terrified that i'm starting with this okay now i'm hearing some dingdings in my ear from being tagged on discord so uh i'm checking the keeping eye on the chat please try to reserve tagging me on discord for emergency level uh notifications okay um obstacle avoidance obstacle avoidance behavior gives the character um gives the okay okay so let's look at this the ability to maneuver in a cluttered environment by dodging around obstacles there is an important distinction between obstacle avoidance and flea behavior got it got it i started reading this to myself i got flea will always cause the character to steer away from a given location whereas obstacle avoidance takes action only when a nearby obstacle lies directly in front of the character so this is good for example if a car was driving parallel to a wall obstacle voice would take no corrective steering action but flee would attempt to run away from the ball so um just so i don't spend forever just reading through this let's take some basic steps here let's add the idea of an obstacle class to the world so i'm going to duplicate this code this is going to be five point x obstacle avoidance and one of the things i like to do while i'm streaming and let me just click over here for a second um is in the discord itself um i will uh paste a link under this live category a schedule is where i in theory post updates about my live streaming schedule uh links is where if i want to share something with you while i'm streaming i'll put it in there so i will paste a link now to this base code in case anyone wants to follow along this will continually update unless i duplicate and make a new version so we'll also be the same link when i finish but if you wanted to get that right now that's what i'm starting with all right back to here so i would like to add another file call it obstacle.js um and uh what does an obstacle class have well it has a position and a size it doesn't move it doesn't need any physics so i'm going to give it an x y and a radius because it'll be a circular obstacle i mean we could consider what does it mean to use nonround obstacles but that seems too hard but i am going to keep that in a vector so i'm going to say this dot pause equals create vector x y and this dot r equals r and then let's just have a function called show which i draw it as a circle how's this font size by the way i think it's a little bit smaller than what i usually have no i don't know let me know if it's hard for anybody to see it uh this dot x this dot y and simon is telling me that obstacles are always circles in this particular algorithm that's good to know this dot r times two um and let's give it a kind of grayish color with a white outline um that's a little bit thicker and i think what i'd like to do to be honest is hard code a couple obstacles into the world um because i obviously i want to run this many many times and always have random obstacles but it might be useful for me to very intentionally position obstacles to be able to test and debug what it is i'm doing so let's make right now i'm just going to make one obstacle to be perfectly honest i'm going to put it at um my window is 400 by 400 let's put it at 300 comma 200 and let's make the radius uh 50 and then i will have four let obstacle of obstacles obstacle dot show so hopefully now obstacle of obstacles by the way obstacle is one of those words that when you start to stare at it it totally looks like it's spelled wrong that can't possibly be how obstacle is spelled look at obstacles put the s on there it's like what is that word okay let's try obstacle is not defined so i forgot an essential step here which is to add it to the index.html file oh it's because i did spell it wrong [Laughter] no wonder it looks completely insane because i did spell it wrong uh how come i don't see that obstacle oh this dot pause dot x it's a vector you know there's a new thing that i really liked doing and i um that is in the particle system videos i really like just extending a p5.vector and i know uh you know i really have trouble figuring out what the right balance between showing uh next steps and further additions to the sort of foundational ways that i build the examples and i hesitate to do this because it's going to throw people off but um if you're following along with the nature of code good good news i'm going to go through why i do this in quite a bit of detail in an entire video but i can actually have my obstacle extend p5 vector meaning i don't need to create a separate p5 vector that's a property of the obstacle because it is a vector already itself then this is this is the principle of inheritance whoops then i can actually say super x y which means just super is a word that like a parent class is a super class so i'm saying create a new vector because my parents is p5 vector with that x y add this concept of r and then i can just have this dot x and this dot y here um you know maybe i should do that also you know if i'm doing it there i should do it with the vehicle but anyway i just wanted to point that out for a second all right great we've got an obstacle i want to get rid of the seek behavior so i don't need this target anymore for this example um and i don't need to call seek let's run this let's put the particles initial the vehicle's initial location at 50 comma 200 amazing let's give it an initial velocity um and i'm just gonna do that manually here velocity set one comma zero there we go so now i've got a set up here where if i do everything correctly and i think i might like the obstacles to be drawn first what did i do wrong here come on auto format did i mess something up here i don't know i don't know what's going on um oh whoops what the tidy code okay i don't know what i was doing the wrong key command for tidying i guess um very important stuff so now i've got this setup you know i'm doing the i'm doing the easy part first right uh the hard part is obviously going to be i need to write some code that's like vehicle dot avoid obstacles and maybe right now let me just write the function as if there's only ever one obstacle this i think could be an easier way to kind of um work this out all right and simon has given me some nice tips in the discord with the steps of the algorithm but i'm going to pull them from the paper um so i need to define this rectangular area in front of the vehicle well i know how i would do this just from a drawing standpoint that's an easy thing for me to do and i suppose i might as well layer that in as sort of like a debug draw kind of thing for example if i were to say a rectangle uh 0 0 this dot r times 8 for this dot r on which is the size of the triangle um i'm going to write a function called avoid it takes an obstacle but it's empty right there's that uh and i want to say um no stroke no no fill and then where is that rectangle exactly it's at negative this dot r and negative this dot r divided by two there we go so sort of problem solved in that i'm able to visualize that rectangle and even if the particle weren't moving straight you know that rectangle is going to be rotated but i don't think that's really the work here because the work is defining the boundaries of that rectangle and whether it intersects the circle i feel like that's going to be very hard is it time for my break yet almost yeah it is actually let's see if i get a little bit oh further um okay uh just keep in mind obstacle avoidance not necessarily collision detection um the gmacle construction i've been also pursuing opinions concern uh cylinder lies along the character's forward axis so they're talking about 3d which i don't care about oh this is very hard to read to myself i should just read it out loud the implementation of obstacle avoidance behavior described here will make a simplifying assumption that both character and obstacle can be reasonably approximated as spheres okay so this is actually i guess craig reynolds is describing all these behaviors in a 3d space and then we're looking at a slice of it so when he in writes that this is a cylinder we're actually just seeing the sort of top view of it but i'm thinking of it as a rectangle so i think i have to just reply i'm going to do this in 2d don't get me wrong um but i think i have that's why i was being that's why i was confused i'm reading this convenient to consider the geometrical situation from the character's local coordinate system the goal of the behavior is to keep an imaginary cylinder of free space in front of the character ah the cylinder lies along the character's forward axis and has a diameter equal to the character's bounding sphere and extends from the character's center for a distance based on the character's speed and agility okay so i'm gonna consider those the agility fixed but i could adjust that for speed right now because like ultimately if there is some distance like seeing distance i might call it which is the magnitude the magnitude of the velocity times you know a factor of 20 and i use that as the seeing distance and i suppose this width could be related to its agility but i'm not going to worry about that right now what is going on with my auto format shift tab is not working for me and it's making me crazy oh it changed command shift f it used to be shift tab i'm gonna have to relearn another no command command shift f there we go by the way something that bothers me and i i can't remember if i already filed this as an issue or not but um the web editor will change the scroll of your code when you auto format and it drives me crazy if anyone's to check if there is an issue um already um um um filed for the p5 web editor related to that okay maybe nobody else cares so let's just see this all right so let's make seeing distance times 100 okay actually i'm gonna make it it's moving kind of slowly right now so let's do that and then actually i should really put that seek back in because if i were to just put that seek back in then i could see it change as it does different things so a vehicle just is temporarily vehicle seek create vector mouse x that's why so you can see as it slows down that amount that it looks out in front changes again i'm just visualizing the elements of the algorithm right now without actually worrying about implementing them and i really need to take a break but uh where was i okay by localizing the center of each spherical obstacle the test for nonintersection with the cylinder is very fast the local obstacle center is projected onto the side up plane by setting its forward coordinate to zero if the 2d distance from that point to the local origin is greater than the sum of the radii oh so i can do one of those like a normal things oh i really need a diagramming so i'm going to take a break and during my break i'm going to set up this um document character because i feel like character document camera because i feel like i need to draw a diagram so um give me a second here oh before i take a break though i would like to take a moment to thank today's sponsor curiosity stream and coming up over here ah so let me start um by and uh this is the fun thing that i like to do which is that i have a wonderful 30 second spot from curiosity stream that i will play um but i like to read the narration for it myself oh sometimes youtube copyright strikes it and so um and people seem to enjoy this more anyway so i'm gonna go to that uh right now from the founder of the discovery channel comes a new independent streaming service curiosity stream home of groundbreaking documentaries and awardwinning original series follow your curiosity this is curiosity stream all right how'd i do this time i feel like i did better last time but um so you i mentioned this at the top of today's live stream and you've heard me talk about this before i am part of an educational group of creators who have teamed up to build a platform where creators don't have to worry about demonetization or the youtube algorithm it's called nebula and we're partnering with curiosity stream so nebula has adfree content and experiments with different kinds of formats so let me go over to watchnebula.com and you so you could start your free trial or you could pay five dollars per month or guess what don't definitely don't pay the five dollars a month i mean maybe you could if you want but the whole point of this is that you're gonna get nebula for free if you buy the annual uh bundle with curiosity stream which by the way much less than five dollars per month in fact it's 14.79 after the 26 discount that you'll get from curiositystream.comcodingtrain um and so um you you if you scroll through kind of like the kinds of things that are on nebula you're probably going to find all of your favorite creators that you already watch on youtube and um i'm just scrolling through to show you a few here shout them out in the chat i've been like really uh interested in following renee richie's work recently um there's a lot of video essays um on sort of movie making and filmmaking illegal eagle uh to sort of learn about the law amazing stuff you're here real science engineering is amazing uh or this is the real science channel lots of amazing stuff here um definitely check out nebula there's never originals um as well like tom scott's money so what does this have to do with curiosity stream so curiosity stream loves educational creators like those that participate in nebula um and they uh they want to support more educational content so nebulous worked out a deal if you sign up with that coding train link not only do you get access to curiosity stream but you also get nebula for free and by the way this is not a trial you will have nebula for free as long as you're a curiosity stream member so for a limited time curiosity stream is offering 26 off their annual plan that's less than 15 per year for both curiosity stream and nebula so i'm going to go here just to show you how to do this curiositystream.com codingtrain and it should pop up here that you can use oh you can't see that right now i'll remove the banner use the code coding train for 26 off um you can also go i wanted to go to um i'm not logged into my account um but i can go to the click here to get a sneak peek of the library so this is the one that i was um just telling you about that um abe turned me on to which is called man's first friend a wonderful um documentary about um the history of dogs within uh different cultures around the world um and i i didn't abby recommended for you recently so i only watched a little bit of it but i'm like oh as soon as i have some time to just settle back and get on my couch and relax i'm definitely checking that out i had not don't know what this one is secrets of the solar system but so many science uh music math um history documentaries here i've been talking about um i think if i go look for the search it'll pop up let me try to find that um or maybe if i let's let's click on um uh history and let me go to search and let me go to hannah fry uh yeah so this is the one that i've been like super obsessed with magic numbers the joy of data and the joy of winning i don't know what this one popped up but maybe hannah fry is a guest in this one as well but dr hannah fry is amazing i'm a huge fan shout out to uh dr hannah fry and i i would definitely recommend these uh particular you know if you're in if you like the coding grade stuff you'll like those as well all right so um you know you're sign up you'll be soothed by dayton david attenborough's voice you can watch chris hadfield in the space station tom scott on nebula torture your favorite youtubers uh click the link to get both curiosity stream and nebula for 26 off it's a great way to support educational content my content and again that's the entire year 14.79 um i'll put it up right here one more time oops that's the wrong thing um and then i gotta press this button that's also the wrong thing i can never press the right buttons uh there it is um and i'm gonna take a short two or three minute break i'm gonna set up this document camera so i can diagram figuring out this uh the math for the obstacle avoidance and i will be right back do do do do do do i'm here i swear i'm here i'm trying to set up this camera i guess i can uh let's say i plugged it in i've got it in position but i don't know if it's working yet let me turn off studio mode go to me here and uh let's see what happens i can close this boy i thought i could do this in five minutes with no problem i connected a microphone no i don't it's still this microphone though right yeah okay um let's see um don't know what's going to happen i probably should preview this before i turn it on uh hello there's me in my green screen nope nope not that one this one there we go oh look there's my hand oh it's crunchy bass okay um okay uh let's see here uh that's probably better um and then let's crop this off and crop this off a little bit over here and let's move it below a few things um and we don't need the banner here right now so that'll do um if i use i have a pencil will you be able to see that oh let me turn the light on how come that light doesn't go on if it's not getting enough power well that's not the light that's the oh that's not the light there we go is that better whoa oh no it's doing the thing again why does it do that that's why i forgot why i wasn't using this this i think why did i unplug this thing and don't have it set up anymore because it like doesn't work hold on everyone let's see if i can get it to uh let's see if i can get it to work okay there we go why it's not focusing should like auto focus better than that yeah austin is saying that i need a drawing tablet i don't know why i'm so opposed to the idea of using a drawing tablet i think i've just had too many bad experiences with weird latency and i think all that stuff has been sort of worked out probably with you know newer tablets and apple pencil and all that stuff um i'm not in the space where i have the whiteboard which is why um i just don't understand why oh i forgot that as soon as i move it around all right this is so sad this is pathetic welcome to the coding train where you watch a person who's really ill prepared to live stream i'm gonna try this one more time all right am i back by the way restarting the computer seems to have um seems to have um kind of resolved this issue like look how beautifully clear this is right now so maybe i just needed to restart uh so thanks for your patience i do not have the chat open right now so i cannot see your chat messages let me take a minute to do that if you will bear with me restore pages what's the chance oh that's beautiful okay i am back my pages are restored and we're back as if nothing happened all right back to this uh diagram which i will now move over to here so that you can kind of see it let me hold on move this over give myself a little bit more room to do that okay um all right so now the idea is that i have a circle it has some radius r i have a vehicle which has some velocity and i've projected out some sort of area in front of it so i think what i need to do is consider this a line and i need to get the normal from the center of the circle here and if this point is closer than whatever this distance is and um within in this distance is minus um and this distance is less than the radius then i'm in danger of running into the obstacle sorry so in other words i need to use this concept of look at my lots of other pages are full of stuff i need to use the concept of scalar projection which is that if i have a vector and then i have a point how do i find from that point the normal to that vector and i have done this um oh and you can't really see that i have done this in um i do exactly this in the pathfinding example and what i'm getting okay um now let me do i have a button to open and close the overhead camera i'm just gonna do it manually okay uh about a sec here okay all right let's work on this idea of um the scalar projection idea okay sorry i'm i'm i'm a little flummoxed here okay i don't know if all that work was worth it just for me to draw that little diagram but if i go to the nature of code i work this idea out here for path following so if my vehicle is here and like um i oh but oh i'm doing this is slightly different um yeah this is the path of the okay so i'm doing this in a slightly different way but it's the sort of same idea uh okay so i'm thinking through this so let me try to actually um let me try to do this without the without the um vehicle moving for a second okay there we go so i don't want the vehicle to move so let me take out this seek and let me have the vehicle not call update there we go and let me set its velocity to something like this and something like this that's a little bit extreme okay so this looks good like i feel like and actually i kind of want to just all right so basically what i want to do is i want to find this you know this point but if this is the take the bottom of this rectangle consider it a line i want to find where the center of the circle connects to that line and i've done this before but i'm having kind of trouble thinking of how to do this and and simon is reminding me that i have get normal point as in the path following get normal point so this is that function let me just grab it it's written within processing code way um but let's put that into uh i need to be in the vehicle class in avoid obstacle so let me just paste this generic function here and it is a function to get a normal point to have a a position what's this and then oh and then the what's a and b oh the line between two points okay a and b and just translating this to p5 sorry i will get back to explaining what i'm doing in a moment uh i i just want to get this code in here uh and this is uh there all right so does this is now my get normal point function and let's bring the avoid obstacle function all the way up to here just so i can kind of see it closer to this so what are the the point is the center of the circle so get normal point is um so the position is the obstacle is the obstacle and i'm going to be writing extra code right now that i don't necessarily need so i need so just to be clear if i go back to my diagram i'll explain what i'm doing here which is that um this is now that position that i'm talking about in the code that's this like imagine that's the center of this obstacle then the vehicle i have point a and i have point b this is point a i realize you can't see it because i'm doing like the worst job ever and then over here you can't see that is a point b and my function that i've written previously if i give two points i get this vector and then if i give it a position i get this normal point now i don't actually need to do these two points because ultimately i already have the vector in the velocity but i think just to like get it working let me um let me do it this way first so i have to move that away and so now a is this dot position and then b is this uh a uh p5 vector dot add a and then i need to add the velocity to it so like seeing distance should be um maybe i need to make that um so i should call this seeing factor uh and that's 50 because ultimately and again this is totally silly that i'm doing this but i'm going to do it anyway add a plus um i'm gonna copy the velocity and multiply it multiply it by uh the seeing factor i think again i think i'm doing way too much extra stuff here but i just want to understand all the pieces so i want once again this is a then i want to get b and then i have pause and i want to see that it just gives me a point here so add that and then the normal should be get normal point pause a b is that the way that i define this function pause a b and then um and then let's draw fill 0 255 0 ellipse normal dot x normal dot y 16. we'll make that a circle okay so let's see what this gets me p is not defined where line two ah called this pause all right that's promising seeing distance is not defined line 66 uh so seeing factor yeah so um i'm gonna put that back in i mean i'm doing a lot of redundancies here um come on why am i not seeing this rectangle oh multiply what ah oh my goodness i've lost my mind here i've forgotten what it is i'm even doing there we go okay so that's the point and i think it would be useful for me first of all i meant for that to be red i don't know why i meant for that to be read um make it a little smaller and then draw i would like to draw a line from normal.x normal.y to pause that x pause that y okay and no stroke stroke 255. and that line this is so silly but i can't stop there we go so this is the idea now i've made this look kind of weird because this uh dot is like i positioned this perfectly but let me actually go now and have the the circle the the vehicle move around uh like i'm gonna add back in the seeking oh and the update right like no matter where i am i'm always getting a normal and when that normal is inside that circle i'm going to hit the obstacle the normal is even is even behind right because it's just taking that line so i can check all right all right this is good now let me see if i can reduce what i'm doing here in the vehicle like i actually don't need a and b because i could just start with a vector and that's this and then why do i even need to normalize it do i um oh yeah i do okay and then i can normalize it so this could be then get normal point position in this dot velocity copy and i don't need the velocity or a and b like that should work as well a is not defined oh oh i need this vector though um oh i do need a which is which was what the um the vehicle's position right um i don't have a lot of space for my code here i don't like the way that i'm doing this but um these are the three things i need all right get the normal point um with the position oh no no oh yeah the obstacle yeah so i don't need a separate variable here i might not need to copy all these vectors so the idea is that get the normal point i have the vehicle's position the obstacle's position and the vehicle's velocity a b is not defined because that's oh i'm so confused now that's v oh was it this and i wasn't paying attention i'm so confused i'm so confused um i gotta get my normal point function back uh i have i have really screwed this up i had it working and i uh i tried to simplify it and i lost my thread and using somebody i think is is noting that using the um uh using a and b as variable names is making things worse okay hold on everybody relax i've got this i've got this uh agents path following let's go to this one uh yeah vehicle do i have get normal point let me grab this one so basically i had position a i don't need b anymore instead of b i just i have that vector so a p is still p minus a and then v is now this a b so v dot normalize v dot multiply ap dot v okay yeah point a add v okay where is pause is not defined line 36 there we go okay so i've got that back i mean it's sort of the same and do i need copies of all these vectors because the velocity gets normalized p just gets used here so that doesn't need to be copied but i'm going to leave it as is okay okay okay so now i want to know if it's going to hit the obstacle or not so there's a few different ways i could do that one is if it's going to hit the obstacle if that point the distance between that point and the circle right so if i take the distance uh p5 dot vector distance between the normal and the obstacle if d is less than the obstacle's radius and i i know i need some kind of like agility buffer but i'm just going to leave that right now then then let's make this much larger and let's fill it red otherwise make it green so let's see if now it should turn red where do i have obstacle um should turn red yeah anytime it's within the circle it's going to be red now also beyond just being and i really feel like i need a much larger space to work with than 400 by 400 pixels so let me make this um and uh okay all right okay great now uh that's good okay so if i want to consider the sort of buffer the size um thank you for simon who's giving me the suggestion in the chat i can fix that as uh the if that's less than the radius of the obstacle minus the extra buffer of the um of the actual size of the um triangle itself and i guess that's half of that radius but i don't know that i need to worry about that right now i can i can figure that out later okay let me give myself a little bit more room here there we go um okay now the other issue is let me get my diagramming back this is so not the way i like to do things but actually let me just raise this up a little bit and hopefully it's not gonna uh it did the thing it did the thing don't touch the camera shift men hopefully this whole stream doesn't crash apologies in advance if it does uh switching camera switching back come on oh boy oh boy oh this overhead camera is the worst i'm just gonna get rid of it i'm just going to get rid of it there it is all frozen and not in focus and ass is saying shouldn't you fix it so it doesn't detect a potential collision when it's moving away exactly that's what i want to do right now um so but uh i was going to try to explain how it's going to do that with the diagram but that's just a fail i'm going to give up on the diagram everybody so i need to use the diagram for myself i can show it to you this way so basically let me create the scenario where if it's moving in the other direction yeah basically why it might be useful for me to have those two points is i need to check to make sure that other point is actually in that line segment i do this in the past following as well right it needs to be that point it also it shouldn't be like it shouldn't be read even here like hold on let me um turn off the seeking and go to the particle and have its initial velocity be once again one comma zero it should not be red right now it should not be red until that rectangle reaches so also that point should be within the rectangle so how do i do that the normal point oh i know it's just got to be less than the seeing distance ah okay but also to be in the right direction all right okay a couple things so uh particle um in a void so if it is there and um the okay so what is d1 oh i'm doing a terrible see this is why i have to work stuff out i mean maybe there's a way for me to be thoughtful about my variable naming while i'm working it out but d1 is the distance between the obstacle and that point d2 is the distance between the normal and this and this position so i i'm just for simplifying i'm going to take that out again and d2 is less than seeing distance this is driving me crazy that seeing distance is just the velocity's magnitude i'm gonna have this be a fixed variable for right now okay i'm going to make it not scale it's going to be much simpler for everybody so i'm not going to worry about scaling it according to the magnitude i can worry about that later just to simplify things um basically it needs to both be within the circle that normal point needs to be within the circle and not too close to the vehicle oh having a whiteboard would be so great seeing distance does not define line 79. so as soon as that rectangle touches the circle it should turn red oh weird uh it did but it seemed to be like late i wonder if this is a function of it being like perfectly aligned with the center um like let me just for a second here go to obstacle um no sketch make this obstacle much bigger and a bit further down why why i'm getting the wrong distance clearly i'm getting the wrong distance normal and this dot pause that's the right distance and i'm drawing oh i am offsetting it back by negative this dot r so the seeing distance is actually um offset to the back not the center it's because of the triangle oh that's kind of silly let me not offset it back just for a second is that enough to like get it off that much yeah no it should actually be earlier then oh oh no no i'm not thinking about the edge what am i doing i need to project that out to the edge oh this is weird i'm reading the chat right now okay so actually what i want to do is just check that i think i'm going to check something completely different for example i want to check the distance between the uh the position plus okay so if i have an endpoint which is uh this dot pause dot copy uh dot add ah this vector math stuff is kind of crazy um do i have a copy of the velocity no no never mind this is silly what i'm doing uh p5 dot vector dot add this dot pause this dot velocity dot copy set mag seeing distance uh is that actually right add i want to add the position and the velocity with its magnitude set to the seeing distance and then the d2 is the distance between the end and the obstacle and as long as that is also less than obstacle.r right is this this would let me know where the end seeing distance is not defined this dot seeing distance right this will let me know if the end is within the circle yeah okay so if it's along the path to the circle and the end is sitting there all right so that's kind of right i think um let's turn its velocity a little bit just to see like what if i set it to 3 common negative 1. it's never going to do that and then if i do it negative 0.5 yeah okay i think i'm in pretty good shape here oh but what if it's going in the other direction so the question is if it's going in the other direction it can't be negative how will i account for that here i could use a suggestion hold on i have to check my messages oh okay um ah i see somebody running the applet that's exciting okay uh okay so now there's like one little piece to this which is that if it is going in the opposite direction so let me determine let me alt create a scenario where it's doing that um so it's initial position what if i make its initial position um like over to the side and then have it going the other way okay hold on a sec uh how do i test for this um let me have the obstacle and have a vehicle further up is it i guess it's just gonna work because that distance is too far okay it knows it knows it's a little uh i don't need to add anything it's a little messed up that when the edge goes out but hopefully it's never going inside the thing in the first place okay so there's some some massaging that needs to happen here but i think i mostly have the right idea and i should be able to if i steer it around right we should see and let me give it a much bigger seeing distance just to uh and make the obstacle a little bit smaller um which should help me oh no why what happened i mean oh because what if the seeing distance is on the other side of it so it's not actually it's anywhere within that but that seems like a finetuning thing uh how do there's gotta be an easy way to resolve that though right because otherwise otherwise it's mostly the right idea okay i'm going to move on yeah that's a good correction that i am getting uh in the chat here okay um why not check intersection of the circle with the current velocity vector yes that's what i want to do oh like cast array oh that's what i should do and then just check if wherever it intersects is less than oh yeah that's that's much better so let me just put a to do in here because i want to kind of move on i didn't necessarily expect to finish this i did expect to get a little bit further so to do uh look at casting ray for vector plus circle intersection uh i mean wouldn't that just save me a lot of trouble in the first place do i even need that normal thing i'm so confused um okay um okay rectangle circle collision detection right i could also use a collision detection library as fun planet is suggesting but i am trying to avoid that let's just go back to the uh description and i want to at least introduce the steering behavior okay by localizing the center of each spherical obstacle the test for nonintersection of the cylinder is very fast i'm by the way i should have kept reading because i think it's giving me some better way of doing this if the 2d distance from the point is the greater than sum of the radii but on the character then there's no potential collision yeah i i think i could have definitely done this a different way i realized i went down a a a kind of strange path similar obstacles which are fully behind the character or fully ahead of the cylinder can be rejected or can be quickly rejected for any remaining obstacles a line sphere intersection calculator oh yeah line circle intersection calculation so that's what i should be doing like yeah like this is enough so uh this actually right i'm gonna leave this in here but i should do this and this should this should be a line circle intersection um and now okay steering to avoid this obstacle is computed by negating the lateral side up projection of the obstacle center what the hell does that mean negating the lateral side up projection in figure 7 obstacle a does that mean like have a steering force that points in this direction obstacle okay you don't know where i i lost where that is i'm like lost that spot there it is i couldn't find the tech this like big wide block of text is very hard for me to read this intersects the forward axis near the character steering to avoid this is obstacles b and c do but b is selected for avoidance and it's correct of steering us to the characters left the value returned from the obstacle void the steering value to avoid the most threatening obstacle or if no a special value null of the zero vector so is it literally as simple as just doing a uh a vector that is perpendicular to its velocity in the like just steer away and is it that simple because then it would be a matter of um like so this is like if it's red then this is like apply the steering force and so that force would be copy of the velocity and then velocity like i could rotate it by 90 degrees but how do i know which way to rotate it well i want its direction to be the same direction as okay so actually this is simpler p5 vector subtract the uh that end point from the um the endpoint minus the obstacle that's a vector pointing out yes force dot set mag do i have a maximum force yes max force and then this dot apply force force so let me get rid of the seek let me also add an edges and i will or i could seek so simon is saying it's a flea behavior so i could flee the nearest intersecting circle yeah i think that's not it's not actually what i want to do though because i don't want to turn around a flea behavior would cause me to turn around and run in the opposite direction from the circle and what i just want to do is just steer away until i'm not going to hit it anymore um so i am going to say vehicle edges i also want to i need to wrap the edges so to add an edges function if this dot pause dot x is greater than width this dot pause dot x equals zero uh else pause dot x is less than zero and i should be taking r into account but i'm not bothering to let me do that with the y and this by the way i've got to finish it wrap up here so i'm hoping this kind of works for just avoiding the one obstacle and then i'm gonna clean up this code work on it some more try to write up an explanation think about making a video on it uh but um and all that jazz okay so ah max force is not defined well that was good where did i line 50 all right so not a lot to see here because it's like super overpowered in terms of its steering and i'm not taking into account the uh the size of that rectangle so let me do that so i i kind of want to have an agility so if it's less if d1 is less than no d1 is the distance between the normal and the obstacle um and so if d1 uh plus the or minus if d1 uh my brain is hurting i need to use my paper sorry everybody um so this distance is less than this distance and if i take off that obstacle yeah if i take off that as well um that'll give me a more it should steer further oh no didn't i rerun this alright hold on let me let me put things back like hold on i just want to see something what if i make this really big why okay um so i'm confused why i'm not getting the oh oh it's plus plus plus right no no it's definitely minus it's just such a tiny amount that i'm not noticing it oh is this am i suffering from the thing being too far out past it then i think i am it stops steering when so i'm gonna have to make some improvements to this but i've got the basic idea of my one obstacle so yeah so let's uh it's not very exciting to look at because it's just kind of avoiding the one but i want to do a couple things one is just to like have this demo a little bit in a little nicer shape here um and i want to go to sketch.js and i want the vehicle to do this and i want it to start at 0 comma 150 200 i want the seeing distance to be much smaller it should actually be scaled according to its velocity um let's make it 100 okay okay so let's see what happens here that's good that's what i wanted to see i definitely need it to move faster if i'm gonna like be able to sort of see how this works because i would love to introduce obstacle avoidance into the flocking system it'll be really cool to see that okay so this is doing what i wanted to do um farooq is saying check the diagram on the page you will see two blue tangents steer until the direction of the motion has tangents on one side so i'm gonna be setting this aside now i'm gonna be saving i'm gonna save this and uh i am going to accept all new versions of this that correct my errors and clean things up i'm gonna have to i definitely need to work on this more on my own like this is not super interesting to watch without multiple obstacles uh without multiple vehicles but i think this is um kind of as far as i'm gonna be able to get with this project today um um i'm gonna i think my kids are still out on a walk in the park and i want to go meet them so i'm going to play my goodbye song where i will uh so stay tuned don't worry this is just oh i don't have my music hooked up what is going on here uh hold on a sec i'm gonna fix this because i forgot that i restarted my computer oh you are hearing the sound i'm just not hearing the sound is it super loud okay great um thanks for everybody for um tuning in today it's very loud in my ear maybe that means it's too loud in your ear um i um uh simon thank you for all your feedback i'm gonna work on correcting this later so this is part this is going to be incorporated into uh chapter six of the nature of code if you're kind of joined late wondering what i was doing chapter six of the nature of code goes through all of these different steering behaviors as implemented in p5.js and i never have attempted to implement the obstacle avoidance one really ultimately the reason why i'm doing this is um i really want to implement obstacle avoidance along with uh i just don't know how to get this to run immediately but i guess i'll just stick with this um hopefully this example is gonna pop up and run in a second yeah so i would like to introduce obstacle avoidance into this flocking system because i think it would be really cool to see them like flock around the obstacles but i'm far far far away from that right now so i've got about a minute left to answer any questions i can't remember who it was to suggest that i do more q a stuff and i do a very poor job of just trying to catch a few questions at the end um and thank you to everyone who's been helping i see that joseph um in the coding train discord has gotten me craig reynolds applets running working i'd love to know how you did that maybe we can collaborate on a little web page that just has like that captures each one of those demos running for like 30 seconds and puts it in a little like gif animation um because i would like to go to refer to those often when so i should mention let me pause here so it's actually going to be a little while until i'm back in live streaming many many videos are going to be continuously coming out on the coding train i've actually also been redoing the beginner learn to code p5 videos so if you happen to be here you probably aren't here right now if you're like a totally new coder new new viewer to the channel might be a new viewer to the channel but if you're a new viewer and you've never programmed before please come back it'll it'll stay but also come back because um the code playlist which is this one i have now new versions of all of these two point x videos which are about variables in the random function in p5 these are all from many several years ago so i have new updated versions of those those will be coming out i have all of chapter four coming out i have all i have to make and have all of chapter six to come out so all this is gonna be coming out in the next month but i won't be having any live streams from now until after april 10th with one exception on march 19th i am having a guest who does um live coding performances come and talk about that practice of um live coding um um so stay tuned sign up for the discord follow me on twitter shiffman subscribe to the channel and click the bell stuff if you want to like get notifications of when that next live stream about live coding performance is coming um but um yeah and and stay tuned for all the new stuff what else do i have to say um yeah dabbing bear writes i just tried to play the video at 2x speed like i usually do and didn't realize it was a stream i love it please watch my videos at 2x i don't know how they're tolerable unless they're at 2x [Laughter] um and so i'm going to go i've got to run thank you i'm sorry that these streams like don't wrap up in like a sort of thoughtful like end of the show kind of way just kind of like jump off but that's unfortunately what i have to do today i'm going to be working on this particular example more and seeing you all in future videos on the coding train i would love to hear any feedback from you just a little another last little plug if you've worked on anything related to any videos in the coding train like for example i noticed somebody on twitter shared with me a spring um please a spring project they made based on this please add them to the website i'm really trying to fill out the website with lots of community contributions i've got new ideas for how those are all going to be organized and featured coming soon thank you austin for posting the link to curiositystream it's very appreciated you can sign up again at curiositystream.com codingtrain for 26 discount off the entire year it's 14.79 cents for the entire year and you get nebula for free okay um see you all and on the next time on the coding train as always i always forget that this stop this stop it stop this stop i'm gonna do this stop this stop i'm gonna do this this stop this stop this stop i'm gonna do this stop stop i just stopped this dot stop this dot this dot song never forget this dot i'm gonna say once again here song autotune and the internet will fix that for me see it with me it's the polaroid song it's unicorns and rainbows and cupcakes what else is there yes kittens thank you very much kittens and rainbows and cupcakes notice that look what i get i'm really losing my mind okay let's do it the kids i feel just sort of like a nice feeling of relaxation everything's gonna be okay today dream is not broken it has not frozen this is a this is a wonderful thing okay we're gonna do it i'm really getting to something i need my sound effect what else is there unicorn that was invalid syntax i forgot uh there was one other thing here that i think is important that i will use continuously over and over again all sorts of text generation analysis things that i will use continuously over and over again first thing i need to do is yes i usually often turn my camera back on at the end here a little dance but i've already unplugged it so see you all next time uh have a wonderful day um i'm gonna go spend some time outside if you're able to i highly suggest you do as well uh stay in touch and until next time you
