With timestamps:

00:01 - okay so we've seen the basics of working
00:04 - with strings we've we've even drawn some
00:07 - text onto into our processing sketches
00:09 - on into the window so the the path that
00:12 - we're on we're trying to get to this
00:14 - place where we have there's this large
00:16 - body of text that we're loading from a
00:18 - file or there's all these numbers that
00:20 - are coming from some website or some URL
00:23 - someplace we're pulling data in from
00:25 - somewhere and we're almost there we're
00:27 - gonna where to start doing that in the
00:28 - next video but before we can get there I
00:30 - want to look at two key functions in
00:32 - processing that are going to allow us to
00:34 - take data and chop it up and put it back
00:37 - together we're going to need these bits
00:39 - of we're gonna need these bits of
00:40 - technical information to successfully
00:42 - implement some of these some of the
00:44 - ideas so the two the two functions I
00:46 - want to look at are split and join so
00:51 - let's think there's a couple different
00:52 - scenarios one we might have like a
00:54 - string that's like it was a dark you
00:58 - know and stormy night we might have a
01:00 - string that's 10 comma 32 comma 91 comma
01:04 - 73 comma negative for 345 so there's a
01:09 - lot of different scenarios where we're
01:10 - going to get a lot of data a lot of text
01:13 - all at once and we want to look at it as
01:15 - individual tokens so in this particular
01:18 - scenario it was a dark and stormy night
01:20 - the application will look at is word
01:22 - counting I want to know how many times
01:25 - has the word it appeared how many times
01:27 - does the word dark appeared and what can
01:29 - I discover by looking at the frequency
01:31 - of word usage in a particular piece of
01:33 - text and that's a huge open field of
01:37 - text analysis or you know we'll get
01:38 - we'll get into some of that but another
01:40 - scenario is okay well I have all these
01:42 - numbers these are our every single
01:44 - temperature the high temperature of
01:47 - every day in New York City for the last
01:48 - 10 days or the stock price of a certain
01:52 - well you can think of some less cliche
01:54 - examples of data that you might have but
01:56 - so in in both of these cases I want to
01:59 - take these data sources and I want to
02:00 - split them up now the truth of the
02:02 - matter is processing this particular
02:04 - scenario this is this these numbers
02:07 - separated by commas this is known as
02:09 - comma separated values CSV and this is
02:13 - much like how data is stored into
02:14 - spreadsheets if used Excel or Google
02:16 - Docs and you have this you know rows and
02:18 - columns and all these numbers you can
02:20 - export that spreadsheet that grid of
02:23 - information to comma separated values
02:25 - where each row is a separate line in a
02:28 - file each column is a separate number
02:30 - separated by commas are separated by
02:32 - tabs and processing have a clot a
02:34 - built-in class called table this object
02:39 - is designed to work with tabular data so
02:42 - in the end when we have data that looks
02:44 - like this the examples will we'll look
02:47 - at together we'll be using the table
02:50 - object but we're definitely gonna need
02:53 - for this scenario we're definitely gonna
02:55 - need split and in a lot of cases we're
02:57 - actually going to need join there's
02:58 - something we're gonna see about the way
02:59 - we're loading data is we're all gonna
03:01 - get data in as an array and we don't
03:04 - want it to be an array we we have this
03:07 - array we don't want to be array and then
03:08 - we do want it to be an array we have to
03:09 - move back and forth between like a big
03:11 - string and an array and a big string and
03:14 - an array of strings and a big string
03:15 - that kind of stuff over and over again
03:16 - okay I I'm rambling so um so it's I'm
03:20 - trying to make some kind of ridiculous
03:21 - argument as to why it's important to
03:24 - look at these functions so let's just
03:26 - say that let's let's look at let's look
03:28 - at both of these scenarios first let's
03:32 - consider the this this particular
03:37 - scenario okay so let's say this is my
03:39 - string the way that I can split this up
03:46 - into an array so notice I have a single
03:51 - string and now I want an array of
03:53 - strings so the function I can use is
03:56 - called split and what does split knee
03:59 - he'd split needs loose string I want to
04:03 - split which is this and then a delimiter
04:08 - I don't know if I spelled that right the
04:11 - delimiter is the character or sequence
04:14 - of characters that would that causes us
04:17 - to split that straight it's what
04:19 - separates each individual token and here
04:21 - it's very obvious it's a comma I want
04:24 - this
04:25 - my first element of the array this is my
04:26 - second this is my third and so the
04:28 - delimiter here is a comma in this case
04:31 - what's the delimiter a space now as
04:33 - we're gonna see when we start doing word
04:35 - counting and trying to take a large body
04:37 - of text and divide it into individual
04:39 - tokens each of which is a single word in
04:41 - that text that we might have multiple
04:43 - delimiter so there may be a comma a
04:45 - space a period an exclamation point a
04:47 - question mark any of those could be a
04:49 - delimiter or perhaps we might have some
04:51 - strange thing where I have numbers you
04:54 - know that each have a colon and a
04:56 - semicolon so there's a difference
04:58 - between saying I want a sequence of
05:00 - characters to be the delimiter which is
05:02 - split or any of these characters to be a
05:05 - delimiter and well since we're here at
05:07 - this moment I think it's worth
05:08 - mentioning this if I were to say split
05:12 - tokens comma semicolon exclamation point
05:18 - question mark with processing split
05:22 - tokens function this means any one of
05:25 - these individual characters could be a
05:28 - delimiter so this would now work I mean
05:30 - I don't know why I would have this but
05:31 - if my text looked like this if my
05:34 - numbers if mine if my string looked like
05:40 - this with split tokens I would I would
05:43 - get this is the first token this is the
05:45 - second this is the third and this is the
05:48 - fourth and this is the fifth so these
05:50 - are two functions that will come up
05:52 - again and again and again in different
05:54 - examples so even though we are we're
05:57 - going to see that the table object is a
05:59 - very convenient and powerful way to work
06:02 - with tabular data let's just make a
06:04 - quick little simple example together
06:06 - kind of like first very preliminary data
06:10 - visualization right this is my data
06:12 - it's these numbers 1090 32 787 and I
06:16 - want to visualize that data so let's
06:18 - look at splitting it first split s and
06:24 - comma is my delimited delimiter so now I
06:27 - should have all of these values in an
06:29 - array of strings and we might say like
06:32 - oh I'm going to loop through that array
06:34 - and the length of the array and
06:38 - next we'll go up by one and then I'm
06:40 - gonna draw an ellipse with at I times
06:46 - twenty or fifty and then at some y-value
06:50 - and then the the size of each one of
06:53 - these circles is the data that's in in
06:58 - my original string so notice I have an
07:00 - error here so this is this is a key sort
07:01 - of piece of information I have a string
07:03 - I want to split it up into individual
07:06 - tokens each one of which is a number I
07:07 - do that now I have an array of strings
07:09 - I'm gonna loop through that array and
07:11 - use each one of those values as the
07:12 - diameter of a circle to draw of course
07:16 - this doesn't work the diameter of a
07:18 - circle cannot be a string the difference
07:21 - between this and these two things this
07:28 - is the sequence of characters 1 0 0 this
07:31 - is the number 100 this might be trivial
07:33 - and obvious to you but it's worth noting
07:35 - because this will be a mistake that will
07:37 - happen and come up in lots of different
07:38 - scenarios table is gonna do a lot of
07:40 - this conversion for us as will other
07:43 - scenarios that we'll look at in the
07:45 - future
07:45 - but this is worth noting and a really
07:47 - quick and easy way to convert an
07:51 - individual value or an array of an
07:54 - individual string or an array of strings
07:55 - into a value a number would be Jesus to
07:59 - Val's
08:00 - is using the int function so I can this
08:03 - is like casting I'm casting all these
08:05 - strings into integers but and it's a
08:07 - function that's converting that array
08:09 - into integers so now excuse me here we
08:15 - go and now as you can see I have my
08:18 - beautiful perfect I've never made such a
08:20 - wonderful data visualization ever so
08:23 - please so you know I can start to fiddle
08:26 - with this and and make it better and
08:28 - have it spaced out and maybe use some
08:29 - alpha and do different things but the
08:31 - point here is that now we see that if
08:34 - the data is coming in like this things
08:36 - separated by commas the value that we
08:38 - can use split to split it up so I'm
08:42 - gonna skip I'm just going it's really
08:44 - just a reverse and we'll look at that
08:45 - we'll look at that in the next video I
08:47 - would say if you if you're looking for
08:49 - something to try before we get to the
08:50 - next step which is loading in a file
08:53 - that has lots and lots of stuff in it
08:55 - and it's one thing to just have this
08:56 - like little string with just a quick
08:58 - sequence of values versus a file that
09:00 - has thousands of characters that has an
09:03 - entire novel or a play or has thousands
09:05 - of lines of comma separated values so
09:08 - that's what we're gonna look at next I
09:09 - would say if you're looking for an
09:10 - exercise see what you can do with having
09:13 - a string that two-sentence see if you
09:15 - can split it up into individual words
09:16 - and maybe draw those words you know
09:18 - stacked or you know in some
09:20 - configuration or design on the in your
09:23 - processing window okay
09:25 - hopefully this was recording this whole
09:26 - time and if not then I'm just been
09:29 - talking to myself okay I'll talk to you
09:31 - later

Cleaned transcript:

okay so we've seen the basics of working with strings we've we've even drawn some text onto into our processing sketches on into the window so the the path that we're on we're trying to get to this place where we have there's this large body of text that we're loading from a file or there's all these numbers that are coming from some website or some URL someplace we're pulling data in from somewhere and we're almost there we're gonna where to start doing that in the next video but before we can get there I want to look at two key functions in processing that are going to allow us to take data and chop it up and put it back together we're going to need these bits of we're gonna need these bits of technical information to successfully implement some of these some of the ideas so the two the two functions I want to look at are split and join so let's think there's a couple different scenarios one we might have like a string that's like it was a dark you know and stormy night we might have a string that's 10 comma 32 comma 91 comma 73 comma negative for 345 so there's a lot of different scenarios where we're going to get a lot of data a lot of text all at once and we want to look at it as individual tokens so in this particular scenario it was a dark and stormy night the application will look at is word counting I want to know how many times has the word it appeared how many times does the word dark appeared and what can I discover by looking at the frequency of word usage in a particular piece of text and that's a huge open field of text analysis or you know we'll get we'll get into some of that but another scenario is okay well I have all these numbers these are our every single temperature the high temperature of every day in New York City for the last 10 days or the stock price of a certain well you can think of some less cliche examples of data that you might have but so in in both of these cases I want to take these data sources and I want to split them up now the truth of the matter is processing this particular scenario this is this these numbers separated by commas this is known as comma separated values CSV and this is much like how data is stored into spreadsheets if used Excel or Google Docs and you have this you know rows and columns and all these numbers you can export that spreadsheet that grid of information to comma separated values where each row is a separate line in a file each column is a separate number separated by commas are separated by tabs and processing have a clot a builtin class called table this object is designed to work with tabular data so in the end when we have data that looks like this the examples will we'll look at together we'll be using the table object but we're definitely gonna need for this scenario we're definitely gonna need split and in a lot of cases we're actually going to need join there's something we're gonna see about the way we're loading data is we're all gonna get data in as an array and we don't want it to be an array we we have this array we don't want to be array and then we do want it to be an array we have to move back and forth between like a big string and an array and a big string and an array of strings and a big string that kind of stuff over and over again okay I I'm rambling so um so it's I'm trying to make some kind of ridiculous argument as to why it's important to look at these functions so let's just say that let's let's look at let's look at both of these scenarios first let's consider the this this particular scenario okay so let's say this is my string the way that I can split this up into an array so notice I have a single string and now I want an array of strings so the function I can use is called split and what does split knee he'd split needs loose string I want to split which is this and then a delimiter I don't know if I spelled that right the delimiter is the character or sequence of characters that would that causes us to split that straight it's what separates each individual token and here it's very obvious it's a comma I want this my first element of the array this is my second this is my third and so the delimiter here is a comma in this case what's the delimiter a space now as we're gonna see when we start doing word counting and trying to take a large body of text and divide it into individual tokens each of which is a single word in that text that we might have multiple delimiter so there may be a comma a space a period an exclamation point a question mark any of those could be a delimiter or perhaps we might have some strange thing where I have numbers you know that each have a colon and a semicolon so there's a difference between saying I want a sequence of characters to be the delimiter which is split or any of these characters to be a delimiter and well since we're here at this moment I think it's worth mentioning this if I were to say split tokens comma semicolon exclamation point question mark with processing split tokens function this means any one of these individual characters could be a delimiter so this would now work I mean I don't know why I would have this but if my text looked like this if my numbers if mine if my string looked like this with split tokens I would I would get this is the first token this is the second this is the third and this is the fourth and this is the fifth so these are two functions that will come up again and again and again in different examples so even though we are we're going to see that the table object is a very convenient and powerful way to work with tabular data let's just make a quick little simple example together kind of like first very preliminary data visualization right this is my data it's these numbers 1090 32 787 and I want to visualize that data so let's look at splitting it first split s and comma is my delimited delimiter so now I should have all of these values in an array of strings and we might say like oh I'm going to loop through that array and the length of the array and next we'll go up by one and then I'm gonna draw an ellipse with at I times twenty or fifty and then at some yvalue and then the the size of each one of these circles is the data that's in in my original string so notice I have an error here so this is this is a key sort of piece of information I have a string I want to split it up into individual tokens each one of which is a number I do that now I have an array of strings I'm gonna loop through that array and use each one of those values as the diameter of a circle to draw of course this doesn't work the diameter of a circle cannot be a string the difference between this and these two things this is the sequence of characters 1 0 0 this is the number 100 this might be trivial and obvious to you but it's worth noting because this will be a mistake that will happen and come up in lots of different scenarios table is gonna do a lot of this conversion for us as will other scenarios that we'll look at in the future but this is worth noting and a really quick and easy way to convert an individual value or an array of an individual string or an array of strings into a value a number would be Jesus to Val's is using the int function so I can this is like casting I'm casting all these strings into integers but and it's a function that's converting that array into integers so now excuse me here we go and now as you can see I have my beautiful perfect I've never made such a wonderful data visualization ever so please so you know I can start to fiddle with this and and make it better and have it spaced out and maybe use some alpha and do different things but the point here is that now we see that if the data is coming in like this things separated by commas the value that we can use split to split it up so I'm gonna skip I'm just going it's really just a reverse and we'll look at that we'll look at that in the next video I would say if you if you're looking for something to try before we get to the next step which is loading in a file that has lots and lots of stuff in it and it's one thing to just have this like little string with just a quick sequence of values versus a file that has thousands of characters that has an entire novel or a play or has thousands of lines of comma separated values so that's what we're gonna look at next I would say if you're looking for an exercise see what you can do with having a string that twosentence see if you can split it up into individual words and maybe draw those words you know stacked or you know in some configuration or design on the in your processing window okay hopefully this was recording this whole time and if not then I'm just been talking to myself okay I'll talk to you later
