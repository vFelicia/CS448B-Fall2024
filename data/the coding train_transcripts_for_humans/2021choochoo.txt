With timestamps:

00:12 - [Music]
00:21 - [Music]
00:28 - do
00:34 - [Music]
00:42 - so
00:47 - [Music]
01:07 - [Music]
01:10 - so
01:16 - [Music]
01:23 - [Music]
01:30 - [Music]
02:00 - [Music]
02:12 - [Music]
02:18 - [Music]
02:32 - [Music]
02:46 - [Music]
03:00 - [Music]
03:02 - do
03:08 - [Music]
03:16 - do
03:21 - [Music]
03:31 - [Music]
03:42 - hello everyone doing a quick audio check
03:45 - how's my
03:46 - sound can you hear me all right um
03:49 - i'll be starting in 2 minutes and
03:52 - 30 seconds
04:08 - [Music]
04:12 - do
04:18 - [Music]
04:28 - [Music]
04:40 - do
04:42 - [Music]
04:53 - [Music]
05:36 - me
05:41 - [Music]
05:50 - do
06:10 - [Music]
06:29 - wow that is quite a powerful train
06:31 - whistle good afternoon and welcome to
06:34 - a special well it's not so special this
06:36 - is not gonna be anything special
06:37 - whatsoever
06:38 - but it is a saturday edition of the
06:40 - coding train with me
06:42 - dan i'm excited to be live here with you
06:44 - i made the decision
06:45 - to come and do this live stream about 30
06:48 - minutes ago so i apologize
06:50 - for the sort of last minute um notice i
06:53 - do
06:54 - i really do need to do one of the
06:55 - wonderful things about having uh
06:57 - sponsors of the coding train i want to
06:59 - thank
06:59 - today's sponsor of the coding train oh
07:01 - and i have to go over here
07:03 - to do this um brilliant brilliant.org is
07:06 - a
07:06 - wonderful interactive learning website
07:09 - for lifelong learners with
07:10 - so many different courses uh about
07:13 - topics that i
07:14 - cover here on the coding train you can
07:16 - check out brilliant for free at
07:17 - brilliant.org
07:18 - codingtrain i will come back and look at
07:20 - some of the courses a little bit later
07:22 - but um what i wanted to say is like it's
07:24 - really good
07:25 - to have sponsors because it gets me to
07:27 - live stream
07:29 - um i don't know what this i'm seeing 42
07:32 - and 47 being typed into the chat
07:36 - um what what what are these numbers here
07:38 - darth torres
07:39 - and quibble here are uh in
07:43 - are typing in numbers i think this is a
07:44 - reminder for me to give our newest
07:46 - member abe
07:47 - their random number but i was
07:49 - introducing myself
07:51 - so thank you to brilliant the sponsor of
07:52 - today's live stream
07:54 - um i will most typically not be live
07:57 - streaming on the weekends in 2021 as i
07:59 - discussed
08:00 - during the regularly scheduled live
08:02 - stream last
08:03 - friday but i wasn't able to live stream
08:06 - yesterday friday because
08:08 - i was in the recording studio making new
08:10 - nature of code
08:12 - tutorial videos for chapter three so
08:14 - i'll come and show some of the examples
08:16 - that i coded up yesterday
08:17 - um hopefully i'm gonna get into some
08:19 - rhythm and momentum and the new videos
08:20 - are gonna be coming out
08:21 - sorry i couldn't okay yeah yeah stop
08:23 - talking to me watch um
08:25 - um so stay tuned for information about
08:28 - that
08:28 - um and
08:33 - the chat is quite is amusing me dan
08:36 - uh says ray j can you please do a series
08:38 - of tutorials on shaders in p5.js
08:41 - or whatever other platform you prefer
08:44 - this is
08:44 - definitely something on my list i don't
08:47 - know
08:48 - when i will be able to carve out the
08:50 - time
08:51 - i think one of the things that would be
08:53 - fun about doing video tutorials or live
08:55 - streams about shaders
08:57 - and excuse me while i um wipe my nose
09:00 - here for a second
09:02 - is that i don't really know shader
09:04 - programming i have
09:05 - tinkered with shader programming i
09:08 - understand
09:08 - some of the higher level concepts
09:10 - associated with the graphics pipeline
09:12 - and how shaders fit in to
09:16 - creative coding and computer graphics
09:17 - coding but it's not something i have any
09:19 - real experience with it's not something
09:21 - that i've taught a workshop
09:22 - on um so i it would be a great first
09:25 - series of kind of like
09:26 - learn along with me which is really the
09:28 - vibe that i'm going for with the coding
09:30 - train
09:30 - so keep reminding me about that right
09:33 - now i am i have a pretty singular focus
09:35 - which is the nature of code and
09:37 - i will talk about that i mean i'm
09:39 - talking about it now but i'm going to
09:40 - keep talking about it
09:41 - during today's live stream and show some
09:43 - coding examples from that
09:44 - kind of let you know uh where i am um
09:47 - with that
09:49 - um choo choo from the coding garden says
09:53 - jeremias
09:54 - um was the coding guard i really try you
09:56 - know it's impossible to
09:58 - not ever like live stream at the same
10:01 - time as something else going on
10:02 - in the universe but uh you know a
10:06 - sibling channel i think to the coding
10:07 - train is coding garden and uh
10:09 - sometimes i check to see if coding
10:11 - guarding coding guard what coding
10:13 - gardens streaming schedule is i know
10:14 - there's a lot of crossover between the
10:15 - audience
10:16 - and trying not to conflict but i didn't
10:18 - actually um
10:19 - look too carefully or closely at that
10:21 - today i want to also just welcome i
10:23 - don't know oliver if you're watching but
10:24 - oliver
10:25 - whose name i saw pop up in the chat
10:27 - coding train member
10:29 - for very long time probably one of the
10:30 - original patreon
10:32 - subscribers or supporters of the coding
10:33 - train i haven't seen um
10:35 - oliver in a very long time and so
10:37 - welcome back
10:38 - um it's really wonderful to see your
10:40 - name um
10:41 - you know one of the fun things about
10:43 - doing the coding train is
10:45 - you know it's a weird sort of thing it's
10:46 - i you know i get to know the audience
10:48 - and i don't
10:49 - you know what i mean by get to know this
10:52 - kind of
10:53 - loose term there because most of the
10:55 - audience the people that i feel like
10:57 - i know and interact with and get to see
10:59 - their work and
11:00 - watch them grow and learn and make their
11:02 - own channels and tutorials and produce
11:04 - their own content
11:05 - i've never actually met in person some
11:06 - of some of um i've never seen
11:08 - a photo of even other than maybe sort of
11:11 - like a profile picture but i do feel
11:12 - like i know
11:13 - many of you especially as i see the
11:15 - names pop up often in the chat so
11:17 - great to see you again oliver um
11:21 - let's see um
11:24 - i would like to take care of some very
11:26 - important coding train business
11:29 - um and since oliver is back i think
11:31 - probably oliver was not
11:33 - here when i started my new tradition
11:37 - of giving everyone who is a member i
11:39 - want to give everyone in the world
11:41 - all one million subscribers of the
11:42 - coding train their own random number but
11:44 - i gotta start somewhere i'm starting
11:46 - with people
11:47 - who subscribe to us members and so uh we
11:49 - have two
11:50 - new members hello to chris manning who
11:52 - saying happy saturday
11:53 - um oh cool and people are saying they
11:56 - got their
11:56 - my book for christmas um so
12:00 - i wanted to um i think i should
12:03 - give oliver their random number and then
12:05 - i also their newest member abhay
12:08 - um he uh joined during one of my member
12:11 - my recording session for nature of code
12:13 - and i was not able to provide his random
12:15 - number then so let's get started with
12:18 - random number time oliver probably one
12:21 - of the
12:22 - longest longest term members of the
12:26 - coding train
12:26 - thank you for your support over all
12:28 - these years and guess what
12:30 - for your support of the coding trade you
12:32 - get your very own
12:34 - random number i've been watching a lot
12:36 - of clone animated
12:38 - clone wars and i can't stop speaking
12:40 - like the uh
12:41 - introduction to that okay uh from page
12:44 - 319
12:46 - uh row 15925
12:49 - column 61634 your random number is
12:53 - 37 213.
12:57 - somebody marked that down for me um
12:59 - we're going to return to that because
13:00 - one of the things
13:02 - um that i would like to do today is work
13:04 - on the
13:05 - random walk with random number generator
13:06 - for custom train whistle project
13:11 - and obje we had the one of the longest
13:15 - most long-term members ever of the
13:17 - cutting train i think
13:18 - we also have here in the audience today
13:21 - the
13:21 - newest member of the coding train abhay
13:24 - abhay
13:25 - uh hails all the way from some part of
13:26 - the world please tell us in the chat
13:28 - where you're from obvi
13:29 - and if i don't know if i'm saying your
13:30 - name correctly so tell me how to
13:31 - pronounce it is the h
13:32 - silent um
13:34 - [Music]
13:36 - you from page 183
13:40 - column zero one two three four five
13:44 - six row nine thousand one hundred twenty
13:47 - your random number is 57 969.
13:52 - all right
13:57 - bangalore india is where abhay is from
13:59 - okay wonderful thank you that's
14:01 - um so by the way uh speaking of
14:02 - bangalore india i didn't know that you
14:04 - were from there
14:05 - take a look at um i think the website is
14:09 - let me pull it up
14:11 - um and
14:14 - um thank you again to the sponsor today
14:17 - brilliant
14:18 - um let's look for uh processing india
14:24 - processing india.org so processing india
14:29 - is um a i don't know what to if you know
14:32 - to what extent it's an official
14:33 - organization
14:34 - but um it's a group of people in india
14:37 - who are
14:37 - celebrating and using processing
14:39 - organized uh
14:40 - many different uh processing community
14:42 - days um
14:44 - you know pre-pandemic and i do know in
14:47 - fact that there was one in bangalore in
14:49 - particular because
14:50 - some of the organizers of processing
14:52 - community today in bangalore
14:53 - uh are um alumni of the program at nyu
14:57 - where i teach called itp
14:59 - so um hey if you can if you want to
15:01 - connect with them maybe uh i can help
15:03 - facilitate that connection
15:04 - and you can meet some of your fellow um
15:07 - processing enthusiasts in bangalore i do
15:09 - want to mention
15:10 - i think i should mention this every live
15:11 - stream that 2021
15:13 - the year 2021 the year that we are in
15:16 - right now which is
15:17 - not out to the best start if i'm being
15:19 - so honest i was kind of hoping you know
15:22 - 2020 i don't know if you noticed not the
15:24 - best year
15:25 - i thought well new year new leaf let's
15:27 - get everything going it's been a little
15:29 - rough a little rough here especially in
15:30 - these
15:31 - united states where i live um but
15:33 - hopefully hopefully things will be
15:34 - looking up
15:35 - um okay but
15:38 - um what was i talking about
15:45 - 2021 ah yes 2021 brings with it
15:49 - the 20th anniversary of
15:52 - processing itself processing itself
15:55 - was created i believe in august was
15:57 - maybe the first release
15:59 - of 2001 when i was a wee young
16:02 - lad in my uh 20s actually just before i
16:06 - began
16:07 - graduate school at itp i had no
16:08 - awareness of the existence of processing
16:11 - at all when it began
16:12 - i didn't encounter it until several
16:14 - years later
16:16 - but so this year hopefully will bring
16:21 - whether they'll be all virtual and
16:23 - remote or whether things will be able to
16:25 - start to improve in terms of our ability
16:26 - to be physically present with each other
16:28 - i don't know
16:29 - but some form of celebration of the 20th
16:31 - anniversary of processing
16:33 - so um i would say stay tuned to
16:37 - processingfoundation.org
16:38 - the twitter account of various social
16:40 - media accounts for things that might
16:42 - come up
16:42 - um around that celebration i do want to
16:45 - i was sort of thinking back to the
16:46 - history
16:47 - i think if i search for rhizome shiftmen
16:50 - reese fry yet so this
16:54 - is something that i did wow in 2009
16:58 - back when i in the early days of me
17:00 - getting involved with processing itself
17:02 - i did an interview with casey and ben
17:06 - and i don't know why all the images are
17:07 - missing that's kind of sad for me
17:09 - around the origins of processing so
17:11 - let's see
17:12 - it was sometime in june 2001 as i was
17:15 - finishing up at mit we made a list of
17:17 - the basic specs for the environment and
17:18 - drawing functions it was one eight and a
17:20 - half eleven tight
17:21 - inch typed page by the fall ben had
17:23 - something working and the first workshop
17:25 - took place in japan
17:27 - in august 2001. um
17:30 - okay interesting um so anyway i'm i'm
17:33 - excited to sort of read this over again
17:35 - i think that's what i was looking for
17:37 - people ask like where does the five and
17:38 - p5 come from
17:40 - so this is actually the answer to it
17:42 - right here not when we started the
17:43 - project but we've second guessed the
17:45 - name many times since
17:46 - first it was an iterative name with the
17:48 - characters always changing
17:49 - so processing with like a zero for the o
17:53 - uh a five for the s
17:56 - three a one uh then we more
17:58 - conservatively started using
18:00 - processing with the five fives for the
18:02 - alpha version
18:03 - so that's a move to processing a few
18:06 - cases i regret not calling it seal i
18:09 - think ben wanted to call it bagel or
18:11 - potato
18:12 - so think about what would the world be
18:13 - like right now actually i think
18:15 - bagel is pretty awesome if we were all
18:17 - just here being like and now i'm going
18:18 - to show you
18:19 - how to program your own fractal in
18:23 - bagel.js
18:24 - maybe we could put some locks we'd all
18:26 - be making libraries that are like
18:28 - locks.js and capers.js
18:32 - tomato.js that's pretty great
18:34 - so this is pretty cool to read about and
18:36 - think about um
18:39 - you know obviously many years later
18:41 - p5.js came around with lauren mccarthy
18:44 - um the world of contributors to
18:46 - processing in p5 has really exploded
18:48 - and what i would like to say one of the
18:49 - things has been wonderful is to see the
18:51 - inclusiveness and diversity of that
18:53 - community which really
18:55 - was not present for so many years a real
18:57 - failing of
18:58 - you know the open source community i
18:59 - think that's really you know not perfect
19:01 - by any means there is
19:02 - lots of work to do but has greatly um
19:05 - improved
19:06 - um and um
19:09 - hello to julia in the chat julia our
19:11 - newest moderator
19:12 - um uh i i
19:16 - am a low-res i don't even know what to
19:18 - call all these programs so
19:20 - this is cool to sort of like spontaneous
19:21 - look up let's think about what we can do
19:23 - as the coding train community
19:25 - to celebrate the 20th anniversary of
19:27 - processing
19:28 - this year okay um
19:32 - [Music]
19:34 - by the way i have no agenda this is the
19:36 - thing i
19:38 - i really want to be an organized person
19:41 - who plans a sort of like live stream
19:44 - show with an agenda and things that i'm
19:46 - planning to do
19:48 - guests a schedule i'm gonna get there
19:51 - someday it might not be for a long time
19:54 - might be when i like retire
19:56 - and i just could like be at home as an
19:58 - you know a much older person i'm already
20:00 - kind of old but a much older person
20:04 - what am i even talking about live
20:05 - streaming i have this fantasy plan let
20:07 - me just put this out into the universe
20:08 - right now
20:09 - i don't know if i should be discussing
20:10 - this if it makes sense but let me just
20:12 - put this out into the universe right now
20:14 - while i have you a captive audience of
20:16 - 322 an auspicious number by the way
20:19 - 322. if anyone wants to try to figure
20:21 - out what my connection with the number
20:22 - 322 is
20:24 - go forth i don't know let's see if
20:26 - anybody could come up with that i
20:27 - i don't think there'll be any way that
20:29 - anybody will figure this out but i have
20:31 - a
20:31 - certain connection with the number 322
20:33 - but i'm gonna i
20:34 - i i have um you know knock on wood
20:38 - uh a sabbatical from my uh full-time
20:41 - teaching job
20:42 - spring one year starting one year from
20:45 - right now
20:46 - and i had one previously i don't know if
20:48 - anybody remembers i spent uh
20:50 - i don't think i actually this was kind
20:51 - of before i even really started the
20:53 - coding train so i don't know why you
20:54 - would remember this
20:55 - i've been making videos since probably
20:58 - 2012 at least
21:00 - but um
21:03 - sorry i hear the pitter patter of little
21:05 - feet and i'm always wondering if
21:06 - someone's going to come and interrupt me
21:08 - um speaking of which i have to leave at
21:10 - three because the reason why i was able
21:11 - to get this live stream spot
21:13 - is my kids are doing a zoom baking class
21:15 - right now making some kind of almond
21:17 - flour citrus cake tart thing and at
21:20 - three o'clock we're going to have app
21:21 - speaking of london
21:22 - we're going to have an afternoon tea and
21:24 - eat that so it's gonna be done
21:26 - um so but let me get back to what i was
21:29 - talking about so i
21:30 - we had a wonderful adventure we lit we
21:32 - as a family lived in london for the
21:34 - semester
21:35 - and um i'm looking into doing that again
21:38 - next spring
21:41 - but um with covid it's sort of unclear
21:45 - uh what makes sense to do what's
21:47 - appropriate what's safe
21:48 - will we be back to normal we will never
21:51 - be back to i don't know if we ever were
21:53 - normal i certainly i certainly wasn't
21:55 - but
21:56 - if you live somewhere in the world where
22:00 - you think
22:00 - it might make sense for me to spend a
22:02 - sabbatical semester
22:04 - uh with family um reach out to me
22:07 - let me know i have some ideas i'm sort
22:10 - of thinking about in this um
22:12 - you know my fantasy actually is to uh
22:14 - have a
22:15 - a house in the country some countryside
22:18 - somewhere with like a barn and i could
22:20 - set up a whole recording studio
22:22 - and that would be my project for the
22:23 - sabbatical semester so that's when i'll
22:25 - be
22:25 - organized with my weekly live show so
22:28 - this is
22:28 - just putting this out there starting to
22:30 - think about it's not for a year
22:32 - um but um yeah i had this fantasy of
22:36 - living in japan i've never been to japan
22:38 - um i looked into that for a little bit
22:40 - um i don't know
22:42 - we'll see we'll see i might just stay
22:44 - here in my
22:45 - attic in brooklyn and have a nice
22:46 - semester sabbatical i'm very
22:48 - privileged and lucky to be able to have
22:50 - the the um the opportunities that i have
22:53 - so love the hearts popping up the screen
22:54 - i kind of forgot that those were there
22:56 - so the hearts are an overlay in open
22:59 - broadcast studio
23:00 - which is exactly based on my fireworks
23:03 - coding challenge it's just running
23:04 - directly
23:06 - and i put it on for something that i was
23:08 - uh recording
23:09 - oh yes i have to make this video this
23:13 - weekend
23:14 - i forgot about it um
23:17 - and iceland ooh that's exciting
23:21 - um why um uh nicobar islands i've never
23:24 - heard of that that's kind of
23:26 - interesting to think about um
23:29 - so but i forgot to turn them off so
23:30 - there they are okay
23:34 - so let's see i just want to
23:38 - um take a minute here so
23:41 - um let me make a list of some things
23:44 - let's that i might work on today
23:48 - and i'm going to go to the rainbow
23:50 - etopics
23:51 - uh repository which has my uh spring
23:54 - 2021
23:55 - dock so oh oh i have something actually
23:58 - i got a shot
23:59 - this is probably a really bad idea but
24:01 - i'm gonna show you something
24:03 - um i'm gonna show you something a minute
24:07 - so i'm looking at this so first of all i
24:09 - um this is now done
24:12 - oh you don't see what i'm looking at
24:14 - apologies um i'm looking at my sort of
24:16 - like list of things i want to
24:18 - work on for this spring and this is what
24:21 - i recorded yesterday
24:23 - um and i want to talk about actually
24:25 - have kind of a new exciting way of
24:27 - recording that i thought i might mention
24:29 - and i also made a sample
24:32 - sort of pilot version of my what i'm
24:35 - calling javascript express dots
24:37 - or javascript bytes little short
24:40 - tutorial videos about
24:41 - javascript concepts i would really like
24:42 - to expand this list if i were a
24:44 - different person
24:45 - i would make these on tick tock or
24:47 - something i noticed by the way that
24:48 - scott hanselman and if anyone's familiar
24:50 - with scott hanselman is really a
24:51 - wonderful
24:52 - uh educator and works at um outreach
24:55 - person
24:56 - um so um
25:03 - um people are making wonderful
25:05 - suggestions
25:06 - about places england is bad who wouldn't
25:09 - recommend it here england is a wonderful
25:10 - place
25:11 - i have a soft spot for the uk i was just
25:13 - remembering some wonderful times i had
25:15 - there
25:15 - um uh one of the things that is a
25:17 - requirement for me in my travel is i
25:19 - need a place with
25:20 - schools in particular for what will be
25:23 - a fifth grader and a seventh grader
25:27 - and uh so like um that's that's sort of
25:31 - like a complicating factor i have to
25:32 - really plan that in advance
25:34 - um so what uh
25:37 - espresso express espresso shots so i
25:40 - really wanted to be train themed
25:42 - so like espresso that really does make
25:44 - sense though
25:45 - um but i'm gonna um play something for
25:48 - you
25:49 - i actually have i'm this is never going
25:51 - to be released
25:52 - and i haven't actually watched it i hope
25:54 - matia doesn't
25:56 - uh kill me for doing this
26:00 - um but um i'm looking for it i have the
26:04 - like just the sort of sample rough cuts
26:06 - about three and a half minutes
26:08 - of just the idea of how these videos
26:09 - would work so i thought maybe i'll play
26:11 - it for i can't find it right now
26:13 - um i thought i would play it for you i'm
26:16 - just looking for it
26:17 - um weird i just had it open i don't know
26:20 - why it's not in my history
26:22 - ah here it is um
26:26 - i'm gonna make it full screen
26:30 - um let me move over here
26:34 - uh do you see this so here i am in front
26:36 - of it but i'm gonna
26:37 - move myself away and mute myself i'm
26:39 - going to play this approximately three i
26:41 - have not watched this
26:42 - it's a rough cut just a sample edit of
26:45 - the idea
26:46 - of these new videos that will be less
26:48 - than five minutes long each
26:50 - and this one is about the concept of a
26:52 - template literal so i would love
26:53 - to hear your feedback what you think
26:55 - about it this is not live
26:57 - people would be confused for a second
26:58 - i'm gonna just again i'm gonna
27:00 - leave here and i'm gonna hit play i'm
27:02 - not 100 sure whether the audio is going
27:03 - to come through so if it doesn't i'll
27:05 - have to start over here we go
27:06 - one two three play
27:11 - okay so the audio is definitely not
27:13 - coming through oh let me fix that
27:15 - i know how to fix that uh it's not too
27:18 - hard
27:20 - uh chrome i have to turn chrome on
27:24 - going out to usb capture um
27:27 - let me get back to this
27:30 - full screen give me a second here
27:36 - and back to this
27:40 - and here we go again try number two
27:45 - what's that is that the express train it
27:47 - is
27:48 - this is a new series i've got going here
27:50 - where i'm going to make
27:52 - short bite size if you will that's right
27:54 - bite spell b-y-t-e
27:57 - video tutorials about quick concepts in
27:59 - javascript in modern javascript that
28:01 - i've started to adopt in a lot of the
28:03 - coding challenges and other p5.js video
28:06 - tutorials that i'm doing and the first
28:07 - stop
28:08 - on the express train is template
28:11 - literals what is a template literal you
28:14 - have
28:14 - probably in your coding life done things
28:17 - like
28:18 - a in quotes plus
28:21 - b in quotes uh the plus
28:25 - operator with a string with two strings
28:27 - concatenates the string
28:29 - and we have the result a b this is
28:32 - particularly useful when you want a
28:33 - console
28:34 - log something for debugging and you want
28:36 - to console log
28:37 - x position colon plus the variable x
28:41 - however there is a much better way of
28:44 - doing that now in javascript
28:46 - which eliminates the need for this plus
28:48 - and it allows you to evaluate
28:50 - expressions directly in a string itself
28:53 - and if you use the back
28:54 - ticks and your string um
28:58 - x position
29:01 - colon if i want to now display evaluate
29:04 - an expression and display the result or
29:06 - just
29:06 - the value of the variable i can use
29:09 - dollar sign
29:10 - curly brackets the name of the variable
29:13 - curly brackets so this is the way to
29:17 - embed an expression inside of a string
29:20 - let's take a look at that actually in
29:22 - action in the code
29:23 - this is a quick p5.js example which is
29:26 - just displaying the time
29:27 - i have three variables calling hour
29:30 - minute and second
29:31 - and then i'm putting together this
29:33 - string i want to take the hour
29:35 - plus the colon plus the minute plus a
29:37 - colon plus the second
29:38 - and we can see the result right over
29:40 - there in the window it's about 306
29:42 - pm eastern time i just spent three hours
29:45 - like figuring out how to get the cameras
29:47 - to work in a way that i could record
29:49 - this video
29:49 - so thank you very much for being here i
29:52 - hope i'm making sense here i am now
29:54 - going to
29:54 - change this to having a template literal
29:58 - i'm going to write text then i'm going
30:00 - to use the back
30:01 - tick and i'm going to say evaluate the
30:04 - variable
30:05 - h then put a colon
30:08 - then evaluate the variable m then put a
30:11 - colon
30:12 - evaluate the variable s and then this
30:15 - i would like to display this at 200 200.
30:18 - i can comment this
30:19 - out run the sketch again and it's the
30:22 - exact same result
30:23 - but now with the template literal
30:26 - template literals allow you
30:28 - to do all sorts of things you know i
30:30 - could actually uh
30:31 - have an expression like m times two that
30:33 - would get evaluated
30:34 - i'm not sure why i would want to do that
30:36 - but you can see the number went from 7
30:38 - to 14.
30:39 - you can also use line breaks right
30:41 - inside of a template literal
30:43 - so if i do this we can see look at this
30:46 - that line break is maintained in the
30:49 - string
30:50 - and displayed in the way that i'm
30:52 - drawing in the canvas so this is a bit
30:53 - of a weird example of this
30:55 - circling back to the console log idea
30:57 - here is one of my a bouncing
30:59 - ball in p5.js examples and if i had some
31:02 - issue with it
31:03 - where maybe it wasn't performing the way
31:05 - that i had hoped
31:06 - i could do a console log and i could say
31:09 - you know
31:09 - x position colon x
31:13 - this is also a nice application of using
31:15 - a template
31:16 - literal thanks for watching see you at
31:19 - the next stop
31:20 - on the coding train express
31:44 - help
31:46 - where am i uh here i am by the way i
31:48 - wanted to
31:49 - see if we could get a quick if i could
31:52 - zoom in on that
31:54 - uh
31:58 - you can see here i don't know if you can
31:59 - see this i'm gonna zoom way and uh
32:02 - that is actually
32:05 - the coding train logo laser etched onto
32:08 - this train whistle which i have been
32:10 - that's
32:10 - that sort of topic of today but you
32:12 - can't really see that okay um
32:14 - oh so people are giving uh um
32:18 - people are giving positive feedback
32:20 - there so that's
32:21 - i was kind of planning to redo that
32:23 - video there's sort of some like sort of
32:25 - technical issues in the way that it was
32:26 - recorded
32:27 - quality-wise um but hold on let me go
32:30 - back to here i need to
32:32 - just re-orient myself i didn't realize i
32:35 - had multiple browser things open
32:37 - and i'm kind of lost here
32:41 - all right so i'm coming back like um
32:44 - let me uh turn that off again
32:47 - and come back to here
32:51 - so hard to do things while you're live
32:54 - streaming
32:56 - yeah all right back to here so
33:01 - um bobber a slang word for a small
33:05 - caboose with just
33:06 - four wheels all rigidly mounted to the
33:08 - frame
33:09 - this design was common in the 1800s
33:12 - baba refers to the bouncing motion of
33:14 - such a caboose
33:16 - in motion
33:19 - cool that's kind of an interesting idea
33:20 - i like that idea
33:24 - it's my replacing my bell here okay
33:27 - um enhance yeah
33:31 - uh all right so um that's coming soon i
33:34 - you know thank you i guess i got some if
33:36 - anybody has any um
33:40 - any feedback or thoughts in particular i
33:42 - would really love to expand this list
33:45 - the thing that i'm trying to one is i'm
33:47 - trying to create something useful for
33:48 - people
33:49 - so that they can have very quick access
33:51 - to kind of understanding
33:53 - some new features and conventions of
33:55 - javascript itself that are sort of
33:56 - outside of the bounds of my kind of
33:59 - other
34:00 - creative coding curriculum otherwise
34:05 - but also um one of the things i find
34:07 - myself doing
34:08 - constantly is in every video tutorial i
34:11 - want to put in
34:12 - for example a console log and i start
34:13 - using a template literal and then i feel
34:15 - like i need to explain what template
34:16 - literally is
34:17 - and then it adds like three minutes the
34:19 - video and then it's in like 10 different
34:20 - videos
34:21 - so i'm trying to sort of figure out um
34:24 - if that's
34:24 - uh what if if that's what i can do okay
34:28 - um are you planning to record any videos
34:31 - in this live stream since christopher so
34:32 - i really have completely
34:34 - separated the live streaming component
34:37 - from the tutorial recording component so
34:39 - this live stream is just me blabbering
34:41 - on and on
34:42 - for about another hour and the tutorials
34:46 - i record
34:47 - separately um during the week uh in
34:50 - the recording studio that i use um and
34:53 - uh
34:53 - those i do live stream but i those
34:55 - recording sessions are pretty informal
34:56 - there's a lot of time of me just
34:58 - tinkering around
34:59 - but you can join as a coding trade
35:00 - member to have access to those
35:02 - streams as well otherwise just wait the
35:04 - videos will all be released
35:06 - okay um so uh
35:10 - let's see what i want to do simon's
35:12 - giving me suggestions about generator
35:14 - functions
35:14 - not for today but i do like that
35:16 - suggestion i have some things that i
35:18 - definitely want to do
35:20 - so i want to show you something i think
35:21 - i should just show this to you now
35:24 - because it's like one of the most
35:25 - exciting things that i've come across
35:27 - in a long time and it's a little bit
35:29 - outside of the scope of coding
35:32 - um and i'm trying to think of there must
35:34 - what might be some
35:36 - interesting ways that i could come up
35:38 - with a creative coding project that
35:40 - would make use of this technology
35:41 - but i want to log into runway which is a
35:44 - um a
35:48 - tool for creating content um using
35:51 - machine learning models
35:52 - that i use in a lot of different
35:54 - projects and tutorials
35:56 - um you see you seen me probably train
35:58 - style gan models and gpt2 models which
36:00 - is a
36:01 - generative text model um runway has
36:03 - introduced something
36:05 - called green screen and green screen you
36:08 - know
36:09 - it's what's right here it's what i use
36:11 - an actual literal green screen
36:14 - to key out the background and you'll
36:16 - notice that
36:17 - this is something that machine learning
36:18 - models are now able to
36:20 - intelligently do without a uniform
36:23 - background of a single color like green
36:25 - for example if you've been in any video
36:27 - calls these days which you probably have
36:29 - you'll might be realized like oh zoom
36:31 - has virtual background for example how
36:33 - does that work
36:34 - well there's a machine learning model
36:35 - that's been trained on a lot of images
36:37 - you know again i don't actually know
36:39 - exactly what zoom is using but i'm just
36:40 - speculating here
36:42 - i've been trained a lot of images that
36:43 - are labeled of
36:45 - people here all the pixels of the
36:46 - person's silhouette hear all the pixels
36:48 - of the background
36:49 - we'll learn to differentiate those
36:50 - here's a new image
36:52 - mask it out on the fly so how uh
36:55 - uh runway ml has a tool for doing this
36:59 - green screening with
37:00 - any video and any kind of object and
37:02 - it's like
37:03 - totally mind-blowing so let me try
37:07 - let me log into runway for a second i'm
37:08 - just in case i have to
37:10 - like uh oh okay wait i think this is
37:13 - going to be perfect
37:14 - so the one thing that i need right now
37:16 - is a video
37:19 - so come on log in um
37:23 - and i'm gonna so if so by the way first
37:25 - of all uh you could just go to
37:27 - runwayml.com to follow along
37:29 - um you actually don't need an account
37:31 - and the green screen feature is totally
37:33 - free to use
37:34 - the only thing you won't have is um
37:37 - access to without a paid subscription is
37:41 - um being able to export i think the
37:43 - green screen videos at like 1080p
37:45 - but i wanted to just poke around and
37:47 - look at this uh briefly i'm gonna come
37:49 - back in a future live stream and do more
37:51 - with this
37:51 - i just wanted to sort of like start so
37:53 - let's see what can i do here
37:55 - i guess i could make just like a video
37:57 - of myself
37:59 - uh i didn't really think this through i
38:01 - don't have a
38:02 - let's see do i have a video of like
38:03 - gloria um let's see let me look
38:06 - on my uh fancy uh
38:10 - television phone i like to call these tv
38:14 - my television phone here let me search
38:16 - for dog
38:20 - and i must have a probably a cute video
38:23 - with gloria running around
38:26 - um categories dog
38:30 - how do i find a cute video of gloria
38:32 - running around here's one
38:33 - it's just three seconds
38:38 - ah that's not going to do
38:42 - find one somebody wants to suggest like
38:46 - an interesting video um
38:53 - this is like a really sad failure
38:57 - uh let me just make a video of my i'm
38:59 - just gonna record a video
39:01 - and then i'll so let's see what can i
39:03 - record let's try
39:05 - uh let's try recording a video of this
39:11 - train whistle we'll see how well it does
39:16 - um this is hard
39:19 - okay a little behind the scenes here of
39:21 - the coding train that's such a mess
39:23 - there's uh you're gonna see my lights
39:26 - and a camera and a drum set here let's
39:29 - hit record i'm here in an attic and i'm
39:31 - going to move this around
39:36 - this is really weird what i'm doing okay
39:38 - so that was about like
39:40 - a 10 second video let me also just do
39:44 - a quick video of myself
39:49 - just to see how well that works
39:51 - [Music]
39:53 - and um
39:56 - i'm gonna hold this up
40:03 - oh i i meant to do it uh with this
40:05 - aspect ratio
40:08 - okay
40:12 - okay we got two videos now
40:16 - uh and i am going to
40:21 - uh i'm gonna see if i can just transfer
40:23 - them
40:24 - to my laptop really quickly
40:30 - let's see if this will work
40:35 - i might have to turn airdrop on i think
40:38 - that'll probably be the most
40:40 - efficient way for me to do this
40:45 - allow me to be discovered by i'll just
40:47 - say everyone
40:48 - i had it at no i have it usually set to
40:50 - no one
40:52 - uh macbook okay i'm sending these two
40:54 - videos
40:58 - and they should be there now
41:02 - so let's go to
41:06 - here and see
41:10 - all right so i'm gonna so here i am um
41:13 - this is video one video
41:15 - with me uh uh moving this like mario
41:18 - uh toy and then the other one
41:22 - is here with me and moving this train
41:25 - whistle around
41:26 - uh is the audio lost no okay
41:30 - so let's try i think that let's try
41:31 - first so i'm gonna do start editing
41:35 - so i am going oh look they have example
41:38 - videos that i could pick
41:39 - so i probably should have just used one
41:41 - of these but let's upload
41:43 - both these um both of these videos
41:49 - i guess i can only do them one at a time
41:50 - that's fine
41:53 - um okay so i'm going to upload one
41:58 - did it upload ah there it is upload yes
42:02 - okay now what i'm going to do
42:06 - uh next is open it up
42:10 - so this is a
42:14 - a browser tool um i could watch the
42:16 - tutorial which would be great for me to
42:18 - do but i'm going to skip that right now
42:20 - and basically what i can do
42:23 - is click on elements of the scene that i
42:27 - want
42:28 - to track and mask out basically
42:31 - rotoscope this is equivalent of
42:33 - ai machine learning based rotoscoping so
42:35 - i'm just going to say like
42:36 - let me just track this
42:40 - and so i did three clicks and it sort of
42:42 - found this
42:43 - but i want to now say i don't want my
42:45 - hand maybe so i'm going to like
42:47 - exclude my hand so it's just
42:50 - tracking now just the top of this
42:54 - mushroom so let's see what happens if i
42:56 - then go to preview
42:59 - and it's now running the model over all
43:02 - the scenes
43:02 - oh my god look at that
43:06 - i don't know if you understand what's
43:08 - going on
43:10 - look what this just did i mean that is
43:13 - insane
43:18 - oh my i still like this is like so crazy
43:20 - to me
43:21 - so now what i could do is i could go
43:23 - back let's see what i wanted to do
43:25 - if i wanted to stop this
43:29 - and i could go back to include like what
43:31 - if i wanted to actually have me
43:33 - as part of this so i could keep
43:37 - including more things get my hand
43:42 - so now let me go to preview
43:46 - and see
43:49 - and it's a little tricky to see because
43:52 - i've got this green screen here
43:54 - but um and it
43:58 - let's see so could i in the place where
44:01 - it fails
44:03 - can i i think what i could do
44:06 - is pause and then include
44:10 - click some more
44:14 - and now uh preview again
44:22 - but i lost my hand
44:25 - which is
44:34 - so i guess can i keep doing this and
44:38 - adding more things to include where it
44:40 - misses it
44:41 - so can i do like this
44:48 - and then i could do exclude like i don't
44:50 - want this area here oh i do because
44:52 - that's part of the object
44:55 - include that's part of the object too
45:00 - um preview i'm just sort of like i'm
45:03 - trying to understand
45:04 - how to like iterate over this
45:07 - there we go i think i've got it now
45:12 - i think i've got it now uh there's a few
45:15 - see why does it now it loses my hand
45:18 - over where here so can i stop there and
45:22 - like
45:23 - tell it to include it see now i've lost
45:25 - the rest of me
45:26 - there so weird so this is what i'm
45:29 - confused about
45:31 - and actually this is good i'm going to
45:32 - send them some feedback
45:38 - like how do i
45:42 - i mean it's definitely perfect for like
45:45 - almost all those frames and then there's
45:46 - just like
45:48 - actually maybe i have
45:52 - gotten it i just want to see like this
45:55 - like this is
45:58 - right so how can i get i mean this first
46:00 - of all this is just
46:01 - crazy how well this is working but note
46:04 - um
46:04 - so how can i if i
46:09 - can i keep going
46:13 - oh look at this what are these markers
46:14 - here
46:17 - like that's weird like what does that
46:18 - mean like there's a marker down here on
46:20 - the bottom i don't know what this means
46:23 - but let me try to
46:29 - there we go
46:35 - get more points oh that's where i uh
46:38 - clicked before
46:39 - okay so let's see now
46:47 - it's re it's got to re-run the model
46:50 - over everything
46:54 - so this looks good
46:58 - so there were just a few there's just a
47:00 - few places where
47:01 - i've kind of like i lost my hand here
47:14 - okay
47:19 - why is why do i have exclude these are
47:23 - exclude points how do i delete them
47:29 - ah okay there we go ah okay there we go
47:32 - i must have clicked exclude by accident
47:34 - which is what was messing it up
47:42 - all right i think i've got it now i
47:44 - think i had some exclude points there
47:46 - by accident i don't remember clicking
47:48 - where i messed it up
48:02 - so there's just i just want to see like
48:04 - can i get this perfect
48:08 - there we go
48:30 - okay looking good
48:34 - still some like a couple i'm like
48:36 - obsessed
48:37 - with getting this exactly right
48:48 - oh do i need to add everything maybe i
48:50 - need to add
48:51 - everything on the different keyframes
48:53 - i'm doing
48:54 - that's what people i think that's what
48:56 - i'm being told like if i do this
48:59 - like i if i'm adding to this frame i
49:01 - gotta do everything
49:12 - so now i think pro tip
49:15 - don't skip the tutorial
49:20 - let's see how this is going
49:30 - okay this is looking good now
49:35 - just one the couple couple little
49:37 - glitches
49:38 - one is here like it's not getting my
49:41 - finger
49:42 - but now i need to make sure
49:46 - even on this frame i i get everything i
49:49 - see like if i click into one frame
49:57 - okay so that's good and then all right
50:00 - so let's
50:16 - okay getting everything getting
50:18 - everything getting everything
50:20 - okay so just a little break here
50:23 - probably because
50:25 - i didn't realize
50:36 - okay
50:39 - i really think that i'm gonna have this
50:41 - now all the dots is the keyframe delete
50:43 - all the dots and place the pointer in
50:45 - the beginning of the video
50:56 - okay i think i've got it now
51:00 - little one little glitchy spot
51:06 - just one little glitchy spot like right
51:20 - here
51:24 - i feel like i'm going going over and
51:26 - over again
51:36 - is wild by the way okay
51:41 - there we go so that was perfect there's
51:43 - only thing
51:44 - i'm like a you know me i like i get
51:46 - really stub obsessive and stubborn
51:48 - like it bothers me that this finger is
51:50 - missed
51:52 - so what i'm not realizing is that
51:56 - when i edit on a particular frame i've
51:59 - gotta sort of click on
52:00 - everything this is probably not really i
52:02 - think one thing is this is not really
52:05 - what it is um designed for in the sense
52:09 - that um it's it's
52:12 - much better at tracking like actual like
52:15 - like individual objects inside of a
52:17 - video and i'm kind of taking up
52:19 - so much of it but i think now
52:25 - i think now i've got something let's
52:28 - let's give this a try let's see
52:31 - perfect okay so now i can do this
52:37 - and i should be able to do things like
52:40 - under um export now
52:44 - give myself like a different background
52:46 - like this
52:52 - let's try that and i should be able to
52:54 - do export video
52:58 - and now it's uh i think this is the one
53:02 - thing that you won't be able to do
53:03 - um necessarily um and so let's let that
53:06 - export let's try the um
53:09 - let's try the other um video that i
53:12 - uploaded
53:13 - so let's go to videos
53:16 - let's try oh didn't i upload another one
53:19 - upload
53:20 - because i only did that one let's try
53:21 - this one
53:27 - um is it uploading oh there it is okay
53:31 - let's try this one
53:40 - it's loading this video
53:43 - now i'm just gonna click
53:46 - on this
53:51 - and hit preview now this is just only
53:53 - the first frame i just clicked in a few
53:55 - things in the first frame look at that
53:58 - holy moly
54:02 - now do i want my hand that's what i'm
54:04 - not sure
54:09 - this is crazy how well this works
54:15 - so
54:19 - let's decide i'm going to keep my hand
54:36 - it hates my fingers
54:48 - so look at that i mean
54:53 - pretty amazing stuff let's see if i can
54:55 - exclude my hand
54:57 - i'm curious about trying to do that so
54:59 - let's go
55:00 - to this frame that i've already done
55:03 - how do i tell when i'm on a frame that
55:05 - i've already done like
55:07 - i feel like it should show me the points
55:10 - when i can delete it i guess i can
55:12 - delete it but how do i
55:13 - change
55:17 - i want to like exclude well i'm just
55:19 - going to try this
55:21 - ah okay now i'm there
55:27 - and now i want to exclude
55:30 - i want to exclude my hand
55:34 - so it's going to be really hard
55:38 - and then i want to include
55:42 - there we go that's pretty good
55:47 - let's just preview now and see what
55:49 - happens
55:50 - so here for example i want to exclude
55:54 - my hand
55:59 - and include
56:02 - a whistle okay
56:11 - wow
56:15 - yeah it's hard for it to separate right
56:18 - but it's doing a pretty darn good job
56:26 - so if i go here and do exclude
56:42 - include
56:45 - guess what everybody
56:48 - welcome to illusion grenade i'm
56:51 - pronouncing your name correctly
56:53 - you join the coding train
56:57 - and i got sleepy in the last few minutes
57:00 - oh i gotta do my sponsors
57:02 - um your very own random number legends
57:08 - oh if only i could remember my french
57:11 - well enough
57:13 - uh i'll just english on page 85
57:17 - column four row 4
57:20 - 210 your random number is 5 678.
57:25 - okay i'm going to put this away um
57:28 - hopefully like i've shown you sort of
57:29 - like how amazing this is
57:31 - um obviously like uh there's
57:35 - some finessing here that i would need to
57:36 - do to get this perfect
57:38 - i i i have to i have to i can't stop
57:42 - let's find let's let's let's improve it
57:44 - let's improve it i have to
57:46 - it's just the way that i work
57:49 - and then exclude the fingers
57:58 - okay so now let's preview this
58:03 - i want to get this perfect
58:08 - okay
58:16 - okay so already i want to
58:20 - on this frame exclude the hand
58:28 - there we go
58:32 - ah christopher tube hd
58:35 - welcome to the coding train
58:39 - it is so nice to have your membership
58:40 - we're getting all these new random
58:42 - numbers
58:42 - we definitely need to work on our random
58:44 - number pattern generator
58:46 - thingymabobber uh right we're so close
58:49 - so close everybody
58:51 - christopher tube hd your random number
58:54 - is
58:55 - twelve thousand one hundred twenty seven
58:57 - that's page two two seven column
58:59 - two row eleven thousand three hundred
59:01 - and fifteen all right
59:03 - uh okay ah this is pretty good oh no no
59:06 - no no no okay it's all right it's gonna
59:09 - be fine we're gonna
59:10 - we're gonna fix up this frame
59:13 - and exclude some of the fingers down
59:15 - here there we go and
59:18 - now preview it
59:25 - ah okay if you check the demo on the
59:28 - website you will see they talk about
59:30 - changing the background non-moving
59:32 - if you move the camera it makes the
59:34 - video hard to parse yeah that makes
59:35 - sense
59:36 - so by the fact that the camera is not
59:38 - stable is
59:40 - probably like a major issue but look
59:42 - even with that look how much of this i
59:43 - was able to
59:44 - work and i'm sure if i kept at this i
59:46 - would get it let's um
59:48 - let's go to videos i'm just curious like
59:49 - let's pick one of their sample videos
59:51 - like um like this moose
60:01 - and let's see how this works
60:05 - so if i like for example what if i want
60:08 - this tree
60:09 - like i'm going to do what is unexpected
60:11 - with this video
60:12 - and now do preview
60:20 - it's working well with that tree that's
60:21 - in one place
60:23 - uh how do i reset can i reset everything
60:26 - there's got to be a reset everything or
60:28 - maybe
60:29 - i can do this remove okay so i removed
60:32 - that
60:33 - now let's click on the moose
60:46 - whoa this is wild
60:51 - okay and now uh preview
61:03 - pretty amazing huh now
61:08 - oh i guess i was like where'd its feet
61:10 - go it's feet
61:11 - are gone because it's in the snow
61:14 - this is pretty amazing okay so i i
61:16 - wanted to show this
61:18 - because i want to sort of like figure
61:20 - out like what's something i could use
61:21 - this for
61:23 - so um if you have any ideas
61:26 - people i hope people will try this like
61:28 - actually one of the things that i've run
61:29 - into is every once in a while i've
61:31 - wanted to
61:31 - key myself out of a video that i had
61:34 - pre-recorded without the green screen so
61:36 - this is certainly a tool that i could
61:37 - use with that
61:38 - so anyway um i'm definitely curious to
61:41 - hear your feedback about this
61:43 - um and um um give this a try
61:47 - um and i'll return to this and try to
61:50 - use it a bit more
61:51 - in a future live stream okay
61:54 - um so the thing that i want to work on
61:57 - today
62:00 - uh is
62:03 - i want to work on
62:12 - okay i want to show some of the examples
62:14 - from um
62:16 - the nature of code that i've been
62:17 - working on i'm just looking at the chat
62:20 - here uh
62:26 - i'm gonna take just a short i've only
62:28 - have till like three so i'm gonna take a
62:29 - really short like
62:30 - literally just like a one minute break
62:33 - but before i take my one minute break
62:36 - i would like to thank
62:40 - today's sponsor of the coding train
62:45 - it is my friends over at
62:49 - brilliant um so what is brilliant
62:53 - um let me move over here to show you um
62:56 - one of um um just some of examples of
63:00 - what you can do on
63:01 - brilliant so first of all it's a new
63:03 - year i don't know if you know this
63:06 - but it's a new year and you might be
63:08 - like looking to start it's a little late
63:10 - maybe
63:10 - uh january 16th for new year's
63:12 - resolutions i'm not a big new year's
63:14 - resolutions
63:15 - kind of person but i do like to sort of
63:17 - start
63:18 - off a new year a little bit fresh um and
63:20 - get started
63:21 - like i'm doing now with the nature of
63:22 - code and so i think that
63:25 - um brilliant if you're looking for
63:27 - something new to sort of build into your
63:29 - life
63:30 - brilliant is something that you might um
63:32 - consider
63:33 - um thinking about it's a website it's an
63:36 - app it makes learning interactive
63:37 - accessible and fun
63:39 - so it's all based on problem solving and
63:41 - active learning so
63:42 - you all of the courses you can see the
63:44 - concepts visually and interact with them
63:45 - so
63:46 - it's another way of learning um the
63:49 - kinds of content that i do on the coding
63:51 - train
63:51 - but um without having to just sit and
63:54 - listen to somebody
63:55 - you can actually practice um practice uh
63:58 - through interactive exercises the thing
64:00 - that i really love about it is there's
64:02 - no tests
64:02 - no grades there's all these courses
64:05 - they're just
64:05 - they're just fun to try i constantly get
64:07 - stuff wrong um this uh what i'm showing
64:09 - you here on the screen right now is the
64:10 - geometry fundamentals course which is
64:12 - one of my favorite ones
64:14 - the two that i would really recommend
64:16 - that are kind of most
64:17 - um relevant to things that are on the
64:19 - coding train is one is the course on
64:21 - neural networks
64:22 - so if you've watched it in my videos
64:23 - about ai and machine learning and want
64:25 - to kind of dive deeper into that
64:27 - looking at the neural networks course on
64:29 - the brilliant website
64:30 - what i would really recommend you can
64:31 - see here here's an interactive example
64:34 - of um of a
64:37 - neural network recognizing digits um you
64:40 - can also
64:42 - look at oh and i just uh let me just
64:44 - bring this
64:45 - up here um this you know i constantly
64:48 - get in the comments of my videos
64:51 - uh do you have any courses on python
64:54 - i really want to learn python and so i
64:56 - don't
64:57 - but um brilliant has a course called
65:00 - programming with python which you can
65:02 - see you can actually type code
65:04 - into the lessons themselves test it run
65:06 - it um
65:07 - and there's there's this is actually
65:08 - something that i've been uh really
65:10 - excited to go through
65:11 - and kind of improve my knowledge of the
65:13 - python programming language itself so
65:14 - that i could eventually make
65:16 - um make videos so there's over
65:20 - 60 of these interactive courses in math
65:22 - science and computer science
65:23 - it helps you achieve your goals in stem
65:25 - starting with one small commitment to
65:27 - learning and building up to long-term
65:28 - challenge and growth
65:30 - brilliant will puzzle you surprise you
65:31 - and expand your understanding of the
65:32 - modern
65:33 - modern world so you can get started for
65:35 - free just by going to
65:37 - brilliant.org codingtrain um you can you
65:40 - can try it out and look at what's on the
65:41 - what's on the website
65:42 - um and then if you're interested in
65:44 - unlocking everything that brilliant has
65:46 - to offer with a premium subscription
65:47 - if you go through that link you will get
65:49 - a 20
65:50 - discount so one one of the new courses
65:53 - that they just launched that i was
65:55 - curious to highlight for a moment
65:56 - is the course called statistical
65:58 - statistics fundamentals
66:00 - so let me see here i haven't looked at
66:04 - this one
66:04 - at all i saw it in the uh information
66:07 - that brilliant sent to me
66:08 - this is a new course uh i saw some of
66:10 - the preview images like oh this is
66:12 - exactly some of the stuff
66:13 - i talk about in the introduction to
66:15 - nature of code so let's go through and
66:16 - let's just sort of see
66:18 - how well i do with just this first uh
66:20 - quiz
66:21 - all right so let's see how i want to
66:23 - show you a little bit about how
66:24 - brilliant works
66:26 - the mean or average of a set of numbers
66:28 - is the sum of the numbers over how many
66:31 - numbers are in the set okay
66:33 - so if i want to calculate the mean or
66:35 - the average of the numbers 3
66:36 - 5 and 10 i add them all together i
66:39 - divide by 3
66:41 - and i get 6 perfect so in the
66:44 - visualization below the purple dot
66:46 - above the line automatically oh
66:50 - is it um simon is correcting me
66:53 - is it not statistics fundamentals that's
66:55 - the newest course
66:57 - is it statistics one
67:00 - is that different simon simon is like uh
67:03 - always helping me out uh
67:05 - um i love how the audience helps me out
67:06 - with brilliant stuff but i'm gonna look
67:08 - at this anyway
67:08 - and then and then let me know if i if i
67:10 - if i'm in the wrong one simon how do i
67:12 - get to the correct one
67:14 - um but let's go with this one anyway
67:15 - because i love i like how this exercise
67:17 - looks
67:18 - in the visualization below the purple
67:19 - dot above the line
67:21 - is automatically shows the mean of a b c
67:24 - and d ah so like if i change
67:28 - if i change the number we can see how
67:30 - the average is changing look at this
67:32 - so this the one of the things i love
67:33 - about this is it's like oh i want to
67:35 - build this in p5.js
67:37 - now i don't know if this is exactly the
67:39 - thing i want to build but they're
67:40 - um every time i go through one of their
67:43 - exercises it's like
67:44 - especially though some of the geometry
67:46 - ones and that there's some uh
67:47 - physics related ones are always giving
67:49 - me ideas
67:50 - um um okay so um
67:54 - uh let's see let's go to courses simon
67:56 - is really telling me that there's one
67:58 - called statistics one
67:59 - so i'm gonna see if i can find it um
68:04 - browse all probability statistics and
68:08 - finance
68:08 - probability fundamentals statistics
68:10 - fundamentals
68:13 - i'm going to look i'm going to look here
68:15 - find this information
68:17 - statistics one yeah there i see i have
68:20 - the link
68:21 - uh brilliant.org
68:24 - slash courses uh advanced
68:29 - statistics
68:33 - dash i there we go
68:36 - this is the course that i was meant to
68:38 - find thank you simon for correcting me
68:41 - i was looking at an older design so this
68:43 - is their with their sort of newer design
68:45 - and newer
68:46 - animations so let's look at the first
68:49 - quiz here um let's go back for a second
68:53 - and read here decisions and judgments we
68:55 - made we make are based on limited or
68:57 - incomplete information
68:58 - amidst all this uncertainty statistic
69:01 - plays a special role
69:02 - so the first quiz is going to explore
69:04 - how probability is used in statistics to
69:06 - make
69:06 - informed decisions so we're looking at
69:10 - rupert
69:10 - here uh built a lucrative career
69:13 - convincing his audience that he can defy
69:15 - the very laws of nature but it's all
69:17 - sleight of hand and well-crafted
69:18 - illusions designed to fool the senses
69:21 - so when he hears about alberta the
69:22 - oracle who claims that she draws the
69:24 - answer
69:25 - to any yes or no question from
69:27 - supernatural sources
69:28 - he set out to determine the truth for
69:30 - himself
69:32 - rupert thinks alberta is just a good
69:34 - guesser right i'm using my clone
69:36 - clone wars voice again so he gathers a
69:38 - stockpile of yes or no questions that
69:39 - only he can answer and then heads out
69:41 - for magicians alliance hq
69:42 - one cold and foggy night to put the
69:44 - oracle out to the test
69:46 - okay in the oracle's parlor rupert takes
69:50 - a seat
69:50 - thanks his host for the opportunity then
69:52 - poses his first question
69:55 - suppose for the moment that alberto
69:57 - really does
69:58 - just guess the answer to every question
70:00 - she's been given by responding yes or no
70:02 - with equal probability
70:04 - what's the pro oh i think i'm going to
70:05 - get this one right i was so worried
70:07 - this is going to be too hard for me
70:10 - what's
70:11 - uh uh what's the probability that
70:13 - alberta answers rupert's
70:15 - first question correctly just by
70:17 - guessing by the way my kids who are
70:18 - currently in
70:19 - fourth and sixth grade probability is
70:21 - something that i always try to talk to
70:23 - them about
70:24 - um and it's really um it's a i
70:27 - love seeing sort of like i mean they're
70:28 - not really really young children i'll
70:30 - say that sort of child's eye view
70:33 - of how to make guesses according to
70:35 - probability and what kind of assumptions
70:37 - they make
70:37 - and they're actually learning about
70:38 - probability and fractions in school
70:40 - so this is actually this is great i
70:42 - should really go through this with them
70:44 - but um let's see what's the probability
70:46 - that alberta answers rupert's first
70:47 - question correctly just by guessing
70:49 - so i think this is going to be one out
70:50 - of two right if there's only two
70:52 - possible answers
70:53 - and you pick one randomly well one of
70:55 - them is correct one of them is wrong
70:57 - one out of two is correct let's try that
71:00 - correct and this one by the way 98 of
71:03 - people got this right
71:05 - um and one of the things i like about uh
71:06 - brilliant by the way is it
71:08 - um it's very kind to you uh and gives
71:10 - you like sort of positive encouraging
71:12 - fact there's nothing wrong in fact like
71:13 - one of my
71:14 - my happiest moments doing these kinds of
71:16 - things when i get them wrong
71:17 - so um ah and this is great it's talking
71:19 - about probability distributions
71:21 - so this is perfect um i'm gonna pause
71:23 - stop here because i want to take a break
71:25 - and get back to some of the stuff that i
71:26 - want to code today
71:28 - but you can see how this kind of
71:31 - content really just aligns with creative
71:33 - coding the kinds of concepts
71:35 - you think about when programming systems
71:37 - and visualizations
71:38 - and i hope that you'll consider checking
71:40 - it out and if you do check it out
71:42 - if you go to um brilliant.org
71:44 - codingtrain that lets them know that you
71:45 - found
71:46 - uh brilliant through the coding train um
71:48 - and uh helps me out a little bit okay
71:50 - so uh thank you so much i've lost the
71:53 - chat
71:54 - um and azam is saying i am only eight
71:57 - years old
71:58 - hi awesome welcome i hope it's not too
72:01 - late at night for you and you should be
72:03 - in bed go to sleep young
72:04 - person it's your internet dad telling
72:08 - you
72:08 - um but i'm so glad that you're here
72:10 - that's so kind of you
72:12 - um so i'm gonna literally just take a
72:13 - break that is
72:15 - um uh two minutes long
72:18 - um and i would encourage you to sign up
72:21 - for brilliant during this break
72:22 - and i'll be right back to get working on
72:24 - some actual code
72:25 - projects i got to work on again i got to
72:28 - work on my sort of like live streaming
72:30 - um plans i'll be back in just a minute
72:46 - [Music]
72:55 - [Music]
73:02 - do
73:09 - [Music]
73:41 - [Music]
73:44 - do
73:50 - [Music]
73:57 - [Music]
74:05 - [Music]
74:25 - all right i am back very short break as
74:28 - promised
74:28 - and i am going to do some coding now uh
74:32 - so um one of the things that i started
74:35 - um that i
74:35 - will the the thing that i'm working the
74:37 - most on right now
74:38 - uh let's just see if we can find this
74:42 - um this is what i'm looking at um
74:45 - this um this particular playlist
74:50 - um is a playlist of videos for the
74:52 - nature of code book
74:53 - that i was working on a year ago i got
74:56 - all the way
74:57 - up to uh chapter two and i started
74:59 - recording the first
75:01 - three videos for chapter three so the
75:03 - topic of chapter three if i go to the
75:06 - book
75:06 - um is oscillating motion and um
75:10 - so if i go to the web editor
75:14 - i can sort of um that i was using as i
75:16 - was recording the tutorials yesterday i
75:18 - could sort of
75:18 - pull up some of the examples real quick
75:21 - so for example
75:23 - the thing that i started with is just
75:25 - looking at
75:26 - how to deal with angular motion so how
75:29 - to keep track of an angle that you
75:31 - increment over time
75:32 - and use translate and rotate to spin
75:34 - something in p5 a very basic starting
75:37 - concept
75:38 - from there i moved on to
75:43 - um kind of adding the idea of angular
75:46 - velocity and angular acceleration
75:48 - so here as i move the mouse back and
75:50 - forth i can kind of as if i'm applying a
75:52 - force
75:53 - to spin this um so you can sort of see
75:56 - this is what this is what the video
75:57 - tutorials are going through
75:59 - um i also uh
76:02 - then i'm just looking at these uh nature
76:04 - of code angular motion
76:06 - kind of added that idea to these objects
76:08 - that are from the gravitational forces
76:10 - examples
76:11 - so these objects are turning and
76:12 - rotating based on how they're moving
76:14 - about this space not in a
76:16 - realistic way in a somewhat arbitrary
76:18 - way
76:19 - just recapping what's going to come up
76:21 - in these videos what was next from
76:23 - there i looked at how
76:27 - you can have something using uh
76:31 - using sort of thinking about angles with
76:33 - vectors how you can take those objects
76:34 - and have them
76:35 - point in the direction that they're
76:36 - moving so you can see that's happening
76:39 - here in this example all of these
76:41 - examples will be with the video
76:42 - tutorials
76:43 - i'm getting somewhere trust me i'm
76:44 - getting to a point of this
76:46 - uh and then i looked at how this is
76:49 - related to
76:51 - um kind of also this idea of like aster
76:54 - the of a
76:55 - of a asteroids like ship so if i can
76:58 - like
76:59 - if i have the angle that the ship is
77:01 - pointing i can create a vector from that
77:03 - angle
77:04 - and then apply a force in that direction
77:06 - and that's what this example
77:07 - is so um
77:12 - and i think um
77:15 - i think here this was also just another
77:17 - example that i worked on
77:19 - in order to be able to like turn
77:22 - something so um okay
77:26 - so what do i want to do right now
77:30 - in the very first video for this chapter
77:32 - i kind of talk about the overview of all
77:35 - the examples
77:36 - and where oscillating motion if anybody
77:38 - from any of the members
77:40 - who were tuning in yesterday you can
77:41 - help me remember i remember one of the
77:43 - things i
77:44 - said as an example is plucking a guitar
77:48 - string
77:49 - i think i also said waves so when the
77:51 - video comes out
77:53 - i want to be able to show some of these
77:54 - examples and have additional examples
77:57 - that i won't necessarily
77:58 - like make a video for but that will so
78:00 - that's one of the things i really need
78:01 - to work on right now
78:03 - um i want to see if i can get the sort
78:04 - of guitar string
78:06 - thing um the idea of plucking a string
78:09 - and having it oscillate like a wave
78:10 - pattern
78:11 - see if i can make that right now and so
78:14 - where i
78:15 - need to go to do that is i'm first going
78:17 - to go to
78:18 - all of the nature of code examples and
78:21 - i'm going to look for the spring example
78:24 - which is in see these uh
78:28 - chapter three eleven so this
78:31 - is my oh okay great so this is an
78:35 - example that i will be making a video
78:37 - about
78:38 - how to create this example
78:42 - so let's duplicate it i don't know if
78:44 - this is going to be a good base for what
78:46 - i want to do
78:48 - but let's do let's call this guitar
78:52 - string so i don't know why i have things
78:55 - like set frame rate in here this was
78:57 - made very long time ago let's change
79:00 - this to let
79:01 - it has this idea of a spring and a bob
79:06 - and the spring can connect the bob
79:09 - and then it can constrain its length and
79:12 - then i can draw it as a line
79:14 - display the bob so why i would i really
79:17 - would prefer
79:18 - and i probably should do this with toxic
79:20 - lips
79:21 - i don't know if that would be a cheat
79:23 - because ultimately
79:25 - what i want is for this uh just to have
79:28 - the idea of a particle
79:30 - and then i connect the spring between
79:31 - two particles
79:33 - so let's see let's see
79:36 - how i have an anchor for a spring ah
79:39 - okay the there's an anchor
79:42 - and then the force is calculated between
79:46 - the another object and the anchor so i
79:49 - think
79:50 - what this should be is
79:53 - i should i'm gonna rename this oh look
79:55 - how oh my god
79:57 - this is like the most ancient thing ever
80:00 - wow okay i'm gonna have to really redo
80:02 - these i haven't looked at this stuff in
80:03 - a while
80:05 - so i'm going to rename this to particle
80:09 - and i'm going to change it to a class
80:14 - and then this is going to be constructor
80:17 - so i have to
80:18 - convert this to be es6 classes
80:23 - um i don't need to drag this anymore i
80:26 - wonder if this is actually not a good
80:27 - base
80:28 - you know what i think i always want to
80:29 - start over from scratch to like remind
80:31 - myself this is helping me
80:33 - prepare for when i record the tutorial
80:35 - next week
80:36 - so i'm gonna i'm not gonna totally start
80:39 - but i'm gonna just get rid of
80:41 - this dragging stuff i guess maybe i
80:44 - should keep it
80:45 - to be able to test it no i'm gonna sorry
80:46 - i'm gonna keep it
80:48 - i'm gonna keep it i'm gonna make these
80:50 - things that i could drag around i have
80:51 - it in there there's no reason to delete
80:53 - it
80:53 - let's make the uh update function
80:57 - uh the apply force function
81:02 - um this constant the display
81:06 - function
81:09 - and handle click like do i click on it
81:13 - function
81:15 - so what you're watching me right now is
81:17 - literally just converting an old example
81:20 - which uh before there was such a thing
81:22 - as classes in javascript
81:24 - i wrote it in a different way and these
81:26 - little semicolons are bothering me here
81:28 - so i'm going to get rid of those
81:30 - and first thing i should do is just make
81:32 - sure
81:33 - it still works the only thing i changed
81:37 - now is this is now a particle
81:42 - um and
81:46 - this is still work uh particle is not
81:47 - defined
81:50 - uh why is that sketch line 16
81:54 - didn't oh i i renamed the file also okay
81:56 - so this has to be particle
82:00 - okay so this still works
82:05 - okay what i want to do now is
82:08 - basically i want to make i'm going to
82:10 - call something anchor
82:13 - and i want to make an anchor a new
82:16 - particle
82:18 - which is at width divided by 2 like
82:21 - 0 basically and the spring
82:27 - i want to permanently
82:32 - i want to change the way this works
82:38 - want
82:41 - i want to create the spring
82:44 - as a connection between the anchor and
82:47 - the bob
82:48 - without a separate function let's get
82:50 - rid of this constrain
82:51 - thing for a second um
82:55 - and
82:59 - we're gonna add anchor update
83:03 - um this is weird because
83:07 - i i did this in
83:11 - a very different way but let's just see
83:14 - if i can get this to work
83:19 - so now i probably should have started
83:21 - over
83:22 - to i think this is i'm gonna get so this
83:25 - is no longer
83:27 - a thing connect a and b
83:31 - so this and i i
83:35 - was
83:45 - my children were calling to me um okay
83:48 - so this dot a equals a
83:51 - this dot b equals b
83:55 - and then the update function is going to
83:59 - so i think the idea let's let's actually
84:02 - let's let's put it in
84:03 - the constructor so a spring should
84:06 - connect
84:07 - two particles
84:13 - and then in the update function i should
84:16 - calculate the force
84:24 - between the two particles
84:28 - and then that's all and then apply that
84:31 - force
84:33 - to both particles but
84:37 - it should be um
84:42 - it would it goes in opposite directions
84:45 - so copy the force
84:49 - to this one multiply by negative one i'm
84:51 - not sure if this makes sense
84:54 - we're gonna see again i think i'm a
84:56 - little hesitant about the way that i'm
84:58 - doing this
84:59 - um but um let's not worry about the
85:01 - constrain
85:02 - length right now um cannot read
85:06 - springline 82 i've got some like weird
85:09 - error
85:10 - uh in display
85:13 - i don't want to display
85:17 - the particles in here i want to
85:21 - display it as um
85:27 - a line between these two things
85:40 - okay i will be done in like about 20
85:42 - minutes and we'll come down i see it i
85:44 - see it i see it thank you
85:46 - uh
85:50 - oh what have i gotten i've got myself
85:51 - down a rabbit hole that i didn't mean to
85:53 - get myself down
85:55 - um okay
85:58 - this is all gonna come
86:01 - okay great okay
86:04 - we're back to something all right now
86:08 - let's see if i can get this constrain
86:10 - length
86:12 - to work uh minimum length maximum length
86:16 - so the the of the vector between the two
86:20 - is between this dot a and this dot b's
86:24 - position these are two particles
86:27 - and um
86:32 - reset the position and stop it from
86:34 - moving
86:36 - okay i can't do the constrain right now
86:38 - help me everybody
86:39 - i've lost my mind oh my god
86:43 - i should have started from scratch says
86:45 - everybody
86:47 - [Laughter]
86:49 - oh my god this is i definitely should
86:51 - have started from scratch
86:52 - i thought i was doing something much
86:54 - simpler than i ended up
86:56 - welcome to the story of my life all
86:58 - right hold on everything's gonna be okay
87:01 - we're gonna i'm gonna i'm gonna slow
87:03 - down for a second and i'm gonna get rid
87:04 - of the spring
87:06 - so i have two particles okay
87:09 - and i just wanna see
87:14 - those two particles
87:19 - for a second let's get rid of the spring
87:21 - stuff
87:23 - so there's going to be a spring like
87:24 - update function eventually
87:29 - and there's bob update bob
87:32 - display anchor update anchor display
87:35 - and um
87:40 - we're going to apply gravity to both of
87:42 - these
87:43 - okay great so this is what i was hoping
87:45 - to see
87:47 - all right when i run this sketch i see
87:50 - two particles
87:51 - both falling with gravity now they look
87:53 - like
87:54 - something i think they must have a
87:58 - oh there's a damping effect let me take
88:01 - out the damping effect right now
88:04 - great so that looks more there's no
88:06 - there's no damping no resistance
88:08 - they're both just falling and then the
88:10 - spring
88:11 - exists should be visualized as
88:14 - a line between those two so if i go here
88:17 - and say spring.display
88:21 - cannot read display of undefined
88:25 - let me create the spring
88:28 - the spring should just be connecting the
88:31 - two particles
88:32 - and have like a rest length it's going
88:34 - to need like a spring constant
88:35 - that's what it should be this idea of
88:37 - the spring connecting two particles by
88:39 - the way i'm going to totally redo this
88:40 - chapter i'm realizing
88:42 - because this is the way i should write
88:43 - the example there's two particles
88:46 - and then the spring connects them and so
88:48 - the constructor
88:50 - should it doesn't need an xy
88:53 - it needs a rest it needs two particles
88:56 - and a rest length
89:00 - this should also be a variable so this
89:02 - should be like
89:03 - k like the spring constant should be
89:06 - something i pass
89:06 - in and these are the two particles
89:12 - okay and then so i'm kind of starting
89:15 - over from scratch and away so i'm going
89:17 - to pass in the 0.2
89:20 - okay so now i have this idea of two
89:22 - particles and a spring now one of the
89:24 - things i definitely want to do is i want
89:26 - to say anchor dot lock
89:28 - so i want to have a function in the
89:29 - particle class
89:34 - where i'm going to say this dot locked
89:37 - is false and then if i call the lock
89:40 - function i'm going to say this dot
89:42 - locked is
89:44 - true i'm going to make it so that this
89:46 - particular
89:48 - object cannot be
89:51 - um cannot be moved it's like locked it's
89:54 - like anchored
89:55 - so the anchor i want to lock and if
89:57 - that's the case
89:58 - i think what i basically would say is
90:02 - the update function would be rendered
90:04 - irrelevant so
90:06 - this dot if it's not
90:09 - locked
90:13 - then update its location so now what i
90:16 - should see
90:17 - is right the top one is locked but the
90:20 - bottom one's just stretching out because
90:21 - the string is not act the spring is not
90:24 - activated
90:24 - so now in the update function
90:31 - this should apply the spring force
90:34 - to both objects a and b
90:39 - so what would happen now if
90:42 - i were to activate it
90:49 - a is not defined okay so this is the
90:52 - function i need to work on to get this
90:53 - spring force
90:54 - to work um so in
90:57 - update spring
91:00 - line 20 ah it's this dot a
91:04 - position this dot b's position
91:08 - okay and it's this dot a b this dot a
91:11 - apply force
91:13 - okay interesting um i think
91:16 - maybe it's the other way around
91:19 - yeah all right yes
91:22 - so you can see the spring is working
91:25 - it's activated now
91:26 - is my drag working yes it is
91:29 - okay great so now there's no damping
91:32 - there's no damping uh so it's kind of
91:34 - gonna spiral out of control that's one
91:36 - thing i need to think of
91:37 - but also uh
91:42 - um
91:44 - there is um
91:47 - damping is something i need to think
91:49 - about and
91:51 - what's the other thing i need to think
91:53 - about oh the length constraining i want
91:55 - to see if i can get this
91:56 - constrained spring to work so how would
91:59 - i do that
92:01 - so what if i wanted to actually
92:04 - call here like
92:08 - spring constrain length
92:12 - between 10 and 200 so this is
92:15 - totally artificial but i'm just curious
92:18 - what happens and maybe i don't need this
92:21 - what happens if i um
92:25 - were to kind of constrain it so no
92:27 - matter what i do
92:29 - it can't um it can't go beyond that
92:33 - and maybe this is not let let's not work
92:36 - on this right now let's assume i don't
92:38 - need that for what i want to do
92:40 - so first thing i want to do is just sort
92:41 - of see what happens
92:43 - if i don't lock the anchor
92:47 - the problem is i need to be able to
92:48 - catch it
92:53 - okay so some interesting stuff is going
92:57 - on
92:58 - i i also like let me um let me get rid
93:00 - of gravity
93:03 - like i don't actually want gravity here
93:05 - that was interesting to add
93:08 - yeah so this is doing what i expect but
93:11 - something weird is happening
93:14 - um it's like a little glitchy
93:17 - so why is it a little glitchy
93:20 - handle click handle drag ah
93:24 - so i think i should be saying bob dot
93:26 - lock
93:29 - well let's see uh particle
93:35 - handle click dragging offset
93:39 - handle drag it's moving the position
93:42 - uh i think and um
93:47 - i think what i want to do let me work on
93:49 - this lock and unlock
93:51 - let me make an unlock function
93:55 - i mean it's a little silly i could just
93:56 - have one function that i pass in true or
93:58 - false
93:59 - and we have a new member hunter i need
94:01 - to give hunter
94:02 - their random number in a moment
94:06 - um so i think
94:10 - i think also i need to
94:15 - like i think if it gets locked
94:19 - i should be clearing its velocity and
94:22 - acceleration
94:28 - like why is it on why am i losing it
94:34 - hold on so i mean this is just an
94:35 - interaction thing which isn't super
94:37 - important to what i want to do
94:40 - handle click handle drag stop dragging
94:43 - oh only so i think
94:46 - actually why do i have this in mouse
94:48 - dragged i don't think i want that
94:50 - i think that's the issue the particle
94:58 - is if it's being dragged yeah i want to
95:01 - do this always
95:02 - so um so i want to not just when the
95:06 - mouse is dragging
95:07 - i actually want to all i don't know why
95:08 - i had that you sort of think it would
95:10 - make sense
95:11 - but i want to be able to do this yeah
95:14 - this is what i want to do
95:15 - okay so now i can move this around
95:19 - i think i'm going to put some damping in
95:23 - because and there's probably a more
95:25 - thoughtful way to do this
95:27 - but let's add the
95:31 - um
95:34 - let's add this damping back in let's
95:37 - also say that when
95:42 - i am
95:42 - [Music]
95:47 - when i'm dragging it it's also
95:50 - locked so i think this is redundant now
95:54 - so i think i have the same variable
95:56 - doing the same thing
95:57 - but let me just lock and unlock it also
95:59 - when i'm dragging it
96:02 - yeah come back
96:05 - all right this is great this is what i
96:08 - want because you're going to see what i
96:09 - want to do in a second
96:14 - so i can move this around and then you
96:15 - can see they're like bouncing off each
96:17 - other
96:18 - okay this is great this is perfect
96:20 - exactly what i want nice little
96:21 - dampening
96:22 - the reason why i want to do this and
96:24 - again i need to make a proper video
96:25 - tutorial that builds this whole thing
96:27 - up but i just wanted to try to like make
96:29 - the example here during the live stream
96:31 - the reason why i'm doing this is now in
96:33 - the main sketch
96:34 - i should be able to and sorry that i'm
96:37 - like in front of the
96:38 - code here um
96:41 - see if i can um which way do i move over
96:44 - this way
96:45 - move over a little bit this way uh
96:48 - let me see if what i can do here is
96:52 - make an array
96:58 - of particles and springs
97:03 - and then i'm going to say particles
97:06 - index 0
97:07 - is this one particles index 1 is this
97:10 - one
97:13 - the spring is connecting
97:16 - particle 0 and particles
97:21 - particles one
97:27 - okay and then
97:31 - for let p of particles
97:36 - p dot update p dot display
97:42 - and then
97:46 - for let s of springs
97:54 - s dot display s dot update
98:02 - and then p handle drag
98:06 - and then here also for let
98:09 - p of particles
98:20 - all right so let's see here now
98:26 - okay something went wrong i'm able to
98:28 - drag these around
98:30 - but i lost the spring force
98:36 - ah springs index zero there we go
98:42 - and i can drag either of them and
98:44 - they're always attached with this spring
98:48 - there's no constraints should the spring
98:51 - update before displaying you know
98:53 - yes um to be consistent i think that
98:56 - makes sense but ultimately
98:58 - it's a draw as a loop so it doesn't
98:59 - really matter but
99:01 - now what i should be able to do and let
99:03 - me just change this
99:05 - just so we can sort of see things better
99:08 - and like the particle is so large
99:11 - i want to um where is displaying the
99:14 - particle oh this dot mat
99:16 - there's a mass going on here uh
99:19 - that's kind of not being used right now
99:21 - in this example but that's fine let's
99:23 - make this
99:24 - 8.
99:27 - okay so the reason why i'm doing this
99:29 - you'll see in a second
99:31 - is i want to
99:36 - do this in a loop now so i want to
99:40 - create
99:44 - can you see the code i think you can i
99:46 - want to say
99:48 - let's make 10 let's just make five
99:50 - particles
99:53 - and let's do them actually two at a time
100:00 - and we're going to say
100:03 - the first particle i
100:06 - the next one i plus one
100:10 - is you know what actually
100:15 - let's do this let's make five
100:18 - oh no no no no no i always need to
100:22 - connect the previous to the next one so
100:24 - i'm not going to do them two at a time
100:30 - so i'm going to start with that there's
100:32 - a previous particle but at the beginning
100:33 - it's no
100:35 - i'm going to say if previous exists
100:39 - then let make a spring
100:43 - which connects previous to particles
100:46 - index i
100:47 - the one that i'm just making separate
100:49 - them by 50 with this
100:51 - okay so the idea here and then previous
100:54 - will equal particles index
100:56 - i so in my loop i'm making five
100:59 - particles um where i'm connecting
101:04 - connecting each one to the previous one
101:07 - and their where their location should be
101:10 - is i
101:10 - like times 50.
101:17 - okay so that kind of makes sense
101:20 - but none of these are okay all right
101:22 - because now i need to put the springs
101:28 - into the array and
101:31 - get rid of this okay so now i should
101:34 - have
101:35 - yeah there we go this is what i was
101:37 - hoping to create
101:39 - awesome now i should really be using
101:42 - like
101:43 - a proper verlet physics engine that's
101:45 - going to be less prone to error
101:47 - but even just with the sort of basic
101:48 - idea this works
101:50 - and now what i would like to do is
101:54 - let's say let's make the height 700 um
102:00 - your height divided by 50
102:04 - i'm gonna do that many
102:08 - um
102:08 - [Music]
102:12 - that many and then i want to
102:17 - take the first one and say lock
102:21 - and the last one
102:24 - and say lock
102:30 - oh wait it didn't lock how come they
102:33 - didn't lock
102:35 - uh is my lock not working
102:40 - oops
102:52 - oh no particle locked
102:55 - equals true if it's not locked
102:58 - do all this otherwise that
103:06 - oh ooh this is bad
103:11 - so i'm uh the lock is a permanent thing
103:15 - that's not
103:16 - okay i got it so this
103:19 - should be if it's not locked
103:23 - and it's not dragged i mean
103:27 - not currently being dragged
103:31 - so if either of these are the case so
103:33 - locked and dragging are kind of
103:34 - different
103:36 - and when i click on it uh
103:39 - handle click uh the lock is a separate
103:43 - thing
103:44 - uh that's automated but lock is
103:47 - something that i'm doing
103:48 - okay i think this should fix that
103:57 - all right so the top are locked
104:02 - so i want to make this like i'm plucking
104:04 - a guitar string so they're gonna have to
104:05 - be like
104:06 - much much tighter
104:10 - right like how do i make it
104:14 - how can i get this to be like plucking a
104:16 - guitar string so i probably need that
104:17 - constraint
104:19 - or like what would
104:24 - you know what if um
104:27 - like connect them all to one single one
104:31 - that's interesting offset equals 50.
104:35 - so if i do this
104:38 - offset is now a variable
104:44 - so what if i make the offset 10.
104:51 - what if i make the offset 150
104:56 - so and now okay so what will this do
104:59 - like what if i make this one
105:06 - that's better it's like tighter
105:11 - and 25
105:20 - it's kind of a cool example but it's
105:22 - nothing like plucking a guitar
105:23 - string the springs um hold on
105:28 - so me i am sumi is writing a comment
105:31 - um the springs should be in the default
105:34 - state
105:34 - be quite stretched instead of having
105:36 - their natural length be the offset
105:38 - to be much smaller that makes sense so
105:41 - in other words
105:41 - they're uh what if i make their rest
105:45 - length
105:45 - half that makes a lot of sense let's go
105:50 - back to 50.
105:54 - yeah and what if i did that in even more
105:56 - extreme way
106:00 - yeah that's more like a guitar string
106:01 - that's a little bit better
106:04 - um
106:08 - that's helpful in pre increase the
106:09 - spring constant
106:11 - like how much can i really increase that
106:15 - spring constant
106:25 - like
106:28 - so one thing also that i can do now is
106:33 - not display the particles anymore
106:38 - there we go
106:44 - it's hard for me to click on anything
106:45 - because i don't know where to click
106:47 - that's pretty good actually it's better
106:50 - than i thought i would get here
106:52 - um let's try making the offset less
106:55 - i'm being told
106:59 - whoa that's a cool wave oh that's
107:02 - wild actually this is really this makes
107:05 - me want to do
107:06 - the following by the way
107:14 - to like sort of see this wave
107:18 - all right i'm gonna um
107:21 - paste this into um
107:25 - discord if you're not in the discord um
107:28 - you should join up uh here's a link to
107:30 - joining the discord into the chat
107:32 - um but um you should be able to get this
107:35 - code right now
107:36 - if people want to work on trying to get
107:37 - it very guitar-like
107:40 - i would appreciate that um and then i
107:43 - will be able to uh
107:44 - capture that to go into the beginning of
107:46 - the video let's see um
107:48 - let me go back let me let me work on
107:50 - this a little bit more i've got to
107:51 - finish up here it's three o'clock
107:53 - um that the the uh cooking the baking
107:56 - class ends it's time for our
107:57 - afternoon tea but let's see um
108:00 - let's see here let me go back to keeping
108:03 - them
108:04 - further apart
108:07 - and let me see how much
108:11 - and i'm just going to
108:16 - take that away that was an interesting
108:18 - let's let's oh this is
108:20 - irrelevant let's see how much
108:24 - i can push that spring constant
108:30 - um let's like make it five i think
108:32 - that's probably gonna be
108:34 - make it go crazy that's pretty good
108:44 - six
108:46 - i can't see where to pluck it yeah it's
108:49 - pretty good
108:54 - um all right let's uh let's
108:58 - change something here whoops
109:05 - um and let's change this to
109:13 - i just want to make it horizontal
109:16 - wait what just happened
109:26 - ah
109:32 - i'm a little confused why you don't just
109:33 - use the force to set the amplitude of a
109:35 - sine wave
109:37 - draw the sine wave instead of the line
109:38 - yes so i
109:40 - i i do want to cover sort of like using
109:42 - a sine wave but i was just trying to do
109:44 - this with spring with the
109:46 - actual spring force just to see how that
109:47 - would go i have to just guess
109:49 - where's the particle um so this is great
109:53 - i think that i can
109:54 - um um
109:58 - yeah i think that i can uh this is going
110:00 - to be good enough
110:01 - for just like the quick example that's
110:03 - going to be shown in the intro video
110:06 - um i'm curious to like how far i can
110:08 - push
110:11 - like the stretch length
110:16 - i think i need to you know what i should
110:18 - do i have an idea
110:21 - if mouse is
110:24 - pressed display
110:29 - the particle
110:33 - so i can now i can see where they are
110:38 - if you wiggle it reasonably fast you can
110:39 - get standing waves at multiples of the
110:41 - bass frequency quite easily
110:43 - anyway i'm happy with this right now
110:46 - um this is kind of this is basically
110:48 - what i wanted to do
110:50 - um just get like a quick example of
110:53 - something like this
110:54 - um which is perfect um i wonder if you
110:57 - could make an object drop on top of it
110:59 - like a trampoline
111:00 - that's a great idea that's a great idea
111:03 - anyway so i hope that people uh
111:06 - can play with this and make something
111:07 - kind of fun with it uh this will be
111:09 - an example of this will be coming in my
111:10 - videos honestly if this is
111:13 - trying to make this i really should just
111:14 - use toxic libs which is a
111:17 - library that's got this kind of physics
111:19 - engine built into it i don't know why
111:21 - this is
111:21 - this is very um my one of my kids
111:24 - homework assignments for their like tech
111:26 - class was to make
111:27 - an oddly satisfying video and this is
111:30 - very
111:30 - oddly satisfying um so i will i'm going
111:33 - to save this
111:35 - and come back to this later okay um
111:38 - i have to go i haven't been doing a good
111:42 - job of showing community contributions
111:44 - it's something i need to get back
111:45 - into um maybe uh let's show let's uh i'm
111:49 - gonna be leaving in the next
111:51 - be um turning off the stream in the next
111:53 - few minutes this was kind of like the
111:54 - main thing that i wanted to work on
111:56 - um and hopefully people will play with
111:58 - this example and make some stuff
112:00 - um but let me just quickly
112:03 - um get our wheel here um because
112:06 - why not look at one thing that somebody
112:08 - from the community has made
112:10 - um we can spin this wheel
112:14 - oh you are not getting the sound effects
112:19 - quad tree and flocking simulation
112:22 - let's take a look at this one so by the
112:25 - way if you're wondering what's going on
112:27 - in all in just about every single um
112:30 - video that's on the coding train website
112:32 - um if you go to the page for the video
112:35 - there's a place where you can add your
112:38 - own
112:38 - version of the video and you can see for
112:40 - example for this one
112:42 - nobody's added one so this one is
112:43 - totally blank and if you add it
112:45 - it gets added to a database again we've
112:48 - really got a lot of work to do to get
112:50 - all these systems talking to each other
112:52 - that i can then pick one randomly and
112:54 - feature it in a live stream
112:55 - i aspire to do much more of this but i'm
112:57 - just going to do one right now
112:59 - this is created by ernst schmidt the
113:01 - original challenge is the flocking
113:03 - challenge
113:04 - and if we click over here we're going to
113:05 - see hopefully this is going to load
113:09 - oh wow so this is looking at my flocking
113:13 - video and
113:14 - uh presumably and adding the sort of
113:16 - quad tree which is a way
113:18 - to make it more oh and hunter park's
113:20 - random number yes
113:22 - 100 parks thank you for remembering i'm
113:25 - going to do that before i go
113:26 - this is a wonderful methodology
113:30 - for improving performance in any type of
113:33 - system
113:33 - where every object has to check the
113:35 - location of every other object so what
113:37 - the quadtree is doing
113:39 - is it's allowing each one of these boyds
113:41 - to only look at their neighbors that are
113:43 - registered in one of these cells that's
113:44 - near to them
113:45 - without that quad tree um
113:48 - you know especially if i up the unit
113:51 - count to 600 this is amazing by the way
113:53 - i need to remember this when i'm
113:55 - demonstrating flocking
113:56 - because i'm trying to show all of these
113:58 - different behaviors
114:00 - and uh the capacity and how to make this
114:02 - work this is this is incredible this is
114:04 - like everything i ever wanted
114:05 - in my own flocking quadtree example
114:09 - big train whistle shout out to um
114:14 - ernst schmidt who created this
114:16 - ernstschmidt.com
114:18 - is their website we can take a look at
114:20 - it
114:21 - and boy everybody should check out ernst
114:23 - schmidt's website
114:24 - um wild this is that's really incredible
114:26 - work thank you for that
114:27 - i'm hoping somehow the universe will
114:29 - help me remember when i go to make the
114:31 - videos about flocking that i
114:33 - can show that example really terrific
114:35 - okay i can hear my children yelling to
114:37 - me
114:37 - so couple last things before i go first
114:42 - oh wrong wrong button
114:45 - hunter parks
114:49 - thank you so much for your membership
114:52 - and support oh my god this desk i need
114:54 - to buy a new desk people anybody have
114:55 - any desk recommendations
114:57 - can you this is like about to like
114:58 - totally collapse everything's gonna just
115:00 - fall and crash to the ground
115:01 - i want a nice standing desk that they
115:03 - can move up and down um
115:05 - your random number is hunter
115:10 - page 273 column zero
115:13 - row thirteen thousand six hundred
115:14 - fifteen forty nine thousand
115:17 - and eighty uh that's your random number
115:20 - hold on to that random number and i am
115:23 - now
115:23 - going to show you all very quickly
115:27 - two quick things
115:30 - um that i am looking for contributions
115:33 - and help with
115:35 - let's go to the desktop
115:38 - let's go to whistles
115:42 - and um
115:47 - it's not uh all right hold on everyone
115:50 - let's go to github.com codingtrain
115:55 - i've gotta go 306. t time
115:59 - um repositories
116:05 - random whistle here we go this is
116:07 - probably the same as what i've got but
116:10 - just in case
116:17 - so let's take a look at this in visual
116:19 - studio code this is uh
116:22 - that's fine i can look at everything on
116:24 - the desktop here this is a project
116:26 - which basically um what it does is
116:30 - and let's uh does it have a note server
116:32 - involved with it i can't remember
116:33 - it's just yeah no it doesn't um
116:37 - what what are you kidding me
116:41 - um
116:52 - web server prayer okay working what this
116:56 - website does is
116:59 - uh so what was the random number there
117:00 - uh somebody give me uh let's say hunter
117:02 - park's random number was
117:04 - somebody quickly i could scroll to the
117:06 - past chat give me one of your random
117:07 - numbers
117:09 - anybody from today whether it's uh abe
117:12 - uh
117:12 - [Music]
117:16 - um etc i need a random number i need a
117:19 - random number
117:22 - you guys are so far behind me in time
117:24 - it's no problem
117:29 - waiting waiting waiting waiting waiting
117:31 - i'm gonna get one drum roll please
117:41 - chad come on
117:44 - 49 080 thank you hunter so 49
117:48 - 080 was hunter's random number
117:51 - so now when i click generate what this
117:54 - is going to create is a random walk
117:57 - pattern that's been seated with that
118:00 - particular random number
118:02 - so this is hunter park's
118:06 - unique random walk pattern and where
118:08 - this is going to go
118:11 - is i had did i have this video
118:15 - under downloads on your desktop um
118:20 - shoot do i have this
118:25 - this is all from i showed it last
118:28 - stream i wanted to show that is this it
118:32 - yeah i think this is it yeah there we go
118:34 - so this is going to go
118:37 - on to and let me zoom ahead so the idea
118:40 - is i'm making these train whistles
118:43 - uh for members and that
118:46 - this pattern will be generated uh it was
118:48 - downloaded here then it will be laser
118:50 - etched
118:51 - onto this particular uh whistle and
118:54 - sent out um to the member now
118:57 - at the moment uh this is quite a a it's
119:01 - not that expensive but quite a process
119:02 - for this so i'm just
119:03 - giving this for people i think it's at
119:04 - the conductor's level um but eventually
119:07 - i'd like to give this to all members and
119:08 - everyone in the world should have their
119:10 - own train whistle but that's what's
119:11 - going on here so what i would really
119:13 - like
119:13 - is help with this repo i mean this
119:15 - website needs to have some new features
119:17 - for example it needs to be explained
119:19 - what it's doing designed a bit more
119:21 - nicely
119:22 - it needs to have some kind of database
119:24 - associated with it where members can
119:26 - keep track of their numbers and see
119:27 - their patterns
119:28 - maybe i want the code snippet to also be
119:30 - generated as part of it
119:31 - so if you would like to contribute to
119:33 - this um
119:34 - oh and of course it's on um there
119:38 - there's a readme here thank you to
119:40 - violet who put this together
119:42 - there's some suggestions for things
119:43 - we're looking to fix
119:45 - um and um
119:48 - that um and also i think it is
119:52 - live using github pages so i
119:55 - probably should add a link just to the
119:57 - readme of where it is but if i go
119:59 - under settings or if i just go to uh
120:02 - coding train dot github
120:05 - dot io slash random
120:10 - whistle there we go you'll see it here
120:13 - um so this url so let me paste this into
120:16 - discord
120:17 - so i would love for folks i meant to
120:18 - work on this more during the live stream
120:20 - today
120:21 - but and like add some features or chat
120:23 - about it but
120:24 - um uh obviously i didn't get to that
120:27 - so i just wanted to quickly show that
120:29 - for anyone who's still watching
120:31 - uh please come in and help with that the
120:34 - other thing i wanted to mention that i
120:35 - did
120:37 - um uh if i
120:41 - go back here to
120:44 - uh gump 500
120:49 - what's what's the chance no this is not
120:53 - gonna okay
120:53 - so um
120:57 - one of the things that i did i'm gonna
120:58 - just show you this that i learned
121:00 - i taught myself and i would like to make
121:02 - some videos about oh there is a dot env
121:04 - file there
121:04 - hold on a sec everybody okay no
121:09 - it doesn't have what i need in it um
121:13 - i have been um learning how to
121:17 - uh work with uh mongodb i have some
121:20 - videos on firebase as a database as a
121:22 - service
121:22 - so i got it to work this
121:26 - again people have no idea what i'm
121:27 - talking about but this was a project i
121:29 - worked on last live stream
121:30 - and i think it's live hosted via glitch
121:34 - at gump 500
121:38 - let me go to um let me just open it up
121:41 - on glitch
121:41 - i'll show it to you there yep
121:49 - so what this does
121:53 - i know you can't see it yet i'm going to
121:55 - show it to you in a minute
121:58 - is we come back here
122:03 - this project which is on github but also
122:05 - hosted on glitch
122:07 - it is basically keeping track of anyone
122:09 - on twitter
122:10 - who posts a message with the uh
122:14 - a certain number of miles that they've
122:15 - run
122:17 - and um um and then it keeps track of
122:21 - that miles and it's part the
122:22 - that number of months are uh i bring i'm
122:24 - a little brain dead all of a sudden
122:26 - so if i go to twitter and look at uh
122:28 - forest
122:29 - 500 um let's go to um
122:33 - i think this is where i was
122:34 - experimenting with it so if you use this
122:36 - hashtag
122:37 - gump500 here we go forrest gump 500 this
122:40 - is just
122:41 - a initiative for people to motivate
122:44 - themselves to run 500 miles in one year
122:46 - and i'm really trying to participate in
122:48 - this
122:50 - and so um
122:53 - i wanted to build something that could
122:54 - help keep track of people who are
122:55 - participating in this
122:57 - so basically if you go and i'm
123:00 - let's just let's do an example right now
123:02 - if i say tweet
123:04 - gump 500 and i ran actually today i did
123:08 - run i ran three miles today
123:11 - i'm going to tweet this right now i'm
123:13 - going to go back to this project
123:15 - i'm going to look in the logs it's
123:17 - listening to twitter there you go
123:19 - it just r it got this tweet it
123:22 - noted the time um it added oh i don't
123:26 - know why it got .1 miles there's a
123:28 - mistake in it right now
123:30 - why did it get point one out of three
123:32 - miles
123:33 - um and it uh added it to the database
123:37 - it found the document in the database
123:39 - and that matched the criteria and
123:41 - updated it
123:42 - and then now if i refresh this oops i
123:46 - didn't need to refresh the whole project
123:47 - i meant to just refresh the web page you
123:50 - can see that it went to 3.1 miles
123:55 - i'm not sure why it got point one so
123:56 - there's a mistake in it currently
123:59 - um so um
124:02 - so again i wanted to work on this more
124:04 - because i want to have like a nice
124:05 - visualization
124:06 - more error handling i want to figure out
124:09 - way for people who are developing it
124:11 - to be able to work with like a local
124:13 - database that's just a sample database
124:15 - um so but i've run out of time
124:18 - i'll have to come back to this on
124:20 - another live stream but these
124:22 - are um these are two sort of like
124:24 - community projects that i'm looking for
124:26 - help and contributions come and join the
124:28 - discord it's a great place to discuss
124:30 - this stuff
124:31 - um and all of that
124:35 - all of all the things so stay tuned this
124:38 - is it this is the end
124:39 - of today's stream um
124:42 - i'm looking for my goodbye song
124:47 - thanks for tuning in to today's coding
124:49 - train live stream
124:51 - next week on the cutting train i'll be
124:53 - back talking about
124:54 - more things like i'm talking about right
124:56 - now um
124:58 - oh it added three miles yeah
125:02 - hold on hold on let me see people are
125:04 - telling me it was not a mistake
125:10 - ah okay this was not a mistake
125:13 - it's finding the this is a console log
125:16 - that's finding
125:17 - this particular user and showing what
125:20 - was there previously
125:21 - and it doesn't show that's before it was
125:23 - updated so if i did
125:25 - another tweet
125:28 - um right here people are replying to me
125:31 - and if i said
125:34 - um add two more miles to my toto
125:38 - total oh boy i don't know i don't think
125:42 - it will work if i put more in there
125:44 - i have to say too much the regular
125:45 - expression tracking is not so
125:47 - intelligent
125:48 - so now if i go there let's see if that
125:51 - comes up
126:02 - did i not did i forget the oh there it
126:03 - is sorry ah now we see
126:05 - yes that was last saturday 0.1 miles
126:08 - then this one so now it should be the
126:10 - total should be 5.1
126:13 - and the total is 5.1 so i have no way to
126:17 - um for a user tweeting from their
126:18 - account to subtract miles
126:20 - that's something i should definitely add
126:22 - um just to set the total like somebody
126:24 - might be like joining this initiative
126:27 - and
126:27 - again this is all honor systems so
126:30 - somebody could just tweet
126:31 - like this person did i ran 500 miles
126:34 - like i don't know who you're what you're
126:36 - so i don't know how to deal with some
126:38 - sort of form of moderation
126:39 - this is just sort of an honor systems
126:41 - thing but um but i would like to add a
126:44 - feature where if you said like
126:46 - subtract miles from my total um
126:49 - or maybe just set the total two so if i
126:52 - were joining it right now but i'd
126:54 - already run
126:55 - 30 miles like 10 times three miles each
126:57 - like i wouldn't want to have to tweet
126:59 - 30 10 times so there should be like a
127:01 - set total
127:02 - so those are things i want to add to
127:04 - this but really what i would love is
127:06 - some nice visualization stuff and then i
127:09 - gotta
127:10 - i think smarter every day is kind of
127:11 - running this initiative i haven't
127:13 - contacted him to see if wants to like do
127:16 - anything official with it i mean
127:17 - using the hashtag it could also set up a
127:18 - twitter account where you at mention it
127:20 - it's more of a bot
127:21 - that's listening to at mention and
127:22 - replying but those are some things that
127:24 - i'm interested in people
127:26 - um adding oh i gotta go for tea time i
127:28 - have ten
127:29 - i'm 20 minutes late already for tea time
127:32 - um just looking to see
127:33 - so um so stay tuned for new nature of
127:37 - code videos coming out
127:38 - i think to be honest i might that's my
127:40 - focus i might be
127:41 - the live stream should be about two or
127:43 - three per month they're not going to be
127:45 - every week
127:45 - i don't know what day yet um so stay
127:48 - tuned
127:49 - join the discord um if you
127:52 - one thing i wanted to mention because a
127:53 - lot of people are asking how do i know
127:55 - when you live stream
127:56 - so uh let me go into the discord
128:00 - um this is where i post links to things
128:02 - so for example
128:03 - i should right now post a link to this
128:08 - um gump 500 project
128:13 - um let me post that into discord but if
128:16 - you're looking to get notifications for
128:18 - when i'm live streaming
128:20 - this is what you want to do you want to
128:21 - join the discord
128:23 - and subscribe i don't use an at everyone
128:26 - so i
128:26 - you opt in to these notifications but i
128:30 - post updates here pretty frequently
128:32 - about my schedule
128:33 - and for example like today it was very
128:36 - last minute
128:36 - but i just said live stream incoming in
128:38 - 20 to 30 minutes
128:40 - so this is where um so somebody if
128:42 - somebody could remind me how you
128:44 - um subscribe to the notifications i
128:47 - think it's just
128:49 - like if i go to um
128:52 - i want to go to a channel that nobody
128:54 - can post in but me just for a minute
128:56 - i'm just going to go into useful links
128:59 - um
129:00 - like i think i'd say like i think it's
129:03 - just like exclamation point subscribe as
129:05 - the command
129:06 - yeah removed so that removed the
129:08 - notification for me
129:10 - so i want that back so i'm gonna
129:13 - subscribe and then i'm just gonna delete
129:14 - these messages i'll do that in a minute
129:16 - because they don't need to be here in
129:17 - this channel
129:18 - but this is how um you subscribe to get
129:20 - those notifications
129:22 - um thank you to the streambot team who
129:24 - maintains
129:25 - this uh discord bot in the coding train
129:28 - um discord and if you want to learn how
129:31 - to make your own discord bot
129:33 - might i suggest going to
129:36 - thecodingtrain.com
129:37 - under learning under discord bots this
129:40 - is my whole set of there's now
129:41 - six videos uh stepping you through how
129:44 - to
129:44 - make your own discord bot with no.js i
129:47 - do have some more that i want to make
129:48 - we'll see if i get to them but that's
129:50 - coming
129:53 - all right everybody thank you for tuning
129:55 - in
129:56 - you are wonderful i love you all see you
129:59 - next week on well i don't know if i'll
130:01 - see you next week but see you next time
130:03 - on the coding train all right goodbye
130:04 - everybody
130:06 - as always i always forget that this stop
130:08 - this stop this stop this stop
130:10 - i'm gonna do this stop this stop i'm
130:12 - gonna do this
130:19 - [Music]
130:26 - this dot
130:32 - [Music]
130:48 - [Music]
131:07 - all right i've got to shut everything
131:08 - down everybody i'll see you next time
131:10 - goodbye never forget this dot
131:13 - somebody composed that song for me

Cleaned transcript:

do so so do do hello everyone doing a quick audio check how's my sound can you hear me all right um i'll be starting in 2 minutes and 30 seconds do do me do wow that is quite a powerful train whistle good afternoon and welcome to a special well it's not so special this is not gonna be anything special whatsoever but it is a saturday edition of the coding train with me dan i'm excited to be live here with you i made the decision to come and do this live stream about 30 minutes ago so i apologize for the sort of last minute um notice i do i really do need to do one of the wonderful things about having uh sponsors of the coding train i want to thank today's sponsor of the coding train oh and i have to go over here to do this um brilliant brilliant.org is a wonderful interactive learning website for lifelong learners with so many different courses uh about topics that i cover here on the coding train you can check out brilliant for free at brilliant.org codingtrain i will come back and look at some of the courses a little bit later but um what i wanted to say is like it's really good to have sponsors because it gets me to live stream um i don't know what this i'm seeing 42 and 47 being typed into the chat um what what what are these numbers here darth torres and quibble here are uh in are typing in numbers i think this is a reminder for me to give our newest member abe their random number but i was introducing myself so thank you to brilliant the sponsor of today's live stream um i will most typically not be live streaming on the weekends in 2021 as i discussed during the regularly scheduled live stream last friday but i wasn't able to live stream yesterday friday because i was in the recording studio making new nature of code tutorial videos for chapter three so i'll come and show some of the examples that i coded up yesterday um hopefully i'm gonna get into some rhythm and momentum and the new videos are gonna be coming out sorry i couldn't okay yeah yeah stop talking to me watch um um so stay tuned for information about that um and the chat is quite is amusing me dan uh says ray j can you please do a series of tutorials on shaders in p5.js or whatever other platform you prefer this is definitely something on my list i don't know when i will be able to carve out the time i think one of the things that would be fun about doing video tutorials or live streams about shaders and excuse me while i um wipe my nose here for a second is that i don't really know shader programming i have tinkered with shader programming i understand some of the higher level concepts associated with the graphics pipeline and how shaders fit in to creative coding and computer graphics coding but it's not something i have any real experience with it's not something that i've taught a workshop on um so i it would be a great first series of kind of like learn along with me which is really the vibe that i'm going for with the coding train so keep reminding me about that right now i am i have a pretty singular focus which is the nature of code and i will talk about that i mean i'm talking about it now but i'm going to keep talking about it during today's live stream and show some coding examples from that kind of let you know uh where i am um with that um choo choo from the coding garden says jeremias um was the coding guard i really try you know it's impossible to not ever like live stream at the same time as something else going on in the universe but uh you know a sibling channel i think to the coding train is coding garden and uh sometimes i check to see if coding guarding coding guard what coding gardens streaming schedule is i know there's a lot of crossover between the audience and trying not to conflict but i didn't actually um look too carefully or closely at that today i want to also just welcome i don't know oliver if you're watching but oliver whose name i saw pop up in the chat coding train member for very long time probably one of the original patreon subscribers or supporters of the coding train i haven't seen um oliver in a very long time and so welcome back um it's really wonderful to see your name um you know one of the fun things about doing the coding train is you know it's a weird sort of thing it's i you know i get to know the audience and i don't you know what i mean by get to know this kind of loose term there because most of the audience the people that i feel like i know and interact with and get to see their work and watch them grow and learn and make their own channels and tutorials and produce their own content i've never actually met in person some of some of um i've never seen a photo of even other than maybe sort of like a profile picture but i do feel like i know many of you especially as i see the names pop up often in the chat so great to see you again oliver um let's see um i would like to take care of some very important coding train business um and since oliver is back i think probably oliver was not here when i started my new tradition of giving everyone who is a member i want to give everyone in the world all one million subscribers of the coding train their own random number but i gotta start somewhere i'm starting with people who subscribe to us members and so uh we have two new members hello to chris manning who saying happy saturday um oh cool and people are saying they got their my book for christmas um so i wanted to um i think i should give oliver their random number and then i also their newest member abhay um he uh joined during one of my member my recording session for nature of code and i was not able to provide his random number then so let's get started with random number time oliver probably one of the longest longest term members of the coding train thank you for your support over all these years and guess what for your support of the coding trade you get your very own random number i've been watching a lot of clone animated clone wars and i can't stop speaking like the uh introduction to that okay uh from page 319 uh row 15925 column 61634 your random number is 37 213. somebody marked that down for me um we're going to return to that because one of the things um that i would like to do today is work on the random walk with random number generator for custom train whistle project and obje we had the one of the longest most longterm members ever of the cutting train i think we also have here in the audience today the newest member of the coding train abhay abhay uh hails all the way from some part of the world please tell us in the chat where you're from obvi and if i don't know if i'm saying your name correctly so tell me how to pronounce it is the h silent um you from page 183 column zero one two three four five six row nine thousand one hundred twenty your random number is 57 969. all right bangalore india is where abhay is from okay wonderful thank you that's um so by the way uh speaking of bangalore india i didn't know that you were from there take a look at um i think the website is let me pull it up um and um thank you again to the sponsor today brilliant um let's look for uh processing india processing india.org so processing india is um a i don't know what to if you know to what extent it's an official organization but um it's a group of people in india who are celebrating and using processing organized uh many different uh processing community days um you know prepandemic and i do know in fact that there was one in bangalore in particular because some of the organizers of processing community today in bangalore uh are um alumni of the program at nyu where i teach called itp so um hey if you can if you want to connect with them maybe uh i can help facilitate that connection and you can meet some of your fellow um processing enthusiasts in bangalore i do want to mention i think i should mention this every live stream that 2021 the year 2021 the year that we are in right now which is not out to the best start if i'm being so honest i was kind of hoping you know 2020 i don't know if you noticed not the best year i thought well new year new leaf let's get everything going it's been a little rough a little rough here especially in these united states where i live um but hopefully hopefully things will be looking up um okay but um what was i talking about 2021 ah yes 2021 brings with it the 20th anniversary of processing itself processing itself was created i believe in august was maybe the first release of 2001 when i was a wee young lad in my uh 20s actually just before i began graduate school at itp i had no awareness of the existence of processing at all when it began i didn't encounter it until several years later but so this year hopefully will bring whether they'll be all virtual and remote or whether things will be able to start to improve in terms of our ability to be physically present with each other i don't know but some form of celebration of the 20th anniversary of processing so um i would say stay tuned to processingfoundation.org the twitter account of various social media accounts for things that might come up um around that celebration i do want to i was sort of thinking back to the history i think if i search for rhizome shiftmen reese fry yet so this is something that i did wow in 2009 back when i in the early days of me getting involved with processing itself i did an interview with casey and ben and i don't know why all the images are missing that's kind of sad for me around the origins of processing so let's see it was sometime in june 2001 as i was finishing up at mit we made a list of the basic specs for the environment and drawing functions it was one eight and a half eleven tight inch typed page by the fall ben had something working and the first workshop took place in japan in august 2001. um okay interesting um so anyway i'm i'm excited to sort of read this over again i think that's what i was looking for people ask like where does the five and p5 come from so this is actually the answer to it right here not when we started the project but we've second guessed the name many times since first it was an iterative name with the characters always changing so processing with like a zero for the o uh a five for the s three a one uh then we more conservatively started using processing with the five fives for the alpha version so that's a move to processing a few cases i regret not calling it seal i think ben wanted to call it bagel or potato so think about what would the world be like right now actually i think bagel is pretty awesome if we were all just here being like and now i'm going to show you how to program your own fractal in bagel.js maybe we could put some locks we'd all be making libraries that are like locks.js and capers.js tomato.js that's pretty great so this is pretty cool to read about and think about um you know obviously many years later p5.js came around with lauren mccarthy um the world of contributors to processing in p5 has really exploded and what i would like to say one of the things has been wonderful is to see the inclusiveness and diversity of that community which really was not present for so many years a real failing of you know the open source community i think that's really you know not perfect by any means there is lots of work to do but has greatly um improved um and um hello to julia in the chat julia our newest moderator um uh i i am a lowres i don't even know what to call all these programs so this is cool to sort of like spontaneous look up let's think about what we can do as the coding train community to celebrate the 20th anniversary of processing this year okay um by the way i have no agenda this is the thing i i really want to be an organized person who plans a sort of like live stream show with an agenda and things that i'm planning to do guests a schedule i'm gonna get there someday it might not be for a long time might be when i like retire and i just could like be at home as an you know a much older person i'm already kind of old but a much older person what am i even talking about live streaming i have this fantasy plan let me just put this out into the universe right now i don't know if i should be discussing this if it makes sense but let me just put this out into the universe right now while i have you a captive audience of 322 an auspicious number by the way 322. if anyone wants to try to figure out what my connection with the number 322 is go forth i don't know let's see if anybody could come up with that i i don't think there'll be any way that anybody will figure this out but i have a certain connection with the number 322 but i'm gonna i i i have um you know knock on wood uh a sabbatical from my uh fulltime teaching job spring one year starting one year from right now and i had one previously i don't know if anybody remembers i spent uh i don't think i actually this was kind of before i even really started the coding train so i don't know why you would remember this i've been making videos since probably 2012 at least but um sorry i hear the pitter patter of little feet and i'm always wondering if someone's going to come and interrupt me um speaking of which i have to leave at three because the reason why i was able to get this live stream spot is my kids are doing a zoom baking class right now making some kind of almond flour citrus cake tart thing and at three o'clock we're going to have app speaking of london we're going to have an afternoon tea and eat that so it's gonna be done um so but let me get back to what i was talking about so i we had a wonderful adventure we lit we as a family lived in london for the semester and um i'm looking into doing that again next spring but um with covid it's sort of unclear uh what makes sense to do what's appropriate what's safe will we be back to normal we will never be back to i don't know if we ever were normal i certainly i certainly wasn't but if you live somewhere in the world where you think it might make sense for me to spend a sabbatical semester uh with family um reach out to me let me know i have some ideas i'm sort of thinking about in this um you know my fantasy actually is to uh have a a house in the country some countryside somewhere with like a barn and i could set up a whole recording studio and that would be my project for the sabbatical semester so that's when i'll be organized with my weekly live show so this is just putting this out there starting to think about it's not for a year um but um yeah i had this fantasy of living in japan i've never been to japan um i looked into that for a little bit um i don't know we'll see we'll see i might just stay here in my attic in brooklyn and have a nice semester sabbatical i'm very privileged and lucky to be able to have the the um the opportunities that i have so love the hearts popping up the screen i kind of forgot that those were there so the hearts are an overlay in open broadcast studio which is exactly based on my fireworks coding challenge it's just running directly and i put it on for something that i was uh recording oh yes i have to make this video this weekend i forgot about it um and iceland ooh that's exciting um why um uh nicobar islands i've never heard of that that's kind of interesting to think about um so but i forgot to turn them off so there they are okay so let's see i just want to um take a minute here so um let me make a list of some things let's that i might work on today and i'm going to go to the rainbow etopics uh repository which has my uh spring 2021 dock so oh oh i have something actually i got a shot this is probably a really bad idea but i'm gonna show you something um i'm gonna show you something a minute so i'm looking at this so first of all i um this is now done oh you don't see what i'm looking at apologies um i'm looking at my sort of like list of things i want to work on for this spring and this is what i recorded yesterday um and i want to talk about actually have kind of a new exciting way of recording that i thought i might mention and i also made a sample sort of pilot version of my what i'm calling javascript express dots or javascript bytes little short tutorial videos about javascript concepts i would really like to expand this list if i were a different person i would make these on tick tock or something i noticed by the way that scott hanselman and if anyone's familiar with scott hanselman is really a wonderful uh educator and works at um outreach person um so um um people are making wonderful suggestions about places england is bad who wouldn't recommend it here england is a wonderful place i have a soft spot for the uk i was just remembering some wonderful times i had there um uh one of the things that is a requirement for me in my travel is i need a place with schools in particular for what will be a fifth grader and a seventh grader and uh so like um that's that's sort of like a complicating factor i have to really plan that in advance um so what uh espresso express espresso shots so i really wanted to be train themed so like espresso that really does make sense though um but i'm gonna um play something for you i actually have i'm this is never going to be released and i haven't actually watched it i hope matia doesn't uh kill me for doing this um but um i'm looking for it i have the like just the sort of sample rough cuts about three and a half minutes of just the idea of how these videos would work so i thought maybe i'll play it for i can't find it right now um i thought i would play it for you i'm just looking for it um weird i just had it open i don't know why it's not in my history ah here it is um i'm gonna make it full screen um let me move over here uh do you see this so here i am in front of it but i'm gonna move myself away and mute myself i'm going to play this approximately three i have not watched this it's a rough cut just a sample edit of the idea of these new videos that will be less than five minutes long each and this one is about the concept of a template literal so i would love to hear your feedback what you think about it this is not live people would be confused for a second i'm gonna just again i'm gonna leave here and i'm gonna hit play i'm not 100 sure whether the audio is going to come through so if it doesn't i'll have to start over here we go one two three play okay so the audio is definitely not coming through oh let me fix that i know how to fix that uh it's not too hard uh chrome i have to turn chrome on going out to usb capture um let me get back to this full screen give me a second here and back to this and here we go again try number two what's that is that the express train it is this is a new series i've got going here where i'm going to make short bite size if you will that's right bite spell byte video tutorials about quick concepts in javascript in modern javascript that i've started to adopt in a lot of the coding challenges and other p5.js video tutorials that i'm doing and the first stop on the express train is template literals what is a template literal you have probably in your coding life done things like a in quotes plus b in quotes uh the plus operator with a string with two strings concatenates the string and we have the result a b this is particularly useful when you want a console log something for debugging and you want to console log x position colon plus the variable x however there is a much better way of doing that now in javascript which eliminates the need for this plus and it allows you to evaluate expressions directly in a string itself and if you use the back ticks and your string um x position colon if i want to now display evaluate an expression and display the result or just the value of the variable i can use dollar sign curly brackets the name of the variable curly brackets so this is the way to embed an expression inside of a string let's take a look at that actually in action in the code this is a quick p5.js example which is just displaying the time i have three variables calling hour minute and second and then i'm putting together this string i want to take the hour plus the colon plus the minute plus a colon plus the second and we can see the result right over there in the window it's about 306 pm eastern time i just spent three hours like figuring out how to get the cameras to work in a way that i could record this video so thank you very much for being here i hope i'm making sense here i am now going to change this to having a template literal i'm going to write text then i'm going to use the back tick and i'm going to say evaluate the variable h then put a colon then evaluate the variable m then put a colon evaluate the variable s and then this i would like to display this at 200 200. i can comment this out run the sketch again and it's the exact same result but now with the template literal template literals allow you to do all sorts of things you know i could actually uh have an expression like m times two that would get evaluated i'm not sure why i would want to do that but you can see the number went from 7 to 14. you can also use line breaks right inside of a template literal so if i do this we can see look at this that line break is maintained in the string and displayed in the way that i'm drawing in the canvas so this is a bit of a weird example of this circling back to the console log idea here is one of my a bouncing ball in p5.js examples and if i had some issue with it where maybe it wasn't performing the way that i had hoped i could do a console log and i could say you know x position colon x this is also a nice application of using a template literal thanks for watching see you at the next stop on the coding train express help where am i uh here i am by the way i wanted to see if we could get a quick if i could zoom in on that uh you can see here i don't know if you can see this i'm gonna zoom way and uh that is actually the coding train logo laser etched onto this train whistle which i have been that's that sort of topic of today but you can't really see that okay um oh so people are giving uh um people are giving positive feedback there so that's i was kind of planning to redo that video there's sort of some like sort of technical issues in the way that it was recorded qualitywise um but hold on let me go back to here i need to just reorient myself i didn't realize i had multiple browser things open and i'm kind of lost here all right so i'm coming back like um let me uh turn that off again and come back to here so hard to do things while you're live streaming yeah all right back to here so um bobber a slang word for a small caboose with just four wheels all rigidly mounted to the frame this design was common in the 1800s baba refers to the bouncing motion of such a caboose in motion cool that's kind of an interesting idea i like that idea it's my replacing my bell here okay um enhance yeah uh all right so um that's coming soon i you know thank you i guess i got some if anybody has any um any feedback or thoughts in particular i would really love to expand this list the thing that i'm trying to one is i'm trying to create something useful for people so that they can have very quick access to kind of understanding some new features and conventions of javascript itself that are sort of outside of the bounds of my kind of other creative coding curriculum otherwise but also um one of the things i find myself doing constantly is in every video tutorial i want to put in for example a console log and i start using a template literal and then i feel like i need to explain what template literally is and then it adds like three minutes the video and then it's in like 10 different videos so i'm trying to sort of figure out um if that's uh what if if that's what i can do okay um are you planning to record any videos in this live stream since christopher so i really have completely separated the live streaming component from the tutorial recording component so this live stream is just me blabbering on and on for about another hour and the tutorials i record separately um during the week uh in the recording studio that i use um and uh those i do live stream but i those recording sessions are pretty informal there's a lot of time of me just tinkering around but you can join as a coding trade member to have access to those streams as well otherwise just wait the videos will all be released okay um so uh let's see what i want to do simon's giving me suggestions about generator functions not for today but i do like that suggestion i have some things that i definitely want to do so i want to show you something i think i should just show this to you now because it's like one of the most exciting things that i've come across in a long time and it's a little bit outside of the scope of coding um and i'm trying to think of there must what might be some interesting ways that i could come up with a creative coding project that would make use of this technology but i want to log into runway which is a um a tool for creating content um using machine learning models that i use in a lot of different projects and tutorials um you see you seen me probably train style gan models and gpt2 models which is a generative text model um runway has introduced something called green screen and green screen you know it's what's right here it's what i use an actual literal green screen to key out the background and you'll notice that this is something that machine learning models are now able to intelligently do without a uniform background of a single color like green for example if you've been in any video calls these days which you probably have you'll might be realized like oh zoom has virtual background for example how does that work well there's a machine learning model that's been trained on a lot of images you know again i don't actually know exactly what zoom is using but i'm just speculating here i've been trained a lot of images that are labeled of people here all the pixels of the person's silhouette hear all the pixels of the background we'll learn to differentiate those here's a new image mask it out on the fly so how uh uh runway ml has a tool for doing this green screening with any video and any kind of object and it's like totally mindblowing so let me try let me log into runway for a second i'm just in case i have to like uh oh okay wait i think this is going to be perfect so the one thing that i need right now is a video so come on log in um and i'm gonna so if so by the way first of all uh you could just go to runwayml.com to follow along um you actually don't need an account and the green screen feature is totally free to use the only thing you won't have is um access to without a paid subscription is um being able to export i think the green screen videos at like 1080p but i wanted to just poke around and look at this uh briefly i'm gonna come back in a future live stream and do more with this i just wanted to sort of like start so let's see what can i do here i guess i could make just like a video of myself uh i didn't really think this through i don't have a let's see do i have a video of like gloria um let's see let me look on my uh fancy uh television phone i like to call these tv my television phone here let me search for dog and i must have a probably a cute video with gloria running around um categories dog how do i find a cute video of gloria running around here's one it's just three seconds ah that's not going to do find one somebody wants to suggest like an interesting video um this is like a really sad failure uh let me just make a video of my i'm just gonna record a video and then i'll so let's see what can i record let's try uh let's try recording a video of this train whistle we'll see how well it does um this is hard okay a little behind the scenes here of the coding train that's such a mess there's uh you're gonna see my lights and a camera and a drum set here let's hit record i'm here in an attic and i'm going to move this around this is really weird what i'm doing okay so that was about like a 10 second video let me also just do a quick video of myself just to see how well that works and um i'm gonna hold this up oh i i meant to do it uh with this aspect ratio okay okay we got two videos now uh and i am going to uh i'm gonna see if i can just transfer them to my laptop really quickly let's see if this will work i might have to turn airdrop on i think that'll probably be the most efficient way for me to do this allow me to be discovered by i'll just say everyone i had it at no i have it usually set to no one uh macbook okay i'm sending these two videos and they should be there now so let's go to here and see all right so i'm gonna so here i am um this is video one video with me uh uh moving this like mario uh toy and then the other one is here with me and moving this train whistle around uh is the audio lost no okay so let's try i think that let's try first so i'm gonna do start editing so i am going oh look they have example videos that i could pick so i probably should have just used one of these but let's upload both these um both of these videos i guess i can only do them one at a time that's fine um okay so i'm going to upload one did it upload ah there it is upload yes okay now what i'm going to do uh next is open it up so this is a a browser tool um i could watch the tutorial which would be great for me to do but i'm going to skip that right now and basically what i can do is click on elements of the scene that i want to track and mask out basically rotoscope this is equivalent of ai machine learning based rotoscoping so i'm just going to say like let me just track this and so i did three clicks and it sort of found this but i want to now say i don't want my hand maybe so i'm going to like exclude my hand so it's just tracking now just the top of this mushroom so let's see what happens if i then go to preview and it's now running the model over all the scenes oh my god look at that i don't know if you understand what's going on look what this just did i mean that is insane oh my i still like this is like so crazy to me so now what i could do is i could go back let's see what i wanted to do if i wanted to stop this and i could go back to include like what if i wanted to actually have me as part of this so i could keep including more things get my hand so now let me go to preview and see and it's a little tricky to see because i've got this green screen here but um and it let's see so could i in the place where it fails can i i think what i could do is pause and then include click some more and now uh preview again but i lost my hand which is so i guess can i keep doing this and adding more things to include where it misses it so can i do like this and then i could do exclude like i don't want this area here oh i do because that's part of the object include that's part of the object too um preview i'm just sort of like i'm trying to understand how to like iterate over this there we go i think i've got it now i think i've got it now uh there's a few see why does it now it loses my hand over where here so can i stop there and like tell it to include it see now i've lost the rest of me there so weird so this is what i'm confused about and actually this is good i'm going to send them some feedback like how do i i mean it's definitely perfect for like almost all those frames and then there's just like actually maybe i have gotten it i just want to see like this like this is right so how can i get i mean this first of all this is just crazy how well this is working but note um so how can i if i can i keep going oh look at this what are these markers here like that's weird like what does that mean like there's a marker down here on the bottom i don't know what this means but let me try to there we go get more points oh that's where i uh clicked before okay so let's see now it's re it's got to rerun the model over everything so this looks good so there were just a few there's just a few places where i've kind of like i lost my hand here okay why is why do i have exclude these are exclude points how do i delete them ah okay there we go ah okay there we go i must have clicked exclude by accident which is what was messing it up all right i think i've got it now i think i had some exclude points there by accident i don't remember clicking where i messed it up so there's just i just want to see like can i get this perfect there we go okay looking good still some like a couple i'm like obsessed with getting this exactly right oh do i need to add everything maybe i need to add everything on the different keyframes i'm doing that's what people i think that's what i'm being told like if i do this like i if i'm adding to this frame i gotta do everything so now i think pro tip don't skip the tutorial let's see how this is going okay this is looking good now just one the couple couple little glitches one is here like it's not getting my finger but now i need to make sure even on this frame i i get everything i see like if i click into one frame okay so that's good and then all right so let's okay getting everything getting everything getting everything okay so just a little break here probably because i didn't realize okay i really think that i'm gonna have this now all the dots is the keyframe delete all the dots and place the pointer in the beginning of the video okay i think i've got it now little one little glitchy spot just one little glitchy spot like right here i feel like i'm going going over and over again is wild by the way okay there we go so that was perfect there's only thing i'm like a you know me i like i get really stub obsessive and stubborn like it bothers me that this finger is missed so what i'm not realizing is that when i edit on a particular frame i've gotta sort of click on everything this is probably not really i think one thing is this is not really what it is um designed for in the sense that um it's it's much better at tracking like actual like like individual objects inside of a video and i'm kind of taking up so much of it but i think now i think now i've got something let's let's give this a try let's see perfect okay so now i can do this and i should be able to do things like under um export now give myself like a different background like this let's try that and i should be able to do export video and now it's uh i think this is the one thing that you won't be able to do um necessarily um and so let's let that export let's try the um let's try the other um video that i uploaded so let's go to videos let's try oh didn't i upload another one upload because i only did that one let's try this one um is it uploading oh there it is okay let's try this one it's loading this video now i'm just gonna click on this and hit preview now this is just only the first frame i just clicked in a few things in the first frame look at that holy moly now do i want my hand that's what i'm not sure this is crazy how well this works so let's decide i'm going to keep my hand it hates my fingers so look at that i mean pretty amazing stuff let's see if i can exclude my hand i'm curious about trying to do that so let's go to this frame that i've already done how do i tell when i'm on a frame that i've already done like i feel like it should show me the points when i can delete it i guess i can delete it but how do i change i want to like exclude well i'm just going to try this ah okay now i'm there and now i want to exclude i want to exclude my hand so it's going to be really hard and then i want to include there we go that's pretty good let's just preview now and see what happens so here for example i want to exclude my hand and include a whistle okay wow yeah it's hard for it to separate right but it's doing a pretty darn good job so if i go here and do exclude include guess what everybody welcome to illusion grenade i'm pronouncing your name correctly you join the coding train and i got sleepy in the last few minutes oh i gotta do my sponsors um your very own random number legends oh if only i could remember my french well enough uh i'll just english on page 85 column four row 4 210 your random number is 5 678. okay i'm going to put this away um hopefully like i've shown you sort of like how amazing this is um obviously like uh there's some finessing here that i would need to do to get this perfect i i i have to i have to i can't stop let's find let's let's let's improve it let's improve it i have to it's just the way that i work and then exclude the fingers okay so now let's preview this i want to get this perfect okay okay so already i want to on this frame exclude the hand there we go ah christopher tube hd welcome to the coding train it is so nice to have your membership we're getting all these new random numbers we definitely need to work on our random number pattern generator thingymabobber uh right we're so close so close everybody christopher tube hd your random number is twelve thousand one hundred twenty seven that's page two two seven column two row eleven thousand three hundred and fifteen all right uh okay ah this is pretty good oh no no no no no okay it's all right it's gonna be fine we're gonna we're gonna fix up this frame and exclude some of the fingers down here there we go and now preview it ah okay if you check the demo on the website you will see they talk about changing the background nonmoving if you move the camera it makes the video hard to parse yeah that makes sense so by the fact that the camera is not stable is probably like a major issue but look even with that look how much of this i was able to work and i'm sure if i kept at this i would get it let's um let's go to videos i'm just curious like let's pick one of their sample videos like um like this moose and let's see how this works so if i like for example what if i want this tree like i'm going to do what is unexpected with this video and now do preview it's working well with that tree that's in one place uh how do i reset can i reset everything there's got to be a reset everything or maybe i can do this remove okay so i removed that now let's click on the moose whoa this is wild okay and now uh preview pretty amazing huh now oh i guess i was like where'd its feet go it's feet are gone because it's in the snow this is pretty amazing okay so i i wanted to show this because i want to sort of like figure out like what's something i could use this for so um if you have any ideas people i hope people will try this like actually one of the things that i've run into is every once in a while i've wanted to key myself out of a video that i had prerecorded without the green screen so this is certainly a tool that i could use with that so anyway um i'm definitely curious to hear your feedback about this um and um um give this a try um and i'll return to this and try to use it a bit more in a future live stream okay um so the thing that i want to work on today uh is i want to work on okay i want to show some of the examples from um the nature of code that i've been working on i'm just looking at the chat here uh i'm gonna take just a short i've only have till like three so i'm gonna take a really short like literally just like a one minute break but before i take my one minute break i would like to thank today's sponsor of the coding train it is my friends over at brilliant um so what is brilliant um let me move over here to show you um one of um um just some of examples of what you can do on brilliant so first of all it's a new year i don't know if you know this but it's a new year and you might be like looking to start it's a little late maybe uh january 16th for new year's resolutions i'm not a big new year's resolutions kind of person but i do like to sort of start off a new year a little bit fresh um and get started like i'm doing now with the nature of code and so i think that um brilliant if you're looking for something new to sort of build into your life brilliant is something that you might um consider um thinking about it's a website it's an app it makes learning interactive accessible and fun so it's all based on problem solving and active learning so you all of the courses you can see the concepts visually and interact with them so it's another way of learning um the kinds of content that i do on the coding train but um without having to just sit and listen to somebody you can actually practice um practice uh through interactive exercises the thing that i really love about it is there's no tests no grades there's all these courses they're just they're just fun to try i constantly get stuff wrong um this uh what i'm showing you here on the screen right now is the geometry fundamentals course which is one of my favorite ones the two that i would really recommend that are kind of most um relevant to things that are on the coding train is one is the course on neural networks so if you've watched it in my videos about ai and machine learning and want to kind of dive deeper into that looking at the neural networks course on the brilliant website what i would really recommend you can see here here's an interactive example of um of a neural network recognizing digits um you can also look at oh and i just uh let me just bring this up here um this you know i constantly get in the comments of my videos uh do you have any courses on python i really want to learn python and so i don't but um brilliant has a course called programming with python which you can see you can actually type code into the lessons themselves test it run it um and there's there's this is actually something that i've been uh really excited to go through and kind of improve my knowledge of the python programming language itself so that i could eventually make um make videos so there's over 60 of these interactive courses in math science and computer science it helps you achieve your goals in stem starting with one small commitment to learning and building up to longterm challenge and growth brilliant will puzzle you surprise you and expand your understanding of the modern modern world so you can get started for free just by going to brilliant.org codingtrain um you can you can try it out and look at what's on the what's on the website um and then if you're interested in unlocking everything that brilliant has to offer with a premium subscription if you go through that link you will get a 20 discount so one one of the new courses that they just launched that i was curious to highlight for a moment is the course called statistical statistics fundamentals so let me see here i haven't looked at this one at all i saw it in the uh information that brilliant sent to me this is a new course uh i saw some of the preview images like oh this is exactly some of the stuff i talk about in the introduction to nature of code so let's go through and let's just sort of see how well i do with just this first uh quiz all right so let's see how i want to show you a little bit about how brilliant works the mean or average of a set of numbers is the sum of the numbers over how many numbers are in the set okay so if i want to calculate the mean or the average of the numbers 3 5 and 10 i add them all together i divide by 3 and i get 6 perfect so in the visualization below the purple dot above the line automatically oh is it um simon is correcting me is it not statistics fundamentals that's the newest course is it statistics one is that different simon simon is like uh always helping me out uh um i love how the audience helps me out with brilliant stuff but i'm gonna look at this anyway and then and then let me know if i if i if i'm in the wrong one simon how do i get to the correct one um but let's go with this one anyway because i love i like how this exercise looks in the visualization below the purple dot above the line is automatically shows the mean of a b c and d ah so like if i change if i change the number we can see how the average is changing look at this so this the one of the things i love about this is it's like oh i want to build this in p5.js now i don't know if this is exactly the thing i want to build but they're um every time i go through one of their exercises it's like especially though some of the geometry ones and that there's some uh physics related ones are always giving me ideas um um okay so um uh let's see let's go to courses simon is really telling me that there's one called statistics one so i'm gonna see if i can find it um browse all probability statistics and finance probability fundamentals statistics fundamentals i'm going to look i'm going to look here find this information statistics one yeah there i see i have the link uh brilliant.org slash courses uh advanced statistics dash i there we go this is the course that i was meant to find thank you simon for correcting me i was looking at an older design so this is their with their sort of newer design and newer animations so let's look at the first quiz here um let's go back for a second and read here decisions and judgments we made we make are based on limited or incomplete information amidst all this uncertainty statistic plays a special role so the first quiz is going to explore how probability is used in statistics to make informed decisions so we're looking at rupert here uh built a lucrative career convincing his audience that he can defy the very laws of nature but it's all sleight of hand and wellcrafted illusions designed to fool the senses so when he hears about alberta the oracle who claims that she draws the answer to any yes or no question from supernatural sources he set out to determine the truth for himself rupert thinks alberta is just a good guesser right i'm using my clone clone wars voice again so he gathers a stockpile of yes or no questions that only he can answer and then heads out for magicians alliance hq one cold and foggy night to put the oracle out to the test okay in the oracle's parlor rupert takes a seat thanks his host for the opportunity then poses his first question suppose for the moment that alberto really does just guess the answer to every question she's been given by responding yes or no with equal probability what's the pro oh i think i'm going to get this one right i was so worried this is going to be too hard for me what's uh uh what's the probability that alberta answers rupert's first question correctly just by guessing by the way my kids who are currently in fourth and sixth grade probability is something that i always try to talk to them about um and it's really um it's a i love seeing sort of like i mean they're not really really young children i'll say that sort of child's eye view of how to make guesses according to probability and what kind of assumptions they make and they're actually learning about probability and fractions in school so this is actually this is great i should really go through this with them but um let's see what's the probability that alberta answers rupert's first question correctly just by guessing so i think this is going to be one out of two right if there's only two possible answers and you pick one randomly well one of them is correct one of them is wrong one out of two is correct let's try that correct and this one by the way 98 of people got this right um and one of the things i like about uh brilliant by the way is it um it's very kind to you uh and gives you like sort of positive encouraging fact there's nothing wrong in fact like one of my my happiest moments doing these kinds of things when i get them wrong so um ah and this is great it's talking about probability distributions so this is perfect um i'm gonna pause stop here because i want to take a break and get back to some of the stuff that i want to code today but you can see how this kind of content really just aligns with creative coding the kinds of concepts you think about when programming systems and visualizations and i hope that you'll consider checking it out and if you do check it out if you go to um brilliant.org codingtrain that lets them know that you found uh brilliant through the coding train um and uh helps me out a little bit okay so uh thank you so much i've lost the chat um and azam is saying i am only eight years old hi awesome welcome i hope it's not too late at night for you and you should be in bed go to sleep young person it's your internet dad telling you um but i'm so glad that you're here that's so kind of you um so i'm gonna literally just take a break that is um uh two minutes long um and i would encourage you to sign up for brilliant during this break and i'll be right back to get working on some actual code projects i got to work on again i got to work on my sort of like live streaming um plans i'll be back in just a minute do do all right i am back very short break as promised and i am going to do some coding now uh so um one of the things that i started um that i will the the thing that i'm working the most on right now uh let's just see if we can find this um this is what i'm looking at um this um this particular playlist um is a playlist of videos for the nature of code book that i was working on a year ago i got all the way up to uh chapter two and i started recording the first three videos for chapter three so the topic of chapter three if i go to the book um is oscillating motion and um so if i go to the web editor i can sort of um that i was using as i was recording the tutorials yesterday i could sort of pull up some of the examples real quick so for example the thing that i started with is just looking at how to deal with angular motion so how to keep track of an angle that you increment over time and use translate and rotate to spin something in p5 a very basic starting concept from there i moved on to um kind of adding the idea of angular velocity and angular acceleration so here as i move the mouse back and forth i can kind of as if i'm applying a force to spin this um so you can sort of see this is what this is what the video tutorials are going through um i also uh then i'm just looking at these uh nature of code angular motion kind of added that idea to these objects that are from the gravitational forces examples so these objects are turning and rotating based on how they're moving about this space not in a realistic way in a somewhat arbitrary way just recapping what's going to come up in these videos what was next from there i looked at how you can have something using uh using sort of thinking about angles with vectors how you can take those objects and have them point in the direction that they're moving so you can see that's happening here in this example all of these examples will be with the video tutorials i'm getting somewhere trust me i'm getting to a point of this uh and then i looked at how this is related to um kind of also this idea of like aster the of a of a asteroids like ship so if i can like if i have the angle that the ship is pointing i can create a vector from that angle and then apply a force in that direction and that's what this example is so um and i think um i think here this was also just another example that i worked on in order to be able to like turn something so um okay so what do i want to do right now in the very first video for this chapter i kind of talk about the overview of all the examples and where oscillating motion if anybody from any of the members who were tuning in yesterday you can help me remember i remember one of the things i said as an example is plucking a guitar string i think i also said waves so when the video comes out i want to be able to show some of these examples and have additional examples that i won't necessarily like make a video for but that will so that's one of the things i really need to work on right now um i want to see if i can get the sort of guitar string thing um the idea of plucking a string and having it oscillate like a wave pattern see if i can make that right now and so where i need to go to do that is i'm first going to go to all of the nature of code examples and i'm going to look for the spring example which is in see these uh chapter three eleven so this is my oh okay great so this is an example that i will be making a video about how to create this example so let's duplicate it i don't know if this is going to be a good base for what i want to do but let's do let's call this guitar string so i don't know why i have things like set frame rate in here this was made very long time ago let's change this to let it has this idea of a spring and a bob and the spring can connect the bob and then it can constrain its length and then i can draw it as a line display the bob so why i would i really would prefer and i probably should do this with toxic lips i don't know if that would be a cheat because ultimately what i want is for this uh just to have the idea of a particle and then i connect the spring between two particles so let's see let's see how i have an anchor for a spring ah okay the there's an anchor and then the force is calculated between the another object and the anchor so i think what this should be is i should i'm gonna rename this oh look how oh my god this is like the most ancient thing ever wow okay i'm gonna have to really redo these i haven't looked at this stuff in a while so i'm going to rename this to particle and i'm going to change it to a class and then this is going to be constructor so i have to convert this to be es6 classes um i don't need to drag this anymore i wonder if this is actually not a good base you know what i think i always want to start over from scratch to like remind myself this is helping me prepare for when i record the tutorial next week so i'm gonna i'm not gonna totally start but i'm gonna just get rid of this dragging stuff i guess maybe i should keep it to be able to test it no i'm gonna sorry i'm gonna keep it i'm gonna keep it i'm gonna make these things that i could drag around i have it in there there's no reason to delete it let's make the uh update function uh the apply force function um this constant the display function and handle click like do i click on it function so what you're watching me right now is literally just converting an old example which uh before there was such a thing as classes in javascript i wrote it in a different way and these little semicolons are bothering me here so i'm going to get rid of those and first thing i should do is just make sure it still works the only thing i changed now is this is now a particle um and this is still work uh particle is not defined uh why is that sketch line 16 didn't oh i i renamed the file also okay so this has to be particle okay so this still works okay what i want to do now is basically i want to make i'm going to call something anchor and i want to make an anchor a new particle which is at width divided by 2 like 0 basically and the spring i want to permanently i want to change the way this works want i want to create the spring as a connection between the anchor and the bob without a separate function let's get rid of this constrain thing for a second um and we're gonna add anchor update um this is weird because i i did this in a very different way but let's just see if i can get this to work so now i probably should have started over to i think this is i'm gonna get so this is no longer a thing connect a and b so this and i i was my children were calling to me um okay so this dot a equals a this dot b equals b and then the update function is going to so i think the idea let's let's actually let's let's put it in the constructor so a spring should connect two particles and then in the update function i should calculate the force between the two particles and then that's all and then apply that force to both particles but it should be um it would it goes in opposite directions so copy the force to this one multiply by negative one i'm not sure if this makes sense we're gonna see again i think i'm a little hesitant about the way that i'm doing this um but um let's not worry about the constrain length right now um cannot read springline 82 i've got some like weird error uh in display i don't want to display the particles in here i want to display it as um a line between these two things okay i will be done in like about 20 minutes and we'll come down i see it i see it i see it thank you uh oh what have i gotten i've got myself down a rabbit hole that i didn't mean to get myself down um okay this is all gonna come okay great okay we're back to something all right now let's see if i can get this constrain length to work uh minimum length maximum length so the the of the vector between the two is between this dot a and this dot b's position these are two particles and um reset the position and stop it from moving okay i can't do the constrain right now help me everybody i've lost my mind oh my god i should have started from scratch says everybody [Laughter] oh my god this is i definitely should have started from scratch i thought i was doing something much simpler than i ended up welcome to the story of my life all right hold on everything's gonna be okay we're gonna i'm gonna i'm gonna slow down for a second and i'm gonna get rid of the spring so i have two particles okay and i just wanna see those two particles for a second let's get rid of the spring stuff so there's going to be a spring like update function eventually and there's bob update bob display anchor update anchor display and um we're going to apply gravity to both of these okay great so this is what i was hoping to see all right when i run this sketch i see two particles both falling with gravity now they look like something i think they must have a oh there's a damping effect let me take out the damping effect right now great so that looks more there's no there's no damping no resistance they're both just falling and then the spring exists should be visualized as a line between those two so if i go here and say spring.display cannot read display of undefined let me create the spring the spring should just be connecting the two particles and have like a rest length it's going to need like a spring constant that's what it should be this idea of the spring connecting two particles by the way i'm going to totally redo this chapter i'm realizing because this is the way i should write the example there's two particles and then the spring connects them and so the constructor should it doesn't need an xy it needs a rest it needs two particles and a rest length this should also be a variable so this should be like k like the spring constant should be something i pass in and these are the two particles okay and then so i'm kind of starting over from scratch and away so i'm going to pass in the 0.2 okay so now i have this idea of two particles and a spring now one of the things i definitely want to do is i want to say anchor dot lock so i want to have a function in the particle class where i'm going to say this dot locked is false and then if i call the lock function i'm going to say this dot locked is true i'm going to make it so that this particular object cannot be um cannot be moved it's like locked it's like anchored so the anchor i want to lock and if that's the case i think what i basically would say is the update function would be rendered irrelevant so this dot if it's not locked then update its location so now what i should see is right the top one is locked but the bottom one's just stretching out because the string is not act the spring is not activated so now in the update function this should apply the spring force to both objects a and b so what would happen now if i were to activate it a is not defined okay so this is the function i need to work on to get this spring force to work um so in update spring line 20 ah it's this dot a position this dot b's position okay and it's this dot a b this dot a apply force okay interesting um i think maybe it's the other way around yeah all right yes so you can see the spring is working it's activated now is my drag working yes it is okay great so now there's no damping there's no damping uh so it's kind of gonna spiral out of control that's one thing i need to think of but also uh um there is um damping is something i need to think about and what's the other thing i need to think about oh the length constraining i want to see if i can get this constrained spring to work so how would i do that so what if i wanted to actually call here like spring constrain length between 10 and 200 so this is totally artificial but i'm just curious what happens and maybe i don't need this what happens if i um were to kind of constrain it so no matter what i do it can't um it can't go beyond that and maybe this is not let let's not work on this right now let's assume i don't need that for what i want to do so first thing i want to do is just sort of see what happens if i don't lock the anchor the problem is i need to be able to catch it okay so some interesting stuff is going on i i also like let me um let me get rid of gravity like i don't actually want gravity here that was interesting to add yeah so this is doing what i expect but something weird is happening um it's like a little glitchy so why is it a little glitchy handle click handle drag ah so i think i should be saying bob dot lock well let's see uh particle handle click dragging offset handle drag it's moving the position uh i think and um i think what i want to do let me work on this lock and unlock let me make an unlock function i mean it's a little silly i could just have one function that i pass in true or false and we have a new member hunter i need to give hunter their random number in a moment um so i think i think also i need to like i think if it gets locked i should be clearing its velocity and acceleration like why is it on why am i losing it hold on so i mean this is just an interaction thing which isn't super important to what i want to do handle click handle drag stop dragging oh only so i think actually why do i have this in mouse dragged i don't think i want that i think that's the issue the particle is if it's being dragged yeah i want to do this always so um so i want to not just when the mouse is dragging i actually want to all i don't know why i had that you sort of think it would make sense but i want to be able to do this yeah this is what i want to do okay so now i can move this around i think i'm going to put some damping in because and there's probably a more thoughtful way to do this but let's add the um let's add this damping back in let's also say that when i am when i'm dragging it it's also locked so i think this is redundant now so i think i have the same variable doing the same thing but let me just lock and unlock it also when i'm dragging it yeah come back all right this is great this is what i want because you're going to see what i want to do in a second so i can move this around and then you can see they're like bouncing off each other okay this is great this is perfect exactly what i want nice little dampening the reason why i want to do this and again i need to make a proper video tutorial that builds this whole thing up but i just wanted to try to like make the example here during the live stream the reason why i'm doing this is now in the main sketch i should be able to and sorry that i'm like in front of the code here um see if i can um which way do i move over this way move over a little bit this way uh let me see if what i can do here is make an array of particles and springs and then i'm going to say particles index 0 is this one particles index 1 is this one the spring is connecting particle 0 and particles particles one okay and then for let p of particles p dot update p dot display and then for let s of springs s dot display s dot update and then p handle drag and then here also for let p of particles all right so let's see here now okay something went wrong i'm able to drag these around but i lost the spring force ah springs index zero there we go and i can drag either of them and they're always attached with this spring there's no constraints should the spring update before displaying you know yes um to be consistent i think that makes sense but ultimately it's a draw as a loop so it doesn't really matter but now what i should be able to do and let me just change this just so we can sort of see things better and like the particle is so large i want to um where is displaying the particle oh this dot mat there's a mass going on here uh that's kind of not being used right now in this example but that's fine let's make this 8. okay so the reason why i'm doing this you'll see in a second is i want to do this in a loop now so i want to create can you see the code i think you can i want to say let's make 10 let's just make five particles and let's do them actually two at a time and we're going to say the first particle i the next one i plus one is you know what actually let's do this let's make five oh no no no no no i always need to connect the previous to the next one so i'm not going to do them two at a time so i'm going to start with that there's a previous particle but at the beginning it's no i'm going to say if previous exists then let make a spring which connects previous to particles index i the one that i'm just making separate them by 50 with this okay so the idea here and then previous will equal particles index i so in my loop i'm making five particles um where i'm connecting connecting each one to the previous one and their where their location should be is i like times 50. okay so that kind of makes sense but none of these are okay all right because now i need to put the springs into the array and get rid of this okay so now i should have yeah there we go this is what i was hoping to create awesome now i should really be using like a proper verlet physics engine that's going to be less prone to error but even just with the sort of basic idea this works and now what i would like to do is let's say let's make the height 700 um your height divided by 50 i'm gonna do that many um that many and then i want to take the first one and say lock and the last one and say lock oh wait it didn't lock how come they didn't lock uh is my lock not working oops oh no particle locked equals true if it's not locked do all this otherwise that oh ooh this is bad so i'm uh the lock is a permanent thing that's not okay i got it so this should be if it's not locked and it's not dragged i mean not currently being dragged so if either of these are the case so locked and dragging are kind of different and when i click on it uh handle click uh the lock is a separate thing uh that's automated but lock is something that i'm doing okay i think this should fix that all right so the top are locked so i want to make this like i'm plucking a guitar string so they're gonna have to be like much much tighter right like how do i make it how can i get this to be like plucking a guitar string so i probably need that constraint or like what would you know what if um like connect them all to one single one that's interesting offset equals 50. so if i do this offset is now a variable so what if i make the offset 10. what if i make the offset 150 so and now okay so what will this do like what if i make this one that's better it's like tighter and 25 it's kind of a cool example but it's nothing like plucking a guitar string the springs um hold on so me i am sumi is writing a comment um the springs should be in the default state be quite stretched instead of having their natural length be the offset to be much smaller that makes sense so in other words they're uh what if i make their rest length half that makes a lot of sense let's go back to 50. yeah and what if i did that in even more extreme way yeah that's more like a guitar string that's a little bit better um that's helpful in pre increase the spring constant like how much can i really increase that spring constant like so one thing also that i can do now is not display the particles anymore there we go it's hard for me to click on anything because i don't know where to click that's pretty good actually it's better than i thought i would get here um let's try making the offset less i'm being told whoa that's a cool wave oh that's wild actually this is really this makes me want to do the following by the way to like sort of see this wave all right i'm gonna um paste this into um discord if you're not in the discord um you should join up uh here's a link to joining the discord into the chat um but um you should be able to get this code right now if people want to work on trying to get it very guitarlike i would appreciate that um and then i will be able to uh capture that to go into the beginning of the video let's see um let me go back let me let me work on this a little bit more i've got to finish up here it's three o'clock um that the the uh cooking the baking class ends it's time for our afternoon tea but let's see um let's see here let me go back to keeping them further apart and let me see how much and i'm just going to take that away that was an interesting let's let's oh this is irrelevant let's see how much i can push that spring constant um let's like make it five i think that's probably gonna be make it go crazy that's pretty good six i can't see where to pluck it yeah it's pretty good um all right let's uh let's change something here whoops um and let's change this to i just want to make it horizontal wait what just happened ah i'm a little confused why you don't just use the force to set the amplitude of a sine wave draw the sine wave instead of the line yes so i i i do want to cover sort of like using a sine wave but i was just trying to do this with spring with the actual spring force just to see how that would go i have to just guess where's the particle um so this is great i think that i can um um yeah i think that i can uh this is going to be good enough for just like the quick example that's going to be shown in the intro video um i'm curious to like how far i can push like the stretch length i think i need to you know what i should do i have an idea if mouse is pressed display the particle so i can now i can see where they are if you wiggle it reasonably fast you can get standing waves at multiples of the bass frequency quite easily anyway i'm happy with this right now um this is kind of this is basically what i wanted to do um just get like a quick example of something like this um which is perfect um i wonder if you could make an object drop on top of it like a trampoline that's a great idea that's a great idea anyway so i hope that people uh can play with this and make something kind of fun with it uh this will be an example of this will be coming in my videos honestly if this is trying to make this i really should just use toxic libs which is a library that's got this kind of physics engine built into it i don't know why this is this is very um my one of my kids homework assignments for their like tech class was to make an oddly satisfying video and this is very oddly satisfying um so i will i'm going to save this and come back to this later okay um i have to go i haven't been doing a good job of showing community contributions it's something i need to get back into um maybe uh let's show let's uh i'm gonna be leaving in the next be um turning off the stream in the next few minutes this was kind of like the main thing that i wanted to work on um and hopefully people will play with this example and make some stuff um but let me just quickly um get our wheel here um because why not look at one thing that somebody from the community has made um we can spin this wheel oh you are not getting the sound effects quad tree and flocking simulation let's take a look at this one so by the way if you're wondering what's going on in all in just about every single um video that's on the coding train website um if you go to the page for the video there's a place where you can add your own version of the video and you can see for example for this one nobody's added one so this one is totally blank and if you add it it gets added to a database again we've really got a lot of work to do to get all these systems talking to each other that i can then pick one randomly and feature it in a live stream i aspire to do much more of this but i'm just going to do one right now this is created by ernst schmidt the original challenge is the flocking challenge and if we click over here we're going to see hopefully this is going to load oh wow so this is looking at my flocking video and uh presumably and adding the sort of quad tree which is a way to make it more oh and hunter park's random number yes 100 parks thank you for remembering i'm going to do that before i go this is a wonderful methodology for improving performance in any type of system where every object has to check the location of every other object so what the quadtree is doing is it's allowing each one of these boyds to only look at their neighbors that are registered in one of these cells that's near to them without that quad tree um you know especially if i up the unit count to 600 this is amazing by the way i need to remember this when i'm demonstrating flocking because i'm trying to show all of these different behaviors and uh the capacity and how to make this work this is this is incredible this is like everything i ever wanted in my own flocking quadtree example big train whistle shout out to um ernst schmidt who created this ernstschmidt.com is their website we can take a look at it and boy everybody should check out ernst schmidt's website um wild this is that's really incredible work thank you for that i'm hoping somehow the universe will help me remember when i go to make the videos about flocking that i can show that example really terrific okay i can hear my children yelling to me so couple last things before i go first oh wrong wrong button hunter parks thank you so much for your membership and support oh my god this desk i need to buy a new desk people anybody have any desk recommendations can you this is like about to like totally collapse everything's gonna just fall and crash to the ground i want a nice standing desk that they can move up and down um your random number is hunter page 273 column zero row thirteen thousand six hundred fifteen forty nine thousand and eighty uh that's your random number hold on to that random number and i am now going to show you all very quickly two quick things um that i am looking for contributions and help with let's go to the desktop let's go to whistles and um it's not uh all right hold on everyone let's go to github.com codingtrain i've gotta go 306. t time um repositories random whistle here we go this is probably the same as what i've got but just in case so let's take a look at this in visual studio code this is uh that's fine i can look at everything on the desktop here this is a project which basically um what it does is and let's uh does it have a note server involved with it i can't remember it's just yeah no it doesn't um what what are you kidding me um web server prayer okay working what this website does is uh so what was the random number there uh somebody give me uh let's say hunter park's random number was somebody quickly i could scroll to the past chat give me one of your random numbers anybody from today whether it's uh abe uh um etc i need a random number i need a random number you guys are so far behind me in time it's no problem waiting waiting waiting waiting waiting i'm gonna get one drum roll please chad come on 49 080 thank you hunter so 49 080 was hunter's random number so now when i click generate what this is going to create is a random walk pattern that's been seated with that particular random number so this is hunter park's unique random walk pattern and where this is going to go is i had did i have this video under downloads on your desktop um shoot do i have this this is all from i showed it last stream i wanted to show that is this it yeah i think this is it yeah there we go so this is going to go on to and let me zoom ahead so the idea is i'm making these train whistles uh for members and that this pattern will be generated uh it was downloaded here then it will be laser etched onto this particular uh whistle and sent out um to the member now at the moment uh this is quite a a it's not that expensive but quite a process for this so i'm just giving this for people i think it's at the conductor's level um but eventually i'd like to give this to all members and everyone in the world should have their own train whistle but that's what's going on here so what i would really like is help with this repo i mean this website needs to have some new features for example it needs to be explained what it's doing designed a bit more nicely it needs to have some kind of database associated with it where members can keep track of their numbers and see their patterns maybe i want the code snippet to also be generated as part of it so if you would like to contribute to this um oh and of course it's on um there there's a readme here thank you to violet who put this together there's some suggestions for things we're looking to fix um and um that um and also i think it is live using github pages so i probably should add a link just to the readme of where it is but if i go under settings or if i just go to uh coding train dot github dot io slash random whistle there we go you'll see it here um so this url so let me paste this into discord so i would love for folks i meant to work on this more during the live stream today but and like add some features or chat about it but um uh obviously i didn't get to that so i just wanted to quickly show that for anyone who's still watching uh please come in and help with that the other thing i wanted to mention that i did um uh if i go back here to uh gump 500 what's what's the chance no this is not gonna okay so um one of the things that i did i'm gonna just show you this that i learned i taught myself and i would like to make some videos about oh there is a dot env file there hold on a sec everybody okay no it doesn't have what i need in it um i have been um learning how to uh work with uh mongodb i have some videos on firebase as a database as a service so i got it to work this again people have no idea what i'm talking about but this was a project i worked on last live stream and i think it's live hosted via glitch at gump 500 let me go to um let me just open it up on glitch i'll show it to you there yep so what this does i know you can't see it yet i'm going to show it to you in a minute is we come back here this project which is on github but also hosted on glitch it is basically keeping track of anyone on twitter who posts a message with the uh a certain number of miles that they've run and um um and then it keeps track of that miles and it's part the that number of months are uh i bring i'm a little brain dead all of a sudden so if i go to twitter and look at uh forest 500 um let's go to um i think this is where i was experimenting with it so if you use this hashtag gump500 here we go forrest gump 500 this is just a initiative for people to motivate themselves to run 500 miles in one year and i'm really trying to participate in this and so um i wanted to build something that could help keep track of people who are participating in this so basically if you go and i'm let's just let's do an example right now if i say tweet gump 500 and i ran actually today i did run i ran three miles today i'm going to tweet this right now i'm going to go back to this project i'm going to look in the logs it's listening to twitter there you go it just r it got this tweet it noted the time um it added oh i don't know why it got .1 miles there's a mistake in it right now why did it get point one out of three miles um and it uh added it to the database it found the document in the database and that matched the criteria and updated it and then now if i refresh this oops i didn't need to refresh the whole project i meant to just refresh the web page you can see that it went to 3.1 miles i'm not sure why it got point one so there's a mistake in it currently um so um so again i wanted to work on this more because i want to have like a nice visualization more error handling i want to figure out way for people who are developing it to be able to work with like a local database that's just a sample database um so but i've run out of time i'll have to come back to this on another live stream but these are um these are two sort of like community projects that i'm looking for help and contributions come and join the discord it's a great place to discuss this stuff um and all of that all of all the things so stay tuned this is it this is the end of today's stream um i'm looking for my goodbye song thanks for tuning in to today's coding train live stream next week on the cutting train i'll be back talking about more things like i'm talking about right now um oh it added three miles yeah hold on hold on let me see people are telling me it was not a mistake ah okay this was not a mistake it's finding the this is a console log that's finding this particular user and showing what was there previously and it doesn't show that's before it was updated so if i did another tweet um right here people are replying to me and if i said um add two more miles to my toto total oh boy i don't know i don't think it will work if i put more in there i have to say too much the regular expression tracking is not so intelligent so now if i go there let's see if that comes up did i not did i forget the oh there it is sorry ah now we see yes that was last saturday 0.1 miles then this one so now it should be the total should be 5.1 and the total is 5.1 so i have no way to um for a user tweeting from their account to subtract miles that's something i should definitely add um just to set the total like somebody might be like joining this initiative and again this is all honor systems so somebody could just tweet like this person did i ran 500 miles like i don't know who you're what you're so i don't know how to deal with some sort of form of moderation this is just sort of an honor systems thing but um but i would like to add a feature where if you said like subtract miles from my total um or maybe just set the total two so if i were joining it right now but i'd already run 30 miles like 10 times three miles each like i wouldn't want to have to tweet 30 10 times so there should be like a set total so those are things i want to add to this but really what i would love is some nice visualization stuff and then i gotta i think smarter every day is kind of running this initiative i haven't contacted him to see if wants to like do anything official with it i mean using the hashtag it could also set up a twitter account where you at mention it it's more of a bot that's listening to at mention and replying but those are some things that i'm interested in people um adding oh i gotta go for tea time i have ten i'm 20 minutes late already for tea time um just looking to see so um so stay tuned for new nature of code videos coming out i think to be honest i might that's my focus i might be the live stream should be about two or three per month they're not going to be every week i don't know what day yet um so stay tuned join the discord um if you one thing i wanted to mention because a lot of people are asking how do i know when you live stream so uh let me go into the discord um this is where i post links to things so for example i should right now post a link to this um gump 500 project um let me post that into discord but if you're looking to get notifications for when i'm live streaming this is what you want to do you want to join the discord and subscribe i don't use an at everyone so i you opt in to these notifications but i post updates here pretty frequently about my schedule and for example like today it was very last minute but i just said live stream incoming in 20 to 30 minutes so this is where um so somebody if somebody could remind me how you um subscribe to the notifications i think it's just like if i go to um i want to go to a channel that nobody can post in but me just for a minute i'm just going to go into useful links um like i think i'd say like i think it's just like exclamation point subscribe as the command yeah removed so that removed the notification for me so i want that back so i'm gonna subscribe and then i'm just gonna delete these messages i'll do that in a minute because they don't need to be here in this channel but this is how um you subscribe to get those notifications um thank you to the streambot team who maintains this uh discord bot in the coding train um discord and if you want to learn how to make your own discord bot might i suggest going to thecodingtrain.com under learning under discord bots this is my whole set of there's now six videos uh stepping you through how to make your own discord bot with no.js i do have some more that i want to make we'll see if i get to them but that's coming all right everybody thank you for tuning in you are wonderful i love you all see you next week on well i don't know if i'll see you next week but see you next time on the coding train all right goodbye everybody as always i always forget that this stop this stop this stop this stop i'm gonna do this stop this stop i'm gonna do this this dot all right i've got to shut everything down everybody i'll see you next time goodbye never forget this dot somebody composed that song for me
