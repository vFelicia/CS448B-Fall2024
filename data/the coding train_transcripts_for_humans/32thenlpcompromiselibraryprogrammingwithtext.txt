With timestamps:

00:00 - hello welcome to another scratchy voice
00:03 - video
00:04 - I apologize these videos I have a bit of
00:05 - a head cold making them but I'm gonna
00:07 - push forward anyway and in this video I
00:09 - am going to talk to you about something
00:11 - called NLP compromise now when you think
00:13 - of I don't know what you think of when
00:15 - you think of natural language processing
00:16 - and the and the whatever but I often
00:19 - think of the programming language Python
00:21 - and there are a lot of amazing natural
00:23 - language processing toolkits and
00:25 - libraries and frameworks and things that
00:26 - you can work with with Python but here I
00:28 - am I'm making some stuff happen in the
00:30 - browser in JavaScript I'm using
00:32 - something called p5.js I thought it
00:33 - would be worth seeing what's possible
00:35 - with JavaScript and in the previous
00:38 - video I looked at a JavaScript text
00:41 - library called Rita Jas and in this
00:43 - video I want to look at one called NLP
00:45 - compromise which has some similar
00:47 - functionality and other different
00:50 - functionality as well so let's first
00:52 - just look at how do I even use NLP
00:55 - compromise so first of all here's the
00:56 - github repository you can go there and
00:58 - as with a lot of github repositories it
01:01 - has a nice read meet which kind of gives
01:03 - you some of the basics and you can I
01:06 - encourage you to read through this click
01:08 - on some of the links and see how it
01:09 - works but you can get this basic idea
01:11 - like there's this syntax of chaining in
01:15 - a way I have an NLP object and I want to
01:18 - call a function sentence I'm gonna pass
01:20 - it as string then I can perform an
01:23 - action on it like turn it to past tense
01:26 - and then I can ask and I can also then
01:28 - get the text of that past tense version
01:31 - of this sentence so a lot of what you
01:33 - can do with NLP compromise is pass it a
01:36 - sentence and do things to it like negate
01:37 - this set and start turn it to past tense
01:39 - it knows about verbs and how to
01:40 - conjugate verbs and and various things
01:44 - like that so let me let's go forward at
01:47 - least and getting started working with
01:48 - in our code so if I scroll down here you
01:50 - can see okay
01:50 - off you go hmm NPM install NLP
01:54 - compromise ooh what's that well one
01:57 - thing I will point out is that this is
01:59 - something you can also use with
02:00 - something called node which is a
02:02 - server-side package for JavaScript and
02:04 - I'm going to look at that in some future
02:05 - videos but right now I'm in the
02:07 - client-side and I need a client-side
02:09 - JavaScript library in the same way that
02:12 - I am referencing
02:14 - here in my HTML file I'm referencing the
02:17 - p5.js libraries I want to reference NLP
02:20 - compromise and in a previous video I
02:22 - showed you how to download the Rita Jas
02:25 - library directly to your hard drive
02:26 - here's another way that I can do it
02:28 - because it gives me the code right here
02:30 - I can actually just take this entire
02:31 - script tag copy it and I can paste it
02:34 - right here into my index.html file so
02:37 - this is now referencing a version of the
02:40 - library that has been placed on a CDN a
02:43 - CDN referring to a content delivery
02:44 - network fancy word for a web server and
02:47 - you can see that web server is unpick AG
02:49 - comm and the libraries promise dot means
02:52 - the minified version cas so even just
02:54 - adding that to my index that HTML file
02:56 - should make something happen
02:59 - well maybe not I expected did I save
03:02 - that let me try one more time I expected
03:05 - to see maybe a little initialization
03:07 - message happening in the console but
03:09 - maybe I need to actually do something
03:10 - with NLP compromise first so what's the
03:12 - first thing that I need to do one thing
03:14 - with this library that I need is I want
03:16 - to have a variable that I can always
03:19 - just everything that I'm going to do
03:20 - with this library is essentially is a
03:22 - function that I'm gonna call on a
03:24 - variable that kind of holds the whole
03:26 - library and the actual library is called
03:29 - and is by default called an LP
03:32 - compromise so but I want to just be able
03:36 - to have a reference called NLP which
03:39 - refers to an LP compromise window to NLP
03:41 - compromise for short and I realize this
03:43 - might cause me a problem I'm gonna keep
03:45 - going now so let's look at what happened
03:49 - now if I say NLP that work yeah look at
03:52 - that so look I have this nice now like
03:55 - in LP I suddenly have all of this in
03:57 - front of all these functions that I can
03:59 - call like adjective adverb date lexicon
04:01 - so like you know what happens if I just
04:04 - call something like NLP dot sentence
04:09 - this is a test and that doesn't say a
04:14 - sentence there can i click sentence you
04:18 - can see haha now it made me a sentence
04:20 - and it has all sorts of things in it has
04:22 - terms you can see it terms has the word
04:24 - is which has a part of speech
04:26 - and all this like metadata about the
04:29 - stuff that I'm doing so you can see this
04:31 - is pretty exciting that NLP compromise
04:33 - has all this stuff so let's let's look
04:35 - at one quick thing that I can do like
04:37 - what if what I want to do is negate
04:39 - anything that somebody types into that
04:41 - form so something that I can do right
04:44 - I've got the same set up that had the
04:46 - Rita example where whenever I click
04:48 - Submit I get this string that the user
04:50 - entered and then I'm gonna spit some new
04:52 - text out so in other words I'm gonna do
04:54 - this and it spits out it was a dark and
04:56 - stormy night so what if I wanted what if
04:58 - I say NLP dot sentence s so I want the
05:03 - output to be the result of well let me
05:08 - do this in a bunch of different steps
05:09 - even though I could chain it all in one
05:11 - line of code I'm gonna say let me first
05:13 - make a sentence object then let me make
05:16 - the output I'm gonna sentence dot negate
05:22 - now you might think this is enough I
05:24 - want to negate that sentence and that's
05:26 - gonna give me the output but everything
05:27 - in NLP compromises like this object with
05:29 - all this information stored in it and
05:31 - all I want is the actual text so I need
05:33 - to just say negate the sentence and give
05:35 - me the text and now if I run this and I
05:38 - hit submit that didn't work
05:42 - oops so I made a mistake which is that
05:45 - then the gate function is actually not a
05:47 - function you can call on an unintel NLP
05:50 - compromise sentence it's something you
05:52 - have to call on an NLP compromised
05:54 - statement subtle distinction there but
05:56 - you but so if I want to negate something
05:59 - I need to use the NLP statement function
06:02 - and I'll just call this a statement
06:04 - instead and now I should be able to
06:07 - negate that and see the output
06:09 - so let's see how that works whoops I'm I
06:11 - was looking at by the way the readme has
06:13 - a as a reference for all this stuff and
06:15 - shows you different examples and that's
06:17 - how I noticed that I made that mistake
06:18 - because here in the example an LP
06:20 - statement she sells seashells negate
06:24 - text okay so here we go and now if I hit
06:27 - refresh and hit submit it wasn't a dark
06:30 - and stormy night I am NOT teaching on a
06:35 - live stream so
06:38 - I am teaching on a live stream so you
06:41 - can see here this is a kind of powerful
06:43 - you know that just as a little tiny
06:45 - little demo isn't very much I'm just
06:46 - taking a sentence and inverting the the
06:50 - negating it but you can imagine what
06:53 - kind of creative outcomes could come
06:55 - from this and also just seeing this I'm
06:57 - only scratching the surface of what is
06:59 - possible with NLP compromise
07:01 - I meant to start I started with the
07:03 - sentence to just show you a quick
07:05 - example of negating it and then I
07:06 - realized I needed a statement but I want
07:08 - to back up and use that sentence
07:09 - function because the sentence function
07:11 - is kind of a core element of NLP
07:14 - compromise that allows you to analyze
07:16 - and do stuff with a sentence so let's
07:18 - let's look at some things that I could
07:19 - do there so one thing I want to do is
07:21 - I'm gonna go back I'm gonna I'm gonna
07:23 - comment I'm gonna take this out I'm
07:24 - going to save our sentence equals NLP
07:28 - sentence s and actually let me just go
07:31 - into the console to test out some of
07:33 - these ideas so let's say I type var s
07:35 - equals it was a dark and stormy night
07:38 - and now I'm gonna use the NLP sentence
07:40 - function to make a sentence object I'm
07:43 - just call it Sen for short I'm gonna say
07:45 - NLP sentence s so now I have this
07:49 - sentence object and it has tons of stuff
07:52 - in it one of the things in it that's
07:54 - really key for me to use is this array
07:57 - called terms so I can look at the
07:59 - sentence terms so the NLP library has
08:02 - actually tokenized that sentence into
08:04 - word chunks this is very good because I
08:07 - can say
08:07 - Sen terms index zero and now I have this
08:12 - object that has all this information
08:13 - about the first term the whitespace
08:16 - that's around it what is the text of
08:18 - that term what is it two parts of speech
08:20 - reasoning there's all this metadata in
08:22 - there that I can make use of so for
08:24 - example I can say terms index 0 dot txt
08:27 - and now I have that particular text
08:29 - terms index 0 dot POS and I have this
08:32 - object that's telling me it's a noun and
08:34 - a pronoun so there's lots of metadata in
08:37 - there so what I want to do now is take
08:39 - any sentence and PluralEyes all the
08:43 - nouns this is something that I can do
08:45 - NOP compromise knows how to do things
08:47 - like take a verb and make it future
08:49 - tense or positive so let's PluralEyes
08:50 - all the nouns
08:51 - and make the verbs future tense okay
08:54 - let's do that all right
08:57 - so now here we go so what I want to do I
09:02 - have the sentence in the code and I want
09:04 - to say for VAR I equals 0 I is less than
09:07 - terms dot length I plus plus and just to
09:16 - make sure I can rebuild it let's start
09:18 - again with an empty output and let's say
09:20 - output plus equals terms index I dot txt
09:27 - create P output okay so now let's run
09:33 - this again and ah terms is not defined
09:36 - Oh
09:37 - sentence not terms sentence not terms
09:40 - and write terms is part of the sentence
09:45 - object so I need to add that in there
09:46 - and now I can submit so again I've lost
09:49 - the whitespace yeah I seem to recall
09:53 - that something in those terms object
09:55 - tells me something about whitespace
09:57 - I hesitate to go down this road but
10:00 - let's try to stay true to the whitespace
10:01 - here I think that'll be interesting so
10:03 - let's try this again I'm gonna I'm gonna
10:06 - debug this kind of here in the I'm going
10:11 - to do this again and I'm gonna say terms
10:14 - whoops
10:14 - esta terms index 0 nope
10:18 - Oh sentence not terms index 0 so let's
10:21 - look at the whitespace sentence terms
10:25 - index zero dot dot whitespace was that
10:28 - what it was
10:28 - ah look at this preceding trailing oh
10:32 - this is exciting look at this so this
10:35 - you know that this may exist in other
10:36 - libraries and frameworks but I'm just
10:37 - sort of discovering it here this is
10:39 - telling me what's coming before it and
10:41 - what's coming in after it so this is
10:43 - very this is great because I can rebuild
10:45 - the text so let's actually use the
10:46 - trailing whitespace is what I'm gonna do
10:48 - so I'm gonna then say output plus equals
10:53 - sentence dot terms index i dot white
10:58 - space dot trailing so this should give
11:02 - me I want to put the text of the output
11:04 - and
11:05 - the trailing whitespace in there in the
11:07 - output and now look at this I rebuilt
11:11 - the sentence exactly from what it was
11:13 - before so this is great because i junked
11:15 - it up I analyzed it now I can play with
11:19 - the terms individually but I can put it
11:20 - back together and retain its exact
11:22 - original form now what I want to do here
11:25 - is say let me make a variable part of
11:28 - speech and let me look
11:30 - terms index I POS so I want to look at
11:33 - that I want to just grab the parts of
11:35 - speech and put it of that term and put
11:37 - it in a variable and now I want to say
11:38 - if POS be part of speech noun I'm just
11:43 - gonna do something right now I'm gonna
11:45 - say output plus equal noun just to like
11:48 - make sure this is working so I want to
11:50 - check is it a noun
11:52 - output plus equal noun it submit okay so
11:57 - you can see it noun was a dark and
11:58 - stormy night noun so great so that is
12:00 - working so this is a way of testing if
12:03 - that's a noun
12:04 - now what if it is a noun what I want to
12:06 - do now is take that noun and PluralEyes
12:09 - it how do I plural eyes it let's go back
12:11 - to the NLP compromise website and look
12:13 - here I believe it's one of the examples
12:15 - referenced here there it is so if I call
12:18 - NLP noun and pass in that text now I've
12:22 - made this noun object and I can call
12:25 - functions on it like PluralEyes plural
12:27 - eyes or something you could do with it
12:28 - now
12:30 - so if POS dot noun then I want to say so
12:35 - I'm gonna say a new word equals so I'm
12:45 - gonna put this here sorry so if it's a
12:47 - noun I want to just say var noun equals
12:53 - that text and actually you know what I'm
12:55 - going to do I think what would be useful
12:57 - here is to actually just pull that word
12:59 - out so I want to get the word out and
13:01 - put it in its own variable because I'm
13:03 - gonna need to do so many things to it
13:05 - it's nice to have it in its own variable
13:06 - and then I'm gonna say noun equals NLP
13:10 - I'm gonna say new word equals MLP dot
13:15 - noun that word so make a noun object
13:19 - that word dot PluralEyes and then and
13:28 - actually I'm just gonna say this right
13:32 - and then output plus equal word so what
13:36 - I'm doing here I think this is a nice
13:37 - way of doing it as I'm saying give me
13:39 - that text if it's a noun plural eyes it
13:42 - and change the variable value and then
13:44 - output it so the original word is placed
13:46 - in the output or the pluralized if it's
13:48 - a noun and you know I feel pretty
13:50 - confident about this let's go if POS dot
13:52 - verb word equals NLP dot verb that word
14:01 - and then future so I think that's gonna
14:04 - put it in future tense so with a word
14:06 - verb I can make it future tense so let's
14:08 - see how that works I'm gonna come back
14:11 - hit refresh hit submit uh verb dot
14:15 - future is not a function and so maybe I
14:18 - need to say conjugate or something let's
14:20 - look haha
14:23 - yeah so what what what I what I can do
14:25 - is actually take the verb conjugate it
14:28 - which returns to me a list of all the
14:31 - conjugations that same and then I could
14:33 - pull out the future one so I imagine
14:35 - that it worked that way but it didn't I
14:36 - can say conjugate conjugate dot future
14:42 - so now I want to take the word conjugate
14:45 - it and then grab only the future tense
14:47 - so now if I go back and do this and hit
14:50 - submit its will be a dark and stormy
14:54 - nights I guess it's was an ally I was
14:58 - teaching in a live stream his will was I
15:04 - eyes will was teach in a will live will
15:09 - stream well all sorts of crazy stuff is
15:11 - going on here so because I so
15:15 - interestingly enough you can see how
15:19 - this isn't working perfectly but I'm
15:21 - getting the basic idea that I'm sure I
15:23 - could finesse how I'm analyzing the
15:26 - context and all sorts of things to sort
15:28 - of and to sort of work out what it is
15:30 - that I'm
15:31 - so I want to just point out that the the
15:34 - code that I'll release with this
15:38 - particular video kind of has a lot of
15:41 - this built into it I'm just going to
15:42 - look at this example so here is and this
15:45 - should say future so you know I can
15:47 - pluralize all the nouns or I can make it
15:49 - the quick brown fox jumped over the lazy
15:50 - dog and now the quick brown fox will
15:54 - jump over the lazy dog boy this debt
15:55 - this demonstration sentence worked a lot
15:57 - better let's come back to this the quick
16:01 - brown fox jumped over the lazy dog
16:05 - it's submit you can say the quick brown
16:07 - fox is will jump over the lazy dogs well
16:10 - there we go I'm not sure what sort of
16:11 - weird things I've got kind of from my
16:13 - goofy settings before ah ah and two
16:16 - tubers says I need to check if the term
16:18 - is not a pronoun so that would be a
16:20 - great improvement thank you very much so
16:22 - I can say if it's a noun and the POS is
16:26 - not a pronoun let's try that and I can
16:34 - say I was I I ran to the store I will
16:41 - run to the stores okay great so it
16:44 - didn't do that to I because I also check
16:46 - to make sure it's not a pronoun so you
16:48 - can see I'm muddling my way through this
16:50 - with a sort of you know but the point of
16:52 - what I'm showing you here is what's
16:54 - possible how do you take how do you load
16:56 - the library how do you create sentences
16:58 - how do you do stuff two different kinds
17:00 - of words and all of this is here and you
17:03 - can kind of look through what's
17:04 - happening here and what's nice about
17:05 - this is you can also analyze the for all
17:09 - sorts of and there is by the way a
17:10 - corpus too so you can you can generate
17:13 - other words and and that type of thing
17:19 - also from NLP compromises okay so I hope
17:21 - you found this useful release the code
17:23 - with this and you know try to make some
17:25 - experiments to see how can you alter the
17:27 - way a text that sort of language of a
17:31 - certain text is by using NLP compromise
17:33 - to process it analyze it and change it
17:36 - okay so great and thanks for watching
17:39 - this video and I'll see you perhaps in a
17:41 - future one

Cleaned transcript:

hello welcome to another scratchy voice video I apologize these videos I have a bit of a head cold making them but I'm gonna push forward anyway and in this video I am going to talk to you about something called NLP compromise now when you think of I don't know what you think of when you think of natural language processing and the and the whatever but I often think of the programming language Python and there are a lot of amazing natural language processing toolkits and libraries and frameworks and things that you can work with with Python but here I am I'm making some stuff happen in the browser in JavaScript I'm using something called p5.js I thought it would be worth seeing what's possible with JavaScript and in the previous video I looked at a JavaScript text library called Rita Jas and in this video I want to look at one called NLP compromise which has some similar functionality and other different functionality as well so let's first just look at how do I even use NLP compromise so first of all here's the github repository you can go there and as with a lot of github repositories it has a nice read meet which kind of gives you some of the basics and you can I encourage you to read through this click on some of the links and see how it works but you can get this basic idea like there's this syntax of chaining in a way I have an NLP object and I want to call a function sentence I'm gonna pass it as string then I can perform an action on it like turn it to past tense and then I can ask and I can also then get the text of that past tense version of this sentence so a lot of what you can do with NLP compromise is pass it a sentence and do things to it like negate this set and start turn it to past tense it knows about verbs and how to conjugate verbs and and various things like that so let me let's go forward at least and getting started working with in our code so if I scroll down here you can see okay off you go hmm NPM install NLP compromise ooh what's that well one thing I will point out is that this is something you can also use with something called node which is a serverside package for JavaScript and I'm going to look at that in some future videos but right now I'm in the clientside and I need a clientside JavaScript library in the same way that I am referencing here in my HTML file I'm referencing the p5.js libraries I want to reference NLP compromise and in a previous video I showed you how to download the Rita Jas library directly to your hard drive here's another way that I can do it because it gives me the code right here I can actually just take this entire script tag copy it and I can paste it right here into my index.html file so this is now referencing a version of the library that has been placed on a CDN a CDN referring to a content delivery network fancy word for a web server and you can see that web server is unpick AG comm and the libraries promise dot means the minified version cas so even just adding that to my index that HTML file should make something happen well maybe not I expected did I save that let me try one more time I expected to see maybe a little initialization message happening in the console but maybe I need to actually do something with NLP compromise first so what's the first thing that I need to do one thing with this library that I need is I want to have a variable that I can always just everything that I'm going to do with this library is essentially is a function that I'm gonna call on a variable that kind of holds the whole library and the actual library is called and is by default called an LP compromise so but I want to just be able to have a reference called NLP which refers to an LP compromise window to NLP compromise for short and I realize this might cause me a problem I'm gonna keep going now so let's look at what happened now if I say NLP that work yeah look at that so look I have this nice now like in LP I suddenly have all of this in front of all these functions that I can call like adjective adverb date lexicon so like you know what happens if I just call something like NLP dot sentence this is a test and that doesn't say a sentence there can i click sentence you can see haha now it made me a sentence and it has all sorts of things in it has terms you can see it terms has the word is which has a part of speech and all this like metadata about the stuff that I'm doing so you can see this is pretty exciting that NLP compromise has all this stuff so let's let's look at one quick thing that I can do like what if what I want to do is negate anything that somebody types into that form so something that I can do right I've got the same set up that had the Rita example where whenever I click Submit I get this string that the user entered and then I'm gonna spit some new text out so in other words I'm gonna do this and it spits out it was a dark and stormy night so what if I wanted what if I say NLP dot sentence s so I want the output to be the result of well let me do this in a bunch of different steps even though I could chain it all in one line of code I'm gonna say let me first make a sentence object then let me make the output I'm gonna sentence dot negate now you might think this is enough I want to negate that sentence and that's gonna give me the output but everything in NLP compromises like this object with all this information stored in it and all I want is the actual text so I need to just say negate the sentence and give me the text and now if I run this and I hit submit that didn't work oops so I made a mistake which is that then the gate function is actually not a function you can call on an unintel NLP compromise sentence it's something you have to call on an NLP compromised statement subtle distinction there but you but so if I want to negate something I need to use the NLP statement function and I'll just call this a statement instead and now I should be able to negate that and see the output so let's see how that works whoops I'm I was looking at by the way the readme has a as a reference for all this stuff and shows you different examples and that's how I noticed that I made that mistake because here in the example an LP statement she sells seashells negate text okay so here we go and now if I hit refresh and hit submit it wasn't a dark and stormy night I am NOT teaching on a live stream so I am teaching on a live stream so you can see here this is a kind of powerful you know that just as a little tiny little demo isn't very much I'm just taking a sentence and inverting the the negating it but you can imagine what kind of creative outcomes could come from this and also just seeing this I'm only scratching the surface of what is possible with NLP compromise I meant to start I started with the sentence to just show you a quick example of negating it and then I realized I needed a statement but I want to back up and use that sentence function because the sentence function is kind of a core element of NLP compromise that allows you to analyze and do stuff with a sentence so let's let's look at some things that I could do there so one thing I want to do is I'm gonna go back I'm gonna I'm gonna comment I'm gonna take this out I'm going to save our sentence equals NLP sentence s and actually let me just go into the console to test out some of these ideas so let's say I type var s equals it was a dark and stormy night and now I'm gonna use the NLP sentence function to make a sentence object I'm just call it Sen for short I'm gonna say NLP sentence s so now I have this sentence object and it has tons of stuff in it one of the things in it that's really key for me to use is this array called terms so I can look at the sentence terms so the NLP library has actually tokenized that sentence into word chunks this is very good because I can say Sen terms index zero and now I have this object that has all this information about the first term the whitespace that's around it what is the text of that term what is it two parts of speech reasoning there's all this metadata in there that I can make use of so for example I can say terms index 0 dot txt and now I have that particular text terms index 0 dot POS and I have this object that's telling me it's a noun and a pronoun so there's lots of metadata in there so what I want to do now is take any sentence and PluralEyes all the nouns this is something that I can do NOP compromise knows how to do things like take a verb and make it future tense or positive so let's PluralEyes all the nouns and make the verbs future tense okay let's do that all right so now here we go so what I want to do I have the sentence in the code and I want to say for VAR I equals 0 I is less than terms dot length I plus plus and just to make sure I can rebuild it let's start again with an empty output and let's say output plus equals terms index I dot txt create P output okay so now let's run this again and ah terms is not defined Oh sentence not terms sentence not terms and write terms is part of the sentence object so I need to add that in there and now I can submit so again I've lost the whitespace yeah I seem to recall that something in those terms object tells me something about whitespace I hesitate to go down this road but let's try to stay true to the whitespace here I think that'll be interesting so let's try this again I'm gonna I'm gonna debug this kind of here in the I'm going to do this again and I'm gonna say terms whoops esta terms index 0 nope Oh sentence not terms index 0 so let's look at the whitespace sentence terms index zero dot dot whitespace was that what it was ah look at this preceding trailing oh this is exciting look at this so this you know that this may exist in other libraries and frameworks but I'm just sort of discovering it here this is telling me what's coming before it and what's coming in after it so this is very this is great because I can rebuild the text so let's actually use the trailing whitespace is what I'm gonna do so I'm gonna then say output plus equals sentence dot terms index i dot white space dot trailing so this should give me I want to put the text of the output and the trailing whitespace in there in the output and now look at this I rebuilt the sentence exactly from what it was before so this is great because i junked it up I analyzed it now I can play with the terms individually but I can put it back together and retain its exact original form now what I want to do here is say let me make a variable part of speech and let me look terms index I POS so I want to look at that I want to just grab the parts of speech and put it of that term and put it in a variable and now I want to say if POS be part of speech noun I'm just gonna do something right now I'm gonna say output plus equal noun just to like make sure this is working so I want to check is it a noun output plus equal noun it submit okay so you can see it noun was a dark and stormy night noun so great so that is working so this is a way of testing if that's a noun now what if it is a noun what I want to do now is take that noun and PluralEyes it how do I plural eyes it let's go back to the NLP compromise website and look here I believe it's one of the examples referenced here there it is so if I call NLP noun and pass in that text now I've made this noun object and I can call functions on it like PluralEyes plural eyes or something you could do with it now so if POS dot noun then I want to say so I'm gonna say a new word equals so I'm gonna put this here sorry so if it's a noun I want to just say var noun equals that text and actually you know what I'm going to do I think what would be useful here is to actually just pull that word out so I want to get the word out and put it in its own variable because I'm gonna need to do so many things to it it's nice to have it in its own variable and then I'm gonna say noun equals NLP I'm gonna say new word equals MLP dot noun that word so make a noun object that word dot PluralEyes and then and actually I'm just gonna say this right and then output plus equal word so what I'm doing here I think this is a nice way of doing it as I'm saying give me that text if it's a noun plural eyes it and change the variable value and then output it so the original word is placed in the output or the pluralized if it's a noun and you know I feel pretty confident about this let's go if POS dot verb word equals NLP dot verb that word and then future so I think that's gonna put it in future tense so with a word verb I can make it future tense so let's see how that works I'm gonna come back hit refresh hit submit uh verb dot future is not a function and so maybe I need to say conjugate or something let's look haha yeah so what what what I what I can do is actually take the verb conjugate it which returns to me a list of all the conjugations that same and then I could pull out the future one so I imagine that it worked that way but it didn't I can say conjugate conjugate dot future so now I want to take the word conjugate it and then grab only the future tense so now if I go back and do this and hit submit its will be a dark and stormy nights I guess it's was an ally I was teaching in a live stream his will was I eyes will was teach in a will live will stream well all sorts of crazy stuff is going on here so because I so interestingly enough you can see how this isn't working perfectly but I'm getting the basic idea that I'm sure I could finesse how I'm analyzing the context and all sorts of things to sort of and to sort of work out what it is that I'm so I want to just point out that the the code that I'll release with this particular video kind of has a lot of this built into it I'm just going to look at this example so here is and this should say future so you know I can pluralize all the nouns or I can make it the quick brown fox jumped over the lazy dog and now the quick brown fox will jump over the lazy dog boy this debt this demonstration sentence worked a lot better let's come back to this the quick brown fox jumped over the lazy dog it's submit you can say the quick brown fox is will jump over the lazy dogs well there we go I'm not sure what sort of weird things I've got kind of from my goofy settings before ah ah and two tubers says I need to check if the term is not a pronoun so that would be a great improvement thank you very much so I can say if it's a noun and the POS is not a pronoun let's try that and I can say I was I I ran to the store I will run to the stores okay great so it didn't do that to I because I also check to make sure it's not a pronoun so you can see I'm muddling my way through this with a sort of you know but the point of what I'm showing you here is what's possible how do you take how do you load the library how do you create sentences how do you do stuff two different kinds of words and all of this is here and you can kind of look through what's happening here and what's nice about this is you can also analyze the for all sorts of and there is by the way a corpus too so you can you can generate other words and and that type of thing also from NLP compromises okay so I hope you found this useful release the code with this and you know try to make some experiments to see how can you alter the way a text that sort of language of a certain text is by using NLP compromise to process it analyze it and change it okay so great and thanks for watching this video and I'll see you perhaps in a future one
