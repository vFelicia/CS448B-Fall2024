With timestamps:

00:00 - okay it's time what are you watching by
00:02 - the way you are watching a video where I
00:05 - am now in javascript in the browser
00:07 - training a neural network to recognize
00:10 - doodles of cats rainbows and trains and
00:14 - you don't get to see anything here yet
00:16 - we're gonna I'm gonna get to that
00:17 - eventually all I'm doing is reporting
00:18 - that I trained over one Epoque with
00:21 - 2,400 different doodles 800 cats
00:24 - 800 rainbows 800 trains now I don't to
00:28 - add to this video is I want to test
00:30 - I have also testing data which the
00:33 - neural network has not been trained with
00:34 - that is also labeled I want to see is it
00:37 - able to guess what any of that stuff is
00:39 - and how accurately is it able to guess
00:41 - so let's do that right now so one thing
00:45 - that I did previously is I took all of
00:48 - the training data and put it into one
00:52 - particular array so let's do that with
00:54 - the testing data as well
00:56 - shuffling doesn't really matter but I'm
00:58 - as well shuffle it because I'm not
01:00 - actually training in this case so what
01:02 - will take out the shuffling so I'm going
01:04 - to say let testing be an empty array and
01:08 - I'm going to put in everything all of
01:13 - the testing sorry I don't know why I'm
01:14 - just copy-paste and so this I'm gonna I
01:25 - am going to so actually let's do a
01:27 - little refactoring here let's let's take
01:30 - out let's take this and let's put this
01:34 - into a function called train or train
01:38 - epoch because I love the word epoch
01:40 - makes me sound like I'm doing something
01:41 - really fancy and futuristic so I'm gonna
01:45 - train for one epoch and so that's gonna
01:49 - go right here train epoch and you know
01:56 - this was kind of awkward what I did here
01:58 - and I thank you for me I have to be put
01:59 - in the chat I'm trying to be a person
02:01 - who uses some of these higher-order
02:02 - array functions these days so let's
02:04 - quickly hope I don't ruin everything
02:06 - one nice thing that I can do I don't
02:08 - need I don't need to have this little
02:12 - loop here
02:13 - just say inputs equals data map X X
02:19 - divided by 255 so this should this makes
02:22 - a new array which takes the previous
02:24 - array and divides each value by 255 and
02:27 - this uses arrow syntax and you can watch
02:29 - one of my higher-order function video
02:31 - tutorials about the map function but
02:33 - that just makes this a little bit
02:33 - cleaner so let's add that in and now
02:37 - let's run this again to make sure I
02:38 - didn't break it line 41 shuffle training
02:44 - oh I made this so let's pass in the
02:47 - training array and we're gonna train for
02:54 - one epoch finish there we go
03:01 - train for one epoch so now I'm gonna
03:04 - that still works I'm gonna comment this
03:05 - out and now I want to just check and
03:09 - take a look at the testing array to see
03:11 - if it has all the testing data in it and
03:13 - it does has 2600 which is right because
03:16 - if I had 800 it shouldn't have 2600 in
03:24 - it hold on
03:25 - oh yes look at this that's a bad error I
03:29 - need to be concatenated with testing so
03:32 - much for my copy pasting terrible
03:34 - terrible all right I knew 2600 was wrong
03:36 - 600 600 is right because it's 200 times
03:41 - 3 I have 600 test data points so now
03:44 - what I need to do and let's just do this
03:47 - with 1 all right I can still do I can
03:50 - evaluate how its going to do with the
03:52 - testing data without actually without
03:57 - actually training it so let's look at
03:59 - how this goes
04:00 - so let's write a function let's write a
04:03 - function called
04:04 - testing wait what did I call this a
04:07 - train EPOC test all with the testing
04:12 - data so let's do something similar to
04:15 - this function and let's rename this data
04:22 - just so it's no no let's not rename that
04:25 - so let's do
04:27 - test all with the testing data I don't
04:32 - need to shuffle it I want to go through
04:36 - everything I'm gonna do exactly the same
04:38 - thing on a map it same inputs the same
04:42 - targets the same way but now here's the
04:46 - thing I want to say let prediction or
04:55 - I'm gonna say let guess equal neural
04:59 - network dot predict inputs and actually
05:07 - I don't need to have targets right I
05:09 - just need to have a label right I want
05:12 - to predict my guess is what does it
05:16 - think it is so right now what I'm
05:18 - actually gonna do rather absurdly is I'm
05:21 - just gonna console.log the guess and I'm
05:28 - gonna console.log the label okay and I'm
05:34 - going to just for a moment I only want
05:37 - to do this with one data point in the
05:41 - testing data set so I want to test
05:44 - everything okay so I want to run this
05:48 - code it's so quiet now run this code and
05:51 - I want to see what does it think it is
05:53 - and what should it be
05:54 - let's run this so we can see look at
05:57 - this these are the numbers that came out
05:59 - totally randomly zero point zero five
06:01 - zero point zero eight zero point zero
06:04 - eight eight eight two so it thinks it's
06:06 - a number two zero one two and actually
06:10 - it's a zero it got it wrong it thinks it
06:15 - was a train but really it was a cat but
06:18 - that's okay it just got it wrong but
06:20 - this is good so first of all I need to
06:22 - do something where I evaluate which one
06:26 - is it based on these numbers so I need
06:28 - to find the index of the maximum I need
06:32 - to find the index of the maximum value
06:36 - so let's go to testing okay so I need to
06:40 - turn
06:41 - this guess which is just three numbers
06:42 - into a classification so basically I
06:46 - want to say let classification something
06:49 - like the maximum of so let's see is p5
06:53 - has a max function right where I can
06:55 - give it two values and it gives me the
06:57 - maximum one if I have an array with a
07:02 - bunch of values does the max function do
07:06 - anything for me it tells me which one
07:08 - was the maximum oh sorry
07:17 - ah let's I just want to make sure it's
07:21 - working I equals 0 to 9 111 for max a
07:29 - 111 but I want the index so does max
07:33 - secretly if I call it in a different way
07:35 - or I know Arg max is kind of the there
07:40 - is no p5 function called Arg max does
07:43 - array have Arg max that's the technical
07:45 - term that you'll see in a lot of kind of
07:48 - machine learning libraries are max is a
07:50 - function that will give you the index to
07:53 - the maximum value in the array so I
07:56 - could use I could use reduce and write
08:02 - my own Arg max function 60 in the chat
08:05 - just gave me a really great tip because
08:07 - I forgot what's that arrays have a index
08:14 - of function so look at this watch this
08:16 - if I say max a that gives me 111 what if
08:21 - I say a index of max a get gives me 3
08:27 - because the index of 3 of sorry 111 is 3
08:33 - right this would be negative 1 because
08:36 - it doesn't exist so I can say the
08:38 - classification is the guess da index of
08:45 - and let's separate this out let n equal
08:48 - max of the guess like this is the max
08:51 - value and then I want to get the
08:53 - classification is the in
08:54 - of that max and then I could just say I
08:59 - can just say console dot log let's look
09:07 - at it to make sure this is right
09:08 - console dot log classification and
09:13 - labels so guests are the raw array
09:16 - values classification is the Arg max the
09:20 - index to the one in that array that's
09:22 - the largest and this is the target label
09:24 - what it's supposed to be so let's run
09:26 - this and we got so let's look at this it
09:30 - makes sense this is a tiny number 0.03
09:33 - that's a big one 0.87 yes it gave me one
09:37 - zero one that's that's the oh I can
09:40 - check by the way I could just unfold as
09:41 - a look that's correct let's look at this
09:42 - ooh this one more time we can see like
09:45 - up got one again now it got one it's
09:48 - always the middle one that's interesting
09:50 - but that's just random to it got to so
09:53 - this is working now you'll notice these
09:55 - don't add up to one point two point two
09:58 - point one six so again I really should
10:02 - probably be implementing softmax as the
10:05 - function that I use that when I exiting
10:09 - out into the output from the neural
10:11 - network softmax is a special kind of
10:13 - activation function essentially and this
10:15 - is something I cover in the neural
10:16 - network series that takes whatever that
10:19 - output is and transforms it into
10:20 - probability values at all and up to 100%
10:23 - but I'm going to come back to that in
10:25 - another video this will just work just
10:27 - fine for right now and so I can say now
10:33 - let's say let correct equal zero if if
10:44 - classification equals the label then
10:48 - correct plus plus and then I want to say
10:53 - the percentage equals the number correct
10:57 - divided by the total which is testing
11:03 - dot length so consult law
11:08 - percent so let's look okay
11:12 - 0% correct 0% correct kind of get lucky
11:16 - and get one I got one correct okay so
11:19 - now what I need to do is let's do it for
11:20 - all of them
11:22 - let's not console.log everything and we
11:26 - should see right just by sheer
11:28 - randomness we should see about one-third
11:31 - correct right not there's been no
11:32 - training the neural network without any
11:34 - training without knowing anything should
11:36 - get one about one out of three correct
11:37 - oh why do I have oh I'm sorry
11:41 - this should happen at the very end after
11:43 - all the loops are done you can see by
11:48 - the way I did get exactly that 35% 35%
11:53 - 24% so there's a lot it was very
11:55 - feelings only to look at that exactly
11:58 - one third correct so things are going as
12:00 - expected but can we improve it can we
12:03 - improve it just a little bit will this
12:05 - actually work it's sort of sad that I'm
12:07 - doing this without showing you anything
12:09 - visual but I'm kind of thinking you the
12:11 - person watching who has visual talent
12:14 - you could actually start to ant but a
12:16 - project for this would be to animate the
12:18 - training process and all that but let's
12:20 - let's train for one epoch let's just run
12:25 - through the training set then let it
12:27 - test again I wish my sound effects were
12:29 - working because I would certainly use a
12:31 - trim control role and then I'm gonna say
12:35 - testing result and by the way I want to
12:40 - move this data prep up here and then I'm
12:45 - gonna just say this so basically we've
12:49 - prepped all the training data we've
12:52 - prepped all the testing data so much
12:54 - work by the way it is just to work with
12:56 - the data that is like a whole project
12:58 - unto itself then I'm gonna train and
13:00 - then I'm gonna test and we're gonna see
13:03 - and wouldn't it be nice if the testing
13:09 - maybe returned it
13:10 - so let's actually return that value and
13:15 - console.log it down here cuz I feel like
13:18 - that's kind of what I want to do
13:20 - correct percentage correct okay okay
13:31 - okay here we go let's see training
13:35 - training training of training all the
13:37 - way I like to train elected trained
13:39 - training all the way hey training
13:41 - training training machine
13:43 - hey we got eighty percent correct this
13:46 - shows that things are working right we
13:48 - got eighty percent correct that is so
13:50 - exciting to me at the horn Wow
13:55 - it was kind of good so that's really
13:58 - interesting hmm wow this is very
13:59 - exciting I don't even know what to do
14:01 - now
14:01 - percentage correct eighty percent let's
14:03 - just confirm that right ready I'm gonna
14:04 - comment out the training no training no
14:06 - training
14:07 - remember with training eighty percent
14:09 - correct no training 33 percent crack
14:12 - this is good machine learning it's a
14:16 - thing that sometimes kind of almost
14:18 - maybe sort of works but it's highly
14:21 - problematic for many important ethical
14:23 - and social reasons but that is something
14:26 - we will come back to so we should really
14:28 - be again this is a good point should I
14:29 - even be doing what I'm doing I think
14:31 - it's okay to be doing what I'm doing
14:32 - everything is pretty transparent we know
14:34 - where the data comes from we know what's
14:36 - in it and we can see and we've learned
14:39 - something about uh neural network oh I'm
14:40 - just amazed here okay so I should finish
14:42 - up this video but let's let's just do
14:44 - something interesting let's say for let
14:50 - I equals 0 I is less than 5 I plus plus
14:55 - so what we're going to do is we're going
15:00 - to Train oh we're going to Train we're
15:03 - gonna say epoch I plus 1 I'm just gonna
15:10 - start with 1 and go to 6 so I can just
15:16 - say epoch plus I so now what I'm gonna
15:19 - do is I'm going to see I'm gonna do it
15:21 - five times let's see how the percentage
15:24 - increases let's make sure my training
15:27 - function we randomizes the training data
15:31 - shuffles the training data that's very
15:32 - important each time okay let's see how
15:34 - much better gets training training
15:38 - training I'm training all my epochs
15:40 - loading loading loading in training
15:42 - epochs training Oh 76% correct training
15:46 - training training training hold my box
15:48 - you are watching a video where I am NOT
15:50 - editing out the fact of it 79%
15:53 - training training training I'm trading
15:55 - all the way I'm almost a puck three and
15:57 - here's what we say 81% training trading
16:00 - training trading all the way I'm almost
16:03 - a puck four add this is what we say
16:05 - Eddie went down why why so there's kind
16:09 - of a it's interesting to see this here
16:11 - so there's this is where now we're
16:12 - revealing I haven't really been I have
16:18 - not been I'm not doing everything that
16:21 - the quote-unquote best or optimal or way
16:24 - that I could be so for example this idea
16:27 - of soft backs and cross-entropy I've
16:29 - really got to come back to that that's
16:31 - hopefully a way that's going to improve
16:33 - the training process it's gonna be able
16:35 - to squeeze out a little bit more
16:37 - accuracy if I add these two elements to
16:41 - my machine learning system I also have
16:43 - something where it's like hello my
16:45 - training 2,400 drawings that's like the
16:48 - tiniest bit ever so I probably would
16:51 - want to run this with a much larger
16:53 - training set that's really gonna help I
16:55 - probably want a kind of a larger testing
16:57 - set as well just to have a better sense
16:59 - of how accurately this is doing but I
17:01 - think we're in pretty good shape here I
17:03 - feel like I'm happy with where I am so
17:05 - far in the next video what I want to do
17:09 - is kind of clean this up a little bit
17:11 - and think about maybe how to like
17:12 - animate the process like show that it's
17:15 - training so it's not just saying loading
17:18 - here forever until it gets to the end
17:21 - and then I'm going to add a part where I
17:24 - can draw my own little drawing and see
17:28 - if it could recognize my cat versus my
17:30 - rainbow versus my own train so in the
17:33 - next video that's what I'm gonna do and
17:35 - I'll see you there
17:40 - [Music]
17:45 - you

Cleaned transcript:

okay it's time what are you watching by the way you are watching a video where I am now in javascript in the browser training a neural network to recognize doodles of cats rainbows and trains and you don't get to see anything here yet we're gonna I'm gonna get to that eventually all I'm doing is reporting that I trained over one Epoque with 2,400 different doodles 800 cats 800 rainbows 800 trains now I don't to add to this video is I want to test I have also testing data which the neural network has not been trained with that is also labeled I want to see is it able to guess what any of that stuff is and how accurately is it able to guess so let's do that right now so one thing that I did previously is I took all of the training data and put it into one particular array so let's do that with the testing data as well shuffling doesn't really matter but I'm as well shuffle it because I'm not actually training in this case so what will take out the shuffling so I'm going to say let testing be an empty array and I'm going to put in everything all of the testing sorry I don't know why I'm just copypaste and so this I'm gonna I am going to so actually let's do a little refactoring here let's let's take out let's take this and let's put this into a function called train or train epoch because I love the word epoch makes me sound like I'm doing something really fancy and futuristic so I'm gonna train for one epoch and so that's gonna go right here train epoch and you know this was kind of awkward what I did here and I thank you for me I have to be put in the chat I'm trying to be a person who uses some of these higherorder array functions these days so let's quickly hope I don't ruin everything one nice thing that I can do I don't need I don't need to have this little loop here just say inputs equals data map X X divided by 255 so this should this makes a new array which takes the previous array and divides each value by 255 and this uses arrow syntax and you can watch one of my higherorder function video tutorials about the map function but that just makes this a little bit cleaner so let's add that in and now let's run this again to make sure I didn't break it line 41 shuffle training oh I made this so let's pass in the training array and we're gonna train for one epoch finish there we go train for one epoch so now I'm gonna that still works I'm gonna comment this out and now I want to just check and take a look at the testing array to see if it has all the testing data in it and it does has 2600 which is right because if I had 800 it shouldn't have 2600 in it hold on oh yes look at this that's a bad error I need to be concatenated with testing so much for my copy pasting terrible terrible all right I knew 2600 was wrong 600 600 is right because it's 200 times 3 I have 600 test data points so now what I need to do and let's just do this with 1 all right I can still do I can evaluate how its going to do with the testing data without actually without actually training it so let's look at how this goes so let's write a function let's write a function called testing wait what did I call this a train EPOC test all with the testing data so let's do something similar to this function and let's rename this data just so it's no no let's not rename that so let's do test all with the testing data I don't need to shuffle it I want to go through everything I'm gonna do exactly the same thing on a map it same inputs the same targets the same way but now here's the thing I want to say let prediction or I'm gonna say let guess equal neural network dot predict inputs and actually I don't need to have targets right I just need to have a label right I want to predict my guess is what does it think it is so right now what I'm actually gonna do rather absurdly is I'm just gonna console.log the guess and I'm gonna console.log the label okay and I'm going to just for a moment I only want to do this with one data point in the testing data set so I want to test everything okay so I want to run this code it's so quiet now run this code and I want to see what does it think it is and what should it be let's run this so we can see look at this these are the numbers that came out totally randomly zero point zero five zero point zero eight zero point zero eight eight eight two so it thinks it's a number two zero one two and actually it's a zero it got it wrong it thinks it was a train but really it was a cat but that's okay it just got it wrong but this is good so first of all I need to do something where I evaluate which one is it based on these numbers so I need to find the index of the maximum I need to find the index of the maximum value so let's go to testing okay so I need to turn this guess which is just three numbers into a classification so basically I want to say let classification something like the maximum of so let's see is p5 has a max function right where I can give it two values and it gives me the maximum one if I have an array with a bunch of values does the max function do anything for me it tells me which one was the maximum oh sorry ah let's I just want to make sure it's working I equals 0 to 9 111 for max a 111 but I want the index so does max secretly if I call it in a different way or I know Arg max is kind of the there is no p5 function called Arg max does array have Arg max that's the technical term that you'll see in a lot of kind of machine learning libraries are max is a function that will give you the index to the maximum value in the array so I could use I could use reduce and write my own Arg max function 60 in the chat just gave me a really great tip because I forgot what's that arrays have a index of function so look at this watch this if I say max a that gives me 111 what if I say a index of max a get gives me 3 because the index of 3 of sorry 111 is 3 right this would be negative 1 because it doesn't exist so I can say the classification is the guess da index of and let's separate this out let n equal max of the guess like this is the max value and then I want to get the classification is the in of that max and then I could just say I can just say console dot log let's look at it to make sure this is right console dot log classification and labels so guests are the raw array values classification is the Arg max the index to the one in that array that's the largest and this is the target label what it's supposed to be so let's run this and we got so let's look at this it makes sense this is a tiny number 0.03 that's a big one 0.87 yes it gave me one zero one that's that's the oh I can check by the way I could just unfold as a look that's correct let's look at this ooh this one more time we can see like up got one again now it got one it's always the middle one that's interesting but that's just random to it got to so this is working now you'll notice these don't add up to one point two point two point one six so again I really should probably be implementing softmax as the function that I use that when I exiting out into the output from the neural network softmax is a special kind of activation function essentially and this is something I cover in the neural network series that takes whatever that output is and transforms it into probability values at all and up to 100% but I'm going to come back to that in another video this will just work just fine for right now and so I can say now let's say let correct equal zero if if classification equals the label then correct plus plus and then I want to say the percentage equals the number correct divided by the total which is testing dot length so consult law percent so let's look okay 0% correct 0% correct kind of get lucky and get one I got one correct okay so now what I need to do is let's do it for all of them let's not console.log everything and we should see right just by sheer randomness we should see about onethird correct right not there's been no training the neural network without any training without knowing anything should get one about one out of three correct oh why do I have oh I'm sorry this should happen at the very end after all the loops are done you can see by the way I did get exactly that 35% 35% 24% so there's a lot it was very feelings only to look at that exactly one third correct so things are going as expected but can we improve it can we improve it just a little bit will this actually work it's sort of sad that I'm doing this without showing you anything visual but I'm kind of thinking you the person watching who has visual talent you could actually start to ant but a project for this would be to animate the training process and all that but let's let's train for one epoch let's just run through the training set then let it test again I wish my sound effects were working because I would certainly use a trim control role and then I'm gonna say testing result and by the way I want to move this data prep up here and then I'm gonna just say this so basically we've prepped all the training data we've prepped all the testing data so much work by the way it is just to work with the data that is like a whole project unto itself then I'm gonna train and then I'm gonna test and we're gonna see and wouldn't it be nice if the testing maybe returned it so let's actually return that value and console.log it down here cuz I feel like that's kind of what I want to do correct percentage correct okay okay okay here we go let's see training training training of training all the way I like to train elected trained training all the way hey training training training machine hey we got eighty percent correct this shows that things are working right we got eighty percent correct that is so exciting to me at the horn Wow it was kind of good so that's really interesting hmm wow this is very exciting I don't even know what to do now percentage correct eighty percent let's just confirm that right ready I'm gonna comment out the training no training no training remember with training eighty percent correct no training 33 percent crack this is good machine learning it's a thing that sometimes kind of almost maybe sort of works but it's highly problematic for many important ethical and social reasons but that is something we will come back to so we should really be again this is a good point should I even be doing what I'm doing I think it's okay to be doing what I'm doing everything is pretty transparent we know where the data comes from we know what's in it and we can see and we've learned something about uh neural network oh I'm just amazed here okay so I should finish up this video but let's let's just do something interesting let's say for let I equals 0 I is less than 5 I plus plus so what we're going to do is we're going to Train oh we're going to Train we're gonna say epoch I plus 1 I'm just gonna start with 1 and go to 6 so I can just say epoch plus I so now what I'm gonna do is I'm going to see I'm gonna do it five times let's see how the percentage increases let's make sure my training function we randomizes the training data shuffles the training data that's very important each time okay let's see how much better gets training training training I'm training all my epochs loading loading loading in training epochs training Oh 76% correct training training training training hold my box you are watching a video where I am NOT editing out the fact of it 79% training training training I'm trading all the way I'm almost a puck three and here's what we say 81% training trading training trading all the way I'm almost a puck four add this is what we say Eddie went down why why so there's kind of a it's interesting to see this here so there's this is where now we're revealing I haven't really been I have not been I'm not doing everything that the quoteunquote best or optimal or way that I could be so for example this idea of soft backs and crossentropy I've really got to come back to that that's hopefully a way that's going to improve the training process it's gonna be able to squeeze out a little bit more accuracy if I add these two elements to my machine learning system I also have something where it's like hello my training 2,400 drawings that's like the tiniest bit ever so I probably would want to run this with a much larger training set that's really gonna help I probably want a kind of a larger testing set as well just to have a better sense of how accurately this is doing but I think we're in pretty good shape here I feel like I'm happy with where I am so far in the next video what I want to do is kind of clean this up a little bit and think about maybe how to like animate the process like show that it's training so it's not just saying loading here forever until it gets to the end and then I'm going to add a part where I can draw my own little drawing and see if it could recognize my cat versus my rainbow versus my own train so in the next video that's what I'm gonna do and I'll see you there you
