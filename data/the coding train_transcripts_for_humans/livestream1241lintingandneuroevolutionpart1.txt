With timestamps:

00:00 - oh good morning and welcome aboard to
00:05 - the Kotick train it is Friday March I
00:08 - don't know I think it's March although
00:10 - there was like some kind of like thunder
00:12 - snow this week I keep waiting when will
00:15 - be the time that I can go back to like a
00:18 - nice and spring beautiful flowers will
00:20 - be blooming that's what I but this week
00:23 - in New York City that would still it's
00:24 - still a definitively winter time so I'm
00:27 - keeping mine
00:28 - no√© background so welcome today is
00:31 - another Friday I am going to be
00:34 - live-streaming of various points today
00:36 - it is now this is the morning session
00:39 - I'll be here for about an hour or so
00:41 - then I will be taking a break and I will
00:43 - come back for an afternoon session now
00:46 - what's gonna happen today you might be
00:49 - wondering so first of all something that
00:52 - I care deeply up oh one of these days
00:57 - I'm gonna remember to head install that
00:58 - magic lantern huh my life streaming I
01:09 - don't see anybody give the chat like
01:11 - saying that I am
01:15 - it says streaming let's check my this
01:21 - always happens to me
01:22 - oh yeah okay good okay okay just
01:26 - checking
01:26 - alright never mind I'm very professional
01:28 - this is a professional II rent show
01:30 - operation here all the the producers
01:32 - over there all giving me the thumbs up
01:33 - this is running the director stagehands
01:36 - camera people I don't have any of those
01:38 - people it's just me that's all there is
01:41 - okay so right one of my true to try my
01:46 - fashion is indentation and spacing oh do
01:51 - I love it when the code just lines up
01:53 - all nicely next to each other so I want
01:57 - to spend a little bit of time this
01:59 - morning I've learned recently there's
02:00 - something called linting which I have to
02:03 - do a lot cuz I'm just I got like lint
02:05 - out the wazoo here and I
02:07 - should've brought my lint brush that
02:08 - would have been a good prop for some
02:10 - good shtick to remember that for maybe a
02:12 - part to linting tutorial maybe you don't
02:14 - even know what lint thing is I've known
02:16 - what linting is for a while but I have
02:18 - never I've never been because I like to
02:20 - like manually myself just adjust every
02:24 - little space an indentation myself but
02:30 - apparently there's some automatic style
02:31 - ways of like keeping track of stock
02:33 - adventures and this guy joking around
02:34 - this can actually be a good thing for an
02:36 - open-source project to adopt some
02:38 - conventions and make it easier to
02:40 - contribute and to run some testing to
02:42 - check for style convention so whoa hold
02:50 - on
02:51 - breaking news dentin at breaking new
02:55 - sound that I'm being told by Simon Tiger
03:00 - in the slack channel the patron group I
03:05 - just want to point out that I've
03:08 - realized the trains are in the cat's
03:10 - file and the cats are in the trains
03:12 - filed now this actually completely
03:16 - miscategorized the data from the doodle
03:22 - classifier example I will definitely
03:23 - have to fix that but I'll have to come
03:24 - back to that a pull request I will be
03:26 - accepting Simon if that is in fact the
03:28 - case okay so let's get start so let's
03:35 - let's I might have a few things I want
03:36 - to discuss so terminal let's go - oh I
03:43 - term I really got to investigate this i
03:45 - term thing I have a new repository in a
03:51 - web browser here this is a new
03:55 - repository I set up that which is that
03:57 - coding train slash flappy bird clone so
04:00 - one of the topics which I hope to start
04:02 - today I'd love it if I finished it but I
04:04 - would not be surprised if I did not
04:06 - finish this today because this is a bit
04:08 - of a larger project is to use both my
04:12 - neural network examples and my genetic
04:14 - algorithm examples together to create a
04:17 - bot player essentially of a simple game
04:20 - and flappy bird I think
04:21 - good one to start with but I hope that
04:22 - will unlock lots of other interesting
04:24 - ideas and possibilities
04:26 - I would love to mention gibreel YouTube
04:30 - channel I believe it's s e FD Science
04:35 - YouTube gibreel has done a wonderful
04:42 - series a wonderful series about this one
04:49 - this is four out of four my first
04:51 - machine learning game where Jibril's
04:54 - uses neural networks genetic algorithms
04:56 - in unity to train this runner to run
05:00 - around a maze so I want to do something
05:02 - similar to that I've been very inspired
05:03 - by traboules work I highly recommend his
05:06 - a youtube channel actually we're
05:07 - planning a bit of a collaboration which
05:10 - I'm excited about so that's coming soon
05:13 - so but aha so what I did last night is I
05:19 - took the code from coding challenge
05:22 - number 31 which was just to make a
05:24 - simple flappy bird clone I put it into a
05:26 - separate repository I opened up some
05:29 - issues and solicited help with these
05:33 - issues like oh that example didn't use
05:35 - es6 classes so this is a Help Wanted I
05:38 - have a milestone I'm kind of want to do
05:40 - so much more about open source project
05:42 - management so I have this milestone of I
05:45 - need to fix the pipe spacing bug and do
05:47 - the visual and game design so what I
05:49 - want to do is a little bit of time spend
05:51 - a little bit of time this morning is
05:52 - going through some of these pull
05:54 - requests and seeing if I can fix those
05:56 - up merge them and we'll have a baseline
05:59 - game to start with okay so that's number
06:08 - one now since I'm mentioning this now
06:10 - while I'm while I'm talking I'm going to
06:16 - go away from this flappy bird I would
06:18 - love it I don't know if I put some
06:20 - comments here this pull request by
06:23 - Keegan M added oh no wait hold on maybe
06:29 - this isn't the right one
06:33 - [Music]
06:38 - how come I'm not seeing the image that
06:41 - was added here I'm sorry I'm looking so
06:44 - so I'm gonna come back to these pull
06:46 - requests sorry and and try to sort that
06:50 - out in a bit so if anyone wants to while
06:52 - you're kind of listening in go to that
06:54 - repository poke around mess around help
06:57 - out please do alright I'm so I'm going
07:02 - to come back to that in a minute now
07:07 - let's go and make let's let's let's
07:15 - create a new project so I'm using this
07:18 - p5 generator node package which allows
07:22 - me to just generate a p5 sketch really
07:24 - quickly I'm gonna call it I wonder if I
07:28 - maybe I just actually want to do no this
07:32 - is good I'm gonna do with the p5 sketch
07:33 - we're gonna call this spacing life's
07:39 - passion life's passion my life's passion
07:44 - my life's passion my life's passion then
07:51 - we're going to go into my life's passion
07:53 - we're gonna open it up in the atom
07:55 - editor I'm going to go here what's down
08:03 - what's going on here some packages could
08:06 - not be loaded because they contain
08:07 - native modules that were compiled for an
08:09 - earlier version of atom let's try to
08:11 - rebuild those packages okay
08:20 - now you've got this dude just add a
08:23 - little bit of code I'm gonna add a draw
08:26 - a background draw a function I'm gonna
08:30 - go into index of HTML and I'm gonna get
08:32 - rid of this style stuff and now go back
08:37 - into here know
08:56 - okay this is good this is a good start
08:59 - oh my goodness all the white space in
09:01 - the indentation it's all messed up
09:03 - Godsey oh that's okay oh this is like
09:09 - you know
09:11 - [Music]
09:16 - or something I don't know sound effects
09:18 - sound effects out of it okay now I'm
09:23 - ready to do my first tutorial of the day
09:26 - let me let me also run a server and you
09:33 - know while I'm here do I have this
09:37 - installed yeah why not I'm using node
09:39 - but no no I can't I can't I can't bring
09:41 - myself to do it alright here we go
09:56 - alright ok so so now I'm ready to do the
10:11 - first tutorial of today which the topic
10:15 - is linting and I'm just gonna get
10:19 - started with this I'm just trying to
10:22 - think about if there's anything else I
10:24 - need to pull up and then afterwards I'm
10:26 - going to come back and see so Keegan M
10:29 - if you're watching this I would love for
10:32 - you to resubmit your scrolling image
10:35 - because that was a image background and
10:37 - the the image for the the bird and then
10:43 - da gute who did some excellent there's
10:48 - some like oh yeah excellent changes
10:50 - Goudas here commented four minutes ago
10:52 - so one thing that is really helpful in
10:54 - open source development in certain
10:56 - context and I should have been more
10:58 - clear and I should write a contributing
10:59 - dot MD file is that oh the snake game
11:03 - would be good to do - I agree easily
11:05 - distracted by the chats so please so is
11:09 - that if you are making if you are add if
11:12 - you're making a bunch of changes to an
11:14 - open source project so this flappy bird
11:16 - game for example here's some things you
11:18 - might you might clone my repository to
11:20 - like oh I'm gonna fix and add es6
11:22 - classes I'm gonna fix the bug where the
11:24 - pipe spacing is off I'm gonna add a
11:26 - background image I'm gonna add a score
11:28 - I'm gonna do this other I'm gonna fix
11:30 - the resolute note the aspect ratio of
11:32 - the canvas if you put all of those
11:34 - things in one pull request you know in
11:36 - some context that's wonderful in the
11:39 - context of this there were a whole bunch
11:40 - of pull requests all at once and some
11:42 - people did this feature in this feature
11:43 - it's hard to manage where it's easier
11:46 - for me to manage if there are individual
11:47 - pull requests for each individual bug
11:49 - fix and feature that way I can kind of
11:52 - like try to pick and choose oh I want to
11:54 - merge this but this isn't exactly ready
11:56 - yet that sort of thing so I should say
11:57 - there's no way to do this wrong we're
12:00 - all learning about how to collaborate
12:01 - and participate in open source software
12:05 - development so the act of just doing a
12:07 - pull request is amazing and wonderful
12:09 - and
12:09 - encouraged and I'm trying to figure out
12:11 - what's the best way for me to engage
12:13 - with the community in ways to manage a
12:16 - kind of collaborative project like this
12:17 - okay
12:18 - so I'm gonna leave this aside and I'm
12:22 - gonna return to my life's passion let's
12:27 - put some let's put something in this I'm
12:32 - trying to think of what's a nice maybe I
12:35 - should use the phyllotaxis code let's
12:37 - use that that's always a nice one Philo
12:40 - so let's go to coding train website
12:50 - let's go to coding challenges Philo
12:54 - Texas p5.js sketched yes let me grab
12:59 - this code put it in here yeah I'll leave
13:07 - that there let's just see what's
13:10 - happening here beautiful okay if you
13:15 - haven't watched this coding challenge
13:18 - that's what this coding challenge does
13:22 - alright so now it's
13:36 - oh this is awful oh my goodness oh this
13:40 - is so awful oh this is the worst thing
13:44 - I've ever done
13:54 - hey is linting the kind of thing that
13:56 - will part of the configuration could be
13:59 - hey you should be using let instead of
14:01 - our is that something that'll stop me to
14:03 - use es lid spoiler alert
14:05 - [Music]
14:18 - [Music]
14:22 - okay okay this is gonna be fun I can't
14:32 - hit save because I have Adam beautify
14:34 - setup all right whoo this is gun oh but
14:39 - I went out and fixed the fact this runs
14:41 - needs to stop at a certain point but I
14:44 - guess I could just do that find you two
14:49 - okay all right so I think we're ready
14:51 - here this is going to be the first no so
14:54 - this is problem so I have this dream
14:57 - which is to have basically a playlist
15:00 - course all about open-source software
15:05 - development and I don't just mean the
15:07 - sort of like nuts and bolts technical
15:09 - stuff but also the sort of project and
15:11 - community management aspect of it so
15:14 - this kind of goes with that so far I've
15:18 - done videos about git and github I
15:20 - definitely need to do some more because
15:22 - I've learned a lot recently I want to
15:23 - thank tiny subversions on Twitter who
15:26 - has been was here at ITP for a couple
15:29 - weeks and did some workshops on getting
15:31 - github and open-source software
15:33 - development I learned a lot from that
15:34 - and so this until our I have the git and
15:40 - github tutorials I have the circle CI
15:42 - and unit testing tutorials so this is
15:46 - going to kind of go with that somewhere
15:49 - let's poke a blob barn lip so Eric will
15:57 - in the chat yes pls someone explain
15:58 - block scope I have a tutorial which i
16:02 - think is called you search on youtube
16:03 - for something like coding train or
16:06 - Schiffman let VAR i have a video that's
16:09 - about let versus VAR I don't know
16:10 - remember what's in its I think I answer
16:12 - your question in that video it's 10:45
16:14 - I've got an hour okay we're doing well
16:21 - oh hello welcome to a video about this
16:28 - video is actually about my life's
16:29 - passion I have a passionate in life
16:32 - everybody should find the thing that
16:34 - makes them happy feel at ease now you
16:36 - shouldn't be like me and you should
16:37 - definitely pick a different life's
16:39 - passion but my life's passion is
16:42 - indentation and spacing so this is my
16:46 - phyllotaxis coding challenge code which
16:49 - I went against every instinct that I
16:52 - have in this life and messed up the sort
16:56 - of spacing and indentation and so what
16:59 - I'm going to emphasize in this video
17:02 - tutorial is something and by the way
17:03 - this is not a video tutorial you're
17:05 - watching from an expert in this topic
17:08 - this is a video tutorial from someone
17:10 - who just learned about this topic really
17:12 - in the last week and I'm going to kind
17:14 - of learn about it while attempting to
17:16 - apply it to this piece of code and that
17:18 - topic is lifting
17:22 - I forgot my I really wish I brought my
17:24 - lint brush so I could have some kind of
17:26 - linting stick but oh well you'll have to
17:28 - live without that now what is linting so
17:32 - one of the things that makes me really
17:34 - happy is when a code editor has
17:36 - something like auto format or beautify
17:39 - and I'm using in here the atom text
17:42 - editor you have lots of people use
17:44 - different text editors and code editors
17:46 - and online editors and console-based
17:48 - editors and I haven't configured in such
17:51 - a way that if I hit command S which is
17:55 - for save or if I go up here under
17:57 - packages atom beautify beautify I have
18:01 - this atom beautify package which allows
18:04 - which will automatically apply a bunch
18:07 - of styling conventions to the code so
18:09 - this horrible uncomfortable thing like
18:11 - look at this will be fixed and
18:19 - everything will be right with the world
18:21 - if I hit command s okay here we go here
18:24 - we go here we go
18:28 - okay so here's the thing I'm being silly
18:34 - and joking around here there's no reason
18:37 - why I couldn't have a program
18:40 - automatically look through the code and
18:43 - analyze it to determine if there are
18:46 - little things like a missing semicolon
18:48 - or maybe there should be a space here
18:51 - between this now again the cookies are
18:54 - I'm looking for things that don't stop
18:55 - the code from running but that don't
18:58 - adopt a certain style convention for
19:01 - readability of the code and also for
19:04 - maintenance of the code so me I tend to
19:06 - optimized for legibility and maintenance
19:09 - over like could ever making my code like
19:12 - as concise and short and cryptic as
19:15 - possible obstacle I think that's one of
19:18 - my favorite words which I can't really
19:19 - pronounce absolute location okay so and
19:25 - this can make an open-source project
19:27 - more accessible actually to contribute
19:29 - to because you kind of feel more
19:30 - confident as a contributors say like oh
19:32 - I can run this little module that tests
19:35 - the code I want to submit to see if it
19:37 - adopts the style conventions and so this
19:39 - is kind of related to unit testing and
19:41 - continuous integration that I have a
19:43 - whole other it will pop up somewhere
19:46 - video tutorial series about okay so
19:48 - let's get started here we know I have
19:50 - Adam beautify that will but it's not
19:53 - telling me about the semicolon here so I
19:55 - need to figure out how to do linting so
19:57 - the the package that I'm gonna use to
19:59 - lint oh look at this phyllotactic
20:01 - pattern let me just refresh let me
20:03 - actually adjust this to stop after a
20:06 - certain point because this is gonna
20:08 - start running really slow so let's see n
20:10 - plus equals 5 start like what's n at now
20:15 - I thought so let's just say I'm just
20:17 - gonna add something if n is greater than
20:19 - 1000 no loop so that will stop this
20:27 - phyllotaxis pattern will blossom in
20:29 - bloom until a thousand until that
20:32 - variable and reaches a thousand and then
20:34 - it will stop okay like that what the
20:36 - code is doing is less important this
20:38 - video coming back here let's look for
20:40 - something called
20:41 - eslint plugin javascript linter es lint
20:46 - is an open-source project originally
20:47 - created by Nicholas Zakas in June 2013
20:50 - its goal is to provide a pluggable
20:53 - linting utility for javascript so i
20:56 - encourage you to read through all of the
20:59 - documentation about this there's a
21:01 - developer guide there are there's this
21:03 - whole documentation of rules that's a
21:05 - bunch of default rules so so the rules
21:08 - are the style conventions that you're
21:10 - applying to the code there's a
21:12 - command-line interface all sorts of
21:14 - stuff what I want to look for here I
21:16 - think is the getting started I want to
21:20 - just click on this getting started and
21:21 - uh there's this apparently this YouTube
21:23 - tutorial that you should probably just
21:25 - stop watching this video and go watch
21:26 - this right now cuz I'm sure it's better
21:28 - than whatever I'm gonna do but I'm going
21:30 - to engage with es lint via node so while
21:36 - this project I'm making this phyllotaxis
21:39 - pattern is a client-side JavaScript
21:42 - sketch that doesn't involve a server or
21:44 - anything I can use node the server-side
21:47 - programming JavaScript framework to kind
21:50 - of act as my project manager and I can
21:53 - import certain packages and things that
21:55 - I can run such as unit testing or
21:58 - linting so this is what I want to run
22:01 - the problem is I don't think I want to
22:03 - install es lint this moment right now
22:06 - because I haven't even set this up to be
22:11 - a node project and the reason why I know
22:13 - it's not set up to be a node project is
22:15 - that it would have a package.json file
22:17 - which is like a configuration file for
22:19 - this so that node knows how to kind of
22:22 - manage this project so I'm gonna go here
22:25 - looks so I am now now in terminal so if
22:29 - you're not familiar with the command
22:30 - line I probably have some video tutorial
22:33 - that goes over that I'm gonna just check
22:35 - yes I am in my folder my life's passion
22:37 - I'm gonna say NPM in it this is the
22:40 - command that I can run that will create
22:42 - the package.json file the configuration
22:45 - file for this project I could make it
22:47 - manually or copy-paste it from where
22:48 - else but let's run this this utility
22:51 - will walk you through bla bla bla bla
22:52 - bla
22:54 - my package name and let's see what this
22:56 - can be over here my package name is
22:58 - definitely my life's passion it is
23:01 - version 1.0 whatever demonstrating
23:05 - linting for the coding train oh my
23:10 - goodness
23:12 - by the way I seriously need like a
23:14 - linter for my email so I stopped putting
23:16 - two spaces after the period because I
23:18 - just like I have a bad habit of that
23:20 - entry point
23:21 - sure sketch KS test command I'm not
23:24 - gonna run test right now so I'm going to
23:25 - leave that out git repository I'm gonna
23:28 - leave that out right now I can I can add
23:30 - that in later keywords linting tutorial
23:35 - education javascript let's do that
23:39 - author is the coding train and the
23:43 - license will be MIT and I'm gonna say
23:46 - MIT by the way is a software license
23:49 - that's very permissive and I try to
23:50 - adopt it for all of my projects when I
23:52 - can there's sometimes other
23:54 - considerations but it pretty much lets
23:56 - people use it for anything without
23:57 - having to give credit with that we can
23:59 - use it commercially etc okay
24:01 - is this okay yes but for example I use a
24:05 - Creative Commons non-commercial license
24:08 - for like my nature of code open source
24:09 - book because I wouldn't want someone to
24:11 - take the nature of code book and resell
24:13 - it but with something like this
24:14 - phyllotaxis
24:15 - pattern linting tutorial use at will
24:18 - okay
24:19 - is this okay yes yes okay so now I'm
24:23 - gonna I'm just gonna type clear to get
24:24 - back to the top and I'm gonna look we
24:26 - can see now AHA package JSON so I have
24:29 - this package out JSON which is the
24:30 - configuration file for my project and
24:33 - now link to it what does this been like
24:39 - 45 minutes let me just like document
24:41 - anticipating adding the linting all
24:43 - right so you're wonderful to watch this
24:46 - npm install es lint - - saved it so you
24:50 - might be wondering so first of all npm
24:51 - node package manager i want to install a
24:54 - package to go with this project
24:55 - yes lint is the package now what's this
24:57 - - - save dev now if you watch some of my
25:00 - other node tutorials you have might have
25:02 - noticed that I say - - save because
25:04 - often the code for my project itself
25:08 - on a node package this is not the case
25:11 - right now the code for my Philo Texas
25:16 - project does not depend on es lint
25:18 - yes lint is a developer dependency
25:21 - meaning I want to use this package while
25:24 - I am developing the project but when I
25:25 - release the project it doesn't need
25:28 - yes lint to go with it it's just the
25:31 - little animation that's gonna be in the
25:32 - browser so that's this is saying I
25:34 - wanted to pendency for this project but
25:36 - I want it to be a development dependency
25:37 - so I'm gonna do this I'm gonna copy
25:39 - paste this I'm gonna go back to terminal
25:41 - I'm going to paste it in and that was
25:47 - fast
25:49 - okay so now it added everything and I
25:52 - have es lint now I have a feeling we're
25:54 - missing some other packages and we're
25:56 - gonna kind of arrive at all of that as
25:57 - we go but we can now say here we can now
26:02 - we can now we can now see that first of
26:04 - all under this has been added to package
26:06 - that JSON under dev dependencies
26:08 - yes lint version 4.1 8.2 or higher so
26:13 - that's there and in theory now now I
26:16 - should say that some people choose to
26:18 - install yes lint globally on the
26:22 - computer so this now what I've done is
26:23 - I've installed es lint for this
26:25 - particular project only it might make
26:28 - sense for me as a person who might want
26:30 - to use it for everything that I'm always
26:31 - doing on my computer to install it
26:33 - globally but for now let's leave it as a
26:37 - local module so that anybody using this
26:41 - project can can have it there sort of as
26:45 - a standalone thing okay so now what I'm
26:47 - gonna do is I can run yes lint by
26:52 - referencing the es lint execution file
26:57 - in node modules in dot bin and your file
27:00 - I could run es lint on sketch dot yes so
27:02 - let's actually just do that okay so I'm
27:09 - gonna run this but instead of your file
27:11 - Dutch ass I'm gonna write sketch KS oops
27:15 - something went wrong so here's the thing
27:19 - yes lint isn't just magic it's not just
27:22 - like oh let's just gonna let there I
27:25 - know I as the eslint know exactly how
27:27 - you should style your code I
27:29 - there's no matter you have to set up a
27:31 - configuration file so that configuration
27:34 - file is its has a name and it is called
27:41 - it is a file that you create called es
27:44 - lint RC in the directory of the project
27:47 - and so I could create that manually and
27:50 - I could start to add some of the rules
27:51 - like hey I always want to semicolon or I
27:54 - always want to use double quotes me I
27:55 - like single quotes whatever I like to
27:58 - mix them up anyway I don't know what I
28:01 - like so but I could also now run let's
28:04 - try this I can run yes lint in it and I
28:08 - think it will give me it will step me
28:11 - through a series of questions it will
28:12 - ask me all about my preferences my
28:15 - passions my hopes and dreams and fears
28:18 - and it will create a nice configuration
28:20 - file of how I should style the code ever
28:23 - any was ever made on linting it's insane
28:26 - okay oops oh right but I have to instead
28:29 - because it's not a global module I have
28:33 - to say this it a dash dash in it this
28:38 - should work okay I'm so excited to have
28:42 - this conversation how would you like to
28:44 - configure es Lin to use arrow keys use a
28:47 - popular JavaScript style guide that
28:49 - sounds reasonable inspect your
28:51 - JavaScript files mm-hmm I'm not sure hmm
28:56 - I don't know actually let's inspect our
28:58 - JavaScript files so one thing you should
29:00 - know is that there are popular
29:02 - JavaScript styles and a lot of them have
29:04 - been created by companies for example
29:05 - there's an air B&B style there's a
29:08 - Google style and these are these you can
29:10 - adopt and maybe I can we'll find out
29:13 - about some of these but let's I don't
29:15 - know I've actually never tried this
29:16 - inspector JavaScript files so let's try
29:18 - that
29:18 - which files should be examined sketch is
29:21 - what format do you want the config file
29:24 - to be in I let's stick with JavaScript
29:26 - am I using EMC ECMAScript 6 features yes
29:32 - am i using es6 modules no but I should
29:34 - be someday I got to do a tutorial about
29:36 - that where will my code run okay this is
29:39 - browser code only it is not node do you
29:43 - use common Dutch common J's no do you
29:45 - use JSX no okay great so it it enabled a
29:51 - whole bunch of rules for me look at this
29:53 - oh let's look now that file is there and
29:55 - we can examine it look at this array
29:58 - bracket new line array bracket spacing
30:00 - oh it's just like it looked at my code
30:02 - and created a configuration style not
30:05 - aloft or how I currently have it now
30:07 - some other things I might do is I might
30:08 - go back and try to adopt one of these
30:10 - common JavaScript styles I might look at
30:12 - a project like p5.js if I go to the if I
30:15 - go to p5.js on github github.com slash
30:22 - processing slash p5.js I'm guessing I'm
30:25 - gonna find look at that this open-source
30:28 - project has an es lint RC file so I
30:31 - could say like you know what I want to
30:33 - adopt the same rules that p5 adopts and
30:36 - so I could look through here now however
30:39 - I should be able to run the lint a now
30:44 - here we go wait so let's run linting now
30:50 - here's the thing I actually this is real
30:55 - so annoying awkward that I have to do
30:57 - this all the time I'm gonna do it right
30:58 - now but I'm gonna show you another way
30:59 - to run the es lint that wow there's been
31:05 - no editing required in this this as long
31:09 - just my shoes untied
31:17 - alright so I'm gonna run the effluent
31:21 - now again whoa okay so this is really
31:26 - interesting I got a lot of errors points
31:31 - is assigned of value but never used
31:33 - setup is defined but never used create
31:36 - canvas is not defined angle mode is not
31:39 - to five degrees is not defined so wait a
31:41 - second this is nuts I mean yes you're
31:45 - right if I look at my code hmm there is
31:48 - a background translate rotate and it's
31:51 - saying those things are not defined but
31:54 - they are they're defined they're part of
31:56 - p5.js so one thing that I probably want
31:59 - to do here is tell es lint that I'm
32:02 - using the library p5.js and if you're if
32:06 - something in my code is not defined but
32:08 - it's defined at p5.js you don't have to
32:11 - give me a warning or error about that so
32:13 - let's look at how we do that in fact one
32:16 - way of doing this is using another node
32:20 - package p5 config config es lint so if I
32:27 - go now to here you'll see that there is
32:29 - this other node package called es lint
32:32 - config p5.js which allows me to put in
32:36 - my yes lint our C file that this that I
32:43 - extend I am I am also should look at all
32:46 - the stuff that's part of p5 Jaz
32:48 - so let's now install this dev dependency
32:51 - to the project
32:57 - computer way too fast again that was
32:59 - installed and then what I want to do is
33:01 - look at my es Lynch RC file is there
33:05 - already and extends in here yes
33:07 - extends yes Lindt recommended so let's
33:11 - see what else I want to extend extends
33:16 - p5 just now
33:17 - ah so if I want to extend a bunch of
33:20 - things looks like I can create an array
33:23 - this doesn't look right right there
33:25 - should be commas here I think this is
33:27 - probably incorrect we should submit a
33:29 - pull request to this project just to fix
33:33 - its documentation cuz I have a feeling
33:34 - what I need to do is turn this into an
33:37 - array and then so I'm going to now add
33:44 - also p5.js and let's just add I'm not
33:49 - using it but let's add p5.js Dom so you
33:52 - can see this should be how I can add
33:54 - other kind of lint configurations that
33:57 - I'm going to es link configurations that
33:59 - I'm going to import into my project so
34:02 - let's see now I should be able to say
34:05 - I'm going to run linting again I'll
34:11 - leave this here ah ok great so now you
34:14 - can see that got rid of all that now
34:15 - here's the thing points is assigned a
34:18 - value but never used line I line 9 let's
34:23 - look at line 9 what is that so I go back
34:27 - to my code line 9 oh look at that that's
34:32 - actually a totally legitimate thing that
34:34 - it found I I'm not using that array
34:39 - anywhere so that's good to know I'm
34:41 - gonna take this out and now I'm gonna
34:44 - run it again and I fixed that now ok
34:47 - great so um here's the thing I probably
34:49 - maybe I'll look into this in a future in
34:52 - a part two or something there's probably
34:53 - a nice way that I can create my own
34:55 - custom rule so that I'm set up and draw
34:58 - are allowed it does think that I'm maybe
35:01 - that should be saying it's actually
35:02 - added to p5 the p5.js configuration but
35:05 - in this case in this case
35:11 - it is it is kind of accurate that I've
35:13 - defined this function set up and it's
35:14 - never called the p5 the library itself
35:16 - is calling it set up it does actually is
35:18 - that in a way I almost want to say it
35:20 - almost forgive me an error like hey
35:22 - where's your set up function let's do
35:24 - some other stuff let's let's put in some
35:26 - weird spacing and see what it gives me
35:30 - let's forget some semicolons knocking oh
35:33 - I I have to do something so one thing
35:36 - that I have is that as soon as I hit
35:38 - command s it's going to reformat the
35:42 - code so I need to turn off my atom
35:45 - beautify package so I'm gonna go to
35:48 - preferences wait hold on
35:50 - pack it I'm gonna go to atom preferences
35:53 - and I'm going to go to packages I'm
35:55 - gonna go to beautify so again this is a
35:59 - really atom the text editor specific
36:01 - which is a little less relevant to this
36:03 - video because you might be using a
36:04 - different text editor but I'm gonna go
36:05 - to settings of atom beautify and I'm
36:08 - gonna go down to JavaScript and there's
36:11 - by the way I can I'm going to uncheck
36:13 - this beautify on save which is what I'm
36:15 - doing right here by the way I can add I
36:18 - can actually link the text editor with
36:20 - es lint so maybe I'll do that in a
36:22 - separate video just look at that but
36:24 - again that's atom atom editor specific
36:26 - so I unchecked that preference so now I
36:29 - should be able to hit whoops I should be
36:31 - able to hit save all right and all of
36:35 - the mistakes or style mistakes are so
36:37 - one thing just to see like I shouldn't
36:39 - I'm not broken the code the code still
36:44 - runs I have not broken the code I've
36:46 - only broken my style conventions and so
36:50 - now I'm gonna run it again and look at
36:53 - this oh look at this let's see if I can
36:58 - it's really bothering me that I'm not
37:01 - that this formatting oh no this is fine
37:03 - now okay I just want to be able to see
37:04 - this a bit better I'm gonna make this a
37:06 - bit bigger so it look a space is
37:09 - required after the comma yes yes it is
37:12 - there should be spaces inside this
37:15 - parentheses multiple spaces found before
37:17 - degrees so so this is wonderful and look
37:20 - at this it's saying potentially fixable
37:22 - with the dashed
37:23 - - - fix option so in theory I should be
37:28 - l2 now run this again with - - fix and
37:31 - it will actually fix some of those style
37:34 - errors so look at that it didn't find
37:37 - any errors anymore and if I go back to
37:39 - the code okay I'm upset didn't I got a
37:48 - let's run this again yeah so
37:52 - interestingly enough this is deeply
37:54 - deeply upsetting to me that there aren't
37:58 - two spaces here if I run my package at a
38:02 - beautify I will get those spaces back so
38:05 - that's something that I have to
38:06 - investigate and probably what I need to
38:08 - do is go look at the es lilin -
38:11 - documentation whoops in the ESL in
38:15 - documentation go under and go under
38:21 - rules and look for a rule that I can add
38:23 - to make sure that is fixed now here's
38:26 - the thing most likely if I adopt one of
38:28 - these more popular JavaScript style
38:29 - guides it's gonna have more stuff in it
38:31 - that I might want and maybe I'll come
38:32 - back and try some of those in a separate
38:35 - video but I do want to mention one thing
38:38 - here this was kind of no fun what I did
38:42 - in the sense that know nothing about
38:45 - this is fun that I have to do this
38:47 - because I have es lint as a local a
38:49 - local a local module and so one thing I
38:55 - can add to my package JSON file and it's
38:58 - here under scripts so you could see like
39:01 - one of the things you might have if you
39:02 - watch my videos about unit testing I
39:04 - could say things like npm run test and
39:07 - what that will do is will run whatever
39:09 - commands i have that are mapped to test
39:11 - in scripts so i'm going to add one here
39:16 - called lint and i'm going to say
39:21 - whoops i'm going to go and grab this and
39:27 - then I'm also going to say star Jas
39:32 - so this would in theory lint any
39:35 - JavaScript file
39:36 - are in the projects in them in the main
39:39 - directory and there I think it might not
39:41 - hopefully it won't look for the at the
39:43 - library files which is something I
39:45 - definitely want to ignore but if I do
39:46 - this and save this now I can simply say
39:52 - NPM lit run lint and there we go
39:57 - now that didn't work why did that not
40:01 - work lint
40:02 - yes Lyn star Jas mm-hmm oh no it worked
40:09 - it just like gave me some like weird
40:11 - error hold on I'm getting a message it's
40:15 - not from the patron group time out for a
40:19 - second
40:21 - let me look at the log anybody know what
40:27 - I'm doing wrong I just why do I have
40:31 - this
40:40 - no run no think so because run is saying
40:49 - run this script so this just needs to be
40:51 - lent you just look at this and p.m. oh I
40:58 - just say NPM lint why do I imagine I
41:03 - need to say run no I have to say run
41:13 - okay look at this again yes I wonder if
41:30 - it didn't like my star Jas
41:38 - drink water it is supposed to be like
41:43 - that es lilin returns arrow so npm
41:45 - errored oh oh thank you kenneth in the
41:51 - chat thank you ah okay so is there it's
41:54 - because the exit code is oh okay okay
41:56 - okay got it
42:06 - so this is actually correct is there
42:10 - something I want like should I be
42:12 - configuring things in a slightly
42:14 - different way or this is actually I want
42:16 - to see this because because if I was
42:20 - doing this with like some kind of like
42:21 - testing true so I actually want to see
42:26 - this if there are errors okay hey by the
42:35 - way this is I've literally never I've
42:38 - used linting in other people's projects
42:40 - I've never used it in my own project
42:42 - okay so 11:15 already do Lindt
42:46 - J s hint or true mmm interesting you
42:53 - want to see this
42:54 - es Flint is Xing we wanted it okay okay
42:59 - I'm back thankfully I make these videos
43:02 - with a live chat of people who know more
43:04 - than I do about this and actually I want
43:06 - to see this because what happened is yes
43:09 - lint exited with an error code because
43:11 - there were errors and if I'm gonna run
43:13 - this automatically through some other
43:15 - process like its exit status is one
43:17 - because there was an error in that other
43:19 - process needs to get that report so if I
43:21 - integrate this with some kind of other
43:23 - unit testing system or continuous
43:25 - integration framework I'm a good what
43:26 - are these things you know check your
43:28 - videos are asking the comments this is
43:31 - something that I actually want to see so
43:32 - unfortunately without setting up a rule
43:35 - but I can just see just I can just for a
43:38 - moment just as a kind of like hack for a
43:41 - second is I'm gonna just comment out my
43:44 - setup and draw functions and I am going
43:48 - to run this again and
43:51 - we'll see oh boy comments should oh look
43:54 - at the crazy ah oh look at this and oh
43:58 - it's a terrible idea these variables are
44:01 - assigned but never used and comments
44:03 - should not begin with a lowercase
44:04 - character and you know what
44:06 - yes lit it knows me better than I know
44:08 - myself because I agree I do not want my
44:13 - comments to begin with a lowercase
44:14 - letter although I do want an exception
44:16 - to that if I'm commenting out a bit of
44:18 - code although I guess ultimately in a
44:21 - sort of more formal open source project
44:24 - maybe I don't want to submit a pull
44:25 - request or something with commented out
44:27 - code but again it's kind of okay for me
44:30 - while I'm experimenting of commenting
44:32 - code I'm certainly not going to like do
44:34 - this because that would ruin everything
44:36 - so I have to think about that I might
44:38 - want to disable that rule but you get
44:40 - the idea I'll delete it let's just
44:45 - delete everything hold on I'm gonna do
44:49 - command X and I'm gonna say console dot
44:55 - log I'm so stressed out right now yes
45:07 - perfect that my : okay now how do I do
45:14 - that
45:15 - automatic clear again oh no I'll just
45:16 - type clear because that's how I that's
45:18 - how I do it okay nvm run lint here we go
45:21 - oh I expected console statement no I
45:27 - should not have consoles David strings
45:28 - must use double quotes okay
45:30 - I reject yes when I reject your
45:34 - configuration let's go let's go see this
45:37 - video is my way he's like I can't we
45:38 - blur to be like oh what's new from the
45:40 - coding train today Oh a video about
45:42 - linting wait why is it two and a half
45:44 - hours long got like crazy person made it
45:47 - let's look for quotes in here so oh I
45:50 - don't
45:51 - quotes quote quotes quotes alright
45:55 - double wait where there should be
45:57 - somewhere in here oh maybe because it's
45:59 - getting the I gotta end this video and
46:01 - learn about how this stuff works
46:02 - single double
46:04 - so I wonder if it's getting it from es
46:07 - Lynch recommended like I wonder if some
46:10 - of these rules are coming from es lint
46:11 - recommended command K thank you
46:15 - and so let's let's get rid of that just
46:18 - for a second strings let's use double
46:26 - quotes no alright but fine I'll fix it
46:33 - oh it couldn't fix it command K right
46:40 - yeah there we go
46:42 - it couldn't fix it so I will fix it
46:45 - myself
46:48 - this big lint itself by golly let's get
46:54 - rid of the fix let's make it much bigger
47:08 - so you can see by the way this stuff can
47:11 - be problematic and you really have to be
47:13 - thoughtful and careful about what makes
47:15 - sense for your project in your workflow
47:16 - and if you are making a creative art
47:18 - project and you spend all day during
47:21 - your linting file and you don't express
47:24 - yourself through your code maybe that's
47:25 - a problem but as you after a while at
47:28 - certain point after you've worked on a
47:30 - project and have a kind of a first
47:31 - version you might go back edit clean up
47:34 - the code add some style conventions if
47:36 - you're open sourcing it so other people
47:37 - can participate in it
47:40 - timeout for a second so I'm just want to
47:45 - see if I've missed anything anything
47:51 - super you have to put the quotes rule in
47:53 - an array with error and single okay how
47:59 - to configure atom in order for it to
48:00 - live linting yes there's a plugin that
48:02 - you could do that if you tried vs code
48:08 - alright so I think I'm going to end this
48:10 - to wrap this up did I did I have I done
48:13 - anything that
48:15 - once I release this as a stand-alone
48:16 - tutorial that people will be very
48:19 - unhappy with because I can come back I
48:23 - think I should do a part two I'm gonna I
48:25 - think I'll release this let it linger
48:26 - and I'll do a part two based on what
48:28 - people get tips and things people give
48:30 - me in the comments okay
48:34 - alright so that wraps up this video
48:36 - about linting thank you for watching
48:39 - it's probably the next day now a night
48:44 - time if you started this video in this
48:46 - date time it's been so long I will be
48:48 - doing a part two and I'm sure I've made
48:50 - a lot of mistakes and missed some things
48:51 - and I want to really sort of think about
48:53 - what kind of configuration rules I want
48:55 - to set up for my workflow and maybe
48:57 - experiment with integrating with Adam or
49:00 - trying other text editors so leave your
49:02 - notes and feedback in the comments I'm
49:04 - I'm gonna wait at least a week before I
49:07 - do the part 2 so I can compile a lot of
49:08 - feedback and comments and then come back
49:10 - and do a part two and hopefully
49:11 - integrate this also with unit testing ok
49:14 - thanks for watching all right do you
49:21 - have to I love I love The Cranberries
49:26 - I'm so sad sad for The Cranberries now
49:33 - listen to music of my high school days
49:35 - by the way you can you can figure out
49:37 - how old I am based on that and I can't
49:45 - do it
49:48 - zombie and okay so what is what times it
49:54 - is eleven twenty I think at this point
49:57 - if the junks was got it right at this
50:00 - point I need to move on to the neuro
50:04 - evolution stuff that I want to do and so
50:06 - let's check in and that's mostly gonna
50:08 - have to happen this afternoon so let me
50:11 - just talk about the schedule if you're
50:13 - watching I am here right now for another
50:15 - half an hour or so I'm going to be
50:18 - attending a wonderful presentation by
50:20 - the amazing Kate Compton who is giving a
50:23 - present
50:23 - here in ITP and doing some other stuff
50:26 - and some office hours and helping
50:27 - students and things like that and then I
50:30 - will be back I hope by at 3:00 p.m.
50:33 - Eastern which is which will be about
50:36 - three hours so will be about a three
50:38 - hour break after I stop and then I will
50:41 - be live-streaming again only for about
50:42 - an hour and a half because I have a very
50:45 - very special guest who is coming this
50:48 - evening a huge inspiration for me
50:52 - someone who is really anyway I'm just
50:57 - really excited about it if you want if
50:59 - you want to know more this is a reason
51:01 - to become a patron of the coding trade
51:03 - because I discuss in our slack community
51:05 - about guest tutorials and even sometimes
51:08 - do closed live streams of the recording
51:11 - sessions with the guests but this won't
51:13 - be live stream but it will be published
51:15 - and released next week so stay tuned
51:16 - about that so so that's coming so I want
51:25 - to work on the neuro evolution stuff I
51:27 - don't think an hour and a half this
51:28 - afternoon is realistic for me to finish
51:30 - it but let's at least check in and let's
51:36 - try to let get the flappy bird game in
51:38 - shape for that tutorial where am I let's
51:44 - go to desktop oh I didn't even clone it
51:53 - okay so let's come back to flappy bird
52:00 - clone I haven't been looking at my email
52:03 - or notifications or anything so I don't
52:05 - know what's going on here there's more
52:06 - pull requests let's quickly clone this
52:12 - so I'm cloning the repo which means I'm
52:17 - grabbing it from github and downloading
52:19 - it to my computer but it is linked
52:21 - because if I say git remote - V oops I
52:25 - have to be in the directory and if I say
52:29 - git remote - V you're gonna see that the
52:31 - this remote the URL on github is linked
52:35 - to the keyword origin love to come back
52:37 - about all this stuff more let's run a
52:43 - server and take a look at what it looks
52:47 - like right now and try to merge some of
52:50 - these pull requests so this is currently
52:54 - what it looks like you can see so the
52:57 - things that I want to add are this pipe
52:59 - spacing thing is totally broken and I
53:01 - want it to visually look nicer so let's
53:04 - take a look at some of these pull
53:06 - requests and see what's come in since
53:10 - [Music]
53:14 - okay so it looks like let's let's just
53:18 - go in reverse order fix pipe digest to
53:23 - use correct height and start coordinates
53:26 - I think this one let's just try
53:28 - resolving this ourselves so this is what
53:34 - you can see here that's happening is
53:36 - what happened is this particular pull
53:39 - request was submitted before another
53:42 - after another pull request that I merged
53:45 - converted this old constructor function
53:48 - syntax to es6 classes so this is what
53:51 - was this is what is in the this the es6
53:56 - classes branch up here and this is
54:00 - what's in master and i want to pick
54:03 - which one I want and I want this because
54:05 - I want hits bird and but I want the fix
54:09 - which is maybe this boy I can't I'm
54:19 - trying to I'm looking at the code over
54:21 - here on my monitor and which what do I
54:25 - want here what's the mistake what's
54:27 - correct the fix let's hold on a sec I
54:35 - think that I can go here and I what I'm
54:40 - gonna do is look here under file change
54:42 - so ah ah the height minus this dot
54:46 - bottom was incorrect in hits
54:49 - function but in the draw in the draw
54:52 - function it should have height - this
54:55 - bottom here and not here
54:58 - okay so let's try that so now that I see
55:02 - that this should help me figure out how
55:04 - to resolve these conflicts so what I
55:07 - want is this here to go here I think and
55:16 - that fixes the hits function and this
55:24 - got fixed anyway didn't have a problem
55:26 - figuring that out and I've lost somehow
55:29 - this so I think that I I think that I
55:32 - fixed the I think that I fixed this
55:38 - merge again we'll see so I'm now going
55:41 - to a mark as resolved commit this and I
55:50 - don't have any unit testing or any
55:52 - linting which I should add and then I'm
55:53 - gonna say I resolved the conflicts I
55:58 - resolve the conflicts manually and I'll
56:02 - just reference the commit and I on
56:10 - github actually even though this is the
56:11 - URL for that commit oh I just deleted
56:14 - part of masters code so I did it wrong I
56:18 - got a notification it was a little bit
56:20 - too late I'll fix it I just wanted the
56:23 - at least the correct I'll have to go
56:26 - back and fix it fix it it's fine let's
56:29 - keep going with what I'm doing here and
56:32 - then I'll go back and fix it so but
56:37 - unfortunately it was correct so one
56:39 - thing I can do now is I can go here and
56:46 - really I think this is right isn't it
56:50 - this is what it looks I'm checking the
56:53 - diff now isn't this what I wanted it to
56:54 - be
57:04 - the lines 15 and 16 aren't correct so
57:07 - let's go oh okay
57:09 - really let's go edit we can add another
57:12 - commit to this branch
57:17 - what's incorrect here is it should this
57:24 - should be height minus this dot bottom
57:36 - this is me like this is like the laziest
57:39 - live streaming everything like I
57:41 - couldn't figure this out or I could just
57:43 - wait for the chat cuz I really trust
57:46 - this dot highlight is no longer set in
57:48 - the constructor ah I deleted that thank
57:51 - you
57:51 - that's what was wrong okay so it should
57:56 - be false thank you for that and then
58:00 - what I'm gonna do here is I'm gonna go
58:03 - down and say correct mistake made when
58:13 - resolving conflict and this commit adds
58:23 - back in this dot actually you know what
58:26 - I think you by the way in the commit
58:29 - messages the the mark-up of doing things
58:35 - like this doesn't apply it doesn't
58:37 - render as far as I know this adds back
58:41 - in this highlight equals false which I
58:45 - deleted deleted by accident
58:51 - apologies to who is this who is this
58:55 - who's the original pole requester here
58:58 - are HBV and oops no no stay stay stay
59:06 - apologies to our HB v k leaf okay so I'm
59:12 - going to commit directly to this branch
59:15 - so that it's included as I merge the
59:17 - pull request and that should be good now
59:23 - the now the diff looks right I just got
59:26 - rid of that space that's still there and
59:29 - now I am going to go back to
59:32 - conversation and I'm gonna say oops I'm
59:37 - gonna say thank you and I'm going to
59:42 - merge the pull request and now we will
59:48 - let's
59:51 - let's grab those changes so those have
59:56 - come in here and let's take a look at it
59:58 - running again so that looks better
60:03 - running so slow it feels like it's
60:05 - running really slow in this computer
60:06 - okay all right so that that pull request
60:13 - is resolved all right so now let's look
60:18 - and see what else we got here
60:20 - great work in progress convert the
60:23 - project to yarn NPM and add linting
60:25 - testing that's wonderful I appreciate
60:27 - that let me just write a little note
60:28 - here thank you for this I'm going to
60:36 - hold off on adding adding this later as
60:41 - it is as it is not presently the focus
60:47 - of the tutorial and then reffering to
60:55 - reference sorry that you guys probably
60:59 - can't see a lot of this stuff I'm typing
61:01 - I'm gonna reference one two three
61:06 - reference referencing number three so I
61:14 - just want to like I want to link this to
61:16 - issue number three oops sorry that
61:18 - camera went off I want to link that to
61:20 - issue number three so that if anybody
61:21 - else comes who wants to submit a pull
61:23 - request for this idea they'll see that
61:26 - so I'm gonna say comment that okay great
61:29 - then I'm gonna go back and I'm gonna
61:33 - check out this train and background oh
61:37 - great
61:38 - alright now let's see what's going on
61:42 - here this this is great I guess there's
61:45 - the background this is the background
61:46 - that I want to include this uses the
61:49 - train image which is great uh one thing
61:52 - that I might suggest here I think I'll
61:53 - fix this myself is we could just use
61:55 - image mode center that would be so what
61:57 - I would normally do if I wasn't pressed
61:59 - for time as I might
62:00 - I might add a review and request I could
62:04 - say to use image mode Center but I think
62:05 - I might just correct some of these fix
62:08 - change that myself
62:10 - so let's this looks great
62:12 - so I've got so one thing that I might
62:14 - want to do is just check is just check
62:20 - that that this that this just check run
62:28 - this pull request now to make sure it
62:30 - like looks okay so what I'm going to do
62:32 - is I to do that
62:35 - oops I'm gonna say get remote and I
62:38 - really should make this into a tutorial
62:39 - you know we're gonna make this a
62:42 - tutorial about git remote alright
63:04 - okay all right here we go we're gonna
63:07 - we're gonna add a little tutorial this
63:08 - will go and get and github playlist yes
63:17 - yes yes images used elsewhere which
63:19 - would need to do the same calculation
63:20 - there okay so I might leave it you also
63:24 - you can just do get pull origin refs
63:27 - pull 15 head oh that is very confusing
63:31 - to me I don't even know so what I'm
63:35 - gonna do do you think it's a bad idea
63:36 - for me to demonstrate how to add a
63:38 - different remote and then like look at
63:42 - that branch I think I would like to do
63:46 - it my like a longer winded way just as
63:48 - for the sort of educational aspect but
63:50 - I'd be willing to told that like maybe
63:52 - I'm sending people in the wrong
63:53 - direction I don't have a lot of time
64:01 - here alright
64:07 - is anybody moderating the chat by the
64:09 - way seems to be some discussions that
64:12 - might need some moderation I can just do
64:15 - this myself I guess I won't I don't want
64:22 - to moderate the chat one that's really
64:24 - all right don't have anything discussing
64:26 - separate remote I don't think that I do
64:28 - Schiffman YouTube remote github branches
64:33 - cloning no I don't think I have a
64:36 - tutorial discussing remotes so let's do
64:40 - that
64:41 - oh whoops
64:45 - whoops okay all right all right I got to
64:49 - stop looking at the chat I'll move this
64:54 - over here hello this is another video
64:58 - which is a tutorial about working with
65:00 - git and github and in this tutorial i'm
65:03 - gonna talk about remotes so i I was I'm
65:08 - in the middle of live streaming and I'm
65:10 - working on this project that has to do
65:12 - with this flappy bird clone and I'm in a
65:14 - train and a bot using a genetic
65:17 - algorithm in a neural network to play
65:19 - flappy bird and I have a wonderful pull
65:22 - request from github user Keegan M who
65:26 - has added this particular image to be
65:30 - the flappy bird and this particular
65:32 - background to be the background of the
65:34 - flappy bird game and I really want to
65:36 - accept this pull request but what I want
65:38 - to do and I can examine it through the
65:40 - github interface I can see uh this was
65:42 - deleted and this was added because now
65:45 - it's gonna have an image and there's
65:46 - there's an icon variable which loads the
65:48 - image those are some things that those
65:51 - are some wonderful things like that that
65:53 - I want to accept but I don't have any
65:55 - unit testing and I um this isn't like
65:59 - hosted anywhere so I want to actually
66:00 - look at it locally on my computer to to
66:04 - run the code and sort of like see before
66:06 - I merge it and so there's a variety of
66:08 - ways that this can be done more
66:09 - efficiently than what I'm going to show
66:11 - you right now but this is a good excuse
66:12 - to talk about remotes so what is a
66:15 - remote so right now the my terminal
66:17 - window which I want to make a little bit
66:19 - bigger is in the directory of this
66:23 - project I'm on the desktop flappy bird
66:25 - clone if I say git remote that remote
66:29 - escape and - V - V for verbose like I
66:32 - want to know as much as possible output
66:33 - to be very verbose about the remote it's
66:35 - gonna say oh look you have a remote that
66:39 - is named origin that is tied to this URL
66:42 - and that makes sense
66:44 - that's my github URL coding train slash
66:47 - flappy bird clone that's the github
66:48 - repository and this remote was
66:50 - automatically created because at some
66:52 - point in time I said get clone and I put
66:56 - and I put this in so when I did
66:59 - this default remote was created so the
67:02 - remote being another location where this
67:05 - git repository exists now the word
67:09 - origin is kind of a default convention
67:12 - for the original remote but you know the
67:15 - sort of canonical remote being github in
67:18 - this case but it's just a made-up thing
67:20 - like I can say get room and I do this
67:23 - actually with a lot of projects I could
67:24 - say git remote delete I think origin
67:27 - nope get remote remove origin yes and
67:33 - now if I say git remote - V there's no
67:36 - more remotes but I could say git remote
67:38 - add and instead of calling it origin why
67:41 - not call it github or unicorn I could
67:44 - call it anything I want let's call it
67:45 - github and then I can paste in flappy
67:51 - bird clone I'm just gonna grab this URL
67:53 - here and I can paste this in here and
67:55 - now I am adding this remote and I could
67:59 - say git remote - B again and we can see
68:01 - there it is back but it's now called
68:03 - github so if I were it ever say get put
68:05 - pull origin master to grab some changes
68:09 - master by the way is this name of the
68:12 - like core branch is also just a
68:14 - completely made-up thing I could have
68:16 - source branch or release branch or
68:18 - development branch or experimental
68:19 - branch that's a separate video about
68:21 - branches that you could go and watch but
68:23 - if I say this it'll say ah origin
68:25 - doesn't appear to be positive because
68:27 - it's not there but I can now say git
68:30 - pull github master and there we go now
68:36 - I'm already up to date so I don't have
68:38 - to worry about it now here's the thing I
68:40 - want let's go back to this pull request
68:42 - which is once again from keegan m so
68:47 - where is keegan ends and we can see here
68:51 - ah keegan m : graphics so keegan m made
68:55 - these code changes in a branch called
68:59 - graphics in their github repository so
69:02 - one thing i'm gonna do is i'm just gonna
69:03 - copy paste this right here is probably
69:05 - way i could link to it and i'm gonna go
69:06 - up to the URL and i'm gonna change
69:08 - coding trained to keegan m and I'm gonna
69:11 - get rid of the poor
69:12 - I just want to go over there and see
69:14 - that this is the Fork of the repository
69:17 - and so there we can see this is Keegan
69:21 - M's Fork
69:22 - we could see branch master we can see
69:24 - branch graphics I could start looking
69:25 - around now I'm going to do is I'm going
69:26 - to go to clone and I'm gonna grab this
69:28 - so I'm now going to grab Teagan ends a
69:32 - fork of my flappy bird clone I'm gonna
69:35 - grab that and I'm going to say git
69:38 - remote add Keegan I can make up anything
69:44 - here I'm just gonna say Keegan because I
69:45 - think I can remember that and I'm going
69:48 - to then paste in that particular URL for
69:51 - Keegan I'm now one thing you might
69:52 - notice I these URLs they get at github
69:55 - comm you might actually and this is
69:59 - because I have set up this very fancy
70:01 - way for my computer to be auto logged in
70:04 - using an SSH key in a passphrase but if
70:07 - you don't have that set up and I should
70:08 - do a video tutorial that explains how to
70:10 - do that you might want to use HTTPS this
70:14 - is also a way that you can this is just
70:16 - the sort of standard URL without having
70:19 - the sort of secret keys that log you in
70:21 - automatically but that's a little bit of
70:22 - an aside here I'm going to add this
70:24 - remote and now I'm gonna say git remote
70:27 - - V and we can see look at this I have
70:30 - github remote which is tied to me coding
70:33 - train I have Keegan's remote which is
70:35 - tied to Keegan M which is kind of that
70:38 - get over puzzle kicking up now I'm gonna
70:40 - say there's a lot of different things
70:42 - that I can do but what I'm gonna do is
70:44 - I'm just gonna say get branch graphics
70:46 - I'm gonna make a branch locally called
70:48 - graphics and I'm gonna quickly go into
70:51 - that branch again you should probably
70:52 - watch my branches tutorial about how
70:54 - this works and I'm gonna go into that
70:56 - branch by using checkout then what I'm
70:58 - gonna do is I'm gonna say git pull and
71:01 - usually I've almost reflected Lee just
71:02 - get pull origin/master get Pro argent
71:04 - master git pull origin master git pull
71:06 - origin master git pull origin master but
71:07 - I don't want to pull from origin I want
71:10 - to pull from Keegan and I don't want to
71:11 - pull for a master I want to pull from
71:13 - graphics get pull Keegan graphics ah ooh
71:17 - interesting hmm
71:19 - so something has happened here in that I
71:24 - am now been
71:25 - launched into a text editor known as VI
71:28 - whoa this has been like way off the
71:31 - screen that's what's going on here
71:32 - that's crazy
71:34 - and so there's some sort of merging that
71:37 - needs to happen for Keegan M's branch
71:41 - graphics to come into my branch graphics
71:43 - because I actually have made some other
71:44 - changes it would have been nice if this
71:45 - didn't happen but this is actually quite
71:47 - normal
71:48 - this is a regular thing and I deal with
71:51 - this so what I would I what I want to do
71:54 - is say that I'm gonna say what do i type
71:57 - in VI so I think I'd say :
72:05 - insert no I for insert I for insert so
72:12 - again you can link a different text
72:15 - editor to your get work on your computer
72:18 - but this is and so now but I've been
72:20 - launching this text editor in in man and
72:24 - I just want to say like I'm I'm making a
72:27 - tutorial video so I don't have a lot of
72:31 - time but this is here to merge Keegan's
72:38 - graphics with with some recent changes I
72:43 - made and and then I'm gonna say : oops
72:48 - oh no I gotta get rid of insert escape
72:51 - maybe escape : QW which I think will
72:55 - then quit and write this out I don't
72:58 - really know how to eat vim or whatever I
73:01 - know what to call it
73:02 - : q w oh and I'm gonna just do that now
73:07 - not an editor command : WQ write and
73:10 - then quit there we go and now it's fine
73:15 - it didn't commit it that's fine so now
73:17 - this is good I just really wanted to
73:19 - look at it all I want to do is look at
73:20 - it I don't need to commit this right now
73:21 - because I'm not really worrying about
73:23 - merging and so now I should if I come
73:25 - over here this is me like looking at my
73:28 - code in the browser before I checked out
73:30 - and pulled from that other remote and
73:32 - there we go look at this and now we have
73:35 - the coding train getting the flappy bird
73:38 - flappy
73:39 - coding train game with our little
73:40 - unicorn train and the scrolling
73:44 - background okay wonderful so this is
73:47 - good so now I feel I'd like oh this
73:49 - looks great I'm done so interestingly
73:51 - enough if I wanted to I could actually
73:54 - merge everything right now from the
73:56 - command line typically what I would do
73:58 - is I'm done I would just go back to here
74:00 - and I would say I go back to pull
74:03 - request whoops and I go back to code and
74:04 - train go back to pull request go back to
74:07 - Train and background version three and I
74:09 - would say all right Matt yeah
74:14 - unfortunately the trolls are out in full
74:16 - form today and we are going to have to
74:19 - we are going to have to edit this video
74:22 - first I am going to report no I don't
74:27 - feel a reason okay so I'm gonna be a
74:30 - little bit friendly today and I'm not
74:32 - going to report this but I will if it
74:35 - happens again I'm just going to delete
74:36 - the comments this one I'm kind of okay
74:39 - with because it's sort of friendly and
74:40 - funny but I think just for the purpose
74:42 - of the video I think I will remove it
74:45 - definitely won't report it because I you
74:47 - know and then I'm also going to I think
74:55 - I might just lock the comments for right
74:58 - now for a second I'm just gonna lock the
74:59 - conversation I'm just gonna say spam for
75:05 - a second I'm gonna lock the conversation
75:08 - this should allow me to still merge it
75:10 - okay so nobody can add any comments
75:12 - right now while I'm here okay so let's
75:17 - go back so normally I would just go to
75:21 - the pull request and I would scroll down
75:24 - here and I would just click on merge
75:26 - because and this would birds that pull
75:28 - grass in fact I've read a comment thank
75:30 - you so much I am going to merge merge
75:34 - this and what's wonderful about using
75:36 - github as a service which is very
75:39 - different than the get software itself
75:42 - the version control software is that it
75:44 - provides a visual interface to a lot of
75:46 - the common things that you might want to
75:47 - do like merging and looking at the
75:49 - differences between two files and that
75:51 - sort of thing but I think while I'm here
75:55 - if you can tolerate continue to watch
75:57 - this video however I am going to
76:03 - demonstrate demonstrate merging from the
76:08 - command line for fun so stay tuned I'm
76:16 - gonna add that comment it's interesting
76:18 - I lock them okay I'm gonna add that
76:20 - comment sorry I'm actually you're going
76:23 - to edit this also it's about to mention
76:24 - like oh it lets me add a comment even
76:27 - though I locked it but I don't need to
76:31 - say that in the edit version of this
76:33 - video okay they're really throwing me
76:35 - off alright so I added that comment and
76:41 - now I'm gonna return to the command line
76:42 - now I should say that I something about
76:46 - the way I really need to make a video
76:48 - about setting up terminal or whatever
76:52 - you use as your terminal application to
76:55 - work with get more effectively because
76:58 - there's no reason why I couldn't see
76:59 - things being syntax highlighted or
77:01 - showing me what branch I'm currently on
77:03 - and there's also like other terminal
77:05 - software like I term that I could use so
77:07 - I've got to come back for that but right
77:09 - now I'm just gonna say I got I got it I
77:10 - don't even remember where I am so I'm
77:12 - gonna say git status and I'm gonna say
77:14 - okay all conflicts fixed but you were
77:17 - still merging so I'm because I didn't
77:19 - actually ultimately commit that merge
77:22 - that I did so I'm gonna say git commit
77:26 - now here's the thing I have learned
77:28 - recently that you know you really that
77:30 - using - em is not as thoughtful or so
77:35 - I'm gonna do a video about how do not
77:38 - use - em and write more thoughtful
77:40 - longer commit messages but for lack of
77:42 - the time right now I'm just gonna say
77:44 - commit - N and I'm going to say merging
77:47 - changes from and I'm gonna want to
77:50 - remember keygen em from keygen em okay
78:01 - I'm gonna do
78:01 - that so now I'm going to say get status
78:08 - again okay on branch graphics so now I'm
78:11 - gonna go to master and what I'm gonna do
78:16 - is I'm going to say git merge graphics
78:19 - and what that will do is we'll take the
78:21 - graphics branch and merge it into master
78:23 - it's exactly the same thing that would
78:25 - happen if I press this button here which
78:27 - would merge keegan m graphics into
78:31 - master i'm just gonna do that from the
78:33 - command line git merge graphics okay
78:42 - here we go I'm getting some good
78:46 - feedback in the chat other things to
78:47 - mention yeah okay it's merged and now I
78:51 - can say get status I'm gonna say get
78:54 - status again I type git status all the
78:56 - time I'm on branch master nothing to
78:59 - commit working directory clean let's say
79:01 - git fetch which is just gonna kind of
79:02 - like go to my origin remote and see oh
79:05 - no remote repository specified oh okay
79:10 - let's hold on let's just that doesn't
79:13 - need to be in this tutorial I don't need
79:15 - to talk about get fetch because I messed
79:16 - it up with get origin so let me just
79:18 - make it record scratch back back up
79:21 - alright so now let me put these changes
79:25 - back right there here on master but they
79:28 - are not here if I go here we'll see like
79:31 - what's the latest commit it's still
79:33 - something else that I was working on so
79:35 - I'm gonna now say git push I'm not gonna
79:39 - say origin I'm not gonna say weird you
79:40 - know not to say origin because I renamed
79:42 - it to github master and if I do that now
79:47 - I have sent that up I'm going to hit a
79:51 - refresh here and I'm going to see look
79:54 - all of those changes from keygen em are
79:56 - now here we can see they're here
79:58 - background version 3 this was me merging
80:00 - this would be correcting the mistake
80:02 - this was some other stuff some other
80:04 - stuff we can see all of that is here now
80:07 - the real question is if I going to pull
80:08 - requests look at this where is that
80:12 - polar quad
80:13 - it's not there anymore github was smart
80:16 - enough to realize that I merged this I
80:22 - merge this via the command line so the
80:25 - merge button is gone and it is now
80:26 - enclosed wonderful so hopefully you
80:30 - learn something a little bit about get
80:32 - remotes and about merging in this video
80:35 - tutorial thanks for watching and I will
80:38 - come back and make many more of these
80:39 - working with git and github open-source
80:41 - tutorial thingies thank you
80:45 - a lock and comment still lets
80:48 - collaborators comment which is fine with
80:49 - me you could also do git reset - - hard
80:53 - keygen / graphics to change to be on
80:55 - their branch without code from your
80:57 - master ok that's a good point
81:00 - all right you know cybernetic and the
81:05 - chat rightz
81:07 - get looks so scary I would be afraid I'd
81:10 - accidentally merge the completely wrong
81:12 - file yeah you know the thing is it is a
81:14 - little scary the one thing that's kind
81:16 - of nice about git is very hard to really
81:20 - delete everything break everything you
81:22 - know rebase is a command that sometimes
81:24 - you can run into you know scary things
81:28 - with but if you're just adding and
81:30 - committing and pushing and pulling you
81:32 - can get yourself into a hairy situation
81:34 - where it's like I need help but I need
81:36 - to go to stack overflow I need to ask a
81:37 - friends I'd like get me out of this but
81:39 - it's very very hard for you to by
81:41 - accident like actually lose something so
81:44 - I would say go for it and don't be
81:46 - afraid to ask for help and don't be
81:48 - afraid to just try and if you're really
81:50 - worried just you know always like copy a
81:51 - folder into another folder on your
81:53 - computer so you have a like a kind of
81:55 - backup of your code but just go for it
81:57 - and don't you know hopefully maintainer
82:00 - some open source projects are going to
82:01 - treat you with kindness and a welcoming
82:03 - attitude which I definitely try to do
82:05 - and I would never you know someone's
82:08 - gonna submit a pull request in a weird
82:10 - way that's kind of like not the right
82:11 - way that I want for the project I would
82:13 - kind of give them friendly feedback and
82:14 - help facilitate them resubmitting the
82:16 - pull request so ok so I let I've got to
82:21 - go but let's see if let's see if there's
82:25 - anything
82:27 - scores and proper spacing so here's the
82:33 - thing I don't know that I need the
82:35 - scores for what I'm gonna do I
82:36 - definitely want the image pipe and I
82:38 - definitely want proper spacing again I
82:40 - think it would be helpful to have each
82:42 - of these things in separate pull
82:44 - requests so but and also now there's I
82:47 - can look at the conflicts here yeah
82:50 - there's not really there's just some
82:52 - conflicts from the background stuff from
82:54 - the other one I probably could figure
82:55 - this out but I don't have time right now
82:58 - so doc gute if you want to resolve those
83:00 - conflicts we can I can take a look at
83:01 - merging this fix typo what's the typo oh
83:06 - the YouTube video is wrong thank you
83:08 - this is one I can this is one I feel
83:10 - like I could merge without kind of
83:12 - worrying about I can see right here like
83:13 - look it's just in a code comment it's
83:15 - just fixing that so I want to fix that
83:19 - then what's this added this dot size to
83:25 - bird digest and improve the code for
83:27 - keeping the bird in the screen so let's
83:31 - take a look at this height minus this
83:36 - dot this is great this makes sense yep
83:41 - this looks good I think I can conjure I
83:44 - mean you know again I should probably do
83:46 - some more testing or have unit tests or
83:47 - like check out the code it one thing you
83:50 - can actually do that's helpful is in the
83:52 - description here you know if you have
83:54 - this forked into your master you can
83:56 - enable github pages and then put a URL
83:59 - to the your version running and I could
84:00 - just click on that and test the code
84:02 - that way that's kind of a nice thing to
84:03 - do I'm gonna just merge this while we're
84:07 - here so I only have really this one
84:10 - outstanding pull request which has some
84:13 - conflicts and let's look at the fight
84:15 - let's look at the changes here just to
84:16 - see what's kind of going on
84:18 - [Music]
84:20 - okay this so this shouldn't mark this
84:23 - should this is this is a good change to
84:27 - fix the spacing I don't know about this
84:29 - greater than equals versus greater then
84:31 - I don't want an extra space here oh I
84:33 - love having a pipe image that's great
84:36 - figuring out how to make this better is
84:39 - great
84:41 - it looks like some of the indentation
84:43 - there's a little bit different here I'm
84:45 - not sure it pass is pipe body sprite
84:49 - that's awesome to have thank you for
84:52 - this oh and also changing that so let's
84:54 - um so uh dog food if you want to read
84:57 - submit a fix some of the stuff I'm sorry
84:59 - I'm sorry that this was so convoluted
85:01 - I'm kind of learning how to do this as
85:02 - well
85:07 - and so what I'm going to do is let's
85:09 - just do I have everything that whoops Oh
85:12 - get pull github master I'm kind of
85:15 - rushing now I am going to I want I just
85:19 - want to do some stuff into the code
85:21 - myself actually I kind of have to go so
85:27 - I'll here's some pull requests I would
85:29 - accept I would accept I feel like for
85:38 - one thing is this running slow and or is
85:40 - it just my computer so anything anybody
85:42 - can do to like figure out this should
85:44 - run a little faster ultimately I'm
85:45 - probably not gonna use this image
85:47 - because I'm gonna run like but so the
85:49 - pipes need to be redesigned unicorn
85:52 - horns was a nice idea but also the pipes
85:55 - from Goethe is perfect I think this this
85:58 - I don't know why I guess I made it like
86:00 - this to appear like a sort of like phone
86:02 - but just looking at this on the desktop
86:04 - I think this should have a aspect ratio
86:06 - that's wider than it is tall probably
86:08 - the the the pipes look very skinny I
86:11 - don't know if the collision detection is
86:12 - doesn't seem to really be working so any
86:15 - improvements that people want to make
86:17 - and I don't know how busy I do need
86:22 - scores to tell the neural network how
86:23 - well it's doing that's actually truth so
86:25 - that'll be the fitness function so
86:27 - actually having a score in there is
86:29 - something I do need that's correct so
86:31 - actually I do want that
86:33 - so dude is in the chat I'm fixing those
86:39 - things for the third time during the
86:40 - stream I'm so annoyed so I really have
86:42 - to apologize this is my fault that's on
86:45 - me that that that all this stuff is
86:47 - getting kind of convoluted so I really
86:49 - apologize and I really do appreciate
86:50 - your you
86:53 - or contribution this now actually has no
86:56 - conflicts so I think I will go ahead and
86:59 - merge it and I can always let me just
87:00 - quickly look here everything so there
87:03 - might be some style stuff or some other
87:05 - little things to fix but there are no
87:07 - major conflicts and I do have this nice
87:10 - game over a game over function showing
87:12 - the score so this is great so what I'm
87:14 - gonna do is I'm gonna merge this is it
87:16 - broken
87:20 - so I have to go to me I am see I don't
87:24 - know if you in the have a few minutes
87:27 - free bird died but if you could review
87:32 - have a couple minutes to review this the
87:34 - Anthony is a contributor to the website
87:36 - and has done work kind of maintaining
87:39 - and managing some of the code in the
87:41 - past I really appreciate their help
87:43 - so if you have a chance to look at this
87:48 - otherwise what I'm gonna do is while I'm
87:49 - in some of these presentations and and
87:51 - meetings I will take a look at that pull
87:53 - request it's great that it has no
87:54 - conflicts uh-huh and that gue writes I'm
87:58 - a chill so thank you for that but I
88:00 - really do
88:01 - [Music]
88:03 - I really do appreciate and I know that
88:06 - it can be frustrating when collaborating
88:08 - on an open source project to have lots
88:10 - of people contributing at the same time
88:11 - and have it not be clear what to do and
88:14 - that sort of thing so so wonderful okay
88:18 - I'm gonna go and hopefully we're gonna
88:21 - have this whipped into shape by I will
88:24 - should be back I'm hoping three hours
88:26 - from now if things go well I'll be back
88:29 - actually earlier than that the absolute
88:31 - earliest I'll be back I think is about
88:33 - 2:30 Eastern Time which is two and a
88:35 - half hours from now but so just stay
88:37 - tuned I'll at a time to the YouTube live
88:41 - page and I will see you all in a few
88:45 - hours if you choose to come back okay
88:50 - great thank me I am Sami has posted in
88:53 - the in the YouTube chat as well now I'm
88:56 - hoping that this chat is retained that
89:00 - YouTube has a new feature where the live
89:03 - chat now can be played back in the
89:05 - archive
89:06 - and for some reason it didn't work with
89:07 - last Friday's or sent a note to
89:09 - YouTube's support and I have enabled it
89:11 - in my like account but we'll see if it
89:14 - let me know if that's working or not
89:17 - working later today when the live chat
89:19 - the live stream is published okay
89:20 - everybody thanks for watching and I will
89:25 - be back for part two of today's
89:27 - livestream thank you

Cleaned transcript:

oh good morning and welcome aboard to the Kotick train it is Friday March I don't know I think it's March although there was like some kind of like thunder snow this week I keep waiting when will be the time that I can go back to like a nice and spring beautiful flowers will be blooming that's what I but this week in New York City that would still it's still a definitively winter time so I'm keeping mine no√© background so welcome today is another Friday I am going to be livestreaming of various points today it is now this is the morning session I'll be here for about an hour or so then I will be taking a break and I will come back for an afternoon session now what's gonna happen today you might be wondering so first of all something that I care deeply up oh one of these days I'm gonna remember to head install that magic lantern huh my life streaming I don't see anybody give the chat like saying that I am it says streaming let's check my this always happens to me oh yeah okay good okay okay just checking alright never mind I'm very professional this is a professional II rent show operation here all the the producers over there all giving me the thumbs up this is running the director stagehands camera people I don't have any of those people it's just me that's all there is okay so right one of my true to try my fashion is indentation and spacing oh do I love it when the code just lines up all nicely next to each other so I want to spend a little bit of time this morning I've learned recently there's something called linting which I have to do a lot cuz I'm just I got like lint out the wazoo here and I should've brought my lint brush that would have been a good prop for some good shtick to remember that for maybe a part to linting tutorial maybe you don't even know what lint thing is I've known what linting is for a while but I have never I've never been because I like to like manually myself just adjust every little space an indentation myself but apparently there's some automatic style ways of like keeping track of stock adventures and this guy joking around this can actually be a good thing for an opensource project to adopt some conventions and make it easier to contribute and to run some testing to check for style convention so whoa hold on breaking news dentin at breaking new sound that I'm being told by Simon Tiger in the slack channel the patron group I just want to point out that I've realized the trains are in the cat's file and the cats are in the trains filed now this actually completely miscategorized the data from the doodle classifier example I will definitely have to fix that but I'll have to come back to that a pull request I will be accepting Simon if that is in fact the case okay so let's get start so let's let's I might have a few things I want to discuss so terminal let's go oh I term I really got to investigate this i term thing I have a new repository in a web browser here this is a new repository I set up that which is that coding train slash flappy bird clone so one of the topics which I hope to start today I'd love it if I finished it but I would not be surprised if I did not finish this today because this is a bit of a larger project is to use both my neural network examples and my genetic algorithm examples together to create a bot player essentially of a simple game and flappy bird I think good one to start with but I hope that will unlock lots of other interesting ideas and possibilities I would love to mention gibreel YouTube channel I believe it's s e FD Science YouTube gibreel has done a wonderful series a wonderful series about this one this is four out of four my first machine learning game where Jibril's uses neural networks genetic algorithms in unity to train this runner to run around a maze so I want to do something similar to that I've been very inspired by traboules work I highly recommend his a youtube channel actually we're planning a bit of a collaboration which I'm excited about so that's coming soon so but aha so what I did last night is I took the code from coding challenge number 31 which was just to make a simple flappy bird clone I put it into a separate repository I opened up some issues and solicited help with these issues like oh that example didn't use es6 classes so this is a Help Wanted I have a milestone I'm kind of want to do so much more about open source project management so I have this milestone of I need to fix the pipe spacing bug and do the visual and game design so what I want to do is a little bit of time spend a little bit of time this morning is going through some of these pull requests and seeing if I can fix those up merge them and we'll have a baseline game to start with okay so that's number one now since I'm mentioning this now while I'm while I'm talking I'm going to go away from this flappy bird I would love it I don't know if I put some comments here this pull request by Keegan M added oh no wait hold on maybe this isn't the right one how come I'm not seeing the image that was added here I'm sorry I'm looking so so I'm gonna come back to these pull requests sorry and and try to sort that out in a bit so if anyone wants to while you're kind of listening in go to that repository poke around mess around help out please do alright I'm so I'm going to come back to that in a minute now let's go and make let's let's let's create a new project so I'm using this p5 generator node package which allows me to just generate a p5 sketch really quickly I'm gonna call it I wonder if I maybe I just actually want to do no this is good I'm gonna do with the p5 sketch we're gonna call this spacing life's passion life's passion my life's passion my life's passion my life's passion then we're going to go into my life's passion we're gonna open it up in the atom editor I'm going to go here what's down what's going on here some packages could not be loaded because they contain native modules that were compiled for an earlier version of atom let's try to rebuild those packages okay now you've got this dude just add a little bit of code I'm gonna add a draw a background draw a function I'm gonna go into index of HTML and I'm gonna get rid of this style stuff and now go back into here know okay this is good this is a good start oh my goodness all the white space in the indentation it's all messed up Godsey oh that's okay oh this is like you know or something I don't know sound effects sound effects out of it okay now I'm ready to do my first tutorial of the day let me let me also run a server and you know while I'm here do I have this installed yeah why not I'm using node but no no I can't I can't I can't bring myself to do it alright here we go alright ok so so now I'm ready to do the first tutorial of today which the topic is linting and I'm just gonna get started with this I'm just trying to think about if there's anything else I need to pull up and then afterwards I'm going to come back and see so Keegan M if you're watching this I would love for you to resubmit your scrolling image because that was a image background and the the image for the the bird and then da gute who did some excellent there's some like oh yeah excellent changes Goudas here commented four minutes ago so one thing that is really helpful in open source development in certain context and I should have been more clear and I should write a contributing dot MD file is that oh the snake game would be good to do I agree easily distracted by the chats so please so is that if you are making if you are add if you're making a bunch of changes to an open source project so this flappy bird game for example here's some things you might you might clone my repository to like oh I'm gonna fix and add es6 classes I'm gonna fix the bug where the pipe spacing is off I'm gonna add a background image I'm gonna add a score I'm gonna do this other I'm gonna fix the resolute note the aspect ratio of the canvas if you put all of those things in one pull request you know in some context that's wonderful in the context of this there were a whole bunch of pull requests all at once and some people did this feature in this feature it's hard to manage where it's easier for me to manage if there are individual pull requests for each individual bug fix and feature that way I can kind of like try to pick and choose oh I want to merge this but this isn't exactly ready yet that sort of thing so I should say there's no way to do this wrong we're all learning about how to collaborate and participate in open source software development so the act of just doing a pull request is amazing and wonderful and encouraged and I'm trying to figure out what's the best way for me to engage with the community in ways to manage a kind of collaborative project like this okay so I'm gonna leave this aside and I'm gonna return to my life's passion let's put some let's put something in this I'm trying to think of what's a nice maybe I should use the phyllotaxis code let's use that that's always a nice one Philo so let's go to coding train website let's go to coding challenges Philo Texas p5.js sketched yes let me grab this code put it in here yeah I'll leave that there let's just see what's happening here beautiful okay if you haven't watched this coding challenge that's what this coding challenge does alright so now it's oh this is awful oh my goodness oh this is so awful oh this is the worst thing I've ever done hey is linting the kind of thing that will part of the configuration could be hey you should be using let instead of our is that something that'll stop me to use es lid spoiler alert okay okay this is gonna be fun I can't hit save because I have Adam beautify setup all right whoo this is gun oh but I went out and fixed the fact this runs needs to stop at a certain point but I guess I could just do that find you two okay all right so I think we're ready here this is going to be the first no so this is problem so I have this dream which is to have basically a playlist course all about opensource software development and I don't just mean the sort of like nuts and bolts technical stuff but also the sort of project and community management aspect of it so this kind of goes with that so far I've done videos about git and github I definitely need to do some more because I've learned a lot recently I want to thank tiny subversions on Twitter who has been was here at ITP for a couple weeks and did some workshops on getting github and opensource software development I learned a lot from that and so this until our I have the git and github tutorials I have the circle CI and unit testing tutorials so this is going to kind of go with that somewhere let's poke a blob barn lip so Eric will in the chat yes pls someone explain block scope I have a tutorial which i think is called you search on youtube for something like coding train or Schiffman let VAR i have a video that's about let versus VAR I don't know remember what's in its I think I answer your question in that video it's 1045 I've got an hour okay we're doing well oh hello welcome to a video about this video is actually about my life's passion I have a passionate in life everybody should find the thing that makes them happy feel at ease now you shouldn't be like me and you should definitely pick a different life's passion but my life's passion is indentation and spacing so this is my phyllotaxis coding challenge code which I went against every instinct that I have in this life and messed up the sort of spacing and indentation and so what I'm going to emphasize in this video tutorial is something and by the way this is not a video tutorial you're watching from an expert in this topic this is a video tutorial from someone who just learned about this topic really in the last week and I'm going to kind of learn about it while attempting to apply it to this piece of code and that topic is lifting I forgot my I really wish I brought my lint brush so I could have some kind of linting stick but oh well you'll have to live without that now what is linting so one of the things that makes me really happy is when a code editor has something like auto format or beautify and I'm using in here the atom text editor you have lots of people use different text editors and code editors and online editors and consolebased editors and I haven't configured in such a way that if I hit command S which is for save or if I go up here under packages atom beautify beautify I have this atom beautify package which allows which will automatically apply a bunch of styling conventions to the code so this horrible uncomfortable thing like look at this will be fixed and everything will be right with the world if I hit command s okay here we go here we go here we go okay so here's the thing I'm being silly and joking around here there's no reason why I couldn't have a program automatically look through the code and analyze it to determine if there are little things like a missing semicolon or maybe there should be a space here between this now again the cookies are I'm looking for things that don't stop the code from running but that don't adopt a certain style convention for readability of the code and also for maintenance of the code so me I tend to optimized for legibility and maintenance over like could ever making my code like as concise and short and cryptic as possible obstacle I think that's one of my favorite words which I can't really pronounce absolute location okay so and this can make an opensource project more accessible actually to contribute to because you kind of feel more confident as a contributors say like oh I can run this little module that tests the code I want to submit to see if it adopts the style conventions and so this is kind of related to unit testing and continuous integration that I have a whole other it will pop up somewhere video tutorial series about okay so let's get started here we know I have Adam beautify that will but it's not telling me about the semicolon here so I need to figure out how to do linting so the the package that I'm gonna use to lint oh look at this phyllotactic pattern let me just refresh let me actually adjust this to stop after a certain point because this is gonna start running really slow so let's see n plus equals 5 start like what's n at now I thought so let's just say I'm just gonna add something if n is greater than 1000 no loop so that will stop this phyllotaxis pattern will blossom in bloom until a thousand until that variable and reaches a thousand and then it will stop okay like that what the code is doing is less important this video coming back here let's look for something called eslint plugin javascript linter es lint is an opensource project originally created by Nicholas Zakas in June 2013 its goal is to provide a pluggable linting utility for javascript so i encourage you to read through all of the documentation about this there's a developer guide there are there's this whole documentation of rules that's a bunch of default rules so so the rules are the style conventions that you're applying to the code there's a commandline interface all sorts of stuff what I want to look for here I think is the getting started I want to just click on this getting started and uh there's this apparently this YouTube tutorial that you should probably just stop watching this video and go watch this right now cuz I'm sure it's better than whatever I'm gonna do but I'm going to engage with es lint via node so while this project I'm making this phyllotaxis pattern is a clientside JavaScript sketch that doesn't involve a server or anything I can use node the serverside programming JavaScript framework to kind of act as my project manager and I can import certain packages and things that I can run such as unit testing or linting so this is what I want to run the problem is I don't think I want to install es lint this moment right now because I haven't even set this up to be a node project and the reason why I know it's not set up to be a node project is that it would have a package.json file which is like a configuration file for this so that node knows how to kind of manage this project so I'm gonna go here looks so I am now now in terminal so if you're not familiar with the command line I probably have some video tutorial that goes over that I'm gonna just check yes I am in my folder my life's passion I'm gonna say NPM in it this is the command that I can run that will create the package.json file the configuration file for this project I could make it manually or copypaste it from where else but let's run this this utility will walk you through bla bla bla bla bla my package name and let's see what this can be over here my package name is definitely my life's passion it is version 1.0 whatever demonstrating linting for the coding train oh my goodness by the way I seriously need like a linter for my email so I stopped putting two spaces after the period because I just like I have a bad habit of that entry point sure sketch KS test command I'm not gonna run test right now so I'm going to leave that out git repository I'm gonna leave that out right now I can I can add that in later keywords linting tutorial education javascript let's do that author is the coding train and the license will be MIT and I'm gonna say MIT by the way is a software license that's very permissive and I try to adopt it for all of my projects when I can there's sometimes other considerations but it pretty much lets people use it for anything without having to give credit with that we can use it commercially etc okay is this okay yes but for example I use a Creative Commons noncommercial license for like my nature of code open source book because I wouldn't want someone to take the nature of code book and resell it but with something like this phyllotaxis pattern linting tutorial use at will okay is this okay yes yes okay so now I'm gonna I'm just gonna type clear to get back to the top and I'm gonna look we can see now AHA package JSON so I have this package out JSON which is the configuration file for my project and now link to it what does this been like 45 minutes let me just like document anticipating adding the linting all right so you're wonderful to watch this npm install es lint saved it so you might be wondering so first of all npm node package manager i want to install a package to go with this project yes lint is the package now what's this save dev now if you watch some of my other node tutorials you have might have noticed that I say save because often the code for my project itself on a node package this is not the case right now the code for my Philo Texas project does not depend on es lint yes lint is a developer dependency meaning I want to use this package while I am developing the project but when I release the project it doesn't need yes lint to go with it it's just the little animation that's gonna be in the browser so that's this is saying I wanted to pendency for this project but I want it to be a development dependency so I'm gonna do this I'm gonna copy paste this I'm gonna go back to terminal I'm going to paste it in and that was fast okay so now it added everything and I have es lint now I have a feeling we're missing some other packages and we're gonna kind of arrive at all of that as we go but we can now say here we can now we can now we can now see that first of all under this has been added to package that JSON under dev dependencies yes lint version 4.1 8.2 or higher so that's there and in theory now now I should say that some people choose to install yes lint globally on the computer so this now what I've done is I've installed es lint for this particular project only it might make sense for me as a person who might want to use it for everything that I'm always doing on my computer to install it globally but for now let's leave it as a local module so that anybody using this project can can have it there sort of as a standalone thing okay so now what I'm gonna do is I can run yes lint by referencing the es lint execution file in node modules in dot bin and your file I could run es lint on sketch dot yes so let's actually just do that okay so I'm gonna run this but instead of your file Dutch ass I'm gonna write sketch KS oops something went wrong so here's the thing yes lint isn't just magic it's not just like oh let's just gonna let there I know I as the eslint know exactly how you should style your code I there's no matter you have to set up a configuration file so that configuration file is its has a name and it is called it is a file that you create called es lint RC in the directory of the project and so I could create that manually and I could start to add some of the rules like hey I always want to semicolon or I always want to use double quotes me I like single quotes whatever I like to mix them up anyway I don't know what I like so but I could also now run let's try this I can run yes lint in it and I think it will give me it will step me through a series of questions it will ask me all about my preferences my passions my hopes and dreams and fears and it will create a nice configuration file of how I should style the code ever any was ever made on linting it's insane okay oops oh right but I have to instead because it's not a global module I have to say this it a dash dash in it this should work okay I'm so excited to have this conversation how would you like to configure es Lin to use arrow keys use a popular JavaScript style guide that sounds reasonable inspect your JavaScript files mmhmm I'm not sure hmm I don't know actually let's inspect our JavaScript files so one thing you should know is that there are popular JavaScript styles and a lot of them have been created by companies for example there's an air B&B style there's a Google style and these are these you can adopt and maybe I can we'll find out about some of these but let's I don't know I've actually never tried this inspector JavaScript files so let's try that which files should be examined sketch is what format do you want the config file to be in I let's stick with JavaScript am I using EMC ECMAScript 6 features yes am i using es6 modules no but I should be someday I got to do a tutorial about that where will my code run okay this is browser code only it is not node do you use common Dutch common J's no do you use JSX no okay great so it it enabled a whole bunch of rules for me look at this oh let's look now that file is there and we can examine it look at this array bracket new line array bracket spacing oh it's just like it looked at my code and created a configuration style not aloft or how I currently have it now some other things I might do is I might go back and try to adopt one of these common JavaScript styles I might look at a project like p5.js if I go to the if I go to p5.js on github github.com slash processing slash p5.js I'm guessing I'm gonna find look at that this opensource project has an es lint RC file so I could say like you know what I want to adopt the same rules that p5 adopts and so I could look through here now however I should be able to run the lint a now here we go wait so let's run linting now here's the thing I actually this is real so annoying awkward that I have to do this all the time I'm gonna do it right now but I'm gonna show you another way to run the es lint that wow there's been no editing required in this this as long just my shoes untied alright so I'm gonna run the effluent now again whoa okay so this is really interesting I got a lot of errors points is assigned of value but never used setup is defined but never used create canvas is not defined angle mode is not to five degrees is not defined so wait a second this is nuts I mean yes you're right if I look at my code hmm there is a background translate rotate and it's saying those things are not defined but they are they're defined they're part of p5.js so one thing that I probably want to do here is tell es lint that I'm using the library p5.js and if you're if something in my code is not defined but it's defined at p5.js you don't have to give me a warning or error about that so let's look at how we do that in fact one way of doing this is using another node package p5 config config es lint so if I go now to here you'll see that there is this other node package called es lint config p5.js which allows me to put in my yes lint our C file that this that I extend I am I am also should look at all the stuff that's part of p5 Jaz so let's now install this dev dependency to the project computer way too fast again that was installed and then what I want to do is look at my es Lynch RC file is there already and extends in here yes extends yes Lindt recommended so let's see what else I want to extend extends p5 just now ah so if I want to extend a bunch of things looks like I can create an array this doesn't look right right there should be commas here I think this is probably incorrect we should submit a pull request to this project just to fix its documentation cuz I have a feeling what I need to do is turn this into an array and then so I'm going to now add also p5.js and let's just add I'm not using it but let's add p5.js Dom so you can see this should be how I can add other kind of lint configurations that I'm going to es link configurations that I'm going to import into my project so let's see now I should be able to say I'm going to run linting again I'll leave this here ah ok great so now you can see that got rid of all that now here's the thing points is assigned a value but never used line I line 9 let's look at line 9 what is that so I go back to my code line 9 oh look at that that's actually a totally legitimate thing that it found I I'm not using that array anywhere so that's good to know I'm gonna take this out and now I'm gonna run it again and I fixed that now ok great so um here's the thing I probably maybe I'll look into this in a future in a part two or something there's probably a nice way that I can create my own custom rule so that I'm set up and draw are allowed it does think that I'm maybe that should be saying it's actually added to p5 the p5.js configuration but in this case in this case it is it is kind of accurate that I've defined this function set up and it's never called the p5 the library itself is calling it set up it does actually is that in a way I almost want to say it almost forgive me an error like hey where's your set up function let's do some other stuff let's let's put in some weird spacing and see what it gives me let's forget some semicolons knocking oh I I have to do something so one thing that I have is that as soon as I hit command s it's going to reformat the code so I need to turn off my atom beautify package so I'm gonna go to preferences wait hold on pack it I'm gonna go to atom preferences and I'm going to go to packages I'm gonna go to beautify so again this is a really atom the text editor specific which is a little less relevant to this video because you might be using a different text editor but I'm gonna go to settings of atom beautify and I'm gonna go down to JavaScript and there's by the way I can I'm going to uncheck this beautify on save which is what I'm doing right here by the way I can add I can actually link the text editor with es lint so maybe I'll do that in a separate video just look at that but again that's atom atom editor specific so I unchecked that preference so now I should be able to hit whoops I should be able to hit save all right and all of the mistakes or style mistakes are so one thing just to see like I shouldn't I'm not broken the code the code still runs I have not broken the code I've only broken my style conventions and so now I'm gonna run it again and look at this oh look at this let's see if I can it's really bothering me that I'm not that this formatting oh no this is fine now okay I just want to be able to see this a bit better I'm gonna make this a bit bigger so it look a space is required after the comma yes yes it is there should be spaces inside this parentheses multiple spaces found before degrees so so this is wonderful and look at this it's saying potentially fixable with the dashed fix option so in theory I should be l2 now run this again with fix and it will actually fix some of those style errors so look at that it didn't find any errors anymore and if I go back to the code okay I'm upset didn't I got a let's run this again yeah so interestingly enough this is deeply deeply upsetting to me that there aren't two spaces here if I run my package at a beautify I will get those spaces back so that's something that I have to investigate and probably what I need to do is go look at the es lilin documentation whoops in the ESL in documentation go under and go under rules and look for a rule that I can add to make sure that is fixed now here's the thing most likely if I adopt one of these more popular JavaScript style guides it's gonna have more stuff in it that I might want and maybe I'll come back and try some of those in a separate video but I do want to mention one thing here this was kind of no fun what I did in the sense that know nothing about this is fun that I have to do this because I have es lint as a local a local a local module and so one thing I can add to my package JSON file and it's here under scripts so you could see like one of the things you might have if you watch my videos about unit testing I could say things like npm run test and what that will do is will run whatever commands i have that are mapped to test in scripts so i'm going to add one here called lint and i'm going to say whoops i'm going to go and grab this and then I'm also going to say star Jas so this would in theory lint any JavaScript file are in the projects in them in the main directory and there I think it might not hopefully it won't look for the at the library files which is something I definitely want to ignore but if I do this and save this now I can simply say NPM lit run lint and there we go now that didn't work why did that not work lint yes Lyn star Jas mmhmm oh no it worked it just like gave me some like weird error hold on I'm getting a message it's not from the patron group time out for a second let me look at the log anybody know what I'm doing wrong I just why do I have this no run no think so because run is saying run this script so this just needs to be lent you just look at this and p.m. oh I just say NPM lint why do I imagine I need to say run no I have to say run okay look at this again yes I wonder if it didn't like my star Jas drink water it is supposed to be like that es lilin returns arrow so npm errored oh oh thank you kenneth in the chat thank you ah okay so is there it's because the exit code is oh okay okay okay got it so this is actually correct is there something I want like should I be configuring things in a slightly different way or this is actually I want to see this because because if I was doing this with like some kind of like testing true so I actually want to see this if there are errors okay hey by the way this is I've literally never I've used linting in other people's projects I've never used it in my own project okay so 1115 already do Lindt J s hint or true mmm interesting you want to see this es Flint is Xing we wanted it okay okay I'm back thankfully I make these videos with a live chat of people who know more than I do about this and actually I want to see this because what happened is yes lint exited with an error code because there were errors and if I'm gonna run this automatically through some other process like its exit status is one because there was an error in that other process needs to get that report so if I integrate this with some kind of other unit testing system or continuous integration framework I'm a good what are these things you know check your videos are asking the comments this is something that I actually want to see so unfortunately without setting up a rule but I can just see just I can just for a moment just as a kind of like hack for a second is I'm gonna just comment out my setup and draw functions and I am going to run this again and we'll see oh boy comments should oh look at the crazy ah oh look at this and oh it's a terrible idea these variables are assigned but never used and comments should not begin with a lowercase character and you know what yes lit it knows me better than I know myself because I agree I do not want my comments to begin with a lowercase letter although I do want an exception to that if I'm commenting out a bit of code although I guess ultimately in a sort of more formal open source project maybe I don't want to submit a pull request or something with commented out code but again it's kind of okay for me while I'm experimenting of commenting code I'm certainly not going to like do this because that would ruin everything so I have to think about that I might want to disable that rule but you get the idea I'll delete it let's just delete everything hold on I'm gonna do command X and I'm gonna say console dot log I'm so stressed out right now yes perfect that my okay now how do I do that automatic clear again oh no I'll just type clear because that's how I that's how I do it okay nvm run lint here we go oh I expected console statement no I should not have consoles David strings must use double quotes okay I reject yes when I reject your configuration let's go let's go see this video is my way he's like I can't we blur to be like oh what's new from the coding train today Oh a video about linting wait why is it two and a half hours long got like crazy person made it let's look for quotes in here so oh I don't quotes quote quotes quotes alright double wait where there should be somewhere in here oh maybe because it's getting the I gotta end this video and learn about how this stuff works single double so I wonder if it's getting it from es Lynch recommended like I wonder if some of these rules are coming from es lint recommended command K thank you and so let's let's get rid of that just for a second strings let's use double quotes no alright but fine I'll fix it oh it couldn't fix it command K right yeah there we go it couldn't fix it so I will fix it myself this big lint itself by golly let's get rid of the fix let's make it much bigger so you can see by the way this stuff can be problematic and you really have to be thoughtful and careful about what makes sense for your project in your workflow and if you are making a creative art project and you spend all day during your linting file and you don't express yourself through your code maybe that's a problem but as you after a while at certain point after you've worked on a project and have a kind of a first version you might go back edit clean up the code add some style conventions if you're open sourcing it so other people can participate in it timeout for a second so I'm just want to see if I've missed anything anything super you have to put the quotes rule in an array with error and single okay how to configure atom in order for it to live linting yes there's a plugin that you could do that if you tried vs code alright so I think I'm going to end this to wrap this up did I did I have I done anything that once I release this as a standalone tutorial that people will be very unhappy with because I can come back I think I should do a part two I'm gonna I think I'll release this let it linger and I'll do a part two based on what people get tips and things people give me in the comments okay alright so that wraps up this video about linting thank you for watching it's probably the next day now a night time if you started this video in this date time it's been so long I will be doing a part two and I'm sure I've made a lot of mistakes and missed some things and I want to really sort of think about what kind of configuration rules I want to set up for my workflow and maybe experiment with integrating with Adam or trying other text editors so leave your notes and feedback in the comments I'm I'm gonna wait at least a week before I do the part 2 so I can compile a lot of feedback and comments and then come back and do a part two and hopefully integrate this also with unit testing ok thanks for watching all right do you have to I love I love The Cranberries I'm so sad sad for The Cranberries now listen to music of my high school days by the way you can you can figure out how old I am based on that and I can't do it zombie and okay so what is what times it is eleven twenty I think at this point if the junks was got it right at this point I need to move on to the neuro evolution stuff that I want to do and so let's check in and that's mostly gonna have to happen this afternoon so let me just talk about the schedule if you're watching I am here right now for another half an hour or so I'm going to be attending a wonderful presentation by the amazing Kate Compton who is giving a present here in ITP and doing some other stuff and some office hours and helping students and things like that and then I will be back I hope by at 300 p.m. Eastern which is which will be about three hours so will be about a three hour break after I stop and then I will be livestreaming again only for about an hour and a half because I have a very very special guest who is coming this evening a huge inspiration for me someone who is really anyway I'm just really excited about it if you want if you want to know more this is a reason to become a patron of the coding trade because I discuss in our slack community about guest tutorials and even sometimes do closed live streams of the recording sessions with the guests but this won't be live stream but it will be published and released next week so stay tuned about that so so that's coming so I want to work on the neuro evolution stuff I don't think an hour and a half this afternoon is realistic for me to finish it but let's at least check in and let's try to let get the flappy bird game in shape for that tutorial where am I let's go to desktop oh I didn't even clone it okay so let's come back to flappy bird clone I haven't been looking at my email or notifications or anything so I don't know what's going on here there's more pull requests let's quickly clone this so I'm cloning the repo which means I'm grabbing it from github and downloading it to my computer but it is linked because if I say git remote V oops I have to be in the directory and if I say git remote V you're gonna see that the this remote the URL on github is linked to the keyword origin love to come back about all this stuff more let's run a server and take a look at what it looks like right now and try to merge some of these pull requests so this is currently what it looks like you can see so the things that I want to add are this pipe spacing thing is totally broken and I want it to visually look nicer so let's take a look at some of these pull requests and see what's come in since okay so it looks like let's let's just go in reverse order fix pipe digest to use correct height and start coordinates I think this one let's just try resolving this ourselves so this is what you can see here that's happening is what happened is this particular pull request was submitted before another after another pull request that I merged converted this old constructor function syntax to es6 classes so this is what was this is what is in the this the es6 classes branch up here and this is what's in master and i want to pick which one I want and I want this because I want hits bird and but I want the fix which is maybe this boy I can't I'm trying to I'm looking at the code over here on my monitor and which what do I want here what's the mistake what's correct the fix let's hold on a sec I think that I can go here and I what I'm gonna do is look here under file change so ah ah the height minus this dot bottom was incorrect in hits function but in the draw in the draw function it should have height this bottom here and not here okay so let's try that so now that I see that this should help me figure out how to resolve these conflicts so what I want is this here to go here I think and that fixes the hits function and this got fixed anyway didn't have a problem figuring that out and I've lost somehow this so I think that I I think that I fixed the I think that I fixed this merge again we'll see so I'm now going to a mark as resolved commit this and I don't have any unit testing or any linting which I should add and then I'm gonna say I resolved the conflicts I resolve the conflicts manually and I'll just reference the commit and I on github actually even though this is the URL for that commit oh I just deleted part of masters code so I did it wrong I got a notification it was a little bit too late I'll fix it I just wanted the at least the correct I'll have to go back and fix it fix it it's fine let's keep going with what I'm doing here and then I'll go back and fix it so but unfortunately it was correct so one thing I can do now is I can go here and really I think this is right isn't it this is what it looks I'm checking the diff now isn't this what I wanted it to be the lines 15 and 16 aren't correct so let's go oh okay really let's go edit we can add another commit to this branch what's incorrect here is it should this should be height minus this dot bottom this is me like this is like the laziest live streaming everything like I couldn't figure this out or I could just wait for the chat cuz I really trust this dot highlight is no longer set in the constructor ah I deleted that thank you that's what was wrong okay so it should be false thank you for that and then what I'm gonna do here is I'm gonna go down and say correct mistake made when resolving conflict and this commit adds back in this dot actually you know what I think you by the way in the commit messages the the markup of doing things like this doesn't apply it doesn't render as far as I know this adds back in this highlight equals false which I deleted deleted by accident apologies to who is this who is this who's the original pole requester here are HBV and oops no no stay stay stay apologies to our HB v k leaf okay so I'm going to commit directly to this branch so that it's included as I merge the pull request and that should be good now the now the diff looks right I just got rid of that space that's still there and now I am going to go back to conversation and I'm gonna say oops I'm gonna say thank you and I'm going to merge the pull request and now we will let's let's grab those changes so those have come in here and let's take a look at it running again so that looks better running so slow it feels like it's running really slow in this computer okay all right so that that pull request is resolved all right so now let's look and see what else we got here great work in progress convert the project to yarn NPM and add linting testing that's wonderful I appreciate that let me just write a little note here thank you for this I'm going to hold off on adding adding this later as it is as it is not presently the focus of the tutorial and then reffering to reference sorry that you guys probably can't see a lot of this stuff I'm typing I'm gonna reference one two three reference referencing number three so I just want to like I want to link this to issue number three oops sorry that camera went off I want to link that to issue number three so that if anybody else comes who wants to submit a pull request for this idea they'll see that so I'm gonna say comment that okay great then I'm gonna go back and I'm gonna check out this train and background oh great alright now let's see what's going on here this this is great I guess there's the background this is the background that I want to include this uses the train image which is great uh one thing that I might suggest here I think I'll fix this myself is we could just use image mode center that would be so what I would normally do if I wasn't pressed for time as I might I might add a review and request I could say to use image mode Center but I think I might just correct some of these fix change that myself so let's this looks great so I've got so one thing that I might want to do is just check is just check that that this that this just check run this pull request now to make sure it like looks okay so what I'm going to do is I to do that oops I'm gonna say get remote and I really should make this into a tutorial you know we're gonna make this a tutorial about git remote alright okay all right here we go we're gonna we're gonna add a little tutorial this will go and get and github playlist yes yes yes images used elsewhere which would need to do the same calculation there okay so I might leave it you also you can just do get pull origin refs pull 15 head oh that is very confusing to me I don't even know so what I'm gonna do do you think it's a bad idea for me to demonstrate how to add a different remote and then like look at that branch I think I would like to do it my like a longer winded way just as for the sort of educational aspect but I'd be willing to told that like maybe I'm sending people in the wrong direction I don't have a lot of time here alright is anybody moderating the chat by the way seems to be some discussions that might need some moderation I can just do this myself I guess I won't I don't want to moderate the chat one that's really all right don't have anything discussing separate remote I don't think that I do Schiffman YouTube remote github branches cloning no I don't think I have a tutorial discussing remotes so let's do that oh whoops whoops okay all right all right I got to stop looking at the chat I'll move this over here hello this is another video which is a tutorial about working with git and github and in this tutorial i'm gonna talk about remotes so i I was I'm in the middle of live streaming and I'm working on this project that has to do with this flappy bird clone and I'm in a train and a bot using a genetic algorithm in a neural network to play flappy bird and I have a wonderful pull request from github user Keegan M who has added this particular image to be the flappy bird and this particular background to be the background of the flappy bird game and I really want to accept this pull request but what I want to do and I can examine it through the github interface I can see uh this was deleted and this was added because now it's gonna have an image and there's there's an icon variable which loads the image those are some things that those are some wonderful things like that that I want to accept but I don't have any unit testing and I um this isn't like hosted anywhere so I want to actually look at it locally on my computer to to run the code and sort of like see before I merge it and so there's a variety of ways that this can be done more efficiently than what I'm going to show you right now but this is a good excuse to talk about remotes so what is a remote so right now the my terminal window which I want to make a little bit bigger is in the directory of this project I'm on the desktop flappy bird clone if I say git remote that remote escape and V V for verbose like I want to know as much as possible output to be very verbose about the remote it's gonna say oh look you have a remote that is named origin that is tied to this URL and that makes sense that's my github URL coding train slash flappy bird clone that's the github repository and this remote was automatically created because at some point in time I said get clone and I put and I put this in so when I did this default remote was created so the remote being another location where this git repository exists now the word origin is kind of a default convention for the original remote but you know the sort of canonical remote being github in this case but it's just a madeup thing like I can say get room and I do this actually with a lot of projects I could say git remote delete I think origin nope get remote remove origin yes and now if I say git remote V there's no more remotes but I could say git remote add and instead of calling it origin why not call it github or unicorn I could call it anything I want let's call it github and then I can paste in flappy bird clone I'm just gonna grab this URL here and I can paste this in here and now I am adding this remote and I could say git remote B again and we can see there it is back but it's now called github so if I were it ever say get put pull origin master to grab some changes master by the way is this name of the like core branch is also just a completely madeup thing I could have source branch or release branch or development branch or experimental branch that's a separate video about branches that you could go and watch but if I say this it'll say ah origin doesn't appear to be positive because it's not there but I can now say git pull github master and there we go now I'm already up to date so I don't have to worry about it now here's the thing I want let's go back to this pull request which is once again from keegan m so where is keegan ends and we can see here ah keegan m graphics so keegan m made these code changes in a branch called graphics in their github repository so one thing i'm gonna do is i'm just gonna copy paste this right here is probably way i could link to it and i'm gonna go up to the URL and i'm gonna change coding trained to keegan m and I'm gonna get rid of the poor I just want to go over there and see that this is the Fork of the repository and so there we can see this is Keegan M's Fork we could see branch master we can see branch graphics I could start looking around now I'm going to do is I'm going to go to clone and I'm gonna grab this so I'm now going to grab Teagan ends a fork of my flappy bird clone I'm gonna grab that and I'm going to say git remote add Keegan I can make up anything here I'm just gonna say Keegan because I think I can remember that and I'm going to then paste in that particular URL for Keegan I'm now one thing you might notice I these URLs they get at github comm you might actually and this is because I have set up this very fancy way for my computer to be auto logged in using an SSH key in a passphrase but if you don't have that set up and I should do a video tutorial that explains how to do that you might want to use HTTPS this is also a way that you can this is just the sort of standard URL without having the sort of secret keys that log you in automatically but that's a little bit of an aside here I'm going to add this remote and now I'm gonna say git remote V and we can see look at this I have github remote which is tied to me coding train I have Keegan's remote which is tied to Keegan M which is kind of that get over puzzle kicking up now I'm gonna say there's a lot of different things that I can do but what I'm gonna do is I'm just gonna say get branch graphics I'm gonna make a branch locally called graphics and I'm gonna quickly go into that branch again you should probably watch my branches tutorial about how this works and I'm gonna go into that branch by using checkout then what I'm gonna do is I'm gonna say git pull and usually I've almost reflected Lee just get pull origin/master get Pro argent master git pull origin master git pull origin master git pull origin master but I don't want to pull from origin I want to pull from Keegan and I don't want to pull for a master I want to pull from graphics get pull Keegan graphics ah ooh interesting hmm so something has happened here in that I am now been launched into a text editor known as VI whoa this has been like way off the screen that's what's going on here that's crazy and so there's some sort of merging that needs to happen for Keegan M's branch graphics to come into my branch graphics because I actually have made some other changes it would have been nice if this didn't happen but this is actually quite normal this is a regular thing and I deal with this so what I would I what I want to do is say that I'm gonna say what do i type in VI so I think I'd say insert no I for insert I for insert so again you can link a different text editor to your get work on your computer but this is and so now but I've been launching this text editor in in man and I just want to say like I'm I'm making a tutorial video so I don't have a lot of time but this is here to merge Keegan's graphics with with some recent changes I made and and then I'm gonna say oops oh no I gotta get rid of insert escape maybe escape QW which I think will then quit and write this out I don't really know how to eat vim or whatever I know what to call it q w oh and I'm gonna just do that now not an editor command WQ write and then quit there we go and now it's fine it didn't commit it that's fine so now this is good I just really wanted to look at it all I want to do is look at it I don't need to commit this right now because I'm not really worrying about merging and so now I should if I come over here this is me like looking at my code in the browser before I checked out and pulled from that other remote and there we go look at this and now we have the coding train getting the flappy bird flappy coding train game with our little unicorn train and the scrolling background okay wonderful so this is good so now I feel I'd like oh this looks great I'm done so interestingly enough if I wanted to I could actually merge everything right now from the command line typically what I would do is I'm done I would just go back to here and I would say I go back to pull request whoops and I go back to code and train go back to pull request go back to Train and background version three and I would say all right Matt yeah unfortunately the trolls are out in full form today and we are going to have to we are going to have to edit this video first I am going to report no I don't feel a reason okay so I'm gonna be a little bit friendly today and I'm not going to report this but I will if it happens again I'm just going to delete the comments this one I'm kind of okay with because it's sort of friendly and funny but I think just for the purpose of the video I think I will remove it definitely won't report it because I you know and then I'm also going to I think I might just lock the comments for right now for a second I'm just gonna lock the conversation I'm just gonna say spam for a second I'm gonna lock the conversation this should allow me to still merge it okay so nobody can add any comments right now while I'm here okay so let's go back so normally I would just go to the pull request and I would scroll down here and I would just click on merge because and this would birds that pull grass in fact I've read a comment thank you so much I am going to merge merge this and what's wonderful about using github as a service which is very different than the get software itself the version control software is that it provides a visual interface to a lot of the common things that you might want to do like merging and looking at the differences between two files and that sort of thing but I think while I'm here if you can tolerate continue to watch this video however I am going to demonstrate demonstrate merging from the command line for fun so stay tuned I'm gonna add that comment it's interesting I lock them okay I'm gonna add that comment sorry I'm actually you're going to edit this also it's about to mention like oh it lets me add a comment even though I locked it but I don't need to say that in the edit version of this video okay they're really throwing me off alright so I added that comment and now I'm gonna return to the command line now I should say that I something about the way I really need to make a video about setting up terminal or whatever you use as your terminal application to work with get more effectively because there's no reason why I couldn't see things being syntax highlighted or showing me what branch I'm currently on and there's also like other terminal software like I term that I could use so I've got to come back for that but right now I'm just gonna say I got I got it I don't even remember where I am so I'm gonna say git status and I'm gonna say okay all conflicts fixed but you were still merging so I'm because I didn't actually ultimately commit that merge that I did so I'm gonna say git commit now here's the thing I have learned recently that you know you really that using em is not as thoughtful or so I'm gonna do a video about how do not use em and write more thoughtful longer commit messages but for lack of the time right now I'm just gonna say commit N and I'm going to say merging changes from and I'm gonna want to remember keygen em from keygen em okay I'm gonna do that so now I'm going to say get status again okay on branch graphics so now I'm gonna go to master and what I'm gonna do is I'm going to say git merge graphics and what that will do is we'll take the graphics branch and merge it into master it's exactly the same thing that would happen if I press this button here which would merge keegan m graphics into master i'm just gonna do that from the command line git merge graphics okay here we go I'm getting some good feedback in the chat other things to mention yeah okay it's merged and now I can say get status I'm gonna say get status again I type git status all the time I'm on branch master nothing to commit working directory clean let's say git fetch which is just gonna kind of like go to my origin remote and see oh no remote repository specified oh okay let's hold on let's just that doesn't need to be in this tutorial I don't need to talk about get fetch because I messed it up with get origin so let me just make it record scratch back back up alright so now let me put these changes back right there here on master but they are not here if I go here we'll see like what's the latest commit it's still something else that I was working on so I'm gonna now say git push I'm not gonna say origin I'm not gonna say weird you know not to say origin because I renamed it to github master and if I do that now I have sent that up I'm going to hit a refresh here and I'm going to see look all of those changes from keygen em are now here we can see they're here background version 3 this was me merging this would be correcting the mistake this was some other stuff some other stuff we can see all of that is here now the real question is if I going to pull requests look at this where is that polar quad it's not there anymore github was smart enough to realize that I merged this I merge this via the command line so the merge button is gone and it is now enclosed wonderful so hopefully you learn something a little bit about get remotes and about merging in this video tutorial thanks for watching and I will come back and make many more of these working with git and github opensource tutorial thingies thank you a lock and comment still lets collaborators comment which is fine with me you could also do git reset hard keygen / graphics to change to be on their branch without code from your master ok that's a good point all right you know cybernetic and the chat rightz get looks so scary I would be afraid I'd accidentally merge the completely wrong file yeah you know the thing is it is a little scary the one thing that's kind of nice about git is very hard to really delete everything break everything you know rebase is a command that sometimes you can run into you know scary things with but if you're just adding and committing and pushing and pulling you can get yourself into a hairy situation where it's like I need help but I need to go to stack overflow I need to ask a friends I'd like get me out of this but it's very very hard for you to by accident like actually lose something so I would say go for it and don't be afraid to ask for help and don't be afraid to just try and if you're really worried just you know always like copy a folder into another folder on your computer so you have a like a kind of backup of your code but just go for it and don't you know hopefully maintainer some open source projects are going to treat you with kindness and a welcoming attitude which I definitely try to do and I would never you know someone's gonna submit a pull request in a weird way that's kind of like not the right way that I want for the project I would kind of give them friendly feedback and help facilitate them resubmitting the pull request so ok so I let I've got to go but let's see if let's see if there's anything scores and proper spacing so here's the thing I don't know that I need the scores for what I'm gonna do I definitely want the image pipe and I definitely want proper spacing again I think it would be helpful to have each of these things in separate pull requests so but and also now there's I can look at the conflicts here yeah there's not really there's just some conflicts from the background stuff from the other one I probably could figure this out but I don't have time right now so doc gute if you want to resolve those conflicts we can I can take a look at merging this fix typo what's the typo oh the YouTube video is wrong thank you this is one I can this is one I feel like I could merge without kind of worrying about I can see right here like look it's just in a code comment it's just fixing that so I want to fix that then what's this added this dot size to bird digest and improve the code for keeping the bird in the screen so let's take a look at this height minus this dot this is great this makes sense yep this looks good I think I can conjure I mean you know again I should probably do some more testing or have unit tests or like check out the code it one thing you can actually do that's helpful is in the description here you know if you have this forked into your master you can enable github pages and then put a URL to the your version running and I could just click on that and test the code that way that's kind of a nice thing to do I'm gonna just merge this while we're here so I only have really this one outstanding pull request which has some conflicts and let's look at the fight let's look at the changes here just to see what's kind of going on okay this so this shouldn't mark this should this is this is a good change to fix the spacing I don't know about this greater than equals versus greater then I don't want an extra space here oh I love having a pipe image that's great figuring out how to make this better is great it looks like some of the indentation there's a little bit different here I'm not sure it pass is pipe body sprite that's awesome to have thank you for this oh and also changing that so let's um so uh dog food if you want to read submit a fix some of the stuff I'm sorry I'm sorry that this was so convoluted I'm kind of learning how to do this as well and so what I'm going to do is let's just do I have everything that whoops Oh get pull github master I'm kind of rushing now I am going to I want I just want to do some stuff into the code myself actually I kind of have to go so I'll here's some pull requests I would accept I would accept I feel like for one thing is this running slow and or is it just my computer so anything anybody can do to like figure out this should run a little faster ultimately I'm probably not gonna use this image because I'm gonna run like but so the pipes need to be redesigned unicorn horns was a nice idea but also the pipes from Goethe is perfect I think this this I don't know why I guess I made it like this to appear like a sort of like phone but just looking at this on the desktop I think this should have a aspect ratio that's wider than it is tall probably the the the pipes look very skinny I don't know if the collision detection is doesn't seem to really be working so any improvements that people want to make and I don't know how busy I do need scores to tell the neural network how well it's doing that's actually truth so that'll be the fitness function so actually having a score in there is something I do need that's correct so actually I do want that so dude is in the chat I'm fixing those things for the third time during the stream I'm so annoyed so I really have to apologize this is my fault that's on me that that that all this stuff is getting kind of convoluted so I really apologize and I really do appreciate your you or contribution this now actually has no conflicts so I think I will go ahead and merge it and I can always let me just quickly look here everything so there might be some style stuff or some other little things to fix but there are no major conflicts and I do have this nice game over a game over function showing the score so this is great so what I'm gonna do is I'm gonna merge this is it broken so I have to go to me I am see I don't know if you in the have a few minutes free bird died but if you could review have a couple minutes to review this the Anthony is a contributor to the website and has done work kind of maintaining and managing some of the code in the past I really appreciate their help so if you have a chance to look at this otherwise what I'm gonna do is while I'm in some of these presentations and and meetings I will take a look at that pull request it's great that it has no conflicts uhhuh and that gue writes I'm a chill so thank you for that but I really do I really do appreciate and I know that it can be frustrating when collaborating on an open source project to have lots of people contributing at the same time and have it not be clear what to do and that sort of thing so so wonderful okay I'm gonna go and hopefully we're gonna have this whipped into shape by I will should be back I'm hoping three hours from now if things go well I'll be back actually earlier than that the absolute earliest I'll be back I think is about 230 Eastern Time which is two and a half hours from now but so just stay tuned I'll at a time to the YouTube live page and I will see you all in a few hours if you choose to come back okay great thank me I am Sami has posted in the in the YouTube chat as well now I'm hoping that this chat is retained that YouTube has a new feature where the live chat now can be played back in the archive and for some reason it didn't work with last Friday's or sent a note to YouTube's support and I have enabled it in my like account but we'll see if it let me know if that's working or not working later today when the live chat the live stream is published okay everybody thanks for watching and I will be back for part two of today's livestream thank you
