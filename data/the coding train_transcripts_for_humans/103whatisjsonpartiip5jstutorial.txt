With timestamps:

00:00 - Hello.
00:01 - So I'm now in part
two of this discussion
00:04 - about working with JSON data.
00:06 - And in the previous video,
I looked at this thing
00:09 - that's wonderful in the
world, a sunflower--
00:10 - it's a beautiful flower--
00:12 - and how you might encapsulate
the idea of a sunflower
00:15 - as data in a JSON file.
00:17 - It was kind of a
reasonable demonstration
00:19 - for this first step
of working with data.
00:21 - But if you look at it,
it's really simple.
00:24 - It's a single object.
00:26 - It's got four properties in it.
00:27 - There's not a lot of complexity.
00:29 - Flower.name, Flower.r-- that's
all you had to worry about.
00:32 - But realistically, you're
going to find a dataset that's
00:35 - going to have a lot more in it.
00:37 - You might want to
have a dataset that
00:38 - has the high temperature
in Tokyo every day
00:42 - for the last year, and then
lots of other information
00:46 - about the weather that day.
00:48 - And there's going to be
a list and a whole bunch
00:50 - of nested objects.
00:50 - So what's the
scenario like that,
00:52 - and how do you deal with it?
00:53 - So the scenario that
I'm going to use,
00:55 - I think-- and I'll pull
it from this website
00:58 - that I mentioned that has
a whole lot of data sources
01:00 - in it that you can grab.
01:02 - Let's think about
birds for a second,
01:03 - another personal
favorite topic of mine,
01:05 - except that I'm not
going to be able to pull
01:08 - names of birds out of a hat.
01:10 - So first things first.
01:13 - If you go back to this, there's
just a single thing in there.
01:16 - I really should just keep
going with the flowers thing,
01:19 - but the example I have is birds.
01:20 - So what if your data
isn't a single object
01:24 - but actually is a
whole bunch of objects,
01:26 - like here are 10 images
from Google Image Charts,
01:29 - or here are 10 recent articles
from the New York Times?
01:32 - What if your data is
10 birds that live in--
01:36 - Antarctica?
01:36 - Is that what I have?
01:37 - I can't remember if that's
the data that I have.
01:39 - So the dataset-- again, a
JavaScript object generally
01:46 - always starts with a curly
bracket and a closed curly
01:49 - bracket to indicate
it's an object,
01:51 - but the data itself might
have an array in it.
01:55 - And that array might
be named birds.
02:03 - And each one of
those birds might
02:07 - be an object with a name,
penguin, and a height.
02:17 - I can't think of anything.
02:19 - Something-- size-- height.
02:23 - Let's just go with height.
02:25 - I don't know.
02:25 - How tall are penguins?
02:26 - They're small.
02:27 - 1 meter.
02:28 - And then that's an
object, and then
02:32 - the next thing in the array
is the name is an eagle.
02:38 - And these should be in quotes.
02:43 - And the height of an
eagle is 3 meters.
02:49 - Obviously, I don't know
anything about birds.
02:51 - Clearly we're finding out.
02:52 - So you can see how this now
has a bit more complexity
02:56 - than just the sunflower.
02:58 - Because what we have
here is an object
03:01 - that has a property
in it called birds.
03:04 - That property is an array.
03:06 - Each element of the
array is an object.
03:08 - So let's say, for
example, we loaded this
03:13 - into a variable called data.
03:16 - How would you get access
to the height of the eagle,
03:20 - for example?
03:24 - Data.birds would get me here.
03:30 - Now this is an array.
03:32 - This is element 0.
03:33 - This is element 1.
03:35 - So if it's an array,
I've got to say index 1.
03:38 - And so now I'm in
this object, and I
03:41 - want to get the height.height.
03:45 - So you can see I have to figure
out the path into this JSON
03:49 - file.
03:50 - I need to know the property
name that I'm looking for.
03:53 - And if that property
is an array,
03:54 - I need to know the index
that I'm looking for.
03:57 - And if that thing in
the array is an object,
03:59 - I need to know the
property of that
04:01 - object that I'm looking for.
04:02 - So this is just one scenario.
04:04 - I could probably like let this
camera record for the next 72
04:08 - hours and just making scenarios.
04:11 - We'd all become like insane in
our world of Jason scenarios.
04:15 - So this is the kind of thing you
really need to, unfortunately--
04:18 - or fortunately--
practice on your own
04:20 - as you start to find
different data sources.
04:22 - But let's do this
one step further.
04:24 - And I'm going to go pull an
actual dataset about birds,
04:28 - and then we'll double
back and do this again
04:29 - with that dataset.
04:30 - And there's also another
missing piece here.
04:32 - What if you wanted to actually
loop through and do something.
04:36 - If there were 100
birds in this file,
04:38 - how would I make this
index into the array
04:42 - some sort of
variable like i so I
04:44 - could say what's the
first bird, and then
04:45 - the second bird, and
then the third bird?
04:47 - So that's another aspect
of this that's important.
04:49 - OK.
04:50 - So let's go to the--
04:52 - the place where I'm
going to find a dataset,
04:55 - it's a GitHub repository.
04:57 - And I'm going to skip talking
about what GitHub or Git is,
05:00 - but you can find the URL.
05:02 - I'll definitely
post it somewhere.
05:03 - And if you want to pause
the video and look at it,
05:05 - it's right up here.
05:07 - Just /corpora is all you need.
05:08 - Whoops.
05:09 - I'm already there.
05:09 - So I want to go here.
05:10 - And I'm going to
click under Data,
05:12 - and I'm going to
look for animals.
05:15 - And I'm really--
which one was I doing?
05:18 - Birds of North America?
05:19 - Oh, no.
05:20 - Let's do the Antarctica,
birds of Antarctica.
05:23 - So you can see here
is the JSON file.
05:25 - Now let's make this--
05:26 - actually-- so let me--
05:27 - sorry.
05:28 - Let me do something
to copy it into P5.
05:33 - So I'm going to make a new
JSON file called birds.json.
05:38 - I'm going to paste it in here.
05:39 - I'm going to hit Save.
05:40 - I'm going to make
this a little bigger,
05:42 - and I'm going to
come look at it here.
05:44 - So here we have
this scenario now.
05:47 - And we have to do
some detective work.
05:49 - So let's come back over here.
05:50 - You're going to have to go
back and forth a little bit.
05:53 - This is no longer our JSON file.
05:56 - Our JSON file is actually--
06:00 - if you can look at it for
a second while I erase,
06:02 - it's that thing.
06:03 - Take a look at it.
06:04 - Does it make sense to you?
06:05 - What's the first property?
06:06 - Is the first property an array?
06:07 - No, it's not an array.
06:08 - Is it an array?
06:09 - I have to come
over here and look.
06:11 - The first property
is description.
06:13 - Description is just some text.
06:15 - The next property is source,
which is also some text.
06:18 - The next property is
birds, which is an array.
06:20 - Each element of the array is an
object that has two properties.
06:24 - One is family.
06:25 - One is members.
06:26 - And members is also an array.
06:27 - So you can see how
nested this can become.
06:29 - So let's say what I want to
do is-- and this is like--
06:33 - you wouldn't normally-- I
think is sort of arbitrary.
06:35 - You wouldn't necessary
want to do this.
06:36 - But just to make the case here,
I'm really interested in--
06:42 - I want to pull out
exactly the imperial shag.
06:45 - So how do I get to--
06:47 - actually, let me not
use that as an example.
06:52 - Let's look at the--
06:54 - I don't know how to pronounce
this-- the crozet shag.
06:56 - I kind of want to do
a Google Image search,
06:58 - see what that bird looks like.
06:59 - Oh, cormorants.
06:59 - I love cormorants.
07:00 - They're good.
07:01 - They fly just a
little bit over water.
07:02 - They're excellent.
07:03 - So how do I get to this
particular piece of data?
07:07 - OK.
07:07 - So let's say I have
an object called data.
07:10 - What's the first thing--
07:12 - this is embedded
in members, which
07:14 - is in this object, which is in
this other array called birds.
07:17 - So what I need to do
is say, data.birds.
07:25 - That's the first
thing I need to do.
07:27 - Come back over here.
07:29 - Now I'm in here.
07:30 - I'm at birds.
07:31 - This whole object is object 0.
07:34 - This second object is object 1.
07:36 - So I want to be in object 1.
07:41 - Now, what's the property
I want in object 1?
07:44 - Not family.
07:45 - I want members, so
object1.members,
07:50 - object1.members.
07:54 - Now, over here, 0, 1, 2.
07:59 - So that's also an array.
08:00 - And I want to look at the
crozet, or the crozet,
08:03 - or the crozet shag, which
is the third element,
08:07 - but index 2 in that array.
08:09 - So now over here, index 2.
08:12 - So again, searching through,
looking into a JSON file
08:16 - to pull out some
aspect of the data
08:18 - is all about knowing the path.
08:21 - What's the root element?
08:22 - You're going to need
the root element.
08:23 - What's the object inside of
that that you're looking at?
08:26 - Is that object an array?
08:27 - If it is, then what's the
element in that array?
08:31 - If that's an
object, then we want
08:32 - to get the property
of that object, which
08:34 - happens to be an array.
08:35 - So again, every scenario
is going to be different,
08:37 - but this is one scenario that's
a bit more complex than just
08:40 - that single sunflower example.
08:42 - So now let's actually display
this in our code to make sure--
08:46 - and I'm going to
close the flower one,
08:47 - and I'm going to say birds.
08:50 - I'm going to load
JSON file into here,
08:53 - and I'm just going
to say create p.
08:56 - Let's actually not
even use a canvas.
08:58 - Create p.
08:59 - If you haven't
watched the videos
09:01 - about how to make
dom elements, how
09:03 - to make paragraphs and links
and other things on the page,
09:06 - you can look at that.
09:07 - I'm going to say var
bird equals birds.
09:13 - Oh no, data-- oh, sorry.
09:14 - I want to make this
call this data.
09:16 - Because the first thing-- data--
09:18 - are you looking at that?
09:19 - data.birds-- what did I say--
09:23 - index 1 dot members index 2.
09:27 - Index 1 dot members index 2.
09:31 - And now create p that bird.
09:34 - And if we run this, we're
going to see-- look at that.
09:37 - There it is.
09:38 - That's the bird I'm
seeing on the screen.
09:40 - Now, again, this is
a trivial sort of--
09:42 - this is like I'm
proving that JSON works.
09:44 - There's data in there.
09:45 - It has a structure.
09:46 - That structure can be accessed.
09:48 - But most likely, what
you'd want to be doing
09:50 - is displaying everything
in the dataset,
09:52 - or creating some tool
where the user could
09:54 - search into the dataset.
09:55 - And ideally, that dataset might
have thousands of birds in it
09:58 - instead of just 10 or
however many are in there.
10:01 - So let's go a little bit deeper.
10:04 - I've had 10 minutes.
10:05 - If you're sticking with
me, I'm thankful, again,
10:08 - because I feel
like I'm talking--
10:10 - it's weird to do these
things by myself in this room
10:12 - even though at least
I have a window
10:14 - and I can see there's
people in the street.
10:15 - Hello out there.
10:16 - Hi.
10:17 - I'm making a video about JSON.
10:18 - Do you care?
10:20 - I wonder if there's somebody
watching on their phone.
10:22 - Maybe that would
be sort of strange.
10:23 - OK.
10:23 - Back to this thing.
10:25 - So what if what I wanted to do--
let's look at the data again.
10:28 - I haven't done any
singing yet, which
10:30 - I think I probably
should do to just make
10:31 - this video a little
more interesting.
10:33 - What if what I wanted
to do was display--
10:37 - I have an idea.
10:37 - I think I did this
as an example.
10:39 - What I want to do is
display the family of--
10:43 - I want to display all
the birds in this file,
10:45 - and I want to see the
family as a header.
10:48 - And then I want to see the list
of the birds underneath it,
10:51 - so a bigger text for the family
and smaller text for these.
10:54 - So let's just start with that.
10:58 - So the difference
here is instead
10:59 - of looking for a particular
item, what I want to do--
11:03 - and it might make
sense for me to say
11:06 - var birds equals data.birds.
11:09 - So I'm just going to pull
out that birds object
11:12 - in the file, which
is data.birds,
11:14 - and stick it in a variable,
because that's an array.
11:17 - And now I can say loop
through birds.length.
11:22 - And let's just start by
saying create element.
11:29 - And H1-- I can't spell--
11:31 - element H1-- what?
11:35 - Birds indexi.family.
11:38 - So I want birds index
0.family, then index 1.family.
11:41 - And then presumably, there's
more birds down here.
11:44 - So birds index i.family.
11:48 - So this now, you can see--
11:52 - whoops.
11:53 - And I don't need this anymore.
11:55 - Oh, wait.
11:56 - Where did I-- oh, yeah.
11:57 - Sorry.
11:57 - This is irrelevant.
11:59 - This was from my
previous example.
12:02 - You can see here this
is a way of now looping
12:04 - through the data.
12:05 - So you can see that
this particular loop
12:08 - is going through and
accessing every element
12:11 - of the array, birds, and
looking for the family.
12:15 - So these are just
the family names.
12:17 - But what I want
to do is actually
12:18 - look through all the
members of the family names.
12:21 - So inside that loop,
each and every bird,
12:24 - I need another loop to say
each and every member of each
12:27 - and every bird.
12:28 - So how do I do that?
12:30 - So first let me make a
variable called members,
12:33 - which is birds.members--
12:37 - members, birds.members.
12:39 - That's that array
and then this array.
12:43 - And so now what I want to do
is say for-- and I'll use j
12:47 - because I need a different
variable than i--
12:50 - members.length j++.
12:53 - And I'll just say create
div members index j.
13:00 - So first I want to get the--
13:04 - I have all these bird
objects, and I want
13:06 - to just see the family name.
13:08 - And then I want to
look at the members.
13:09 - But the members is
an array, so I need
13:11 - to loop through that array.
13:12 - And let's see if that works.
13:15 - Cannot find-- OK, so
what did I get wrong?
13:18 - I must have got
birds.members, var members.
13:22 - Let's look at this again.
13:24 - Birds-- ah, a-ha.
13:28 - It's not birds.members.
13:29 - It's what?
13:31 - Birds index i.members.
13:33 - Classic mistake.
13:35 - I'm looping through
an array called birds,
13:37 - and I want to get the members
of each element of the array.
13:41 - So I want to get the
members of element 0, then
13:43 - the members of element 1.
13:44 - That's what I did with family.
13:46 - So I need to have
index i.members.
13:49 - And now we can see here.
13:51 - Look.
13:51 - There are the albatrosses.
13:53 - There are the cormorants,
the diving petrels, the duck,
13:55 - geese, and swans, the
gulls, the penguins,
13:58 - lots of good penguins.
13:59 - This is a great dataset.
14:00 - You can see now I have
all of this data appearing
14:02 - on the page.
14:03 - Now, again, I
haven't done anything
14:04 - that I would say is
interesting with this data.
14:07 - But I'm showing you how
to navigate a JSON file.
14:10 - You might look for a
particular piece of data.
14:13 - You might iterate
over all the data.
14:15 - Certainly you could think about
how would you draw something
14:17 - based on the data,
like maybe you
14:19 - would draw circles tied
to the number of members
14:21 - of each family of birds.
14:23 - You could animate that.
14:24 - Could you have flying
birds on the screen, each
14:26 - with their names?
14:27 - I don't know.
14:27 - You could think of all
sorts of creative things
14:29 - you could do besides
just I'm just
14:30 - showing you-- let me
literally display exactly
14:33 - the data on the web page.
14:35 - So this, I think--
14:37 - I could keep going with this.
14:39 - In the end, you're going to
have a different dataset.
14:42 - It's going to look
different, and you're
14:43 - going to have your own
sets of how to navigate it.
14:46 - Hopefully this will
give you a sense.
14:47 - Practice this.
14:48 - So get a JSON file,
make it yourself,
14:50 - find [INAUDIBLE] online, load
it, put it in your P5 sketch,
14:54 - load it into a variable,
see if you can pull out
14:56 - a single piece of data, see if
you can pull out all the data.
14:58 - Can you get that to work?
15:00 - I encourage you to use this
Corpora repository which
15:03 - has a lot of goofy and
random sets of data in it.
15:07 - And hopefully that'll
get you started.
15:09 - But what I want to
do in the next video
15:11 - is look at how you might
pull this data from a URL.
15:15 - So what if you had a
www.something.com/something.json
15:21 - that you could pull rather
than just this local file
15:23 - that's typed in your project?
15:25 - The reason why that
could be useful
15:26 - is somebody else might prepare
a JSON file for you that's
15:29 - dynamic, that's
changing, and you
15:30 - could query it, which is
one step closer to this idea
15:34 - of an API, of using somebody
else's system that you're
15:39 - querying to get a certain
amount of JSON data back.
15:43 - So I feel like,
god, you must have--
15:46 - a lot of that must not
have made any sense,
15:47 - or you've probably
turned this off long ago.
15:50 - But if you're still watching--
15:52 - I don't know, say something
to me that you're watching.
15:55 - Never mind.
15:55 - Don't say-- I'm going
to edit that part out.
15:59 - I seem very, very needy today.
16:01 - Maybe I am.
16:02 - OK.
16:03 - I think that's--

Cleaned transcript:

Hello. So I'm now in part two of this discussion about working with JSON data. And in the previous video, I looked at this thing that's wonderful in the world, a sunflower it's a beautiful flower and how you might encapsulate the idea of a sunflower as data in a JSON file. It was kind of a reasonable demonstration for this first step of working with data. But if you look at it, it's really simple. It's a single object. It's got four properties in it. There's not a lot of complexity. Flower.name, Flower.r that's all you had to worry about. But realistically, you're going to find a dataset that's going to have a lot more in it. You might want to have a dataset that has the high temperature in Tokyo every day for the last year, and then lots of other information about the weather that day. And there's going to be a list and a whole bunch of nested objects. So what's the scenario like that, and how do you deal with it? So the scenario that I'm going to use, I think and I'll pull it from this website that I mentioned that has a whole lot of data sources in it that you can grab. Let's think about birds for a second, another personal favorite topic of mine, except that I'm not going to be able to pull names of birds out of a hat. So first things first. If you go back to this, there's just a single thing in there. I really should just keep going with the flowers thing, but the example I have is birds. So what if your data isn't a single object but actually is a whole bunch of objects, like here are 10 images from Google Image Charts, or here are 10 recent articles from the New York Times? What if your data is 10 birds that live in Antarctica? Is that what I have? I can't remember if that's the data that I have. So the dataset again, a JavaScript object generally always starts with a curly bracket and a closed curly bracket to indicate it's an object, but the data itself might have an array in it. And that array might be named birds. And each one of those birds might be an object with a name, penguin, and a height. I can't think of anything. Something size height. Let's just go with height. I don't know. How tall are penguins? They're small. 1 meter. And then that's an object, and then the next thing in the array is the name is an eagle. And these should be in quotes. And the height of an eagle is 3 meters. Obviously, I don't know anything about birds. Clearly we're finding out. So you can see how this now has a bit more complexity than just the sunflower. Because what we have here is an object that has a property in it called birds. That property is an array. Each element of the array is an object. So let's say, for example, we loaded this into a variable called data. How would you get access to the height of the eagle, for example? Data.birds would get me here. Now this is an array. This is element 0. This is element 1. So if it's an array, I've got to say index 1. And so now I'm in this object, and I want to get the height.height. So you can see I have to figure out the path into this JSON file. I need to know the property name that I'm looking for. And if that property is an array, I need to know the index that I'm looking for. And if that thing in the array is an object, I need to know the property of that object that I'm looking for. So this is just one scenario. I could probably like let this camera record for the next 72 hours and just making scenarios. We'd all become like insane in our world of Jason scenarios. So this is the kind of thing you really need to, unfortunately or fortunately practice on your own as you start to find different data sources. But let's do this one step further. And I'm going to go pull an actual dataset about birds, and then we'll double back and do this again with that dataset. And there's also another missing piece here. What if you wanted to actually loop through and do something. If there were 100 birds in this file, how would I make this index into the array some sort of variable like i so I could say what's the first bird, and then the second bird, and then the third bird? So that's another aspect of this that's important. OK. So let's go to the the place where I'm going to find a dataset, it's a GitHub repository. And I'm going to skip talking about what GitHub or Git is, but you can find the URL. I'll definitely post it somewhere. And if you want to pause the video and look at it, it's right up here. Just /corpora is all you need. Whoops. I'm already there. So I want to go here. And I'm going to click under Data, and I'm going to look for animals. And I'm really which one was I doing? Birds of North America? Oh, no. Let's do the Antarctica, birds of Antarctica. So you can see here is the JSON file. Now let's make this actually so let me sorry. Let me do something to copy it into P5. So I'm going to make a new JSON file called birds.json. I'm going to paste it in here. I'm going to hit Save. I'm going to make this a little bigger, and I'm going to come look at it here. So here we have this scenario now. And we have to do some detective work. So let's come back over here. You're going to have to go back and forth a little bit. This is no longer our JSON file. Our JSON file is actually if you can look at it for a second while I erase, it's that thing. Take a look at it. Does it make sense to you? What's the first property? Is the first property an array? No, it's not an array. Is it an array? I have to come over here and look. The first property is description. Description is just some text. The next property is source, which is also some text. The next property is birds, which is an array. Each element of the array is an object that has two properties. One is family. One is members. And members is also an array. So you can see how nested this can become. So let's say what I want to do is and this is like you wouldn't normally I think is sort of arbitrary. You wouldn't necessary want to do this. But just to make the case here, I'm really interested in I want to pull out exactly the imperial shag. So how do I get to actually, let me not use that as an example. Let's look at the I don't know how to pronounce this the crozet shag. I kind of want to do a Google Image search, see what that bird looks like. Oh, cormorants. I love cormorants. They're good. They fly just a little bit over water. They're excellent. So how do I get to this particular piece of data? OK. So let's say I have an object called data. What's the first thing this is embedded in members, which is in this object, which is in this other array called birds. So what I need to do is say, data.birds. That's the first thing I need to do. Come back over here. Now I'm in here. I'm at birds. This whole object is object 0. This second object is object 1. So I want to be in object 1. Now, what's the property I want in object 1? Not family. I want members, so object1.members, object1.members. Now, over here, 0, 1, 2. So that's also an array. And I want to look at the crozet, or the crozet, or the crozet shag, which is the third element, but index 2 in that array. So now over here, index 2. So again, searching through, looking into a JSON file to pull out some aspect of the data is all about knowing the path. What's the root element? You're going to need the root element. What's the object inside of that that you're looking at? Is that object an array? If it is, then what's the element in that array? If that's an object, then we want to get the property of that object, which happens to be an array. So again, every scenario is going to be different, but this is one scenario that's a bit more complex than just that single sunflower example. So now let's actually display this in our code to make sure and I'm going to close the flower one, and I'm going to say birds. I'm going to load JSON file into here, and I'm just going to say create p. Let's actually not even use a canvas. Create p. If you haven't watched the videos about how to make dom elements, how to make paragraphs and links and other things on the page, you can look at that. I'm going to say var bird equals birds. Oh no, data oh, sorry. I want to make this call this data. Because the first thing data are you looking at that? data.birds what did I say index 1 dot members index 2. Index 1 dot members index 2. And now create p that bird. And if we run this, we're going to see look at that. There it is. That's the bird I'm seeing on the screen. Now, again, this is a trivial sort of this is like I'm proving that JSON works. There's data in there. It has a structure. That structure can be accessed. But most likely, what you'd want to be doing is displaying everything in the dataset, or creating some tool where the user could search into the dataset. And ideally, that dataset might have thousands of birds in it instead of just 10 or however many are in there. So let's go a little bit deeper. I've had 10 minutes. If you're sticking with me, I'm thankful, again, because I feel like I'm talking it's weird to do these things by myself in this room even though at least I have a window and I can see there's people in the street. Hello out there. Hi. I'm making a video about JSON. Do you care? I wonder if there's somebody watching on their phone. Maybe that would be sort of strange. OK. Back to this thing. So what if what I wanted to do let's look at the data again. I haven't done any singing yet, which I think I probably should do to just make this video a little more interesting. What if what I wanted to do was display I have an idea. I think I did this as an example. What I want to do is display the family of I want to display all the birds in this file, and I want to see the family as a header. And then I want to see the list of the birds underneath it, so a bigger text for the family and smaller text for these. So let's just start with that. So the difference here is instead of looking for a particular item, what I want to do and it might make sense for me to say var birds equals data.birds. So I'm just going to pull out that birds object in the file, which is data.birds, and stick it in a variable, because that's an array. And now I can say loop through birds.length. And let's just start by saying create element. And H1 I can't spell element H1 what? Birds indexi.family. So I want birds index 0.family, then index 1.family. And then presumably, there's more birds down here. So birds index i.family. So this now, you can see whoops. And I don't need this anymore. Oh, wait. Where did I oh, yeah. Sorry. This is irrelevant. This was from my previous example. You can see here this is a way of now looping through the data. So you can see that this particular loop is going through and accessing every element of the array, birds, and looking for the family. So these are just the family names. But what I want to do is actually look through all the members of the family names. So inside that loop, each and every bird, I need another loop to say each and every member of each and every bird. So how do I do that? So first let me make a variable called members, which is birds.members members, birds.members. That's that array and then this array. And so now what I want to do is say for and I'll use j because I need a different variable than i members.length j++. And I'll just say create div members index j. So first I want to get the I have all these bird objects, and I want to just see the family name. And then I want to look at the members. But the members is an array, so I need to loop through that array. And let's see if that works. Cannot find OK, so what did I get wrong? I must have got birds.members, var members. Let's look at this again. Birds ah, aha. It's not birds.members. It's what? Birds index i.members. Classic mistake. I'm looping through an array called birds, and I want to get the members of each element of the array. So I want to get the members of element 0, then the members of element 1. That's what I did with family. So I need to have index i.members. And now we can see here. Look. There are the albatrosses. There are the cormorants, the diving petrels, the duck, geese, and swans, the gulls, the penguins, lots of good penguins. This is a great dataset. You can see now I have all of this data appearing on the page. Now, again, I haven't done anything that I would say is interesting with this data. But I'm showing you how to navigate a JSON file. You might look for a particular piece of data. You might iterate over all the data. Certainly you could think about how would you draw something based on the data, like maybe you would draw circles tied to the number of members of each family of birds. You could animate that. Could you have flying birds on the screen, each with their names? I don't know. You could think of all sorts of creative things you could do besides just I'm just showing you let me literally display exactly the data on the web page. So this, I think I could keep going with this. In the end, you're going to have a different dataset. It's going to look different, and you're going to have your own sets of how to navigate it. Hopefully this will give you a sense. Practice this. So get a JSON file, make it yourself, find [INAUDIBLE] online, load it, put it in your P5 sketch, load it into a variable, see if you can pull out a single piece of data, see if you can pull out all the data. Can you get that to work? I encourage you to use this Corpora repository which has a lot of goofy and random sets of data in it. And hopefully that'll get you started. But what I want to do in the next video is look at how you might pull this data from a URL. So what if you had a www.something.com/something.json that you could pull rather than just this local file that's typed in your project? The reason why that could be useful is somebody else might prepare a JSON file for you that's dynamic, that's changing, and you could query it, which is one step closer to this idea of an API, of using somebody else's system that you're querying to get a certain amount of JSON data back. So I feel like, god, you must have a lot of that must not have made any sense, or you've probably turned this off long ago. But if you're still watching I don't know, say something to me that you're watching. Never mind. Don't say I'm going to edit that part out. I seem very, very needy today. Maybe I am. OK. I think that's
